"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[4720],{38581:(e,t,a)=>{a.d(t,{aX:()=>Z});var r=a(68773),s=a(20102),n=a(92604),i=a(70586),o=a(17332),l=a(58901),u=a(73913),d=a(8744),p=a(40488),c=(a(66577),a(3172)),h=a(17452),f=a(33955);const y=n.Z.getLogger("esri.geometry.support.normalizeUtils");function m(e){return"polygon"===e[0].type}function g(e){return"polyline"===e[0].type}function w(e,t,a){if(t){const t=function(e,t){if(!(e instanceof l.Z||e instanceof o.Z)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw y.error(e),new s.Z(e)}const a=(0,u.x3)(e),r=[];for(const e of a){const a=[];r.push(a),a.push([e[0][0],e[0][1]]);for(let r=0;r<e.length-1;r++){const s=e[r][0],n=e[r][1],i=e[r+1][0],o=e[r+1][1],l=Math.sqrt((i-s)*(i-s)+(o-n)*(o-n)),u=(o-n)/l,d=(i-s)/l,p=l/t;if(p>1){for(let e=1;e<=p-1;e++){const r=e*t,i=d*r+s,o=u*r+n;a.push([i,o])}const e=(l+Math.floor(p-1)*t)/2,r=d*e+s,i=u*e+n;a.push([r,i])}a.push([i,o])}}return function(e){return"polygon"===e.type}(e)?new o.Z({rings:r,spatialReference:e.spatialReference}):new l.Z({paths:r,spatialReference:e.spatialReference})}(e,1e6);e=(0,p.Sx)(t,!0)}return a&&(e=(0,u.Sy)(e,a)),e}function b(e,t,a){if(Array.isArray(e)){const r=e[0];if(r>t){const a=(0,u.XZ)(r,t);e[0]=r+a*(-2*t)}else if(r<a){const t=(0,u.XZ)(r,a);e[0]=r+t*(-2*a)}}else{const r=e.x;if(r>t){const a=(0,u.XZ)(r,t);e=e.clone().offset(a*(-2*t),0)}else if(r<a){const t=(0,u.XZ)(r,a);e=e.clone().offset(t*(-2*a),0)}}return e}function F(e,t){let a=-1;for(let r=0;r<t.cutIndexes.length;r++){const s=t.cutIndexes[r],n=t.geometries[r],i=(0,u.x3)(n);for(let e=0;e<i.length;e++){const t=i[e];t.some((a=>{if(a[0]<180)return!0;{let a=0;for(let e=0;e<t.length;e++){const r=t[e][0];a=r>a?r:a}a=Number(a.toFixed(9));const r=-360*(0,u.XZ)(a,180);for(let a=0;a<t.length;a++){const t=n.getPoint(e,a);n.setPoint(e,a,t.clone().offset(r,0))}return!0}}))}if(s===a){if(m(e))for(const t of(0,u.x3)(n))e[s]=e[s].addRing(t);else if(g(e))for(const t of(0,u.x3)(n))e[s]=e[s].addPath(t)}else a=s,e[s]=n}return e}async function Z(e,t,a){var s;if(!Array.isArray(e))return Z([e],t);const n=null!=(s=null==t?void 0:t.url)?s:r.Z.geometryServiceUrl;let y,m,g,v,A,R,S,I,x=0;const $=[],E=[];for(const t of e)if((0,i.Wi)(t))E.push(t);else if(y||(y=t.spatialReference,m=(0,d.C5)(y),g=y.isWebMercator,R=g?102100:4326,v=u.UZ[R].maxX,A=u.UZ[R].minX,S=u.UZ[R].plus180Line,I=u.UZ[R].minus180Line),m)if("mesh"===t.type)E.push(t);else if("point"===t.type)E.push(b(t.clone(),v,A));else if("multipoint"===t.type){const e=t.clone();e.points=e.points.map((e=>b(e,v,A))),E.push(e)}else if("extent"===t.type){const e=t.clone()._normalize(!1,!1,m);E.push(e.rings?new o.Z(e):e)}else if(t.extent){const e=t.extent,a=(0,u.XZ)(e.xmin,A)*(2*v);let r=0===a?t.clone():(0,u.Sy)(t.clone(),a);e.offset(a,0),e.intersects(S)&&e.xmax!==v?(x=e.xmax>x?e.xmax:x,r=w(r,g),$.push(r),E.push("cut")):e.intersects(I)&&e.xmin!==A?(x=e.xmax*(2*v)>x?e.xmax*(2*v):x,r=w(r,g,360),$.push(r),E.push("cut")):E.push(r)}else E.push(t.clone());else E.push(t);let O=(0,u.XZ)(x,v),U=-90;const X=O,k=new l.Z;for(;O>0;){const e=360*O-180;k.addPath([[e,U],[e,-1*U]]),U*=-1,O--}if($.length>0&&X>0){const t=F($,await async function(e,t,a,r){const s="string"==typeof e?(0,h.mN)(e):e,n=t[0].spatialReference,i={...r,query:{...s.query,f:"json",sr:JSON.stringify(n),target:JSON.stringify({geometryType:(0,f.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(a)}},o=await(0,c.default)(s.path+"/cut",i),{cutIndexes:l,geometries:u=[]}=o.data;return{cutIndexes:l,geometries:u.map((e=>{const t=(0,f.im)(e);return t.spatialReference=n,t}))}}(n,$,k,a)),r=[],s=[];for(let a=0;a<E.length;a++){const n=E[a];if("cut"!==n)s.push(n);else{const n=t.shift(),o=e[a];(0,i.pC)(o)&&"polygon"===o.type&&o.rings&&o.rings.length>1&&n.rings.length>=o.rings.length?(r.push(n),s.push("simplify")):s.push(g?(0,p.$)(n):n)}}if(!r.length)return s;const o=await async function(e,t,a){const r="string"==typeof e?(0,h.mN)(e):e,s=t[0].spatialReference,n=(0,f.Ji)(t[0]),i={...a,query:{...r.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s),geometries:JSON.stringify((o=t,{geometryType:(0,f.Ji)(o[0]),geometries:o.map((e=>e.toJSON()))}))}};var o;return function(e,t,a){const r=(0,f.q9)(t);return e.map((e=>{const t=r.fromJSON(e);return t.spatialReference=a,t}))}((await(0,c.default)(r.path+"/simplify",i)).data,n,s)}(n,r,a),l=[];for(let e=0;e<s.length;e++){const t=s[e];"simplify"!==t?l.push(t):l.push(g?(0,p.$)(o.shift()):o.shift())}return l}const L=[];for(let e=0;e<E.length;e++){const t=E[e];if("cut"!==t)L.push(t);else{const e=$.shift();L.push(!0===g?(0,p.$)(e):e)}}return Promise.resolve(L)}},73913:(e,t,a)=>{a.d(t,{UZ:()=>i,x3:()=>u,XZ:()=>o,Sy:()=>l});var r=a(58901),s=a(82971),n=a(33955);const i={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new r.Z({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:s.Z.WebMercator}),minus180Line:new r.Z({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:s.Z.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new r.Z({paths:[[[180,-180],[180,180]]],spatialReference:s.Z.WGS84}),minus180Line:new r.Z({paths:[[[-180,-180],[-180,180]]],spatialReference:s.Z.WGS84})}};function o(e,t){return Math.ceil((e-t)/(2*t))}function l(e,t){const a=u(e);for(const e of a)for(const a of e)a[0]+=t;return e}function u(e){return(0,n.oU)(e)?e.rings:e.paths}},14720:(e,t,a)=>{a.r(t),a.d(t,{applyEdits:()=>d});var r=a(38171),s=a(81049),n=a(20102),i=a(22974),o=a(70586),l=a(17452),u=a(38581);async function d(e,t,a,r={}){let s,n;const o={edits:a,result:new Promise(((e,t)=>{s=e,n=t}))};e.emit("apply-edits",o);try{var l;const{results:n,edits:o}=await p(e,t,a,r),u=e=>e.filter((e=>!e.error)).map(i.d9),d={edits:o,addedFeatures:u(n.addFeatureResults),updatedFeatures:u(n.updateFeatureResults),deletedFeatures:u(n.deleteFeatureResults),addedAttachments:u(n.addAttachmentResults),updatedAttachments:u(n.updateAttachmentResults),deletedAttachments:u(n.deleteAttachmentResults)};return null!=(l=n.editedFeatureResults)&&l.length&&(d.editedFeatures=n.editedFeatureResults),(d.addedFeatures.length||d.updatedFeatures.length||d.deletedFeatures.length||d.addedAttachments.length||d.updatedAttachments.length||d.deletedAttachments.length)&&e.emit("edits",d),s(d),n}catch(e){throw n(e),e}}async function p(e,t,a,r){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))return Promise.reject(new n.Z(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e}));if(!e.editingEnabled)throw new n.Z(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:i,options:l}=await async function(e,t,a){const r=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),i=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments);if(!t||!r&&!i)throw new n.Z(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new n.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new n.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&i)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&i)throw new n.Z(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const l={...a};if(null!=l.rollbackOnFailureEnabled||e.capabilities.editing.supportsRollbackOnFailure||(l.rollbackOnFailureEnabled=!0),!1===l.rollbackOnFailureEnabled&&"original-and-current-features"===l.returnServiceEditsOption)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true.");if(!e.capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference&&l.returnServiceEditsInSourceSR)throw new n.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(l.returnServiceEditsInSourceSR&&"original-and-current-features"!==l.returnServiceEditsOption)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsOption' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const u={...t};if(u.addFeatures=t&&s.Z.isCollection(t.addFeatures)?t.addFeatures.toArray():u.addFeatures||[],u.updateFeatures=t&&s.Z.isCollection(t.updateFeatures)?t.updateFeatures.toArray():u.updateFeatures||[],u.deleteFeatures=t&&s.Z.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():u.deleteFeatures||[],u.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new n.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(u.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new n.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(u.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new n.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");u.addAttachments=u.addAttachments||[],u.updateAttachments=u.updateAttachments||[],u.deleteAttachments=u.deleteAttachments||[],u.addFeatures=u.addFeatures.map(y),u.updateFeatures=u.updateFeatures.map(y);const d=a&&a.globalIdUsed;return u.addFeatures.forEach((t=>function(e,t,a){c(e,t,a)}(t,e,d))),u.updateFeatures.forEach((t=>function(e,t,a){if(c(e,t,a),"geometry"in e&&(0,o.pC)(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new n.Z(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}(t,e,d))),u.deleteFeatures.forEach((t=>function(e,t,a){c(e,t,a)}(t,e,d))),u.addAttachments.forEach((t=>h(t,e))),u.updateAttachments.forEach((t=>h(t,e))),{edits:await f(u),options:l}}(e,a,r);return i.addFeatures.length||i.updateFeatures.length||i.deleteFeatures.length||i.addAttachments.length||i.updateAttachments.length||i.deleteAttachments.length?{edits:i,results:await t.applyEdits(i,l)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}function c(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new n.Z(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&(0,o.pC)(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new n.Z(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new n.Z(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function h(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&r.data.name||r.name))throw new n.Z(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&r.uploadId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=(0,l.sJ)(r.data);if(e&&!e.isBase64)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}async function f(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=await(0,u.aX)(r),n=t.length,i=a.length;return s.slice(0,n).forEach(((t,a)=>e.addFeatures[a].geometry=t)),s.slice(n,n+i).forEach(((t,a)=>e.updateFeatures[a].geometry=t)),e}function y(e){const t=new r.Z;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}}}]);