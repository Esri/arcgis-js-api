"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[8636],{98636:(e,r,t)=>{t.r(r),t.d(r,{default:()=>U});var i=t(43697),a=t(3172),s=t(20102),l=t(3920),o=t(70586),n=t(16453),p=t(95330),c=t(17452),u=t(5600),h=(t(67676),t(90578)),d=t(71715),y=t(52011),_=t(30556),v=t(82971),f=t(87085),m=t(54295),g=t(46486),b=t(7944),S=t(17287),C=t(71612),T=t(17017),w=t(38009),O=t(16859),R=t(34760),L=t(72965),M=t(10343),k=t(66677),B=t(21506),D=t(49867);const I=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let j=class extends((0,C.h)((0,M.x)((0,L.M)((0,w.q)((0,O.I)((0,g.Z)((0,b.O)((0,S.Y)((0,n.R)((0,l.p)((0,R.Q)((0,m.V)((0,T.N)(f.Z)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.r9).then((()=>this._fetchService(r)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo&&r.tileInfo.spatialReference)&&v.Z.fromJSON(e)}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),s=[],l={writeSublayerStructure:!1,...i};a.forEach((e=>{const r=e.write({},l);s.push(r)})),s.some((e=>Object.keys(e).length>1))&&(r.layers=s)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,c.mN)(e).path)):null}fetchTile(e,r,t,i={}){const{signal:s}=i,l=this.getTileUrl(e,r,t),o={responseType:"image",signal:s,query:{...this.refreshParameters}};return(0,a.default)(l,o).then((e=>e.data))}async fetchImageBitmapTile(e,r,t,i={}){const{signal:s}=i,l=this.getTileUrl(e,r,t),o={responseType:"blob",signal:s,query:{...this.refreshParameters}},n=await(0,a.default)(l,o);return createImageBitmap(n.data)}getTileUrl(e,r,t){const i=!this.tilemapCache&&this.supportsBlankTile,a=(0,c.B7)({...this.parsedUrl.query,blankTile:!i&&null,...this.customParameters,token:this.apiKey}),s=this.tileServers;return`${s&&s.length?s[r%s.length]:this.parsedUrl.path}/tile/${e}/${r}/${t}${a?"?"+a:""}`}_fetchService(e){return new Promise(((r,t)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new s.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new s.Z("tile-layer:undefined-url","layer's url is not defined");const i=(0,k.Qc)(this.parsedUrl.path);if((0,o.pC)(i)&&"ImageServer"===i.serverType)throw new s.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,a.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)})).then((r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,k.M8)(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!(0,k.B5)(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,a.default)(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new s.Z("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]}_getDefaultAttribution(e){if(!e)return;let r;e=e.toLowerCase();for(let t=0,i=I.length;t<i;t++)if(r=I[t],r.toLowerCase().includes(e))return(0,c.hF)("//static.arcgis.com/attribution/"+r)}_getDefaultTileServers(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,i._)([(0,u.Cb)({readOnly:!0})],j.prototype,"attributionDataUrl",null),(0,i._)([(0,u.Cb)({type:["show","hide","hide-children"]})],j.prototype,"listMode",void 0),(0,i._)([(0,u.Cb)({json:{read:!0,write:!0}})],j.prototype,"blendMode",void 0),(0,i._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],j.prototype,"isReference",void 0),(0,i._)([(0,u.Cb)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],j.prototype,"operationalLayerType",void 0),(0,i._)([(0,u.Cb)({type:Boolean})],j.prototype,"resampling",void 0),(0,i._)([(0,u.Cb)()],j.prototype,"sourceJSON",void 0),(0,i._)([(0,u.Cb)({type:v.Z})],j.prototype,"spatialReference",void 0),(0,i._)([(0,d.r)("spatialReference",["spatialReference","tileInfo"])],j.prototype,"readSpatialReference",null),(0,i._)([(0,u.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],j.prototype,"path",void 0),(0,i._)([(0,u.Cb)({readOnly:!0})],j.prototype,"sublayers",void 0),(0,i._)([(0,_.c)("sublayers",{layers:{type:[D.Z]}})],j.prototype,"writeSublayers",null),(0,i._)([(0,u.Cb)({json:{read:!1,write:!1}})],j.prototype,"popupEnabled",void 0),(0,i._)([(0,u.Cb)()],j.prototype,"tileServers",null),(0,i._)([(0,h.p)("tileServers")],j.prototype,"castTileServers",null),(0,i._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],j.prototype,"type",void 0),(0,i._)([(0,u.Cb)(B.HQ)],j.prototype,"url",void 0),j=(0,i._)([(0,y.j)("esri.layers.TileLayer")],j),j.prototype.fetchTile.__isDefault__=!0;const U=j},46486:(e,r,t)=>{t.d(r,{Z:()=>c});var i=t(43697),a=(t(66577),t(5600)),s=(t(67676),t(75215),t(71715)),l=t(52011),o=t(45322),n=t(56608),p=t(82971);const c=e=>{let r=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,r){return null!=r.minLOD&&null!=r.maxLOD?e:0}readMaxScale(e,r){return null!=r.minLOD&&null!=r.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,r){return r.capabilities&&r.capabilities.includes("Tilemap")?new n.y({layer:this}):null}};return(0,i._)([(0,a.Cb)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,i._)([(0,a.Cb)()],r.prototype,"minScale",void 0),(0,i._)([(0,s.r)("service","minScale")],r.prototype,"readMinScale",null),(0,i._)([(0,a.Cb)()],r.prototype,"maxScale",void 0),(0,i._)([(0,s.r)("service","maxScale")],r.prototype,"readMaxScale",null),(0,i._)([(0,a.Cb)({type:p.Z})],r.prototype,"spatialReference",void 0),(0,i._)([(0,a.Cb)({readOnly:!0})],r.prototype,"supportsBlankTile",null),(0,i._)([(0,a.Cb)(o.h)],r.prototype,"tileInfo",void 0),(0,i._)([(0,a.Cb)()],r.prototype,"tilemapCache",void 0),(0,i._)([(0,s.r)("service","tilemapCache",["capabilities"])],r.prototype,"readTilemapCache",null),(0,i._)([(0,a.Cb)()],r.prototype,"version",void 0),r=(0,i._)([(0,l.j)("esri.layers.mixins.ArcGISCachedService")],r),r}}}]);