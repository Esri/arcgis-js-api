"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[7055],{17055:(e,r,t)=>{t.r(r),t.d(r,{default:()=>S});var i=t(43697),s=t(5600),a=(t(80442),t(75215),t(92604),t(52525)),o=t(3172),n=t(28263),l=t(38581),u=t(5226),p=t(11282),c=(t(66577),t(38171)),y=t(10736),f=t(70586),d=t(71715),m=t(82971),B=t(80393),b=t(74889),g=t(79166),h=t(13473),C=t(58901),v=t(17332);function _(e){return b.default.fromJSON(e).features.map((e=>e.geometry))}let R=class extends y.wq{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return _(e)}readIncidents(e){return _(e)}readPointBarriers(e,r){return _(r.barriers)}readPolylineBarriers(e){return _(e)}readPolygonBarriers(e){return _(e)}readRoutes(e){return function(e){return e.features.map((r=>{const t=m.Z.fromJSON(e.spatialReference),i=c.Z.fromJSON(r);return(0,f.pC)(i.geometry)&&(i.geometry.spatialReference=t),i}))}(e)}};(0,i._)([(0,s.Cb)({type:[B.Z]})],R.prototype,"directions",void 0),(0,i._)([(0,s.Cb)({type:[h.Z]})],R.prototype,"facilities",void 0),(0,i._)([(0,d.r)("facilities")],R.prototype,"readFacilities",null),(0,i._)([(0,s.Cb)({type:[h.Z]})],R.prototype,"incidents",void 0),(0,i._)([(0,d.r)("incidents")],R.prototype,"readIncidents",null),(0,i._)([(0,s.Cb)({type:[g.Z]})],R.prototype,"messages",void 0),(0,i._)([(0,s.Cb)({type:[h.Z]})],R.prototype,"pointBarriers",void 0),(0,i._)([(0,d.r)("pointBarriers",["barriers"])],R.prototype,"readPointBarriers",null),(0,i._)([(0,s.Cb)({type:[C.Z]})],R.prototype,"polylineBarriers",void 0),(0,i._)([(0,d.r)("polylineBarriers")],R.prototype,"readPolylineBarriers",null),(0,i._)([(0,s.Cb)({type:[v.Z]})],R.prototype,"polygonBarriers",void 0),(0,i._)([(0,d.r)("polygonBarriers")],R.prototype,"readPolygonBarriers",null),(0,i._)([(0,s.Cb)({type:[c.Z]})],R.prototype,"routes",void 0),(0,i._)([(0,d.r)("routes")],R.prototype,"readRoutes",null),R=(0,i._)([(0,a.j)("esri.rest.support.ClosestFacilitySolveResult")],R);var Z=R;const P=(0,n.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});var A=t(59633);let N=class extends A.Z{constructor(e){super(e),this.url=null}solve(e,r){return async function(e,r,t){const i=[],s=[],a={},n={},c=(0,p.en)(e),{path:y}=c;r.incidents&&r.incidents.features&&(0,u.et)(r.incidents.features,s,"incidents.features",a),r.facilities&&r.facilities.features&&(0,u.et)(r.facilities.features,s,"facilities.features",a),r.pointBarriers&&r.pointBarriers.features&&(0,u.et)(r.pointBarriers.features,s,"pointBarriers.features",a),r.polylineBarriers&&r.polylineBarriers.features&&(0,u.et)(r.polylineBarriers.features,s,"polylineBarriers.features",a),r.polygonBarriers&&r.polygonBarriers.features&&(0,u.et)(r.polygonBarriers.features,s,"polygonBarriers.features",a);const f=await(0,l.aX)(s);for(const e in a){const r=a[e];i.push(e),n[e]=f.slice(r[0],r[1])}if((0,u.Wf)(n,i)){let e=null;try{e=await(0,u.bI)(y,r.apiKey,t)}catch{}e&&!e.hasZ&&(0,u.ef)(n,i)}for(const e in n)n[e].forEach(((t,i)=>{r.get(e)[i].geometry=t}));const d={...t,query:{...c.query,...P.toQueryParams(r),f:"json"}},{data:m}=await(0,o.default)(`${y}/solveClosestFacility`,d);return Z.fromJSON(m)}(this.url,e,r)}};(0,i._)([(0,s.Cb)()],N.prototype,"url",void 0),N=(0,i._)([(0,a.j)("esri.tasks.ClosestFacilityTask")],N);var S=N}}]);