self.webpackChunkRemoteClient([149],{441:function(e,t,n){"use strict";n.d(t,"a",(function(){return O})),n.d(t,"b",(function(){return I})),n.d(t,"c",(function(){return F}));var i=n(16),s=n(193),r=n(140);function o(e){const t=[];return e.forEach(e=>t.push(e)),t}const a={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function*u(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*l(e){if(!e)return null;switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function c(e){for(;;){const{value:t,done:n}=e.next();if(n)return!1;if(t.length>2)return!0}}function d(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n],s=e[(n+1)%e.length];t+=i[0]*s[1]-s[0]*i[1]}return t<=0}function y(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function f(e,t,n){switch(t.type){case"LineString":return function(e,t,n){return g(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const i of t.coordinates)g(e,i,n);return e}(e,t,n);case"MultiPoint":return function(e,t,n){return g(e,t.coordinates,n),e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const i of t.coordinates){p(e,i[0],n);for(let t=1;t<i.length;t++)h(e,i[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return b(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const i=t.coordinates;p(e,i[0],n);for(let t=1;t<i.length;t++)h(e,i[t],n);return e}(e,t,n)}}function p(e,t,n){const i=y(t);!function(e){return!d(e)}(i)?g(e,i,n):m(e,i,n)}function h(e,t,n){const i=y(t);!function(e){return d(e)}(i)?g(e,i,n):m(e,i,n)}function g(e,t,n){for(const i of t)b(e,i,n);e.lengths.push(t.length)}function m(e,t,n){for(let i=t.length-1;i>=0;i--)b(e,t[i],n);e.lengths.push(t.length)}function b(e,t,n){const[i,s,r]=t;e.coords.push(i,s),n.hasZ&&e.coords.push(r||0)}function j(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function F(e){if(!e)throw new i.a("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new i.a("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const n="string"==typeof t?t:"name"===t.type?t.properties.name:null,s=new RegExp(".*(CRS84H?|4326)$","i");if(!n||!s.test(n))throw new i.a("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function I(e,t={}){const n=u(e),i=[],s=new Set,r=new Set;let d,y=!1,f=Number.NEGATIVE_INFINITY,p=null,h=!1,{geometryType:g=null}=t,m=!1;for(;;){const{value:e,done:t}=n.next();if(t){const e=p&&1===p.length&&p[0]||null;if(e)for(const t of i)t.name===e&&(t.type="esriFieldTypeOID");return{fields:i,geometryType:g,hasZ:y,maxObjectId:Math.max(0,f),objectIdFieldName:e,objectIdFieldType:d,unknownFields:o(r)}}const{geometry:u,properties:b,id:F}=e;if((!u||(g||(g=a[u.type]),a[u.type]===g))&&(y||(y=c(l(u))),h||(h=null!=F,h&&(d=typeof F,"number"===d&&(p=Object.keys(b).filter(e=>b[e]===F)))),h&&"number"===d&&null!=F&&(f=Math.max(f,F),p.length>1?p=p.filter(e=>b[e]===F):1===p.length&&(p=b[p[0]]===F?p:[])),!m&&b)){let e=!0;for(const t in b){if(s.has(t))continue;const n=b[t];if(null==n){e=!1,r.add(t);continue}const o=j(n);"unknown"!==o?(r.delete(t),s.add(t),i.push({name:t,alias:t,type:o})):r.add(t)}m=e}}}function O(e,t){return function(e){const t=[];for(;;){const{value:n,done:i}=e.next();if(i)return t;t.push(n)}}(function*(e,t={}){const{geometryType:n,objectIdFieldName:i}=t;for(;;){const{value:o,done:u}=e.next();if(u)return;const{geometry:l,properties:c,id:d}=o;if(l&&a[l.type]!==n)continue;const y=c||{};i&&null!=d&&!y[i]&&(y[i]=d);const p=new s.a(l?f(new r.a,l,t):null,y);yield p}}(u(e),t))}},545:function(e,t,n){"use strict";n.r(t);var i=n(16),s=n(83),r=n(64),o=n(74),a=n(54),u=n(228),l=n(105),c=n(144),d=n(441),y=n(278),f=n(248),p=n(319),h=n(354),g=n(492);const m={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};t.default=class{constructor(){this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){const t=[];await this._checkProjection(e.spatialReference);let n=null;e.url&&(n=(await Object(a.default)(e.url,{responseType:"json"})).data,await Object(d.c)(n));const r=Object(d.b)(n,{geometryType:e.geometryType}),g=e.fields||r.fields||[],b=null!=e.hasZ?e.hasZ:r.hasZ,j=r.geometryType,F=e.objectIdField||("number"===r.objectIdFieldType?r.objectIdFieldName:"OBJECTID")||"OBJECTID",I=e.spatialReference||s.a;let O=e.timeInfo;if(!j)throw new i.a("geojson-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if("string"===r.objectIdFieldType&&t.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),g===r.fields&&r.unknownFields.length>0&&t.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:r.unknownFields}}),F){let e=null;g.some(t=>t.name===F&&(e=t,!0))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):g.unshift({alias:F,name:F,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const e of g){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new i.a("geojson-layer:invalid-field-name","field name is missing",{field:e});if(e.name===F&&(e.type="esriFieldTypeOID"),-1===u.a.jsonValues.indexOf(e.type))throw new i.a("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e})}const _={};this._requiredFields=[];for(const e of g)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=Object(o.i)(e);e.nullable||void 0!==t?_[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new c.a(g),O){if(O.startTimeField){const e=this._fieldsIndex.get(O.startTimeField);e?(O.startTimeField=e.name,e.type="esriFieldTypeDate"):O.startTimeField=null}if(O.endTimeField){const e=this._fieldsIndex.get(O.endTimeField);e?(O.endTimeField=e.name,e.type="esriFieldTypeDate"):O.endTimeField=null}if(O.trackIdField){const e=this._fieldsIndex.get(O.trackIdField);e?O.trackIdField=e.name:(O.trackIdField=null,t.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:O}}))}O.startTimeField||O.endTimeField||(t.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:O}}),O=null)}const E={warnings:t,featureErrors:[],layerDefinition:{...m,drawingInfo:Object(y.c)(j),templates:Object(y.b)(_),extent:null,geometryType:j,objectIdField:F,fields:g,hasZ:!!b,timeInfo:O}};this._queryEngine=new h.a({fields:g,geometryType:j,hasM:!1,hasZ:b,objectIdField:F,spatialReference:I,timeInfo:O,featureStore:new p.a({geometryType:j,hasM:!1,hasZ:b}),cacheSpatialQueries:!0}),this._createDefaultAttributes=Object(y.a)(_,F),this._nextObjectId=r.maxObjectId+1;const T=Object(d.a)(n,{geometryType:j,hasZ:b,objectIdFieldName:"number"===r.objectIdFieldType?F:null});if(!Object(s.c)(I,s.a))for(const e of T)e.geometry&&(e.geometry=Object(l.d)(Object(f.b)(Object(l.h)(e.geometry,j,b,!1),s.a,I)));return this._loadInitialFeatures(E,T),E}async applyEdits(e){const{spatialReference:t,geometryType:n}=this._queryEngine;return await Promise.all([Object(g.c)(t,n),Object(f.a)(e.adds,t),Object(f.a)(e.updates,t)]),this._applyEdits(e)}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_loadInitialFeatures(e,t){const{featureStore:n,objectIdField:i}=this._queryEngine,s=[];for(const n of t){const t=this._createDefaultAttributes(),r=Object(g.d)(this._fieldsIndex,this._requiredFields,t,n.attributes,!0,e.warnings);r?e.featureErrors.push(r):(this._assignObjectId(t,n.attributes,!0),n.attributes=t,n.objectId=t[i],s.push(n))}if(n.addMany(s),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:n}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}_applyEdits(e){const{adds:t,updates:n,deletes:i}=e,s={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(s,t),n&&n.length&&this._applyUpdateEdits(s,n),i&&i.length){for(const e of i)s.deleteResults.push(Object(g.b)(e));this._queryEngine.featureStore.removeManyById(i)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:s}}_applyAddEdits(e,t){const{addResults:n}=e,{geometryType:i,hasM:s,hasZ:o,objectIdField:a,spatialReference:u,featureStore:c}=this._queryEngine,d=[];for(const s of t){if(s.geometry&&i!==Object(r.c)(s.geometry)){n.push(Object(g.a)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),o=Object(g.d)(this._fieldsIndex,this._requiredFields,t,s.attributes);if(o)n.push(o);else{if(this._assignObjectId(t,s.attributes),s.attributes=t,null!=s.uid){const t=s.attributes[a];e.uidToObjectId[s.uid]=t}s.geometry&&(s.geometry=Object(f.b)(Object(g.e)(s.geometry,u),s.geometry.spatialReference,u)),d.push(s),n.push(Object(g.b)(s.attributes[a]))}}c.addMany(Object(l.c)([],d,i,o,s,a))}_applyUpdateEdits({updateResults:e},t){const{geometryType:n,hasM:i,hasZ:s,objectIdField:o,spatialReference:a,featureStore:u}=this._queryEngine;for(const c of t){const{attributes:t,geometry:d}=c,y=t&&t[o];if(null==y){e.push(Object(g.a)(`Identifier field ${o} missing`));continue}if(!u.has(y)){e.push(Object(g.a)(`Feature with object id ${y} missing`));continue}const p=Object(l.f)(u.getFeature(y),n,s,i);if(d){if(n!==Object(r.c)(d)){e.push(Object(g.a)("Incorrect geometry type."));continue}p.geometry=Object(f.b)(Object(g.e)(d,a),d.spatialReference,a)}if(t){const n=Object(g.d)(this._fieldsIndex,this._requiredFields,p.attributes,t);if(n){e.push(n);continue}}u.add(Object(l.a)(p,n,s,i,o)),e.push(Object(g.b)(y))}}_assignObjectId(e,t,n=!1){const i=this._queryEngine.objectIdField;n&&isFinite(t[i])?e[i]=t[i]:e[i]=this._nextObjectId++}async _checkProjection(e){try{await Object(f.a)(s.a,e)}catch{throw new i.a("geojson-layer","Projection not supported")}}}}});