(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[2390],{52390:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>H});var i=r(14983),s=r(78351),o=(r(72458),r(56043),r(51186),r(47500),r(93941),r(25330),r(41378),r(88696),r(39232)),a=r(93100),n=r(8811),l=r(45851),p=r(67380),d=r(38010),y=r(8764),u=r(99204),c=r(40668),h=r(84066),f=(r(77645),r(87435)),g=(r(38215),r(79159)),b=r(74184),m=r(13878),v=r(66684),I=r(80108),_=r(13917),w=r(12661),L=r(3956),C=r(11080),F=r(81422),S=r(75565),j=r(15774),E=r(9592),O=r(75661),T=r(50413),P=r(45787),x=r(63454),A=r(18710),D=r(22793),R=r(17374),Z=r(49298),U=r(42963);let q=class extends U.wq{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};(0,i._)([(0,h.Cb)({type:String,json:{read:!0,write:!0}})],q.prototype,"name",void 0),(0,i._)([(0,h.Cb)({type:String,json:{read:!0,write:!0}})],q.prototype,"field",void 0),(0,i._)([(0,h.Cb)({type:[Number],json:{read:!0,write:!0}})],q.prototype,"currentRangeExtent",void 0),(0,i._)([(0,h.Cb)({type:[Number],json:{read:!0,write:!0}})],q.prototype,"fullRangeExtent",void 0),(0,i._)([(0,h.Cb)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],q.prototype,"type",void 0),q=(0,i._)([(0,b.j)("esri.layers.support.RangeInfo")],q);const Q=q;var N=r(68812),k=r(4271),V=r(90625),G=r(20985);const W=["3DObject","Point"],K=l.Z.getLogger("esri.layers.SceneLayer"),M=(0,T.v)();let Y=class extends((0,C.V)((0,I.Y)((0,_.q)((0,w.I)((0,L.M)((0,d.R)((0,v.V)(m.Z)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var r,i,s,o;const a=null==(r=this.getFeatureType(null==t?void 0:t.feature))||null==(i=r.domains)?void 0:i[e];return a&&"inherited"!==a.type?a:null!=(s=null==(o=this.getField(e))?void 0:o.domain)?s:null}getFeatureType(e){return e&&(0,p.pC)(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.types:[]}get typeIdField(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new P.Z(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:A.U4.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return z[this.profile]||"mesh"}set renderer(e){(0,x.YN)(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=(0,p.pC)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:F.C,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:i,supportsUploadWithItemId:s,supportsReturnServiceEditsInSourceSpatialReference:o},data:{supportsZ:a,supportsM:n,isVersioned:l,supportsAttachment:d},operations:{supportsEditing:y,supportsUpdate:u,supportsQuery:c,supportsQueryAttachments:h}}=e,f=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:o,supportsRollbackOnFailure:i,supportsGeometryUpdate:!1,supportsUploadWithItemId:s},data:{supportsAttachment:d,supportsZ:a,supportsM:n,isVersioned:l},operations:{supportsQuery:c,supportsQueryAttachments:h,supportsEditing:y&&f,supportsAdd:!1,supportsDelete:!1,supportsUpdate:u&&f}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){null!=e?this._override("editingEnabled",e):this._clearOverride("editingEnabled")}get defaultPopupTemplate(){return(0,p.pC)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&$[r]?$[r]:(K.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=(0,p.pC)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(y.r9).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>(0,N.y)(this,{origin:"service"},t))).then((()=>(0,x.YN)(this.renderer,this.fieldsIndex))).then((()=>this.finishLoadEditablePortalLayer(e)));return this.addResolvingPromise(r),Promise.resolve(this)}createQuery(){const e=new k.Z;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(K.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return(0,V.eZ)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return(0,p.pC)(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),(0,p.Wi)(this.associatedLayer))throw new n.Z("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new n.Z("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new n.Z("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new n.Z("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=(0,u.v_)(this.parsedUrl.path,e.href);return(0,a.default)(r,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new n.Z("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const i=await r.e(9359).then(r.bind(r,89359));if(await this.load(),(0,p.Wi)(this.associatedLayer))throw new n.Z(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),i.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===W.indexOf(e.layerType))throw new n.Z("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new n.Z("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new n.Z("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const s=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=s;break;case"vertex-reference-frame":r=!0,i=!s;break;default:r=!1}}if(!r)throw new n.Z("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new n.Z("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new n.Z("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!((0,p.pC)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if((0,p.Wi)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if((0,p.Wi)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=(0,f.vw)(this);for(let r=0;r<e.length;r++){const i=e[r],s=this.originIdOf(i),o=this.associatedLayer.originIdOf(i);s<o&&(2===o||3===o)&&t.setAtOrigin(i,this.associatedLayer[i],o)}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new O.W(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(e){(0,y.D_)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){(0,c.tH)(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?K.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):K.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&K.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&K.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};(0,i._)([(0,h.Cb)({types:{key:"type",base:j.Z,typeMap:{selection:E.Z}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],Y.prototype,"featureReduction",void 0),(0,i._)([(0,h.Cb)({type:[Q],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],Y.prototype,"rangeInfos",void 0),(0,i._)([(0,h.Cb)({json:{read:!1}})],Y.prototype,"associatedLayer",void 0),(0,i._)([(0,h.Cb)({type:["show","hide"]})],Y.prototype,"listMode",void 0),(0,i._)([(0,h.Cb)({type:["ArcGISSceneServiceLayer"]})],Y.prototype,"operationalLayerType",void 0),(0,i._)([(0,h.Cb)({json:{read:!1},readOnly:!0})],Y.prototype,"type",void 0),(0,i._)([(0,h.Cb)({...M.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Y.prototype,"fields",void 0),(0,i._)([(0,h.Cb)()],Y.prototype,"types",null),(0,i._)([(0,h.Cb)()],Y.prototype,"typeIdField",null),(0,i._)([(0,h.Cb)()],Y.prototype,"formTemplate",null),(0,i._)([(0,h.Cb)({readOnly:!0})],Y.prototype,"fieldsIndex",null),(0,i._)([(0,h.Cb)({type:Z.Z,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],Y.prototype,"floorInfo",void 0),(0,i._)([(0,h.Cb)(M.outFields)],Y.prototype,"outFields",void 0),(0,i._)([(0,h.Cb)({type:A.U4,readOnly:!0,json:{read:!1}})],Y.prototype,"nodePages",void 0),(0,i._)([(0,g.r)("service","nodePages",["nodePages","pointNodePages"])],Y.prototype,"readNodePages",null),(0,i._)([(0,h.Cb)({type:[A.QI],readOnly:!0})],Y.prototype,"materialDefinitions",void 0),(0,i._)([(0,h.Cb)({type:[A.Yh],readOnly:!0})],Y.prototype,"textureSetDefinitions",void 0),(0,i._)([(0,h.Cb)({type:[A.H3],readOnly:!0})],Y.prototype,"geometryDefinitions",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],Y.prototype,"serviceUpdateTimeStamp",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],Y.prototype,"attributeStorageInfo",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],Y.prototype,"statisticsInfo",void 0),(0,i._)([(0,h.Cb)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Y.prototype,"definitionExpression",void 0),(0,i._)([(0,h.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Y.prototype,"path",void 0),(0,i._)([(0,h.Cb)(S.PV)],Y.prototype,"elevationInfo",null),(0,i._)([(0,h.Cb)({type:String})],Y.prototype,"geometryType",null),(0,i._)([(0,h.Cb)(S.iR)],Y.prototype,"labelsVisible",void 0),(0,i._)([(0,h.Cb)({type:[D.Z],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:R.r},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:R.r},write:!0}})],Y.prototype,"labelingInfo",void 0),(0,i._)([(0,h.Cb)(S.rn)],Y.prototype,"legendEnabled",void 0),(0,i._)([(0,h.Cb)({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var r,i;if("number"==typeof e&&e>=0&&e<=1)return e;const s=null==(r=t.layerDefinition)||null==(i=r.drawingInfo)?void 0:i.transparency;return void 0!==s?(0,G.b)(s):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],Y.prototype,"opacity",void 0),(0,i._)([(0,h.Cb)({types:o.o,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],Y.prototype,"renderer",null),(0,i._)([(0,h.Cb)({json:{read:!1}})],Y.prototype,"cachedDrawingInfo",void 0),(0,i._)([(0,g.r)("service","cachedDrawingInfo")],Y.prototype,"readCachedDrawingInfo",null),(0,i._)([(0,h.Cb)({readOnly:!0,json:{read:!1}})],Y.prototype,"capabilities",null),(0,i._)([(0,h.Cb)({type:Boolean,json:{read:!1}})],Y.prototype,"editingEnabled",null),(0,i._)([(0,h.Cb)(S.C_)],Y.prototype,"popupEnabled",void 0),(0,i._)([(0,h.Cb)({type:s.Z,json:{name:"popupInfo",write:!0}})],Y.prototype,"popupTemplate",void 0),(0,i._)([(0,h.Cb)({readOnly:!0,json:{read:!1}})],Y.prototype,"defaultPopupTemplate",null),(0,i._)([(0,h.Cb)({type:String,json:{read:!1}})],Y.prototype,"objectIdField",void 0),(0,i._)([(0,g.r)("service","objectIdField",["objectIdField","fields"])],Y.prototype,"readObjectIdField",null),(0,i._)([(0,h.Cb)({type:String,json:{read:!1}})],Y.prototype,"globalIdField",void 0),(0,i._)([(0,g.r)("service","globalIdField",["globalIdField","fields"])],Y.prototype,"readGlobalIdField",null),(0,i._)([(0,h.Cb)({readOnly:!0,type:String,json:{read:!1}})],Y.prototype,"displayField",null),(0,i._)([(0,h.Cb)({type:String,json:{read:!1}})],Y.prototype,"profile",void 0),(0,i._)([(0,g.r)("service","profile",["store.profile"])],Y.prototype,"readProfile",null),(0,i._)([(0,h.Cb)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],Y.prototype,"normalReferenceFrame",void 0),(0,i._)([(0,h.Cb)(S.YI)],Y.prototype,"screenSizePerspectiveEnabled",void 0),Y=(0,i._)([(0,b.j)("esri.layers.SceneLayer")],Y);const $={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},z={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},H=Y}}]);