"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[1637],{92835:(e,t,i)=>{i.d(t,{Z:()=>p});var r,n=i(43697),s=i(10736),a=i(70586),o=i(35463),l=i(5600),u=(i(80442),i(75215),i(92604),i(71715)),c=i(52525),h=i(30556);let f=r=class extends s.wq{constructor(e){super(e),this.end=null,this.start=null}static get allTime(){return d}static get empty(){return m}readEnd(e,t){return null!=t.end?new Date(t.end):null}writeEnd(e,t){t.end=e?e.getTime():null}get isAllTime(){return this.equals(r.allTime)}get isEmpty(){return this.equals(r.empty)}readStart(e,t){return null!=t.start?new Date(t.start):null}writeStart(e,t){t.start=e?e.getTime():null}clone(){return new r({end:this.end,start:this.start})}equals(e){if(!e)return!1;const t=(0,a.pC)(this.start)?this.start.getTime():this.start,i=(0,a.pC)(this.end)?this.end.getTime():this.end,r=(0,a.pC)(e.start)?e.start.getTime():e.start,n=(0,a.pC)(e.end)?e.end.getTime():e.end;return t===r&&i===n}expandTo(e){if(this.isEmpty||this.isAllTime)return this.clone();const t=(0,a.Po)(this.start,(t=>(0,o.JE)(t,e))),i=(0,a.Po)(this.end,(t=>(0,o.Nm)((0,o.JE)(t,e),1,e)));return new r({start:t,end:i})}intersection(e){if(!e)return this.clone();if(this.isEmpty||e.isEmpty)return r.empty;if(this.isAllTime)return e.clone();if(e.isAllTime)return this.clone();const t=(0,a.R2)(this.start,-1/0,(e=>e.getTime())),i=(0,a.R2)(this.end,1/0,(e=>e.getTime())),n=(0,a.R2)(e.start,-1/0,(e=>e.getTime())),s=(0,a.R2)(e.end,1/0,(e=>e.getTime()));let o,l;if(n>=t&&n<=i?o=n:t>=n&&t<=s&&(o=t),i>=n&&i<=s?l=i:s>=t&&s<=i&&(l=s),!isNaN(o)&&!isNaN(l)){const e=new r;return e.start=o===-1/0?null:new Date(o),e.end=l===1/0?null:new Date(l),e}return r.empty}offset(e,t){if(this.isEmpty||this.isAllTime)return this.clone();const i=new r,{start:n,end:s}=this;return(0,a.pC)(n)&&(i.start=(0,o.Nm)(n,e,t)),(0,a.pC)(s)&&(i.end=(0,o.Nm)(s,e,t)),i}union(e){if(!e||e.isEmpty)return this.clone();if(this.isEmpty)return e.clone();if(this.isAllTime||e.isAllTime)return d.clone();const t=(0,a.pC)(this.start)&&(0,a.pC)(e.start)?new Date(Math.min(this.start.getTime(),e.start.getTime())):null,i=(0,a.pC)(this.end)&&(0,a.pC)(e.end)?new Date(Math.max(this.end.getTime(),e.end.getTime())):null;return new r({start:t,end:i})}};(0,n._)([(0,l.Cb)({type:Date,json:{write:{allowNull:!0}}})],f.prototype,"end",void 0),(0,n._)([(0,u.r)("end")],f.prototype,"readEnd",null),(0,n._)([(0,h.c)("end")],f.prototype,"writeEnd",null),(0,n._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],f.prototype,"isAllTime",null),(0,n._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],f.prototype,"isEmpty",null),(0,n._)([(0,l.Cb)({type:Date,json:{write:{allowNull:!0}}})],f.prototype,"start",void 0),(0,n._)([(0,u.r)("start")],f.prototype,"readStart",null),(0,n._)([(0,h.c)("start")],f.prototype,"writeStart",null),f=r=(0,n._)([(0,c.j)("esri.TimeExtent")],f);const d=new f,m=new f({start:void 0,end:void 0});var p=f},13867:(e,t,i)=>{i.d(t,{Z:()=>n});var r=i(69801);class n{constructor(e,t){this._storage=new r.WJ,this._storage.maxSize=e,t&&this._storage.registerRemoveFunc("",t)}put(e,t,i){this._storage.put(e,t,i,1)}pop(e){return this._storage.pop(e)}get(e){return this._storage.get(e)}clear(){this._storage.clearAll()}destroy(){this._storage.destroy()}get maxSize(){return this._storage.maxSize}set maxSize(e){this._storage.maxSize=e}}},35463:(e,t,i)=>{i.d(t,{rJ:()=>o,Nm:()=>s,JE:()=>a}),i(80442);const r={milliseconds:1,seconds:1e3,minutes:6e4,hours:36e5,days:864e5,weeks:6048e5,months:26784e5,years:31536e6,decades:31536e7,centuries:31536e8},n={milliseconds:{getter:"getMilliseconds",setter:"setMilliseconds",multiplier:1},seconds:{getter:"getSeconds",setter:"setSeconds",multiplier:1},minutes:{getter:"getMinutes",setter:"setMinutes",multiplier:1},hours:{getter:"getHours",setter:"setHours",multiplier:1},days:{getter:"getDate",setter:"setDate",multiplier:1},weeks:{getter:"getDate",setter:"setDate",multiplier:7},months:{getter:"getMonth",setter:"setMonth",multiplier:1},years:{getter:"getFullYear",setter:"setFullYear",multiplier:1},decades:{getter:"getFullYear",setter:"setFullYear",multiplier:10},centuries:{getter:"getFullYear",setter:"setFullYear",multiplier:100}};function s(e,t,i){const r=new Date(e.getTime());if(t&&i){const e=n[i],{getter:s,setter:a,multiplier:o}=e;r[a](r[s]()+t*o)}return r}function a(e,t){switch(t){case"milliseconds":return new Date(e.getTime());case"seconds":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds());case"minutes":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes());case"hours":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours());case"days":return new Date(e.getFullYear(),e.getMonth(),e.getDate());case"weeks":return new Date(e.getFullYear(),e.getMonth(),e.getDate()-e.getDay());case"months":return new Date(e.getFullYear(),e.getMonth(),1);case"years":return new Date(e.getFullYear(),0,1);case"decades":return new Date(e.getFullYear()-e.getFullYear()%10,0,1);case"centuries":return new Date(e.getFullYear()-e.getFullYear()%100,0,1);default:return new Date}}function o(e,t,i){return 0===e?0:e*r[t]/r[i]}},91384:(e,t,i)=>{i.r(t),i.d(t,{default:()=>wt});var r=i(43697),n=i(51773),s=i(30030),a=i(20102),o=i(70586),l=i(16453),u=i(95330),c=i(5600),h=(i(80442),i(75215)),f=i(92604),d=i(36030),m=i(71715),p=i(52525),y=i(29600),g=i(78096),x=i(17017),w=(i(66577),i(3172)),v=i(44422),b=i(8744),I=i(66677),C=i(21506),_=i(35956),T=i(88281),R=i(11145),S=i(80676),M=i(77982),k=i(91219),F=i(6570),P=i(82971);const D=f.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),O=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",(0,I.Nm)(e,D))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,o.Wi)(e))return null;const i=this._rasterJobHandler.instance,r=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:r},t):(0,S.KC)(e,r)}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,M.ol)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!((0,o.pC)(i)&&i.pixels&&i.pixels.length>0))return null;let r;await this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:s}=this;return r=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const r=(0,b.C5)(e);return R.Z.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,r={}){if(r.requestAsImageElement){const n=this.getTileUrl(e,t,i);return(0,w.default)(n,{responseType:"image",query:{sliceId:this._sliceId,...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:r.signal}).then((e=>e.data))}await this._initJobHandler();const n="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:n,...r}}return this.raster.fetchTile(e,t,i,r)}async fetchPixels(e,t,i,r){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...r}}return this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!(0,o.pC)(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new T.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,M.In)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if((0,o.pC)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new _.Z({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;this.bandIds||(this.bandIds=(0,M.YD)(e)),this.renderer||(this.renderer=(0,M.Ob)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=(0,M.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new k.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||D.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return(0,r._)([(0,c.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"_sliceId",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"bandIds",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"copyright",void 0),(0,r._)([(0,c.Cb)({type:F.Z}),(0,v.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"interpolation",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"ioConfig",void 0),(0,r._)([(0,c.Cb)({type:[_.Z]})],t.prototype,"multidimensionalDefinition",null),(0,r._)([(0,c.Cb)()],t.prototype,"raster",void 0),(0,r._)([(0,c.Cb)({readOnly:!0}),(0,v.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,c.Cb)({type:P.Z}),(0,v.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,r._)([(0,c.Cb)({type:R.Z}),(0,v.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,r._)([(0,c.Cb)(C.HQ)],t.prototype,"url",null),(0,r._)([(0,c.Cb)({types:s.dr})],t.prototype,"renderer",null),(0,r._)([(0,c.Cb)()],t.prototype,"symbolizer",void 0),t=(0,r._)([(0,p.j)("esri.layers.ImageryTileMixin")],t),t};var B=i(38009),z=i(16859),N=i(34760),E=i(72965),Z=i(1231),A=i(69608),H=i(48526),L=i(36679),J=i(10736),W=i(609),j=i(67900),q=i(42894),G=i(40488),U=i(13473);const Y=5e-4,V=function(e,t){const i=(e.isWGS84||e.isWebMercator)&&(t.isWGS84||t.isWebMercator);return!(e.equals(t)||i)},$={3395:20037508.342789244,3410:17334193.943686873,3832:3339584.723798206,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,8858:7396237.374497803,8859:2465412.4581659334,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53025:7276828.3848298555,53031:10384677.558821043,53034:20015086.79602057,53036:7389443.187332862,53037:2463147.729110953,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54025:7311399.09166516,54031:10396310.810074743,54034:20037508.342789244,54050:808820.9223376509,54053:1920897.3915568967,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244,102038:4297258.582585486,102299:5013965.117483125};function X(e,t,i,r=null){if(e.spatialReference.equals(t))return e;const n=V(e.spatialReference,t);if(n&&!(0,q.kR)())throw new a.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");const s=i.center,l=new F.Z({xmin:s.x-e.x/2,xmax:s.x+e.x/2,ymin:s.y-e.y/2,ymax:s.y+e.y/2,spatialReference:e.spatialReference}),u=n?(0,q.iV)(l,t,r):(0,G.iV)(l,t);return(0,o.Wi)(u)?null:{x:u.xmax-u.xmin,y:u.ymax-u.ymin}}function K(e,t=.01){return(0,j.c9)(e)?t/(0,j.c9)(e):0}function Q(e,t,i=null,r=!0){const n=e.spatialReference;if(n.equals(t))return e;let s=(0,G.iV)(e,t);if((0,o.Wi)(s)){if(!(0,q.kR)())throw new a.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");s=(0,q.iV)(e,t,i)}if(r&&t.isGeographic){const[t,i]=ne(n,!0),r=K(n);r&&null!=t&&null!=i&&(Math.abs(e.x-t)<r&&Math.abs(180-s.x)<Y?s.x-=360:Math.abs(e.x-i)<r&&Math.abs(180+s.x)<Y&&(s.x+=360))}return s}function ee(e){const t=re(e[0].spatialReference);if(e.length<2||!(0,o.pC)(t))return e[0];let{xmin:i,xmax:r,ymin:n,ymax:s}=e[0];for(let i=1;i<e.length;i++){const a=e[i];r=a.xmax+t*i,n=Math.min(n,a.ymin),s=Math.max(s,a.ymax)}return new F.Z({xmin:i,xmax:r,ymin:n,ymax:s,spatialReference:e[0].spatialReference})}function te(e,t,i=null,r=!0){if(e.spatialReference.equals(t))return e;const n=ae(e),s=re(e.spatialReference,!0);return(0,o.pC)(s)&&0!==n?ee(e.clone().normalize().map((e=>ie(e,t,i,r)))):ie(e,t,i,r)}function ie(e,t,i=null,r=!0){const n=e.spatialReference;if(n.equals(t))return e;if(V(n,t)&&!(0,q.kR)())throw new a.Z("rasterprojectionhelper-projectExtent","projection engine is not loaded");let s=(0,G.iV)(e,t);(0,o.Wi)(s)&&(s=(0,q.iV)(e,t,i));let[l,u]=ne(n,!0);if(s&&r&&n.isWebMercator&&t.isGeographic&&null!=l&&null!=u){const r=.001,a=1e3;if(Math.abs(e.xmin-l)<r&&Math.abs(u-e.xmax)>a&&Math.abs(180-s.xmax)<Y){s.xmin=-180;const r=[];r.push(new U.Z(e.xmax,e.ymin,n)),r.push(new U.Z(e.xmax,(e.ymin+e.ymax)/2,n)),r.push(new U.Z(e.xmax,e.ymax,n));const a=r.map((e=>Q(e,t,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));s.xmax=Math.max.apply(null,a)}if(Math.abs(e.xmax-u)<r&&Math.abs(l-e.xmin)>a&&Math.abs(180+s.xmin)<Y){s.xmax=180;const r=[];r.push(new U.Z(e.xmin,e.ymin,n)),r.push(new U.Z(e.xmin,(e.ymin+e.ymax)/2,n)),r.push(new U.Z(e.xmin,e.ymax,n));const a=r.map((e=>Q(e,t,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));s.xmin=Math.min.apply(null,a)}}[l,u]=ne(t,!0);const c=K(t);return c&&null!=l&&null!=u&&(Math.abs(s.xmin-l)<c&&(s.xmin=l),Math.abs(s.xmax-u)<c&&(s.xmax=u)),s}function re(e,t=!1){const i=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*i:e.wkid&&e.isGeographic?360:2*$[e.wkid]||null}function ne(e,t=!1){const i=[],r=re(e,t);return(0,o.pC)(r)&&(i.push(-r/2),i.push(r/2)),i}function se(e,t,i,r){let n=(e-t)/i;return n-Math.floor(n)!=0?n=Math.floor(n):r&&(n-=1),n}function ae(e,t=!1){const i=re(e.spatialReference);if(!(0,o.pC)(i))return 0;const r=t?0:-i/2;return se(e.xmax,r,i,!0)-se(e.xmin,r,i,!1)}function oe(e,t,i,r=null,n=null,s=!1,l=[32,32]){if(V(e.spatialReference,t.spatialReference)&&!(0,q.kR)())throw new a.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(e&&t&&i))return null;const{xmin:u,ymin:c,xmax:h,ymax:f}=e,d=e.spatialReference,m=t.spatialReference,p=re(m);s=s||"gcs-shift"===(null==n?void 0:n.type);const y={x:l[0]*i.x,y:l[1]*i.y},g={cols:Math.ceil((h-u)/y.x-.1/l[0])+1,rows:Math.ceil((f-c)/y.y-.1/l[1])+1},x=y.x,w=y.y,v=[];let b,I=!1;for(let e=0;e<g.cols;e++){const i=[];for(let a=0;a<g.rows;a++){let l=Q(new U.Z({x:u+x*e,y:f-w*a,spatialReference:d}),m,r);n&&(l=n.inverseTransform(l)),i.push(l),e>0&&s&&l&&b[a]&&(0,o.pC)(p)&&l.x<b[a].x&&(l.x+=p),l?(v.push((l.x-t.xmin)/(t.xmax-t.xmin)),v.push((t.ymax-l.y)/(t.ymax-t.ymin))):(v.push(NaN),v.push(NaN),I=!0)}b=i}const C=function(e,t){const i=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,r=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4;return[Math.abs(i-e[2*t.rows+2]),Math.abs(r-e[2*t.rows+3])]}(v,g),_=new Float32Array((g.cols-1)*(g.rows-1)*2*6),T=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),R=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let e=0;e<g.cols-1;e++){for(let t=0;t<g.rows-1;t++){let i=e*g.rows*2+2*t;const r=v[i],n=v[i+1],s=v[i+2],a=v[i+3];i+=2*g.rows;const o=v[i],l=v[i+1],u=v[i+2],c=v[i+3];let h=0,f=12*(t*(g.cols-1)+e);for(let e=0;e<3;e++)_[f++]=T[h++]*r+T[h++]*s+T[h++]*u;h=0;for(let e=0;e<3;e++)_[f++]=T[h++]*n+T[h++]*a+T[h++]*c;h=0;for(let e=0;e<3;e++)_[f++]=R[h++]*r+R[h++]*o+R[h++]*u;h=0;for(let e=0;e<3;e++)_[f++]=R[h++]*n+R[h++]*l+R[h++]*c}if(I)for(let e=0;e<_.length;e++)isNaN(_[e])&&(_[e]=-1)}return{offsets:v,error:C,coefficients:_,spacing:l,size:[g.cols-1,g.rows-1]}}function le(e,t,i){const{storageInfo:r,pixelSize:n}=t;let s,a=!1;const{pyramidResolutions:l}=r;if((0,o.pC)(l)&&l.length){const r=(e.x+e.y)/2,o=l[l.length-1],u=(o.x+o.y)/2,c=(n.x+n.y)/2;if(r<=c)s=0;else if(r>=u)s=l.length,a=r/u>8;else{let e,t=c;for(let n=1;n<=l.length;n++){if(e=(l[n-1].x+l[n-1].y)/2,r<=e){r===e?s=n:"down"===i?(s=n-1,a=r/t>8):s="up"===i||r-t>e-r||r/t>2?n:n-1;break}t=e}}const h=0===s?n:l[s-1];return{pyramidLevel:s,pyramidResolution:new U.Z({x:h.x,y:h.y,spatialReference:t.spatialReference}),excessiveReading:a}}const u=Math.log(e.x/n.x)/Math.LN2,c=Math.log(e.y/n.y)/Math.LN2,h=t.storageInfo.maximumPyramidLevel||0;s="down"===i?Math.floor(Math.min(u,c)):"up"===i?Math.ceil(Math.max(u,c)):Math.round((u+c)/2),s<0?s=0:s>h&&(a=s>h+3,s=h);const f=2**s;return{pyramidLevel:s,pyramidResolution:new U.Z({x:f*t.nativePixelSize.x,y:f*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:a}}const ue=new Map,ce=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.refCount--,e.refCount<=0&&(r.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.ts=Date.now(),e.refCount++,r.delete(i),r.set(i,e),e.block}return null}putBlock(e,t,i,r=null){const n=this._cachedBlocks,s=e+"/"+t;if(n.has(s)){const e=n.get(s);e.ts=Date.now(),e.refCount++}else n.set(s,{block:i,ts:Date.now(),refCount:1,controller:r});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,r=e+"/"+t;i.has(r)&&i.delete(r)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let r=0;r<t.length&&t[r][1].ts<=i-this._duration;r++)e.delete(t[r][0]);0===e.size&&this.clearTimer()}),this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function he(e,t){return null==t?e:`${e}?sliceId=${t}`}function fe(e,t,i){if(!ue.has(e))return null==t?ce.decreaseRefCount(e,i):0;const r=ue.get(e);if(null==r[t])return ce.decreaseRefCount(e,i);const n=r[t].cache;if(n.has(i)){const e=n.get(i);if(e.refCount--,0===e.refCount){n.delete(i);for(let e=0;e<r.length;e++)r[e]&&r[e].cache.has(i)&&r[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function de(e,t,i){if(!ue.has(e))return null==t?ce.getBlock(e,i):null;const r=ue.get(e);if(null==r[t]){for(let e=0;e<r.length;e++)if(r[e]&&r[e].cache.has(i)){const t=r[e].cache.get(i);return t.refCount++,t.block}return ce.getBlock(e,i)}const n=r[t].cache;if(n.has(i)){const e=n.get(i);return e.refCount++,e.block}for(let e=0;e<r.length;e++)if(e!==t&&r[e]&&r[e]&&r[e].cache.has(i)){const t=r[e].cache.get(i);return t.refCount++,n.set(i,t),t.block}return null}function me(e,t,i,r,n=null){if(!ue.has(e))return void(null==t&&ce.putBlock(e,i,r,n));const s=ue.get(e);if(null==s[t])return void ce.putBlock(e,i,r,n);const a={refCount:1,block:r,isResolved:!1,isRejected:!1,controller:n};r.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),s[t].cache.set(i,a)}function pe(e,t,i){if(!ue.has(e))return void(null==t&&ce.deleteBlock(e,i));const r=ue.get(e);null!=r[t]?r[t].cache.delete(i):ce.deleteBlock(e,i)}var ye=i(75993),ge=i(55914);let xe=class extends((0,W.v)(J.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=async function(){if((0,q.kR)()||!(0,q.Gb)())return null;await(0,q.zD)()}();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:R.Z.create(),...e.ioConfig}}),e}set url(e){this._set("url",(0,I.Nm)(e,f.Z.getLogger(this.declaredClass)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){const{tileInfo:n}=r,s=n.lodAt(e),a=this.getTileExtent({x:s.resolution,y:s.resolution},t,i,n.origin,n.spatialReference,n.size);return r=this._getRequestOptionsWithSliceId(r),this.fetchPixels(a,n.size[0],n.size[1],r)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:i,extent:r}=this.rasterInfo,{datumTransformation:n}=t;let s=Q(e,i,n);if(!r.intersects(s))return{location:s,value:null};if((0,o.pC)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(t.srcResolution)a=le(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:u,col:c,rowOffset:h,colOffset:f}=l,d=he(this.url,t.sliceId),m=`${a}/${u}/${c}`;let p=de(d,null,m);(0,o.Wi)(p)&&(p=this.fetchRawTile(a,u,c,t),me(d,null,m,p));const y=await p;if((0,o.Wi)(y)||!y.pixels||0===y.pixels.length)return{location:s,value:null};const g=h*this.rasterInfo.storageInfo.blockHeight+f,x=!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,w=this.rasterInfo.dataType;return("vector-magdir"===w||"vector-uv"===w)&&(null==x?void 0:x.length)>1?{location:s,value:x,magdirValue:"vector-magdir"===w?[x[0],x[1]]:(0,S.Tg)([x[0],x[1]]),pyramidLevel:a}:{location:s,value:x,pyramidLevel:a}}async fetchPixels(e,t,i,r={}){e=function(e){const t=e.clone().normalize();return 1===t.length?t[0]:ee(t)}(e);const n=ae(e),s=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(s),{datumTransformation:l}=r,u=new U.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),c=r.srcResolution||(a?X(u,s,e,l):u);if(!c)return null;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:d}=le(c,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const m=this.rasterInfo.storageInfo;let p=a?te(e,s,l):e;const y=(0,o.Wg)(this.rasterInfo.transform);if(y&&(p=y.inverseTransform(p)),null==p)return null;const g={x:Math.floor((p.xmin-m.origin.x)/f.x+.1),y:Math.floor((m.origin.y-p.ymax)/f.y+.1)},x=Math.ceil((p.xmax-p.xmin)/f.x-.1),w=Math.ceil((p.ymax-p.ymin)/f.y-.1);if(x/t>8||w/i>8||n>=2)return null;const v=await this.fetchRawPixels(h,g,{width:x,height:w,wrapCount:n},r);if(!v)return null;const b=h>0?m.pyramidBlockWidth:m.blockWidth,I=h>0?m.pyramidBlockHeight:m.blockHeight;if(!a&&b===x&&I===w&&g.x%b==0&&g.y%I==0&&1===v.pixelBlocks.length&&b===t&&I===i&&c.x===u.x&&c.y===u.y)return{extent:e,srcExtent:p,pixelBlock:v.pixelBlocks[0]};const C=oe(e,v.extent,u,l,y,n>0);let _;const T=!r.requestRawData,R={rows:C.spacing[0],cols:C.spacing[1]},S=(0,o.Wg)(this._getRasterTileAlignmentInfo(h,v.extent.xmin)),{pixelBlocks:M,mosaicSize:k,isPartiallyFilled:F}=v;if(this.rasterJobHandler)_=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:M,srcMosaicSize:k,destDimension:T?{width:t,height:i}:null,coefs:T?C.coefficients:null,sampleSpacing:T?R:null,interpolation:r.interpolation,alignmentInfo:S},r);else{const e=(0,ge.us)(M,k,null,null,S);_=T?(0,ge.Uk)(e,{width:t,height:i},C.coefficients,R,r.interpolation):e}return r.requestRawData?{srcExtent:p,pixelBlock:_,transformGrid:C,extent:e,isPartiallyFilled:F}:{srcExtent:p,extent:e,pixelBlock:_}}async fetchRawPixels(e,t,i,r){const{origin:n,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:u,y:c}=t,{width:h,height:f,wrapCount:d}=i;const m=(0,o.Wg)(this._getRasterTileAlignmentInfo(e,0));r.buffer&&(u-=r.buffer.cols,c-=r.buffer.rows,h+=2*r.buffer.cols,f+=2*r.buffer.rows);const p=Math.floor(u/a),y=Math.floor(c/l),g=Math.floor((u+h-1)/a),x=Math.floor((c+f-1)/l),w=s[e];if(!w)return null;const{minRow:v,minCol:b,maxCol:I,maxRow:C}=w;if(x<v||g<b||y>C||p>I)return null;const _=new Array;let T=!1;const R=null==this.ioConfig.allowPartialFill?r.allowPartialFill:this.ioConfig.allowPartialFill;for(let t=y;t<=x;t++)for(let i=p;i<=g;i++){const n=0===d||null==m||i<m.worldColumnCountFromOrigin?i:i%m.worldColumnCountFromOrigin-m.originColumnOffset;if(t>=v&&n>=b&&C>=t&&I>=n){const i=this._fetchRawTile(e,t,n,r);R?_.push(new Promise((e=>{i.then((t=>e(t))).catch((()=>{T=!0,e(null)}))}))):_.push(i)}else _.push(null)}if(0===_.length)return null;const S=await Promise.all(_),M={height:(x-y+1)*l,width:(g-p+1)*a},{spatialReference:k}=this.rasterInfo,P=this.getPyramidPixelSize(e),{x:D,y:O}=P;return{extent:new F.Z({xmin:n.x+p*a*D,xmax:n.x+(g+1)*a*D,ymin:n.y-(x+1)*l*O,ymax:n.y-y*l*O,spatialReference:k}),pixelBlocks:S,mosaicSize:M,isPartiallyFilled:T}}fetchRawTile(e,t,i,r){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return te(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,ye.Jx)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var r,n;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;i=null!=(r=null!=(n=i)?n:t.retryCount)?r:this.ioConfig.retryCount;const u=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await(0,w.default)(e,{...t,query:{...o,...s},headers:{...l,...u}})}catch(r){if(i>0)return i--,this.request(e,t,i);throw r}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!(0,o.pC)(t)||null==e||!e.length)return null;let i=0;const r=e[0].variableName;for(let n=0;n<t.variables.length;n++){const s=t.variables[n],a=s.dimensions;if(s.name!==r){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==r)return null;const n=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],s=this._getIndexFromDimensions(n,a[t]);if(-1===s)return null;o.shift(),i+=t===l-1?s:s*o.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const n=[],s=e.maximumPyramidLevel||0;let a=Math.max(r.x,r.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)n.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new U.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new R.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:n,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,u=new U.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(n,s))/Math.LN2-8)));const c=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],r);e.storageInfo=new L.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:u,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,r,n,s=0,a=2){if(1===n.length&&s>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<s;i++)e*=a,t*=a,n.push({x:e,y:t})}const o=[],{x:l,y:u}=r;for(let r=0;r<n.length;r++){const{x:s,y:a}=n[r];o.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((u-e.ymax+.1*a)/i/a),maxRow:Math.floor((u-e.ymin-.1*a)/i/a)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,o.pC)(i)&&i.length)return i[e-1];const n=r**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i){const{spatialReference:r,nativeExtent:n}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,u=Q(e,r,i);if(!n.intersects(u))return null;if(t<0||t>o)return null;const c=this.getPyramidPixelSize(t),{x:h,y:f}=c,d=(l.y-u.y)/f/a,m=(u.x-l.x)/h/s,p=Math.min(a-1,Math.floor((d-Math.floor(d))*a)),y=Math.min(s-1,Math.floor((m-Math.floor(m))*s));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(m),rowOffset:p,colOffset:y,srcLocation:u}}getTileExtent(e,t,i,r,n,s){const[a,o]=s,l=r.x+i*a*e.x,u=l+a*e.x,c=r.y-t*o*e.y,h=c-o*e.y;return new F.Z({xmin:l,xmax:u,ymin:h,ymax:c,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}_fetchRawTile(e,t,i,r){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:l,maxRow:c}=n;if(t<s||i<a||t>c||i>l)return Promise.resolve(null);const h=he(this.url,r.sliceId),f=`${e}/${t}/${i}`;let d=de(h,r.registryId,f);if((0,o.Wi)(d)){const n=(0,u.yi)();d=this.fetchRawTile(e,t,i,{...r,signal:n.signal}),me(h,r.registryId,f,d,n),d.catch((()=>pe(h,r.registryId,f)))}return r.signal&&(0,u.fu)(r,(()=>{fe(h,r.registryId,f)})),d}_getIndexFromDimensions(e,t){const{extent:i,interval:r,unit:n,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/r);break;case"minutes":o=Math.round((e-a)/6e4/r);break;case"hours":o=Math.round((e-a)/36e5/r);break;case"days":o=Math.round((e-a)/864e5/r);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/r);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/r)}return o}return Math.round((e-a)/r)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:r,values:n}=e;let s=(null==n?void 0:n.length)||0;if(s)return s;const a=t[0];if(0===s&&"ISO8601"===r){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/i);break;case"hours":s=Math.round((t[1]-t[0])/36e5/i);break;case"days":s=Math.round((t[1]-t[0])/864e5/i);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return s}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=function(e){const t=e.storageInfo.origin.x,i=re(e.spatialReference,!0);if(!(0,o.pC)(i))return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const r=i/2,{nativePixelSize:n,storageInfo:s,extent:a}=e,{maximumPyramidLevel:l,blockWidth:u,pyramidScalingFactor:c}=s;let h=n.x;const f=[],d=(0,o.pC)(e.transform)&&"gcs-shift"===e.transform.type,m=t+r,p=d?i-t:r-t;for(let e=0;e<=l;e++){const e=(a.xmax-t)/h/u,r=e-Math.floor(e)==0?e:Math.ceil(e),n=(i/2-t)/h/u,s=n-Math.floor(n)==0?n:Math.ceil(n),o=Math.floor(m/h/u),l=Math.round(m/h)%u,d=(u-Math.round(p/h)%u)%u;f.push({resolutionX:h,blockWidth:u,datsetColumnCount:r,worldColumnCountFromOrigin:s,leftMargin:l,rightPadding:d,originColumnOffset:o}),h*=c}return{originX:t,halfWorldWidth:r,pyramidsInfo:f,hasGCSSShiftTransform:d}}(this.rasterInfo)),(0,o.pC)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}_getRequestOptionsWithSliceId(e){var t;return null!=(t=e.multidimensionalDefinition)&&t.length&&(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)||0}),e}};(0,r._)([(0,c.Cb)()],xe.prototype,"_rasterTileAlighmentInfo",void 0),(0,r._)([(0,c.Cb)(C.HQ)],xe.prototype,"url",null),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],xe.prototype,"datasetName",void 0),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)()],xe.prototype,"rasterInfo",void 0),(0,r._)([(0,c.Cb)()],xe.prototype,"ioConfig",void 0),(0,r._)([(0,c.Cb)()],xe.prototype,"sourceJSON",void 0),xe=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.BaseRaster")],xe);var we=xe,ve=i(20095);function be(e){const t=e.fields,i=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=n.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[r]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:n,features:a}}let Ie=class extends J.wq{constructor(){super(...arguments),this.affectsPixelSize=!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,r._)([(0,c.Cb)()],Ie.prototype,"affectsPixelSize",void 0),(0,r._)([(0,c.Cb)({json:{write:!0}})],Ie.prototype,"spatialReference",void 0),Ie=(0,r._)([(0,p.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],Ie);var Ce=Ie;let _e=class extends Ce{constructor(){super(...arguments),this.type="identity"}};(0,r._)([(0,d.J)({IdentityXform:"identity"})],_e.prototype,"type",void 0),_e=(0,r._)([(0,p.j)("esri.layers.support.rasterTransforms.IdentityTransform")],_e);var Te=_e,Re=i(30556);function Se(e,t,i){const{x:r,y:n}=t;if(i<2)return{x:e[0]+r*e[2]+n*e[4],y:e[1]+r*e[3]+n*e[5]};if(2===i){const t=r*r,i=n*n,s=r*n;return{x:e[0]+r*e[2]+n*e[4]+t*e[6]+s*e[8]+i*e[10],y:e[1]+r*e[3]+n*e[5]+t*e[7]+s*e[9]+i*e[11]}}const s=r*r,a=n*n,o=r*n,l=s*r,u=s*n,c=r*a,h=n*a;return{x:e[0]+r*e[2]+n*e[4]+s*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+h*e[18],y:e[1]+r*e[3]+n*e[5]+s*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+h*e[19]}}function Me(e,t,i){const{xmin:r,ymin:n,xmax:s,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:r,y:a}),l.push({x:s,y:a}),l.push({x:r,y:n}),l.push({x:s,y:n});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:n+(a-n)*t/(e-1)}),l.push({x:s,y:n+(a-n)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(s-r)*t/e,y:n}),l.push({x:r+(s-r)*t/e,y:a})}l=l.map((t=>Se(e,t,i)));const u=l.map((e=>e.x)),c=l.map((e=>e.y));return new F.Z({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:o})}let ke=class extends Ce{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const n=[];for(let e=0;e<i.length;e++)n.push(i[e]),n.push(r[e]);return n}writeForwardCoefficients(e,t,i){const r=[],n=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):n.push(e[t]);t.coeffX=r,t.coeffY=n}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,r,n,s,a]=e,o=r*a-s*n,l=s*n-r*a;return[(s*i-t*a)/o,(r*i-t*n)/l,a/o,n/l,-s/o,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const n=[];for(let e=0;e<i.length;e++)n.push(i[e]),n.push(r[e]);return n}writeInverseCoefficients(e,t,i){const r=[],n=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):n.push(e[t]);t.inverseCoeffX=r,t.inverseCoeffY=n}forwardTransform(e){if("point"===e.type){const t=Se(this.forwardCoefficients,e,this.polynomialOrder);return new U.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return Me(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=Se(this.inverseCoefficients,e,this.polynomialOrder);return new U.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return Me(this.inverseCoefficients,e,this.polynomialOrder)}};(0,r._)([(0,c.Cb)({json:{write:!0}})],ke.prototype,"polynomialOrder",void 0),(0,r._)([(0,c.Cb)()],ke.prototype,"forwardCoefficients",void 0),(0,r._)([(0,m.r)("forwardCoefficients",["coeffX","coeffY"])],ke.prototype,"readForwardCoefficients",null),(0,r._)([(0,Re.c)("forwardCoefficients")],ke.prototype,"writeForwardCoefficients",null),(0,r._)([(0,c.Cb)({json:{write:!0}})],ke.prototype,"inverseCoefficients",null),(0,r._)([(0,m.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],ke.prototype,"readInverseCoefficients",null),(0,r._)([(0,Re.c)("inverseCoefficients")],ke.prototype,"writeInverseCoefficients",null),(0,r._)([(0,c.Cb)()],ke.prototype,"affectsPixelSize",void 0),(0,r._)([(0,d.J)({PolynomialXform:"polynomial"})],ke.prototype,"type",void 0),ke=(0,r._)([(0,p.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],ke);var Fe=ke;const Pe={PolynomialXform:Fe,IdentityXform:Te},De=Object.keys(Pe);var Oe=i(74889);const Be=new Map;Be.set("int16","esriFieldTypeSmallInteger"),Be.set("int32","esriFieldTypeInteger"),Be.set("int64","esriFieldTypeInteger"),Be.set("float32","esriFieldTypeSingle"),Be.set("float64","esriFieldTypeDouble"),Be.set("text","esriFieldTypeString");let ze=class extends we{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new a.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,r={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const s=this._buildCacheFilePath(n,t,i,r.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!o)return null;const l=new Uint8Array(o.data),u=this._getTileEndAndContentType(l,a);if(0===u.recordSize)return null;const c=await this.request(s,{range:{from:u.position,to:u.position+u.recordSize},responseType:"array-buffer",signal:r.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,i;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:s,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:u,maximumPyramidLevel:c}=e,h=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,m=new P.Z(null!=f&&f.wkid||null!=f&&f.wkt?f:d);let p=new F.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const y=new U.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),g=Math.round((p.xmax-p.xmin)/y.x),x=Math.round((p.ymax-p.ymin)/y.y),w=this._parseTransform(e.geodataXform),v=w?p:null;w&&(p=w.forwardTransform(p),y.x=(p.xmax-p.xmin)/g,y.y=(p.ymax-p.ymin)/x);const b=null!=(i=e.properties)?i:{},I=e.format.toLowerCase().replace("cache/",""),C=new U.Z(e.origin.x,e.origin.y,m);let _,T,S,M;if(a&&a.colors)for(_=[],T=0;T<a.colors.length;T++)S=a.colors[T],M=a.values?a.values[T]:T,_.push([M,255&S,S<<16>>>24,S<<8>>>24,S>>>24]);const k=e.LODInfos,D=[];for(T=0;T<k.levels.length;T++)D.push({level:k.levels[T],resolution:k.resolutions[T],scale:96/.0254*k.resolutions[T]});const O=new R.Z({dpi:96,lods:D,format:I,origin:C,size:[o,l],spatialReference:m}),B={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},z=[{maxCol:Math.ceil(g/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let N=2;if(c>0)for(T=0;T<c;T++)z.push({maxCol:Math.ceil(g/N/o)-1,maxRow:Math.ceil(x/N/l)-1,minCol:0,minRow:0}),N*=2;const E=e.mdInfo;return{storageInfo:B,rasterInfo:new H.Z({width:g,height:x,pixelType:r,bandCount:n,extent:p,nativeExtent:v,transform:w,spatialReference:m,pixelSize:y,keyProperties:b,statistics:h,histograms:s,multidimensionalInfo:E,colormap:_,storageInfo:new L.Z({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:C,tileInfo:O,firstPyramidLevel:u,maximumPyramidLevel:c,blockBoundary:z})})}}_parseTransform(e){var t,i;if(!function(e){const t=null==e?void 0:e.type;return!e||De.includes(t)}(e))throw new a.Z("cloudraster:open","the data contains unsupported geodata transform types");const r=function(e){if(!(null==e?void 0:e.type))return null;const t=Pe[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}(e);if("identity"===r.type)return null;if("polynomial"!==r.type||null==(t=r.forwardCoefficients)||!t.length||null==(i=r.inverseCoefficients)||!i.length)throw new a.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,i]);let n;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":Be.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(n={fields:e,features:i})}}return!n&&r[1]&&(n=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),n=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:r,headerByteCount:n,recordByteCount:s};let o=32;const l=[],u=[];let c;if(3===i){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,ve.f)(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<r&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,ve.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}o+=t.length})),u.push(i)):o+=s}}return{header:a,fields:l,records:u,recordSet:be({fields:l,records:u})}}}.parse(r[1]).recordSet),Oe.default.fromJSON(n)}_buildCacheFilePath(e,t,i,r){const n=this.storageInfo.packetSize,s=Math.floor(t/n)*n,a=Math.floor(i/n)*n,l="R"+this._toHexString4(s)+"C"+this._toHexString4(a);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,h=null==r?void 0:r[0];if(!(0,o.pC)(c)||!h)return`${this.url}/_alllayers/${u}/${l}.bundle`;let f=c.variables.filter((e=>e.name===h.variableName))[0].dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let e=0;e<d;e++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${u}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,r=i*(e%i)+t%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,n=0;for(r=0;r<5;r++)n|=(255&i[r])<<8*r;const s=0xffffffffff&n;for(n=0,r=5;r<8;r++)n|=(255&i[r])<<8*(r-5);return{position:s,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,r._)([(0,c.Cb)({readOnly:!0})],ze.prototype,"storageInfo",void 0),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],ze.prototype,"datasetFormat",void 0),ze=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.CloudRaster")],ze);var Ne=ze;let Ee=class extends we{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:r,histograms:n,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:u,height:c,pixelType:h}=i,f=this.data.extent||new F.Z({xmin:-.5,ymin:.5,xmax:u-.5,ymax:c-.5,spatialReference:new P.Z({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,m={x:f.width/u,y:f.height/c},p=new H.Z({width:u,height:c,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:m,spatialReference:f.spatialReference,bandCount:3,keyProperties:a||{},statistics:r,isPseudoSpatialReference:d,histograms:n});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,i,r={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):Promise.resolve((0,ge.Vl)(e,t,r)),s=(0,o.pC)(this.rasterInfo.statistics),l=(0,o.pC)(this.rasterInfo.histograms),c=s&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,ge.Hv)(e)),h=await(0,u.as)([n,c]);if(!h[0].value&&h[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");var f,d;this._pixelBlockTiles=h[0].value,s||(this.rasterInfo.statistics=null==(f=h[1].value)?void 0:f.statistics),l&&(this.rasterInfo.histograms=null==(d=h[1].value)?void 0:d.histograms)}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)()],Ee.prototype,"data",void 0),Ee=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],Ee);var Ze=Ee;function Ae(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const n=Ae(e,i);for(let e=0;e<n.length;e++)Ae(n[e],t).forEach((e=>r.push(e)));return r}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let e=0;e<n.length;e++)r.push(n[e]||n.item[e]);return r}function He(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=Ae(e,i);return r.length>0?t?He(r[0],t):r[0]:null}function Le(e,t=null){const i=t?He(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function Je(e,t){return function(e,t){const i=Ae(e,t),r=[];let n;for(let e=0;e<i.length;e++)n=i[e].textContent||i[e].nodeValue,n&&(n=n.trim(),""!==n&&r.push(n));return r}(e,t).map((e=>Number(e)))}function We(e,t){const i=Le(e,t);return Number(i)}function je(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),n=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===n}function qe(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function Ge(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new P.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),n=r>-1?r:e.indexOf("GEOGCS");if(-1===n)return null;const s=e.slice(n,e.lastIndexOf("]",i)+1).trim(),a=e.slice(n,e.lastIndexOf("]")).trim();t=Ue(s);const o=new P.Z(t?{wkid:t}:{wkt:s}),l=Ue(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Ue(e),new P.Z(0!==t?{wkid:t}:{wkt:e})):null}function Ue(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(",");if("EPSG"===i[0]&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Ye(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(je(e,"SRS")){if(!i.spatialReference){const t=Le(e);i.spatialReference=Ge(t)}}else if(je(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const i=He(e,"GeodataXform"),r=Ge(We(i,"SpatialReference/WKID")||Le(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const n=null!=(t=We(i,"PolynomialOrder"))?t:1,s=Je(i,"CoeffX/Double"),a=Je(i,"CoeffY/Double"),o=Je(i,"InverseCoeffX/Double"),l=Je(i,"InverseCoeffY/Double"),u=qe(s,a),c=qe(o,l);return{spatialReference:r,transform:new Fe({spatialReference:r,polynomialOrder:n,forwardCoefficients:u,inverseCoefficients:c})}}(e);i.transform=r,i.spatialReference||(i.spatialReference=t)}else Ae(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=Le(e)));else if(je(e,"PAMRasterBand")){const t=function(e){var t;const i=We(e,"NoDataValue"),r=He(e,"Histograms/HistItem"),n=We(r,"HistMin"),s=We(r,"HistMax"),a=We(r,"BucketCount"),o=null==(t=Le(r,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,u,c,h;Ae(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":c=i;break;case"STATISTICS_STDDEV":h=i}}));const f=We(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=u?{min:n,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const r=i.rasterBands;if(r){const e=!!r[0].statistics;i.statistics=e?r.map((e=>e.statistics)):null;const t=!!r[0].histogram;i.histograms=t?r.map((e=>e.histogram)):null}return i}let Ve=class extends we{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:n,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new P.Z({wkid:3857})),null!=n&&n.length&&null==r&&(r=(0,ge.Oh)(n));const{width:o,height:l}=t;let u=new F.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const c=s?s.forwardTransform(u):u;let h=!0;if(s){const e=s.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(s=null,u=c)}const f=new Ze({data:{extent:c,nativeExtent:u,transform:s,pixelBlock:t,statistics:r,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=(0,ye.y6)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.Z("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const r=(0,o.Wg)(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],s=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),a=this.datasetFormat,l="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,c=n.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:r}),h=await(0,u.as)([s,c]);if(null!=r&&r.aborted)throw(0,u.zE)();const f=Ye(null==(i=h[0].value)?void 0:i.data);if(!f.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;f.transform=6===(null==e?void 0:e.length)?new Fe({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],Ve.prototype,"datasetFormat",void 0),Ve=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Ve);var $e=Ve,Xe=i(17452),Ke=i(45322),Qe=i(56608);let et=class extends Ce{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};(0,r._)([(0,d.J)({GCSShiftXform:"gcs-shift"})],et.prototype,"type",void 0),(0,r._)([(0,c.Cb)()],et.prototype,"tolerance",void 0),et=(0,r._)([(0,p.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],et);var tt=et;let it=class extends we{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=i.data;if(this.sourceJSON=r,!r)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=r.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(r.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name.slice(r.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:t});if(!(0,o.pC)(n))throw new a.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,Ke.d)(r.tileInfo,r):R.Z.fromJSON(r.tileInfo),{extent:t,pixelSize:i}=n,s=.5/n.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==r.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-r.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>r.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const u=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-r.minScale)<s))[0],this._levelOffset=o.level-u.level),o||(o=u);const c=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-c)<s)))&&(i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=a.level-o.level,[f,d]=e.size,m=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&m.push({x:e.resolution,y:e.resolution})})),m.sort(((e,t)=>e.x-t.x));const p=this.computeBlockBoundary(t,f,d,e.origin,m,h),y=m.length>1?m.slice(1):null;n.storageInfo=new L.Z({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:p}),this._fixGCSShift(n),this._set("rasterInfo",n)}if(r.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:(0,Xe.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Qe.y({layer:e})}}async fetchRawTile(e,t,i,r={}){const{storageInfo:n,extent:s}=this.rasterInfo,a=n.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${a}/${t}/${i}`,l=this._slices?{sliceId:r.sliceId||0}:null,{data:u}=await this.request(o,{query:l,responseType:"array-buffer",signal:r.signal});if(!u)return null;const c=await this.decodePixelBlock(u,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),h=n.blockBoundary[e];if("jpg"!==n.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return c;const{origin:f,blockWidth:d,blockHeight:m}=n,{x:p,y}=this.getPyramidPixelSize(e),g=Math.round((s.xmin-f.x)/p)%d,x=Math.round((s.xmax-f.x)/p)%d,w=Math.round((f.y-s.ymax)/y)%m,v=Math.round((f.y-s.ymin)/y)%m,b=i===h.minCol?g:0,I=t===h.minRow?w:0,C=i===h.maxCol?x:d,_=t===h.maxRow?v:m;return(0,ge.pW)(c,{x:b,y:I},{width:C-b,height:_-I}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await Promise.all([i,r]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,o.Wg)(t.datumTransformation));if(null===i)return null;let r=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let s=n-r+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,r++,i=this.identifyPixelLocation(a,r,(0,o.Wg)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=P.Z.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new H.Z({width:i,height:r,bandCount:3,extent:F.Z.fromJSON(t.extent),spatialReference:n,pixelSize:new U.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:a}).then((e=>Oe.default.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),u=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),c=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,l,u,c,h,f]).then((e=>{let s=null;if(t.minValues&&t.minValues.length===t.bandCount){s=[];for(let e=0;e<t.minValues.length;e++)s.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new H.Z({width:i,height:r,bandCount:t.bandCount,extent:F.Z.fromJSON(t.extent),spatialReference:n,pixelSize:new U.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:s,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new tt,e.extent=e.transform.forwardTransform(t))}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],it.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)()],it.prototype,"tileType",void 0),it=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],it);var rt=it,nt=i(54163),st=i(48279);const at=new Map;at.set("Int8","s8"),at.set("UInt8","u8"),at.set("Int16","s16"),at.set("UInt16","u16"),at.set("Int32","s32"),at.set("UInt32","u32"),at.set("Float32","f32"),at.set("Float64","f32"),at.set("Double64","f32");const ot=new Map;ot.set("lerc",".lrc"),ot.set("none",".til"),ot.set("deflate",".pzp"),ot.set("jpeg",".jzp");let lt=class extends we{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?(0,o.Wg)(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:s}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(n.statistics=null!=(a=t.statistics)?a:n.statistics,n.histograms=t.histograms,t.histograms&&!(0,o.pC)(n.statistics)&&(n.statistics=(0,ge.Oh)(t.histograms)))}this._set("rasterInfo",n),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let u,c,h=0,f=-1;const{blockWidth:d,blockHeight:m,compression:p}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:g,height:x,bandCount:w}=this.rasterInfo,v=[],b="none"===p?1:w;for(;h<this._storageIndex.length;)f++,u=Math.ceil(g/d/y**f),c=Math.ceil(x/m/y**f),h+=u*c*b*4,v.push({maxRow:c,maxCol:u,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=v,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{blockWidth:n,blockHeight:s,blockBoundary:a,compression:o}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:u,pixelType:c}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(n*s);return new nt.Z({width:n,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p="none"===o?1:u,y=[];let g=0;for(g=0;g<p;g++)(!m||m.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:h[g].from,to:h[g].to},responseType:"array-buffer",signal:r.signal}));const x=await Promise.all(y),w=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),v=new Uint8Array(w);let b=0;for(g=0;g<p;g++)v.set(new Uint8Array(x[g].data),b),b+=x[g].data.byteLength;const I="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",C=await this.decodePixelBlock(v.buffer,{width:n,height:s,format:I,pixelType:c});let _=0,T=0;if(f!==n||d!==s){let e=C.mask;if(e)for(g=0;g<s;g++)if(T=g*n,g<d)for(_=f;_<n;_++)e[T+_]=0;else for(_=0;_<n;_++)e[T+_]=0;else for(e=new Uint8Array(n*s),C.mask=e,g=0;g<d;g++)for(T=g*n,_=0;_<f;_++)e[T+_]=1}return C}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,r,n,s,a;if(st.f){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),r=new Uint8Array(n),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)r[4*s+a]=i[4*s+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:n,pyramidScalingFactor:s,compression:a}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:u}=this.rasterInfo,c="none"===a?1:u;let h,f,d,m=0,p=0;for(d=0;d<e;d++)p=s**d,h=Math.ceil(o/r/p),f=Math.ceil(l/n/p),m+=h*f;p=s**e,h=Math.ceil(o/r/p),f=Math.ceil(l/n/p),m+=t*h+i,m*=4*c;const y=this._storageIndex.subarray(m,m+4*c);let g=0,x=0;const w=[];for(let e=0;e<c;e++)g=y[4*e+0]*2**32+y[4*e+1],x=g+y[4*e+2]*2**32+y[4*e+3],w.push({from:g,to:x});return{ranges:w,actualTileWidth:i<h-1?r:Math.ceil(o/p)-r*(h-1),actualTileHeight:t<f-1?n:Math.ceil(l/p)-n*(f-1)}}_parseHeader(e){const t=He(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const i=He(t,"Size"),r=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),o=(Le(t,"Compression")||"none").toLowerCase();if(!o||-1===["none","lerc"].indexOf(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=Le(t,"DataType")||"UInt8",u=at.get(l);if(null==u)throw new a.Z("mrf:open","currently does not support pixel type "+l);const c=He(t,"PageSize"),h=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),d=He(t,"DataValues");let m,p;if(d&&(p=d.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map((e=>parseFloat(e))))),He(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const y=He(e,"MRF_META/GeoTags"),g=He(y,"BoundingBox");if(null==g)throw new a.Z("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(g.getAttribute("minx")),w=parseFloat(g.getAttribute("miny")),v=parseFloat(g.getAttribute("maxx")),b=parseFloat(g.getAttribute("maxy")),I=Le(y,"Projection")||"",C=Le(e,"datafile"),_=Le(e,"IndexFile");let T;if("LOCAL_CS[]"!==I)if(I.toLowerCase().startsWith("epsg:")){const e=Number(I.slice(5));isNaN(e)||0===e||(T=new P.Z({wkid:e}))}else T=Ge(I);const R=new F.Z(x,w,v,b);R.spatialReference=T;const S=He(e,"MRF_META/Rsets"),M=parseInt(S&&S.getAttribute("scale")||"2",10),k=new L.Z({origin:new U.Z({x:R.xmin,y:R.ymax,spatialReference:T}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:M}),D=new U.Z({x:(v-x)/r,y:(b-w)/n,spatialReference:T});return{rasterInfo:new H.Z({width:r,height:n,extent:R,spatialReference:T,bandCount:s,pixelType:u,pixelSize:D,noDataValue:m,storageInfo:k}),files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",ot.get(o))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ye(t)}catch{return null}}};(0,r._)([(0,c.Cb)()],lt.prototype,"_files",void 0),(0,r._)([(0,c.Cb)()],lt.prototype,"_storageIndex",void 0),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],lt.prototype,"datasetFormat",void 0),lt=(0,r._)([(0,p.j)("esri.layers.support.rasterIO.MRFRaster")],lt);var ut=lt,ct=i(67090),ht=i(9832);const ft=function(e,t){const i=e.get(t);return i&&i.values},dt=function(e,t){const i=e.get(t);return i&&i.values[0]};let mt=class extends we{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,r;await this.init();const n=e?(0,o.Wg)(e.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!s)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:u,isBigTiff:c}=(0,ct.p)(s),h=[];await this.readIFDs(h,s,l,u,0,c?8:4,n);const f=(0,ct.g)(h),{width:d,height:m,tileWidth:p,tileHeight:y,planes:g,pixelType:x,compression:w,firstPyramidLevel:v,maximumPyramidLevel:b,pyramidBlockWidth:I,pyramidBlockHeight:C,tileBoundary:_,affine:T,metadata:R}=f;let S=Ge((null==(t=f.extent.spatialReference)?void 0:t.wkt)||(null==(i=f.extent.spatialReference)?void 0:i.wkid)),M=!1;null==S&&(M=!0,S=new P.Z({wkid:3857}));const k=new F.Z({...f.extent,spatialReference:S}),D=new U.Z(k?{x:k.xmin,y:k.ymax,spatialReference:S}:{x:0,y:0}),O=new L.Z({blockWidth:p,blockHeight:y,pyramidBlockWidth:I,pyramidBlockHeight:C,compression:w,origin:D,firstPyramidLevel:v,maximumPyramidLevel:b,blockBoundary:_}),B=new U.Z({x:(k.xmax-k.xmin)/d,y:(k.ymax-k.ymin)/m,spatialReference:S}),z=R?{BandProperties:R.bandProperties,DataType:R.dataType}:{},N=new H.Z({width:d,height:m,bandCount:g,pixelType:x,compression:w,pixelSize:B,storageInfo:O,spatialReference:S,isPseudoSpatialReference:M,keyProperties:z,extent:k,statistics:R?R.statistics:null});if(null!=T&&T.length&&(N.nativeExtent=new F.Z({xmin:-.5,ymin:.5-m,xmax:d-.5,ymax:.5,spatialReference:S}),N.transform=new Fe({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),N.extent=N.transform.forwardTransform(N.nativeExtent),N.pixelSize=new U.Z({x:(k.xmax-k.xmin)/d,y:(k.ymax-k.ymin)/m,spatialReference:S}),O.origin.x=-.5,O.origin.y=.5),null==(r=this.ioConfig.skipExtensions)||!r.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var E;if(N.statistics=null!=(E=t.statistics)?E:N.statistics,N.histograms=t.histograms,t.histograms&&!(0,o.pC)(N.statistics)&&(N.statistics=(0,ge.Oh)(t.histograms)),t.transform&&!T){N.transform=t.transform,N.nativeExtent=N.extent;const e=N.transform.forwardTransform(N.nativeExtent);N.pixelSize=new U.Z({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/m,spatialReference:S}),N.extent=e}N.spatialReference||(N.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",N),this._headerInfo={littleEndian:l,isBigTiff:c,ifds:h,...f},!this._headerInfo.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){var n;if(null==(n=this._headerInfo)||!n.isSupported||this.isBlockOutside(e,t,i))return null;const s=this.getTileLocation(e,t,i);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:u}=s,c=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal}))),h=await Promise.all(c),f=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===h.length?h[0].data:new ArrayBuffer(f),m=[0],p=[0];if(h.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<h.length;t++){const r=h[t].data;e.set(new Uint8Array(r),i),m[t]=i,i+=r.byteLength,p[t]=r.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:m,sizes:p},width:y,height:g,planes:null,pixelType:null});let w,v,b;if(o!==y||l!==g){let e=x.mask;if(e)for(w=0;w<g;w++)if(b=w*y,w<l)for(v=o;v<y;v++)e[b+v]=0;else for(v=0;v<y;v++)e[b+v]=0;else for(e=new Uint8Array(y*g),x.mask=e,w=0;w<l;w++)for(b=w*y,v=0;v<o;v++)e[b+v]=1}return x}async readIFDs(e,t,i,r,n,s=4,a){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+n,to:r+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=r+n,r=0);const o=await this.readIFD(t,i,r,n,ht.Z.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-n,n,s,a)}async readIFD(e,t,i,r,n=ht.Z.TIFF_TAGS,s=4,a){if(!e)return null;const o=(0,ct.b)(e,t,i,r,n,s);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const n=i.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=n,r=s,i.forEach((i=>(0,ct.c)(e,t,i,r)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=i.values;if(n&&n.length>4){const s=n[0]+"."+n[1]+"."+n[2],o=await this.readIFD(e,t,i.valueOffset+6-r,r,ht.Z.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,r,ht.Z.TIFF_TAGS,4,a)}}getTileLocation(e,t,i){const{firstPyramidLevel:r,blockBoundary:n}=this.rasterInfo.storageInfo,s=0===e?0:e-(r-1),a=this._headerInfo.ifds[s];if(!a)return null;const o=(0,ct.i)(a,this._headerInfo),l=ft(a,"TILEOFFSETS");if(void 0===l)return null;const u=ft(a,"TILEBYTECOUNTS"),{minRow:c,minCol:h,maxRow:f,maxCol:d}=n[s];if(t>f||i>d||t<c||i<h)return null;const m=dt(a,"IMAGEWIDTH"),p=dt(a,"IMAGELENGTH"),y=dt(a,"TILEWIDTH"),g=dt(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,w=x*t*(d+1)+i,v=[{from:l[w],to:l[w+x-1]+u[w+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[w+t]+u[w+t]!==l[w+t+1]){e=!1;break}if(!e)for(let e=0;e<x;e++)v[e]={from:l[w+e],to:l[w+e]+u[w+e]-1}}const b=l[w],I=u[w];return null==b||null==I?null:{ranges:v,ifd:a,actualTileWidth:i===d?m%y:y,actualTileHeight:t===f?p%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ye(t)}catch{return null}}};(0,r._)([(0,c.Cb)()],mt.prototype,"_files",void 0),(0,r._)([(0,c.Cb)()],mt.prototype,"_headerInfo",void 0),(0,r._)([(0,c.Cb)()],mt.prototype,"_bufferSize",void 0),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],mt.prototype,"datasetFormat",void 0),mt=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.TIFFRaster")],mt);var pt=mt;const yt=new Map;yt.set("CRF",{desc:"Cloud Raster Format",constructor:Ne}),yt.set("MRF",{desc:"Meta Raster Format",constructor:ut}),yt.set("TIFF",{desc:"GeoTIFF",constructor:pt}),yt.set("RasterTileServer",{desc:"Raster Tile Server",constructor:rt}),yt.set("JPG",{desc:"JPG Raster Format",constructor:$e}),yt.set("PNG",{desc:"PNG Raster Format",constructor:$e}),yt.set("GIF",{desc:"GIF Raster Format",constructor:$e}),yt.set("BMP",{desc:"BMP Raster Format",constructor:$e});var gt=i(32163);let xt=class extends((0,g.h)((0,E.M)((0,B.q)((0,z.I)((0,x.N)(O((0,N.Q)((0,l.R)(y.Z))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new Z.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}const n=this.rasterInfo.dataType;if(("vector-magdir"===n||"vector-uv"===n)&&(0,o.pC)(this.rasterInfo.multidimensionalInfo)){var s;const e=null==(s=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:s.trim(),t="Magnitude"+(e?` (${e})`:"");i.push(new Z.Z({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new Z.Z({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=(0,s.ij)(r,i)||void 0;if(null!=n)return n}createPopupTemplate(e){return(0,gt.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return yt.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(n="RasterTileServer");const s={url:t,sourceJSON:r,datasetFormat:n,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(n))return o=yt.get(n).constructor,l=new o(s),await l.open({signal:e.signal}),l;if(n)throw new a.Z("rasterfactory:open","not a supported format "+n);const u=Array.from(yt.keys());let c=0;const h=function(){return n=u[c++],n?(o=yt.get(n).constructor,l=new o(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>h()))):null};return h()}static register(e,t,i){yt.has(e.toUpperCase())||yt.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};(0,r._)([(0,c.Cb)({type:[h.z8],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],xt.prototype,"bandIds",void 0),(0,r._)([(0,c.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,d.J)(A.c)],xt.prototype,"interpolation",void 0),(0,r._)([(0,c.Cb)({json:{write:!0}})],xt.prototype,"multidimensionalDefinition",void 0),(0,r._)([(0,c.Cb)(C.rn)],xt.prototype,"legendEnabled",void 0),(0,r._)([(0,c.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],xt.prototype,"isReference",void 0),(0,r._)([(0,c.Cb)({type:["show","hide"]})],xt.prototype,"listMode",void 0),(0,r._)([(0,c.Cb)()],xt.prototype,"sourceJSON",void 0),(0,r._)([(0,c.Cb)({readOnly:!0})],xt.prototype,"version",void 0),(0,r._)([(0,c.Cb)()],xt.prototype,"title",void 0),(0,r._)([(0,c.Cb)({readOnly:!0,json:{read:!1}})],xt.prototype,"type",void 0),(0,r._)([(0,c.Cb)({type:["ArcGISTiledImageServiceLayer"]})],xt.prototype,"operationalLayerType",void 0),(0,r._)([(0,c.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],xt.prototype,"popupEnabled",void 0),(0,r._)([(0,c.Cb)({type:n.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],xt.prototype,"popupTemplate",void 0),(0,r._)([(0,c.Cb)({readOnly:!0})],xt.prototype,"defaultPopupTemplate",null),(0,r._)([(0,c.Cb)({readOnly:!0,type:[Z.Z]})],xt.prototype,"fields",void 0),(0,r._)([(0,c.Cb)({readOnly:!0,type:[Z.Z]})],xt.prototype,"rasterFields",null),(0,r._)([(0,c.Cb)({types:s.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:s.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],xt.prototype,"renderer",null),(0,r._)([(0,m.r)("renderer")],xt.prototype,"readRenderer",null),xt=(0,r._)([(0,p.j)("esri.layers.ImageryTileLayer")],xt);var wt=xt}}]);