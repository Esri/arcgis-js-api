"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[9489],{28263:(e,t,r)=>{r.d(t,{E:()=>i});class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const s=this._options[e];if(s){const i="boolean"!=typeof s&&s.name?s.name:e,o="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=o&&(r[i]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function i(e){return new s(e)}},5226:(e,t,r)=>{r.d(t,{et:()=>U,ef:()=>D,bI:()=>x,mT:()=>P,Wf:()=>I});var s=r(3172),i=r(20102),o=r(70586),n=r(78286),a=r(17452),l=r(11282),u=r(43697),p=r(10736),c=r(5600),d=(r(67676),r(80442),r(75215),r(52011)),m=r(22974),y=r(36030),f=r(35454);const h=(0,f.wY)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"}),v=((0,f.wY)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),(0,f.wY)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),(0,f.wY)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),(0,f.wY)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,f.wY)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),g=((0,f.wY)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,f.wY)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,f.wY)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}));var b;let T=b=class extends p.wq{constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}clone(){return new b((0,m.d9)({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};(0,u._)([(0,c.Cb)({type:[Object],json:{write:!0}})],T.prototype,"attributeParameterValues",void 0),(0,u._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"description",void 0),(0,u._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"distanceAttributeName",void 0),(0,u._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"id",void 0),(0,u._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"impedanceAttributeName",void 0),(0,u._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"name",void 0),(0,u._)([(0,c.Cb)({type:[String],json:{write:!0}})],T.prototype,"restrictionAttributeNames",void 0),(0,u._)([(0,c.Cb)({type:Number,json:{write:!0}})],T.prototype,"simplificationTolerance",void 0),(0,u._)([(0,y.J)(h)],T.prototype,"simplificationToleranceUnits",void 0),(0,u._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"timeAttributeName",void 0),(0,u._)([(0,y.J)(g)],T.prototype,"type",void 0),(0,u._)([(0,c.Cb)({type:Boolean,json:{write:!0}})],T.prototype,"useHierarchy",void 0),(0,u._)([(0,y.J)(v)],T.prototype,"uturnAtJunctions",void 0),T=b=(0,u._)([(0,d.j)("esri.rest.support.TravelMode")],T);const N=T;let A=class extends p.wq{constructor(e){super(e),this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}};(0,u._)([(0,c.Cb)()],A.prototype,"currentVersion",void 0),(0,u._)([(0,c.Cb)()],A.prototype,"defaultTravelMode",void 0),(0,u._)([(0,c.Cb)()],A.prototype,"directionsLanguage",void 0),(0,u._)([(0,c.Cb)()],A.prototype,"directionsSupportedLanguages",void 0),(0,u._)([(0,c.Cb)()],A.prototype,"directionsTimeAttribute",void 0),(0,u._)([(0,c.Cb)()],A.prototype,"hasZ",void 0),(0,u._)([(0,c.Cb)()],A.prototype,"impedance",void 0),(0,u._)([(0,c.Cb)()],A.prototype,"networkDataset",void 0),(0,u._)([(0,c.Cb)({type:[N]})],A.prototype,"supportedTravelModes",void 0),A=(0,u._)([(0,d.j)("esri.rest.support.NetworkServiceDescription")],A);const w=A;var _=r(38171),C=r(71715),M=r(74889),B=r(79166),S=r(95642);let j=class extends p.wq{constructor(e){super(e),this.directions=null,this.route=null,this.routeName=null,this.stops=null}};(0,u._)([(0,c.Cb)({type:S.Z,json:{write:!0}})],j.prototype,"directions",void 0),(0,u._)([(0,c.Cb)({type:_.Z,json:{write:!0}})],j.prototype,"route",void 0),(0,u._)([(0,c.Cb)({type:String,json:{write:!0}})],j.prototype,"routeName",void 0),(0,u._)([(0,c.Cb)({type:[_.Z],json:{write:!0}})],j.prototype,"stops",void 0),j=(0,u._)([(0,d.j)("esri.rest.support.RouteResult")],j);const O=j;function R(e){return e&&M.default.fromJSON(e).features.map((e=>e))}let k=class extends p.wq{constructor(e){super(e),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return R(t.barriers||t.pointBarriers)}readPolylineBarriers(e){return R(e)}readPolygonBarriers(e){return R(e)}};(0,u._)([(0,c.Cb)({aliasOf:"pointBarriers"})],k.prototype,"barriers",void 0),(0,u._)([(0,c.Cb)({type:[B.Z]})],k.prototype,"messages",void 0),(0,u._)([(0,c.Cb)({type:[_.Z]})],k.prototype,"pointBarriers",void 0),(0,u._)([(0,C.r)("pointBarriers",["barriers","pointBarriers"])],k.prototype,"readPointBarriers",null),(0,u._)([(0,c.Cb)({type:[_.Z]})],k.prototype,"polylineBarriers",void 0),(0,u._)([(0,C.r)("polylineBarriers")],k.prototype,"readPolylineBarriers",null),(0,u._)([(0,c.Cb)({type:[_.Z]})],k.prototype,"polygonBarriers",void 0),(0,u._)([(0,C.r)("polygonBarriers")],k.prototype,"readPolygonBarriers",null),(0,u._)([(0,c.Cb)({type:[O]})],k.prototype,"routeResults",void 0),k=(0,u._)([(0,d.j)("esri.rest.support.RouteResultsContainer")],k);const Z=k;function U(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function D(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function P(e){const t=[],r=[],{directions:s=[],routes:{features:i=[],spatialReference:n=null}={},stops:{features:a=[],spatialReference:l=null}={},barriers:u,polygonBarriers:p,polylineBarriers:c,messages:d}=e.data,m="esri.tasks.RouteTask.NULL_ROUTE_NAME";let y,f,h=!0;const v=i&&n||a&&l||u&&u.spatialReference||p&&p.spatialReference||c&&c.spatialReference;s.forEach((e=>{t.push(y=e.routeName),r[y]={directions:e}})),i.forEach((e=>{-1===t.indexOf(y=e.attributes.Name)&&(t.push(y),r[y]={}),(0,o.pC)(e.geometry)&&(e.geometry.spatialReference=v),r[y].route=e})),a.forEach((e=>{f=e.attributes,-1===t.indexOf(y=f.RouteName||m)&&(t.push(y),r[y]={}),y!==m&&(h=!1),(0,o.pC)(e.geometry)&&(e.geometry.spatialReference=v),null==r[y].stops&&(r[y].stops=[]),r[y].stops.push(e)})),a.length>0&&!0===h&&(r[t[0]].stops=r[m].stops,delete r[m],t.splice(t.indexOf(m),1));const g=t.map((e=>(r[e].routeName=e===m?null:e,r[e])));return Z.fromJSON({routeResults:g,pointBarriers:u,polygonBarriers:p,polylineBarriers:c,messages:d})}function I(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,o.pC)(e)&&e.hasZ)return!0}return!1}async function x(e,t,r){if(!e)throw new i.Z("network-service:missing-url","Url to Network service is missing");const o=(0,l.lA)({f:"json",token:t},r),{data:u}=await(0,s.default)(e,o);u.supportedTravelModes||(u.supportedTravelModes=[]);for(let e=0;e<u.supportedTravelModes.length;e++)u.supportedTravelModes[e].id||(u.supportedTravelModes[e].id=u.supportedTravelModes[e].itemId);const p=u.currentVersion>=10.4?async function(e,t,r){try{const i=(0,l.lA)({f:"json",token:t},r),o=(0,a.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:n,defaultTravelMode:u}}=await(0,s.default)(o,i);return{supportedTravelModes:n,defaultTravelMode:u}}catch(e){throw new i.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,r):async function(e,t){var r,i;const o=(0,l.lA)({f:"json"},t),{data:u}=await(0,s.default)(e.replace(/\/rest\/.*$/i,"/info"),o);if(!u||!u.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:p}=u,c=(0,a.Qj)(p)+"/sharing/rest/portals/self",{data:d}=await(0,s.default)(c,o),m=(0,n.hS)("helperServices.routingUtilities.url",d);if(!m)return{supportedTravelModes:[],defaultTravelMode:null};const y=(0,l.en)(p),f=/\/solve$/i.test(y.path)?"Route":/\/solveclosestfacility$/i.test(y.path)?"ClosestFacility":"ServiceAreas",h=(0,l.lA)({f:"json",serviceName:f},t),v=(0,a.Qj)(m)+"/GetTravelModes/execute",g=await(0,s.default)(v,h),b=[];let T=null;if(null!=g&&null!=(r=g.data)&&null!=(i=r.results)&&i.length){const e=g.data.results;for(const t of e){var N;if("supportedTravelModes"===t.paramName){if(null!=(N=t.value)&&N.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);b.push(t)}}else"defaultTravelMode"===t.paramName&&(T=t.value)}}return{supportedTravelModes:b,defaultTravelMode:T}}(e,r),{defaultTravelMode:c,supportedTravelModes:d}=await p;return u.defaultTravelMode=c,u.supportedTravelModes=d,w.fromJSON(u)}},95642:(e,t,r)=>{r.d(t,{Z:()=>v});var s=r(43697),i=(r(66577),r(70586)),o=r(5600),n=(r(67676),r(80442),r(75215),r(71715)),a=r(52011),l=r(38171);let u=class extends l.Z{};(0,s._)([(0,o.Cb)()],u.prototype,"events",void 0),(0,s._)([(0,o.Cb)()],u.prototype,"strings",void 0),u=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeature")],u);const p=u;var c=r(74889),d=r(6570),m=r(82971),y=r(58901),f=r(13473);let h=class extends c.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){var r;if(!e)return[];const s=null!=(r=t.summary.envelope.spatialReference)?r:t.spatialReference,i=s&&m.Z.fromJSON(s);return e.map((e=>{var t,r;const s=this._decompressGeometry(e.compressedGeometry),o=new y.Z({...s,spatialReference:i}),n=null!=(t=null==(r=e.events)?void 0:r.map((e=>{const{arriveTimeUTC:t,ETA:r,point:{x:s,y:o,z:n},strings:a}=e;return new p({geometry:new f.Z({x:s,y:o,z:n,hasZ:void 0!==n,spatialReference:i}),attributes:{ETA:r,arriveTimeUTC:t},strings:a})})))?t:[];return new p({attributes:e.attributes,events:n,geometry:o,strings:e.strings})}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,i.Wg)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressGeometry(e){let t=0,r=0,s=0,i=0;const o=[];let n,a,l,u,p,c,d,m,y=0,f=0,h=0;if(p=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),p||(p=[]),0===parseInt(p[y],32)){y=2;const e=parseInt(p[y],32);y++,c=parseInt(p[y],32),y++,1&e&&(f=p.indexOf("|")+1,d=parseInt(p[f],32),f++),2&e&&(h=p.indexOf("|",f)+1,m=parseInt(p[h],32),h++)}else c=parseInt(p[y],32),y++;for(;y<p.length&&"|"!==p[y];){n=parseInt(p[y],32)+t,y++,t=n,a=parseInt(p[y],32)+r,y++,r=a;const e=[n/c,a/c];f&&(u=parseInt(p[f],32)+s,f++,s=u,e.push(u/d)),h&&(l=parseInt(p[h],32)+i,h++,i=l,e.push(l/m)),o.push(e)}return{paths:[o],hasZ:f>0,hasM:h>0}}_mergePolylinesToSinglePath(e,t){if(0===e.length)return new y.Z({spatialReference:t});const r=[];for(const t of e)for(const e of t.paths)r.push(...e);const s=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||s.push(e)}));const{hasM:i,hasZ:o}=e[0];return new y.Z({hasM:i,hasZ:o,paths:[s],spatialReference:t})}};(0,s._)([(0,o.Cb)({type:d.Z,json:{read:{source:"summary.envelope"}}})],h.prototype,"extent",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"features",void 0),(0,s._)([(0,n.r)("features")],h.prototype,"readFeatures",null),(0,s._)([(0,o.Cb)()],h.prototype,"geometryType",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"mergedGeometry",null),(0,s._)([(0,o.Cb)()],h.prototype,"routeId",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"routeName",void 0),(0,s._)([(0,o.Cb)({value:null,readOnly:!0})],h.prototype,"strings",null),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],h.prototype,"totalDriveTime",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalLength"}}})],h.prototype,"totalLength",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalTime"}}})],h.prototype,"totalTime",void 0),h=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeatureSet")],h);const v=h},79166:(e,t,r)=>{r.d(t,{Z:()=>p});var s=r(43697),i=r(35454),o=r(5600),n=(r(67676),r(80442),r(75215),r(52011)),a=r(51623);const l=new i.Xn({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let u=class extends a.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,s._)([(0,n.j)("esri.rest.support.NAMessage")],u);const p=u},39489:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var s=r(43697),i=(r(92604),r(75215),r(67676),r(80442),r(37697),r(52011)),o=r(3172),n=r(28263),a=r(38581),l=r(5226),u=r(11282);const p=(0,n.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});var c=r(59633);let d=class extends c.Z{constructor(e){super(e)}solve(e,t){return async function(e,t,r){const s=[],i=[],n={},c={},d=(0,u.en)(e),{path:m}=d;t.stops&&t.stops.features&&(0,l.et)(t.stops.features,i,"stops.features",n),t.pointBarriers&&t.pointBarriers.features&&(0,l.et)(t.pointBarriers.features,i,"pointBarriers.features",n),t.polylineBarriers&&t.polylineBarriers.features&&(0,l.et)(t.polylineBarriers.features,i,"polylineBarriers.features",n),t.polygonBarriers&&t.polygonBarriers.features&&(0,l.et)(t.polygonBarriers.features,i,"polygonBarriers.features",n);const y=await(0,a.aX)(i);for(const e in n){const t=n[e];s.push(e),c[e]=y.slice(t[0],t[1])}if((0,l.Wf)(c,s)){let e=null;try{e=await(0,l.bI)(m,t.apiKey,r)}catch{}e&&!e.hasZ&&(0,l.ef)(c,s)}for(const e in c)c[e].forEach(((r,s)=>{t.get(e)[s].geometry=r}));const f={...r,query:{...d.query,...p.toQueryParams(t),f:"json"}},h=m.endsWith("/solve")?m:`${m}/solve`,v=await(0,o.default)(h,f);return(0,l.mT)(v)}(this.url,e,t)}};d=(0,s._)([(0,i.j)("esri.tasks.RouteTask")],d);const m=d}}]);