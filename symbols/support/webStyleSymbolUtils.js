/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../symbols","../../core/devEnvironmentUtils","../../core/Error","../../core/urlUtils","../../portal/Portal","../../chunks/persistableUrlUtils","./jsonUtils","./StyleOrigin","./styleUtils","./Thumbnail"],(function(e,t,l,r,n,o,a,s,i,m,u){"use strict";function y(e,t,l,n){return e.name?e.styleName&&"Esri2DPointSymbolsStyle"===e.styleName?c(e,t,n):m.fetchStyle(e,t,n).then((r=>b(r,e.name,t,l,n))):Promise.reject(new r("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function b(e,y,b,c,f){const S=e.data,p={portal:b&&b.portal||o.getDefault(),url:n.urlToObject(e.baseUrl),origin:"portal-item"},h=S.items.find((e=>e.name===y));if(!h){const e=`The symbol name '${y}' could not be found`;return Promise.reject(new r("symbolstyleutils:symbol-name-not-found",e,{symbolName:y}))}let d=a.fromJSON(m.symbolUrlFromStyleItem(h,c),p),g=h.thumbnail&&h.thumbnail.href;const O=h.thumbnail&&h.thumbnail.imageData;l.isDevEnvironment()&&(d=l.adjustStaticAGOUrl(d),g=l.adjustStaticAGOUrl(g));const U={portal:b.portal,url:n.urlToObject(n.removeFile(d)),origin:"portal-item"};return m.requestJSON(d,f).then((l=>{const r="cimRef"===c?m.makeCIMSymbolRef(l.data):l.data,n=s.fromJSON(r,U);if(n&&t.isSymbol3D(n)){if(g){const e=a.fromJSON(g,p);n.thumbnail=new u.Thumbnail({url:e})}else O&&(n.thumbnail=new u.Thumbnail({url:`data:image/png;base64,${O}`}));e.styleUrl?n.styleOrigin=new i({portal:b.portal,styleUrl:e.styleUrl,name:y}):e.styleName&&(n.styleOrigin=new i({portal:b.portal,styleName:e.styleName,name:y}))}return n}))}function c(e,t,l){const r=m.Style2DUrlTemplate.replace(/\{SymbolName\}/gi,e.name);return m.requestJSON(r,l).then((e=>{const l=m.makeCIMSymbolRef(e.data);return s.fromJSON(l,{portal:t.portal,url:n.urlToObject(n.removeFile(r)),origin:"portal-item"})}))}e.fetchSymbolFromStyle=b,e.resolveWebStyleSymbol=y,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
