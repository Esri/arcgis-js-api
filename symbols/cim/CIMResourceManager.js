/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../request","../../core/Error","../../core/promiseUtils","../../views/2d/engine/webgl/animatedFormats/apng","../../views/2d/engine/webgl/animatedFormats/gif"],(function(e,t,r,n,i,o){"use strict";let s=function(){function t(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}var r=t.prototype;return r.destroy=function(){this._inFlightResourceMap.clear(),this._resourceMap.clear()},r.getResource=function(e){return this._resourceMap.get(e)??null},r.fetchResource=function(){var t=e._asyncToGenerator((function*(e,t){const r=this._resourceMap.get(e);if(r)return{width:r.width,height:r.height};let n=this._inFlightResourceMap.get(e);return n?n.then((e=>({width:e.width,height:e.height}))):(n=c(e,t),this._inFlightResourceMap.set(e,n),n.then((t=>(this._inFlightResourceMap.delete(e),this._resourceMap.set(e,t),{width:t.width,height:t.height})),(()=>({width:0,height:0}))))}));function r(e,r){return t.apply(this,arguments)}return r}(),r.deleteResource=function(e){this._inFlightResourceMap.delete(e),this._resourceMap.delete(e)},t}();function a(e,t){return u.apply(this,arguments)}function u(){return(u=e._asyncToGenerator((function*(e,i){const o=window.URL.createObjectURL(e);try{const{data:e}=yield t(o,{...i,responseType:"image"});return e}catch(s){if(!n.isAbortError(s))throw new r("mapview-invalid-resource",`Could not fetch requested resource at ${o}`);throw s}finally{window.URL.revokeObjectURL(o)}}))).apply(this,arguments)}function c(e,t){return h.apply(this,arguments)}function h(){return(h=e._asyncToGenerator((function*(e,t){const{arrayBuffer:r,mediaType:n}=yield l(e,t),s="image/png"===n;if("image/gif"===n&&o.isAnimatedGIF(r))return o.parseGif(r,t);if(s&&i.isAnimatedPNG(r))return i.parseApng(r,t);return a(new Blob([r],{type:n}),t)}))).apply(this,arguments)}function l(e,t){return p.apply(this,arguments)}function p(){return(p=e._asyncToGenerator((function*(e,i){let o;const s=";base64,";if(e.includes(s)){const t=e.indexOf(s),r=e.indexOf(s)+s.length,n=e.substring(r),i=atob(n),a=new Uint8Array(i.length);for(let e=0;e<i.length;e++)a[e]=i.charCodeAt(e);o={arrayBuffer:a.buffer,mediaType:e.substring(0,t).replace("data:","")}}else try{const r=yield t(e,{responseType:"array-buffer",...i}),n=r.data;o={arrayBuffer:n,mediaType:r.getHeader("Content-Type")}}catch(a){if(!n.isAbortError(a))throw new r("mapview-invalid-resource",`Could not fetch requested resource at ${e}`)}return o}))).apply(this,arguments)}return s}));
