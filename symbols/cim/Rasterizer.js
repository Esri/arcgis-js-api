/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["./utils","./Rect","./CIMSymbolHelper","./SDFHelper"],(function(e,t,r,a){"use strict";const n=512;return function(){function i(){}var o=i.prototype;return o.dispose=function(){this._rasterizationCanvas=null},o.rasterizeJSONResource=function(e,n,i){if(this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),"simple-fill"===e.type||"esriSFS"===e.type){const[t,a,i]=r.SymbolHelper.rasterizeSimpleFill(this._rasterizationCanvas,e.style,n);return{size:[a,i],image:new Uint32Array(t.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0}}if("simple-line"===e.type||"esriSLS"===e.type){const[t,a,n]=r.SymbolHelper.rasterizeSimpleLine(e.style,e.cap);return{size:[a,n],image:new Uint32Array(t.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}let o,s,l;if("simple-marker"===e.type||"esriSMS"===e.type||"line-marker"===e.type?(o=r.CIMSymbolHelper.fromSimpleMarker(e),l=a.getSDFInfo(o)):"CIMHatchFill"===e.type?(o=r.CIMSymbolHelper.fromCIMHatchFill(e),s=new t(o.frame.xmin,-o.frame.ymax,o.frame.xmax-o.frame.xmin,o.frame.ymax-o.frame.ymin)):e.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===e.markerPlacement.type?(o=r.CIMSymbolHelper.fromCIMInsidePolygon(e),s=new t(o.frame.xmin,-o.frame.ymax,o.frame.xmax-o.frame.xmin,o.frame.ymax-o.frame.ymin)):(o=e,l=a.getSDFInfo(o)),l&&!i){const[e,t,r]=a.buildSDF(l);return e?{size:[t,r],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}const[m,f,c,p,u]=r.CIMSymbolHelper.rasterize(this._rasterizationCanvas,o,s,!i);return m?{size:[f,c],image:new Uint32Array(m.buffer),sdf:!1,simplePattern:!1,anchorX:p,anchorY:u}:null},o.rasterizeImageResource=function(t,r,a,i){this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),this._rasterizationCanvas.width=t,this._rasterizationCanvas.height=r;const o=this._rasterizationCanvas.getContext("2d");a instanceof ImageData?o.putImageData(a,0,0):(a.setAttribute("width",`${t}px`),a.setAttribute("height",`${r}px`),o.drawImage(a,0,0,t,r));const s=o.getImageData(0,0,t,r),l=new Uint8Array(s.data);if(i)for(const e of i)if(e&&e.oldColor&&4===e.oldColor.length&&e.newColor&&4===e.newColor.length){const[t,r,a,n]=e.oldColor,[i,o,s,m]=e.newColor;if(t===i&&r===o&&a===s&&n===m)continue;for(let e=0;e<l.length;e+=4)t===l[e]&&r===l[e+1]&&a===l[e+2]&&n===l[e+3]&&(l[e]=i,l[e+1]=o,l[e+2]=s,l[e+3]=m)}let m;for(let e=0;e<l.length;e+=4)m=l[e+3]/255,l[e]=l[e]*m,l[e+1]=l[e+1]*m,l[e+2]=l[e+2]*m;let f=l,c=t,p=r;const u=n;if(c>=u||p>=u){const a=c/p;a>1?(c=u,p=Math.round(u/a)):(p=u,c=Math.round(u*a)),f=new Uint8Array(4*c*p);const n=new Uint8ClampedArray(f.buffer);e.resampleHermite(l,t,r,n,c,p,!1)}return{size:[t,r],image:new Uint32Array(f.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}},i}()}));
