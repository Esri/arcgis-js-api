/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["./CIMSymbolHelper","./Rect","./SDFHelper","./utils"],(function(e,t,r,a){"use strict";const n=512;return function(){function i(){}var o=i.prototype;return o.dispose=function(){this._rasterizationCanvas=null},o.rasterizeJSONResource=function(a,n,i){if(this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),"simple-fill"===a.type||"esriSFS"===a.type){const[t,r,i]=e.SymbolHelper.rasterizeSimpleFill(this._rasterizationCanvas,a.style,n);return{size:[r,i],image:new Uint32Array(t.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0}}if("simple-line"===a.type||"esriSLS"===a.type){const[t,r,n]=e.SymbolHelper.rasterizeSimpleLine(a.style,a.cap);return{size:[r,n],image:new Uint32Array(t.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}let o,s,l;if("simple-marker"===a.type||"esriSMS"===a.type||"line-marker"===a.type?(o=e.CIMSymbolHelper.fromSimpleMarker(a),l=r.getSDFInfo(o)):"CIMHatchFill"===a.type?(o=e.CIMSymbolHelper.fromCIMHatchFill(a),s=new t(o.frame.xmin,-o.frame.ymax,o.frame.xmax-o.frame.xmin,o.frame.ymax-o.frame.ymin)):a.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===a.markerPlacement.type?(o=e.CIMSymbolHelper.fromCIMInsidePolygon(a),s=new t(o.frame.xmin,-o.frame.ymax,o.frame.xmax-o.frame.xmin,o.frame.ymax-o.frame.ymin)):(o=a,l=r.getSDFInfo(o)),l&&!i){const[e,t,a]=r.buildSDF(l);return e?{size:[t,a],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}const[m,f,c,p,u]=e.CIMSymbolHelper.rasterize(this._rasterizationCanvas,o,s,!i);return m?{size:[f,c],image:new Uint32Array(m.buffer),sdf:!1,simplePattern:!1,anchorX:p,anchorY:u}:null},o.rasterizeImageResource=function(e,t,r,i){this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),this._rasterizationCanvas.width=e,this._rasterizationCanvas.height=t;const o=this._rasterizationCanvas.getContext("2d");r instanceof ImageData?o.putImageData(r,0,0):(r.setAttribute("width",`${e}px`),r.setAttribute("height",`${t}px`),o.drawImage(r,0,0,e,t));const s=o.getImageData(0,0,e,t),l=new Uint8Array(s.data);if(i)for(const a of i)if(a&&a.oldColor&&4===a.oldColor.length&&a.newColor&&4===a.newColor.length){const[e,t,r,n]=a.oldColor,[i,o,s,m]=a.newColor;if(e===i&&t===o&&r===s&&n===m)continue;for(let a=0;a<l.length;a+=4)e===l[a]&&t===l[a+1]&&r===l[a+2]&&n===l[a+3]&&(l[a]=i,l[a+1]=o,l[a+2]=s,l[a+3]=m)}let m;for(let a=0;a<l.length;a+=4)m=l[a+3]/255,l[a]=l[a]*m,l[a+1]=l[a+1]*m,l[a+2]=l[a+2]*m;let f=l,c=e,p=t;const u=n;if(c>=u||p>=u){const r=c/p;r>1?(c=u,p=Math.round(u/r)):(p=u,c=Math.round(u*r)),f=new Uint8Array(4*c*p);const n=new Uint8ClampedArray(f.buffer);a.resampleHermite(l,e,t,n,c,p,!1)}return{size:[c,p],image:new Uint32Array(f.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}},i}()}));
