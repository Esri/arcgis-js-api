// COPYRIGHT Â© 2021 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/3.36/esri/copyright.txt for details.

define(["dojo/_base/lang","dojo/_base/url","dojo/has","dojo/on","dojo/Deferred","dojo/_base/array","../../kernel","../../request","../../lang","../../config","../../layers/ArcGISImageServiceLayer","../../layers/ImageServiceParameters","../../layers/MosaicRule","../../layers/RasterFunction","../../tasks/Geoprocessor","../../tasks/JobInfo","../../renderers/colorUtils","../../renderers/colorRampUtils"],(function(e,r,o,t,n,a,i,l,u,s,m,c,f,R,d,v,p,g){var y,A,C,F={},h={name:"Raster",isDataset:!0,isPublic:!1,type:"RasterFunctionVariable"};function b(e){if(e){var r=a.map([e.FromColor,e.ToColor],(function(e){var r=p.toRGB({h:e.Hue,s:e.Saturation,v:e.Value});return[r.r,r.g,r.b]}));return{fromColor:r[0],toColor:r[1],type:"algorithmic",algorithm:e.Algorithm}}}function S(e){if(e){var r=p.toHSV(p.getDojoColor(e));return{type:"HsvColor",Hue:r.h,Saturation:r.s,Value:r.v,AlphaValue:255}}}function T(e){if(e){var r=e.toJson?e.toJson():void 0;return{Algorithm:r&&r.Algorithm||"esriHSVAlgorithm",type:"AlgorithmicColorRamp",FromColor:S(e.fromColor),ToColor:S(e.toColor)}}}return e.mixin(F,{fetchRFT:function(e,r,o,t,a){var i,u,s=new n,m=e.name;if(i=(u=m&&m.slice(-8))&&".rft.xml"===u.toLowerCase(),!e||!e.itemDataUrl)return o("errorRetrievingRFTItem"),s.reject(new Error("errorRetrievingRFTItem")),s.promise;if(i){if(!a)return o("errorUtilitiesServiceNotAvailable"),s.reject(new Error("errorUtilitiesServiceNotAvailable")),s.promise;var c={url:a+"/ConvertRasterFunctionTemplate",rft:{itemId:e.id},format:"json"};return this.convertRFT(c,r,t,o)}return l({url:e.itemDataUrl,callbackParamName:"callback",content:{f:"json"},handleAs:"json",load:r,error:o}).then(t)},convertRFT:function(e,o,n,a){var i=e.url,u=function(){C&&(C.remove(),C=null),A&&(A.remove(),A=null)};y||(y=new d(i),t(y,"error",u)),A=t(y,"job-complete",(function(e){if(A&&(A.remove(),A=null),e.jobInfo.jobStatus!==v.STATUS_SUCCEEDED)return u(),void a(e);y.getResultData(e.jobInfo.jobId,"outputRasterFunction")})),C=t(y,"get-result-data-complete",(function(e){C&&(C.remove(),C=null);var o=e&&e.result&&e.result.value;if(o&&o.url){var t={url:o.url,handleAs:"json",load:n,error:a},i=new r(o.url).authority;return-1===s.defaults.io.corsEnabledServers.indexOf(i)&&s.defaults.io.corsEnabledServers.push(i),void l(t)}}));var m={inputRasterFunction:JSON.stringify(e.rft),format:e.format};return y.submitJob(m,o,null,a)},getRasterJsonFromLayer:function(e){if(!e)return null;var r=e.url;r&&r.indexOf("?token=")>0&&(r=r.slice(0,r.indexOf("?token=")));var o=e.credential||r&&i.id.findCredential(r);u.isDefined(o)&&(r=r+"?token="+o.token,o.referer&&(r+=o.referer));var t={url:r,name:e.name};return e.renderingRule&&(t.renderingRule=e.renderingRule.toJson?e.renderingRule.toJson():e.renderingRule),e.mosaicRule&&(t.mosaicRule=e.mosaicRule.toJson?e.mosaicRule.toJson():e.mosaicRule),t},getLayerIdfromRasterValue:function(e,r){var o;if(e&&r)return a.some(r,(function(r){if(r&&r.url===e.url&&r.name===e.name&&e.name)return o=r.id,!0})),o},getColorRampFromArg:function(e){var r,o,t;if(e&&(e.type&&e.type.toLowerCase().indexOf("colorramp")>-1?r=e:e.value&&e.value.type.toLowerCase().indexOf("colorramp")>-1&&(r=e.value),r))return(o=r.type.toLowerCase())==="MultiPartColorRamp".toLowerCase()?t=g.fromJson({type:"multipart",colorRamps:a.map(r.ArrayOfColorRamp,(function(e){return b(e)}))}):o==="AlgorithmicColorRamp".toLowerCase()&&(t=g.fromJson(b(r))),t.id=t.name=r.Name,t},getRFxArgColorRampValue:function(r){if(r){if(r.fromColor&&r.toColor)return e.mixin(T(r),{Name:r.name});if(r.colorRamps){var o=a.map(r.colorRamps,T);return{type:"MultiPartColorRamp",NumColorRamps:o.length,ArrayOfColorRamp:o,Name:r.name}}}},RFX_VARIABLE_TYPE:"RasterFunctionVariable",RFX_TEMPLATE_TYPE:"RasterFunctionTemplate",ARGUMENT_ARRAY_TYPE:"ArgumentArray",getArgRFT:function(e){if(e)return"RasterFunctionTemplate"===e.type?e:e.value&&"RasterFunctionTemplate"===e.value.type?e.value:void 0},getEnumData:function(e,r,o){if(Array.isArray(e))return e.forEach((function(e){e.key=e.key.toString()})),e},getImageServiceTitle:function(e){var r=e.split("/");return r[r.length-2]},isReferencedObject:function(e){if(e)return!!u.isDefined(e._object_ref_id)||void 0},functionTypes:{local:"LocalFunction",gpAdapter:"GPAdapterFunction",pythonAdapter:"PythonAdapterFunction"},defaultRasterNodeProps:h,getArcGISImageServiceLayerItem:function(r){if(r){var o=e.clone(r);o.name||(o.name=this.getImageServiceTitle(o.url));var t=new c;o.mosaicRule&&(t.mosaicRule=new f(o.mosaicRule)),o.renderingRule&&(t.renderingRule=new R(o.renderingRule));var n=new m(o.url,{id:o.name+(new Date).toString(),imageServiceParameters:t});return n.name=o.name,n}}}),o("extend-esri")&&e.setObject("dijit.RasterFunctionEditor.utils",F,i),F}));