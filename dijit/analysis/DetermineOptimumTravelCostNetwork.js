// COPYRIGHT Â© 2022 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/3.42/esri/copyright.txt for details.

define(["../../kernel","./AnalysisRegistry","./RasterAnalysisMixin","./utils","./ItemTypes","dijit/_FocusMixin","dijit/_OnDijitClickMixin","dijit/_TemplatedMixin","dijit/_WidgetBase","dijit/_WidgetsInTemplateMixin","dojo/_base/array","dojo/_base/declare","dojo/_base/json","dojo/_base/lang","dojo/has","dojo/i18n!./nls/DetermineOptimumTravelCostNetwork","dojo/text!./templates/DetermineOptimumTravelCostNetwork.html"],(function(t,e,s,i,r,n,o,a,u,p,l,h,m,y,c,d,N){var _=h([u,a,p,o,n,s],{declaredClass:"esri.dijit.analysis.DetermineOptimumTravelCostNetwork",templateString:N,widgetsInTemplate:!0,browseType:[r.IS,r.FS],checkGeometries:[e.GeometryTypes.Point,e.GeometryTypes.MultiPoint,e.GeometryTypes.Line],tags:["point","line"],inputFlowDirectionRaster:null,inputLayer:null,allocationField:null,maximumDistance:{},outputCellSize:{},analysisType:"feature",toolName:"DetermineOptimumTravelCostNetwork",helpFileName:"DetermineOptimumTravelCostNetwork",toolNlsName:d,rasterGPToolName:"DetermineOptimumTravelCostNetwork",outputName:"outputOptimumNetworkName",resultParameter:["outputOptimumNetworkFeatures","outputNeighborNetworkFeatures"],secondaryOutputs:["outputNeighborNetworkFeatures"],secondaryOutputNames:["outputNeighborNetworkName"],constructor:function(t,e){this._pbConnects=[],t.containerNode&&(this.container=t.containerNode)},_getJobParameters:function(){var t=i.constructAnalysisInputLyrObj(this.get("inputLayer")),e=i.constructAnalysisInputLyrObj(this.get("inputCostRaster"));return this.get("inputLayer").drawnLayer&&(t.drawnLayer=this.get("inputLayer").drawnLayer),{inputRegionsRasterOrFeatures:m.toJson(t),inputCostRaster:m.toJson(e),outputOptimumNetworkName:this.get("outputOptimumNetworkName")}},_setDefaultInputs:function(){this.inputCostRaster&&this.inputCostRasters&&!i.isLayerInLayers(this.inputCostRaster,this.inputCostRasters)&&this.inputCostRasters.push(this.inputCostRaster),this._addInputCostRasterLayerOptions(),this._outputLayerInput.set("value",this.outputOptimumNetworkName&&this.outputOptimumNetworkName.serviceProperties.name),this._outputNeighborNetworkNameInput.set("value",this.outputDirectionName&&this.outputDirectionName.serviceProperties.name),this.addPointAnalysisLayer()},_addInputCostRasterLayerOptions:function(){var t=[];this._inputCostRasterSelect.removeOption(this._inputCostRasterSelect.getOptions());var e=!1;l.forEach(this.inputCostRasters,y.hitch(this,(function(s,i){var r=this._isSelected(s,this.inputCostRaster);e=e||r,t.push({label:s.name,value:i.toString(),selected:r})}))),this._inputCostRasterSelect.addOption(t),e||this._handleInputCostRasterChange(0)},_handleInputCostRasterChange:function(t){"browselayers"===t||"browse"===t?(this._isAnalysisSelect=!1,this.defaultItemTypes=[],this.set("allowedItemTypes",[r.IS]),this._createBrowseItems({browseValue:t,disableLAAL:!0,disableBoundary:!0,disabledSubResources:[this.inputCostRaster]},{},this._inputCostRasterSelect)):t>=0&&this.set("inputCostRaster",this.inputCostRasters[t])},_handleBrowseItemsSelect:function(t,e){t&&t.selection&&i.addAnalysisReadyLayer({item:t.selection,layers:this._isAnalysisSelect?this.inputLayers:this.inputCostRasters,layersSelect:this._isAnalysisSelect?this._analysisSelect:this._inputCostRasterSelect,browseDialog:this._browseLyrsdlg||this._browsedlg,widget:this},e).always(y.hitch(this,(function(){this._isAnalysisSelect?this._handleAnalysisLayerChange(this._analysisSelect.get("value")):this._handleInputCostRasterChange(this._inputCostRasterSelect.get("value"))})))},_isSelected:function(t,e){return e&&t&&e.url===t.url},addBrowseOption:function(){i.addReadyToUseLayerOption(this,[{disableLAAL:!0,select:this._inputCostRasterSelect}])},_setInputLayerAttr:function(t){this.inputLayer=t},_getInputLayerAttr:function(){return this.inputLayer},_setInputLayersAttr:function(t){this.inputLayers=l.filter(t,(function(t){return t.geometryType===e.GeometryTypes.Point||t.geometryType===e.GeometryTypes.Polygon||t.geometryType===e.GeometryTypes.Line||t.geometryType===e.GeometryTypes.MultiPoint||this.isImageServiceLayer(t)}),this),this.set("inputCostRasters",t)},_getInputLayersAttr:function(t){return this.inputLayers},_getInputCostRasterAttr:function(){return this.inputCostRaster},_setInputFlowDirectionRasterAttr:function(t){this.isImageServiceLayer(t)&&(this.inputCostRaster=t)},_getInputCostRastersAttr:function(){return this.inputCostRasters},_setInputCostRastersAttr:function(t){this.inputCostRasters=l.filter(t,(function(t){return this.isImageServiceLayer(t)}),this)},_setOutputOptimumNetworkNameAttr:function(t){this.outputOptimumNetworkName=t},_getOutputOptimumNetworkNameAttr:function(){return this._outputLayerInput.get("value")},_setOutputNeighborNetworkNameAttr:function(t){this.outputNeighborNetworkName=t},_getOutputNeighborNetworkNameAttr:function(){return this._outputNeighborNetworkNameInput.get("value")}});return c("extend-esri")&&y.setObject("dijit.analysis.DetermineOptimumTravelCostNetwork",_,t),_}));