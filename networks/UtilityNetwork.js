/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../request","../core/accessorSupport/decorators/property","../core/has","../core/accessorSupport/ensureType","../core/Logger","../core/accessorSupport/decorators/subclass","./Network","./support/NamedTraceConfiguration","./support/TerminalConfiguration"],(function(e,r,t,o,n,i,a,s,u,l,c){"use strict";let d=function(r){function o(e){var t;return(t=r.call(this,e)||this).sharedNamedTraceConfigurations=[],t.type="utility",t}e._inheritsLoose(o,r);var n=o.prototype;return n.load=function(){var t=e._asyncToGenerator((function*(e){return this.addResolvingPromise(r.prototype.load.call(this,e)),this.addResolvingPromise(this._loadNamedTraceConfigurationsFromNetwork(e)),this}));function o(e){return t.apply(this,arguments)}return o}(),n.getTerminalConfiguration=function(e){let r=null,t=null;const o=e.layer;let n=null;if("feature"!==(null==o?void 0:o.type))return null;if(n=o.layerId,null===n)return null;const i=e.attributes;if(null==i)return null;for(const c of Object.keys(i))"ASSETGROUP"===c.toUpperCase()&&(r=e.getAttribute(c)),"ASSETTYPE"===c.toUpperCase()&&(t=e.getAttribute(c));if(!this.dataElement)return null;let a=null;const s=this.dataElement.domainNetworks;for(const c of s){var u;const e=null==(u=c.junctionSources)?void 0:u.find((e=>e.layerId===n));if(e){var l;const o=null==(l=e.assetGroups)?void 0:l.find((e=>e.assetGroupCode===r));if(o){var d;const e=null==(d=o.assetTypes)?void 0:d.find((e=>e.assetTypeCode===t));if(e){a=e.terminalConfigurationId;break}}}}if(null!=a){const e=this.dataElement.terminalConfigurations,r=null==e?void 0:e.find((e=>e.terminalConfigurationId===a));return r?c.fromJSON(r):null}return null},n._loadNamedTraceConfigurationsFromNetwork=function(){var r=e._asyncToGenerator((function*(e){var r;if(0===(null==(r=this.sharedNamedTraceConfigurations)?void 0:r.length))return;const t=this.sharedNamedTraceConfigurations.map((e=>e.globalId)),o=yield this._fetchTraceConfigData(this.networkServiceUrl,t,e);for(const n of this.sharedNamedTraceConfigurations){const e=null==o?void 0:o.find((e=>e.globalId===n.globalId));e&&n.read(e,{origin:"service"})}}));function t(e){return r.apply(this,arguments)}return t}(),n._fetchTraceConfigData=function(e,r,o){return t(`${e}/traceConfigurations/query`,{responseType:"json",query:{globalIds:JSON.stringify(r),f:"json"},...o}).then((e=>e.data.traceConfigurations))},e._createClass(o,[{key:"serviceTerritoryFeatureLayerId",get:function(){var e;return null==(e=this.dataElement)?void 0:e.serviceTerritoryFeatureLayerId}},{key:"terminalConfigurations",get:function(){var e;return null==(e=this.dataElement)?void 0:e.terminalConfigurations.map((e=>c.fromJSON(e)))}}]),o}(u);return r.__decorate([o.property({type:[l],json:{origins:{"web-map":{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}},service:{read:{source:"traceConfigurations"}}},read:!1}})],d.prototype,"sharedNamedTraceConfigurations",void 0),r.__decorate([o.property({type:["utility"],readOnly:!0,json:{read:!1,write:!1}})],d.prototype,"type",void 0),r.__decorate([o.property({readOnly:!0})],d.prototype,"serviceTerritoryFeatureLayerId",null),r.__decorate([o.property({readOnly:!0})],d.prototype,"terminalConfigurations",null),d=r.__decorate([s.subclass("esri.networks.UtilityNetwork")],d),d}));
