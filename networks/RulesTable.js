/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../request","../core/JSONSupport","../core/Loadable","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/accessorSupport/decorators/subclass","./support/typeUtils"],(function(e,t,o,r,s,n,i,a,u,c){"use strict";let p=function(t){function r(e){var r;return(r=t.call(this,e)||this).request=o,r}e._inheritsLoose(r,t);var s=r.prototype;return s.initialize=function(){},s.load=function(){var t=e._asyncToGenerator((function*(e){const t=this.layer.load(e).then((()=>this._initializeRulesTable()));return this.addResolvingPromise(t),this}));function o(e){return t.apply(this,arguments)}return o}(),s.getFeatureSQL=function(e,t){const o=e.layerId.toString(),r=e.fieldsIndex?.normalizeFieldName("assetGroup"),s=e.fieldsIndex?.normalizeFieldName("assetType"),n=r?t.attributes[r]:null,i=s?t.attributes[s]:null,a=this.rulesHash[o];if(a){const e=a.assetGroupHash[n];if(e){const t=e.assetTypeHash[i];return t||null}}return null},s._initializeRulesTable=function(){var t=e._asyncToGenerator((function*(){const e={};let t;!function(e){e[e.from=0]="from",e[e.to=1]="to",e[e.via=2]="via"}(t||(t={}));const o=[{networkSourceId:"fromNetworkSource",assetGroupId:"fromAssetGroup",assetTypeId:"fromAssetType"},{networkSourceId:"toNetworkSource",assetGroupId:"toAssetGroup",assetTypeId:"toAssetType"},{networkSourceId:"viaNetworkSource",assetGroupId:"viaAssetGroup",assetTypeId:"viaAssetType"}];for(const r of this.rules){if(r.ruleType!==c.RuleType.RTJunctionJunctionConnectivity&&r.ruleType!==c.RuleType.RTJunctionEdgeConnectivity&&r.ruleType!==c.RuleType.RTEdgeJunctionEdgeConnectivity)continue;let s=[[t.from,t.to],[t.to,t.from]];r.ruleType===c.RuleType.RTEdgeJunctionEdgeConnectivity&&(s=[[t.from,t.via],[t.via,t.from],[t.to,t.via],[t.via,t.to]]);for(const n of s){const s=n.shift(),i=n.shift();let a=!1;switch(r.ruleType){case c.RuleType.RTEdgeJunctionEdgeConnectivity:a=s===t.from||s===t.to;break;case c.RuleType.RTJunctionEdgeConnectivity:a=s===t.to}const u=o[s],p=r[u.networkSourceId].layerId.toString(),l=r[u.assetGroupId]?.assetGroupCode?.toString(),y=r[u.assetTypeId]?.assetTypeCode?.toString(),d=o[i],T=r[d.networkSourceId].layerId.toString(),f=r[d.assetGroupId]?.assetGroupCode?.toString(),h=r[d.assetTypeId],v=h?.assetTypeCode?.toString(),S=e[p]?e[p]:{assetGroupHash:{}};if(!(l&&y&&f&&v))continue;const g=S.assetGroupHash[l]?S.assetGroupHash[l]:{assetTypeHash:{}},I=g.assetTypeHash[y]?g.assetTypeHash[y]:{};if(I[T]=I[T]?I[T]:{},a){I[p]=I[p]?I[p]:{};const e=`(assetgroup = ${l} AND assettype = ${y})`;I[p].anyVertex=I[p].anyVertex?`${I[p].anyVertex}`:`${e}`,"esriNECPEndVertex"===h.connectivityPolicy&&(I[p].endVertex=I[p]?.endVertex?`${I[p].endVertex}`:`${e}`)}const G=`(assetgroup = ${f} AND assettype = ${v})`;I[T].anyVertex=I[T]?.anyVertex?`${I[T].anyVertex} OR ${G}`:`${G}`,"esriNECPEndVertex"===h.connectivityPolicy&&(I[T].endVertex=I[T]?.endVertex?`${I[T].endVertex} OR ${G}`:`${G}`),g.assetTypeHash[y]=I,S.assetGroupHash[l]=g,e[p]=S}}this.rulesHash=e}));function o(){return t.apply(this,arguments)}return o}(),r}(r.JSONSupportMixin(s));t.__decorate([n.property({constructOnly:!0})],p.prototype,"layer",void 0),t.__decorate([n.property({constructOnly:!0})],p.prototype,"rules",void 0),t.__decorate([n.property()],p.prototype,"rulesHash",void 0),t.__decorate([n.property({constructOnly:!0})],p.prototype,"request",void 0),p=t.__decorate([u.subclass("esri.networks.RulesTable")],p);return p}));
