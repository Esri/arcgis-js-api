/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../request.js";import t from"../core/Loadable.js";import o from"../core/Logger.js";import{isSome as s}from"../core/maybe.js";import{MultiOriginJSONMixin as a}from"../core/MultiOriginJSONSupport.js";import{isAbortError as i}from"../core/promiseUtils.js";import{urlToObject as l}from"../core/urlUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import u from"../geometry/Extent.js";import d from"../geometry/SpatialReference.js";import{parse as c}from"../layers/support/arcgisLayerUrl.js";const y=o.getLogger("esri.networks.Network");let m=class extends(a(t)){constructor(e){super(e),this.id=null,this.title=null,this.layerUrl=null,this.dataElement=null,this.fullExtent=null,this.spatialReference=null,this.type=null,this.sourceJSON=null}initialize(){this.when().catch((e=>{i(e)||y.error("#load()",`Failed to load layer (title: '${this.title??"no title"}', id: '${this.id??"no id"}')`,{error:e})}))}get datasetName(){return this.dataElement?.name}get owner(){return this.dataElement?.userIdentity}get schemaGeneration(){return this.dataElement?.schemaGeneration}get parsedUrl(){const e=this.layerUrl;return e?l(e):null}get featureServiceUrl(){const e=this.parsedUrl&&c(this.parsedUrl.path);return s(e)?e.url.path:null}get networkServiceUrl(){return this.featureServiceUrl?this.featureServiceUrl.replace(/\/FeatureServer/i,"/UtilityNetworkServer"):null}get layerId(){const e=this.parsedUrl&&c(this.parsedUrl.path);return s(e)?e.sublayer:null}async load(e){return this.addResolvingPromise(this._fetchDataElement(this.featureServiceUrl,this.layerId.toString(),e)),this.addResolvingPromise(this._fetchLayerMetaData(this.layerUrl,e)),this}getLayerIdBySourceId(e){if(this.dataElement){const r=this.dataElement.domainNetworks;for(const t of r){for(const r of t.edgeSources?t.edgeSources:[])if(r.sourceId===e)return r.layerId;for(const r of t.junctionSources?t.junctionSources:[])if(r.sourceId===e)return r.layerId}return null}return null}async _fetchLayerMetaData(e,t){const o=await r(e,{responseType:"json",query:{f:"json"},...t});this.sourceJSON=o.data,this.read(o.data,{origin:"service"})}async _fetchDataElement(e,t,o){if(this.dataElement)return;const s=await r(`${e}/queryDataElements`,{responseType:"json",query:{layers:JSON.stringify([t]),f:"json"},...o}).then((e=>e.data.layerDataElements?.[0]));s&&this.read(s,{origin:"service"})}};e([n({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}}},read:!1}})],m.prototype,"id",void 0),e([n({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}}},read:!1}})],m.prototype,"title",void 0),e([n({type:String,nonNullable:!0,json:{origins:{"web-map":{read:{source:"url"},write:{target:"url",isRequired:!0}}},read:!1}})],m.prototype,"layerUrl",void 0),e([n({type:Object,json:{origins:{service:{read:!0}},read:!1}})],m.prototype,"dataElement",void 0),e([n({type:u,json:{origins:{service:{read:{source:"extent"}}},read:!1}})],m.prototype,"fullExtent",void 0),e([n({type:d,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:!1}})],m.prototype,"spatialReference",void 0),e([n({type:["utility","trace"],readOnly:!0,json:{read:!1,write:!1}})],m.prototype,"type",void 0),e([n({readOnly:!0})],m.prototype,"datasetName",null),e([n({readOnly:!0})],m.prototype,"owner",null),e([n({readOnly:!0})],m.prototype,"schemaGeneration",null),e([n({readOnly:!0})],m.prototype,"parsedUrl",null),e([n({readOnly:!0})],m.prototype,"featureServiceUrl",null),e([n({readOnly:!0})],m.prototype,"networkServiceUrl",null),e([n({readOnly:!0})],m.prototype,"layerId",null),e([n()],m.prototype,"sourceJSON",void 0),m=e([p("esri.networks.Network")],m);const h=m;export{h as default};
