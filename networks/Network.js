/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../request","../core/Error","../core/Loadable","../core/Logger","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/accessorSupport/decorators/subclass","../geometry/Extent","../geometry/SpatialReference","../layers/mixins/EditBusLayer","../layers/support/arcgisLayerUrl","./support/TopologyValidationJobInfo","./support/utils","../rest/networks/support/QueryNamedTraceConfigurationsParameters"],(function(e,r,t,o,n,a,i,s,l,u,d,c,p,y,f,h,v,m,g,w,_,S){"use strict";let k=function(t){function a(e){var r;return(r=t.call(this,e)||this).id=null,r.title=null,r.layerUrl=null,r.dataElement=null,r.fullExtent=null,r.spatialReference=null,r.type=null,r.sourceJSON=null,r}r._inheritsLoose(a,t),a.fromPortalItem=function(e){return _.networkFromPortalItem(e)};var l=a.prototype;return l.initialize=function(){this.when().catch((e=>{u.isAbortError(e)||i.getLogger(this.declaredClass).error("#load()",`Failed to load layer (title: '${this.title??"no title"}', id: '${this.id??"no id"}')`,{error:e})}))},l.load=function(){var e=r._asyncToGenerator((function*(e){return this.addResolvingPromise(this._fetchDataElement(this.featureServiceUrl,this.layerId.toString(),e)),this.addResolvingPromise(this._fetchLayerMetaData(this.layerUrl,e)),this}));function t(r){return e.apply(this,arguments)}return t}(),l.getLayerIdBySourceId=function(e){if(this.dataElement){const r=this.dataElement.domainNetworks;for(const t of r){for(const r of t.edgeSources?t.edgeSources:[])if(r.sourceId===e)return r.layerId;for(const r of t.junctionSources?t.junctionSources:[])if(r.sourceId===e)return r.layerId}return null}return null},l.queryNamedTraceConfigurations=function(){var t=r._asyncToGenerator((function*(r,t){const{queryNamedTraceConfigurations:o}=yield new Promise(((r,t)=>e(["../rest/networks/queryNamedTraceConfigurations"],r,t))),n=this.networkServiceUrl,a=new S({...r});return(yield o(n,a,{...t}))?.namedTraceConfigurations??null}));function o(e,r){return t.apply(this,arguments)}return o}(),l.validateTopology=function(){var t=r._asyncToGenerator((function*(r,t){if(!r.validateArea)throw new n("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");const{validateNetworkTopology:o}=yield new Promise(((r,t)=>e(["../rest/networks/validateNetworkTopology"],r,t))),a=this.networkServiceUrl,i=yield o(a,r,{...t});if(i?.serviceEdits){const e={edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],editedFeatures:i.serviceEdits,exceededTransferLimit:!1};m.editEventBus.emit("edits",{serviceUrl:this.featureServiceUrl??"",layerId:null,event:e})}return i}));function o(e,r){return t.apply(this,arguments)}return o}(),l.submitTopologyValidationJob=function(){var t=r._asyncToGenerator((function*(r,t){if(!r.validateArea)throw new n("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");if(!r.gdbVersion)throw new n("network:undefined-gdb-version","version must be defined");const{submitValidateNetworkTopologyJob:o}=yield new Promise(((r,t)=>e(["../rest/networks/validateNetworkTopology"],r,t))),a=this.networkServiceUrl,i=yield o(a,r,{...t});return new w({statusUrl:i,featureServiceUrl:this.featureServiceUrl})}));function o(e,r){return t.apply(this,arguments)}return o}(),l._fetchLayerMetaData=function(){var e=r._asyncToGenerator((function*(e,r){const t=yield o(e,{responseType:"json",query:{f:"json"},...r});this.sourceJSON=t.data,this.read(t.data,{origin:"service"})}));function t(r,t){return e.apply(this,arguments)}return t}(),l._fetchDataElement=function(){var e=r._asyncToGenerator((function*(e,r,t){if(this.dataElement)return;const n=yield o(`${e}/queryDataElements`,{responseType:"json",query:{layers:JSON.stringify([r]),f:"json"},...t}).then((e=>e.data.layerDataElements?.[0]));n&&this.read(n,{origin:"service"})}));function t(r,t,o){return e.apply(this,arguments)}return t}(),r._createClass(a,[{key:"datasetName",get:function(){return this.dataElement?.name??null}},{key:"owner",get:function(){return this.dataElement?.userIdentity??null}},{key:"schemaGeneration",get:function(){return this.dataElement?.schemaGeneration??null}},{key:"parsedUrl",get:function(){return d.urlToObject(this.layerUrl)}},{key:"featureServiceUrl",get:function(){const e=this.parsedUrl&&g.parse(this.parsedUrl.path);return s.isSome(e)?e.url.path:null}},{key:"networkServiceUrl",get:function(){return this.featureServiceUrl?this.featureServiceUrl.replace(/\/FeatureServer/i,"/UtilityNetworkServer"):null}},{key:"layerId",get:function(){const e=this.parsedUrl&&g.parse(this.parsedUrl.path);return s.isSome(e)?e.sublayer:null}},{key:"networkSystemLayers",get:function(){return null}}]),a}(l.MultiOriginJSONMixin(a));t.__decorate([c.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:!0}},read:!1}})],k.prototype,"id",void 0),t.__decorate([c.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:{source:"name"}}},read:!1}})],k.prototype,"title",void 0),t.__decorate([c.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:{source:"url"},write:{target:"url",isRequired:!0}}},read:!1}})],k.prototype,"layerUrl",void 0),t.__decorate([c.property({type:Object,json:{origins:{service:{read:!0}},read:!1}})],k.prototype,"dataElement",void 0),t.__decorate([c.property({type:h,json:{origins:{service:{read:{source:"extent"}}},read:!1}})],k.prototype,"fullExtent",void 0),t.__decorate([c.property({type:v,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:!1}})],k.prototype,"spatialReference",void 0),t.__decorate([c.property({type:["utility","trace"],readOnly:!0,json:{read:!1,write:!1}})],k.prototype,"type",void 0),t.__decorate([c.property({readOnly:!0})],k.prototype,"datasetName",null),t.__decorate([c.property({readOnly:!0})],k.prototype,"owner",null),t.__decorate([c.property({readOnly:!0})],k.prototype,"schemaGeneration",null),t.__decorate([c.property({readOnly:!0})],k.prototype,"parsedUrl",null),t.__decorate([c.property({readOnly:!0})],k.prototype,"featureServiceUrl",null),t.__decorate([c.property({readOnly:!0})],k.prototype,"networkServiceUrl",null),t.__decorate([c.property({readOnly:!0})],k.prototype,"layerId",null),t.__decorate([c.property()],k.prototype,"sourceJSON",void 0),t.__decorate([c.property({readOnly:!0})],k.prototype,"networkSystemLayers",null),k=t.__decorate([f.subclass("esri.networks.Network")],k);return k}));
