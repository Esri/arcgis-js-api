/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../maybe","../Error","../events","../promiseUtils","./registry","./utils","../../views/support/Scheduler"],(function(e,t,s,o,n,r,i){"use strict";const{CLOSE:a,ABORT:c,INVOKE:l,RESPONSE:h,OPEN_PORT:u,ON:_}=r.MessageType;let p=function(){function e(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}var t=e.prototype;return t.push=function(e){e.type===r.MessageType.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))},t.clear=function(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null},t._process=function(){this._timer=null;for(const e of this._invokeMessages)this._cancelledJobIds.has(e.jobId)||this._invoke(e);this._cancelledJobIds.clear(),this._invokeMessages.length=0},e}(),g=function(){function g(e,t){this._port=e,this._outJobs=new Map,this._inJobs=new Map,this._invokeQueue=new p((e=>this._onInvokeMessage(e))),this._messageQueue=new Array,this._client=t.client,this._onMessage=this._onMessage.bind(this),this._channel=t.channel,t.scheduler&&(this._frameTask=t.scheduler.registerTask(i.Task.REMOTE_CLIENT,(e=>this._update(e)),(()=>this._messageQueue.length>0))),this._port.addEventListener("message",this._onMessage),this._port.start()}g.connect=function(e){const t=new MessageChannel;let s;s="function"==typeof e?new e:"default"in e&&"function"==typeof e.default?new e.default:e;const o=new g(t.port1,{channel:t,client:s});return"object"==typeof s&&"remoteClient"in s&&(s.remoteClient=o),g.clients.set(o,s),t.port2},g.loadWorker=function(e){const t=n.registry[e];return t?t():o.resolve(null)};var d=g.prototype;return d.close=function(){this._post({type:a}),this._close()},d.isBusy=function(){return this._outJobs.size>0},d.invoke=function(e,s,n){const i=n&&n.signal,a=n&&n.transferList;if(!this._port)return o.reject(new t("worker:port-closed",`Cannot call invoke('${e}'), port is closed`,{methodName:e,data:s}));const h=r.newJobId();return o.create(((t,n)=>{const r=o.onAbortOrThrow(i,(()=>{var e;const t=this._outJobs.get(h);t&&(this._outJobs.delete(h),null==(e=t.abortHandle)||e.remove(),this._post({type:c,jobId:h}),n(o.createAbortError()))})),u={resolve:t,reject:n,abortHandle:r,debugInfo:e};this._outJobs.set(h,u),this._post({type:l,jobId:h,methodName:e,abortable:null!=i},s,a)}))},d.on=function(e,t){const s=new MessageChannel;function o(e){t(e.data)}return this._port.postMessage({type:r.MessageType.ON,eventType:e,port:s.port2},[s.port2]),s.port1.addEventListener("message",o),s.port1.start(),{remove(){s.port1.postMessage({type:r.MessageType.CLOSE}),s.port1.close(),s.port1.removeEventListener("message",o)}}},d.openPort=function(){const e=new MessageChannel;return this._post({type:u,port:e.port2}),e.port1},d._close=function(){this._channel&&(this._channel=null),this._port.removeEventListener("message",this._onMessage),this._port.close(),this._outJobs.forEach((e=>{var t;null==(t=e.abortHandle)||t.remove(),e.reject(o.createAbortError(`Worker closing, aborting job calling '${e.debugInfo}'`))})),this._inJobs.clear(),this._outJobs.clear(),this._invokeQueue.clear(),this._port=this._client=null,this._frameTask=e.removeMaybe(this._frameTask)},d._onMessage=function(t){e.isSome(this._frameTask)?this._messageQueue.push(t):this._processMessage(t)},d._processMessage=function(e){const t=r.receiveMessage(e);if(t)switch(t.type){case h:this._onResponseMessage(t);break;case l:this._invokeQueue.push(t);break;case c:this._onAbortMessage(t);break;case a:this._onCloseMessage();break;case u:this._onOpenPortMessage(t);break;case _:this._onOnMessage(t)}},d._onAbortMessage=function(e){const t=this._inJobs,s=e.jobId,o=t.get(s);this._invokeQueue.push(e),o&&(o.controller&&o.controller.abort(),t.delete(s))},d._onCloseMessage=function(){const e=this._client;this._close(),e&&"destroy"in e&&g.clients.get(this)===e&&e.destroy(),g.clients.delete(this),e&&e.remoteClient&&(e.remoteClient=null)},d._onInvokeMessage=function(e){const{methodName:t,jobId:s,data:n,abortable:i}=e,a=i?o.createAbortController():null,c=this._inJobs;let l,u=this._client,_=u[t];try{if(!_&&t&&-1!==t.indexOf(".")){const e=t.split(".");for(let t=0;t<e.length-1;t++)u=u[e[t]],_=u[e[t+1]]}if("function"!=typeof _)throw new TypeError(`${t} is not a function`);l=_.call(u,n,{client:this,signal:a?a.signal:null})}catch(e){return void this._post({type:h,jobId:s,error:r.toInvokeError(e)})}o.isPromiseLike(l)?(c.set(s,{controller:a,promise:l}),l.then((e=>{c.has(s)&&(c.delete(s),this._post({type:h,jobId:s},e))}),(e=>{c.has(s)&&(c.delete(s),o.isAbortError(e)||this._post({type:h,jobId:s,error:r.toInvokeError(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:h,jobId:s},l)},d._onOpenPortMessage=function(e){new g(e.port,{client:this._client})},d._onOnMessage=function(e){const{port:t}=e,o=this._client.on(e.eventType,(e=>{t.postMessage(e)})),n=s.on(e.port,"message",(e=>{r.receiveMessage(e).type===r.MessageType.CLOSE&&(n.remove(),o.remove(),t.close())}))},d._onResponseMessage=function(e){var s;const{jobId:o,error:n,data:r}=e,i=this._outJobs;if(!i.has(o))return;const a=i.get(o);i.delete(o),null==(s=a.abortHandle)||s.remove(),n?a.reject(t.fromJSON(JSON.parse(n))):a.resolve(r)},d._update=function(e){for(;!e.done&&this._messageQueue.length>0;)this._processMessage(this._messageQueue.shift()),e.madeProgress()},d._post=function(e,t,s){return r.postMessage(this._port,e,t,s)},g}();return g.clients=new Map,g}));
