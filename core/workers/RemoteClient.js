/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../kernel","../Error","../events","../maybe","../promiseUtils","./registry","./utils","../../support/revision"],(function(e,t,s,o,n,i,r,a){"use strict";const{CLOSE:l,ABORT:c,INVOKE:h,RESPONSE:u,OPEN_PORT:p,ON:_}=r.MessageType;let d=function(){function e(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}var t=e.prototype;return t.push=function(e){e.type===r.MessageType.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))},t.clear=function(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null},t._process=function(){this._timer=null;for(const e of this._invokeMessages)this._cancelledJobIds.has(e.jobId)||this._invoke(e);this._cancelledJobIds.clear(),this._invokeMessages.length=0},e}(),g=function(){function e(e,t){this._port=e,this._outJobs=new Map,this._inJobs=new Map,this._invokeQueue=new d((e=>this._onInvokeMessage(e))),this._client=t.client,this._onMessage=this._onMessage.bind(this),this._channel=t.channel,this._schedule=t.schedule,this._port.addEventListener("message",this._onMessage),this._port.start()}e.connect=function(t){const s=new MessageChannel;let o;o="function"==typeof t?new t:"default"in t&&"function"==typeof t.default?new t.default:t;const n=new e(s.port1,{channel:s,client:o});return"object"==typeof o&&"remoteClient"in o&&(o.remoteClient=n),e.clients.set(n,o),s.port2},e.loadWorker=function(e){const t=i.registry[e];return t?t():Promise.resolve(null)};var a=e.prototype;return a.close=function(){this._post({type:l}),this._close()},a.isBusy=function(){return this._outJobs.size>0},a.invoke=function(e,s,o){const i=o&&o.signal,a=o&&o.transferList;if(!this._port)return Promise.reject(new t("worker:port-closed",`Cannot call invoke('${e}'), port is closed`,{methodName:e,data:s}));const l=r.newJobId();return new Promise(((t,o)=>{const r=n.onAbortOrThrow(i,(()=>{var e;const t=this._outJobs.get(l);t&&(this._outJobs.delete(l),null==(e=t.abortHandle)||e.remove(),this._post({type:c,jobId:l}),o(n.createAbortError()))})),u={resolve:t,reject:o,abortHandle:r,debugInfo:e};this._outJobs.set(l,u),this._post({type:h,jobId:l,methodName:e,abortable:null!=i},s,a)}))},a.on=function(e,t){const s=new MessageChannel;function o(e){t(e.data)}return this._port.postMessage({type:r.MessageType.ON,eventType:e,port:s.port2},[s.port2]),s.port1.addEventListener("message",o),s.port1.start(),{remove(){s.port1.postMessage({type:r.MessageType.CLOSE}),s.port1.close(),s.port1.removeEventListener("message",o)}}},a.openPort=function(){const e=new MessageChannel;return this._post({type:p,port:e.port2}),e.port1},a._close=function(){this._channel&&(this._channel=null),this._port.removeEventListener("message",this._onMessage),this._port.close(),this._outJobs.forEach((e=>{var t;null==(t=e.abortHandle)||t.remove(),e.reject(n.createAbortError(`Worker closing, aborting job calling '${e.debugInfo}'`))})),this._inJobs.clear(),this._outJobs.clear(),this._invokeQueue.clear(),this._port=this._client=this._schedule=null},a._onMessage=function(e){o.isSome(this._schedule)?this._schedule((()=>this._processMessage(e))):this._processMessage(e)},a._processMessage=function(e){const t=r.receiveMessage(e);if(t)switch(t.type){case u:this._onResponseMessage(t);break;case h:this._invokeQueue.push(t);break;case c:this._onAbortMessage(t);break;case l:this._onCloseMessage();break;case p:this._onOpenPortMessage(t);break;case _:this._onOnMessage(t)}},a._onAbortMessage=function(e){const t=this._inJobs,s=e.jobId,o=t.get(s);this._invokeQueue.push(e),o&&(o.controller&&o.controller.abort(),t.delete(s))},a._onCloseMessage=function(){const t=this._client;this._close(),t&&"destroy"in t&&e.clients.get(this)===t&&t.destroy(),e.clients.delete(this),t&&t.remoteClient&&(t.remoteClient=null)},a._onInvokeMessage=function(e){const{methodName:t,jobId:s,data:o,abortable:i}=e,a=i?n.createAbortController():null,l=this._inJobs;let c,h=this._client,p=h[t];try{if(!p&&t&&-1!==t.indexOf(".")){const e=t.split(".");for(let t=0;t<e.length-1;t++)h=h[e[t]],p=h[e[t+1]]}if("function"!=typeof p)throw new TypeError(`${t} is not a function`);c=p.call(h,o,{client:this,signal:a?a.signal:null})}catch(_){return void this._post({type:u,jobId:s,error:r.toInvokeError(_)})}n.isPromiseLike(c)?(l.set(s,{controller:a,promise:c}),c.then((e=>{l.has(s)&&(l.delete(s),this._post({type:u,jobId:s},e))}),(e=>{l.has(s)&&(l.delete(s),n.isAbortError(e)||this._post({type:u,jobId:s,error:r.toInvokeError(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:u,jobId:s},c)},a._onOpenPortMessage=function(t){new e(t.port,{client:this._client})},a._onOnMessage=function(e){const{port:t}=e,o=this._client.on(e.eventType,(e=>{t.postMessage(e)})),n=s.on(e.port,"message",(e=>{r.receiveMessage(e).type===r.MessageType.CLOSE&&(n.remove(),o.remove(),t.close())}))},a._onResponseMessage=function(e){var s;const{jobId:o,error:n,data:i}=e,r=this._outJobs;if(!r.has(o))return;const a=r.get(o);r.delete(o),null==(s=a.abortHandle)||s.remove(),n?a.reject(t.fromJSON(JSON.parse(n))):a.resolve(i)},a._post=function(e,t,s){return r.postMessage(this._port,e,t,s)},e}();return g.kernelInfo={revision:a.commitHash,version:e.version,buildDate:a.buildDate},g.clients=new Map,g}));
