/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../support/revision","../maybe","../Error","../events","../promiseUtils","../../kernel","../../views/support/Scheduler","./registry","./utils"],(function(e,t,s,o,n,r,i,a,l){"use strict";const{CLOSE:c,ABORT:h,INVOKE:u,RESPONSE:_,OPEN_PORT:p,ON:d}=l.MessageType;let g=function(){function e(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}var t=e.prototype;return t.push=function(e){e.type===l.MessageType.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))},t.clear=function(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null},t._process=function(){this._timer=null;for(const e of this._invokeMessages)this._cancelledJobIds.has(e.jobId)||this._invoke(e);this._cancelledJobIds.clear(),this._invokeMessages.length=0},e}(),b=function(){function e(e,s){this._port=e,this._outJobs=new Map,this._inJobs=new Map,this._invokeQueue=new g((e=>this._onInvokeMessage(e))),this._messageQueue=new Array,this._client=s.client,this._onMessage=this._onMessage.bind(this),this._channel=s.channel,t.isSome(s.scheduler)&&(this._frameTask=s.scheduler.registerTask(i.Task.REMOTE_CLIENT,(e=>this._update(e)),(()=>this._messageQueue.length>0))),this._port.addEventListener("message",this._onMessage),this._port.start()}e.connect=function(t){const s=new MessageChannel;let o;o="function"==typeof t?new t:"default"in t&&"function"==typeof t.default?new t.default:t;const n=new e(s.port1,{channel:s,client:o});return"object"==typeof o&&"remoteClient"in o&&(o.remoteClient=n),e.clients.set(n,o),s.port2},e.loadWorker=function(e){const t=a.registry[e];return t?t():Promise.resolve(null)};var r=e.prototype;return r.close=function(){this._post({type:c}),this._close()},r.isBusy=function(){return this._outJobs.size>0},r.invoke=function(e,t,o){const r=o&&o.signal,i=o&&o.transferList;if(!this._port)return Promise.reject(new s("worker:port-closed",`Cannot call invoke('${e}'), port is closed`,{methodName:e,data:t}));const a=l.newJobId();return new Promise(((s,o)=>{const l=n.onAbortOrThrow(r,(()=>{var e;const t=this._outJobs.get(a);t&&(this._outJobs.delete(a),null==(e=t.abortHandle)||e.remove(),this._post({type:h,jobId:a}),o(n.createAbortError()))})),c={resolve:s,reject:o,abortHandle:l,debugInfo:e};this._outJobs.set(a,c),this._post({type:u,jobId:a,methodName:e,abortable:null!=r},t,i)}))},r.on=function(e,t){const s=new MessageChannel;function o(e){t(e.data)}return this._port.postMessage({type:l.MessageType.ON,eventType:e,port:s.port2},[s.port2]),s.port1.addEventListener("message",o),s.port1.start(),{remove(){s.port1.postMessage({type:l.MessageType.CLOSE}),s.port1.close(),s.port1.removeEventListener("message",o)}}},r.openPort=function(){const e=new MessageChannel;return this._post({type:p,port:e.port2}),e.port1},r._close=function(){this._channel&&(this._channel=null),this._port.removeEventListener("message",this._onMessage),this._port.close(),this._outJobs.forEach((e=>{var t;null==(t=e.abortHandle)||t.remove(),e.reject(n.createAbortError(`Worker closing, aborting job calling '${e.debugInfo}'`))})),this._inJobs.clear(),this._outJobs.clear(),this._invokeQueue.clear(),this._port=this._client=null,this._frameTask=t.removeMaybe(this._frameTask)},r._onMessage=function(e){t.isSome(this._frameTask)?this._messageQueue.push(e):this._processMessage(e)},r._processMessage=function(e){const t=l.receiveMessage(e);if(t)switch(t.type){case _:this._onResponseMessage(t);break;case u:this._invokeQueue.push(t);break;case h:this._onAbortMessage(t);break;case c:this._onCloseMessage();break;case p:this._onOpenPortMessage(t);break;case d:this._onOnMessage(t)}},r._onAbortMessage=function(e){const t=this._inJobs,s=e.jobId,o=t.get(s);this._invokeQueue.push(e),o&&(o.controller&&o.controller.abort(),t.delete(s))},r._onCloseMessage=function(){const t=this._client;this._close(),t&&"destroy"in t&&e.clients.get(this)===t&&t.destroy(),e.clients.delete(this),t&&t.remoteClient&&(t.remoteClient=null)},r._onInvokeMessage=function(e){const{methodName:t,jobId:s,data:o,abortable:r}=e,i=r?n.createAbortController():null,a=this._inJobs;let c,h=this._client,u=h[t];try{if(!u&&t&&-1!==t.indexOf(".")){const e=t.split(".");for(let t=0;t<e.length-1;t++)h=h[e[t]],u=h[e[t+1]]}if("function"!=typeof u)throw new TypeError(`${t} is not a function`);c=u.call(h,o,{client:this,signal:i?i.signal:null})}catch(p){return void this._post({type:_,jobId:s,error:l.toInvokeError(p)})}n.isPromiseLike(c)?(a.set(s,{controller:i,promise:c}),c.then((e=>{a.has(s)&&(a.delete(s),this._post({type:_,jobId:s},e))}),(e=>{a.has(s)&&(a.delete(s),n.isAbortError(e)||this._post({type:_,jobId:s,error:l.toInvokeError(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:_,jobId:s},c)},r._onOpenPortMessage=function(t){new e(t.port,{client:this._client})},r._onOnMessage=function(e){const{port:t}=e,s=this._client.on(e.eventType,(e=>{t.postMessage(e)})),n=o.on(e.port,"message",(e=>{l.receiveMessage(e).type===l.MessageType.CLOSE&&(n.remove(),s.remove(),t.close())}))},r._onResponseMessage=function(e){var t;const{jobId:o,error:n,data:r}=e,i=this._outJobs;if(!i.has(o))return;const a=i.get(o);i.delete(o),null==(t=a.abortHandle)||t.remove(),n?a.reject(s.fromJSON(JSON.parse(n))):a.resolve(r)},r._update=function(e){for(;!e.done&&this._messageQueue.length>0;)this._processMessage(this._messageQueue.shift()),e.madeProgress()},r._post=function(e,t,s){return l.postMessage(this._port,e,t,s)},e}();return b.kernelInfo={revision:e.commitHash,version:r.version,buildDate:e.buildDate},b.clients=new Map,b}));
