/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import t from"../Error.js";import r from"../has.js";import{throwIfAborted as e}from"../promiseUtils.js";import o from"./Connection.js";export{default as Connection}from"./Connection.js";import n from"./RemoteClient.js";export{default as RemoteClient}from"./RemoteClient.js";import i from"./WorkerOwner.js";let s=r("esri-workers-debug")?1:r("host-browser")?navigator.hardwareConcurrency-1:0;s||(s=r("safari")&&r("mac")||r("trident")?7:2);let a=0;const l=[];function c(){h()}function m(t,r){return f(t,{client:r})}async function f(t,r){const e=new o;return await e.open(t,r),e}async function u(o,i={}){if("string"!=typeof o)throw new t("workers:undefined-module","modulePath is missing");let c=i.strategy||"distributed";if(r("host-webworker")&&!r("esri-workers")&&(c="local"),"local"===c){let t=await n.loadWorker(o);t||(t=await import(
/* @vite-ignore */
/* webpackIgnore: true */
o)),e(i.signal);const r=i.client||t;return f([n.connect(t)],{...i,client:r})}if(await h(),e(i.signal),"dedicated"===c){const t=a++%s;return f([await l[t].open(o,i)],i)}if(i.maxNumWorkers&&i.maxNumWorkers>0){const t=Math.min(i.maxNumWorkers,s);if(t<s){const r=new Array(t);for(let e=0;e<t;++e){const t=a++%s;r[e]=l[t].open(o,i)}return f(r,i)}}return f(l.map((t=>t.open(o,i))),i)}function p(){d&&(w.abort(),d=null);for(let t=0;t<l.length;t++)l[t]&&l[t].terminate();l.length=0}let w,d=null;async function h(){if(d)return d;w=new AbortController;const t=[];for(let r=0;r<s;r++){const e=i.create(r).then((t=>(l[r]=t,t)));t.push(e)}return d=Promise.all(t),d}export{c as initialize,u as open,m as openWithPorts,p as terminate};
