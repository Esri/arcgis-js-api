/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../chunks/_rollupPluginBabelHelpers","../core/Error","../layers/support/Field"],(function(e,t,n,i){"use strict";function r(e){return Object.keys(e.attributes).map((t=>{const n=e.attributes[t];return"objectid"===t.toLowerCase()||"fid"===t.toLowerCase()?new i({name:t,alias:t,type:"oid"}):new i("number"==typeof n?{name:t,alias:t,type:"double"}:{name:t,alias:t,type:"string"})}))}function o(e){if(!e.fields){const t=e.features[0];if(t.layer){e.fields=t.layer.fields;const n=Object.keys(t.attributes),i=e.fields.filter((e=>n.includes(e.name)));e.fields=i}else e.fields=r(t)}return e}function a(e){return e.map((({attributes:e})=>e))}function l(e){const{delimiter:t,fields:n=[],outFields:i=[]}=e,r=t||",",o=n.map((e=>e.name));return e=>{let t="";return o.filter((e=>i.includes(e))).forEach((i=>{const o=n.find((({name:e})=>e===i));let a=e[i]||"";if("date"===o?.type&&(a=new Date(a).toString()),o?.domain&&"coded-value"===o.domain.type){const e=o.domain.codedValues.find((e=>a===e.code));e&&(a=e.name)}"string"==typeof a&&a.includes(r)&&(a=`"${a}"`),t+=`${a}${r}`})),`${t}\r\n`}}function s(e){return u.apply(this,arguments)}function u(){return(u=t._asyncToGenerator((function*(e,{includeGeometry:t=!0,delimiter:r=",",outFields:s=["*"]}={}){if(e=o(e),t&&"point"!==e.geometryType)throw new n("export-csv:invalid-geometries",`the input geometry ${e.geometryType} is not supported, must be point`);const{features:u}=e;if(!u.length)return null;let d=e.fields;const[c]=s;"*"===c&&(s=d.map((e=>e.name))),t&&"point"===e.geometryType&&(d.some((e=>"x"===e.name||"y"===e.name))||(d=[...d,new i({name:"lon",alias:"Longitude",type:"double"}),new i({name:"lat",alias:"Latitude",type:"double"})],s=[...s,"lon","lat"]),u.forEach((e=>{e.attributes.lon=e.geometry.longitude,e.attributes.lat=e.geometry.latitude}))),d=d.filter((e=>s.includes(e.name)));const m=r||",",f=a(u),p=d.map((e=>e.name)).join(m),y=l({delimiter:m,outFields:s||d.map((e=>e.name)),fields:d});let b=`${p}${m}\r\n`;f.forEach((e=>{b+=y(e)}));const g=new RegExp(`${m}\r\ns*$`,"g");return b.replace(g,"")}))).apply(this,arguments)}e.attributeToString=l,e.convertFeaturesToCSV=s,e.extractAttributes=a,e.extractFieldsFromFeature=r,e.validateFeatureSetFields=o,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
