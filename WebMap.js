// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","./kernel","./Map","./Viewpoint","./core/arrayUtils","./core/Collection","./core/Error","./core/Loadable","./core/loadAll","./core/Logger","./core/maybe","./core/MultiOriginJSONSupport","./core/Promise","./core/promiseUtils","./core/urlUtils","./core/watchUtils","./core/accessorSupport/decorators","./core/accessorSupport/originUtils","./core/accessorSupport/read","./geometry/SpatialReference","./geometry/support/webMercatorUtils","./layers/support/arcgisLayerUrl","./portal/Portal","./portal/PortalItem","./portal/support/portalItemUtils","./tasks/support/ProjectParameters","./webdoc/RangeInfo","./webdoc/Widgets","./webdoc/support/thumbnailUtils","./webdoc/support/writeUtils","./webmap/ApplicationProperties","./webmap/Bookmark","./webmap/InitialViewProperties","./webmap/Version","./webmap/background/ColorBackground","@dojo/framework/shim/Promise"],(function(e,t,r,o,i,n,a,s,p,l,u,c,d,h,y,_,m,f,g,w,v,b,A,S,I,O,T,P,L,V,U,W,F,M,R,x,N){"use strict";var k=new x.default(2,18),C=s.ofType(M),j=c.getLogger("esri.WebMap"),K=new Map;K.set("image/jpeg","jpeg"),K.set("image/jpg","jpg"),K.set("image/png","png"),K.set("image/gif","gif");var J=["NatGeo_World_Map","Ocean_Basemap","USA_Topo_Maps","World_Imagery","World_Street_Map","World_Terrain_Base","World_Topo_Map","World_Hillshade","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Reference/World_Boundaries_and_Places","Reference/World_Reference_Overlay","Reference/World_Transportation"].map((function(e){return e.toLowerCase()}));return function(t){function i(e){var r=t.call(this,e)||this;return r.applicationProperties=null,r.bookmarks=new C,r.initialViewProperties=new R,r.portalItem=null,r.presentation=null,r.sourceVersion=null,r.widgets=null,r.authoringApp=r.authoringAppVersion=null,r._isAuthoringAppSetByUser=r._isAuthoringAppVersionSetByUser=!1,r}return r.__extends(i,t),i.prototype.destroy=function(){var e=this.portalItem;this.portalItem=null,null==e||e.destroy()},i.prototype.initialize=function(){if(this.when().catch((function(e){j.error("#load()","Failed to load web map",e)})),this.resourceInfo){var e=void 0;try{e=this._validateJSON(this.resourceInfo)}catch(e){return void this.addResolvingPromise(_.reject(e))}this.read(e)}},Object.defineProperty(i.prototype,"authoringApp",{set:function(e){this._isAuthoringAppSetByUser=!0,this._set("authoringApp",e)},enumerable:!1,configurable:!0}),i.prototype.writeAuthoringApp=function(e,t){e&&this._isAuthoringAppSetByUser?t.authoringApp=e:t.authoringApp="ArcGIS API for JavaScript"},Object.defineProperty(i.prototype,"authoringAppVersion",{set:function(e){this._isAuthoringAppVersionSetByUser=!0,this._set("authoringAppVersion",e)},enumerable:!1,configurable:!0}),i.prototype.writeAuthoringAppVersion=function(e,t){e&&this._isAuthoringAppVersionSetByUser?t.authoringAppVersion=e:t.authoringAppVersion=o.version},i.prototype.readInitialViewProperties=function(e,t){var r=new R;return t.background&&(r.background=N.fromJSON(t.background)),t.initialState&&t.initialState.viewpoint&&(r.viewpoint=n.fromJSON(t.initialState.viewpoint)),t.mapRangeInfo&&(r.rangeInfo=L.fromJSON(t.mapRangeInfo)),t.spatialReference&&(r.spatialReference=b.fromJSON(t.spatialReference)),r},i.prototype.writeInitialViewProperties=function(e,t,r,o){if(e){var i=e.background;i&&i.color&&(t.background=i.write(null,o)),e.viewpoint&&(t.initialState={viewpoint:e.viewpoint.write(null,o)}),e.rangeInfo&&(t.mapRangeInfo=e.rangeInfo.toJSON(o)),e.spatialReference&&(t.spatialReference=e.spatialReference.write(null,o))}},i.prototype.writeLayers=function(e,t,r,o){t[r]=this._writeLayers(e,o,"operational-layers")},i.prototype.readSourceVersion=function(e,t){var r=t.version.split("."),o=r[0],i=r[1];return new x.default(parseInt(o,10),parseInt(i,10))},i.prototype.writeSourceVersion=function(e,t,r){t[r]=k.major+"."+k.minor},i.prototype.writeTables=function(e,t,r,o){var i=this._writeLayers(e,o,"tables");i.length&&(t[r]=i)},Object.defineProperty(i.prototype,"thumbnailUrl",{get:function(){return this.portalItem&&this.portalItem.thumbnailUrl||null},set:function(e){e?(this._override("thumbnailUrl",e),this._thumbnailFilename=this._generateCustomThumbnailFilename(e)):this._clearThumbnailOverride()},enumerable:!1,configurable:!0}),i.prototype.load=function(e){return this.addResolvingPromise(this._loadFromSource()),_.resolve(this)},i.prototype.loadAll=function(){var e=this;return u.loadAll(this,(function(t){t(e.ground,e.basemap,e.layers,e.tables)}))},i.prototype.read=function(e,o){var i=this;o=r.__assign(r.__assign({},o),{origin:"web-map"});var n=this._getAuthoringPropsState();v.readLoadable(this,e,(function(r){return t.prototype.read.call(i,e,r)}),o),this._restoreAuthoringPropsFromState(n)},i.prototype.write=function(e,o){if("loaded"!==this.loadStatus){var i=new p("webmap:not-loaded","Web map must be loaded before it can be serialized");throw j.error("#toJSON()","Web map must be loaded before it can be serialized",this.loadError||this.loadStatus),i}return this._removeDanglingLayerRefs(),o=r.__assign(r.__assign({},o),{origin:"web-map",restrictedWebMapWriting:!0,webmap:this}),t.prototype.write.call(this,e,o)},i.prototype.save=function(e){return r.__awaiter(this,void 0,void 0,(function(){var t,o,i;return r.__generator(this,(function(r){switch(r.label){case 0:return e=e||{},this._validateItem(),[4,this._updateFromPromise];case 1:return r.sent(),[4,this.load()];case 2:return r.sent(),[4,this._loadLayerContainers()];case 3:return r.sent(),this._validateMap(),t=this.portalItem,o={origin:"web-map",messages:[],writtenProperties:[],url:t.itemUrl&&m.urlToObject(t.itemUrl),portal:t.portal||I.getDefault()},i=this.write(null,o),this._validateJSONForWriting(o,e),[4,this._updateItemProperties(t)];case 4:return r.sent(),[4,this._updateItem(t,i,o)];case 5:return r.sent(),[4,this._updateItemThumbnail()];case 6:return r.sent(),[2,t]}}))}))},i.prototype.saveAs=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var o,i,n,a;return r.__generator(this,(function(r){switch(r.label){case 0:return t=t||{},o=this._getPortalItem(e),[4,this._updateFromPromise];case 1:return r.sent(),[4,this.load()];case 2:return r.sent(),[4,this._loadLayerContainers()];case 3:return r.sent(),this._validateMap(),i={origin:"web-map",messages:[],writtenProperties:[],url:null,portal:o.portal},n=this.write(null,i),this._validateJSONForWriting(i,t),[4,this._updateItemPropertiesForSaveAs(o)];case 4:return r.sent(),a=this._getThumbnailState(),[4,this._createItem(o,n,i,t)];case 5:return r.sent(),this._restoreThumbnailFromState(a),[4,this._updateItemThumbnail()];case 6:return r.sent(),[2,o]}}))}))},i.prototype.updateFrom=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var o;return r.__generator(this,(function(r){switch(r.label){case 0:return o=this._updateFromInternal(e,t),this._updateFromPromise=o,[4,o];case 1:return r.sent(),o===this._updateFromPromise&&(this._updateFromPromise=null),[2]}}))}))},i.prototype.getLayerJSONFromResourceInfo=function(e){var t,r,o,i,n=this.resourceInfo,s=this._collectAllLayersJSON(a.flatten([null===(t=null==n?void 0:n.baseMap)||void 0===t?void 0:t.baseMapLayers,null==n?void 0:n.operationalLayers,null===(i=null===(o=null===(r=this.basemap)||void 0===r?void 0:r.resourceInfo)||void 0===o?void 0:o.data)||void 0===i?void 0:i.baseMapLayers]));return a.find(s,(function(t){return t.id===e.id}))},i.prototype._collectAllLayersJSON=function(e){var t=this;return e.reduce((function(e,r){return e.push(r),"GroupLayer"===r.layerType&&(e=e.concat(t._collectAllLayersJSON(r.layers||[]))),e}),[])},i.prototype._writeLayers=function(e,t,o){var i=this;return t=r.__assign(r.__assign({},t),{layerContainerType:o}),e.map((function(e){return d.unwrap(W.getLayerJSON(e,"tables"===o?null:i.getLayerJSONFromResourceInfo(e),t))})).filter(Boolean).toArray()},i.prototype._loadFromSource=function(){return this.resourceInfo?this._loadFromJSON(this.resourceInfo,{origin:"web-map"}):this.portalItem&&this.portalItem.id?this._loadFromItem(this.portalItem):_.resolve(null)},i.prototype._loadFromItem=function(e){var t=this;return e.load().catch((function(e){throw new p("webmap:load-portal-item","Failed to load portal item",{error:e})})).then((function(){if("Web Map"!==e.type)throw new p("webmap:invalid-portal-item","Invalid portal item type '${type}', expected 'Web Map'",{type:e.type})})).then((function(){return e.fetchData()})).then((function(r){return t.resourceInfo=r,t._readAndLoadFromJSON(r,{origin:"web-map",portal:e.portal||I.getDefault()})})).then((function(){return t._computeInitialViewpoint()}))},i.prototype._readAndLoadFromJSON=function(e,t){var r=this._validateJSON(e);return this.read(r,t),this._loadFromJSON(r,t)},i.prototype._validateJSON=function(e){var t=x.default.parse(e.version||"","webmap");return k.validate(t),e.version=t.major+"."+t.minor,e},i.prototype._loadFromJSON=function(t,o){var i=this,n={context:r.__assign(r.__assign({},o),{layerContainerType:"operational-layers"})};return this.portalItem&&(n.context.portal=this.portalItem.portal||I.getDefault()),new Promise((function(t,r){e(["./portal/support/layersCreator"],t,r)})).then((function(e){var o=[],a=t.operationalLayers;a&&a.length&&o.push(e.populateOperationalLayers(i.layers,a,n));var s=r.__assign(r.__assign({},n),{context:r.__assign(r.__assign({},n.context),{layerContainerType:"tables"}),defaultLayerType:"ArcGISFeatureLayer"}),p=t.tables;return p&&p.length&&o.push(e.populateOperationalLayers(i.tables,p,s)),_.eachAlways(o).then((function(){}))}))},i.prototype._computeInitialViewpoint=function(){var e;return r.__awaiter(this,void 0,void 0,(function(){var t,o;return r.__generator(this,(function(r){switch(r.label){case 0:return t=this.initialViewProperties,(null===(e=null==t?void 0:t.viewpoint)||void 0===e?void 0:e.targetGeometry)?[2]:[4,this._getExtentFromItem()];case 1:return(o=r.sent())&&((t=t?t.clone():new R).viewpoint=new n,t.viewpoint.targetGeometry=o,this.initialViewProperties=t),[2]}}))}))},i.prototype._getExtentFromItem=function(){var t,o;return r.__awaiter(this,void 0,void 0,(function(){var i,n;return r.__generator(this,(function(r){switch(r.label){case 0:return i=null===(t=this.initialViewProperties)||void 0===t?void 0:t.spatialReference,n=null===(o=this.portalItem)||void 0===o?void 0:o.extent,i&&n?i.isWGS84?[2,n.clone()]:i.isWebMercator?[2,A.geographicToWebMercator(n)]:[4,new Promise((function(t,r){e(["./portal/support/geometryServiceUtils"],t,r)}))]:[3,2];case 1:return[2,r.sent().create(this.portalItem).then((function(e){var t=new P;return t.geometries=[n],t.outSpatialReference=i,e.project(t)})).then((function(e){return e[0]})).catch((function(e){return j.error("Error projecting item's extent:",e),null}))];case 2:return[2,null]}}))}))},i.prototype._removeDanglingLayerRefs=function(){var e=this,t=function(t){return!!e.allLayers.find((function(e){return e.id===t}))},r=this.applicationProperties,o=r&&r.viewing&&r.viewing.search;o&&o.layers&&(o.layers=o.layers.filter((function(e){return t(e.id)})));var i=r&&r.editing&&r.editing.locationTracking;i&&i.info&&!t(i.info.layerId)&&(r.editing=null);var n=this.presentation&&this.presentation.slides;n&&n.forEach((function(e){e.visibleLayers&&(e.visibleLayers=e.visibleLayers.filter((function(e){return t(e.id)})))}))},i.prototype._validateMap=function(){if(!this.basemap||!this.basemap.baseLayers.length)throw new p("webmap:save","Map does not have a valid basemap with a base layer.")},i.prototype._validateItem=function(){if(!this.portalItem)throw j.error("save: requires the portalItem property to be set"),new p("webmap:portal-item-not-set","Portal item to save to has not been set on the WebMap");this._validateItemType(this.portalItem)},i.prototype._validateItemType=function(e){if("Web Map"!==e.type)throw new p("webmap:portal-item-wrong-type",'Portal item needs to have type "Web Map"')},i.prototype._loadLayerContainers=function(){var e=[];return this.basemap&&e.push(this.basemap.load()),this.ground&&e.push(this.ground.load()),_.eachAlways(e).then((function(){}))},i.prototype._loadAllLayers=function(){var e=this._getAllLayersAndTables().map((function(e){return e.load()}));return _.eachAlways(e).then((function(){}))},i.prototype._getAllLayersAndTables=function(){return this.allLayers.concat(this.allTables)},i.prototype._validateJSONForWriting=function(e,t){var r=e.messages.filter((function(e){return"error"===e.type})).map((function(e){return new p(e.name,e.message,e.details)}));if(t.ignoreUnsupported&&(r=r.filter((function(e){return"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name}))),r.length>0)throw new p("webmap:save","Failed to save webmap due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:r})},i.prototype._updateItemProperties=function(e){return r.__awaiter(this,void 0,void 0,(function(){var t;return r.__generator(this,(function(r){switch(r.label){case 0:return t=e,[4,this._getWGS84Extent(this.initialViewProperties.viewpoint.targetGeometry)];case 1:return t.extent=r.sent(),[4,this._updateTypeKeywords(e)];case 2:return r.sent(),[2]}}))}))},i.prototype._updateItemPropertiesForSaveAs=function(e){return r.__awaiter(this,void 0,void 0,(function(){return r.__generator(this,(function(t){switch(t.label){case 0:return T.removeTypeKeyword(e,"CollectorDisabled"),T.removeTypeKeyword(e,"OfflineDisabled"),T.removeTypeKeyword(e,"Workforce Project"),T.removeTypeKeyword(e,"Workforce Worker"),T.removeTypeKeyword(e,"Workforce Dispatcher"),T.removeTypeKeyword(e,"Offline Map Areas"),T.removeTypeKeyword(e,"FieldMapsDisabled"),[4,this._updateItemProperties(e)];case 1:return t.sent(),[2]}}))}))},i.prototype._getWGS84Extent=function(e){return r.__awaiter(this,void 0,void 0,(function(){var t,o,i,n,a;return r.__generator(this,(function(r){if((t=e.clone().normalize()).length>1)for(i=0,n=t;i<n.length;i++)a=n[i],o?a.width>o.width&&(o=a):o=a;else o=t[0];return[2,this._projectToWGS84(o)]}))}))},i.prototype._projectToWGS84=function(t){return r.__awaiter(this,void 0,void 0,(function(){var o,i,n;return r.__generator(this,(function(r){switch(r.label){case 0:return(o=t.spatialReference).isWGS84?[2,t.clone()]:o.isWebMercator?[2,A.webMercatorToGeographic(t)]:[4,new Promise((function(t,r){e(["./portal/support/geometryServiceUtils"],t,r)}))];case 1:return[4,r.sent().create(this.portalItem)];case 2:return i=r.sent(),(n=new P).geometries=[t],n.outSpatialReference=b.WGS84,[4,i.project(n)];case 3:return[2,r.sent()[0]]}}))}))},i.prototype._updateTypeKeywords=function(e){return r.__awaiter(this,void 0,void 0,(function(){return r.__generator(this,(function(t){switch(t.label){case 0:return T.addTypeKeyword(e,"ArcGIS API for JavaScript"),[4,this._loadAllLayers()];case 1:return t.sent(),this._evalCollectorKeyword(e),this._evalDataEditingKeyword(e),this._evalOfflineKeyword(e),e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter((function(e,t,r){return r.indexOf(e)===t}))),[2]}}))}))},i.prototype._evalCollectorKeyword=function(e){T.hasTypeKeyword(e,"CollectorDisabled")||T.hasTypeKeyword(e,"Workforce Project")||T.hasTypeKeyword(e,"Workforce Worker")||T.hasTypeKeyword(e,"Workforce Dispatcher")||!this._hasEditableFeatureLayer()?T.removeTypeKeyword(e,"Collector"):T.addTypeKeyword(e,"Collector")},i.prototype._evalDataEditingKeyword=function(e){this._hasEditableFeatureLayer()?T.addTypeKeyword(e,"Data Editing"):T.removeTypeKeyword(e,"Data Editing")},i.prototype._evalOfflineKeyword=function(e){!T.hasTypeKeyword(e,"OfflineDisabled")&&this._isOfflineCapableMap()?T.addTypeKeyword(e,"Offline"):T.removeTypeKeyword(e,"Offline")},i.prototype._hasEditableFeatureLayer=function(){var e=this;return this._getAllLayersAndTables().some((function(t){return t.loaded&&e._isFeatureServiceLayer(t)&&t.capabilities.operations.supportsEditing&&t.editingEnabled}))},i.prototype._isFeatureServiceLayer=function(e){return!("feature"!==e.type||!e.source||"feature-layer"!==e.source.type)},i.prototype._isOfflineCapableMap=function(){var e=this;return this._getAllLayersAndTables().filter((function(e){return"group"!==e.type})).every((function(t){return t.loaded&&e._isOfflineCapableLayer(t)}))},i.prototype._isOfflineCapableLayer=function(e){return this._isFeatureServiceLayer(e)&&e.capabilities.operations.supportsSync||("tile"===e.type||"vector-tile"===e.type)&&(e.capabilities.operations.supportsExportTiles||this._isExportableAGOLTileLayer(e))&&e.spatialReference.equals(this.initialViewProperties.spatialReference)},i.prototype._isExportableAGOLTileLayer=function(e){return"tile"===e.type&&(S.isServerOrServicesAGOLUrl(e.url)&&J.some((function(t){return e.url.toLowerCase().indexOf("/"+t+"/")>-1})))},i.prototype._updateItem=function(e,t,o){return r.__awaiter(this,void 0,void 0,(function(){return r.__generator(this,(function(r){switch(r.label){case 0:return[4,e.update({data:t})];case 1:return r.sent(),this._syncUpInstanceWithItem(e,t,o),[2]}}))}))},i.prototype._createItem=function(e,t,o,i){return r.__awaiter(this,void 0,void 0,(function(){var n,a,s;return r.__generator(this,(function(r){switch(r.label){case 0:return n=this.portalItem,a=!!(n&&n.id&&n.portal.user),[4,(s=e.portal)._signIn()];case 1:return r.sent(),[4,this._canCopyItem(n,a,s)];case 2:if(!r.sent())throw new p("webmap:save-as-copy-not-allowed","Owner of this map does not allow others to save a copy");return[4,s.user.addItem({item:e,folder:i.folder,data:t})];case 3:return r.sent(),this.portalItem=e,this._syncUpInstanceWithItem(e,t,o),[2]}}))}))},i.prototype._canCopyItem=function(e,t,o){return r.__awaiter(this,void 0,void 0,(function(){return r.__generator(this,(function(r){switch(r.label){case 0:return d.isSome(e)&&e.id&&e.typeKeywords&&e.typeKeywords.indexOf("useOnly")>-1?e.portal.portalHostname!==o.portalHostname?[2,!1]:t?[3,2]:[4,e.reload()]:[3,3];case 1:r.sent(),r.label=2;case 2:return[2,"admin"===e.itemControl||"update"===e.itemControl];case 3:return[2,!0]}}))}))},i.prototype._syncUpInstanceWithItem=function(e,t,r){h.MultiOriginJSONSupport.prototype.read.call(this,{version:t.version,authoringApp:t.authoringApp,authoringAppVersion:t.authoringAppVersion},{origin:"web-map",ignoreDefaults:!0,url:e.itemUrl&&m.urlToObject(e.itemUrl)}),w.updateOrigins(r),this.resourceInfo=t},i.prototype._updateItemThumbnail=function(){return r.__awaiter(this,void 0,void 0,(function(){return r.__generator(this,(function(e){switch(e.label){case 0:return this.thumbnailUrl&&this._isOverridden("thumbnailUrl")?[4,this.portalItem.updateThumbnail({thumbnail:this.thumbnailUrl,filename:this._thumbnailFilename})]:[3,2];case 1:e.sent(),this._clearThumbnailOverride(),e.label=2;case 2:return[2]}}))}))},i.prototype._getPortalItem=function(e){var t=O.from(e);return t.id&&((t=t.clone()).id=null),t.type||(t.type="Web Map"),t.portal||(t.portal=I.getDefault()),this._validateItemType(t),t},i.prototype._updateFromInternal=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){return r.__generator(this,(function(r){switch(r.label){case 0:return t=t||{},[4,f.whenTrueOnce(e,"ready")];case 1:return r.sent(),this._updateInitialViewProperties(e,t),[4,this._updateThumbnailUrl(e,t)];case 2:return r.sent(),[2]}}))}))},i.prototype._updateInitialViewProperties=function(e,t){var r;t.backgroundExcluded||(this.initialViewProperties.background=null===(r=e.background)||void 0===r?void 0:r.clone()),this.initialViewProperties.spatialReference=e.spatialReference.clone(),t.viewpointExcluded||(this.initialViewProperties.viewpoint=new n({rotation:e.rotation,scale:t.scalePreserved?e.scale:null,targetGeometry:this._getViewExtent(e)}))},i.prototype._getViewExtent=function(e){var t=e.center.clone().normalize(),r=e.extent.clone(),o=r.width/2;return r.xmin=t.x-o,r.xmax=t.x+o,r},i.prototype._updateThumbnailUrl=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var o,i;return r.__generator(this,(function(r){switch(r.label){case 0:return t.thumbnailExcluded?[2]:(o=U.getOptimalThumbnailSize(e,t.thumbnailSize),[4,e.takeScreenshot({format:"png",width:o.width,height:o.height})]);case 1:return i=r.sent(),this._setAutoGeneratedThumbnail(i.dataUrl),[2]}}))}))},i.prototype._setAutoGeneratedThumbnail=function(e){this.thumbnailUrl=e,this._thumbnailFilename=null},i.prototype._clearThumbnailOverride=function(){this._clearOverride("thumbnailUrl"),this.clear("thumbnailUrl","user"),this._thumbnailFilename=null},i.prototype._generateCustomThumbnailFilename=function(e){if(m.isDataProtocol(e)){var t=m.dataComponents(e),r=t&&t.mediaType,o=r&&K.get(r.toLowerCase())||null,i="thumbnail"+Date.now();return o?i+"."+o:i}return null},i.prototype._getThumbnailState=function(){var e=this.thumbnailUrl;return e&&(e=this._isOverridden("thumbnailUrl")?e:m.addQueryParameter(e,"w","8192")),{thumbnailUrl:e,filename:this._thumbnailFilename}},i.prototype._restoreThumbnailFromState=function(e){this.thumbnailUrl=e.thumbnailUrl,this._thumbnailFilename=e.filename},i.prototype._getAuthoringPropsState=function(){return{authoringApp:this.authoringApp,authoringAppVersion:this.authoringAppVersion,isAuthoringAppSetByUser:this._isAuthoringAppSetByUser,isAuthoringAppVersionSetByUser:this._isAuthoringAppVersionSetByUser}},i.prototype._restoreAuthoringPropsFromState=function(e){e.isAuthoringAppSetByUser?this.authoringApp=e.authoringApp:this._isAuthoringAppSetByUser=!1,e.isAuthoringAppVersionSetByUser?this.authoringAppVersion=e.authoringAppVersion:this._isAuthoringAppVersionSetByUser=!1},i.fromJSON=function(e){var t=e;if(!t)throw new p("webmap:empty-resource","Expected a JSON resource but got nothing");return new this({resourceInfo:t})},i.VERSION=k,r.__decorate([g.property({type:F,json:{write:!0}})],i.prototype,"applicationProperties",void 0),r.__decorate([g.property({type:String,json:{write:{allowNull:!0,ignoreOrigin:!0}}})],i.prototype,"authoringApp",null),r.__decorate([g.writer("authoringApp")],i.prototype,"writeAuthoringApp",null),r.__decorate([g.property({type:String,json:{write:{allowNull:!0,ignoreOrigin:!0}}})],i.prototype,"authoringAppVersion",null),r.__decorate([g.writer("authoringAppVersion")],i.prototype,"writeAuthoringAppVersion",null),r.__decorate([g.property({json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],i.prototype,"basemap",void 0),r.__decorate([g.property({type:C,json:{write:{overridePolicy:function(e){return{enabled:!!(e&&e.length>0),ignoreOrigin:!0}}}}})],i.prototype,"bookmarks",void 0),r.__decorate([g.property({type:R,nonNullable:!0,json:{read:{source:["background","initialState.viewpoint","mapRangeInfo","spatialReference"]},write:{ignoreOrigin:!0,target:{background:{type:N},"initialState.viewpoint":{type:n},mapRangeInfo:{type:L},spatialReference:{type:b}}}}})],i.prototype,"initialViewProperties",void 0),r.__decorate([g.reader("initialViewProperties")],i.prototype,"readInitialViewProperties",null),r.__decorate([g.writer("initialViewProperties")],i.prototype,"writeInitialViewProperties",null),r.__decorate([g.property({json:{write:{target:"operationalLayers",ignoreOrigin:!0}}})],i.prototype,"layers",void 0),r.__decorate([g.writer("layers")],i.prototype,"writeLayers",null),r.__decorate([g.property({type:O})],i.prototype,"portalItem",void 0),r.__decorate([g.property({json:{write:!0}})],i.prototype,"presentation",void 0),r.__decorate([g.property()],i.prototype,"resourceInfo",void 0),r.__decorate([g.property({readOnly:!0,type:x.default,json:{read:{source:"version"},write:{allowNull:!0,ignoreOrigin:!0,target:"version",isRequired:!0}}})],i.prototype,"sourceVersion",void 0),r.__decorate([g.reader("sourceVersion")],i.prototype,"readSourceVersion",null),r.__decorate([g.writer("sourceVersion")],i.prototype,"writeSourceVersion",null),r.__decorate([g.property({json:{read:!1,write:{ignoreOrigin:!0}}})],i.prototype,"tables",void 0),r.__decorate([g.writer("tables")],i.prototype,"writeTables",null),r.__decorate([g.property({dependsOn:["portalItem.thumbnailUrl"]})],i.prototype,"thumbnailUrl",null),r.__decorate([g.property({type:V,json:{write:!0}})],i.prototype,"widgets",void 0),i=r.__decorate([g.subclass("esri.WebMap")],i)}(h.MultiOriginJSONMixin(l.LoadableMixin(y.EsriPromiseMixin(i))))}));