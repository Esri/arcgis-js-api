/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["require","./chunks/_rollupPluginBabelHelpers","./chunks/tslib.es6","./kernel","./Map","./Viewpoint","./core/Collection","./core/Error","./core/Loadable","./core/loadAll","./core/Logger","./core/maybe","./core/MultiOriginJSONSupport","./core/Promise","./core/promiseUtils","./core/reactiveUtils","./core/urlUtils","./core/accessorSupport/decorators/property","./core/arrayUtils","./core/accessorSupport/ensureType","./core/accessorSupport/decorators/reader","./core/accessorSupport/decorators/subclass","./core/accessorSupport/decorators/writer","./core/accessorSupport/originUtils","./core/accessorSupport/read","./geometry/SpatialReference","./geometry/support/spatialReferenceUtils","./geometry/support/webMercatorUtils","./layers/support/arcgisLayerUrl","./layers/support/layerUtils","./networks/UtilityNetwork","./portal/Portal","./portal/PortalItem","./portal/support/portalItemUtils","./rest/geometryService/project","./rest/support/ProjectParameters","./support/basemapUtils","./support/MapFloorInfo","./webdoc/GeotriggersInfo","./webdoc/RangeInfo","./webdoc/Widgets","./webdoc/support/thumbnailUtils","./webdoc/support/writeUtils","./webmap/ApplicationProperties","./webmap/Bookmark","./webmap/InitialViewProperties","./webmap/Version","./webmap/background/ColorBackground"],(function(e,t,r,i,o,a,n,s,l,p,u,c,d,h,y,m,f,_,w,g,b,v,S,A,I,T,O,L,P,V,U,F,G,R,W,K,k,N,M,C,E,x,j,B,J,D,$,z){"use strict";const q=new $.Version(2,26),H="Web Map",Q=n.ofType(J),X=n.ofType(U),Y=new Map;Y.set("image/jpeg","jpeg"),Y.set("image/jpg","jpg"),Y.set("image/png","png"),Y.set("image/gif","gif");const Z="ArcGIS Pro",ee=R.TypeKeyword.JSAPI,te="CollectorDisabled",re="Collector",ie="Data Editing",oe="OfflineDisabled",ae="Offline",ne="Workforce Project",se="Workforce Worker",le="Workforce Dispatcher",pe="Offline Map Areas",ue="FieldMapsDisabled",ce=R.TypeKeyword.DEVELOPER_BASEMAP,de="UtilityNetwork",he=["NatGeo_World_Map","Ocean_Basemap","USA_Topo_Maps","World_Imagery","World_Street_Map","World_Terrain_Base","World_Topo_Map","World_Hillshade","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Reference/World_Boundaries_and_Places","Reference/World_Reference_Overlay","Reference/World_Transportation"].map((e=>e.toLowerCase()));let ye=function(r){function o(e){var t;return(t=r.call(this,e)||this).applicationProperties=null,t.bookmarks=new Q,t.floorInfo=null,t.geotriggersInfo=null,t.initialViewProperties=new D,t.portalItem=null,t.presentation=null,t.sourceVersion=null,t.widgets=null,t.utilityNetworks=null,t.authoringApp=t.authoringAppVersion=null,t._isAuthoringAppSetByUser=t._isAuthoringAppVersionSetByUser=!1,t}t._inheritsLoose(o,r);var n=o.prototype;return n.destroy=function(){const e=this.portalItem;this.portalItem=null,e?.destroy()},n.initialize=function(){if(this.when().catch((e=>{u.getLogger(this.declaredClass).error("#load()","Failed to load web map",e)})),this.resourceInfo){let t;try{t=this._validateJSON(this.resourceInfo)}catch(e){return void this.addResolvingPromise(Promise.reject(e))}this.read(t)}},n.writeAuthoringApp=function(e,t){e&&this._isAuthoringAppSetByUser?t.authoringApp=e:t.authoringApp=ee},n.writeAuthoringAppVersion=function(e,t){e&&this._isAuthoringAppVersionSetByUser?t.authoringAppVersion=e:t.authoringAppVersion=i.version},n.readInitialViewProperties=function(e,t){const r=new D;t.background&&(r.background=z.fromJSON(t.background));const i=t.initialState?.viewpoint;if(i){if(i.rotation){$.Version.parse(t.version||"","webmap").lessThan(2,20)&&t.authoringApp===Z&&(i.rotation*=-1)}r.viewpoint=a.fromJSON(i)}return t.mapRangeInfo&&(r.rangeInfo=C.fromJSON(t.mapRangeInfo)),t.spatialReference&&(r.spatialReference=T.fromJSON(t.spatialReference)),r},n.writeInitialViewProperties=function(e,t,r,i){if(!e)return;const o=e.background;o&&o.color&&(t.background=o.write({},i)),e.viewpoint&&(t.initialState={viewpoint:e.viewpoint.write({},i)}),e.rangeInfo&&(t.mapRangeInfo=e.rangeInfo.toJSON(i)),e.spatialReference&&(t.spatialReference=e.spatialReference.write({},i))},n.writeLayers=function(e,t,r,i){t[r]=this._writeLayers(e,i,"operational-layers")},n.readSourceVersion=function(e,t){const[r,i]=t.version.split(".");return new $.Version(parseInt(r,10),parseInt(i,10))},n.writeSourceVersion=function(e,t,r){t[r]=`${q.major}.${q.minor}`},n.writeTables=function(e,t,r,i){const o=this._writeLayers(e,i,"tables");o.length&&(t[r]=o)},n.load=function(e){return this.addResolvingPromise(this._loadFromSource()),Promise.resolve(this)},n.loadAll=function(){return p.loadAll(this,(e=>{e(this.ground,this.basemap,this.layers,this.tables)}))},n.read=function(e,t){t={...t,origin:"web-map"};const i=this._getAuthoringPropsState();I.readLoadable(this,e,(t=>r.prototype.read.call(this,e,t)),t),this._restoreAuthoringPropsFromState(i)},n.write=function(e,t){if("loaded"!==this.loadStatus){const e=new s("webmap:not-loaded","Web map must be loaded before it can be serialized");throw u.getLogger(this.declaredClass).error("#toJSON()","Web map must be loaded before it can be serialized",this.loadError||this.loadStatus),e}return this._removeDanglingLayerRefs(),t={...t,origin:"web-map",restrictedWebMapWriting:!0,webmap:this},r.prototype.write.call(this,e,t)},n.save=function(){var e=t._asyncToGenerator((function*(e){e=e||{},this._validateItem(),yield this._updateFromPromise,yield this.load(),yield this._loadLayerContainers(),yield this._beforeSave(),yield this._validateMap();const t=this.portalItem,r={origin:"web-map",messages:[],writtenProperties:[],url:t.itemUrl&&f.urlToObject(t.itemUrl),portal:t.portal||F.getDefault()},i=this.write({},r);return this._validateJSONForWriting(r,e),yield this._updateItemProperties(t),yield this._updateItem(t,i,r),yield this._updateItemThumbnail(),t}));function r(t){return e.apply(this,arguments)}return r}(),n.saveAs=function(){var e=t._asyncToGenerator((function*(e,t){t=t||{};const r=this._getPortalItem(e);yield this._updateFromPromise,yield this.load(),yield this._loadLayerContainers(),yield this._beforeSave(),yield this._validateMap();const i={origin:"web-map",messages:[],writtenProperties:[],url:null,portal:r.portal},o=this.write({},i);this._validateJSONForWriting(i,t),yield this._updateItemPropertiesForSaveAs(r);const a=this._getThumbnailState();return yield this._createItem(r,o,i,t),this._restoreThumbnailFromState(a),yield this._updateItemThumbnail(),r}));function r(t,r){return e.apply(this,arguments)}return r}(),n.updateFrom=function(){var e=t._asyncToGenerator((function*(e,t){const r=this._updateFromInternal(e,t);this._updateFromPromise=r,yield r;r===this._updateFromPromise&&(this._updateFromPromise=null)}));function r(t,r){return e.apply(this,arguments)}return r}(),n.getLayerJSONFromResourceInfo=function(e){const t=this.resourceInfo;return this._collectAllLayersJSON([...t?.baseMap?.baseMapLayers||[],...t?.operationalLayers||[],...this.basemap?.resourceInfo?.data?.baseMapLayers||[]]).find((t=>t.id===e.id))},n._collectAllLayersJSON=function(e){return e.reduce(((e,t)=>(e.push(t),"GroupLayer"===t.layerType&&(e=e.concat(this._collectAllLayersJSON(t.layers||[]))),e)),[])},n._writeLayers=function(e,t,r){t={...t,layerContainerType:r};return e.map((e=>c.unwrap(j.getLayerJSON(e,"tables"===r?null:this.getLayerJSONFromResourceInfo(e),t)))).filter(Boolean).toArray()},n._loadFromSource=function(){return this.resourceInfo?this._loadFromJSON(this.resourceInfo,{origin:"web-map"}):this.portalItem&&this.portalItem.id?this._loadFromItem(this.portalItem):Promise.resolve(null)},n._loadFromItem=function(e){return e.load().catch((e=>{throw new s("webmap:load-portal-item","Failed to load portal item",{error:e})})).then((()=>{if("Web Map"!==e.type)throw new s("webmap:invalid-portal-item","Invalid portal item type '${type}', expected 'Web Map'",{type:e.type})})).then((()=>e.fetchData())).then((t=>(this.resourceInfo=t,this._readAndLoadFromJSON(t,{origin:"web-map",portal:e.portal||F.getDefault()})))).then((()=>this._computeInitialViewpoint()))},n._readAndLoadFromJSON=function(e,t){const r=this._validateJSON(e);return this.read(r,t),this._loadFromJSON(r,t)},n._validateJSON=function(e){const t=$.Version.parse(e.version||"","webmap");return q.validate(t),e.version=`${t.major}.${t.minor}`,e},n._loadFromJSON=function(t,r){const i={context:{...r,layerContainerType:"operational-layers"}};return this.portalItem&&(i.context.portal=this.portalItem.portal||F.getDefault()),new Promise(((t,r)=>e(["./layers/support/layersCreator"],t,r))).then((({populateOperationalLayers:e})=>{const r=[],o=t.operationalLayers;o&&o.length&&r.push(e(this.layers,o,i));const a={...i,context:{...i.context,layerContainerType:"tables"},defaultLayerType:"ArcGISFeatureLayer"},n=t.tables;return n&&n.length&&r.push(e(this.tables,n,a)),y.eachAlways(r).then((()=>{}))}))},n._computeInitialViewpoint=function(){var e=t._asyncToGenerator((function*(){let e=this.initialViewProperties;const t=e?.viewpoint?.targetGeometry;if(t)return;const r=yield this._getExtentFromItem();r&&(e=e?e.clone():new D,e.viewpoint=new a,e.viewpoint.targetGeometry=r,this.initialViewProperties=e)}));function r(){return e.apply(this,arguments)}return r}(),n._getExtentFromItem=function(){var r=t._asyncToGenerator((function*(){const t=this.initialViewProperties?.spatialReference,r=this.portalItem?.extent;if(t&&r){if(t.isWGS84)return r.clone();if(t.isWebMercator)return L.geographicToWebMercator(r);return(yield new Promise(((t,r)=>e(["./portal/support/geometryServiceUtils"],t,r)))).getGeometryServiceURL(this.portalItem).then((e=>{const i=new K;return i.geometries=[r],i.outSpatialReference=t,W.project(e,i)})).then((e=>e[0])).catch((e=>(u.getLogger(this.declaredClass).error("Error projecting item's extent:",e),null)))}return null}));function i(){return r.apply(this,arguments)}return i}(),n._removeDanglingLayerRefs=function(){const e=this.applicationProperties,t=e&&e.viewing&&e.viewing.search,r=e=>this.allLayers.some((t=>t.id===e));t&&t.layers&&(t.layers=t.layers.filter((e=>r(e.id)))),t&&t.tables&&(t.tables=t.tables.filter((e=>this.tables.some((t=>t.id===e.id)))));const i=e&&e.editing&&e.editing.locationTracking;i&&i.info&&!r(i.info.layerId)&&(e.editing=null);const o=this.presentation&&this.presentation.slides;o&&o.forEach((e=>{e.visibleLayers&&(e.visibleLayers=e.visibleLayers.filter((e=>r(e.id))))}))},n._validateMap=function(){var e=t._asyncToGenerator((function*(){if(!this.basemap?.baseLayers.length)throw new s("webmap:save","Map does not have a valid basemap with a base layer.");let e=null;if(yield m.whenOnce((()=>{const t=k.findSpatialReference(this.initialViewProperties,this.basemap);return e=t.spatialReference,!t.updating})),!O.equals(e,this.initialViewProperties.spatialReference))throw new s("webmap:save","The spatial reference of the basemap is not compatible with the one from the map.",{expected:this.initialViewProperties.spatialReference,actual:e})}));function r(){return e.apply(this,arguments)}return r}(),n._validateItem=function(){if(!this.portalItem)throw u.getLogger(this.declaredClass).error("save: requires the portalItem property to be set"),new s("webmap:portal-item-not-set","Portal item to save to has not been set on the WebMap");this._validateItemType(this.portalItem)},n._validateItemType=function(e){if(e.type!==H)throw new s("webmap:portal-item-wrong-type",`Portal item needs to have type "${H}"`)},n._loadLayerContainers=function(){const e=[];return this.basemap&&e.push(this.basemap.load()),this.ground&&e.push(this.ground.load()),y.eachAlways(e).then((()=>{}))},n._beforeSave=function(){var e=t._asyncToGenerator((function*(){const e=[];for(const t of this.allLayers)if("beforeSave"in t&&"function"==typeof t.beforeSave){const r=t.beforeSave();r&&e.push(r)}yield y.eachAlways(e)}));function r(){return e.apply(this,arguments)}return r}(),n._loadAllLayers=function(){const e=this._getAllLayersAndTables().map((e=>e.load()));return y.eachAlways(e).then((()=>{}))},n._getAllLayersAndTables=function(){return this.allLayers.concat(this.allTables)},n._validateJSONForWriting=function(e,t){let r=e.messages.filter((e=>"error"===e.type)).map((e=>new s(e.name,e.message,e.details)));if(t.ignoreUnsupported&&(r=r.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name))),r.length>0)throw new s("webmap:save","Failed to save webmap due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:r})},n._updateItemProperties=function(){var e=t._asyncToGenerator((function*(e){e.extent=yield this._getWGS84Extent(this.initialViewProperties.viewpoint.targetGeometry),yield this._updateTypeKeywords(e)}));function r(t){return e.apply(this,arguments)}return r}(),n._updateItemPropertiesForSaveAs=function(){var e=t._asyncToGenerator((function*(e){R.removeTypeKeyword(e,te),R.removeTypeKeyword(e,ue),R.removeTypeKeyword(e,R.TypeKeyword.METADATA),R.removeTypeKeyword(e,oe),R.removeTypeKeyword(e,pe),R.removeTypeKeyword(e,le),R.removeTypeKeyword(e,ne),R.removeTypeKeyword(e,se),yield this._updateItemProperties(e)}));function r(t){return e.apply(this,arguments)}return r}(),n._getWGS84Extent=function(){var e=t._asyncToGenerator((function*(e){const t=e.clone().normalize();let r;if(t.length>1)for(const i of t)r?i.width>r.width&&(r=i):r=i;else r=t[0];return this._projectToWGS84(r)}));function r(t){return e.apply(this,arguments)}return r}(),n._projectToWGS84=function(){var r=t._asyncToGenerator((function*(t){const r=t.spatialReference;if(r.isWGS84)return t.clone();if(r.isWebMercator)return L.webMercatorToGeographic(t);const i=yield new Promise(((t,r)=>e(["./portal/support/geometryServiceUtils"],t,r))),o=yield i.getGeometryServiceURL(this.portalItem),a=new K;a.geometries=[t],a.outSpatialReference=T.WGS84;return(yield W.project(o,a))[0]}));function i(e){return r.apply(this,arguments)}return i}(),n._updateTypeKeywords=function(){var e=t._asyncToGenerator((function*(e){R.addTypeKeyword(e,ee),yield this._loadAllLayers(),this._evalCollectorKeyword(e),this._evalDataEditingKeyword(e),this._evalOfflineKeyword(e),this._evalDeveloperBasemapKeyword(e),this._evalUtilityNetworkKeyword(e),e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)))}));function r(t){return e.apply(this,arguments)}return r}(),n._evalCollectorKeyword=function(e){R.hasTypeKeyword(e,te)||R.hasTypeKeyword(e,ne)||R.hasTypeKeyword(e,se)||R.hasTypeKeyword(e,le)||!this._hasEditableFeatureLayer()?R.removeTypeKeyword(e,re):R.addTypeKeyword(e,re)},n._evalDataEditingKeyword=function(e){this._hasEditableFeatureLayer()?R.addTypeKeyword(e,ie):R.removeTypeKeyword(e,ie)},n._evalOfflineKeyword=function(e){!R.hasTypeKeyword(e,oe)&&this._isOfflineCapableMap()?R.addTypeKeyword(e,ae):R.removeTypeKeyword(e,ae)},n._evalDeveloperBasemapKeyword=function(e){k.hasDeveloperBasemapLayer(this.basemap)?R.addTypeKeyword(e,ce):R.removeTypeKeyword(e,ce)},n._evalUtilityNetworkKeyword=function(e){this.utilityNetworks?.length?R.addTypeKeyword(e,de):R.removeTypeKeyword(e,de)},n._hasEditableFeatureLayer=function(){return this._getAllLayersAndTables().some((e=>e.loaded&&V.isFeatureServiceLayer(e)&&e.capabilities.operations.supportsEditing&&e.editingEnabled))},n._isOfflineCapableMap=function(){return this._getAllLayersAndTables().filter((e=>"group"!==e.type)).every((e=>e.loaded&&this._isOfflineCapableLayer(e)))},n._isFeatureCollectionLike=function(e){return V.isFeatureCollectionLayer(e)||"map-notes"===e.type||"route"===e.type},n._isOfflineCapableLayer=function(e){return V.isFeatureServiceLayer(e)&&e.capabilities.operations.supportsSync||this._isFeatureCollectionLike(e)&&!e.portalItem||("tile"===e.type||"vector-tile"===e.type)&&(e.capabilities.operations.supportsExportTiles||this._isExportableAGOLTileLayer(e)||k.isDeveloperBasemapLayer(e))&&e.spatialReference.equals(this.initialViewProperties.spatialReference)},n._isExportableAGOLTileLayer=function(e){return"tile"===e.type&&(P.isServerOrServicesAGOLUrl(e.url)&&he.some((t=>e.url.toLowerCase().includes("/"+t+"/"))))},n._updateItem=function(){var e=t._asyncToGenerator((function*(e,t,r){yield e.update({data:t}),this._syncUpInstanceWithItem(e,t,r)}));function r(t,r,i){return e.apply(this,arguments)}return r}(),n._createItem=function(){var e=t._asyncToGenerator((function*(e,t,r,i){const o=this.portalItem,a=!!(o&&o.id&&o.portal.user),n=e.portal;if(yield n._signIn(),!(yield this._canCopyItem(o,a,n)))throw new s("webmap:save-as-copy-not-allowed","Owner of this map does not allow others to save a copy");yield n.user.addItem({item:e,folder:i.folder,data:t}),this.portalItem=e,this._syncUpInstanceWithItem(e,t,r)}));function r(t,r,i,o){return e.apply(this,arguments)}return r}(),n._canCopyItem=function(){var e=t._asyncToGenerator((function*(e,t,r){return!(c.isSome(e)&&e.id&&e.typeKeywords&&e.typeKeywords.includes("useOnly"))||e.portal.portalHostname===r.portalHostname&&(t||(yield e.reload()),"admin"===e.itemControl||"update"===e.itemControl)}));function r(t,r,i){return e.apply(this,arguments)}return r}(),n._syncUpInstanceWithItem=function(e,t,r){d.MultiOriginJSONSupport.prototype.read.call(this,{version:t.version,authoringApp:t.authoringApp,authoringAppVersion:t.authoringAppVersion},{origin:"web-map",ignoreDefaults:!0,url:e.itemUrl&&f.urlToObject(e.itemUrl)}),A.updateOrigins(r),this.resourceInfo=t},n._updateItemThumbnail=function(){var e=t._asyncToGenerator((function*(){this.thumbnailUrl&&this._isOverridden("thumbnailUrl")&&(yield this.portalItem.updateThumbnail({thumbnail:this.thumbnailUrl,filename:this._thumbnailFilename}),this._clearThumbnailOverride())}));function r(){return e.apply(this,arguments)}return r}(),n._getPortalItem=function(e){let t=G.from(e);return t.id&&(t=t.clone(),t.id=null),t.type||(t.type=H),t.portal||(t.portal=F.getDefault()),this._validateItemType(t),t},n._updateFromInternal=function(){var e=t._asyncToGenerator((function*(e,t){if(t=t||{},yield m.whenOnce((()=>e.ready)),this._updateInitialViewProperties(e,t),e.map===this)for(const r of e.allLayerViews)for(const e of["visible","featureEffect"])e in r&&e in r.layer&&r._isOverridden(e)&&(r.layer[e]=r[e]);yield this._updateThumbnailUrl(e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),n._updateInitialViewProperties=function(e,t){if(t.backgroundExcluded||(this.initialViewProperties.background=e.background?.clone()),this.initialViewProperties.spatialReference=e.spatialReference.clone(),t.viewpointExcluded||(this.initialViewProperties.viewpoint=new a({rotation:e.rotation,scale:t.scalePreserved?e.scale:null,targetGeometry:this._getViewExtent(e)})),!t.widgetsExcluded)for(const r of e.persistableViewModels)r.updateWebDocument(this)},n._getViewExtent=function(e){const t=e.center.clone().normalize(),r=e.extent.clone(),i=r.width/2;return r.xmin=t.x-i,r.xmax=t.x+i,r},n._updateThumbnailUrl=function(){var e=t._asyncToGenerator((function*(e,t){if(t.thumbnailExcluded)return;const r=x.getOptimalThumbnailSize(e,t.thumbnailSize),i=yield e.takeScreenshot({format:"png",width:r.width,height:r.height});this._setAutoGeneratedThumbnail(i.dataUrl)}));function r(t,r){return e.apply(this,arguments)}return r}(),n._setAutoGeneratedThumbnail=function(e){this.thumbnailUrl=e,this._thumbnailFilename=null},n._clearThumbnailOverride=function(){this._clearOverride("thumbnailUrl"),this.clear("thumbnailUrl","user"),this._thumbnailFilename=null},n._generateCustomThumbnailFilename=function(e){if(f.isDataProtocol(e)){const t=f.dataComponents(e),r=t&&t.mediaType,i=r&&Y.get(r.toLowerCase())||null,o=`thumbnail${Date.now()}`;return i?`${o}.${i}`:o}return null},n._getThumbnailState=function(){let e=this.thumbnailUrl;return e&&(e=this._isOverridden("thumbnailUrl")?e:f.addQueryParameter(e,"w","8192")),{thumbnailUrl:e,filename:this._thumbnailFilename}},n._restoreThumbnailFromState=function(e){this.thumbnailUrl=e.thumbnailUrl,this._thumbnailFilename=e.filename},n._getAuthoringPropsState=function(){return{authoringApp:this.authoringApp,authoringAppVersion:this.authoringAppVersion,isAuthoringAppSetByUser:this._isAuthoringAppSetByUser,isAuthoringAppVersionSetByUser:this._isAuthoringAppVersionSetByUser}},n._restoreAuthoringPropsFromState=function(e){e.isAuthoringAppSetByUser?this.authoringApp=e.authoringApp:this._isAuthoringAppSetByUser=!1,e.isAuthoringAppVersionSetByUser?this.authoringAppVersion=e.authoringAppVersion:this._isAuthoringAppVersionSetByUser=!1},o.fromJSON=function(e){const t=e;if(!t)throw new s("webmap:empty-resource","Expected a JSON resource but got nothing");return new this({resourceInfo:t})},t._createClass(o,[{key:"authoringApp",set:function(e){this._isAuthoringAppSetByUser=!0,this._set("authoringApp",e)}},{key:"authoringAppVersion",set:function(e){this._isAuthoringAppVersionSetByUser=!0,this._set("authoringAppVersion",e)}},{key:"thumbnailUrl",get:function(){return this.portalItem&&this.portalItem.thumbnailUrl||null},set:function(e){e?(this._override("thumbnailUrl",e),this._thumbnailFilename=this._generateCustomThumbnailFilename(e)):this._clearThumbnailOverride()}}]),o}(d.MultiOriginJSONMixin(l.LoadableMixin(h.EsriPromiseMixin(o))));ye.VERSION=q,r.__decorate([_.property({type:B,json:{write:!0}})],ye.prototype,"applicationProperties",void 0),r.__decorate([_.property({type:String,json:{write:{allowNull:!0,ignoreOrigin:!0}}})],ye.prototype,"authoringApp",null),r.__decorate([S.writer("authoringApp")],ye.prototype,"writeAuthoringApp",null),r.__decorate([_.property({type:String,json:{write:{allowNull:!0,ignoreOrigin:!0}}})],ye.prototype,"authoringAppVersion",null),r.__decorate([S.writer("authoringAppVersion")],ye.prototype,"writeAuthoringAppVersion",null),r.__decorate([_.property({json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],ye.prototype,"basemap",void 0),r.__decorate([_.property({type:Q,json:{write:{overridePolicy:e=>({enabled:!!(e&&e.length>0),ignoreOrigin:!0})}}})],ye.prototype,"bookmarks",void 0),r.__decorate([_.property({type:N,json:{read:{source:"mapFloorInfo"},write:{target:"mapFloorInfo"}}})],ye.prototype,"floorInfo",void 0),r.__decorate([_.property({type:M,json:{write:!0}})],ye.prototype,"geotriggersInfo",void 0),r.__decorate([_.property({type:D,nonNullable:!0,json:{read:{source:["background","initialState.viewpoint","mapRangeInfo","spatialReference"]},write:{ignoreOrigin:!0,target:{background:{type:z},"initialState.viewpoint":{type:a},mapRangeInfo:{type:C},spatialReference:{type:T}}}}})],ye.prototype,"initialViewProperties",void 0),r.__decorate([b.reader("initialViewProperties")],ye.prototype,"readInitialViewProperties",null),r.__decorate([S.writer("initialViewProperties")],ye.prototype,"writeInitialViewProperties",null),r.__decorate([_.property({json:{read:!1,write:{target:"operationalLayers",ignoreOrigin:!0}}})],ye.prototype,"layers",void 0),r.__decorate([S.writer("layers")],ye.prototype,"writeLayers",null),r.__decorate([_.property({type:G})],ye.prototype,"portalItem",void 0),r.__decorate([_.property({json:{write:!0}})],ye.prototype,"presentation",void 0),r.__decorate([_.property()],ye.prototype,"resourceInfo",void 0),r.__decorate([_.property({readOnly:!0,type:$.Version,json:{read:{source:"version"},write:{allowNull:!0,ignoreOrigin:!0,target:"version",isRequired:!0}}})],ye.prototype,"sourceVersion",void 0),r.__decorate([b.reader("sourceVersion")],ye.prototype,"readSourceVersion",null),r.__decorate([S.writer("sourceVersion")],ye.prototype,"writeSourceVersion",null),r.__decorate([_.property({json:{read:!1,write:{ignoreOrigin:!0}}})],ye.prototype,"tables",void 0),r.__decorate([S.writer("tables")],ye.prototype,"writeTables",null),r.__decorate([_.property()],ye.prototype,"thumbnailUrl",null),r.__decorate([_.property({type:E,json:{write:!0}})],ye.prototype,"widgets",void 0),r.__decorate([_.property({type:X,json:{read:!0,write:!0}})],ye.prototype,"utilityNetworks",void 0),ye=r.__decorate([v.subclass("esri.WebMap")],ye);return ye}));
