/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["require","./chunks/_rollupPluginBabelHelpers","./chunks/tslib.es6","./kernel","./Map","./Viewpoint","./core/arrayUtils","./core/Collection","./core/Error","./core/Loadable","./core/loadAll","./core/Logger","./core/maybe","./core/MultiOriginJSONSupport","./core/Promise","./core/promiseUtils","./core/reactiveUtils","./core/urlUtils","./core/accessorSupport/decorators/property","./core/has","./core/accessorSupport/ensureType","./core/accessorSupport/decorators/reader","./core/accessorSupport/decorators/subclass","./core/accessorSupport/decorators/writer","./core/accessorSupport/originUtils","./core/accessorSupport/read","./geometry/SpatialReference","./geometry/support/spatialReferenceUtils","./geometry/support/webMercatorUtils","./layers/support/arcgisLayerUrl","./networks/UtilityNetwork","./portal/Portal","./portal/PortalItem","./portal/support/portalItemUtils","./rest/geometryService/project","./rest/support/ProjectParameters","./support/basemapUtils","./support/MapFloorInfo","./webdoc/RangeInfo","./webdoc/Widgets","./webdoc/support/thumbnailUtils","./webdoc/support/writeUtils","./webmap/ApplicationProperties","./webmap/Bookmark","./webmap/InitialViewProperties","./webmap/Version","./webmap/background/ColorBackground"],(function(e,t,r,i,o,n,a,s,l,p,u,c,d,h,y,m,f,_,w,g,b,v,S,A,I,T,O,L,P,V,U,F,W,G,R,M,N,k,K,x,C,j,B,E,J,D,$){"use strict";const z=new D.Version(2,24),q="Web Map",H=s.ofType(E),Q=s.ofType(U),X=c.getLogger("esri.WebMap"),Y=new Map;Y.set("image/jpeg","jpeg"),Y.set("image/jpg","jpg"),Y.set("image/png","png"),Y.set("image/gif","gif");const Z="ArcGIS Pro",ee="ArcGIS API for JavaScript",te="CollectorDisabled",re="Collector",ie="Data Editing",oe="OfflineDisabled",ne="Offline",ae="Workforce Project",se="Workforce Worker",le="Workforce Dispatcher",pe="Offline Map Areas",ue="FieldMapsDisabled",ce="DeveloperBasemap",de=["NatGeo_World_Map","Ocean_Basemap","USA_Topo_Maps","World_Imagery","World_Street_Map","World_Terrain_Base","World_Topo_Map","World_Hillshade","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Reference/World_Boundaries_and_Places","Reference/World_Reference_Overlay","Reference/World_Transportation"].map((e=>e.toLowerCase()));let he=function(r){function o(e){var t;return(t=r.call(this,e)||this).applicationProperties=null,t.bookmarks=new H,t.floorInfo=null,t.initialViewProperties=new J,t.portalItem=null,t.presentation=null,t.sourceVersion=null,t.widgets=null,t.utilityNetworks=null,t.authoringApp=t.authoringAppVersion=null,t._isAuthoringAppSetByUser=t._isAuthoringAppVersionSetByUser=!1,t}t._inheritsLoose(o,r);var s=o.prototype;return s.destroy=function(){const e=this.portalItem;this.portalItem=null,null==e||e.destroy()},s.initialize=function(){if(this.when().catch((e=>{X.error("#load()","Failed to load web map",e)})),this.resourceInfo){let t;try{t=this._validateJSON(this.resourceInfo)}catch(e){return void this.addResolvingPromise(Promise.reject(e))}this.read(t)}},s.writeAuthoringApp=function(e,t){e&&this._isAuthoringAppSetByUser?t.authoringApp=e:t.authoringApp=ee},s.writeAuthoringAppVersion=function(e,t){e&&this._isAuthoringAppVersionSetByUser?t.authoringAppVersion=e:t.authoringAppVersion=i.version},s.readInitialViewProperties=function(e,t){var r;const i=new J;t.background&&(i.background=$.fromJSON(t.background));const o=null==(r=t.initialState)?void 0:r.viewpoint;if(o){if(o.rotation){D.Version.parse(t.version||"","webmap").lessThan(2,20)&&t.authoringApp===Z&&(o.rotation*=-1)}i.viewpoint=n.fromJSON(o)}return t.mapRangeInfo&&(i.rangeInfo=K.fromJSON(t.mapRangeInfo)),t.spatialReference&&(i.spatialReference=O.fromJSON(t.spatialReference)),i},s.writeInitialViewProperties=function(e,t,r,i){if(!e)return;const o=e.background;o&&o.color&&(t.background=o.write({},i)),e.viewpoint&&(t.initialState={viewpoint:e.viewpoint.write({},i)}),e.rangeInfo&&(t.mapRangeInfo=e.rangeInfo.toJSON(i)),e.spatialReference&&(t.spatialReference=e.spatialReference.write({},i))},s.writeLayers=function(e,t,r,i){t[r]=this._writeLayers(e,i,"operational-layers")},s.readSourceVersion=function(e,t){const[r,i]=t.version.split(".");return new D.Version(parseInt(r,10),parseInt(i,10))},s.writeSourceVersion=function(e,t,r){t[r]=`${z.major}.${z.minor}`},s.writeTables=function(e,t,r,i){const o=this._writeLayers(e,i,"tables");o.length&&(t[r]=o)},s.load=function(e){return this.addResolvingPromise(this._loadFromSource()),Promise.resolve(this)},s.loadAll=function(){return u.loadAll(this,(e=>{e(this.ground,this.basemap,this.layers,this.tables)}))},s.read=function(e,t){t={...t,origin:"web-map"};const i=this._getAuthoringPropsState();T.readLoadable(this,e,(t=>r.prototype.read.call(this,e,t)),t),this._restoreAuthoringPropsFromState(i)},s.write=function(e,t){if("loaded"!==this.loadStatus){const e=new l("webmap:not-loaded","Web map must be loaded before it can be serialized");throw X.error("#toJSON()","Web map must be loaded before it can be serialized",this.loadError||this.loadStatus),e}return this._removeDanglingLayerRefs(),t={...t,origin:"web-map",restrictedWebMapWriting:!0,webmap:this},r.prototype.write.call(this,e,t)},s.save=function(){var e=t._asyncToGenerator((function*(e){e=e||{},this._validateItem(),yield this._updateFromPromise,yield this.load(),yield this._loadLayerContainers(),yield this._beforeSave(),yield this._validateMap();const t=this.portalItem,r={origin:"web-map",messages:[],writtenProperties:[],url:t.itemUrl&&_.urlToObject(t.itemUrl),portal:t.portal||F.getDefault()},i=this.write({},r);return this._validateJSONForWriting(r,e),yield this._updateItemProperties(t),yield this._updateItem(t,i,r),yield this._updateItemThumbnail(),t}));function r(t){return e.apply(this,arguments)}return r}(),s.saveAs=function(){var e=t._asyncToGenerator((function*(e,t){t=t||{};const r=this._getPortalItem(e);yield this._updateFromPromise,yield this.load(),yield this._loadLayerContainers(),yield this._beforeSave(),yield this._validateMap();const i={origin:"web-map",messages:[],writtenProperties:[],url:null,portal:r.portal},o=this.write({},i);this._validateJSONForWriting(i,t),yield this._updateItemPropertiesForSaveAs(r);const n=this._getThumbnailState();return yield this._createItem(r,o,i,t),this._restoreThumbnailFromState(n),yield this._updateItemThumbnail(),r}));function r(t,r){return e.apply(this,arguments)}return r}(),s.updateFrom=function(){var e=t._asyncToGenerator((function*(e,t){const r=this._updateFromInternal(e,t);this._updateFromPromise=r,yield r;r===this._updateFromPromise&&(this._updateFromPromise=null)}));function r(t,r){return e.apply(this,arguments)}return r}(),s.getLayerJSONFromResourceInfo=function(e){var t,r,i,o;const n=this.resourceInfo;return this._collectAllLayersJSON(a.flatten([null==n||null==(t=n.baseMap)?void 0:t.baseMapLayers,null==n?void 0:n.operationalLayers,null==(r=this.basemap)||null==(i=r.resourceInfo)||null==(o=i.data)?void 0:o.baseMapLayers])).find((t=>t.id===e.id))},s._collectAllLayersJSON=function(e){return e.reduce(((e,t)=>(e.push(t),"GroupLayer"===t.layerType&&(e=e.concat(this._collectAllLayersJSON(t.layers||[]))),e)),[])},s._writeLayers=function(e,t,r){t={...t,layerContainerType:r};return e.map((e=>d.unwrap(j.getLayerJSON(e,"tables"===r?null:this.getLayerJSONFromResourceInfo(e),t)))).filter(Boolean).toArray()},s._loadFromSource=function(){return this.resourceInfo?this._loadFromJSON(this.resourceInfo,{origin:"web-map"}):this.portalItem&&this.portalItem.id?this._loadFromItem(this.portalItem):Promise.resolve(null)},s._loadFromItem=function(e){return e.load().catch((e=>{throw new l("webmap:load-portal-item","Failed to load portal item",{error:e})})).then((()=>{if("Web Map"!==e.type)throw new l("webmap:invalid-portal-item","Invalid portal item type '${type}', expected 'Web Map'",{type:e.type})})).then((()=>e.fetchData())).then((t=>(this.resourceInfo=t,this._readAndLoadFromJSON(t,{origin:"web-map",portal:e.portal||F.getDefault()})))).then((()=>this._computeInitialViewpoint()))},s._readAndLoadFromJSON=function(e,t){const r=this._validateJSON(e);return this.read(r,t),this._loadFromJSON(r,t)},s._validateJSON=function(e){const t=D.Version.parse(e.version||"","webmap");return z.validate(t),e.version=`${t.major}.${t.minor}`,e},s._loadFromJSON=function(t,r){const i={context:{...r,layerContainerType:"operational-layers"}};return this.portalItem&&(i.context.portal=this.portalItem.portal||F.getDefault()),new Promise(((t,r)=>e(["./layers/support/layersCreator"],t,r))).then((({populateOperationalLayers:e})=>{const r=[],o=t.operationalLayers;o&&o.length&&r.push(e(this.layers,o,i));const n={...i,context:{...i.context,layerContainerType:"tables"},defaultLayerType:"ArcGISFeatureLayer"},a=t.tables;return a&&a.length&&r.push(e(this.tables,a,n)),m.eachAlways(r).then((()=>{}))}))},s._computeInitialViewpoint=function(){var e=t._asyncToGenerator((function*(){var e,t;let r=this.initialViewProperties;if(null==(e=r)||null==(t=e.viewpoint)?void 0:t.targetGeometry)return;const i=yield this._getExtentFromItem();i&&(r=r?r.clone():new J,r.viewpoint=new n,r.viewpoint.targetGeometry=i,this.initialViewProperties=r)}));function r(){return e.apply(this,arguments)}return r}(),s._getExtentFromItem=function(){var r=t._asyncToGenerator((function*(){var t,r;const i=null==(t=this.initialViewProperties)?void 0:t.spatialReference,o=null==(r=this.portalItem)?void 0:r.extent;if(i&&o){if(i.isWGS84)return o.clone();if(i.isWebMercator)return P.geographicToWebMercator(o);return(yield new Promise(((t,r)=>e(["./portal/support/geometryServiceUtils"],t,r)))).getGeometryServiceURL(this.portalItem).then((e=>{const t=new M;return t.geometries=[o],t.outSpatialReference=i,R.project(e,t)})).then((e=>e[0])).catch((e=>(X.error("Error projecting item's extent:",e),null)))}return null}));function i(){return r.apply(this,arguments)}return i}(),s._removeDanglingLayerRefs=function(){const e=this.applicationProperties,t=e&&e.viewing&&e.viewing.search,r=e=>!!this.allLayers.find((t=>t.id===e));t&&t.layers&&(t.layers=t.layers.filter((e=>r(e.id)))),t&&t.tables&&(t.tables=t.tables.filter((e=>!!this.tables.find((t=>t.id===e.id)))));const i=e&&e.editing&&e.editing.locationTracking;i&&i.info&&!r(i.info.layerId)&&(e.editing=null);const o=this.presentation&&this.presentation.slides;o&&o.forEach((e=>{e.visibleLayers&&(e.visibleLayers=e.visibleLayers.filter((e=>r(e.id))))}))},s._validateMap=function(){var e=t._asyncToGenerator((function*(){var e;if(null==(e=this.basemap)||!e.baseLayers.length)throw new l("webmap:save","Map does not have a valid basemap with a base layer.");let t=null;if(yield f.whenOnce((()=>{const e=N.findSpatialReference(this.initialViewProperties,this.basemap);return t=e.spatialReference,!e.updating})),!L.equals(t,this.initialViewProperties.spatialReference))throw new l("webmap:save","The spatial reference of the basemap is not compatible with the one from the map.",{expected:this.initialViewProperties.spatialReference,actual:t})}));function r(){return e.apply(this,arguments)}return r}(),s._validateItem=function(){if(!this.portalItem)throw X.error("save: requires the portalItem property to be set"),new l("webmap:portal-item-not-set","Portal item to save to has not been set on the WebMap");this._validateItemType(this.portalItem)},s._validateItemType=function(e){if(e.type!==q)throw new l("webmap:portal-item-wrong-type",`Portal item needs to have type "${q}"`)},s._loadLayerContainers=function(){const e=[];return this.basemap&&e.push(this.basemap.load()),this.ground&&e.push(this.ground.load()),m.eachAlways(e).then((()=>{}))},s._beforeSave=function(){var e=t._asyncToGenerator((function*(){const e=[];for(const t of this.allLayers)if("beforeSave"in t&&"function"==typeof t.beforeSave){const r=t.beforeSave();r&&e.push(r)}yield m.eachAlways(e)}));function r(){return e.apply(this,arguments)}return r}(),s._loadAllLayers=function(){const e=this._getAllLayersAndTables().map((e=>e.load()));return m.eachAlways(e).then((()=>{}))},s._getAllLayersAndTables=function(){return this.allLayers.concat(this.allTables)},s._validateJSONForWriting=function(e,t){let r=e.messages.filter((e=>"error"===e.type)).map((e=>new l(e.name,e.message,e.details)));if(t.ignoreUnsupported&&(r=r.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name))),r.length>0)throw new l("webmap:save","Failed to save webmap due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:r})},s._updateItemProperties=function(){var e=t._asyncToGenerator((function*(e){e.extent=yield this._getWGS84Extent(this.initialViewProperties.viewpoint.targetGeometry),yield this._updateTypeKeywords(e)}));function r(t){return e.apply(this,arguments)}return r}(),s._updateItemPropertiesForSaveAs=function(){var e=t._asyncToGenerator((function*(e){G.removeTypeKeyword(e,te),G.removeTypeKeyword(e,oe),G.removeTypeKeyword(e,ae),G.removeTypeKeyword(e,se),G.removeTypeKeyword(e,le),G.removeTypeKeyword(e,pe),G.removeTypeKeyword(e,ue),yield this._updateItemProperties(e)}));function r(t){return e.apply(this,arguments)}return r}(),s._getWGS84Extent=function(){var e=t._asyncToGenerator((function*(e){const t=e.clone().normalize();let r;if(t.length>1)for(const i of t)r?i.width>r.width&&(r=i):r=i;else r=t[0];return this._projectToWGS84(r)}));function r(t){return e.apply(this,arguments)}return r}(),s._projectToWGS84=function(){var r=t._asyncToGenerator((function*(t){const r=t.spatialReference;if(r.isWGS84)return t.clone();if(r.isWebMercator)return P.webMercatorToGeographic(t);const i=yield new Promise(((t,r)=>e(["./portal/support/geometryServiceUtils"],t,r))),o=yield i.getGeometryServiceURL(this.portalItem),n=new M;n.geometries=[t],n.outSpatialReference=O.WGS84;return(yield R.project(o,n))[0]}));function i(e){return r.apply(this,arguments)}return i}(),s._updateTypeKeywords=function(){var e=t._asyncToGenerator((function*(e){G.addTypeKeyword(e,ee),yield this._loadAllLayers(),this._evalCollectorKeyword(e),this._evalDataEditingKeyword(e),this._evalOfflineKeyword(e),this._evalDeveloperBasemapKeyword(e),e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)))}));function r(t){return e.apply(this,arguments)}return r}(),s._evalCollectorKeyword=function(e){G.hasTypeKeyword(e,te)||G.hasTypeKeyword(e,ae)||G.hasTypeKeyword(e,se)||G.hasTypeKeyword(e,le)||!this._hasEditableFeatureLayer()?G.removeTypeKeyword(e,re):G.addTypeKeyword(e,re)},s._evalDataEditingKeyword=function(e){this._hasEditableFeatureLayer()?G.addTypeKeyword(e,ie):G.removeTypeKeyword(e,ie)},s._evalOfflineKeyword=function(e){!G.hasTypeKeyword(e,oe)&&this._isOfflineCapableMap()?G.addTypeKeyword(e,ne):G.removeTypeKeyword(e,ne)},s._evalDeveloperBasemapKeyword=function(e){N.hasDeveloperBasemapLayer(this.basemap)?G.addTypeKeyword(e,ce):G.removeTypeKeyword(e,ce)},s._hasEditableFeatureLayer=function(){return this._getAllLayersAndTables().some((e=>e.loaded&&this._isFeatureServiceLayer(e)&&e.capabilities.operations.supportsEditing&&e.editingEnabled))},s._isFeatureServiceLayer=function(e){return!("feature"!==e.type||!e.source||"feature-layer"!==e.source.type)},s._isOfflineCapableMap=function(){return this._getAllLayersAndTables().filter((e=>"group"!==e.type)).every((e=>e.loaded&&this._isOfflineCapableLayer(e)))},s._isOfflineCapableLayer=function(e){return this._isFeatureServiceLayer(e)&&e.capabilities.operations.supportsSync||("tile"===e.type||"vector-tile"===e.type)&&(e.capabilities.operations.supportsExportTiles||this._isExportableAGOLTileLayer(e)||N.isDeveloperBasemapLayer(e))&&e.spatialReference.equals(this.initialViewProperties.spatialReference)},s._isExportableAGOLTileLayer=function(e){return"tile"===e.type&&(V.isServerOrServicesAGOLUrl(e.url)&&de.some((t=>e.url.toLowerCase().indexOf("/"+t+"/")>-1)))},s._updateItem=function(){var e=t._asyncToGenerator((function*(e,t,r){yield e.update({data:t}),this._syncUpInstanceWithItem(e,t,r)}));function r(t,r,i){return e.apply(this,arguments)}return r}(),s._createItem=function(){var e=t._asyncToGenerator((function*(e,t,r,i){const o=this.portalItem,n=!!(o&&o.id&&o.portal.user),a=e.portal;if(yield a._signIn(),!(yield this._canCopyItem(o,n,a)))throw new l("webmap:save-as-copy-not-allowed","Owner of this map does not allow others to save a copy");yield a.user.addItem({item:e,folder:i.folder,data:t}),this.portalItem=e,this._syncUpInstanceWithItem(e,t,r)}));function r(t,r,i,o){return e.apply(this,arguments)}return r}(),s._canCopyItem=function(){var e=t._asyncToGenerator((function*(e,t,r){return!(d.isSome(e)&&e.id&&e.typeKeywords&&e.typeKeywords.indexOf("useOnly")>-1)||e.portal.portalHostname===r.portalHostname&&(t||(yield e.reload()),"admin"===e.itemControl||"update"===e.itemControl)}));function r(t,r,i){return e.apply(this,arguments)}return r}(),s._syncUpInstanceWithItem=function(e,t,r){h.MultiOriginJSONSupport.prototype.read.call(this,{version:t.version,authoringApp:t.authoringApp,authoringAppVersion:t.authoringAppVersion},{origin:"web-map",ignoreDefaults:!0,url:e.itemUrl&&_.urlToObject(e.itemUrl)}),I.updateOrigins(r),this.resourceInfo=t},s._updateItemThumbnail=function(){var e=t._asyncToGenerator((function*(){this.thumbnailUrl&&this._isOverridden("thumbnailUrl")&&(yield this.portalItem.updateThumbnail({thumbnail:this.thumbnailUrl,filename:this._thumbnailFilename}),this._clearThumbnailOverride())}));function r(){return e.apply(this,arguments)}return r}(),s._getPortalItem=function(e){let t=W.from(e);return t.id&&(t=t.clone(),t.id=null),t.type||(t.type=q),t.portal||(t.portal=F.getDefault()),this._validateItemType(t),t},s._updateFromInternal=function(){var e=t._asyncToGenerator((function*(e,t){if(t=t||{},yield f.whenOnce((()=>e.ready)),this._updateInitialViewProperties(e,t),e.map===this)for(const r of e.allLayerViews)for(const e of["visible","featureEffect"])e in r&&e in r.layer&&r._isOverridden(e)&&(r.layer[e]=r[e]);yield this._updateThumbnailUrl(e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),s._updateInitialViewProperties=function(e,t){var r;t.backgroundExcluded||(this.initialViewProperties.background=null==(r=e.background)?void 0:r.clone());if(this.initialViewProperties.spatialReference=e.spatialReference.clone(),t.viewpointExcluded||(this.initialViewProperties.viewpoint=new n({rotation:e.rotation,scale:t.scalePreserved?e.scale:null,targetGeometry:this._getViewExtent(e)})),!t.widgetsExcluded)for(const i of e.persistableViewModels)i.updateWebDocument(this)},s._getViewExtent=function(e){const t=e.center.clone().normalize(),r=e.extent.clone(),i=r.width/2;return r.xmin=t.x-i,r.xmax=t.x+i,r},s._updateThumbnailUrl=function(){var e=t._asyncToGenerator((function*(e,t){if(t.thumbnailExcluded)return;const r=C.getOptimalThumbnailSize(e,t.thumbnailSize),i=yield e.takeScreenshot({format:"png",width:r.width,height:r.height});this._setAutoGeneratedThumbnail(i.dataUrl)}));function r(t,r){return e.apply(this,arguments)}return r}(),s._setAutoGeneratedThumbnail=function(e){this.thumbnailUrl=e,this._thumbnailFilename=null},s._clearThumbnailOverride=function(){this._clearOverride("thumbnailUrl"),this.clear("thumbnailUrl","user"),this._thumbnailFilename=null},s._generateCustomThumbnailFilename=function(e){if(_.isDataProtocol(e)){const t=_.dataComponents(e),r=t&&t.mediaType,i=r&&Y.get(r.toLowerCase())||null,o=`thumbnail${Date.now()}`;return i?`${o}.${i}`:o}return null},s._getThumbnailState=function(){let e=this.thumbnailUrl;return e&&(e=this._isOverridden("thumbnailUrl")?e:_.addQueryParameter(e,"w","8192")),{thumbnailUrl:e,filename:this._thumbnailFilename}},s._restoreThumbnailFromState=function(e){this.thumbnailUrl=e.thumbnailUrl,this._thumbnailFilename=e.filename},s._getAuthoringPropsState=function(){return{authoringApp:this.authoringApp,authoringAppVersion:this.authoringAppVersion,isAuthoringAppSetByUser:this._isAuthoringAppSetByUser,isAuthoringAppVersionSetByUser:this._isAuthoringAppVersionSetByUser}},s._restoreAuthoringPropsFromState=function(e){e.isAuthoringAppSetByUser?this.authoringApp=e.authoringApp:this._isAuthoringAppSetByUser=!1,e.isAuthoringAppVersionSetByUser?this.authoringAppVersion=e.authoringAppVersion:this._isAuthoringAppVersionSetByUser=!1},o.fromJSON=function(e){const t=e;if(!t)throw new l("webmap:empty-resource","Expected a JSON resource but got nothing");return new this({resourceInfo:t})},t._createClass(o,[{key:"authoringApp",set:function(e){this._isAuthoringAppSetByUser=!0,this._set("authoringApp",e)}},{key:"authoringAppVersion",set:function(e){this._isAuthoringAppVersionSetByUser=!0,this._set("authoringAppVersion",e)}},{key:"thumbnailUrl",get:function(){return this.portalItem&&this.portalItem.thumbnailUrl||null},set:function(e){e?(this._override("thumbnailUrl",e),this._thumbnailFilename=this._generateCustomThumbnailFilename(e)):this._clearThumbnailOverride()}}]),o}(h.MultiOriginJSONMixin(p.LoadableMixin(y.EsriPromiseMixin(o))));he.VERSION=z,r.__decorate([w.property({type:B,json:{write:!0}})],he.prototype,"applicationProperties",void 0),r.__decorate([w.property({type:String,json:{write:{allowNull:!0,ignoreOrigin:!0}}})],he.prototype,"authoringApp",null),r.__decorate([A.writer("authoringApp")],he.prototype,"writeAuthoringApp",null),r.__decorate([w.property({type:String,json:{write:{allowNull:!0,ignoreOrigin:!0}}})],he.prototype,"authoringAppVersion",null),r.__decorate([A.writer("authoringAppVersion")],he.prototype,"writeAuthoringAppVersion",null),r.__decorate([w.property({json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],he.prototype,"basemap",void 0),r.__decorate([w.property({type:H,json:{write:{overridePolicy:e=>({enabled:!!(e&&e.length>0),ignoreOrigin:!0})}}})],he.prototype,"bookmarks",void 0),r.__decorate([w.property({type:k,json:{read:{source:"mapFloorInfo"},write:{target:"mapFloorInfo"}}})],he.prototype,"floorInfo",void 0),r.__decorate([w.property({type:J,nonNullable:!0,json:{read:{source:["background","initialState.viewpoint","mapRangeInfo","spatialReference"]},write:{ignoreOrigin:!0,target:{background:{type:$},"initialState.viewpoint":{type:n},mapRangeInfo:{type:K},spatialReference:{type:O}}}}})],he.prototype,"initialViewProperties",void 0),r.__decorate([v.reader("initialViewProperties")],he.prototype,"readInitialViewProperties",null),r.__decorate([A.writer("initialViewProperties")],he.prototype,"writeInitialViewProperties",null),r.__decorate([w.property({json:{read:!1,write:{target:"operationalLayers",ignoreOrigin:!0}}})],he.prototype,"layers",void 0),r.__decorate([A.writer("layers")],he.prototype,"writeLayers",null),r.__decorate([w.property({type:W})],he.prototype,"portalItem",void 0),r.__decorate([w.property({json:{write:!0}})],he.prototype,"presentation",void 0),r.__decorate([w.property()],he.prototype,"resourceInfo",void 0),r.__decorate([w.property({readOnly:!0,type:D.Version,json:{read:{source:"version"},write:{allowNull:!0,ignoreOrigin:!0,target:"version",isRequired:!0}}})],he.prototype,"sourceVersion",void 0),r.__decorate([v.reader("sourceVersion")],he.prototype,"readSourceVersion",null),r.__decorate([A.writer("sourceVersion")],he.prototype,"writeSourceVersion",null),r.__decorate([w.property({json:{read:!1,write:{ignoreOrigin:!0}}})],he.prototype,"tables",void 0),r.__decorate([A.writer("tables")],he.prototype,"writeTables",null),r.__decorate([w.property()],he.prototype,"thumbnailUrl",null),r.__decorate([w.property({type:x,json:{write:!0}})],he.prototype,"widgets",void 0),r.__decorate([w.property({type:Q,json:{read:!0,write:!0}})],he.prototype,"utilityNetworks",void 0),he=r.__decorate([S.subclass("esri.WebMap")],he);return he}));
