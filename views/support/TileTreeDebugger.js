/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../Color","../../Graphic","../../core/Accessor","../../core/mathUtils","../../core/maybe","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/subclass","../../symbols/PointSymbol3D","../../symbols/SimpleFillSymbol","../../symbols/TextSymbol","../../symbols/TextSymbol3DLayer"],(function(e,t,s,o,l,r,i,n,a,c,y,h,b,p,u,g){"use strict";const d=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];e.TileTreeDebugger=function(e){function s(t){var s;return(s=e.call(this,t)||this).updating=!1,s.enablePolygons=!0,s.enableLabels=!0,s._polygons=new Map,s._labels=new Map,s._enabled=!0,s}t._inheritsLoose(s,e);var r=s.prototype;return r.initialize=function(){this._symbols=d.map((e=>new p({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()},r.destroy=function(){this._enabled=!1,this.clear()},r.update=function(){if(!this._enabled)return void this.clear();const e=e=>{if(n.isSome(e.label))return e.label;let t=e.lij.toString();return n.isSome(e.loadPriority)&&(t+=` (${e.loadPriority})`),t},t=this.getTiles(),s=new Array,r=new Set((this._labels.size,this._labels.keys()));t.forEach(((a,c)=>{const y=a.lij.toString();r.delete(y);const h=a.lij[0],p=a.geometry;if(this.enablePolygons&&!this._polygons.has(y)){const e=new l({geometry:p,symbol:this._symbols[h%this._symbols.length]});this._polygons.set(y,e),s.push(e)}if(this.enableLabels){const r=e(a),h=c/(t.length-1),d=i.lerp(0,200,h),_=i.lerp(20,6,h)/.75,m=n.isSome(a.loadPriority)&&a.loadPriority>=t.length,f=new o([d,m?0:d,m?0:d]),w="3d"===this.view.type?()=>new b({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new g({text:r,halo:{color:"white",size:1/.75},material:{color:f},size:_})]}):()=>new u({text:r,haloColor:"white",haloSize:1/.75,color:f,size:_}),v=this._labels.get(y);if(v){const e=w();(n.isNone(v.symbol)||JSON.stringify(e)!==JSON.stringify(v.symbol))&&(v.symbol=e)}else{const e=new l({geometry:p.extent.center,symbol:w()});this._labels.set(y,e),s.push(e)}}}));const a=new Array;r.forEach((e=>{const t=this._polygons.get(e);null!=t&&(a.push(t),this._polygons.delete(e));const s=this._labels.get(e);null!=s&&(a.push(s),this._labels.delete(e))})),this.view.graphics.removeMany(a),this.view.graphics.addMany(s)},r.clear=function(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()},t._createClass(s,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this.update())}}]),s}(r),s.__decorate([a.property({constructOnly:!0})],e.TileTreeDebugger.prototype,"view",void 0),s.__decorate([a.property({readOnly:!0})],e.TileTreeDebugger.prototype,"updating",void 0),s.__decorate([a.property()],e.TileTreeDebugger.prototype,"enabled",null),e.TileTreeDebugger=s.__decorate([h.subclass("esri.views.support.TileTreeDebugger")],e.TileTreeDebugger),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
