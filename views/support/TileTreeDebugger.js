/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/Accessor","../../core/mathUtils","../../Color","../../symbols/TextSymbol3DLayer","../../symbols/PointSymbol3D","../../symbols/SimpleFillSymbol","../../symbols/TextSymbol","../../Graphic"],(function(e,s,t,o,l,r,i,n,a,c,h,y,p,b,u,g,_,d,m,f){"use strict";const w=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];e.TileTreeDebugger=function(e){function t(s){var t;return(t=e.call(this,s)||this).updating=!1,t.enablePolygons=!0,t.enableLabels=!0,t._polygons=new Map,t._labels=new Map,t._enabled=!0,t}s._inheritsLoose(t,e);var o=t.prototype;return o.initialize=function(){this._symbols=w.map((e=>new d({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()},o.destroy=function(){this._enabled=!1,this.clear()},o.update=function(){if(!this._enabled)return void this.clear();const e=e=>{if(l.isSome(e.label))return e.label;let s=e.lij.toString();return l.isSome(e.loadPriority)&&(s+=` (${e.loadPriority})`),s},s=this.getTiles(),t=new Array,o=new Set((this._labels.size,this._labels.keys()));s.forEach(((r,i)=>{const n=r.lij.toString();o.delete(n);const a=r.lij[0],c=r.geometry;if(this.enablePolygons&&!this._polygons.has(n)){const e=new f({geometry:c,symbol:this._symbols[a%this._symbols.length]});this._polygons.set(n,e),t.push(e)}if(this.enableLabels){const o=e(r),a=i/(s.length-1),h=b.lerp(0,200,a),y=b.lerp(20,6,a)/.75,p=l.isSome(r.loadPriority)&&r.loadPriority>=s.length,d=new u([h,p?0:h,p?0:h]),w="3d"===this.view.type?()=>new _({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new g({text:o,halo:{color:"white",size:1/.75},material:{color:d},size:y})]}):()=>new m({text:o,haloColor:"white",haloSize:1/.75,color:d,size:y});if(this._labels.has(n)){const e=this._labels.get(n),s=w();(l.isNone(e.symbol)||JSON.stringify(s)!==JSON.stringify(e.symbol))&&(e.symbol=s)}else{const e=new f({geometry:c.extent.center,symbol:w()});this._labels.set(n,e),t.push(e)}}}));const r=new Array;o.forEach((e=>{this._polygons.has(e)&&(r.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(r.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(r),this.view.graphics.addMany(t)},o.clear=function(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()},s._createClass(t,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this.update())}}]),t}(p),t.__decorate([n.property({constructOnly:!0})],e.TileTreeDebugger.prototype,"view",void 0),t.__decorate([n.property({readOnly:!0})],e.TileTreeDebugger.prototype,"updating",void 0),t.__decorate([n.property()],e.TileTreeDebugger.prototype,"enabled",null),e.TileTreeDebugger=t.__decorate([a.subclass("esri.views.support.TileTreeDebugger")],e.TileTreeDebugger),Object.defineProperty(e,"__esModule",{value:!0})}));
