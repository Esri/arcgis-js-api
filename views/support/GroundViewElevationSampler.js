/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Evented.js";import o from"../../core/Logger.js";import{isNone as r,isSome as s,unwrapOr as i}from"../../core/maybe.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{toExtent as p}from"../../geometry/support/aaBoundingRect.js";import{extentContainsXYZ as l}from"../../geometry/support/contains.js";import{updateGeometryElevation as m}from"../../layers/support/ElevationSampler.js";import{ELEVATION_NODATA_VALUE as c}from"../3d/terrain/TerrainConst.js";const u=o.getLogger("esri.views.support.GroundViewElevationSampler");let d=class extends t.EventedAccessor{constructor(e){super(e),this.demResolution={min:-1,max:-1},this.noDataValue=c}initialize(){this.view.basemapTerrain.on("elevation-change",(()=>this.emit("changed",{})))}get extent(){const e=this.view.basemapTerrain;if(r(e.extent)||!e.spatialReference)return null;const t=p(e.extent,e.spatialReference);return t.zmin=e.elevationBounds.min,t.zmax=e.elevationBounds.max,t}elevationAt(e,t){if(r(this.extent)||!l(this.extent,e,t)){const o=s(this.extent)?`${this.extent.xmin}, ${this.extent.ymin}, ${this.extent.xmax}, ${this.extent.ymax}`:null;return u.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${o})`),this.noDataValue}return i(this.view.elevationProvider.getElevation(e,t,0,this.spatialReference,"ground"),this.noDataValue)}queryElevation(e){return m(e.clone(),this)}};e([n({readOnly:!0})],d.prototype,"demResolution",void 0),e([n({readOnly:!0})],d.prototype,"extent",null),e([n({readOnly:!0})],d.prototype,"noDataValue",void 0),e([n({readOnly:!0,aliasOf:"view.basemapTerrain.spatialReference"})],d.prototype,"spatialReference",void 0),e([n({constructOnly:!0})],d.prototype,"view",void 0),d=e([a("esri.views.support.GroundViewElevationSampler")],d);const v=d;export{v as default};
