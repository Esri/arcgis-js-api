/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../core/mathUtils","../../chunks/vec2","../../chunks/vec2f64","../../chunks/vec3","../../chunks/vec3f64","./geometry2dUtils"],(function(e,t,n,s,r,c,o){"use strict";function a({start:t,end:s,type:r},o,a){const i=[],u=o,l=n.subtract(N,s,t),d=n.subtract(m,t,u),f=n.squaredLength(l),A=2*n.dot(l,d),p=A*A-4*f*(n.squaredLength(d)-a*a);if(0===p){const s=-A/(2*f);(r===e.VerticalPlaneType.PLANE||s>=0)&&i.push(n.scaleAndAdd(c.fromValues(0,0,o[2]),t,l,s))}else if(p>0){const s=Math.sqrt(p),a=(-A+s)/(2*f);(r===e.VerticalPlaneType.PLANE||a>=0)&&i.push(n.scaleAndAdd(c.fromValues(0,0,o[2]),t,l,a));const u=(-A-s)/(2*f);(r===e.VerticalPlaneType.PLANE||u>=0)&&i.push(n.scaleAndAdd(c.fromValues(0,0,o[2]),t,l,u))}return i}function i(t,s){const a=t.start,i=t.end,u=n.subtract(N,i,a),l=r.set(m,-u[1],u[0],0),d=s.start,f=s.end,A=r.sub(g,f,d),p=r.dot(A,l),L=r.set(k,a[0],a[1],0),y=r.sub(v,L,d),b=r.dot(y,l);if(Math.abs(p)<q)return Math.abs(b),[];const P=b/p,T=r.scaleAndAdd(R,d,A,P);if(s.type===o.LineType.RAY){const e=r.sub(Y,T,d);if(r.dot(e,A)<-q)return[]}if(t.type===e.VerticalPlaneType.HALF_PLANE){const e=n.sub(Y,T,a);if(n.dot(e,u)<-q)return[]}return[c.clone(T)]}function u(e,t){return P(h(I,t[2],e),t)}function l(e,t){const n=0,r=b(h(I,n,e),h(M,n,t)),c=[];for(const o of r)c.push(s.clone(o));return c}function d(e,t){return p(e,h(I,e[2],t))}function f(e,t){return L(h(I,e[2],t),e)}function A(e,t,n){const s=r.set(N,e[0],e[1],t[2]),o=r.subtract(m,s,t),a=n/r.length(o);return r.scaleAndAdd(c.create(),t,o,a)}function p(e,{start:t,end:n,type:s}){const a=r.sub(N,e,t),i=r.sub(m,n,t),u=r.dot(a,i)/r.dot(i,i);return r.scaleAndAdd(c.create(),t,i,s===o.LineType.RAY?Math.max(u,0):u)}function L({start:e,end:t,type:n},s){const c=r.sub(N,s,e),a=r.sub(m,t,e);if(n===o.LineType.RAY&&r.dot(a,c)<-q)return r.distance(e,s);const i=r.cross(g,a,c);return r.len(i)/r.len(a)}function y({start:e,end:s,type:a},i,u){const l=[];if(t.floatEqualAbsolute(e[2],i[2],q)&&t.floatEqualAbsolute(s[2],i[2],q)){const t=e,r=s,d=i,f=n.subtract(N,r,t),A=n.subtract(m,t,d),p=n.squaredLength(f),L=2*n.dot(f,A),y=L*L-4*p*(n.squaredLength(A)-u*u);if(0===y){const e=-L/(2*p);(a===o.LineType.LINE||e>=0)&&l.push(n.scaleAndAdd(c.fromValues(0,0,i[2]),t,f,e))}else if(y>0){const e=Math.sqrt(y),s=(-L+e)/(2*p);(a===o.LineType.LINE||s>=0)&&l.push(n.scaleAndAdd(c.fromValues(0,0,i[2]),t,f,s));const r=(-L-e)/(2*p);(a===o.LineType.LINE||r>=0)&&l.push(n.scaleAndAdd(c.fromValues(0,0,i[2]),t,f,r))}}else{const n=r.sub(N,s,e);if(t.floatEqualAbsolute(n[2],0,q))return l;const c=(i[2]-e[2])/n[2],d=r.scaleAndAdd(m,e,n,c);if(a===o.LineType.RAY){const t=r.sub(g,d,e);if(r.dot(n,t)<-q)return l}for(const e of T(i,u,d))l.push(e)}return l}function b(e,n){const s=e.start,a=e.end,i=n.start,u=n.end,l=r.sub(N,a,s),d=r.sub(m,u,i),f=r.sub(g,i,s),A=r.cross(k,l,d),p=r.dot(f,A);if(!t.floatEqualAbsolute(p,0,q))return[];const L=r.sqrLen(A);if(t.floatEqualAbsolute(L,0,q))return[];const y=r.cross(v,f,d),b=r.dot(y,A)/L,P=r.scaleAndAdd(R,s,l,b);if(e.type===o.LineType.RAY){const e=r.sub(Y,P,s);if(r.dot(l,e)<-q)return[]}if(n.type===o.LineType.RAY){const e=r.sub(Y,P,i);if(r.dot(d,e)<-q)return[]}return[c.clone(P)]}function P({start:e,end:t,type:n},s){const a=r.sub(N,s,e),i=r.sub(m,t,e),u=r.cross(g,i,a);if(r.sqrLen(u)/r.sqrLen(i)<q)switch(n){case o.LineType.LINE:return[c.clone(s)];case o.LineType.RAY:return r.dot(i,a)<-q?[]:[c.clone(s)]}return[]}function T(e,n,s){return t.floatEqualAbsolute(e[2],s[2],q)&&t.floatEqualAbsolute(r.squaredDistance(s,e),n*n,q)?[c.clone(s)]:[]}function h(e,t,{start:n,end:s,type:c}){return r.set(e.start,n[0],n[1],t),r.set(e.end,s[0],s[1],t),e.type=V[c],e}var E;e.VerticalPlaneType=void 0,(E=e.VerticalPlaneType||(e.VerticalPlaneType={}))[E.PLANE=0]="PLANE",E[E.HALF_PLANE=1]="HALF_PLANE";const V={[e.VerticalPlaneType.PLANE]:o.LineType.LINE,[e.VerticalPlaneType.HALF_PLANE]:o.LineType.RAY},q=1e-6,N=c.create(),m=c.create(),g=c.create(),k=c.create(),v=c.create(),R=c.create(),Y=c.create(),I={start:c.create(),end:c.create(),type:o.LineType.LINE},M={start:c.create(),end:c.create(),type:o.LineType.LINE};Object.defineProperty(e,"LineType",{enumerable:!0,get:()=>o.LineType}),e.epsilon=q,e.intersectCircleAndPoint=T,e.intersectLineAndPoint=P,e.intersectLineLike=b,e.intersectLineLikeAndCircle=y,e.intersectVerticalPlane=l,e.intersectVerticalPlaneAndCircle=a,e.intersectVerticalPlaneAndLineLike=i,e.intersectVerticalPlaneAndPoint=u,e.pointToLineLikeDistance=L,e.pointToVerticalPlaneDistance=f,e.projectPointToCircle=A,e.projectPointToLineLike=p,e.projectPointToVerticalPlane=d,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
