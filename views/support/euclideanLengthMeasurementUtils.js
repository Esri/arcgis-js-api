/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as t,isNone as n}from"../../core/maybe.js";import{createLength as r}from"../../core/quantityUtils.js";import{lengthUnitFromSpatialReference as e,verticalLengthUnitFromSpatialReference as i}from"../../core/unitUtils.js";import{i as o,s as c}from"../../chunks/vec3.js";import{c as u}from"../../chunks/vec3f64.js";import{projectVectorToVector as l}from"../../geometry/projection.js";import{equals as s}from"../../geometry/support/spatialReferenceUtils.js";import{computeEuclideanMeasurementSR as a}from"./measurementUtils.js";function f(t){return p(t,"direct")}function h(t){return p(t,"horizontal")}function p(t,i){const{hasZ:o,spatialReference:c}=t,u=a(c);let l=0;const s=e(u);if(n(s))return null;const f="direct"===i?x:Z;for(const r of t.paths){if(r.length<2)continue;const t=r.length-1;for(let e=0;e<t;++e){const t=r[e];S[0]=t[0],S[1]=t[1],S[2]=o?t[2]:0;const i=r[e+1];k[0]=i[0],k[1]=i[1],k[2]=o?i[2]:0;const u=f(S,k,c);if(n(u))return null;l+=u.value}}return r(l,s)}function m(t,n){const{spatialReference:r}=t;return s(r,n.spatialReference)?(S[0]=t.x,S[1]=t.y,S[2]=t.hasZ?t.z:0,k[0]=n.x,k[1]=n.y,k[2]=n.hasZ?n.z:0,R(S,k,r)):null}function z(t,n){const{spatialReference:r}=t;return s(r,n.spatialReference)?(S[0]=t.x,S[1]=t.y,S[2]=t.hasZ?t.z:0,k[0]=n.x,k[1]=n.y,k[2]=n.hasZ?n.z:0,x(S,k,r)):null}function y(t,n){const{spatialReference:r}=t;return s(r,n.spatialReference)?(S[0]=t.x,S[1]=t.y,S[2]=t.hasZ?t.z:0,k[0]=n.x,k[1]=n.y,k[2]=n.hasZ?n.z:0,Z(S,k,r)):null}function d(t,n){const{spatialReference:r}=t;return s(r,n.spatialReference)?(S[0]=t.x,S[1]=t.y,S[2]=t.hasZ?t.z:0,k[0]=n.x,k[1]=n.y,k[2]=n.hasZ?n.z:0,g(S,k,r)):null}function v(t){return S[0]=t.x,S[1]=t.y,S[2]=t.hasZ?t.z:0,U(S,t.spatialReference)}function R(n,e,i){const o=b(n,e,i);return t(o)?{direct:r(o.direct,o.unit),horizontal:r(o.horizontal,o.unit),vertical:r(o.vertical,o.unit)}:null}function x(n,e,i){const o=b(n,e,i,"direct");return t(o)?r(o.direct,o.unit):null}function Z(n,e,i){const o=b(n,e,i,"horizontal");return t(o)?r(o.horizontal,o.unit):null}function j(n,e,i){const o=b(n,e,i,"vertical");return t(o)?r(Math.abs(o.verticalSigned),o.unit):null}function g(n,e,i){const o=b(n,e,i,"vertical");return t(o)?r(o.verticalSigned,o.unit):null}function U(n,e){const o=i(e);return t(o)?r(n[2],o):null}function b(t,r,i,u){const s=a(i),f=e(s);if(n(f))return null;const h=r[2]-t[2];if("vertical"===u)return{verticalSigned:h,unit:f};if(!l(t,i,M,s)||!l(r,i,q,s))return null;if("direct"===u){return{direct:o(q,M),unit:f}}if(c(w,t[0],t[1],r[2]),!l(w,i,w,s))return null;const p=o(w,q);if("horizontal"===u)return{horizontal:p,unit:f};return{direct:o(q,M),horizontal:p,vertical:Math.abs(h),unit:f}}const S=u(),k=u(),M=u(),q=u(),w=u();export{U as elevation,v as elevationOfPoint,x as euclideanDirectDistance,z as euclideanDirectDistanceBetweenPoints,R as euclideanDistance,m as euclideanDistanceBetweenPoints,Z as euclideanHorizontalDistance,y as euclideanHorizontalDistanceBetweenPoints,h as euclideanHorizontalLength,f as euclideanLength,j as verticalDistance,g as verticalSignedDistance,d as verticalSignedDistanceBetweenPoints};
