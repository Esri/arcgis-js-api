/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/maybe","../../../chunks/vec2f64","./Settings","./snappingUtils","./SnappingAlgorithm","../../3d/support/geometryUtils/vector2d","./LineSnappingCandidate"],(function(e,t,o,n,r,i,s,a,l){"use strict";let d=function(e){function s({enabled:t=r.defaults.lineSnapper.enabled,proximityThreshold:o=r.defaults.lineProximityThreshold,shortLineThreshold:n=r.defaults.shortLineThreshold}={}){return e.call(this,{enabled:t,proximityThreshold:o,shortLineThreshold:n})||this}t._inheritsLoose(s,e);var d=s.prototype;return d.snapNewVertex=function(e,t){const o=t.geometry.data.components[0],n=o.edges.length,r=[];if(n<1)return r;const s=t.geometry.data.coordinateHelper,a=s.fromPoint(e),l=i.anyMapPointToScreenPoint(a,s,t.elevationInfo,t.view),d=o.edges[n-1];let h=d;do{this.edgeExceedsShortLineThreshold(h,t)&&this._processCandidateProposal(h.left.pos,h.right.pos,e,l,t,r),h=h.left.left}while(h&&h!==d);return r},d.snapExistingVertex=function(e,t){const n=[],r=o.unwrap(t.vertexHandle),s=r.component;if(s.edges.length<2)return n;const a=t.geometry.data.coordinateHelper,l=a.fromPoint(e),d=i.anyMapPointToScreenPoint(l,a,t.elevationInfo,t.view),h=r.left,p=r.right;h&&p&&this.edgeExceedsShortLineThreshold(h,t)&&this.edgeExceedsShortLineThreshold(p,t)&&this._processCandidateProposal(h.left.pos,p.right.pos,e,d,t,n);const c=s.edges[0];let g=c;do{g!==r.left&&g!==r.right&&this.edgeExceedsShortLineThreshold(g,t)&&this._processCandidateProposal(g.left.pos,g.right.pos,e,d,t,n),g=g.right.right}while(g&&g!==c);return n},d._processCandidateProposal=function(e,t,o,r,s,d){const h=a.projectPointToLine(n.create(),n.fromValues(o.x,o.y),e,t),p=s.geometry.data.coordinateHelper,c=p.fromXYZ(h,o.hasZ?o.z:0);i.squareDistance(r,i.anyMapPointToScreenPoint(c,p,s.elevationInfo,s.view))<this.squaredProximityTreshold(s.pointer)&&d.push(new l.LineSnappingCandidate({coordinateHelper:s.geometry.data.coordinateHelper,lineStart:e,lineEnd:t,targetPoint:c}))},s}(s.SnappingAlgorithm);e.LineSnapper=d,Object.defineProperty(e,"__esModule",{value:!0})}));
