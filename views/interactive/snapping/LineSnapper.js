/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/maybe","../../../support/elevationInfoUtils","./SnappingAlgorithm","./SnappingPoint","./snappingUtils","./candidates/LineSnappingCandidate","../support/viewUtils","../../support/geometry3dUtils","../../support/geometry2dUtils"],(function(e,t,n,i,o,r,s,a,p,d,l){"use strict";let g=function(e){function o(){return e.apply(this,arguments)||this}t._inheritsLoose(o,e);var g=o.prototype;return g.snapNewVertex=function(e,t){const n=t.editGeometryOperations.data.components[0],o=n.edges.length,r=[];if(o<1)return r;const{spatialReference:a}=t,d=p.vectorToScreenPoint(e,a,i.absoluteHeightElevationInfo,this.view),{view:l}=this,g=n.edges[o-1];let h=g;do{if(this.edgeExceedsShortLineThreshold(h,t)){const n=s.editEdgeToSnappingEdge(h,l,t);this._processCandidateProposal(n.left,n.right,e,d,t,r)}h=h.leftVertex.leftEdge}while(h&&h!==g);return r},g.snapExistingVertex=function(e,t){const o=[],a=n.unwrap(t.vertexHandle),d=a.component;if(d.edges.length<2)return o;const{view:l}=this,{spatialReference:g}=t,h=p.vectorToScreenPoint(e,g,i.absoluteHeightElevationInfo,l),c=a.leftEdge,u=a.rightEdge;c&&u&&this.edgeExceedsShortLineThreshold(c,t)&&this.edgeExceedsShortLineThreshold(u,t)&&this._processCandidateProposal(r.anyMapPointToSnappingPoint(c.leftVertex.pos,l,t),r.anyMapPointToSnappingPoint(u.rightVertex.pos,l,t),e,h,t,o);const f=d.edges[0];let S=f;do{if(S!==a.leftEdge&&S!==a.rightEdge&&this.edgeExceedsShortLineThreshold(S,t)){const n=s.editEdgeToSnappingEdge(S,l,t);this._processCandidateProposal(n.left,n.right,e,h,t,o)}S=S.rightVertex.rightEdge}while(S&&S!==f);return o},g._processCandidateProposal=function(e,t,n,o,g,h){const{spatialReference:c,pointer:u}=g,f=r.asSnappingPoint(d.projectPointToLineLike(n,{start:e,end:t,type:l.LineType.LINE}));s.squaredScreenDistance(o,p.vectorToScreenPoint(f,c,i.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(u)&&h.push(new a.LineSnappingCandidate({lineStart:e,lineEnd:t,targetPoint:f,isDraped:"on-the-ground"===g.elevationInfo?.mode}))},o}(o.SnappingAlgorithm);e.LineSnapper=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
