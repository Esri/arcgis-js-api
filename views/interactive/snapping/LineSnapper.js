/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/maybe","../../../chunks/vec3f64","../../../support/elevationInfoUtils","./SnappingAlgorithm","./snappingUtils","./candidates/LineSnappingCandidate","../support/viewUtils","../../support/geometry3dUtils","../../support/geometry2dUtils"],(function(e,t,n,o,i,r,s,a,d,l,p){"use strict";let h=function(e){function o(){return e.apply(this,arguments)||this}t._inheritsLoose(o,e);var r=o.prototype;return r.snapNewVertex=function(e,t){const n=t.editGeometryOperations.data.components[0],o=n.edges.length,r=[];if(o<1)return r;const a=t.coordinateHelper,l=d.anyMapPointToScreenPoint(e,a,i.absoluteHeightElevationInfo,this.view),{view:p}=this,h=n.edges[o-1];let c=h;do{if(this.edgeExceedsShortLineThreshold(c,t)){const n=s.editEdgeToSnappingEdge(c,p,t);this._processCandidateProposal(n.left,n.right,e,l,t,r)}c=c.leftVertex.leftEdge}while(c&&c!==h);return r},r.snapExistingVertex=function(e,t){const o=[],r=n.unwrap(t.vertexHandle),a=r.component;if(a.edges.length<2)return o;const{view:l}=this,{coordinateHelper:p}=t,h=d.anyMapPointToScreenPoint(e,p,i.absoluteHeightElevationInfo,l),c=r.leftEdge,g=r.rightEdge;c&&g&&this.edgeExceedsShortLineThreshold(c,t)&&this.edgeExceedsShortLineThreshold(g,t)&&this._processCandidateProposal(s.convertPointElevation(c.leftVertex.pos,l,t),s.convertPointElevation(g.rightVertex.pos,l,t),e,h,t,o);const u=a.edges[0];let f=u;do{if(f!==r.leftEdge&&f!==r.rightEdge&&this.edgeExceedsShortLineThreshold(f,t)){const n=s.editEdgeToSnappingEdge(f,l,t);this._processCandidateProposal(n.left,n.right,e,h,t,o)}f=f.rightVertex.rightEdge}while(f&&f!==u);return o},r._processCandidateProposal=function(e,t,n,o,r,p){const{coordinateHelper:h,pointer:E}=r;h.toXYZ(e,c),h.toXYZ(t,g);const v=h.toXYZ(n,f),S=l.projectPointToLineLike(v,u),P=h.fromXYZ(S);s.squaredScreenDistance(o,d.anyMapPointToScreenPoint(P,h,i.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(E)&&p.push(new a.LineSnappingCandidate({coordinateHelper:h,lineStart:e,lineEnd:t,targetPoint:P,elevationInfo:h.hasZ()?i.absoluteHeightElevationInfo:null}))},o}(r.SnappingAlgorithm);const c=o.create(),g=o.create(),u={start:c,end:g,type:p.LineType.LINE},f=o.create();e.LineSnapper=h,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
