/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{g as e,b as t}from"../../../../chunks/vec2.js";import{LineConstraint as n}from"../SnappingConstraint.js";import{LineSegmentHintType as i}from"../snappingUtils.js";import{SnappingCandidate as r}from"./SnappingCandidate.js";import{LineSnappingHint as s}from"../hints/LineSnappingHint.js";import{ParallelSnappingHint as a}from"../hints/ParallelSnappingHint.js";class o extends r{constructor({coordinateHelper:i,referenceLine:r,lineStart:s,targetPoint:a,elevationInfo:o}){const f=i.clone(s);e(f,t(f,f,r.rightVertex.pos),r.leftVertex.pos),super(i,a,new n(i,s,f),o),this._referenceLines=[{edge:r,fadeLeft:!0,fadeRight:!0}]}get hints(){const e=this.elevationInfo;return[new s(i.TARGET,this.constraint.start,this.targetPoint,e),new a(this.constraint.start,this.targetPoint,e),...this._referenceLines.map((t=>new s(i.REFERENCE,t.edge.leftVertex.pos,t.edge.rightVertex.pos,e,t.fadeLeft,t.fadeRight)))]}addReferenceLine(e){const t={edge:e,fadeLeft:!0,fadeRight:!0};this._referenceLines.forEach((n=>{e.rightVertex.rightEdge===n.edge&&(n.fadeLeft=!1,t.fadeRight=!1),e.leftVertex.leftEdge===n.edge&&(n.fadeRight=!1,t.fadeLeft=!1)})),this._referenceLines.push(t)}}export{o as ParallelLineSnappingCandidate};
