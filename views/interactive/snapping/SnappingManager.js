/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Evented","../../../core/HandleOwner","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec2","../../../geometry/SpatialReference","./FeatureSnappingEngine","./SelfSnappingEngine","./SnappingOptions","./snappingUtils","./candidates/IntersectionSnappingCandidate"],(function(e,n,t,i,a,o,r,s,d,c,p,u,h,l,f,g,v,_,y,S){"use strict";e.SnappingManager=function(e){function t(n){var t;return(t=e.call(this,n)||this).options=new _,t.engines=[],t._currentMainCandidate=null,t._currentOtherActiveCandidates=[],t}n._inheritsLoose(t,e);var i=t.prototype;return i.initialize=function(){this.handles.add([s.watch((()=>{const{effectiveFeatureEnabled:e,effectiveSelfEnabled:n,touchSensitivityMultiplier:t,distance:i}=this.options;return{effectiveFeatureEnabled:e,effectiveSelfEnabled:n,touchSensitivityMultiplier:t,distance:i}}),(()=>{this.doneSnapping(),this.emit("changed")}),s.sync),s.watch((()=>this.options),(e=>{for(const n of this.engines)n.options=e}),s.sync),s.watch((()=>({ready:this.view.ready,spatialReference:this.view.spatialReference})),(({ready:e,spatialReference:n})=>this._onViewChange(e,n)),s.syncAndInitial)])},i.destroy=function(){this._destroyEngines()},i._onViewChange=function(e,n){this._destroyEngines(),e&&(this.engines=[new v.SelfSnappingEngine({view:this.view,options:this.options}),new g.FeatureSnappingEngine({view:this.view,spatialReference:null!=n?n:f.WGS84,options:this.options})])},i._destroyEngines=function(){for(const e of this.engines)e.destroy();this.engines.length=0},i.snap=function(){var e=n._asyncToGenerator((function*(e,n,t){const i=n.coordinateHelper.pointToVector(e),a=yield this._fetchCandidates(i,n,t);return{get valid(){return!r.isAborted(t)},apply:()=>{const{snappedPoint:e,hints:t}=this._processCandidates(i,a,n);return this._removeVisualization(),o.isSome(n.visualizer)&&this.handles.add(n.visualizer.draw(t,{coordinateHelper:n.coordinateHelper,elevationInfo:n.elevationInfo,view:this.view}),C),e}}}));function t(n,t,i){return e.apply(this,arguments)}return t}(),i.update=function(e,n){this._removeVisualization();let t=e;const i=[];if(o.isSome(this._currentMainCandidate)){const a=n.coordinateHelper,o=a.pointToVector(e),r=this._currentMainCandidate.constraint.closestTo(o);if(y.squareDistance(y.anyMapPointToScreenPoint(o,a,n.elevationInfo,this.view),y.anyMapPointToScreenPoint(r,a,n.elevationInfo,this.view))<this._squaredPointProximityThreshold(n.pointer)){t=a.vectorToDehydratedPoint(r),this._currentMainCandidate.targetPoint=r,i.push(...this._currentMainCandidate.hints);for(const e of this._currentOtherActiveCandidates)e.targetPoint=r,i.push(...e.hints)}else this._currentMainCandidate=null,this._currentOtherActiveCandidates=[]}return o.isSome(n.visualizer)&&this.handles.add(n.visualizer.draw(i,{coordinateHelper:n.coordinateHelper,elevationInfo:n.elevationInfo,view:this.view}),C),t},i.doneSnapping=function(){this._removeVisualization(),this._currentMainCandidate=null,this._currentOtherActiveCandidates=[]},i._removeVisualization=function(){this.handles.remove(C)},i._fetchCandidates=function(){var e=n._asyncToGenerator((function*(e,n,t){return(yield Promise.all(this.engines.map((i=>i.fetchCandidates(e,n,t))))).flat()}));function t(n,t,i){return e.apply(this,arguments)}return t}(),i._processCandidates=function(e,n,t){if(n.length<1)return this.doneSnapping(),{snappedPoint:t.coordinateHelper.vectorToDehydratedPoint(e),hints:[]};y.sortCandidatesInPlace(e,n);const i=this._currentMainCandidate;if(o.isSome(i)){const a=this._findOldConstraintInNewCandidates(i,n);if(a>=0){if(!(n[a]instanceof S.IntersectionSnappingCandidate))return this._intersectWithOtherCandidates(a,n,e,t);if(l.squaredDistance(e,i.targetPoint)<this._squaredPointProximityThreshold(t.pointer))return this._updateSnappingCandidate(i,n,t)}}return this._intersectWithOtherCandidates(0,n,e,t)},i._findOldConstraintInNewCandidates=function(e,n){return e instanceof S.IntersectionSnappingCandidate?this._findOldCandidateIndex(n,e.first)>=0&&this._findOldCandidateIndex(n,e.second)>=0?0:-1:this._findOldCandidateIndex(n,e)},i._intersectWithOtherCandidates=function(e,n,t,i){const a=n[e],o=[],r=i.coordinateHelper;for(let s=0;s<n.length;++s){if(s===e)continue;const d=n[s];for(const e of a.constraint.intersect(d.constraint)){const n=r.fromXYZ(e.intersection,a.targetPoint[2]);o.push([new S.IntersectionSnappingCandidate(r,n,a,d),y.squareDistance(y.anyMapPointToScreenPoint(t,i.coordinateHelper,i.elevationInfo,this.view),y.anyMapPointToScreenPoint(n,i.coordinateHelper,i.elevationInfo,this.view))])}}return o.length>0&&(o.sort(((e,n)=>e[1]-n[1])),o[0][1]<this._squaredPointProximityThreshold(i.pointer))?this._updateSnappingCandidate(o[0][0],n,i):this._updateSnappingCandidate(a,n,i)},i._updateSnappingCandidate=function(e,n,t){this.doneSnapping(),this._currentMainCandidate=e;const i=this._currentMainCandidate.targetPoint,a=[];a.push(...e.hints);for(const o of n){if(e instanceof S.IntersectionSnappingCandidate){if(o.constraint.objectEqual(e.first.constraint)||o.constraint.objectEqual(e.second.constraint))continue}else if(o.constraint.objectEqual(e.constraint))continue;o.constraint.check(i)&&(o.targetPoint=i,this._currentOtherActiveCandidates.push(o),a.push(...o.hints))}return{snappedPoint:t.coordinateHelper.vectorToDehydratedPoint(i),hints:a}},i._squaredPointProximityThreshold=function(e){return"touch"===e?this.squaredTouchProximityThreshold:this.squaredMouseProximityTreshold},i._findOldCandidateIndex=function(e,n){let t=-1;for(let i=0;i<e.length;++i)if(n.constraint.objectEqual(e[i].constraint)){t=i;break}return t},n._createClass(t,[{key:"updating",get:function(){return this.engines.some((e=>e.updating))}},{key:"squaredMouseProximityTreshold",get:function(){return this.options.distance*this.options.distance}},{key:"squaredTouchProximityThreshold",get:function(){const{distance:e,touchSensitivityMultiplier:n}=this.options,t=e*n;return t*t}},{key:"test",get:function(){return{visualizationsActive:this.handles.has(C),engines:this.engines}}}]),t}(i.EventedMixin(a.HandleOwner)),t.__decorate([d.property({constructOnly:!0})],e.SnappingManager.prototype,"view",void 0),t.__decorate([d.property()],e.SnappingManager.prototype,"options",void 0),t.__decorate([d.property({readOnly:!0})],e.SnappingManager.prototype,"updating",null),t.__decorate([d.property()],e.SnappingManager.prototype,"engines",void 0),t.__decorate([d.property()],e.SnappingManager.prototype,"squaredMouseProximityTreshold",null),t.__decorate([d.property()],e.SnappingManager.prototype,"squaredTouchProximityThreshold",null),e.SnappingManager=t.__decorate([h.subclass("esri.views.interactive.snapping.SnappingManager")],e.SnappingManager);const C="visualization-handle";Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
