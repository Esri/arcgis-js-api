/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Evented","../../../core/HandleOwner","../../../core/maybe","../../../core/promiseUtils","../../../core/watchUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/trackingUtils","../../../chunks/vec2","../../../geometry/SpatialReference","./FeatureSnappingEngine","./SelfSnappingEngine","./SnappingOptions","./snappingUtils","./candidates/IntersectionSnappingCandidate"],(function(e,t,n,i,o,a,r,s,d,c,p,u,h,l,f,g,v,y,S,C,P){"use strict";e.SnappingManager=function(e){function n(t){var n;return(n=e.call(this,t)||this).options=new S,n.engines=[],n._currentMainCandidate=null,n._currentOtherActiveCandidates=[],n}t._inheritsLoose(n,e);var i=n.prototype;return i.initialize=function(){this.handles.add([l.reaction((()=>{const{effectiveFeatureEnabled:e,effectiveSelfEnabled:t,touchSensitivityMultiplier:n,distance:i}=this.options;return{effectiveFeatureEnabled:e,effectiveSelfEnabled:t,touchSensitivityMultiplier:n,distance:i}}),(()=>{this.doneSnapping(),this.emit("changed")})),this.watch("options",(e=>{for(const t of this.engines)t.options=e}),!0),s.init(this.view,"ready",(e=>this.onViewReady(e)),!0)])},i.destroy=function(){this.destroyEngines()},i.onViewReady=function(e){var t,n;(this.destroyEngines(),e)&&(this.engines=[new y.SelfSnappingEngine({view:this.view,options:this.options}),new v.FeatureSnappingEngine({view:this.view,spatialReference:null!=(t=null==(n=this.view)?void 0:n.spatialReference)?t:g.WGS84,options:this.options})])},i.destroyEngines=function(){for(const e of this.engines)e.destroy();this.engines.length=0},i.snap=function(){var e=t._asyncToGenerator((function*(e,t,n){const i=t.coordinateHelper.pointToVector(e),o=yield this.fetchCandidates(i,t,n);return{get valid(){return!r.isAborted(n)},apply:()=>{const{snappedPoint:e,hints:n}=this.processCandidates(i,o,t);return this.removeVisualization(),a.isSome(t.visualizer)&&this.handles.add(t.visualizer.draw(n,{coordinateHelper:t.coordinateHelper,elevationInfo:t.elevationInfo,view:this.view}),_),e}}}));function n(t,n,i){return e.apply(this,arguments)}return n}(),i.update=function(e,t){this.removeVisualization();let n=e;const i=[];if(a.isSome(this._currentMainCandidate)){const o=t.coordinateHelper,a=o.pointToVector(e),r=this._currentMainCandidate.constraint.closestTo(a);if(C.squareDistance(C.anyMapPointToScreenPoint(a,o,t.elevationInfo,this.view),C.anyMapPointToScreenPoint(r,o,t.elevationInfo,this.view))<this.squaredPointProximityThreshold(t.pointer)){n=o.vectorToDehydratedPoint(r),this._currentMainCandidate.targetPoint=r,i.push(...this._currentMainCandidate.hints);for(const e of this._currentOtherActiveCandidates)e.targetPoint=r,i.push(...e.hints)}else this._currentMainCandidate=null,this._currentOtherActiveCandidates=[]}return a.isSome(t.visualizer)&&this.handles.add(t.visualizer.draw(i,{coordinateHelper:t.coordinateHelper,elevationInfo:t.elevationInfo,view:this.view}),_),n},i.doneSnapping=function(){this.removeVisualization(),this._currentMainCandidate=null,this._currentOtherActiveCandidates=[]},i.removeVisualization=function(){this.handles.remove(_)},i.fetchCandidates=function(){var e=t._asyncToGenerator((function*(e,t,n){return(yield Promise.all(this.engines.map((i=>i.fetchCandidates(e,t,n))))).flat()}));function n(t,n,i){return e.apply(this,arguments)}return n}(),i.processCandidates=function(e,t,n){if(t.length<1)return this.doneSnapping(),{snappedPoint:n.coordinateHelper.vectorToDehydratedPoint(e),hints:[]};C.sortCandidatesInPlace(e,t);const i=this._currentMainCandidate;if(a.isSome(i)){const o=this.findOldConstraintInNewCandidates(i,t);if(o>=0){if(!(t[o]instanceof P.IntersectionSnappingCandidate))return this.intersectWithOtherCandidates(o,t,e,n);if(f.squaredDistance(e,i.targetPoint)<this.squaredPointProximityThreshold(n.pointer))return this.updateSnappingCandidate(i,t,n)}}return this.intersectWithOtherCandidates(0,t,e,n)},i.findOldConstraintInNewCandidates=function(e,t){return e instanceof P.IntersectionSnappingCandidate?this.findOldCandidateIndex(t,e.first)>=0&&this.findOldCandidateIndex(t,e.second)>=0?0:-1:this.findOldCandidateIndex(t,e)},i.intersectWithOtherCandidates=function(e,t,n,i){const o=t[e],a=[],r=i.coordinateHelper;for(let s=0;s<t.length;++s){if(s===e)continue;const d=t[s];for(const e of o.constraint.intersect(d.constraint)){const t=r.fromXYZ(e.intersection,o.targetPoint[2]);a.push([new P.IntersectionSnappingCandidate(r,t,o,d),C.squareDistance(C.anyMapPointToScreenPoint(n,i.coordinateHelper,i.elevationInfo,this.view),C.anyMapPointToScreenPoint(t,i.coordinateHelper,i.elevationInfo,this.view))])}}return a.length>0&&(a.sort(((e,t)=>e[1]-t[1])),a[0][1]<this.squaredPointProximityThreshold(i.pointer))?this.updateSnappingCandidate(a[0][0],t,i):this.updateSnappingCandidate(o,t,i)},i.updateSnappingCandidate=function(e,t,n){this.doneSnapping(),this._currentMainCandidate=e;const i=this._currentMainCandidate.targetPoint,o=[];o.push(...e.hints);for(const a of t){if(e instanceof P.IntersectionSnappingCandidate){if(a.constraint.objectEqual(e.first.constraint)||a.constraint.objectEqual(e.second.constraint))continue}else if(a.constraint.objectEqual(e.constraint))continue;a.constraint.check(i)&&(a.targetPoint=i,this._currentOtherActiveCandidates.push(a),o.push(...a.hints))}return{snappedPoint:n.coordinateHelper.vectorToDehydratedPoint(i),hints:o}},i.squaredPointProximityThreshold=function(e){return"touch"===e?this.squaredTouchProximityThreshold:this.squaredMouseProximityTreshold},i.findOldCandidateIndex=function(e,t){let n=-1;for(let i=0;i<e.length;++i)if(t.constraint.objectEqual(e[i].constraint)){n=i;break}return n},t._createClass(n,[{key:"updating",get:function(){return this.engines.some((e=>e.updating))}},{key:"squaredMouseProximityTreshold",get:function(){return this.options.distance*this.options.distance}},{key:"squaredTouchProximityThreshold",get:function(){const{distance:e,touchSensitivityMultiplier:t}=this.options,n=e*t;return n*n}},{key:"test",get:function(){return{visualizationsActive:this.handles.has(_),engines:this.engines}}}]),n}(i.EventedMixin(o.HandleOwner)),n.__decorate([d.property({constructOnly:!0})],e.SnappingManager.prototype,"view",void 0),n.__decorate([d.property()],e.SnappingManager.prototype,"options",void 0),n.__decorate([d.property({readOnly:!0})],e.SnappingManager.prototype,"updating",null),n.__decorate([d.property()],e.SnappingManager.prototype,"engines",void 0),n.__decorate([d.property()],e.SnappingManager.prototype,"squaredMouseProximityTreshold",null),n.__decorate([d.property()],e.SnappingManager.prototype,"squaredTouchProximityThreshold",null),e.SnappingManager=n.__decorate([h.subclass("esri.views.interactive.snapping.SnappingManager")],e.SnappingManager);const _="visualization-handle";Object.defineProperty(e,"__esModule",{value:!0})}));
