/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{isNone as t,unwrapOr as s}from"../../../../../core/maybe.js";import{throwIfAborted as o}from"../../../../../core/promiseUtils.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/set.js";import{subclass as n}from"../../../../../core/accessorSupport/decorators/subclass.js";import{C as i,a as r,i as d}from"../../../../../chunks/vec3.js";import{c,a}from"../../../../../chunks/vec3f64.js";import{create as p,fromPoints as u,projectPoint as m}from"../../../../../geometry/support/lineSegment.js";import{g as h,m as g,c as l}from"../../../../../chunks/sphere.js";import{SnappingTypes as f}from"../../../../../layers/graphics/data/QueryEngineResult.js";import _ from"../../../../3d/webgl-engine/lib/Octree.js";import{extractComponentsEdgeLocationsLayout as b}from"../../../../3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker.js";let j=class{constructor(){this._idToComponent=new Map,this._components=new _((e=>e.bounds)),this._edges=new _((e=>e.bounds)),this._tmpLineSegment=p(),this._tmpP1=c(),this._tmpP2=c(),this._tmpP3=c(),this.remoteClient=null}async fetchCandidates(e,t){await Promise.resolve(),o(t),await this._ensureEdgeLocations(e,t);const s=[];return this._edges.forEachNeighbor((t=>this._addCandidates(e,t,s)),e.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(e,o){const n=[];if(this._components.forEachNeighbor((e=>{if(t(e.info)){const{id:t,uid:s}=e;n.push({id:t,uid:s})}}),e.bounds),!n.length)return;const i={components:n},r=await this.remoteClient.invoke("fetchAllEdgeLocations",i,s(o,{}));for(const t of r.components)this._setFetchEdgeLocations(t)}async add(e){const t=new C(e.id,e.bounds);return this._idToComponent.set(t.id,t),this._components.add([t]),{result:{}}}async remove(e){const t=this._idToComponent.get(e.id);if(t){const e=[];this._edges.forEachNeighbor((s=>{s.component===t&&e.push(s)}),t.bounds),this._edges.remove(e),this._components.remove([t]),this._idToComponent.delete(t.id)}return{result:{}}}_setFetchEdgeLocations(e){const s=this._idToComponent.get(e.id);if(t(s)||e.uid!==s.uid)return;const o=b.createView(e.locations),n=new Array(o.count),a=c(),p=c();for(let t=0;t<o.count;t++){const c=l(),u=h(c);o.position0.getVec(t,a),o.position1.getVec(t,p),i(u,u,a,.5),i(u,u,p,.5),r(u,u,e.origin),c[3]=d(u,a);const m=new E(s,t,c);n[t]=m}this._edges.add(n);const{objectIds:u,origin:m}=e;s.info={locations:o,objectIds:u,origin:m}}_addCandidates(e,t,s){const{locations:o,origin:n,objectIds:i}=t.component.info,d=o.position0.getVec(t.index,this._tmpP1),c=o.position1.getVec(t.index,this._tmpP2);r(d,d,n),r(c,c,n);const a=i[o.componentIndex.get(t.index)];this._addEdgeCandidate(e,a,d,c,s),this._addVertexCandidate(e,a,d,s),this._addVertexCandidate(e,a,c,s)}_addEdgeCandidate(e,t,s,o,n){if(!(e.types&f.EDGE))return;const i=h(e.bounds),r=u(s,o,this._tmpLineSegment),c=m(r,i,this._tmpP3);if(!g(e.bounds,c))return null;n.push({type:"edge",objectId:t,target:a(c),distance:d(i,c),start:a(s),end:a(o)})}_addVertexCandidate(e,t,s,o){if(!(e.types&f.VERTEX))return;const n=h(e.bounds);if(!g(e.bounds,s))return null;o.push({type:"vertex",objectId:t,target:a(s),distance:d(n,s)})}};function y(){return new j}j=e([n("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],j);class C{constructor(e,t){this.id=e,this.bounds=t,this.info=null,this.uid=++C.uid}}C.uid=0;class E{constructor(e,t,s){this.component=e,this.index=t,this.bounds=s}}export{j as SceneLayerSnappingSourceWorker,y as default};
