/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/HandleOwner","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/workers/WorkerHandle","../../../../../geometry/support/typeUtils","../../../../../layers/graphics/dehydratedFeatures"],(function(e,t,n,r,o,i,a,s,d,l,u,c,p){"use strict";e.FeatureServiceSnappingSourceWorkerHandle=function(e){function n(n){var r;return(r=e.call(this,n)||this).schedule=null,r.hasZ=!1,r.elevationAlignPointsInFeatures=function(){var e=t._asyncToGenerator((function*(e){const t=[];for(const{points:n}of e)for(const{z:e}of n)t.push(e);return{elevations:t,drapedObjectIds:new Set,failedObjectIds:new Set}}));return function(t){return e.apply(this,arguments)}}(),r.queryForSymbologySnapping=t._asyncToGenerator((function*(){return{candidates:[],sourceCandidateIndices:[]}})),r.availability=0,r._workerHandleUpdating=!0,r._editId=0,r}t._inheritsLoose(n,e);var r=n.prototype;return r.destroy=function(){this._workerHandle.destroy()},r.initialize=function(){var e,n,r=this;this._workerHandle=new y(this.schedule,{alignElevation:(n=t._asyncToGenerator((function*(e,{signal:t}){return{result:yield r.elevationAlignPointsInFeatures(e.points,t)}})),function(e,t){return n.apply(this,arguments)}),getSymbologyCandidates:(e=t._asyncToGenerator((function*(e,{signal:t}){return{result:yield r.queryForSymbologySnapping(e,t)}})),function(t,n){return e.apply(this,arguments)})}),this.handles.add([this._workerHandle.on("notify-updating",(({updating:e})=>this._workerHandleUpdating=e)),this._workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))])},r.setup=function(){var e=t._asyncToGenerator((function*(e,t){const n=this._serviceInfoFromLayer(e.layer);if(o.isNone(n))return;const r={configuration:this._convertConfiguration(e.configuration),serviceInfo:n,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",r,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}));function n(t,n){return e.apply(this,arguments)}return n}(),r.configure=function(){var e=t._asyncToGenerator((function*(e,t){const n=this._convertConfiguration(e);yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}));function n(t,n){return e.apply(this,arguments)}return n}(),r.refresh=function(){var e=t._asyncToGenerator((function*(e){yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}));function n(t){return e.apply(this,arguments)}return n}(),r.fetchCandidates=function(){var e=t._asyncToGenerator((function*(e,t){const n=e.point,r={distance:e.distance,mode:e.mode,point:p.makeDehydratedPoint(n[0],n[1],n[2],e.coordinateHelper.spatialReference.toJSON()),types:e.types,filter:o.isSome(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(r,t)}));function n(t,n){return e.apply(this,arguments)}return n}(),r.updateTiles=function(){var e=t._asyncToGenerator((function*(e,t){const n={tiles:e.tiles,tileInfo:o.isSome(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}));function n(t,n){return e.apply(this,arguments)}return n}(),r.applyEdits=function(){var e=t._asyncToGenerator((function*(e,t){const n=this._editId++,r={id:n};yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",r,t));const a=yield this.updatingHandles.addPromise(i.whenOrAbort(e.result,t)),s={id:n,edits:{addedFeatures:a.addedFeatures?.map((({objectId:e})=>e)).filter(o.isSome)??[],deletedFeatures:a.deletedFeatures?.map((({objectId:e,globalId:t})=>({objectId:e,globalId:t})))??[],updatedFeatures:a.updatedFeatures?.map((({objectId:e})=>e)).filter(o.isSome)??[]}};yield this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",s,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}));function n(t,n){return e.apply(this,arguments)}return n}(),r.getDebugInfo=function(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)},r.notifyElevationSourceChange=function(){var e=t._asyncToGenerator((function*(){yield this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}));function n(){return e.apply(this,arguments)}return n}(),r.notifySymbologyChange=function(){var e=t._asyncToGenerator((function*(){yield this._workerHandle.invokeMethod("notifySymbologyChange",{})}));function n(){return e.apply(this,arguments)}return n}(),r.setSymbologySnappingSupported=function(){var e=t._asyncToGenerator((function*(e){yield this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}));function n(t){return e.apply(this,arguments)}return n}(),r._convertConfiguration=function(e){return{filter:o.isSome(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}},r._serviceInfoFromLayer=function(e){return"multipatch"===e.geometryType||"mesh"===e.geometryType?null:{url:e.parsedUrl?.path??"",fields:e.fields.map((e=>e.toJSON())),geometryType:c.featureGeometryTypeKebabDictionary.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}},t._createClass(n,[{key:"updating",get:function(){return this.updatingHandles.updating||this._workerHandleUpdating}}]),n}(r.HandleOwner),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"schedule",void 0),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"hasZ",void 0),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"elevationAlignPointsInFeatures",void 0),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"queryForSymbologySnapping",void 0),n.__decorate([a.property({readOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"updating",null),n.__decorate([a.property({readOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"availability",void 0),n.__decorate([a.property()],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"_workerHandleUpdating",void 0),e.FeatureServiceSnappingSourceWorkerHandle=n.__decorate([l.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],e.FeatureServiceSnappingSourceWorkerHandle);let y=function(e){function n(t,n){return e.call(this,"FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:n})||this}return t._inheritsLoose(n,e),n}(u.WorkerHandle);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
