/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/arrayUtils","../../../../core/asyncUtils","../../../../core/HandleOwner","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Polygon","../../../../geometry/projection","../../../../geometry/support/normalizeUtilsSync","../../../../geometry/support/typeUtils","../../../../layers/graphics/featureConversionUtils","../../../../layers/graphics/OptimizedFeature","../../../../layers/graphics/data/FeatureStore","../../../../layers/graphics/data/QueryEngine","../../../../support/elevationInfoUtils","../../../../symbols/support/utils","../snappingUtils","./queryEngineUtils","./snappingCandidateElevationAlignment","./snappingCandidateElevationFilter","./symbologySnappingCandidates"],(function(e,t,n,r,o,i,a,s,p,c,l,u,d,y,h,g,f,_,S,m,v,b,w,G,E,k,C,A){"use strict";const F="graphics-collections";e.GraphicsSnappingSource=function(e){function n(t){var n;return(n=e.call(this,t)||this).availability=1,n._sources={multipoint:null,point:null,polygon:null,polyline:null},n._loadedWkids=new Set,n._loadedWkts=new Set,n._pendingAdds=[],n._extrudedPolygonSymbolsCount=0,n}t._inheritsLoose(n,e);var r=n.prototype;return r.destroy=function(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e)))},r.initialize=function(){this.updatingHandles.add((()=>this.getGraphicsLayers()),(e=>{this.updatingHandles.removeHandles(F);for(const t of e)this._addMany(t.graphics.toArray()),this.handles.add([t.on("graphic-update",(e=>this._onGraphicUpdate(e))),this.updatingHandles.addOnCollectionChange((()=>t.graphics),(e=>this._onGraphicsChanged(e)))],F)}),c.initial);const{view:e}=this,{layer:t}=this.layerSource;s.isSome(e)&&"3d"===e.type&&"map-notes"!==t.type&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{b.elevationContextAffectsAlignment(e,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),c.watch((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),c.initial),c.on((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])},r.fetchCandidates=function(){var e=t._asyncToGenerator((function*(e,t){const{point:n}=e,r=yield p.eachAlwaysValues(this._mapSources((n=>this._fetchCandidatesForSource(n,e,t))));p.throwIfAborted(t);const o=this._getGroundElevation,i=r.flat().map((e=>E.convertSnappingCandidate(e,o)));return G.sortCandidatesInPlace(n,i),i}));function n(t,n){return e.apply(this,arguments)}return n}(),r._fetchCandidatesForSource=function(){var e=t._asyncToGenerator((function*(e,t,n){const r=G.makeSnappingQuery(t,s.unwrap(this.view)?.type??"2d"),o=yield e.queryEngine.executeQueryForSnapping(r,n);p.throwIfAborted(n);const i=yield this._snappingElevationAligner.alignCandidates(o.candidates,n);p.throwIfAborted(n);const a=yield this._symbologySnappingFetcher.fetch(i,n);p.throwIfAborted(n);const c=0===a.length?i:[...i,...a];return this._snappingElevationFilter.filter(r,c)}));function n(t,n,r){return e.apply(this,arguments)}return n}(),r.refresh=function(){},r._onGraphicUpdate=function(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}},r._onGraphicsChanged=function(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)},r._addMany=function(e){const t=[],n=new Map;for(const r of e)s.isNone(r.geometry)||(this._needsInitializeProjection(r.geometry.spatialReference)?(t.push(r.geometry.spatialReference),n.set(r.uid,r)):this._add(r));this._createPendingAdd(t,n)},r._createPendingAdd=function(e,n){var r=this;if(!e.length)return;const a=i.createTask(function(){var o=t._asyncToGenerator((function*(t){yield h.initializeProjection(e.map((e=>({source:e,dest:r.spatialReference}))),{signal:t}),r._markLoadedSpatialReferences(e);for(const[,e]of n)r._add(e)}));return function(e){return o.apply(this,arguments)}}());this.updatingHandles.addPromise(a.promise);const s={task:a,graphics:n},p=()=>o.removeUnordered(this._pendingAdds,s);a.promise.then(p,p),this._pendingAdds.push(s)},r._markLoadedSpatialReferences=function(e){for(const t of e)null!=t.wkid&&this._loadedWkids.add(t.wkid),null!=t.wkt&&this._loadedWkts.add(t.wkt)},r._add=function(e){if(s.isNone(e.geometry)||!e.visible)return;let t=e.geometry;if("mesh"===t.type)return;"extent"===t.type&&(t=y.fromExtent(t));const n=this._ensureSource(t.type);if(s.isNone(n))return;const r=this._createOptimizedFeature(e.uid,t);s.isNone(r)||(n.featureStore.add(r),w.symbolHasExtrudeSymbolLayer(e.symbol)&&this._extrudedPolygonSymbolsCount++)},r._needsInitializeProjection=function(e){return(null==e.wkid||!this._loadedWkids.has(e.wkid))&&((null==e.wkt||!this._loadedWkts.has(e.wkt))&&!h.canProjectWithoutEngine(e,this.spatialReference))},r._createOptimizedFeature=function(e,t){const n=h.project(g.normalizeCentralMeridianForDisplay(t),this.spatialReference);if(!n)return null;const r=this._ensureGeometryHasZ(n),o=_.convertFromGeometry(r,this._hasZ,!1),i={[I]:e};return new S.OptimizedFeature(o,i,null,e)},r._ensureGeometryHasZ=function(e){if(!this._hasZ)return e;const t=e=>{for(;e.length<3;)e.push(0)},n=e.clone();switch(n.hasZ=!0,n.type){case"point":n.z=n.z??0;break;case"multipoint":n.points.forEach(t);break;case"polyline":n.paths.forEach((e=>e.forEach(t)));break;case"polygon":n.rings.forEach((e=>e.forEach(t)))}return n},r._ensureSource=function(e){const t=this._sources[e];if(s.isSome(t))return t;const n=this._createSource(e);return this._sources[e]=n,n},r._createSource=function(e){const t=f.featureGeometryTypeKebabDictionary.toJSON(e),n=this._hasZ,r=new m({geometryType:t,hasZ:n,hasM:!1});return{featureStore:r,queryEngine:new v.QueryEngine({featureStore:r,fields:[{name:I,type:"esriFieldTypeOID",alias:I}],geometryType:t,hasM:!1,hasZ:n,objectIdField:I,spatialReference:this.spatialReference,scheduler:s.isSome(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}},r._remove=function(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort()},r._removeFromSource=function(e,t){const n=t.uid;e.featureStore.has(n)&&(e.featureStore.removeById(t.uid),w.symbolHasExtrudeSymbolLayer(t.symbol)&&this._extrudedPolygonSymbolsCount--)},r._destroySource=function(e){e.queryEngine.destroy(),this._sources[e.type]=null},r._mapSources=function(e){const{point:t,polygon:n,polyline:r,multipoint:o}=this._sources,i=[];return s.isSome(t)&&i.push(e(t)),s.isSome(n)&&i.push(e(n)),s.isSome(r)&&i.push(e(r)),s.isSome(o)&&i.push(e(o)),i},t._createClass(n,[{key:"updating",get:function(){return this.updatingHandles.updating}},{key:"_hasZ",get:function(){const e=this.view;return s.isSome(e)&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type}},{key:"_snappingElevationAligner",get:function(){const{view:e}=this,{layer:n}=this.layerSource,r=s.isSome(e)&&"3d"===e.type;if(!r||"map-notes"===n.type)return k.getSnappingCandidateElevationAligner();const o=function(){var r=t._asyncToGenerator((function*(t,r){return(yield p.whenOrAbort(e.whenLayerView(n),r)).elevationAlignPointsInFeatures(t,r)}));return function(e,t){return r.apply(this,arguments)}}();return k.getSnappingCandidateElevationAligner(r,{elevationInfo:n.elevationInfo,alignPointsInFeatures:o,spatialReference:e.spatialReference})}},{key:"_snappingElevationFilter",get:function(){const{view:e}=this,t=s.isSome(e)&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type;return C.getSnappingCandidateElevationFilter(t)}},{key:"_symbologySnappingFetcher",get:function(){const{view:e}=this,{layer:n}=this.layerSource,r=s.isSome(e)&&"3d"===e.type,o=this._extrudedPolygonSymbolsCount>0;return r&&"map-notes"!==n.type&&o?A.getSymbologySnappingCandidatesFetcher(o,function(){var r=t._asyncToGenerator((function*(t,r){const o=yield e.whenLayerView(n);return p.throwIfAborted(r),o.queryForSymbologySnapping({candidates:t,spatialReference:e.spatialReference},r)}));return function(e,t){return r.apply(this,arguments)}}()):A.getSymbologySnappingCandidatesFetcher()}},{key:"_getGroundElevation",get:function(){return E.makeGetGroundElevation(this.view)}}]),n}(a.HandleOwnerMixin(r)),n.__decorate([l.property()],e.GraphicsSnappingSource.prototype,"getGraphicsLayers",void 0),n.__decorate([l.property({constructOnly:!0})],e.GraphicsSnappingSource.prototype,"layerSource",void 0),n.__decorate([l.property({constructOnly:!0})],e.GraphicsSnappingSource.prototype,"spatialReference",void 0),n.__decorate([l.property({constructOnly:!0})],e.GraphicsSnappingSource.prototype,"view",void 0),n.__decorate([l.property({readOnly:!0})],e.GraphicsSnappingSource.prototype,"updating",null),n.__decorate([l.property({readOnly:!0})],e.GraphicsSnappingSource.prototype,"availability",void 0),n.__decorate([l.property()],e.GraphicsSnappingSource.prototype,"_hasZ",null),n.__decorate([l.property()],e.GraphicsSnappingSource.prototype,"_snappingElevationAligner",null),n.__decorate([l.property()],e.GraphicsSnappingSource.prototype,"_snappingElevationFilter",null),n.__decorate([l.property()],e.GraphicsSnappingSource.prototype,"_symbologySnappingFetcher",null),n.__decorate([l.property()],e.GraphicsSnappingSource.prototype,"_extrudedPolygonSymbolsCount",void 0),n.__decorate([l.property()],e.GraphicsSnappingSource.prototype,"_getGroundElevation",null),e.GraphicsSnappingSource=n.__decorate([d.subclass("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],e.GraphicsSnappingSource);const I="OBJECTID";Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
