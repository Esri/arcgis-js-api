/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/mathUtils","../../../core/maybe","../../../chunks/vec2","../../../chunks/vec2f64","./SnappingAlgorithm","./SnappingConstraint","./snappingUtils","./candidates/RightAngleSnappingCandidate"],(function(t,e,i,n,r,o,s,p,a,h){"use strict";let c=function(t){function s(){var e;return(e=t.apply(this,arguments)||this)._tmp=o.create(),e}e._inheritsLoose(s,t);var c=s.prototype;return c.snapNewVertex=function(t,e){const i=e.geometry.editGeometry.components[0],n=i.vertices.length,r=[];if(n<2)return r;const o=a.anyMapPointToScreenPoint(t,e.coordinateHelper,e.elevationInfo,this.view),s=i.vertices[n-1];this._checkForSnappingCandidate(r,s.left,s.pos,t,s.left.left.pos,s.pos,e,t,o);const p=i.vertices[0];return this._checkForSnappingCandidate(r,p.right,p.pos,t,p.right.right.pos,p.pos,e,t,o),r},c.snapExistingVertex=function(t,e){const i=[],r=n.unwrap(e.vertexHandle),o=r.component,s=o.vertices.length;if(s<3)return i;const p=a.anyMapPointToScreenPoint(t,e.coordinateHelper,e.elevationInfo,this.view),h=r.left,c=r.right,g=o.vertices[0],l=o.vertices[s-1];if(!h)return this._checkForSnappingCandidate(i,g.right.right.right,g.right.right.pos,t,g.right.right.right.right.pos,g.right.right.pos,e,t,p),i;if(!c)return this._checkForSnappingCandidate(i,l.left.left.left,l.left.left.pos,t,l.left.left.left.left.pos,l.left.left.pos,e,t,p),i;if(h&&h.left.left){const n=h.left.left;this._checkForSnappingCandidate(i,n,h.left.pos,t,n.left.pos,h.left.pos,e,t,p)}if(c&&c.right.right){const n=c.right.right;this._checkForSnappingCandidate(i,n,c.right.pos,t,n.right.pos,c.right.pos,e,t,p)}return i},c._checkForSnappingCandidate=function(t,e,n,s,c,g,l,f,d){if(!this.edgeExceedsShortLineThreshold(e,l))return;r.subtract(this._tmp,e.right.pos,e.left.pos);const u=o.fromValues(this._tmp[1],-this._tmp[0]),v=r.dot(u,r.subtract(this._tmp,s,n))/r.squaredLength(u),S=l.coordinateHelper,m=S.fromXYZ(r.scaleAndAdd(o.create(),g,u,v),S.getZ(f,0));a.squareDistance(d,a.anyMapPointToScreenPoint(m,S,l.elevationInfo,this.view))<this.squaredProximityTreshold(l.pointer)&&t.push(new h.RightAngleSnappingCandidate({coordinateHelper:S,targetPoint:m,constraint:new p.RayConstraint(S,g,r.scaleAndAdd(S.createNew(),g,u,i.sign(v))),previousVertex:c,otherVertex:g,otherVertexType:1}))},s}(s.SnappingAlgorithm);t.RightAngleSnapper=c,Object.defineProperty(t,"__esModule",{value:!0})}));
