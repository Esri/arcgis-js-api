/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/mathUtils","../../../core/maybe","../../../chunks/vec2","../../../chunks/vec2f64","./SnappingAlgorithm","./SnappingConstraint","./snappingUtils","./candidates/RightAngleSnappingCandidate"],(function(e,t,r,i,n,o,s,a,p,g){"use strict";let h=function(e){function s(){var t;return(t=e.apply(this,arguments)||this)._tmp=o.create(),t}t._inheritsLoose(s,e);var h=s.prototype;return h.snapNewVertex=function(e,t){const r=t.editGeometryOperations.data.components[0],i=r.vertices.length,n=[];if(i<2)return n;const o=p.anyMapPointToScreenPoint(e,t.coordinateHelper,t.elevationInfo,this.view),s=r.vertices[i-1];this._checkForSnappingCandidate(n,s.leftEdge,s.pos,e,s.leftEdge.leftVertex.pos,s.pos,t,e,o);const a=r.vertices[0];return this._checkForSnappingCandidate(n,a.rightEdge,a.pos,e,a.rightEdge.rightVertex.pos,a.pos,t,e,o),n},h.snapExistingVertex=function(e,t){const r=[],n=i.unwrap(t.vertexHandle),o=n.component,s=o.vertices.length;if(s<3)return r;const a=p.anyMapPointToScreenPoint(e,t.coordinateHelper,t.elevationInfo,this.view),g=n.leftEdge,h=n.rightEdge,d=o.vertices[0],c=o.vertices[s-1];if(!g)return this._checkForSnappingCandidate(r,d.rightEdge.rightVertex.rightEdge,d.rightEdge.rightVertex.pos,e,d.rightEdge.rightVertex.rightEdge.rightVertex.pos,d.rightEdge.rightVertex.pos,t,e,a),r;if(!h)return this._checkForSnappingCandidate(r,c.leftEdge.leftVertex.leftEdge,c.leftEdge.leftVertex.pos,e,c.leftEdge.leftVertex.leftEdge.leftVertex.pos,c.leftEdge.leftVertex.pos,t,e,a),r;if(g&&g.leftVertex.leftEdge){const i=g.leftVertex.leftEdge;this._checkForSnappingCandidate(r,i,g.leftVertex.pos,e,i.leftVertex.pos,g.leftVertex.pos,t,e,a)}if(h&&h.rightVertex.rightEdge){const i=h.rightVertex.rightEdge;this._checkForSnappingCandidate(r,i,h.rightVertex.pos,e,i.rightVertex.pos,h.rightVertex.pos,t,e,a)}return r},h._checkForSnappingCandidate=function(e,t,i,s,h,d,c,l,f){if(!this.edgeExceedsShortLineThreshold(t,c))return;n.subtract(this._tmp,t.rightVertex.pos,t.leftVertex.pos);const x=o.fromValues(this._tmp[1],-this._tmp[0]),u=n.dot(x,n.subtract(this._tmp,s,i))/n.squaredLength(x),V=c.coordinateHelper,E=V.fromXYZ(n.scaleAndAdd(o.create(),d,x,u),V.getZ(l,0));p.squareDistance(f,p.anyMapPointToScreenPoint(E,V,c.elevationInfo,this.view))<this.squaredProximityTreshold(c.pointer)&&e.push(new g.RightAngleSnappingCandidate({coordinateHelper:V,targetPoint:E,constraint:new a.RayConstraint(V,d,n.scaleAndAdd(V.createVector(),d,x,r.sign(u))),previousVertex:h,otherVertex:d,otherVertexType:1}))},s}(s.SnappingAlgorithm);e.RightAngleSnapper=h,Object.defineProperty(e,"__esModule",{value:!0})}));
