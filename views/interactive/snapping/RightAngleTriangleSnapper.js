/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{unwrap as e}from"../../../core/maybe.js";import{l as t,j as o}from"../../../chunks/vec2.js";import{a as r}from"../../../chunks/vec2f64.js";import{SnappingAlgorithm as s}from"./SnappingAlgorithm.js";import{squareDistance as i}from"./snappingUtils.js";import{RightAngleTriangleSnappingCandidate as n}from"./candidates/RightAngleTriangleSnappingCandidate.js";import{anyMapPointToScreenPoint as p}from"../support/viewUtils.js";import{projectPointToCircle as a}from"../../support/geometry2dUtils.js";class d extends s{snapNewVertex(e,t){const o=t.editGeometryOperations.data.components[0],r=[],s=o.vertices.length;if("polygon"!==t.editGeometryOperations.data.type||s<2)return r;const i=o.vertices[0],n=o.vertices[s-1];return this._processCandidateProposal(i.pos,n.pos,e,t,r),r}snapExistingVertex(t,o){const r=[],s=e(o.vertexHandle),i=s.component;return i.edges.length<2?r:"polyline"!==o.editGeometryOperations.data.type||0!==s.index&&s.index!==i.vertices.length-1?(this._processCandidateProposal(s.leftEdge.leftVertex.pos,s.rightEdge.rightVertex.pos,t,o,r),r):r}_processCandidateProposal(e,s,d,l,m){if(!this.exceedsShortLineThreshold(e,s,l))return;const c=t(r(),e,s,.5),g=.5*o(e,s),h=a(r(),d,c,g),{coordinateHelper:f,elevationInfo:v,pointer:x}=l,u=f.fromXYZ(h,f.getZ(d,0)),y=p(d,f,v,this.view);i(y,p(u,f,v,this.view))<this.squaredProximityTreshold(x)&&m.push(new n({coordinateHelper:f,targetPoint:u,point1:e,point2:s,elevationInfo:v}))}}export{d as RightAngleTriangleSnapper};
