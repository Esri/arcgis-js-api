/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/promiseUtils","../../../chunks/vec3f64","../../../core/Handles","../../../core/watchUtils","../../../core/HandleOwner","../../../core/MapUtils","./snappingUtils","./candidates/FeatureSnappingCandidate"],(function(e,t,r,n,i,o,a,s,u,c,l,p,d,h,S,f,g,y,m,w,v){"use strict";t.FeatureSnappingEngine=function(t){function n(e){var r;return(r=t.call(this,e)||this).sourceModules={featureService:{module:null,loader:null},featureCollection:{module:null,loader:null},graphics:{module:null,loader:null}},r}r._inheritsLoose(n,t);var i=n.prototype;return i.initialize=function(){var e;(this.updatingHandles.add(this,"snappingSources",(()=>{this.notifyChange("updating")}),1),o.isSome(this.view))&&this.handles.add([null==(e=this.view.refreshManager)?void 0:e.on("refresh",(e=>{"interval"===e.trigger&&this.refreshSourceOfLayer(e.layerView.layer)})),this.view.on("layerview-create",(e=>this.updateLayerView(e.layer,e.layerView))),this.view.on("layerview-destroy",(e=>this.updateLayerView(e.layer,null)))])},i.refreshSourceOfLayer=function(e){for(const[,{snappingSource:t}]of this.snappingSources)t.layerSource.layer===e&&t.refresh()},i.updateLayerView=function(e,t){for(const[,r]of this.snappingSources)r.snappingSource.layerSource.layer===e&&(r.layerView=t)},i.destroy=function(){this._set("options",null);for(const[,e]of this.snappingSources)e.destroy()},i.fetchCandidates=async function(e,t,r){if(!this.options.effectiveFeatureEnabled)return[];const n=[],i={distance:this.computeScreeenSizeDistanceParameters(e,t),point:e,coordinateHelper:t.coordinateHelper,types:this.types,filter:null};for(const[,{snappingSource:s,layerView:u}]of this.snappingSources)!s.layerSource.enabled||o.isSome(u)&&u.suspended||n.push(s.fetchCandidates(i,r).then((({candidates:e})=>e.filter((e=>!this.candidateIsExcluded(s,e,t.excludeFeature))))));const a=(await h.eachAlwaysValues(n)).flat();return h.throwIfAborted(r),w.sortCandidatesInPlace(e,a),a},i.computeScreeenSizeDistanceParameters=function(e,t){const r=this.options.distance*("touch"===t.pointer?this.options.touchSensitivityMultiplier:1);return o.isNone(this.view)?r:"2d"===this.view.type?r*this.view.resolution:this.computeScreeenSizeDistanceParameters3D(e,r,this.view,t)},i.computeScreeenSizeDistanceParameters3D=function(e,t,r,n){const{coordinateHelper:i,elevationInfo:o}=n,a=r.state.camera.computeScreenPixelSizeAt(w.anyMapPointToRender(e,i,o,r,M))*r.renderCoordsHelper.unitInMeters/r.mapCoordsHelper.unitInMeters,s=t*a;return{x:s/this.computeScreenMagnitudeOfMapOffset(e,a,0,r,n),y:s/this.computeScreenMagnitudeOfMapOffset(e,0,a,r,n)}},i.computeScreenMagnitudeOfMapOffset=function(e,t,r,n,{coordinateHelper:i,elevationInfo:o}){const a=i.clone(e);a[0]+=t,a[1]+=r;const s=w.anyMapPointToScreenPoint(e,i,o,n),u=w.anyMapPointToScreenPoint(a,i,o,n),c=u.x-s.x,l=u.y-s.y;return Math.sqrt(c*c+l*l)},i.candidateIsExcluded=function(e,t,r){if(o.isNone(r))return!1;const n=this.getCandidateObjectId(t);if(o.isNone(n))return!1;const i=e.layerSource.layer;return"graphics"===i.type?r.uid===n:r.sourceLayer===i&&(!(!r.attributes||!("objectIdField"in i))&&r.attributes[i.objectIdField]===n)},i.getCandidateObjectId=function(e){return e instanceof v.FeatureSnappingCandidate?e.objectId:null},i.createSourceInfo=function(e){const t=this.createFeatureSnappingSourceType(e);if(o.isNone(t))return null;if("loading"in t)return this.updatingHandles.addPromise(t.loading.then((()=>{this.destroyed||this.notifyChange("snappingSources")}))),null;const r=o.isSome(this.view)?this.view.allLayerViews.find((t=>t.layer===e.layer)):null;return new F(t.source,r)},i.createFeatureSnappingSourceType=function(e){switch(e.layer.type){case"feature":case"geojson":case"csv":return this.createFeatureSnappingSourceFeatureLayer(e);case"graphics":return this.createFeatureSnappingSourceGraphicsLayer(e)}return null},i.createFeatureSnappingSourceFeatureLayer=function(e){switch(e.layer.source.type){case"feature-layer":{const t=this.getSourceModule("featureService");return o.isSome(t.module)?{source:new t.module.FeatureServiceSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}case"memory":case"csv":case"geojson":{if("mesh"===e.layer.geometryType)return null;const t=this.getSourceModule("featureCollection");return o.isSome(t.module)?{source:new t.module.FeatureCollectionSnappingSource({layerSource:e})}:{loading:t.loader}}}return null},i.createFeatureSnappingSourceGraphicsLayer=function(e){const t=this.getSourceModule("graphics");return o.isSome(t.module)?{source:new t.module.GraphicsSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}},i.getSourceModule=function(e){const t=this.sourceModules[e];if(o.isNone(t.loader)){const r=this.loadSourceModule(e).then((e=>{t.module=e}));return t.loader=r,{module:t.module,loader:r}}return{module:t.module,loader:t.loader}},i.loadSourceModule=function(t){switch(t){case"featureService":return this.updatingHandles.addPromise(new Promise((function(t,r){e(["./featureSources/FeatureServiceSnappingSource"],t,r)})));case"featureCollection":return this.updatingHandles.addPromise(new Promise((function(t,r){e(["./featureSources/FeatureCollectionSnappingSource"],t,r)})));case"graphics":return this.updatingHandles.addPromise(new Promise((function(t,r){e(["./featureSources/GraphicsSnappingSource"],t,r)})))}return null},r._createClass(n,[{key:"updating",get:function(){return m.someMap(this.snappingSources,(({snappingSource:e})=>e.updating))||this.updatingHandles.updating}},{key:"snappingSources",get:function(){var e;const t=this._get("snappingSources")||new Map,r=new Map;if(null!=(e=this.options)&&e.featureSources)for(const n of this.options.featureSources.items){const e=n.layer.uid,i=t.get(e);if(i){t.delete(e),r.set(e,i);continue}if(!n.layer.loaded){this.updatingHandles.addPromise(n.layer.load());continue}const a=this.createSourceInfo(n);o.isSome(a)&&r.set(e,a)}for(const[,n]of t)n.destroy();return r}},{key:"types",get:function(){return 3}}]),n}(y.HandleOwner),n.__decorate([u.property({constructOnly:!0})],t.FeatureSnappingEngine.prototype,"spatialReference",void 0),n.__decorate([u.property({constructOnly:!0})],t.FeatureSnappingEngine.prototype,"view",void 0),n.__decorate([u.property()],t.FeatureSnappingEngine.prototype,"options",void 0),n.__decorate([u.property({readOnly:!0})],t.FeatureSnappingEngine.prototype,"updating",null),n.__decorate([u.property({readOnly:!0})],t.FeatureSnappingEngine.prototype,"snappingSources",null),t.FeatureSnappingEngine=n.__decorate([c.subclass("esri.views.interactive.snapping.FeatureSnappingEngine")],t.FeatureSnappingEngine);let F=function(){function e(e,t){this.snappingSource=e,this.layerView=t,this.handles=new f;const r=this.snappingSource.layerSource.layer;if("refresh"in r){const t=r;this.handles.add(t.on("refresh",(()=>e.refresh())))}this.handles.add([g.init(e,"updating",(t=>e.layerSource.updating=t),!0),g.init(e,"availability",(t=>e.layerSource.availability=t),!0)])}return e.prototype.destroy=function(){this.snappingSource.destroy(),this.handles.destroy()},e}();const M=S.create();Object.defineProperty(t,"__esModule",{value:!0})}));
