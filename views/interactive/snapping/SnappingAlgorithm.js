/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../core/maybe.js";import{defaults as t}from"./Settings.js";import{squareDistance as r}from"./snappingUtils.js";import{anyMapPointToScreenPoint as s}from"../support/viewUtils.js";class i{constructor(e,r){this.view=e,this.options=r,this.squaredShortLineThreshold=t.shortLineThreshold*t.shortLineThreshold}snap(t,r){return e(r.vertexHandle)?"vertex"!==r.vertexHandle.type?[]:this.snapExistingVertex(t,r):this.snapNewVertex(t,r)}edgeExceedsShortLineThreshold(e,t){return this.exceedsShortLineThreshold(e.leftVertex.pos,e.rightVertex.pos,t)}exceedsShortLineThreshold(e,t,{elevationInfo:i,editGeometryOperations:o}){const h=o.data.coordinateHelper;return 0===this.squaredShortLineThreshold||r(s(t,h,i,this.view),s(e,h,i,this.view))>this.squaredShortLineThreshold}squaredProximityTreshold(e){return"touch"===e?this.squaredTouchProximityThreshold:this.squaredMouseProximityTreshold}get squaredMouseProximityTreshold(){return this.options.distance*this.options.distance}get squaredTouchProximityThreshold(){const{distance:e,touchSensitivityMultiplier:t}=this.options,r=e*t;return r*r}}export{i as SnappingAlgorithm};
