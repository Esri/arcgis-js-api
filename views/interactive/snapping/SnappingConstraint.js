/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{s as t,g as s,h as e,c as n}from"../../../chunks/vec2.js";import{a as r}from"../../../chunks/vec2f64.js";import{defaults as i}from"./Settings.js";import{objectEqual as o}from"./snappingUtils.js";import{intersectLineAndPoint as c,LineType as h,intersectCircleAndPoint as a,intersectLineAndRay as u,intersectLineLikeAndCircle as p,pointToLineDistance as d,projectPointToRay as l,projectPointToLine as f,projectPointToCircle as E}from"../../support/geometry2dUtils.js";class j{constructor(t){this.coordinateHelper=t}}class m extends j{constructor(t,s){super(t),this.point=s}objectEqual(t){return t instanceof m&&o(this.point,t.point)}check(s){return t(s,this.point)<i.pointThreshold}closestTo(){return this.coordinateHelper.clone(this.point)}intersect(t){const s=[];return t instanceof b?s.push(...c({start:t.start,end:t.end,type:t instanceof H?h.LINE:h.RAY},this.point)):t instanceof T&&s.push(...a(t.center,t.radius,this.point)),s.map((s=>new L(this.coordinateHelper,s,this,t)))}}class b extends j{constructor(t,s,e){super(t),this.start=s,this.end=e}objectEqual(t){return t instanceof b&&(o(this.start,t.start)&&o(this.end,t.end))}intersect(t){const s=[];return t instanceof m?s.push(...c({start:this.start,end:this.end,type:this instanceof H?h.LINE:h.RAY},t.point)):t instanceof b?s.push(...u({start:this.start,end:this.end,type:this instanceof H?h.LINE:h.RAY},{start:t.start,end:t.end,type:t instanceof H?h.LINE:h.RAY})):t instanceof T&&s.push(...p({start:this.start,end:this.end,type:this instanceof H?h.LINE:h.RAY},t.center,t.radius)),s.map((s=>new L(this.coordinateHelper,s,this,t)))}}class q extends b{constructor(t,s,e){super(t,s,e),this.dir=r(),this.p=r()}objectEqual(t){return t instanceof q&&super.objectEqual(t)}check(t){return s(this.dir,this.end,this.start),s(this.p,t,this.start),e(this.dir,this.p)>=0&&d(t,this.start,this.end)<i.pointOnLineThreshold}closestTo(t){const s=this.coordinateHelper.clone(t);return l(s,t,this.start,this.end),s}}class H extends b{constructor(t,s,e){super(t,s,e)}objectEqual(t){return t instanceof H&&super.objectEqual(t)}check(t){return d(t,this.start,this.end)<i.pointOnLineThreshold}closestTo(t){const s=this.coordinateHelper.clone(t);return f(s,t,this.start,this.end),s}}class L extends j{constructor(t,s,e,n){super(t),this.intersection=s,this.first=e,this.second=n}objectEqual(t){return t instanceof L&&(this.first.objectEqual(t.first)&&this.second.objectEqual(t.second))}check(){return!1}closestTo(t){const s=this.coordinateHelper.clone(t);return n(s,this.intersection),s}intersect(){return[]}}class T extends j{constructor(t,s,e){super(t),this.center=s,this.radius=e}objectEqual(t){return t instanceof T&&(this.center[0]===t.center[0]&&this.center[1]===t.center[1]&&this.radius===t.radius)}check(){return!1}closestTo(t){const s=this.coordinateHelper.clone(t);return E(s,t,this.center,this.radius),s}intersect(t){const s=[];return t instanceof b?s.push(...p({start:t.start,end:t.end,type:t instanceof H?h.LINE:h.RAY},this.center,this.radius)):t instanceof m&&s.push(...a(this.center,this.radius,t.point)),s.map((s=>new L(this.coordinateHelper,s,this,t)))}}export{L as IntersectionConstraint,H as LineConstraint,b as LineLikeConstraint,T as PlanarCircleConstraint,m as PointConstraint,q as RayConstraint,j as SnappingConstraint};
