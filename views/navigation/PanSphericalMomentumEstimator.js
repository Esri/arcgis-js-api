/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{a as t}from"../../chunks/vec2f64.js";import{p as e,n as i,c as s}from"../../chunks/vec3.js";import{c as a}from"../../chunks/vec3f64.js";import{rotationAngleAndAxisDirectRotation as h,rotationAnglesAndAxesHeadingPreserving as n}from"../3d/state/utils/navigationUtils.js";import{FilteredFiniteDifference as l}from"./FilteredFiniteDifference.js";import{FilteredValue as r}from"./FilteredValue.js";import{Momentum as m}from"./Momentum.js";const u=1e-5;class c extends m{constructor(t,e,i,s,a,h=0,n){super(t,e,i),this.angularVelocity1=s,this.axis1=a,this.angularVelocity2=h,this.axis2=n}value1(t){return super.valueFromInitialVelocity(this.angularVelocity1,t)}value2(t){return super.valueFromInitialVelocity(this.angularVelocity2,t)}}class o{constructor(e=300,i=12,s=.84){this.minimumInitialVelocity=e,this.stopVelocity=i,this.friction=s,this.enabled=!0,this.tmpAxis1=a(),this.tmpAxis2=a(),this.tmpAngles=t(),this.time=new l(.3),this.screen=[new l(.4),new l(.4)],this.angle1=new r(.6),this.angle2=new r(.6),this.axis1=a(),this.axis2=a(),this.lastScene=a()}addMomentumDirectRotation(t,a,n,l,r,m){if(this.enabled){if(this.time.hasLastValue){if(this.time.computeDelta(n)<.01)return;let t=h(this.lastScene,a,this.tmpAxis2,l,r,m);this.angle2.update(0),e(this.tmpAxis2)<u?t=0:i(this.axis1,this.tmpAxis2),this.angle1.update(t),s(this.lastScene,a)}this.screen[0].update(t[0]),this.screen[1].update(t[1]),this.time.update(n)}}addMomentumPreserveHeading(t,a,h,l,r,m,c){if(this.enabled){if(this.time.hasLastValue){if(this.time.computeDelta(h)<.01)return;n(this.lastScene,a,this.tmpAxis2,this.tmpAxis1,this.tmpAngles,l,r,m,c,!1),e(this.tmpAxis2)<u?(this.angle1.update(0),this.angle2.update(0)):(this.angle1.update(this.tmpAngles[1]),this.angle2.update(this.tmpAngles[0]),i(this.axis1,this.tmpAxis1),i(this.axis2,this.tmpAxis2)),s(this.lastScene,a)}this.screen[0].update(t[0]),this.screen[1].update(t[1]),this.time.update(h)}}reset(){this.screen[0].reset(),this.screen[1].reset(),this.angle1.reset(),this.angle2.reset(),this.time.reset()}evaluateMomentum(){if(!this.enabled||!this.screen[0].hasFilteredDelta)return null;const t=this.screen[0].filteredDelta,e=this.screen[1].filteredDelta,i=Math.sqrt(t*t+e*e)/this.time.filteredDelta;return Math.abs(i)<this.minimumInitialVelocity?null:this.createMomentum(i,this.stopVelocity,this.friction)}createMomentum(t,e,i){const s=this.angle1.filteredValue/this.time.filteredDelta,a=this.angle2.filteredValue/this.time.filteredDelta;return new c(t,e,i,s,this.axis1,a,this.axis2)}}export{c as PanSphericalMomentum,o as PanSphericalMomentumEstimator};
