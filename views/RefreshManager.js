/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/subclass","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../core/Accessor","../core/Handles","./layers/RefreshableLayerView"],(function(e,r,t,s,i,a,n,c,o,l,h,u,_){"use strict";let v=function(r){function t(){var e;return(e=r.apply(this,arguments)||this)._handles=new u,e._currentTick=0,e}e._inheritsLoose(t,r);var s=t.prototype;return s.initialize=function(){this._handles.add([this.view.allLayerViews.on("after-changes",(()=>{this.notifyChange("tickInterval"),this._handles.remove("layerViewsUpdating"),this._handles.add(this._getLayerViewHandles(),"layerViewsUpdating")})),this.watch("tickInterval",(()=>this._restartTicking())),this.watch("view.ready",(()=>this._restartTicking()))]),this._restartTicking()},s.destroy=function(){this._handles&&(this._handles.destroy(),this._handles=null,this._intervalID&&clearInterval(this._intervalID),this._currentTick=0)},s._restartTicking=function(){this._currentTick=0,this._intervalID&&clearInterval(this._intervalID),this.get("view.ready")&&this.tickInterval&&(this._intervalID=setInterval((()=>{const e=Date.now();this._currentTick+=this.tickInterval,this.view.allLayerViews.forEach((r=>{if(_.isRefreshableLayerView(r)){const t=Math.round(6e4*r.refreshInterval),s=this._currentTick%t==0,i=e-r.refreshTimestamp<5400;t&&s&&!i&&r.refresh(e)}}))}),this.tickInterval))},s._getLayerViewHandles=function(){const e=[],r=()=>this.notifyChange("tickInterval");return this.view.allLayerViews.forEach((t=>{_.isRefreshableLayerView(t)&&t.layer&&e.push(t.watch("refreshInterval",r),t.layer.on("refresh",(()=>{t.refresh(Date.now())})))})),e},s._getCommonInterval=function(e){const r=(e,t)=>isNaN(e)||isNaN(t)?0:t<=0?e:r(t,e%t);return e.toArray().reduce(((e,t)=>r(Math.round(6e4*t.refreshInterval),e)),0)},e._createClass(t,[{key:"tickInterval",get:function(){const e=this.view.allLayerViews.filter((e=>_.isRefreshableLayerView(e)));return this._getCommonInterval(e)}}]),t}(h);return r.__decorate([a.property()],v.prototype,"view",void 0),r.__decorate([a.property({readOnly:!0})],v.prototype,"tickInterval",null),v=r.__decorate([n.subclass("esri.views.RefreshManager")],v),v}));
