/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../Viewpoint","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/subclass","../../chunks/common","../../chunks/mat2d","../../chunks/mat2df32","../../chunks/mat2df64","../../chunks/mat3","../../chunks/mat3f32","../../chunks/vec2","../../chunks/vec2f32","../../chunks/vec2f64","../../core/libs/gl-matrix-2/types/vec2","./viewpointUtils","../../geometry/Extent","../../geometry/Point"],(function(t,e,i,r,s,o,n,a,c,p,l,h,u,f,d,m,y,v,_,w,R,g){"use strict";var M;const x=[0,0];let k=M=function(e){function i(t){var i;return(i=e.call(this,t)||this)._viewpoint2D={center:v.create(),rotation:0,scale:0,spatialReference:void 0},i.center=[0,0],i.extent=new R,i.id=0,i.inverseTransform=u.create(),i.resolution=0,i.rotation=0,i.scale=0,i.transform=u.create(),i.transformNoRotation=u.create(),i.displayMat3=d.create(),i.displayViewMat3=d.create(),i.viewMat3=d.create(),i.viewMat2d=h.create(),i.worldScreenWidth=0,i.size=[0,0],i}t._inheritsLoose(i,e);var s=i.prototype;return s.copy=function(t){const e=this.size,i=this.viewpoint;return i&&e?(this.viewpoint=w.copy(i,t.viewpoint),this._set("size",m.copy(e,t.size))):(this.viewpoint=t.viewpoint.clone(),this._set("size",[t.size[0],t.size[1]])),this._set("pixelRatio",t.pixelRatio),this},s.clone=function(){return new M({size:this.size,viewpoint:this.viewpoint.clone(),pixelRatio:this.pixelRatio})},s.toMap=function(t,e,i){return _.isVec2(e)?m.transformMat2d(t,e,this.inverseTransform):(x[0]=e,x[1]=i,m.transformMat2d(t,x,this.inverseTransform))},s.toScreen=function(t,e,i){return _.isVec2(e)?m.transformMat2d(t,e,this.transform):(x[0]=e,x[1]=i,m.transformMat2d(t,x,this.transform))},s.toScreenNoRotation=function(t,e,i){return _.isVec2(e)?m.transformMat2d(t,e,this.transformNoRotation):(x[0]=e,x[1]=i,m.transformMat2d(t,x,this.transformNoRotation))},s.getScreenTransform=function(t,e){const{center:i}=this._viewpoint2D,r=this._get("pixelRatio")||1,s=this._get("size");return w.getMatrix(t,i,s,e,0,r),t},s._update=function(){const{center:t,spatialReference:e,scale:i,rotation:s}=this._viewpoint2D,o=this._get("pixelRatio")||1,n=this._get("size"),a=new r({targetGeometry:new g(t[0],t[1],e),scale:i,rotation:s});if(this._set("viewpoint",a),!n||!e||!i)return;this.resolution=w.getResolution(a),this.rotation=s,this.scale=i,this.spatialReference=e,m.copy(this.center,t);const c=0!==n[0]?2/n[0]:0,h=0!==n[1]?-2/n[1]:0;f.set(this.displayMat3,c,0,0,0,h,0,-1,1,1);const u=f.identity(this.viewMat3),d=y.fromValues(n[0]/2,n[1]/2),v=y.fromValues(-n[0]/2,-n[1]/2),_=p.toRadian(s);f.translate(u,u,d),f.rotate(u,u,_),f.translate(u,u,v),f.multiply(this.displayViewMat3,this.displayMat3,u);const R=l.fromTranslation(this.viewMat2d,d);return l.rotate(R,R,_),l.translate(R,R,v),w.getExtent(this.extent,a,n),w.getTransform(this.transform,a,n,o),l.invert(this.inverseTransform,this.transform),w.getTransformNoRotation(this.transformNoRotation,a,n,o),this.worldScreenWidth=w.getWorldScreenWidth(this.spatialReference,this.resolution),this._set("id",this.id+1),this},t._createClass(i,[{key:"pixelRatio",set:function(t){this._set("pixelRatio",t),this._update()}},{key:"size",set:function(t){this._set("size",t),this._update()}},{key:"viewpoint",set:function(t){if(t){const e=this._viewpoint2D,i=t.targetGeometry;e.center[0]=i.x,e.center[1]=i.y,e.rotation=t.rotation,e.scale=t.scale,e.spatialReference=i.spatialReference}this._update()}}]),i}(s.JSONSupport);e.__decorate([o.property({readOnly:!0})],k.prototype,"id",void 0),e.__decorate([o.property({value:1,json:{write:!0}})],k.prototype,"pixelRatio",null),e.__decorate([o.property({json:{write:!0}})],k.prototype,"size",null),e.__decorate([o.property()],k.prototype,"spatialReference",void 0),e.__decorate([o.property({type:r,json:{write:!0}})],k.prototype,"viewpoint",null),k=M=e.__decorate([c.subclass("esri.views.2d.ViewState")],k);return k}));
