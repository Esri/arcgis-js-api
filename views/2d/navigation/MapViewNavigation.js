/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import i from"../../../Viewpoint.js";import o from"../../../core/Accessor.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as e}from"../../../core/accessorSupport/decorators/subclass.js";import s from"../../../geometry/Point.js";import{rotateBy as a,translateBy as r,padAndScaleAndRotateBy as c}from"../viewpointUtils.js";import h from"./ZoomBox.js";import m from"./actions/Pan.js";import p from"./actions/Pinch.js";import u from"./actions/Rotate.js";const l=10,w=1,v=new i({targetGeometry:new s}),d=[0,0],g=250;let _=class extends o{constructor(t){super(t),this._endTimer=null,this.animationManager=null}initialize(){this.pan=new m({navigation:this}),this.rotate=new u({navigation:this}),this.pinch=new p({navigation:this}),this.zoomBox=new h({view:this.view,navigation:this})}destroy(){this.pan.destroy(),this.rotate.destroy(),this.pinch.destroy(),this.zoomBox.destroy(),this.pan=this.rotate=this.pinch=this.zoomBox=this.animationManager=null}begin(){this._set("interacting",!0)}end(){this._lastEventTimestamp=performance.now(),this._startTimer(g)}async zoom(t,i=this._getDefaultAnchor()){if(this.stop(),this.begin(),this.view.constraints.snapToZoom&&this.view.constraints.effectiveLODs)return t<1?this.zoomIn(i):this.zoomOut(i);this.setViewpoint(i,t,0,[0,0])}async zoomIn(t){const i=this.view,o=i.constraints.snapToNextScale(i.scale);return this._zoomToScale(o,t)}async zoomOut(t){const i=this.view,o=i.constraints.snapToPreviousScale(i.scale);return this._zoomToScale(o,t)}setViewpoint(t,i,o,n){this.begin(),this.view.state.viewpoint=this._scaleRotateTranslateViewpoint(this.view.viewpoint,t,i,o,n),this.end()}setViewpointImmediate(t,i=0,o=[0,0],n=this._getDefaultAnchor()){this.view.state.viewpoint=this._scaleRotateTranslateViewpoint(this.view.viewpoint,n,t,i,o)}continousRotateClockwise(){const t=this.get("view.viewpoint");this.animationManager.animateContinous(t,(t=>{a(t,t,-w)}))}continousRotateCounterclockwise(){const t=this.get("view.viewpoint");this.animationManager.animateContinous(t,(t=>{a(t,t,w)}))}resetRotation(){this.view.rotation=0}continousPanLeft(){this._continuousPan([-l,0])}continousPanRight(){this._continuousPan([l,0])}continousPanUp(){this._continuousPan([0,l])}continousPanDown(){this._continuousPan([0,-l])}stop(){this.pan.stopMomentumNavigation(),this.animationManager.stop(),this.end(),null!==this._endTimer&&(clearTimeout(this._endTimer),this._endTimer=null,this._set("interacting",!1))}_continuousPan(t){const i=this.view.viewpoint;this.animationManager.animateContinous(i,(i=>{r(i,i,t),this.view.constraints.constrainByGeometry(i)}))}_startTimer(t){return null!==this._endTimer||(this._endTimer=setTimeout((()=>{this._endTimer=null;const t=performance.now()-this._lastEventTimestamp;t<g?this._endTimer=this._startTimer(t):this._set("interacting",!1)}),t)),this._endTimer}_getDefaultAnchor(){const{size:t,padding:{left:i,right:o,top:n,bottom:e}}=this.view;return d[0]=.5*(t[0]-o+i),d[1]=.5*(t[1]-e+n),d}async _zoomToScale(t,i=this._getDefaultAnchor()){const{view:o}=this,{constraints:n,scale:e,viewpoint:s,size:a,padding:r}=o,h=n.canZoomInTo(t),m=n.canZoomOutTo(t);if(!(t<e&&!h||t>e&&!m))return c(v,s,t/e,0,i,a,r),n.constrainByGeometry(v),o.goTo(v,{animate:!0})}_scaleRotateTranslateViewpoint(t,i,o,n,e){const{view:s}=this,{size:a,padding:h,constraints:m,scale:p,viewpoint:u}=s,l=p*o,w=m.canZoomInTo(l),v=m.canZoomOutTo(l);return(o<1&&!w||o>1&&!v)&&(o=1),r(u,u,e),c(t,u,o,n,i,a,h),m.constrainByGeometry(t)}};t([n()],_.prototype,"animationManager",void 0),t([n({type:Boolean,readOnly:!0})],_.prototype,"interacting",void 0),t([n()],_.prototype,"pan",void 0),t([n()],_.prototype,"pinch",void 0),t([n()],_.prototype,"rotate",void 0),t([n()],_.prototype,"view",void 0),t([n()],_.prototype,"zoomBox",void 0),_=t([e("esri.views.2d.navigation.MapViewNavigation")],_);const T=_;export{T as default};
