/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import"../../core/Error.js";import{HandleOwnerMixin as s}from"../../core/HandleOwner.js";import"../../core/has.js";import i from"../../core/Logger.js";import{throttle as r}from"../../core/throttle.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{CollisionEngine as l}from"./engine/webgl/collisions/CollisionEngine.js";const p=32;i.getLogger("esri.views.2d.layers.labels.LabelManager");let d=class extends(s(t)){constructor(e){super(e),this._applyVisibilityPassThrottled=r(this._applyVisibilityPass,p,this),this.lastUpdateId=-1,this.updateRequested=!1,this.view=null}initialize(){this.collisionEngine=new l}destroy(){this.collisionEngine=null,this._applyVisibilityPassThrottled.remove(),this._applyVisibilityPassThrottled=null}get updating(){return this.updateRequested}update(e){this._applyVisibilityPassThrottled(e)}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}processUpdate(e){this._set("updateParameters",e),this.updateRequested&&(this.updateRequested=!1,this.update(e))}_applyVisibilityPass(e){try{const t=this.view.featuresTilingScheme.getClosestInfoForScale(e.state.scale).level;this.collisionEngine.run(this.view.allLayerViews.items,e,t)}catch(t){}}};e([o()],d.prototype,"updateRequested",void 0),e([o({readOnly:!0})],d.prototype,"updateParameters",void 0),e([o()],d.prototype,"updating",null),e([o()],d.prototype,"view",void 0),d=e([a("esri.views.2d.layers.labels.LabelManager")],d);const n=d;export{n as default};
