/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../Graphic","../../../core/lang","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/diffUtils","../../../geometry/support/aaBoundingRect","../../../geometry/support/spatialReferenceUtils","../engine/vectorTiles/enums","../engine/vectorTiles/TileHandler","../engine/vectorTiles/TileManager","../engine/vectorTiles/VectorTile","../engine/vectorTiles/VectorTileContainer","../engine/vectorTiles/style/StyleDefinition","../engine/vectorTiles/style/StyleRepository","./LayerView2D","./support/DebugOverlay","../tiling/TileInfoViewPOT","../tiling/TileQueue","../../layers/LayerView"],(function(e,t,i,s,r,a,n,l,o,h,y,u,c,p,d,_,f,g,T,C,v,S,R,H,D,m){"use strict";let w=function(t){function o(){var e;return(e=t.apply(this,arguments)||this)._styleChanges=[],e._fetchQueue=null,e._parseQueue=null,e._tileHandlerPromise=null,e._isTileHandlerReady=!1,e._collisionOverlay=null,e.fading=!1,e._getCollidersMesh=t=>{const{pixelRatio:i}=t.state;let s=0;const r=[],a=[];for(const n of e._vectorTileContainer.children)if(n.symbols)for(const[t,l]of n.symbols)for(const n of l)for(const t of n.colliders){const l=(t.xScreen+t.dxScreen)*i,o=(t.yScreen+t.dyScreen)*i,h=t.width*i,y=t.height*i,u=n.unique.parts[t.partIndex].targetOpacity>.5;if(!u&&"all"!==e.layer.showCollisionBoxes)continue;const c=3,p=1,d=3,_=0,f=u?2:0,g=u?3:0,T=R.makeFlags(f,g);r.push(l,o,T,l+h,o,T,l,o+y,T,l+h,o+y,T),a.push(s+0,s+1,s+2,s+1,s+3,s+2),s+=4;const C=u?c:p,v=u?d:_,S=R.makeFlags(C,v);r.push(l,o,S,l+h,o,S,l,o+1,S,l+h,o+1,S),a.push(s+0,s+1,s+2,s+1,s+3,s+2),s+=4,r.push(l,o+y-1,S,l+h,o+y-1,S,l,o+y,S,l+h,o+y,S),a.push(s+0,s+1,s+2,s+1,s+3,s+2),s+=4,r.push(l,o,S,l+1,o,S,l,o+y,S,l+1,o+y,S),a.push(s+0,s+1,s+2,s+1,s+3,s+2),s+=4,r.push(l+h-1,o,S,l+h,o,S,l+h-1,o+y,S,l+h,o+y,S),a.push(s+0,s+1,s+2,s+1,s+3,s+2),s+=4}return{vertexData:new Int16Array(r),indexData:new Uint32Array(a)}},e._getCollidersColors=()=>[1,.5,0,1,1,0,0,1,0,1,.5,1,0,.5,0,1],e._getCollidersOpacities=()=>[.05,.01,.15,.2],e}e._inheritsLoose(o,t);var h=o.prototype;return h.hitTest=function(){var t=e._asyncToGenerator((function*(e,t){if(!this._tileHandlerPromise)return null;yield this._tileHandlerPromise;const s=yield this._vectorTileContainer.hitTest(t);if(!s||0===s.length)return null;const r=s[0]-1,a=this._styleRepository,n=a.getStyleLayerByUID(r);if(!n)return null;const l=a.getStyleLayerIndex(n.id);return[{type:"graphic",mapPoint:e,layer:this.layer,graphic:new i({attributes:{layerId:l,layerName:n.id,layerUID:r},layer:this.layer,sourceLayer:this.layer})}]}));function s(e,i){return t.apply(this,arguments)}return s}(),h.update=function(e){if(this._tileHandlerPromise&&this._isTileHandlerReady)return e.pixelRatio!==this._tileHandler.devicePixelRatio?(this._start(),void(this._tileHandler.devicePixelRatio=e.pixelRatio)):void(this._styleChanges.length>0?this._tileHandlerPromise=this._applyStyleChanges():(this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.state=e.state,this._parseQueue.state=e.state,this._tileManager.update(e)||this.requestUpdate(),this._parseQueue.resume(),this._fetchQueue.resume()))},h.attach=function(){const{style:e}=this.layer.currentStyleInfo;this._styleRepository=new v(e),this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent),this._vectorTileContainer=new T.VectorTileContainer(this._tileInfoView),this._tileHandler=new _.TileHandler(this.layer,this._styleRepository,window.devicePixelRatio||1),this.container.addChild(this._vectorTileContainer),this._start(),this.addAttachHandles([this._vectorTileContainer.on("fade-start",(()=>{this.fading=!0,this.notifyChange("updating"),this.requestUpdate()})),this._vectorTileContainer.on("fade-complete",(()=>{this._collisionOverlay?.requestRender(),this.fading=!1,this.notifyChange("updating"),this.requestUpdate()})),l.watch((()=>this.layer.showCollisionBoxes),(e=>{"none"!==e?this._collisionOverlay||(this._collisionOverlay=new R({getMesh:this._getCollidersMesh,getColors:this._getCollidersColors,getOpacities:this._getCollidersOpacities}),this.container.addChild(this._collisionOverlay)):this._collisionOverlay&&(this.container.removeChild(this._collisionOverlay),this._collisionOverlay=null),this.container.requestRender()}),l.initial),this.layer.on("paint-change",(e=>{if(e.isDataDriven)this._styleChanges.push({type:d.StyleUpdateType.PAINTER_CHANGED,data:e}),this.notifyChange("updating"),this.requestUpdate();else{const t=this._styleRepository,i=t.getLayerById(e.layer);if(!i)return;const s=i.type===C.StyleLayerType.SYMBOL;t.setPaintProperties(e.layer,e.paint),s&&this._vectorTileContainer.restartDeclutter(),this._vectorTileContainer.requestRender()}})),this.layer.on("layout-change",(e=>{const t=this._styleRepository,i=t.getLayerById(e.layer);if(!i)return;const s=u.diff(i.layout,e.layout);if(!a.isNone(s)){if(u.hasDiff(s,"visibility")&&1===L(s))return t.setLayoutProperties(e.layer,e.layout),i.type===C.StyleLayerType.SYMBOL&&this._vectorTileContainer.restartDeclutter(),void this._vectorTileContainer.requestRender();this._styleChanges.push({type:d.StyleUpdateType.LAYOUT_CHANGED,data:e}),this.notifyChange("updating"),this.requestUpdate()}})),this.layer.on("style-layer-visibility-change",(e=>{const t=this._styleRepository,i=t.getLayerById(e.layer);i&&(t.setStyleLayerVisibility(e.layer,e.visibility),i.type===C.StyleLayerType.SYMBOL&&this._vectorTileContainer.restartDeclutter(),this._vectorTileContainer.requestRender())})),this.layer.on("style-layer-change",(e=>{this._styleChanges.push({type:d.StyleUpdateType.LAYER_CHANGED,data:e}),this.notifyChange("updating"),this.requestUpdate()})),this.layer.on("delete-style-layer",(e=>{this._styleChanges.push({type:d.StyleUpdateType.LAYER_REMOVED,data:e}),this.notifyChange("updating"),this.requestUpdate()})),this.layer.on("load-style",(()=>this._loadStyle())),this.layer.on("spriteSource-change",(e=>{this._newSpriteSource=e.spriteSource,this._styleChanges.push({type:d.StyleUpdateType.SPRITES_CHANGED,data:null});const t=this._styleRepository.layers;for(const i of t)switch(i.type){case C.StyleLayerType.SYMBOL:i.getLayoutProperty("icon-image")&&this._styleChanges.push({type:d.StyleUpdateType.LAYOUT_CHANGED,data:{layer:i.id,layout:i.layout}});break;case C.StyleLayerType.LINE:i.getPaintProperty("line-pattern")&&this._styleChanges.push({type:d.StyleUpdateType.PAINTER_CHANGED,data:{layer:i.id,paint:i.paint,isDataDriven:i.isPainterDataDriven()}});break;case C.StyleLayerType.FILL:i.getLayoutProperty("fill-pattern")&&this._styleChanges.push({type:d.StyleUpdateType.PAINTER_CHANGED,data:{layer:i.id,paint:i.paint,isDataDriven:i.isPainterDataDriven()}})}this.notifyChange("updating"),this.requestUpdate()}))])},h.detach=function(){this._stop(),this.container.removeAllChildren(),this._vectorTileContainer=a.destroyMaybe(this._vectorTileContainer),this._tileHandler=a.destroyMaybe(this._tileHandler)},h.moveStart=function(){this.requestUpdate()},h.viewChange=function(){this.requestUpdate()},h.moveEnd=function(){this._collisionOverlay&&this._vectorTileContainer.restartDeclutter(),this.requestUpdate()},h.supportsSpatialReference=function(e){return p.equals(this.layer.tileInfo?.spatialReference,e)},h.canResume=function(){let e=t.prototype.canResume.call(this);const{currentStyleInfo:i}=this.layer;if(e&&i?.layerDefinition){const t=this.view.scale,{minScale:s,maxScale:r}=i.layerDefinition;i&&i.layerDefinition&&(s&&s<t&&(e=!1),r&&r>t&&(e=!1))}return e},h.isUpdating=function(){const e=this._vectorTileContainer.children;return!this._isTileHandlerReady||!this._fetchQueue||!this._parseQueue||this._fetchQueue.updating||this._parseQueue.updating||e.length>0&&e.some((e=>e.invalidating))||this.fading},h.acquireTile=function(e){const t=this._createVectorTile(e);return this._tileHandlerPromise?.then((()=>{this._fetchQueue.push(t.key).then((e=>this._parseQueue.push({key:t.key,data:e}))).then((e=>{t.once("attach",(()=>this.requestUpdate())),t.setData(e),this.requestUpdate(),this.notifyChange("updating")})).catch((e=>{this.notifyChange("updating"),n.isAbortError(e)||r.getLogger(this.declaredClass).error(e)}))})),t},h.releaseTile=function(e){const t=e.key.id;this._fetchQueue.abort(t),this._parseQueue.abort(t),this.requestUpdate()},h._start=function(){if(this._stop(),this._tileManager=new f.TileManager({acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView},this._vectorTileContainer),!this.layer.currentStyleInfo)return;const e=new AbortController,t=this._tileHandler.start({signal:e.signal}).then((()=>{this._fetchQueue=new D({tileInfoView:this._tileInfoView,process:(e,t)=>this._getTileData(e,t),concurrency:15}),this._parseQueue=new D({tileInfoView:this._tileInfoView,process:(e,t)=>this._parseTileData(e,t),concurrency:8}),this.requestUpdate(),this._isTileHandlerReady=!0}));this._tileHandler.spriteMosaic.then((e=>{this._vectorTileContainer.setStyleResources(e,this._tileHandler.glyphMosaic,this._styleRepository),this.requestUpdate()})),this._tileHandlerAbortController=e,this._tileHandlerPromise=t},h._stop=function(){if(!this._tileHandlerAbortController||!this._vectorTileContainer)return;const e=this._tileHandlerAbortController;e&&e.abort(),this._tileHandlerPromise=null,this._isTileHandlerReady=!1,this._fetchQueue=a.destroyMaybe(this._fetchQueue),this._parseQueue=a.destroyMaybe(this._parseQueue),this._tileManager=a.destroyMaybe(this._tileManager),this._vectorTileContainer.removeAllChildren()},h._getTileData=function(){var t=e._asyncToGenerator((function*(e,t){const i=yield this._tileHandler.fetchTileData(e,t);return this.notifyChange("updating"),i}));function i(e,i){return t.apply(this,arguments)}return i}(),h._parseTileData=function(){var t=e._asyncToGenerator((function*(e,t){return this._tileHandler.parseTileData(e,t)}));function i(e,i){return t.apply(this,arguments)}return i}(),h._applyStyleChanges=function(){var t=e._asyncToGenerator((function*(){this._isTileHandlerReady=!1,this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.clear(),this._parseQueue.clear(),this._tileManager.clearCache();const e=this._styleChanges;try{yield this._tileHandler.updateStyle(e)}catch(l){r.getLogger(this.declaredClass).error("error applying vector-tiles style update",l.message),this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0}const t=this._styleRepository,i=[];e.forEach((e=>{if(e.type!==d.StyleUpdateType.LAYER_REMOVED)return;const s=e.data,r=t.getLayerById(s.layer);r&&i.push(r.uid)}));const s=[];let a;e.forEach((e=>{const i=e.type,r=e.data;switch(i){case d.StyleUpdateType.PAINTER_CHANGED:t.setPaintProperties(r.layer,r.paint),a=r.layer;break;case d.StyleUpdateType.LAYOUT_CHANGED:t.setLayoutProperties(r.layer,r.layout),a=r.layer;break;case d.StyleUpdateType.LAYER_REMOVED:return void t.deleteStyleLayer(r.layer);case d.StyleUpdateType.LAYER_CHANGED:t.setStyleLayer(r.layer,r.index),a=r.layer.id;break;case d.StyleUpdateType.SPRITES_CHANGED:this._vectorTileContainer.setSpriteMosaic(this._tileHandler.setSpriteSource(this._newSpriteSource)),this._newSpriteSource=null,a=null}const n=t.getLayerById(a);n&&s.push(n.uid)}));const n=this._vectorTileContainer.children;if(i.length>0){this._vectorTileContainer.deleteStyleLayers(i);for(const e of n)e.deleteLayerData(i)}if(this._fetchQueue.resume(),this._parseQueue.resume(),s.length>0){const e=[];for(const t of n){const i=this._fetchQueue.push(t.key).then((e=>this._parseQueue.push({key:t.key,data:e,styleLayerUIDs:s}))).then((e=>t.setData(e)));e.push(i)}yield Promise.all(e)}this._styleChanges=[],this._isTileHandlerReady=!0,this.notifyChange("updating"),this.requestUpdate()}));function i(){return t.apply(this,arguments)}return i}(),h._loadStyle=function(){var t=e._asyncToGenerator((function*(){const{style:e}=this.layer.currentStyleInfo,t=s.clone(e);this._isTileHandlerReady=!1,this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.clear(),this._parseQueue.clear(),this.notifyChange("updating"),this._styleRepository=new v(t),this._vectorTileContainer.destroy(),this._tileManager.clear(),this._tileHandlerAbortController.abort(),this._tileHandlerAbortController=new AbortController;const{signal:i}=this._tileHandlerAbortController;try{this._tileHandlerPromise=this._tileHandler.setStyle(this._styleRepository,t),yield this._tileHandlerPromise}catch(a){if(!n.isAbortError(a))throw a}if(i.aborted)return this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0,this.notifyChange("updating"),void this.requestUpdate();const r=yield this._tileHandler.spriteMosaic;this._vectorTileContainer.setStyleResources(r,this._tileHandler.glyphMosaic,this._styleRepository),this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0,this.notifyChange("updating"),this.requestUpdate()}));function i(){return t.apply(this,arguments)}return i}(),h._createVectorTile=function(e){const t=this._tileInfoView.getTileBounds(c.create(),e),i=this._tileInfoView.getTileResolution(e.level);return new g.VectorTile(e,i,t[0],t[3],512,512,this._styleRepository)},o}(S.LayerView2DMixin(m));function L(e){if(a.isNone(e))return 0;switch(e.type){case"partial":return Object.keys(e.diff).length;case"complete":return Math.max(Object.keys(e.oldValue).length,Object.keys(e.newValue).length);case"collection":return Object.keys(e.added).length+Object.keys(e.changed).length+Object.keys(e.removed).length}}t.__decorate([o.property()],w.prototype,"_fetchQueue",void 0),t.__decorate([o.property()],w.prototype,"_parseQueue",void 0),t.__decorate([o.property()],w.prototype,"_isTileHandlerReady",void 0),t.__decorate([o.property()],w.prototype,"fading",void 0),w=t.__decorate([y.subclass("esri.views.2d.layers.VectorTileLayerView2D")],w);return w}));
