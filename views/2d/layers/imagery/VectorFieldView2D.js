/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../Graphic","../../../../request","../../../../core/HandleOwner","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Extent","../../../../layers/support/rasterFunctions/rasterProjectionHelper","../../../../layers/support/rasterFunctions/vectorFieldUtils","../../engine/imagery/RasterVFContainer","./ImageryVFStrategy"],(function(e,t,r,a,i,n,o,s,l,c,p,y,u,d,h,m){"use strict";let x=function(t){function i(){var r;return(r=t.apply(this,arguments)||this).attached=!1,r.container=new h.RasterVFContainer,r.type="imageryVF",r._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},r._fetchpixels=function(){var t=e._asyncToGenerator((function*(e,t,a,i){const o=yield r._projectFullExtentPromise,{symbolTileSize:s}=r.layer.renderer,{extent:l,width:c,height:p}=d.snapImageToSymbolTile(e,t,a,s,o);if(n.isSome(o)&&!o.intersects(e))return{extent:l,pixelBlock:null};const y={bbox:`${l.xmin}, ${l.ymin}, ${l.xmax}, ${l.ymax}`,exportParametersVersion:r.layer.exportImageServiceParameters.version,symbolTileSize:s,time:JSON.stringify(r.timeExtent||"")};if(r._canReuseVectorFieldData(y)){const e=r.getPixelData();if(n.isSome(e)){if(`${e.extent.xmin}, ${e.extent.ymin}, ${e.extent.xmax}, ${e.extent.ymax}`===y.bbox)return e}}const{pixelData:u}=yield r.layer.fetchImage(l,c,p,{timeExtent:r.timeExtent,requestAsImageElement:!1,signal:i});r._dataParameters=y;const h=u?.pixelBlock;if(n.isNone(h))return{extent:l,pixelBlock:null};return{extent:l,pixelBlock:"vector-uv"===r.layer.rasterInfo.dataType?n.unwrap(d.convertVectorFieldData(h,"vector-uv")):h}}));return function(e,r,a,i){return t.apply(this,arguments)}}(),r}e._inheritsLoose(i,t);var s=i.prototype;return s.attach=function(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new m({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(o.watch((()=>this.layer.renderer),(e=>this._updateSymbolizerParams(e)),o.syncAndInitial),"attach")},s.detach=function(){this._strategy.destroy(),this.container.children.forEach((e=>e.destroy())),this.container.removeAllChildren(),this.handles.remove("attach"),this._strategy=this.container=this._projectFullExtentPromise=null},s.getPixelData=function(){const e=this.container.children[0]?.rawPixelData;if(this.updating||!e)return null;const{extent:t,pixelBlock:r}=e;return{extent:t,pixelBlock:r}},s.hitTest=function(e){return new r({attributes:{},geometry:e.clone(),layer:this.layer})},s.update=function(e){this._strategy.update(e,this._symbolizerParams)},s.redraw=function(){const{renderer:e}=this.layer;e&&(this._updateSymbolizerParams(e),this._strategy.redraw(this._symbolizerParams))},s._canReuseVectorFieldData=function(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,r=this._dataParameters.time===e.time,a=this._dataParameters.symbolTileSize===e.symbolTileSize,i=this._dataParameters.bbox===e.bbox;return t&&r&&a&&i},s._getProjectedFullExtent=function(){var t=e._asyncToGenerator((function*(e){try{return yield u.projectExtent(this.layer.fullExtent,e)}catch(t){try{const t=(yield a(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?y.fromJSON(t):null}catch{return null}}}));function r(e){return t.apply(this,arguments)}return r}(),s._updateSymbolizerParams=function(e){"vector-field"===e.type&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))},e._createClass(i,[{key:"updating",get:function(){return!this.attached||this._strategy.updating}}]),i}(i.HandleOwner);t.__decorate([s.property()],x.prototype,"attached",void 0),t.__decorate([s.property()],x.prototype,"container",void 0),t.__decorate([s.property()],x.prototype,"layer",void 0),t.__decorate([s.property()],x.prototype,"timeExtent",void 0),t.__decorate([s.property()],x.prototype,"type",void 0),t.__decorate([s.property()],x.prototype,"view",void 0),t.__decorate([s.property()],x.prototype,"updating",null),x=t.__decorate([p.subclass("esri.views.2d.layers.imagery.VectorFieldView2D")],x);return x}));
