/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../kernel","../../../request","../../../core/Collection","../../../core/Handles","../../../core/maybe","../../../core/urlUtils","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../../../geometry/projection","../../../geometry/SpatialReference","../../../geometry/support/webMercatorUtils","../../../layers/support/kmlUtils","../../../rest/utils","../../../support/GraphicsCollection","../engine/Bitmap","../engine/BitmapContainer","./LayerView2D","./graphics/GraphicContainer","./graphics/GraphicsView2D","../../layers/LayerView"],(function(e,i,t,s,a,n,o,l,r,h,p,c,u,y,d,m,_,g,w,f,V,b,v,S,I,P){"use strict";let C=function(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]},k=function(i){function r(){var e;return(e=i.apply(this,arguments)||this)._handles=new n,e._bitmapIndex=new Map,e._mapImageContainer=new b.BitmapContainer,e._kmlVisualData=new C,e.allVisiblePoints=new f.GraphicsCollection,e.allVisiblePolylines=new f.GraphicsCollection,e.allVisiblePolygons=new f.GraphicsCollection,e.allVisibleMapImages=new a,e}e._inheritsLoose(r,i);var h=r.prototype;return h.hitTest=function(){var i=e._asyncToGenerator((function*(e,i){var t,s,a;return(yield Promise.all([null==(t=this._pointsView)?void 0:t.hitTest(e),null==(s=this._polylinesView)?void 0:s.hitTest(e),null==(a=this._polygonsView)?void 0:a.hitTest(e)])).flat().filter((e=>!!e&&(e.layer=this.layer,e.sourceLayer=this.layer,!0)))}));function t(e,t){return i.apply(this,arguments)}return t}(),h.update=function(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)},h.attach=function(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new I({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new I({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new I({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(e=>{for(const[i,t]of this._kmlVisualData.allSublayers)t.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1)}this._refreshCollections()})),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating")}))},h.detach=function(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)},h.moveStart=function(){},h.viewChange=function(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()},h.moveEnd=function(){},h.isUpdating=function(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating},h._addMapImage=function(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&s(e.href,{responseType:"image"}).then((({data:i})=>{let t=y.fromJSON(e.extent);_.canProject(t,this.view.spatialReference)&&(t=_.project(t,this.view.spatialReference));const s=new V.Bitmap(i,"standard");s.x=t.xmin,s.y=t.ymax,s.resolution=t.width/i.naturalWidth,s.rotation=e.rotation,this._mapImageContainer.addChild(s),this._bitmapIndex.set(e,s)}))},h._getViewDependentUrl=function(){var i=e._asyncToGenerator((function*(e,i){const{viewFormat:s,viewBoundScale:a,httpQuery:n}=e;if(o.isSome(s)){if(o.isNone(i))throw new Error("Loading this network link requires a view state.");let r;if(yield d.load(),o.isSome(a)&&1!==a){const e=new y(i.extent);e.expand(a),r=e}else r=i.extent;r=d.project(r,m.WGS84);const h=d.project(r,m.WebMercator),p=r.xmin,c=r.xmax,u=r.ymin,_=r.ymax,g=i.size[0]*i.pixelRatio,f=i.size[1]*i.pixelRatio,V=Math.max(h.width,h.height),b={"[bboxWest]":p.toString(),"[bboxEast]":c.toString(),"[bboxSouth]":u.toString(),"[bboxNorth]":_.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":V.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":V.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":g.toString(),"[vertPixels]":f.toString(),"[terrainEnabled]":"0","[clientVersion]":t.version,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},v=e=>{for(const i in e)for(const t in b)e[i]=e[i].replace(t,b[t])},S=l.queryToObject(s);v(S);let I={};o.isSome(n)&&(I=l.queryToObject(n),v(I));const P=w.parseUrl(e.href);P.query={...P.query,...S,...I};return`${P.path}?${l.objectToQuery(S)}`}return e.href}));function s(e,t){return i.apply(this,arguments)}return s}(),h._fetchService=function(){var i=e._asyncToGenerator((function*(){const e=new C;yield this._loadVisualData(this.layer.url,e),this._kmlVisualData=e,this._refreshCollections()}));function t(){return i.apply(this,arguments)}return t}(),h._refreshCollections=function(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)))},h._isSublayerVisible=function(e){const i=this._kmlVisualData.allSublayers.get(e);return!!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))},h._loadVisualData=function(i,t){var s=this;return this._fetchParsedKML(i).then(function(){var i=e._asyncToGenerator((function*(e){for(const i of e.sublayers){t.allSublayers.set(i.id,i);const e=i.points?yield g.getGraphics(i.points):[],a=i.polylines?yield g.getGraphics(i.polylines):[],n=i.polygons?yield g.getGraphics(i.polygons):[],o=i.mapImages||[];if(t.allPoints.push(...e.map((e=>({item:e,sublayerId:i.id})))),t.allPolylines.push(...a.map((e=>({item:e,sublayerId:i.id})))),t.allPolygons.push(...n.map((e=>({item:e,sublayerId:i.id})))),t.allMapImages.push(...o.map((e=>({item:e,sublayerId:i.id})))),i.networkLink){const e=yield s._getViewDependentUrl(i.networkLink,s.view.state);yield s._loadVisualData(e,t)}}}));return function(e){return i.apply(this,arguments)}}())},h._fetchParsedKML=function(e){return g.fetchService(e,this.view.spatialReference,this.layer.refreshInterval).then((e=>g.parseKML(e.data)))},h._removeMapImage=function(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e))},r}(v.LayerView2DMixin(P));i.__decorate([r.property()],k.prototype,"_pointsView",void 0),i.__decorate([r.property()],k.prototype,"_polylinesView",void 0),i.__decorate([r.property()],k.prototype,"_polygonsView",void 0),i.__decorate([r.property()],k.prototype,"_fetchingPromise",void 0),i.__decorate([r.property()],k.prototype,"updating",void 0),k=i.__decorate([u.subclass("esri.views.2d.layers.KMLLayerView2D")],k);return k}));
