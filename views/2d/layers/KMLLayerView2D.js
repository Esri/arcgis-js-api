/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/promiseUtils","../../../core/scheduling","../../../geometry/support/webMercatorUtils","../../../geometry/Extent","../../../core/Collection","../../../request","../../../core/Handles","../../../core/watchUtils","../../../support/GraphicsCollection","../../../layers/support/kmlUtils","../../layers/LayerView","./graphics/GraphicsView2D","../engine/Bitmap","../engine/BitmapContainer","./LayerView2D"],(function(e,i,t,s,n,o,l,a,r,h,p,c,d,u,y,_,g,w,m,V,f,v,b,C,M){"use strict";let I=function(i){function t(){var e;return(e=i.apply(this,arguments)||this)._handles=new g,e._bitmapIndex=new Map,e._mapImageContainer=new C.BitmapContainer,e._featuresMap=new Map,e.allVisiblePoints=new m.GraphicsCollection,e.allVisiblePolylines=new m.GraphicsCollection,e.allVisiblePolygons=new m.GraphicsCollection,e.allVisibleMapImages=new y,e}e._inheritsLoose(t,i);var s=t.prototype;return s.hitTest=function(e,i){if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return p.resolve(null);const t=[this._pointsView.hitTest(e,i),this._polylinesView.hitTest(e,i),this._polygonsView.hitTest(e,i)];return p.all(t).then((e=>e.filter((e=>(e&&(e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))},s.update=function(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)},s.attach=function(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new v({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate()}),this.container.addChild(this._polygonsView.container),this._polylinesView=new v({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate()}),this.container.addChild(this._polylinesView.container),this._pointsView=new v({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate()}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(()=>this._refreshCollections())),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating")}))},s.detach=function(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)},s.moveStart=function(){},s.viewChange=function(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()},s.moveEnd=function(){},s.isUpdating=function(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating},s._addMapImage=function(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&_(e.href,{responseType:"image"}).then((({data:i})=>{let t=u.fromJSON(e.extent);d.canProject(t,this.view.spatialReference)&&(t=d.project(t,this.view.spatialReference));const s=new b.Bitmap(i);s.x=t.xmin,s.y=t.ymax,s.resolution=t.width/i.naturalWidth,s.rotation=e.rotation,this._mapImageContainer.addChild(s),this._bitmapIndex.set(e,s)}))},s._fetchService=function(){return this._handles.remove("refresh-collections"),this._getParsedKML().then((e=>this._fetchSublayerService(this.layer,e)))},s._fetchSublayerService=function(e,i){const t=e.sublayers;if(!t||0===t.length)return p.resolve();const s=[];return t.forEach((e=>{const t=w.whenTrueOnce(e,"visible").then((()=>e.load())).then((()=>this._getGraphicsForSublayer(e,i))).then((i=>p.create((t=>{e.networkLink?t():(this._featuresMap.set(e,i),this._handles.add(c.schedule((()=>{this._refreshCollections(),t()})),"refresh-collections"))})))).then((()=>this._fetchSublayerService(e,e.sourceJSON||i)));e.visible&&s.push(t)})),p.all(s).then((()=>{}))},s._getParsedKML=function(){return V.fetchService(this.layer.url,this.view.spatialReference,this.layer.refreshInterval).then((e=>V.parseKML(e.data)))},s._getGraphicsForSublayer=async function(e,i){let t=null;return i.sublayers.some((i=>(t=i,i.id===e.id)))?{points:t.points&&await V.getGraphics(t.points),polylines:t.polylines&&await V.getGraphics(t.polylines),polygons:t.polygons&&await V.getGraphics(t.polygons),mapImages:t.mapImages}:null},s._refreshCollections=function(){const e=this.get("layer.visibleSublayers");this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),e&&e.length&&e.forEach((e=>{const i=this._featuresMap.get(e);i&&(this.allVisiblePoints.addMany(i.points),this.allVisiblePolylines.addMany(i.polylines),this.allVisiblePolygons.addMany(i.polygons),this.allVisibleMapImages.addMany(i.mapImages))}))},s._removeMapImage=function(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e))},t}(M.LayerView2DMixin(f));return i.__decorate([o.property()],I.prototype,"_pointsView",void 0),i.__decorate([o.property()],I.prototype,"_polylinesView",void 0),i.__decorate([o.property()],I.prototype,"_polygonsView",void 0),i.__decorate([o.property()],I.prototype,"_fetchingPromise",void 0),i.__decorate([o.property({dependsOn:["_fetchingPromise","_pointsView.updating","_polygonsView.updating","_polylinesView.updating"]})],I.prototype,"updating",void 0),I=i.__decorate([l.subclass("esri.views.2d.layers.KMLLayerView2D")],I),I}));
