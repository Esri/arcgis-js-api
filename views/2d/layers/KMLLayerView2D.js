/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../kernel","../../../core/Collection","../../../core/maybe","../../../core/reactiveUtils","../../../core/urlUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../../../geometry/projection","../../../geometry/SpatialReference","../../../layers/support/kmlUtils","../../../rest/utils","../../../support/GraphicsCollection","../engine/Bitmap","../engine/BitmapContainer","./LayerView2D","./graphics/GraphicContainer","./graphics/GraphicsView2D","../../layers/LayerView","../../support/imageReprojection"],(function(e,i,t,a,s,o,n,r,l,h,p,c,y,u,d,m,g,_,w,b,f,V,v,S){"use strict";let C=function(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]},I=function(i){function r(){var e;return(e=i.apply(this,arguments)||this)._bitmapIndex=new Map,e._mapImageContainer=new w.BitmapContainer,e._kmlVisualData=new C,e._fetchController=null,e.allVisiblePoints=new g.GraphicsCollection,e.allVisiblePolylines=new g.GraphicsCollection,e.allVisiblePolygons=new g.GraphicsCollection,e.allVisibleMapImages=new a,e}e._inheritsLoose(r,i);var l=r.prototype;return l.hitTest=function(){var i=e._asyncToGenerator((function*(e,i){const t=this.layer;return[this._pointsView?.hitTest(e),this._polylinesView?.hitTest(e),this._polygonsView?.hitTest(e)].flat().filter(Boolean).map((i=>(i.layer=t,i.sourceLayer=t,{type:"graphic",graphic:i,layer:t,mapPoint:e})))}));function t(e,t){return i.apply(this,arguments)}return t}(),l.update=function(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)},l.attach=function(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new V({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new f(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new V({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new f(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new V({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new f(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))})),o.watch((()=>this.layer.visibleSublayers),(e=>{for(const[i,t]of this._kmlVisualData.allSublayers)t.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1)}this._refreshCollections()}))]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new S.ImageReprojector},l.detach=function(){this._fetchController=s.abortMaybe(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=s.destroyMaybe(this._polygonsView),this._polylinesView=s.destroyMaybe(this._polylinesView),this._pointsView=s.destroyMaybe(this._pointsView),this._imageReprojector=s.destroyMaybe(this._imageReprojector)},l.moveStart=function(){},l.viewChange=function(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()},l.moveEnd=function(){},l.isUpdating=function(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating},l._addMapImage=function(e){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,c.fromJSON(e.extent),this.view.spatialReference).then((i=>{const t=new _.Bitmap(i.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});t.x=i.extent.xmin,t.y=i.extent.ymax,t.resolution=i.extent.width/i.bitmapData.width,t.rotation=e.rotation,this._mapImageContainer.addChild(t),this._bitmapIndex.set(e,t)}))},l._getViewDependentUrl=function(){var i=e._asyncToGenerator((function*(e,i){const{viewFormat:a,viewBoundScale:o,httpQuery:r}=e;if(s.isSome(a)){if(s.isNone(i))throw new Error("Loading this network link requires a view state.");let l;if(yield y.load(),s.isSome(o)&&1!==o){const e=new c(i.extent);e.expand(o),l=e}else l=i.extent;l=y.project(l,u.WGS84);const h=y.project(l,u.WebMercator),p=l.xmin,d=l.xmax,g=l.ymin,_=l.ymax,w=i.size[0]*i.pixelRatio,b=i.size[1]*i.pixelRatio,f=Math.max(h.width,h.height),V={"[bboxWest]":p.toString(),"[bboxEast]":d.toString(),"[bboxSouth]":g.toString(),"[bboxNorth]":_.toString(),"[lookatLon]":l.center.x.toString(),"[lookatLat]":l.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":l.center.x.toString(),"[lookatTerrainLat]":l.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":l.center.x.toString(),"[cameraLat]":l.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":w.toString(),"[vertPixels]":b.toString(),"[terrainEnabled]":"0","[clientVersion]":t.version,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},v=e=>{for(const i in e)for(const t in V)e[i]=e[i].replace(t,V[t])},S=n.queryToObject(a);v(S);let C={};s.isSome(r)&&(C=n.queryToObject(r),v(C));const I=m.parseUrl(e.href);I.query={...I.query,...S,...C};return`${I.path}?${n.objectToQuery(S)}`}return e.href}));function a(e,t){return i.apply(this,arguments)}return a}(),l._fetchService=function(){var i=e._asyncToGenerator((function*(e){const i=new C;yield this._loadVisualData(this.layer.url,i,e),this._kmlVisualData=i,this._refreshCollections()}));function t(e){return i.apply(this,arguments)}return t}(),l._refreshCollections=function(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)))},l._isSublayerVisible=function(e){const i=this._kmlVisualData.allSublayers.get(e);return!!i?.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))},l._loadVisualData=function(i,t,a){var s=this;return this._fetchParsedKML(i,a).then(function(){var i=e._asyncToGenerator((function*(e){for(const i of e.sublayers){t.allSublayers.set(i.id,i);const e=i.points?yield d.getGraphics(i.points):[],o=i.polylines?yield d.getGraphics(i.polylines):[],n=i.polygons?yield d.getGraphics(i.polygons):[],r=i.mapImages||[];if(t.allPoints.push(...e.map((e=>({item:e,sublayerId:i.id})))),t.allPolylines.push(...o.map((e=>({item:e,sublayerId:i.id})))),t.allPolygons.push(...n.map((e=>({item:e,sublayerId:i.id})))),t.allMapImages.push(...r.map((e=>({item:e,sublayerId:i.id})))),i.networkLink){const e=yield s._getViewDependentUrl(i.networkLink,s.view.state);yield s._loadVisualData(e,t,a)}}}));return function(e){return i.apply(this,arguments)}}())},l._fetchParsedKML=function(e,i){return d.fetchService(e,this.layer.spatialReference,this.layer.refreshInterval,i).then((e=>d.parseKML(e.data)))},l._removeMapImage=function(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e))},r}(b.LayerView2DMixin(v));i.__decorate([r.property()],I.prototype,"_pointsView",void 0),i.__decorate([r.property()],I.prototype,"_polylinesView",void 0),i.__decorate([r.property()],I.prototype,"_polygonsView",void 0),i.__decorate([r.property()],I.prototype,"updating",void 0),I=i.__decorate([p.subclass("esri.views.2d.layers.KMLLayerView2D")],I);return I}));
