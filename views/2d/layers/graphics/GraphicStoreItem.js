/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/centroid","../../../../geometry/support/jsonUtils","../../../../geometry/support/quantizationUtils","../../../../geometry/support/spatialReferenceUtils","../../../../layers/graphics/featureConversionUtils","../../../../layers/graphics/OptimizedGeometry"],(function(e,t,n,i,s,o,r,l,u){"use strict";const a=new u,c=new u,h="esriGeometryPolyline";function y(e){e.coords.length=0,e.lengths.length=0}let g=function(){function u(){this.bounds=n.create(),this.graphic=null}u.acquire=function(e=null,t,n,i,s){let o;return 0===u._pool.length?o=new u:(o=u._pool.pop(),this._set.delete(o)),o.acquire(e,t,n,i,s),o},u.release=function(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))},u.getCentroidQuantized=function(e,n){if(s.isPolygon(e.geometry)){const s=e.symbol;if(t.isNone(s))return null;if(s?.layers.length>0&&s.layers.some((e=>"text"===e.type||"marker"===e.type))){const t=i.polygonCentroid(e.geometry);return null!==t?o.quantizePoint(n,{},{x:t[0],y:t[1]},!1,!1):null}}return null};var g=u.prototype;return g.acquire=function(e=null,t,n,i,s){e&&this.set(e,t,n,i,s)},g.release=function(){this.graphic=null,this.symbolResource=null,this.geometry=null},g.set=function(e,t,n,i,s){this.graphic=e,this.geometry=n,this.symbolResource=t,this.bounds=i,s&&(this.size=s)},g.getGeometryQuantized=function(e,i,u,g){const m=this.geometry,p=s.getJsonType(m);if(t.isNone(p))return null;switch(p){case"esriGeometryPolygon":{const t=m,{rings:n}=t;if(!n||0===n.length)return null;let i;if(i=1===n.length&&2===n[0].length?o.quantizeGeometry(e,{paths:[[n[0][0],n[0][1]]]}):o.quantizeGeometry(e,this.geometry),!i){const t={x:n[0][0][0],y:n[0][0][1]};if(i=o.quantizeGeometry(e,t),i){const{x:e,y:t}=i;return{rings:[[[e-1,t],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return i}case"esriGeometryPolyline":{const t=m;y(a),y(c);const n=t.hasZ??!1,i=t.hasM??!1;return l.convertFromPolyline(a,t),l.generalizeOptimizedGeometry(c,a,n,i,h,e.scale[0]),l.quantizeOptimizedGeometry(a,c,n,i,h,e),l.convertToPolyline(a,t.hasZ??!1,t.hasM??!1)}case"esriGeometryMultipoint":{const t=m,s=.5*g*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),l=r.getInfo(u);let a=t.points;if(l){const[e,t]=l.valid,o=t-e;a=a.filter((r=>{if(r[0]+s>t||r[0]-s<e){const e=[...r];return r[0]+s>t?e[0]-=o:e[0]+=o,n.containsPointWithMargin(i,r,s)||n.containsPointWithMargin(i,e,s)}return n.containsPointWithMargin(i,r,s)}))}return 0===a.length?{points:a}:o.quantizeGeometry(e,{points:a})}}return o.quantizeGeometry(e,this.geometry)},e._createClass(u,[{key:"symbol",get:function(){return this.symbolResource.symbol}}]),u}();return g._pool=[],g._set=new Set,g}));
