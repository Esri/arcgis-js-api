/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/has","../../../../core/maybe","../../../../core/Logger","../../../../core/accessorSupport/ensureType","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/decorators/subclass","../../../../core/urlUtils","../../../../core/uuid","../../../../portal/support/resourceExtension","../../../../core/promiseUtils","../../../../core/Accessor","../../../../geometry/support/spatialReferenceUtils","../../../../geometry/SpatialReference","../../../../geometry/support/coordsUtils","../../../../geometry/Polygon","../../../../geometry/support/jsonUtils","../../../../core/screenUtils","../../../../geometry/support/aaBoundingRect","../../../../symbols/support/defaults","../../../../core/HandleOwner","../../../../layers/graphics/data/projectionSupport","../../engine/webgl/definitions","../../../webgl/capabilities","../../engine/webgl/util/BidiText","../../../../symbols/cim/cimSymbolUtils","../../engine/webgl/TileData","../../engine/webgl/WGLTile","../features/schemaUtils","../../engine/webgl/mesh/factories/matcherUtils","../../engine/webgl/mesh/templates/WGLTemplateStore","../../engine/webgl/mesh/factories/WGLMeshFactory","../features/support/AttributeStore","../features/support/ComputedAttributeStorage","../features/support/GraphicsReader","../features/support/TileStore","./GraphicContainer","./graphicsUtils","./GraphicStore","../../../layers/GraphicsView"],(function(e,t,i,s,r,a,o,n,h,d,c,p,l,u,g,_,f,y,m,S,b,w,T,v,G,I,U,C,A,R,P,M,x,F,z,D,H,q,O,k,L){"use strict";function j(e,t,i){if(i.has(e))return i.get(e);const s={tile:t,addedOrModified:[],removed:[]};return i.set(e,s),s}let N=function(t){function i(i){var s;return(s=t.call(this,i)||this)._storage=new z.ComputedAttributeStorage,s._displayIds=new Map,s._tiles=new Map,s._graphicStoreUpdate=!1,s._graphicsSet=new Set,s._matcher=p.resolve(null),s._tileUpdateSet=new Set,s._tilesToUpdate=new Map,s._graphicIdToAbortController=new Map,s._attached=!1,s._highlightIds=new Map,s._updatingGraphicsTimer=null,s._processing=!1,s._needsProcessing=!1,s._pendingUpdate={added:new Set,updated:new Set,removed:new Set},s.lastUpdateId=-1,s.updateRequested=!1,s.graphicUpdateHandler=s.graphicUpdateHandler.bind(e._assertThisInitialized(s)),s._processAnalyzedGraphics=s._processAnalyzedGraphics.bind(e._assertThisInitialized(s)),s._graphicsChangeHandler=s._graphicsChangeHandler.bind(e._assertThisInitialized(s)),s}e._inheritsLoose(i,t);var r=i.prototype;return r._createMatcher=function(e,t){if(e){const i=R.createMatcherSchema({indexCount:0,fields:{}},"feature",e);this._matcher=P.createMatcher(i,t,null)}},r._createDisplayId=function(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)},r.initialize=function(){this._tileStore=new H(this.view.featuresTilingScheme),this.container=new q(this.view.featuresTilingScheme),this._attributeStore=new F.default({type:"local",initialize:e=>p.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},G());this._graphicStore=new k(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}));const e=new M.WGLTemplateStore(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,e),this._meshFactory=new x.WGLMeshFactory(null,this.uid,e),this._templateStore=e,this.watch("renderer",(t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",this._graphicsChangeHandler),"graphics"),this._attached=!0,this.notifyChange("updating")}))},r.destroy=function(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null},r.hitTest=function(e,t){if(!this.view||!this.view.position)return p.resolve();const i=this.view.toMap(m.createScreenPoint(e,t));return this.searchFeatures(i).then((e=>e&&e.length?e[0]:null))},r.searchFeatures=async function(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)},r.update=function(e){const t=e.state,i=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(i),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}},r.viewChange=function(){this.requestUpdate()},r.requestUpdate=function(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())},r.processUpdate=function(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))},r.graphicUpdateHandler=function(e){const{graphic:t,property:i,newValue:s}=e,r=t;switch(i){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(r),this.requestUpdate();break;case"visible":this._setFilterState(r.uid,s),this._attributeStore.sendUpdates()}},r.addHighlight=function(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()},r.removeHighlight=function(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()},r._updateHighlight=function(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)},r._getIntersectingTiles=function(e){const t=this._graphicStore.getBounds(e);return!t||0===S.width(t)||0===S.height(t)?[]:this._tileStore.boundsIntersections(t)},r._updateTile=function(e){const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified);return this._processGraphics(i).then((i=>(this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0}),i)))},r._patchTile=function(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()},r._graphicsChangeHandler=function(e){for(const t of e.added)this._pendingUpdate.added.add(t);for(const t of e.moved)this._pendingUpdate.added.add(t);for(const t of e.removed)this._pendingUpdate.added.has(t)?this._pendingUpdate.added.delete(t):this._pendingUpdate.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()},r._getGraphicsToUpdate=function(){const e={added:[],removed:[],updated:[]},t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e},r._updateGraphics=async function(){this._processing=!0;const{added:e,removed:t,updated:i}=this._getGraphicsToUpdate(),s=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t),this._tileStore.setViewState(e)}const a=[],o=new Array(e.length+t.length);for(let e=0;e<i.length;e++){const t=i[e],n=this._getIntersectingTiles(t);for(const e of n){r=e.id;j(r,e,s).removed.push(this._displayIds.get(t.uid))}a.push(this._updateGraphic(t,null)),o[e]=t}const n=i.length;for(let t=0;t<e.length;t++){const i=e[t];o[n+t]=i,this._graphicsSet.add(i),a.push(this.addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const i of t){r=i.id;j(r,i,s).removed.push(this._displayIds.get(e.uid))}this._graphicsSet.delete(e),this._graphicStore.remove(e)}let h;this._flipUpdatingGraphics(),await p.all(a);for(let e=0;e<o.length;e++){h=o[e];const t=this._getIntersectingTiles(h);for(const e of t){r=e.id;j(r,e,s).addedOrModified.push(h)}}this._graphicStore.updateZ();const d=[];for(const[e,t]of s)d.push(this._updateTile(t));await p.all(d)}catch(e){}s.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())},r._getArcadeInfo=function(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return s.isNone(e.geometry)?null:{geometryType:y.getJsonType(e.geometry),spatialReference:g.fromJSON(e.geometry.spatialReference),fields:t}},r._getSymbolForGraphic=async function(e,t){return s.isSome(e.symbol)?e.symbol:s.isSome(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)},r._getSymbolResources=async function(e,t){if(!this.container.stage)return p.resolve(null);const i=this._getArcadeInfo(e),s=await this._getSymbolForGraphic(e,t),r=R.createSymbolSchema(s),a=await U.expandSymbol(r,i,t);if("esriTS"===a.type){const e=[],[t]=I.bidiText(a.text);for(let i=0;i<t.length;i++)e.push(t.charCodeAt(i));const i={symbol:a,id:0,glyphIds:e},[{mosaicItem:s}]=await this.container.getMaterialItems([i]);return{symbol:a,mosaicItem:s}}return{symbol:a,mosaicItem:null}},r._projectAndNormalizeGeometry=async function(e){if(s.isNone(e.geometry))return p.resolve(null);let t=e.geometry;if(y.isPolygon(t)){const e=t.rings;t.rings=e}else if(y.isPolyline(t)){const e=t.paths;t.paths=e}else y.isExtent(t)&&(t=f.fromExtent(t));return T.checkProjectionSupport(t.spatialReference,this.view.spatialReference).then((()=>{const e=O.normalizeCentralMeridian(t),i=T.project(e,t.spatialReference,this.view.spatialReference);return _.closeRingsAndFixWinding(i),i}))},r._onTileUpdate=function(e){const t=u.getInfo(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)},r.addGraphic=function(e){this._abortProcessingGraphic(e.uid);const t=p.createAbortController();this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};return this._addOrUpdateGraphic(e,i).then((()=>{this._graphicIdToAbortController.delete(e.uid)})).catch((t=>{if(this._graphicIdToAbortController.delete(e.uid),!p.isAbortError(t))throw t}))},r._updateGraphic=async function(e,t){const i=this._projectAndNormalizeGeometry(e),s=this._getSymbolResources(e,t),[r,a]=await p.all([i,s]);this._graphicStore.addOrModify(e,a,r)},r._addOrUpdateGraphic=async function(e,t){const i=this._projectAndNormalizeGeometry(e),s=this._getSymbolResources(e,t);try{const[t,r]=await p.all([i,s]);this._addProjectedGraphic(e,r,t)}catch(e){if(!p.isAbortError(e))throw e}},r._addProjectedGraphic=function(e,t,i){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,i)},r._addTile=function(e){const t=S.create();this.view.featuresTilingScheme.getTileBounds(t,e);const i=new A.WGLTile(e,t,!0);return this._tiles.set(e,i),this.container.addChild(i),i},r._addNewTile=function(e,t){const i=this._addTile(e.key),s=this._graphicStore.queryTileData(this._templateStore,e);if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of s)e.geometry&&y.isPoint(e.geometry)&&this._wrapPoints(e,i)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(s).then((e=>{const t={type:"update",clear:!0,addOrUpdate:e,remove:[],end:!0};i.setData(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")})).catch((e=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!p.isAbortError(e))throw e}))},r._removeTile=function(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)},r._setFilterState=function(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?v.FILTER_FLAG_0:0))},r._getGraphicsData=function(e,t,i){const s=u.getInfo(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of r)t.geometry&&y.isPoint(t.geometry)&&this._wrapPoints(t,e)}return r},r._wrapPoints=function(e,t){const i=e.geometry;512===t?i.x<20?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>492&&(e.geometry={points:[[i.x,i.y],[-t,0]]}):i.x<-20?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>532&&(e.geometry={points:[[i.x,i.y],[-t,0]]})},r._processGraphics=async function(e,t){if(!(e&&e.length)||!this._meshFactory)return null;const i=D.GraphicsReader.from(e),s=this._meshFactory;return await s.analyzeGraphics(i,await this._matcher,null,null,t),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(i)},r._processAnalyzedGraphics=function(e){const t=this._meshFactory,i=t.createMeshData(e.getApproximateSize()),s=e.getCursor();for(;s.next();){const e=s.readGraphic();e.insertAfter=-1===e.insertAfter?-1:this._displayIds.get(e.insertAfter),e.displayId=this._displayIds.get(e.attributes[this.uid]),t.writeGraphic(i,s)}const r={};return i.encode(r,[]),C.TileData.decode(r)},r._abortProcessingGraphic=function(e){if(this._graphicIdToAbortController.has(e)){this._graphicIdToAbortController.get(e).abort()}},r._getNullSymbol=function(e){const t=e.geometry;return y.isPolyline(t)?b.errorPolylineSymbol2D:y.isPolygon(t)||y.isExtent(t)?b.errorPolygonSymbol2D:b.errorPointSymbol2D},r._flipUpdatingGraphics=function(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")},e._createClass(i,[{key:"updating",get:function(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}}]),i}(L.GraphicsView(w.HandleOwnerMixin(l)));return t.__decorate([o.property({constructOnly:!0})],N.prototype,"requestUpdateCallback",void 0),t.__decorate([o.property({constructOnly:!0})],N.prototype,"graphics",void 0),t.__decorate([o.property()],N.prototype,"updating",null),t.__decorate([o.property()],N.prototype,"view",void 0),t.__decorate([o.property()],N.prototype,"updateRequested",void 0),N=t.__decorate([n.subclass("esri.views.2d.layers.support.GraphicsView2D")],N),N}));
