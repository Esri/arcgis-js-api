/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/HandleOwner","../../../../core/has","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/Logger","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Polygon","../../../../geometry/SpatialReference","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/coordsUtils","../../../../geometry/support/jsonUtils","../../../../geometry/support/normalizeUtilsSync","../../../../geometry/support/spatialReferenceUtils","../../../../layers/graphics/data/projectionSupport","../../../../symbols/cim/cimSymbolUtils","../../../../symbols/support/defaults","../../engine/webgl/definitions","../../engine/webgl/GraphicTile","../../engine/webgl/TileData","../../engine/webgl/WGLDisplayObject","../../engine/webgl/mesh/MeshData","../../engine/webgl/mesh/factories/WGLMeshFactory","../../engine/webgl/mesh/templates/WGLTemplateStore","../../engine/webgl/util/BidiText","../../engine/webgl/util/Matcher","../features/schemaUtils","../features/support/AttributeStore","../features/support/ComputedAttributeStorage","../features/support/GraphicsReader","./GraphicStore","./graphicsUtils","../../../layers/GraphicsView","../../../webgl/capabilities"],(function(e,t,i,s,r,o,n,a,h,c,d,l,p,u,g,_,f,y,m,b,S,w,T,I,v,G,U,A,P,E,F,M,R,C,x,D,L,z,k){"use strict";function q(e,t,i){if(i.has(e))return i.get(e);const s={tile:t,addedOrModified:[],removed:[]};return i.set(e,s),s}let H=function(t){function i(i){var s;return(s=t.call(this,i)||this)._storage=new C.ComputedAttributeStorage,s._displayIds=new Map,s._controller=new AbortController,s._tiles=new Map,s._graphicStoreUpdate=!1,s._graphicsSet=new Set,s._matcher=Promise.resolve(null),s._tileUpdateSet=new Set,s._tilesToUpdate=new Map,s._graphicIdToAbortController=new Map,s._attached=!1,s._highlightIds=new Map,s._updatingGraphicsTimer=null,s._hashToExpandedSymbol=new Map,s._hashTpExpandedSymbolPromise=new Map,s._processing=!1,s._needsProcessing=!1,s._pendingUpdate={added:new Set,updated:new Set,removed:new Set},s.lastUpdateId=-1,s.updateRequested=!1,s.graphicUpdateHandler=s.graphicUpdateHandler.bind(e._assertThisInitialized(s)),s}e._inheritsLoose(i,t);var s=i.prototype;return s._createMatcher=function(e,t){if(e){const i=M.createMatcherSchema({indexCount:0,fields:{}},"feature",e);this._matcher=F.createMatcher(i,t,null)}},s._createDisplayId=function(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)},s.initialize=function(){this._attributeStore=new R.default({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},k()),this.container.hasHighlight=()=>!!this._highlightIds.size;const e=e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)},t=e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)};this._graphicStore=new D(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,e,t);const i=new P.WGLTemplateStore(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._createMatcher(this.renderer,i),this._meshFactory=new A.WGLMeshFactory(null,this.uid,i),this._templateStore=i,this.handles.add([this.watch("renderer",(e=>{this._createMatcher(e,i);for(const t of this.graphics)this._pendingUpdate.updated.add(t);this.requestUpdate()})),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics"),this._attached=!0,this.notifyChange("updating")}))]);const s=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:s,removed:[]})},s.destroy=function(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null},s.hitTest=function(e,t){if(!this.view||!this.view.position)return Promise.resolve(null);const i=this.view.toMap(a.createScreenPoint(e,t));return this.searchFeatures(i).then((e=>e&&e.length?e[0]:null))},s.searchFeatures=function(){var t=e._asyncToGenerator((function*(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)}));function i(e){return t.apply(this,arguments)}return i}(),s.update=function(e){n.throwIfAborted(this._controller.signal);const t=e.state,i=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(i),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}},s.viewChange=function(){this.requestUpdate()},s.requestUpdate=function(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())},s.processUpdate=function(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))},s.graphicUpdateHandler=function(e){const{graphic:t,property:i,newValue:s}=e;switch(i){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,s),this._attributeStore.sendUpdates()}},s.addHighlight=function(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()},s.removeHighlight=function(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()},s._updateHighlight=function(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)},s._getIntersectingTiles=function(e){const t=this._graphicStore.getBounds(e);if(!t||0===g.width(t)||0===g.height(t))return[];const i=L.intersectingInternationalDateline(t,this.view.spatialReference);return o.isSome(i)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(i[0]),...this.view.graphicsTileStore.boundsIntersections(i[1])])]:this.view.graphicsTileStore.boundsIntersections(t)},s._updateTile=function(){var t=e._asyncToGenerator((function*(e){n.throwIfAborted(this._controller.signal);const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified),s=yield this._processGraphics(t,i);return n.throwIfAborted(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:s,remove:e.removed,end:!0,clear:!1,sort:!1}),s}));function i(e){return t.apply(this,arguments)}return i}(),s._patchTile=function(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()},s._graphicsChangeHandler=function(e){const t=this._pendingUpdate;for(const i of e.added)t.added.add(i);for(const i of e.moved)t.updated.add(i);for(const i of e.removed)this._pendingUpdate.added.has(i)?t.added.delete(i):t.removed.add(i);this._processing?this._needsProcessing=!0:this._updateGraphics()},s._getGraphicsToUpdate=function(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e},s._updateGraphics=function(){var t=e._asyncToGenerator((function*(){this._processing=!0;const{added:e,removed:t,updated:i}=this._getGraphicsToUpdate(),s=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t)}const o=[],n=new Array(e.length+t.length);for(let e=0;e<i.length;e++){const t=i[e],a=this._getIntersectingTiles(t);for(const e of a){r=e.id;q(r,e,s).removed.push(this._displayIds.get(t.uid))}o.push(this._updateGraphic(t,null)),n[e]=t}const a=i.length;for(let t=0;t<e.length;t++){const i=e[t];n[a+t]=i,this._graphicsSet.add(i),o.push(this._addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const i of t){r=i.id;q(r,i,s).removed.push(this._displayIds.get(e.uid))}this._graphicsSet.delete(e),this._graphicStore.remove(e)}let h;this._flipUpdatingGraphics(),yield Promise.all(o);for(let e=0;e<n.length;e++){h=n[e];const t=this._getIntersectingTiles(h);for(const e of t){r=e.id;q(r,e,s).addedOrModified.push(h)}}this._graphicStore.updateZ();const c=[];for(const[e,t]of s)c.push(this._updateTile(t));yield Promise.all(c)}catch(o){n.isAbortError(o),0}for(const a of t)try{const e=yield this._getSymbolForGraphic(a,{});e&&this._hashToExpandedSymbol.delete(e.hash())}catch(o){n.isAbortError(o),0}s.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}));function i(){return t.apply(this,arguments)}return i}(),s._getArcadeInfo=function(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return o.isNone(e.geometry)?null:{geometryType:f.getJsonType(e.geometry),spatialReference:u.fromJSON(e.geometry.spatialReference),fields:t}},s._getSymbolForGraphic=function(){var t=e._asyncToGenerator((function*(e,t){return n.throwIfAborted(this._controller.signal),o.isSome(e.symbol)?e.symbol:o.isSome(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}));function i(e,i){return t.apply(this,arguments)}return i}(),s._getSymbolResources=function(){var t=e._asyncToGenerator((function*(e,t){if(n.throwIfAborted(this._controller.signal),!this.container.stage)return null;const i=yield this._getSymbolForGraphic(e,t),s=i.hash();let r=this._hashToExpandedSymbol.get(s);if(!r){let a=this._hashTpExpandedSymbolPromise.get(s);if(a)r=yield a,n.throwIfAborted(this._controller.signal);else{const h=this._getArcadeInfo(e),c=M.createSymbolSchema(i);a=S.expandSymbol(c,h,t),this._hashTpExpandedSymbolPromise.set(s,a);try{r=yield a,this._hashTpExpandedSymbolPromise.delete(s),this._hashToExpandedSymbol.set(s,r)}catch(o){this._hashTpExpandedSymbolPromise.delete(s),n.throwIfAborted(o)}}}if("esriTS"===r.type){const e=[],[t]=E.bidiText(r.text);for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));const i={symbol:r,id:0,glyphIds:e},[{mosaicItem:s}]=yield this.container.getMaterialItems([i]);return{symbol:r,mosaicItem:s}}return{symbol:r,mosaicItem:null}}));function i(e,i){return t.apply(this,arguments)}return i}(),s._projectAndNormalizeGeometry=function(){var t=e._asyncToGenerator((function*(e,t){if(n.throwIfAborted(this._controller.signal),o.isNone(e.geometry)||"mesh"===e.geometry.type)return null;let i=e.geometry;if(f.isPolygon(i)){const e=i.rings;i.rings=e}else if(f.isPolyline(i)){const e=i.paths;i.paths=e}else if(f.isExtent(i)){const s=yield this._getSymbolForGraphic(e,t);if(n.throwIfAborted(this._controller.signal),L.isMarkerSymbol(s.type)||L.isTextSymbol(s.type)){i=i.center}else i=p.fromExtent(i)}yield b.checkProjectionSupport(i.spatialReference,this.view.spatialReference);const s=y.normalizeCentralMeridianSync(i),r=b.project(s,i.spatialReference,this.view.spatialReference);return _.closeRingsAndFixWinding(r),r}));function i(e,i){return t.apply(this,arguments)}return i}(),s._onTileUpdate=function(e){const t=m.getInfo(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const i of e.removed)this._removeTile(i.key)},s._addGraphic=function(){var t=e._asyncToGenerator((function*(e){this._abortProcessingGraphic(e.uid),n.throwIfAborted(this._controller.signal);const t=n.createAbortController();this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};try{yield this._addOrUpdateGraphic(e,i),n.throwIfAborted(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(s){if(this._graphicIdToAbortController.delete(e.uid),!n.isAbortError(s))throw s}}));function i(e){return t.apply(this,arguments)}return i}(),s._updateGraphic=function(){var t=e._asyncToGenerator((function*(e,t){n.throwIfAborted(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t),[r,o]=yield Promise.all([i,s]);n.throwIfAborted(this._controller.signal),this._graphicStore.addOrModify(e,o,r)}));function i(e,i){return t.apply(this,arguments)}return i}(),s._addOrUpdateGraphic=function(){var t=e._asyncToGenerator((function*(e,t){n.throwIfAborted(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t);try{const[t,r]=yield Promise.all([i,s]);n.throwIfAborted(this._controller.signal),this._addProjectedGraphic(e,r,t)}catch(r){if(!n.isAbortError(r))throw r}}));function i(e,i){return t.apply(this,arguments)}return i}(),s._addProjectedGraphic=function(e,t,i){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,i)},s._addTile=function(e){const t=this.view.featuresTilingScheme.getTileBounds(g.create(),e),i=new I.GraphicTile(e,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i},s._addNewTile=function(){var t=e._asyncToGenerator((function*(e,t){const i=this._addTile(e.key),s=this._graphicStore.queryTileData(this._templateStore,e);if(0===s.length)return;if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of s)e.geometry&&(f.isPoint(e.geometry)||f.isMultipoint(e.geometry))&&this._wrapPoints(e,i)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:yield this._processGraphics(e,s),remove:[],end:!0,sort:!1};i.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")}catch(o){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!n.isAbortError(o))throw o}}));function i(e,i){return t.apply(this,arguments)}return i}(),s._removeTile=function(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)},s._setFilterState=function(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?T.FILTER_FLAG_0:0))},s._getGraphicsData=function(e,t,i){const s=m.getInfo(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of r)t.geometry&&(f.isPoint(t.geometry)||f.isMultipoint(t.geometry))&&this._wrapPoints(t,e)}return r},s._wrapPoints=function(e,t){const i=e.geometry;f.isMultipoint(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)},s._wrapMultipoint=function(e,t){const i=e.points,s=[];let r=0,o=0;for(const[n,a]of i){if(s.push([n+r,a]),r=0,t===L.TILE_SIZE){const e=5*L.PIXEL_BUFFER;n+o<e?(s.push([t,0]),r=-t):n+o>L.TILE_SIZE-e&&(s.push([-t,0]),r=t)}else n+o<-L.PIXEL_BUFFER?(s.push([t,0]),r=-t):n+o>L.TILE_SIZE+L.PIXEL_BUFFER&&(s.push([-t,0]),r=t);o+=n}e.points=s},s._wrapPoint=function(e,t){const i=e.geometry;if(t===L.TILE_SIZE){const s=5*L.PIXEL_BUFFER;i.x<s?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>L.TILE_SIZE-s&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-L.PIXEL_BUFFER?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>L.TILE_SIZE+L.PIXEL_BUFFER&&(e.geometry={points:[[i.x,i.y],[-t,0]]})},s._processGraphics=function(){var t=e._asyncToGenerator((function*(e,t,i){if(!(t&&t.length)||!this._meshFactory)return null;const s=x.GraphicsReader.from(t),r=this._meshFactory,o=yield this._matcher;return yield r.analyzeGraphics(s,o,null,null,i),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,s)}));function i(e,i,s){return t.apply(this,arguments)}return i}(),s._processAnalyzedGraphics=function(e,t){const i=this._meshFactory,s=t.getSize(),r=t.getCursor(),o={features:s,records:s,metrics:0},n=new U.MeshData(e.key.id,o,!1,!1,!1),a=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const s=new G(t.displayId);s.insertAfter=t.insertAfter,a.push(s),i.writeGraphic(n,r,e.level)}const h=e.tileInfoView.tileInfo.isWrappable,c=n.serialize(h);if(1!==c.length)return new v.TileData;const d=c[0].message;return v.TileData.fromVertexData(d,a)},s._abortProcessingGraphic=function(e){if(this._graphicIdToAbortController.has(e)){this._graphicIdToAbortController.get(e).abort()}},s._getNullSymbol=function(e){const t=e.geometry;return f.isPolyline(t)?w.errorPolylineSymbol2D:f.isPolygon(t)||f.isExtent(t)?w.errorPolygonSymbol2D:w.errorPointSymbol2D},s._flipUpdatingGraphics=function(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")},e._createClass(i,[{key:"updating",get:function(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}}]),i}(z.GraphicsView(s.HandleOwnerMixin(i)));return t.__decorate([h.property({constructOnly:!0})],H.prototype,"requestUpdateCallback",void 0),t.__decorate([h.property()],H.prototype,"container",void 0),t.__decorate([h.property({constructOnly:!0})],H.prototype,"graphics",void 0),t.__decorate([h.property()],H.prototype,"updating",null),t.__decorate([h.property()],H.prototype,"view",void 0),t.__decorate([h.property()],H.prototype,"updateRequested",void 0),H=t.__decorate([l.subclass("esri.views.2d.layers.support.GraphicsView2D")],H),H}));
