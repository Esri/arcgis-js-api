/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Logger","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/spatialReferenceUtils","./BitmapTileLayerView2D","./LayerView2D","./support/imageUtils","../tiling/TileInfoView","../tiling/TileKey","../tiling/TileQueue","../tiling/TileStrategy","../../layers/LayerView","../../layers/RefreshableLayerView"],(function(e,t,i,r,s,a,n,l,o,c,u,h,f,p,y,d,_,g,w){"use strict";const m=[102113,102100,3857,3785,900913],I=[0,0];let T=function(t){function a(){var e;return(e=t.apply(this,arguments)||this)._tileStrategy=null,e._fetchQueue=null,e._tileRequests=new Map,e.layer=null,e}e._inheritsLoose(a,t);var n=a.prototype;return n.update=function(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()},n.attach=function(){const e=this.tileMatrixSet?.tileInfo;e&&(this._tileInfoView=new p(e),this._fetchQueue=new d({tileInfoView:this._tileInfoView,concurrency:16,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new _({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.addAttachHandles(s.watch((()=>[this.layer?.activeLayer?.styleId,this.tileMatrixSet]),(()=>this._refresh()))),t.prototype.attach.call(this))},n.detach=function(){t.prototype.detach.call(this),this._tileStrategy?.destroy(),this._fetchQueue?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null},n.moveStart=function(){this.requestUpdate()},n.viewChange=function(){this.requestUpdate()},n.moveEnd=function(){this.requestUpdate()},n.releaseTile=function(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()},n.acquireTile=function(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(I,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t},n.doRefresh=function(){var t=e._asyncToGenerator((function*(){!this.attached||this.updateRequested||this.suspended||this._refresh()}));function i(){return t.apply(this,arguments)}return i}(),n.isUpdating=function(){return this._fetchQueue?.updating??!1},n.fetchTile=function(){var t=e._asyncToGenerator((function*(e,t={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:s,resamplingLevel:a=0}=t;if(!i)return this._fetchImage(e,s);const n=new y(0,0,0,0);let l;try{yield i.fetchAvailabilityUpsample(e.level,e.row,e.col,n,{signal:s}),l=yield this._fetchImage(n,s)}catch(o){if(r.isAbortError(o))throw o;if(a<3){const i=this._tileInfoView.getTileParentId(e.id);if(i){const r=new y(i),s=yield this.fetchTile(r,{...t,resamplingLevel:a+1});return f.resampleImage(this._tileInfoView,s,r,e)}}throw o}return f.resampleImage(this._tileInfoView,l,n,e)}));function i(e){return t.apply(this,arguments)}return i}(),n.canResume=function(){const e=t.prototype.canResume.call(this);return e?null!==this.tileMatrixSet:e},n.supportsSpatialReference=function(e){return this.layer.activeLayer.tileMatrixSets?.some((t=>c.equals(t.tileInfo?.spatialReference,e)))??!1},n._enqueueTileFetch=function(){var t=e._asyncToGenerator((function*(e){if(!this._fetchQueue.has(e.key.id)){try{const t=yield this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(t){r.isAbortError(t)||i.getLogger(this.declaredClass).error(t)}this.requestUpdate()}}));function s(e){return t.apply(this,arguments)}return s}(),n._fetchImage=function(){var t=e._asyncToGenerator((function*(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}));function i(e,i){return t.apply(this,arguments)}return i}(),n._refresh=function(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>{if(!e.bitmap.source)return;const t={id:e.key.id,fulfilled:!1,promise:this._fetchQueue.push(e.key).then((t=>{e.bitmap.source=t})).catch((t=>{r.isAbortError(t)||(e.bitmap.source=null)})).finally((()=>{e.requestRender(),t.fulfilled=!0}))};this._tileRequests.set(e,t)}))},n._getTileMatrixSetBySpatialReference=function(e){const t=this.view.spatialReference;if(!e.tileMatrixSets)return null;let i=e.tileMatrixSets.find((e=>c.equals(e.tileInfo?.spatialReference,t)));return!i&&t.isWebMercator&&(i=e.tileMatrixSets.find((e=>m.includes(e.tileInfo?.spatialReference.wkid??-1)))),i},e._createClass(a,[{key:"tileMatrixSet",get:function(){const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(e.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=e.id),e):null}}]),a}(w(u.BitmapTileLayerView2D(h.LayerView2DMixin(g))));t.__decorate([a.property()],T.prototype,"_fetchQueue",void 0),t.__decorate([a.property({readOnly:!0})],T.prototype,"tileMatrixSet",null),T=t.__decorate([o.subclass("esri.views.2d.layers.WMTSLayerView2D")],T);return T}));
