/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../chunks/earcut","../../../geometry/support/aaBoundingRect","../../../geometry/support/coordsUtils","../../../geometry/support/normalizeUtilsSync","../../../geometry/support/spatialReferenceUtils","../../../layers/graphics/data/projectionSupport","../tiling/PagedTileQueue","../tiling/TileInfoView","../tiling/TileKey","../tiling/TileQueue","../tiling/TileStrategy","../engine/webgl/definitions","../engine/webgl/TurboLine","./LayerView2D","./support/DisplayGL","./support/util","../../layers/LayerView","../../layers/RefreshableLayerView"],(function(e,t,n,r,i,s,o,c,a,l,u,f,p,h,d,y,x,g,v,T,_,m,w,R,O){"use strict";const G=new Set,b=[],L=[];let M=function(e,t,n,r,i,s,o,c=[0,0],l=a.create()){this.id=e,this.level=t,this.row=n,this.col=r,this.world=i,this.resolution=s,this.scale=o,this.coords=c,this.bounds=l},z=function(t){function n(n){var r;return(r=t.call(this,n)||this)._tileMap=new Map,r.container=new m.DisplayGL(e._assertThisInitialized(r)),r.layer=null,r.tiles=[],r._renderTarget={framebuffer:null,viewport:[0,0,0,0]},r}e._inheritsLoose(n,t);var r=n.prototype;return r.attach=function(){},r.detach=function(){},r.requestRender=function(){this.container.requestRender()},r.tilesChanged=function(e,t){},r.supportsSpatialReference=function(e){var t;const n=null==(t=this.layer)?void 0:t.tileInfo;return!n||f.equals(n.spatialReference,e)},r.doRefresh=function(){var t=e._asyncToGenerator((function*(){}));function n(){return t.apply(this,arguments)}return n}(),r.isUpdating=function(){return!1},r.update=function(e){const t=this._tileInfoView,n=this.tiles;if(t){const r=t.getTileCoverage(e.state,0),{spans:i,lodInfo:s}=r,{level:o}=s;if(i.length)for(const{row:e,colFrom:t,colTo:c}of i)for(let r=t;r<=c;r++){const t=s.normalizeCol(r),i=s.getWorldForColumn(r),c=`${o}/${e}/${t}/${i}`;if(!this._tileMap.has(c)){const r=new M(c,o,e,t,i,s.resolution,s.scale);s.getTileCoords(r.coords,r,!1),s.getTileBounds(r.bounds,r,!0),this._tileMap.set(c,r),n.push(r),b.push(r)}G.add(c)}}for(let r=n.length-1;r>=0;r--){const e=n[r];G.has(e.id)||(n.splice(r,1),L.push(e),this._tileMap.delete(e.id))}(b.length||L.length)&&(this.tilesChanged(b,L),b.length=L.length=0),G.clear(),this.requestRender()},r.moveStart=function(){},r.viewChange=function(){this.requestUpdate()},r.moveEnd=function(){},r.bindRenderTarget=function(){this.context.bindFramebuffer(this.context.FRAMEBUFFER,this._renderTarget.framebuffer),this.context.viewport(this._renderTarget.viewport[0],this._renderTarget.viewport[1],this._renderTarget.viewport[2],this._renderTarget.viewport[3])},r.getRenderTarget=function(){return this._renderTarget},r.tessellateExtent=function(){var t=e._asyncToGenerator((function*(e){const t={vertices:[],indices:[]},n=yield this._projectAndNormalizeGeometry(e),r=t.vertices.length;return t.vertices.push({x:n.xmin,y:n.ymin,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:0,distance:0}),t.vertices.push({x:n.xmax,y:n.ymin,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:0,distance:0}),t.vertices.push({x:n.xmin,y:n.ymax,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:1,distance:0}),t.vertices.push({x:n.xmax,y:n.ymax,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:1,distance:0}),t.indices.push(r+0,r+1,r+2,r+1,r+3,r+2),t}));function n(e){return t.apply(this,arguments)}return n}(),r.tessellatePoint=function(){var t=e._asyncToGenerator((function*(e,t){const n=yield this._projectAndNormalizeGeometry(e);return this._tessellatePoints([n],t)}));function n(e,n){return t.apply(this,arguments)}return n}(),r.tessellateMultipoint=function(){var t=e._asyncToGenerator((function*(e,t){const n=yield this._projectAndNormalizeGeometry(e),r=n.points.map((e=>({x:e[0],y:e[1],spatialReference:n.spatialReference})));return this._tessellatePoints(r,t)}));function n(e,n){return t.apply(this,arguments)}return n}(),r._tessellatePoints=function(){var t=e._asyncToGenerator((function*(e,t){const n={vertices:[],indices:[]};for(const r of e){const e=n.vertices.length;n.vertices.push({x:r.x,y:r.y,xOffset:t.x,yOffset:t.y+t.height,uTexcoord:0,vTexcoord:0,distance:0}),n.vertices.push({x:r.x,y:r.y,xOffset:t.x+t.width,yOffset:t.y+t.height,uTexcoord:1,vTexcoord:0,distance:0}),n.vertices.push({x:r.x,y:r.y,xOffset:t.x,yOffset:t.y,uTexcoord:0,vTexcoord:1,distance:0}),n.vertices.push({x:r.x,y:r.y,xOffset:t.x+t.width,yOffset:t.y,uTexcoord:1,vTexcoord:1,distance:0}),n.indices.push(e+0,e+1,e+2,e+1,e+3,e+2)}return n}));function n(e,n){return t.apply(this,arguments)}return n}(),r.tessellatePolyline=function(){var t=e._asyncToGenerator((function*(e,t){const n={vertices:[],indices:[]},r=(yield this._projectAndNormalizeGeometry(e)).paths;if(!r||!r.length)return n;let i;const s=new T.LineTessellation(((e,r,s,o,c,a,l,u,f,p,h)=>{const d=n.vertices.length;return n.vertices.push({x:e,y:-r,xOffset:l*t/2,yOffset:u*t/2,uTexcoord:h/i,vTexcoord:(p+1)/2,distance:h}),d}),((e,t,r)=>{n.indices.push(e,t,r)}),!0);for(const o of r){i=0;for(let t=1;t<o.length;++t){const e=o[t][0]-o[t-1][0],n=o[t][1]-o[t-1][1];i+=Math.sqrt(e*e+n*n)}const e=o.map((e=>({x:e[0],y:-e[1]})));s.tessellate(e,S)}return n}));function n(e,n){return t.apply(this,arguments)}return n}(),r.tessellatePolygon=function(){var t=e._asyncToGenerator((function*(e){const t={vertices:[],indices:[]},n=yield this._projectAndNormalizeGeometry(e),r=n.rings;if(!r||!r.length)return t;l.closeRings(n);for(const a of n.rings)for(const e of a)e[1]=-e[1];let i=1/0,s=1/0,o=-1/0,c=-1/0;return w.analyzeRings(n.rings,(()=>{}),((e,t,n)=>{for(let r=e;r<t;r+=2)i=Math.min(i,n[r]),s=Math.min(s,n[r+1]),o=Math.max(o,n[r]),c=Math.max(c,n[r+1])})),w.analyzeRings(n.rings,(()=>{}),((e,n,r,a)=>{this._invokeEarcut(t,e,n,r,a,[i,s,o,c])})),t}));function n(e){return t.apply(this,arguments)}return n}(),r._invokeEarcut=function(e,t,n,r,i,s){const o=r.slice(t,n),a=c.earcut(o,i,2),l=e.vertices.length;for(let c=0;c<o.length;c+=2){const t=o[c],n=o[c+1];e.vertices.push({x:t,y:-n,xOffset:0,yOffset:0,uTexcoord:(t-s[0])/(s[2]-s[0]),vTexcoord:1-(n-s[1])/(s[3]-s[1]),distance:0})}for(let c=0;c<a.length;++c)e.indices.push(l+a[c])},r._projectAndNormalizeGeometry=function(){var t=e._asyncToGenerator((function*(e){yield p.checkProjectionSupport(e.spatialReference,this.view.spatialReference);const t=u.normalizeCentralMeridianSync(e);return p.project(t,e.spatialReference,this.view.spatialReference)}));function n(e){return t.apply(this,arguments)}return n}(),e._createClass(n,[{key:"_tileInfoView",get:function(){const e=this.layer&&this.layer.tileInfo;return e?new d(e):null}},{key:"context",get:function(){return this.view._stage.context.gl}}]),n}(O.RefreshableLayerView(_.LayerView2DMixin(R)));t.__decorate([n.property()],z.prototype,"_tileInfoView",null),t.__decorate([n.property()],z.prototype,"layer",void 0),t.__decorate([n.property()],z.prototype,"context",null),z=t.__decorate([o.subclass("esri.views.2d.layers.BaseLayerViewGL2D")],z);const S={pixelCoordRatio:1,wrapDistance:1e11,halfWidth:v.THIN_LINE_HALF_WIDTH_THRESHOLD+1,initialDistance:0,textured:!0,offset:0};return z}));
