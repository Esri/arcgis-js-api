/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../AggregateGraphic","../../../geometry","../../../Graphic","../../../core/Collection","../../../core/Error","../../../core/has","../../../core/lang","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../layers/effects/FeatureEffectView","../../../layers/support/FeatureFilter","../../../rest/support/FeatureSet","../../../rest/support/Query","../engine/webgl/definitions","./LayerView2D","./features/schemaUtils","./features/tileRenderers","./support/clusterUtils","./support/FeatureCommandQueue","./support/FeatureLayerProxy","./support/util","../tiling/TileManager","../../layers/FeatureLayerView","../../layers/LayerView","../../layers/RefreshableLayerView","../../webgl/capabilities","../../../geometry/Extent"],(function(e,t,i,r,s,n,a,o,l,u,h,d,c,y,p,f,_,g,m,v,b,S,R,x,T,w,U,C,F,E,O,I,V,q){"use strict";function L(e){return e&&"openPorts"in e}const k=u.getLogger("esri.views.2d.layers.FeatureLayerView2D");let G=function(t){function r(){var i;return(i=t.apply(this,arguments)||this)._pipelineIsUpdating=!0,i._commandsQueue=new w({process:e=>{switch(e.type){case"processed-edit":return i._doEdit(e);case"refresh":return i._doRefresh(e.dataChanged);case"update":return i._doUpdate()}}}),i._visibilityOverrides=new Set,i._highlightIds=new Map,i._updateHighlight=d.debounce(e._asyncToGenerator((function*(){return i._proxy.setHighlight(Array.from(i._highlightIds.keys()))}))),i._uploadsLocked=!1,i._needsClusterSizeUpdate=!1,i.featureEffectView=new _,i._lastDefinitionExpression=null,i}e._inheritsLoose(r,t);var u=r.prototype;return u.destroy=function(){var e;h.applySome(this._updateClusterSizeTask,(e=>e.remove())),null==(e=this._proxy)||e.destroy(),this._commandsQueue.destroy()},u.initialize=function(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",(e=>{this._set("_aggregateValueRanges",e.valueRanges)})),c.watch((()=>this.featureEffect),(e=>{this.featureEffectView.featureEffect=e}),{initial:!0,sync:!0})])},u._initProxy=function(){var t=e._asyncToGenerator((function*(){if("isTable"in this.layer&&this.layer.isTable)throw new a("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});this._proxy&&this._proxy.destroy();const e=this._createClientOptions();return this._set("_proxy",new U({client:e})),this._proxy.when()}));function i(){return t.apply(this,arguments)}return i}(),u._initServiceOptions=function(){var t=e._asyncToGenerator((function*(){return this._set("_serviceOptions",yield this._createServiceOptions()),this._serviceOptions}));function i(){return t.apply(this,arguments)}return i}(),u.highlight=function(e){var t;let i;return e instanceof s?i=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?i=[e]:Array.isArray(e)&&e.length>0?i="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>null==e?void 0:e.getObjectId())):n.isCollection(e)&&e.length>0&&(i=e.map((e=>null==e?void 0:e.getObjectId())).toArray()),i=null==(t=i)?void 0:t.filter((e=>null!=e)),i&&i.length?(this._addHighlight(i),{remove:()=>this._removeHighlight(i)}):{remove:()=>{}}},u.hasHighlight=function(){return!!this._highlightIds.size},u.hitTest=function(){var t=e._asyncToGenerator((function*(e,t){if(!this.tileRenderer)return null;const r=yield this.tileRenderer.hitTest(t);if(0===r.length)return null;const{features:n,aggregates:a}=yield this._proxy.getFeatures(r);return[...a.map((e=>this._createHittestResult(i.fromJSON(e)))),...n.map((e=>this._createHittestResult(s.fromJSON(e))))]}));function r(e,i){return t.apply(this,arguments)}return r}(),u.queryAggregates=function(){var t=e._asyncToGenerator((function*(){return(yield this._proxy.getAggregates()).map((e=>i.fromJSON(e)))}));function r(){return t.apply(this,arguments)}return r}(),u.queryStatistics=function(){return this._proxy.queryStatistics()},u.querySummaryStatistics=function(){var t=e._asyncToGenerator((function*(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),r,i)}));function i(e,i,r){return t.apply(this,arguments)}return i}(),u.queryUniqueValues=function(){var t=e._asyncToGenerator((function*(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),r,i)}));function i(e,i,r){return t.apply(this,arguments)}return i}(),u.queryClassBreaks=function(){var t=e._asyncToGenerator((function*(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),r,i)}));function i(e,i,r){return t.apply(this,arguments)}return i}(),u.queryHistogram=function(){var t=e._asyncToGenerator((function*(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),r,i)}));function i(e,i,r){return t.apply(this,arguments)}return i}(),u.queryFeatures=function(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=m.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))},u.queryVisibleFeatures=function(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then((e=>{const t=m.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))},u.queryFeaturesJSON=function(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)},u.queryObjectIds=function(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)},u.queryFeatureCount=function(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)},u.queryExtent=function(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then((e=>({count:e.count,extent:q.fromJSON(e.extent)})))},u.setVisibility=function(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()},u.update=function(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")},u.attach=function(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new F.TileManager({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(c.watch((()=>this.renderingConfigHash),(()=>this._update()),c.initial),"attach"),"stream"!==this.layer.type&&this.handles.add(this.layer.on("edits",(e=>this._edit(e))),"attach")},u.detach=function(){var e;this._commandsQueue.clear(),null==(e=this._proxy)||e.stop(),this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null},u.moveStart=function(){this.requestUpdate()},u.viewChange=function(){this.requestUpdate()},u.moveEnd=function(){this.requestUpdate()},u.isUpdating=function(){var e;const t="renderer"in this.layer&&null!=this.layer.renderer,i=this._commandsQueue.updating,r=null!=this._updatingRequiredFieldsPromise,s=!this._proxy||!this._proxy.isReady,n=this._pipelineIsUpdating,a=null==this.tileRenderer||(null==(e=this.tileRenderer)?void 0:e.updating),l=t&&(i||r||s||n||a);return o("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${l}\n  -> hasRenderer ${t}\n  -> hasPendingCommand ${i}\n  -> updatingRequiredFields ${r}\n  -> updatingProxy ${s}\n  -> updatingPipeline ${n}\n  -> updatingTileRenderer ${a}\n`),l},u._createClientOptions=function(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}},u._detectQueryMode=function(){var t=e._asyncToGenerator((function*(e){var t;const i="path"in e,r="editingInfo"in this.layer&&(null==(t=this.layer.editingInfo)?void 0:t.lastEditDate),s=!!this.layer.refreshInterval,n=!r&&s;if(i&&("feature"===this.layer.type||"subtype-group"===this.layer.type)&&"point"===this.layer.geometryType&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!n&&o("featurelayer-snapshot-enabled"))try{const e=yield this.layer.queryFeatureCount();if(e<=o("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:e};const t=o("featurelayer-snapshot-point-max-threshold"),i=o("featurelayer-snapshot-point-coverage"),r=this.view.extent,s=h.unwrap(this.layer.fullExtent),n=null==s?void 0:s.clone().intersection(r),a=h.isSome(n)?n.width*n.height:0,l=(null==s?void 0:s.width)*(null==s?void 0:s.height),u=0===l?0:a/l;if(e<=t&&u>=i)return{mode:"snapshot",featureCount:e}}catch(a){k.warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:a})}return{mode:"on-demand"}}));function i(e){return t.apply(this,arguments)}return i}(),u._createServiceOptions=function(){var t=e._asyncToGenerator((function*(){var e;const t=this.layer;if("stream"===t.type)return null;const{capabilities:i,objectIdField:r}=t,s=t.fields.map((e=>e.toJSON())),n=h.isSome(t.fullExtent)&&t.fullExtent.toJSON(),a=C.toJSONGeometryType(t.geometryType),o=t.timeInfo&&t.timeInfo.toJSON()||null,u=t.spatialReference?t.spatialReference.toJSON():null,d="feature"===t.type?t.globalIdField:null;let c;"ogc-feature"===t.type?c=t.source.getFeatureDefinition():L(t.source)?c=yield t.source.openPorts():t.parsedUrl&&(c=l.clone(t.parsedUrl),"dynamicDataSource"in t&&t.dynamicDataSource&&(c.query={layer:JSON.stringify({source:t.dynamicDataSource})}));const y="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,p=null!=(e="subtypeField"in this.layer&&this.layer.subtypeField)?e:null,{mode:f,featureCount:_}=yield this._detectQueryMode(c);let g=this.layer.objectIdField;if("feature"===this.layer.type&&h.isSome(this.layer.orderBy)&&this.layer.orderBy.length){const e=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;e&&(g=e)}return{type:f,timeReferenceUnknownClient:y,subtypeField:p,featureCount:_,globalIdField:d,maxRecordCount:i.query.maxRecordCount,tileMaxRecordCount:i.query.tileMaxRecordCount,capabilities:i,fields:s,fullExtent:n,geometryType:a,objectIdField:r,source:c,timeInfo:o,spatialReference:u,orderByFields:g}}));function i(){return t.apply(this,arguments)}return i}(),u._createMemoryServiceOptions=function(){var t=e._asyncToGenerator((function*(e){const t=yield e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}));function i(e){return t.apply(this,arguments)}return i}(),u._cleanUpQuery=function(e){const t=v.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t},u._update=function(){var t=e._asyncToGenerator((function*(){return this._commandsQueue.push({type:"update"})}));function i(){return t.apply(this,arguments)}return i}(),u._edit=function(){var t=e._asyncToGenerator((function*(e){if(this.suspended)return void this._clearTiles();return this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0}));function i(e){return t.apply(this,arguments)}return i}(),u.doRefresh=function(){var t=e._asyncToGenerator((function*(e){if(this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}));function i(e){return t.apply(this,arguments)}return i}(),u._clearTiles=function(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())},u._validateEdit=function(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),r=t&&this.availableFields.includes(t);return i&&!r?(k.error(new a("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e},u._doUpdate=function(){var t=e._asyncToGenerator((function*(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:t,filter:i}=this;yield this._updateRequiredFields();const{renderer:r}=this._getEffectiveRenderer();this._set("_effectiveRenderer",r);const s=this._createSchemaConfig(),n=this._createConfiguration(s,i,t.filter),a=this._lastDefinitionExpression!==n.definitionExpression;this._lastDefinitionExpression=n.definitionExpression;const o=this._createTileRendererHash(r);if("snapshot"===this._serviceOptions.type&&(n.schema.source.featureCount=this._serviceOptions.featureCount),o!==this._tileRendererHash){yield this._initTileRenderer(r);const e=this.layer,t="stream"===e.type?yield this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(r),"stream"!==e.type&&L(e.source)&&(t.source=yield e.source.openPorts());const i={added:this._tileStrategy.tileKeys(),removed:[]};yield this._proxy.startup(this.view.featuresTilingScheme,n,t,i),this.hasHighlight()&&(yield this._proxy.setHighlight(Array.from(this._highlightIds.keys()))),yield this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(r)}else{"snapshot"===this._serviceOptions.type&&a&&(n.schema.source.featureCount=yield this.layer.queryFeatureCount());const t=yield this._proxy.update(n);(t.mesh||t.targets.aggregate)&&this._lockGPUUploads();try{yield this._proxy.applyUpdate(t)}catch(e){d.isAbortError(e)||k.error(e)}(t.mesh||t.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(r),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=o,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch(e){}}));function i(){return t.apply(this,arguments)}return i}(),u._doEdit=function(){var t=e._asyncToGenerator((function*(e){try{yield this._proxy.onEdits(e)}catch(t){d.isAbortError(t),0}}));function i(e){return t.apply(this,arguments)}return i}(),u._doRefresh=function(){var t=e._asyncToGenerator((function*(e){var t;this._lockGPUUploads();try{yield this._proxy.refresh(e)}catch(i){d.isAbortError(i),0}this._unlockGPUUploads(),null!=(t=this.layer)&&t.featureReduction&&this._updateClusterSizeVariable()}));function i(e){return t.apply(this,arguments)}return i}(),u._updateClusterSizeVariable=function(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)},u._createUpdateClusterSizeTask=function(t,i){var r=this;return this.watch("_aggregateValueRanges",function(){var s=e._asyncToGenerator((function*(e){r._updateClusterEffectiveRendererSizeVariable(t,i,e),r._needsClusterSizeUpdate=!0,r._uploadsLocked||r._updateClusterSizeVariable()}));return function(e){return s.apply(this,arguments)}}())},u._updateClusterEffectiveRendererSizeVariable=function(){var t=e._asyncToGenerator((function*(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=T.findSizeVV(e.visualVariables);if(h.isSome(r)&&"cluster_count"===r.field){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=T.createClusterCountSizeVariable(t,i);const n=e.clone();n.dynamicClusterSize=!0,this._set("_effectiveRenderer",n)}}}));function i(e,i,r){return t.apply(this,arguments)}return i}(),u._getEffectiveRenderer=function(){const e="renderer"in this.layer&&this.layer.renderer,t=this.layer.featureReduction;if(h.isSome(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),t&&"cluster"===t.type&&T.isClusterCompatibleRenderer(e)){const i=t,r=[],s=T.createClusterRenderer(r,e,i,this._aggregateValueRanges);return h.applySome(this._updateClusterSizeTask,(e=>e.remove())),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(s,i),{renderer:s,aggregateFields:r,featureReduction:t}}return{renderer:e,aggregateFields:[],featureReduction:null}},u._acquireTile=function(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",(()=>{this.requestUpdate()})),t},u._releaseTile=function(e){this.tileRenderer.releaseTile(e)},u._initTileRenderer=function(){var t=e._asyncToGenerator((function*(e){const t=yield x.createOrReuseTileRenderer(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=t,this._set("tileRenderer",t),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(e),this.requestUpdate(),this.tileRenderer)}));function i(e){return t.apply(this,arguments)}return i}(),u._createTileRendererHash=function(e){return`${"heatmap"===e.type?"heatmap":"symbol"}`},u._injectOverrides=function(e){const t=h.isSome(e)?e.timeExtent:null,i=h.isSome(this.timeExtent)&&h.isSome(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const t=h.isSome(e)&&e.where;r=this._addFloorFilterClause(t)}if(!this._visibilityOverrides.size&&!i&&!s)return h.isSome(e)?e.toJSON():null;(e=h.isSome(e)&&e.clone()||new g).timeExtent=i,r&&(e.where=r);const n=e.toJSON();return n.hiddenIds=Array.from(this._visibilityOverrides),n},u._addFloorFilterClause=function(e){const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){var r;let e=this.view.floors;if(!e||!e.length)return i;null!=(r=t.floorInfo.viewAllLevelIds)&&r.length&&(e=t.floorInfo.viewAllLevelIds);const s=e.filter((e=>""!==e)).map((e=>"'"+e+"'"));s.push("''");const n=t.floorInfo.floorField;let a="("+n+" IN ({ids}) OR "+n+" IS NULL)";if(a=a.replace("{ids}",s.join(", ")),h.isSome(i)&&i.includes(n)){let e=new RegExp("AND \\("+n+".*NULL\\)","g");i=i.replace(e,""),e=new RegExp("\\("+n+".*NULL\\)","g"),i=i.replace(e,""),i=i.replace(/\s+/g," ").trim()}i=""!==i?"("+i+") AND "+a:a}return""!==i?i:null},u._createConfiguration=function(e,t,i){const r="feature"===this.layer.type&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s="feature"===this.layer.type?this.layer.gdbVersion:void 0,n=new Array(b.MAX_FILTERS),a=this._injectOverrides(t);n[0]=a,n[1]=h.isSome(i)?i.toJSON():null;const o=R.createSchema(e);if(h.isNone(o))return null;const l=V.getWebGL1Capabilities();return{definitionExpression:this.layer.definitionExpression,availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:n,schema:o,supportsTextureFloat:l.supportsTextureFloat,maxTextureSize:l.maxTextureSize}},u._hasRequiredSupport=function(e){var t;return!("renderer"in e&&"dot-density"===(null==(t=e.renderer)?void 0:t.type)&&!V.getWebGL1Capabilities().supportsTextureFloat)||(k.error(new a("webgl-missing-extension","Missing WebGL extension OES_Texture_Float which is required for DotDensity")),!1)},u._onceTilesUpdated=function(){return this.requestUpdate(),c.whenOnce((()=>!this._pipelineIsUpdating))},u._lockGPUUploads=function(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())},u._unlockGPUUploads=function(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())},u._forceAttributeTextureUpload=function(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()},u._createSchemaConfig=function(){const e="feature"===this.layer.type?this.layer.historicMoment:null,t="feature"===this.layer.type?this.layer.gdbVersion:null;return{renderer:"renderer"in this.layer&&this.layer.renderer,spatialReference:this.layer.spatialReference,timeExtent:this.layer.timeExtent,definitionExpression:this.layer.definitionExpression,featureReduction:this.layer.featureReduction,fields:this.layer.fields,geometryType:this.layer.geometryType,historicMoment:e,labelsVisible:"labelsVisible"in this.layer&&this.layer.labelsVisible,labelingInfo:"labelingInfo"in this.layer&&this.layer.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:t,pixelBuffer:0,orderBy:"orderBy"in this.layer&&this.layer.orderBy?this.layer.orderBy:null,customParameters:{..."customParameters"in this.layer?this.layer.customParameters:void 0,token:"apiKey"in this.layer?this.layer.apiKey:void 0}}},u._addHighlight=function(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch((e=>{d.isAbortError(e)||k.error(e)}))},u._removeHighlight=function(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight().catch((e=>{d.isAbortError(e)||k.error(e)}))},u._setLayersForFeature=function(e){const t=this.layer;e.layer=t,e.sourceLayer=t},u._createHittestResult=function(e){return this._setLayersForFeature(e),h.isSome(e.geometry)&&(e.geometry.spatialReference=this.view.spatialReference),e},e._createClass(r,[{key:"orderByFields",get:function(){return"stream"!==this._serviceOptions.type&&this._serviceOptions.orderByFields}},{key:"labelsVisible",get:function(){const e="subtype-group"===this.layer.type?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some((e=>e.labelingInfo&&e.labelsVisible))}},{key:"queryMode",get:function(){return this._serviceOptions.type}},{key:"renderingConfigHash",get:function(){if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r}=t,s="subtype-group"!==this.layer.type&&this.layer.labelsVisible&&this.layer.labelingInfo,n="renderer"in t&&t.renderer,a="feature"===t.type?t.gdbVersion:void 0,o="feature"===t.type&&t.historicMoment?t.historicMoment.getTime():void 0,{timeExtent:l}=this,u="customParameters"in t?JSON.stringify(t.customParameters):void 0,d="apiKey"in t?t.apiKey:void 0,c="stream"===t.type?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,y=JSON.stringify(this.clips),p=t.featureReduction&&t.featureReduction.toJSON(),f="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),_="sublayers"in this.layer&&this.layer.sublayers.items.reduce(((e,t)=>e+`${t.visible?1:0}.${JSON.stringify(t.renderer)}.${t.labelsVisible}\n.${JSON.stringify(t.labelingInfo)}`),"");return JSON.stringify({orderBy:f,sublayerHash:_,filterHash:h.isSome(this.filter)&&this.filter.toJSON(),effectHash:h.isSome(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:c,gdbVersion:a,definitionExpression:r,historicMoment:o,availableFields:e,renderer:n,labelingInfo:s,timeExtent:l,floors:i,clipsHash:y,featureReduction:p,customParameters:u,apiKey:d})}},{key:"hasFilter",get:function(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}}]),r}(E.FeatureLayerView(I.RefreshableLayerView(S.LayerView2DMixin(O))));t.__decorate([y.property()],G.prototype,"_serviceOptions",void 0),t.__decorate([y.property()],G.prototype,"_proxy",void 0),t.__decorate([y.property()],G.prototype,"_pipelineIsUpdating",void 0),t.__decorate([y.property()],G.prototype,"_effectiveRenderer",void 0),t.__decorate([y.property()],G.prototype,"_aggregateValueRanges",void 0),t.__decorate([y.property()],G.prototype,"_commandsQueue",void 0),t.__decorate([y.property()],G.prototype,"featureEffectView",void 0),t.__decorate([y.property()],G.prototype,"labelsVisible",null),t.__decorate([y.property({readOnly:!0})],G.prototype,"queryMode",null),t.__decorate([y.property()],G.prototype,"renderingConfigHash",null),t.__decorate([y.property()],G.prototype,"tileRenderer",void 0),t.__decorate([y.property()],G.prototype,"updating",void 0),G=t.__decorate([f.subclass("esri.views.2d.layers.FeatureLayerView2D")],G);return G}));
