/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../Graphic","../../../core/Logger","../../../core/promiseUtils","../../../core/watchUtils","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../engine/flow/AnimatedFlowView2D","./LayerView2D","./imagery/ImageryTileView2D","./imagery/VectorFieldTileView2D","./support/util","../../layers/ImageryTileLayerView","../../layers/LayerView","../../layers/RefreshableLayerView"],(function(e,i,t,s,r,n,o,a,u,c,h,l,d,p,y,w,b,v,g){"use strict";const f=s.getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let L=function(i){function s(){var e;return(e=i.apply(this,arguments)||this)._useWebGLForProcessing=!0,e._useProgressiveUpdate=!0,e.subview=null,e}e._inheritsLoose(s,i);var o=s.prototype;return o.initialize=function(){const e=this.updateFullExtent();this.addResolvingPromise(e)},o.update=function(e){this.subview.update(e),this.notifyChange("updating")},o.isUpdating=function(){return!this.subview||this.subview.updating},o.attach=function(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([n.watch(this.layer,["bandIds","renderer","interpolation","multidimensionalDefinition"],((e,i,t)=>{const s="multidimensionalDefinition"===t,n="interpolation"===t&&("majority"===e||"majority"===i)&&w.canUseMajorityInterpolationOnDataSource(this.layer),o="renderer"===t&&i.type!==e.type;o&&this._updateSubview();const a=s||n||o;this.subview.redrawOrRefetch(a).catch((e=>{r.isAbortError(e)||f.error(e)})),this.notifyChange("updating")})),n.init(this,["layer.blendMode"],(e=>{this.subview&&(this.subview.container.blendMode=e)}),!0),n.init(this,["layer.effect"],(e=>{this.subview&&(this.subview.container.effect=e)}),!0),n.init(this,"timeExtent",(()=>{this.subview.redrawOrRefetch(!0).catch((e=>{r.isAbortError(e)||f.error(e)}))}))],"attach")},o.detach=function(){this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),this.subview.uninstall()},o.moveStart=function(){this.requestUpdate()},o.viewChange=function(){this.requestUpdate()},o.moveEnd=function(){this.subview.moveEnd()},o.hitTest=function(){var i=e._asyncToGenerator((function*(e,i){return[new t({attributes:{},geometry:e.clone()})]}));function s(e,t){return i.apply(this,arguments)}return s}(),o.doRefresh=function(){return this.subview.doRefresh()},o._updateSubview=function(){const e="vector-field"===this.layer.renderer.type?"rasterVF":"animated-flow"===this.layer.renderer.type?"rasterAnimatedFlow":"raster";if(this.subview){if(this.subview.type===e)return;this.subview.uninstall()}const{layer:i}=this;let t;t="rasterVF"===e?new y({layer:i,layerView:this}):"rasterAnimatedFlow"===e?new l({layer:i,layerView:this}):new p({layer:i,layerView:this}),"useWebGLForProcessing"in t&&(t.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in t&&(t.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in t&&(t.previousLOD=this.subview&&"previousLOD"in this.subview&&this.subview.previousLOD),t.attach(),t.install(this.container),t.container.blendMode=i.blendMode,t.container.effect=i.effect,this.subview=t,this.requestUpdate()},e._createClass(s,[{key:"useWebGLForProcessing",get:function(){return this._useWebGLForProcessing},set:function(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}},{key:"useProgressiveUpdate",get:function(){return this._useWebGLForProcessing},set:function(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}}]),s}(b.ImageryTileLayerView(g.RefreshableLayerView(d.LayerView2DMixin(v))));i.__decorate([o.property()],L.prototype,"subview",void 0),i.__decorate([o.property()],L.prototype,"useWebGLForProcessing",null),i.__decorate([o.property()],L.prototype,"useProgressiveUpdate",null),L=i.__decorate([h.subclass("esri.views.2d.layers.ImageryTileLayerView2D")],L);return L}));
