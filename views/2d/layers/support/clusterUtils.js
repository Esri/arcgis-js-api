/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../core/Error","../../../../core/has","../../../../core/Logger","../../../../core/maybe","../../../../core/MD5","../../../../layers/support/AggregateField","../../../../layers/support/ExpressionInfo","../../../../renderers/support/AuthoringInfo","../../../../renderers/visualVariables/SizeVariable","../../../../renderers/visualVariables/support/SizeStop","../../engine/LevelDependentSizeVariable"],(function(e,r,s,i,n,a,t,l,u,o,c,d){"use strict";const p=i.getLogger("esri.views.2d.layers.support.clusterUtils");s.add("esri-cluster-arcade-enabled",!0);const f=s("esri-cluster-arcade-enabled"),v=(e,r,s,i,a)=>{const t=r.clone();if(!E(t))return t;if(t.authoringInfo||(t.authoringInfo=new u),t.authoringInfo.isAutoGenerated=!0,"visualVariables"in t){const r=(t.visualVariables||[]).filter((e=>"$view.scale"!==e.valueExpression)),l=m(r);r.forEach((r=>{"rotation"===r.type?r.field?r.field=w(e,r.field,"avg_angle","number"):r.valueExpression&&(r.field=V(e,r.valueExpression,"avg_angle","number"),r.valueExpression=null):r.normalizationField?(r.field=w(e,r.field,"avg_norm","number",r.normalizationField),r.normalizationField=null):r.field?r.field=w(e,r.field,"avg","number"):r.valueExpression&&(r.field=V(e,r.valueExpression,"avg","number"),r.valueExpression=null)})),n.isNone(l)&&!g(r)&&a&&(r.push(x(s,i)),t.dynamicClusterSize=!0),t.visualVariables=r}switch(t.type){case"simple":break;case"pie-chart":for(const r of t.attributes)r.field?r.field=w(e,r.field,"sum","number"):r.valueExpression&&(r.field=V(e,r.valueExpression,"sum","number"),r.valueExpression=null);break;case"unique-value":t.field?t.field=w(e,t.field,"mode","string"):t.valueExpression&&(t.field=V(e,t.valueExpression,"mode","string"),t.valueExpression=null);break;case"class-breaks":t.normalizationField?(t.field=w(e,t.field,"avg_norm","number",t.normalizationField),t.normalizationField=null):t.field?t.field=w(e,t.field,"avg","number"):t.valueExpression&&(t.field=V(e,t.valueExpression,"avg","number"),t.valueExpression=null)}return t},m=e=>{for(const r of e)if("size"===r.type)return r;return null};function b(e,r,s){const i=e.clone();let a=!1;if("visualVariables"in i){const e=(i.visualVariables||[]).filter((e=>"$view.scale"!==e.valueExpression)),t=m(e);n.isNone(t)&&(i.visualVariables||(i.visualVariables=[]),i.visualVariables.push(x(r,s)),i.dynamicClusterSize=!0,a=!0)}return{renderer:i,didInject:a}}const g=e=>{for(const r of e)if("cluster_count"===r.field)return!0;return!1},x=(e,r)=>{const s=[new c({value:0,size:0}),new c({value:1})];if(n.isNone(r))return new o({field:"cluster_count",stops:[...s,new c({value:2,size:0})]});const i=Object.keys(r).reduce(((i,n)=>({...i,[n]:[...s,new c({value:Math.max(2,r[n].minValue),size:e.clusterMinSize}),new c({value:Math.max(3,r[n].maxValue),size:e.clusterMaxSize})]})),{});return new d.LevelDependentSizeVariable({field:"cluster_count",levels:i})},E=e=>{const s=s=>p.error(new r("Unsupported-renderer",s,{renderer:e}));switch(e.type){case"unique-value":if(e.field2||e.field3)return s("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case"class-breaks":if(e.normalizationField){const r=e.normalizationType;if("field"!==r)return s(`FeatureReductionCluster does not support a normalizationType of ${r}`),!1}break;case"simple":case"pie-chart":break;default:return s(`FeatureReductionCluster does not support renderers of type ${e.type}`),!1}if(!f){if("valueExpression"in e&&e.valueExpression)return s("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in e&&e.visualVariables||[]).some((e=>!(!("valueExpression"in e)||!e.valueExpression))))return s("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function y(e,r,s){switch(e){case"sum":return`cluster_sum_${r}`;case"avg":case"avg_angle":return`cluster_avg_${r}`;case"mode":return`cluster_type_${r}`;case"avg_norm":{const e=s,i="field",n=r.toLowerCase()+",norm:"+i+","+e.toLowerCase();return"cluster_avg_"+a.createMD5Hash(n)}}}function V(e,r,s,i){const n=a.createMD5Hash(r),u="mode"===s?`cluster_type_${n}`:"sum"===s?`cluster_sum_${n}`:`cluster_avg_${n}`;return e.some((e=>e.name===u))||e.push(new t({name:u,isAutoGenerated:!0,onStatisticExpression:new l({expression:r,returnType:i}),statisticType:s})),u}function w(e,r,s,i,n){if("cluster_count"===r||e.some((e=>e.name===r)))return r;const a=y(s,r,n);return e.some((e=>e.name===a))||("avg_norm"===s?e.push(new t({name:a,isAutoGenerated:!0,onStatisticExpression:new l({expression:`$feature.${r} / $feature.${n}`,returnType:i}),statisticType:"avg"})):e.push(new t({name:a,isAutoGenerated:!0,onStatisticField:r,statisticType:s}))),a}e.createClusterCountSizeVariable=x,e.createClusterRenderer=v,e.findSizeVV=m,e.hasClusterCountVV=g,e.injectDynamicLevelDependentSizeVisualVariable=b,e.isClusterCompatibleRenderer=E,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
