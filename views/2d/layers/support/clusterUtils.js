// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../../core/Error","../../../../core/has","../../../../core/Logger","../../../../core/maybe","../../../../core/MD5","../../../../renderers/visualVariables/SizeVariable","../../../../renderers/visualVariables/support/SizeStop","../../engine/LevelDependentSizeVariable"],(function(e,r,i,t,a,n,s,l,u,o,d){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isClusterCompatibleRenderer=r.createClusterCountSizeVariable=r.hasClusterCountVV=r.findSizeVV=r.createClusterRenderer=void 0;var c=n.getLogger("esri.views.2d.layers.support.clusterUtils");a.add("esri-cluster-arcade-enabled",1);var f=a("esri-cluster-arcade-enabled");function p(e,r){var i=r.name,a=r.outStatistic,n=a.onStatisticField,s=a.onStatisticValueExpression,u=a.statisticType;if(s){var o=l.createMD5Hash(s.toLowerCase());e.push({name:i,outStatistic:{onStatisticField:o,onStatisticValueExpression:s,statisticType:u}})}else n?e.push({name:i,outStatistic:{onStatisticField:n,statisticType:u}}):c.error(new t("mapview-unsupported-field","Unable to handle field",{field:r}))}function v(e,r,i){var t=l.createMD5Hash(r),a="mode"===i?"cluster_type_"+t:"cluster_avg_"+t;return e.some((function(e){return e.name===a}))||e.push({name:a,outStatistic:{onStatisticField:t,onStatisticValueExpression:r,statisticType:i}}),a}function m(e,r,i,t){if("cluster_count"===r||e.some((function(e){return e.name===r})))return r;var a=function(e,r,i){switch(e){case"avg":case"avg_angle":return"cluster_avg_"+r;case"mode":return"cluster_type_"+r;case"norm":var t=i,a=r.toLowerCase()+",norm:field,"+t.toLowerCase();return"cluster_avg_"+l.createMD5Hash(a)}}(i,r,t);return e.some((function(e){return e.name===a}))||("norm"===i?e.push({name:a,outStatistic:{onStatisticField:r,onStatisticNormalizationField:t,statisticType:i}}):e.push({name:a,outStatistic:{onStatisticField:r,statisticType:i}})),a}r.createClusterRenderer=function(e,i,t,a){var n=i.clone();if(!r.isClusterCompatibleRenderer(n))return n;if(t.fields)for(var l=0,u=t.fields;l<u.length;l++){var o=u[l];p(e,o)}if("visualVariables"in n){var d=(n.visualVariables||[]).filter((function(e){return"$view.scale"!==e.valueExpression})),c=r.findSizeVV(d);d.forEach((function(r){"rotation"===r.type?r.field?r.field=m(e,r.field,"avg_angle"):r.valueExpression&&(r.field=v(e,r.valueExpression,"avg_angle"),r.valueExpression=null):r.normalizationField?(r.field=m(e,r.field,"norm",r.normalizationField),r.normalizationField=null):r.field?r.field=m(e,r.field,"avg"):(r.field=v(e,r.valueExpression,"avg"),r.valueExpression=null)})),s.isNone(c)&&!r.hasClusterCountVV(d)&&(d.push(r.createClusterCountSizeVariable(t,a)),n.dynamicClusterSize=!0),n.visualVariables=d}switch(n.type){case"simple":break;case"unique-value":n.field?n.field=m(e,n.field,"mode"):n.valueExpression&&(n.field=v(e,n.valueExpression,"mode"),n.valueExpression=null);break;case"class-breaks":n.normalizationField?(n.field=m(e,n.field,"norm",n.normalizationField),n.normalizationField=null):n.field?n.field=m(e,n.field,"avg"):(n.field=v(e,n.valueExpression,"avg"),n.valueExpression=null)}return n},r.findSizeVV=function(e){for(var r=0,i=e;r<i.length;r++){var t=i[r];if("size"===t.type)return t}return null},r.hasClusterCountVV=function(e){for(var r=0,i=e;r<i.length;r++){if("cluster_count"===i[r].field)return!0}return!1},r.createClusterCountSizeVariable=function(e,r){var t=[new o({value:0,size:0}),new o({value:1})];if(s.isNone(r))return new u({field:"cluster_count",stops:i.__spreadArrays(t,[new o({value:2,size:0})])});var a=Object.keys(r).reduce((function(a,n){var s;return i.__assign(i.__assign({},a),((s={})[n]=i.__spreadArrays(t,[new o({value:Math.max(2,r[n].minValue),size:e.clusterMinSize}),new o({value:Math.max(3,r[n].maxValue),size:e.clusterMaxSize})]),s))}),{});return new d.LevelDependentSizeVariable({field:"cluster_count",levels:a})},r.isClusterCompatibleRenderer=function(e){var r=function(r){return c.error(new t("Unsupported-renderer",r,{renderer:e}))};if("unique-value"===e.type){if(e.field2||e.field3)return r("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1}else if("class-breaks"===e.type){if(e.normalizationField){var i=e.normalizationType;if("field"!==i)return r("FeatureReductionCluster does not support a normalizationType of "+i),!1}}else if("simple"!==e.type)return r("FeatureReductionCluster does not support renderers of type "+e.type),!1;if(!f){if("valueExpression"in e&&e.valueExpression)return r("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in e&&e.visualVariables||[]).some((function(e){return!!("valueExpression"in e&&e.valueExpression)})))return r("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0}}));