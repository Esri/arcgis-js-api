/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import e from"../../../../core/Accessor.js";import{debounce as i}from"../../../../core/promiseUtils.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import s from"../../../../geometry/Extent.js";import{create as a}from"../../../../geometry/support/aaBoundingRect.js";import{getInfo as p}from"../../../../geometry/support/spatialReferenceUtils.js";import n from"../../../../layers/support/TileInfo.js";import{getOuterSize as m,getBBox as l}from"../../viewStateUtils.js";import{Bitmap as d}from"../../engine/Bitmap.js";import h from"../../tiling/TileInfoView.js";import c from"../../tiling/TileKey.js";const u=a(),g=[0,0],f=new c(0,0,0,0),x={container:null,fetchSource:null,requestUpdate:null,imageMaxWidth:2048,imageMaxHeight:2048,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1};let y=class extends e{constructor(t){super(t),this._imagePromise=null,this.bitmaps=[],this.hidpi=x.hidpi,this.imageMaxWidth=x.imageMaxWidth,this.imageMaxHeight=x.imageMaxHeight,this.imageRotationSupported=x.imageRotationSupported,this.imageNormalizationSupported=x.imageNormalizationSupported,this.update=i((async(t,e)=>{if(!t.stationary||this.destroyed)return null;const i=t.state,o=p(i.spatialReference),r=this.hidpi?t.pixelRatio:1,s=this.imageNormalizationSupported&&i.worldScreenWidth&&i.worldScreenWidth<i.size[0];s?(g[0]=i.worldScreenWidth,g[1]=i.size[1]):this.imageRotationSupported?(g[0]=i.size[0],g[1]=i.size[1]):m(g,i);const a=Math.floor(g[0]*r)>this.imageMaxWidth||Math.floor(g[1]*r)>this.imageMaxHeight,n=o&&(i.extent.xmin<o.valid[0]||i.extent.xmax>o.valid[1]),l=!this.imageNormalizationSupported&&n,d=!a&&!l,h=this.imageRotationSupported?i.rotation:0;if(d){const t=s?i.paddedViewState.center:i.center;this._imagePromise=this._singleExport(i,g,t,i.resolution,h,r,e)}else{let t=Math.min(this.imageMaxWidth,this.imageMaxHeight);l&&(t=Math.min(i.worldScreenWidth,t)),this._imagePromise=this._tiledExport(i,t,r,e)}return this._imagePromise.then((async t=>{if(this._imagePromise=null,!this.destroyed){this.bitmaps=t??[];for(const e of this.container.children)t.includes(e)||e.fadeOut().then((()=>{e.remove()}));for(const e of t)this.container.addChild(e),e.fadeIn()}})).catch((t=>{throw this._imagePromise=null,t}))}),5e3)}destroy(){this.bitmaps=[]}get updating(){return!this.destroyed&&null!==this._imagePromise}updateExports(t){for(const e of this.container.children){if(!e.visible||!e.stage)return;t(e),e.invalidateTexture(),e.requestRender()}}async _export(t,e,i,o,r,s){const a=await this.fetchSource(t,Math.floor(e*r),Math.floor(i*r),{rotation:o,pixelRatio:r,signal:s}),p=new d(a,"additive");return p.x=t.xmin,p.y=t.ymax,p.resolution=t.width/e,p.rotation=o,p.pixelRatio=r,p}async _singleExport(t,e,i,o,r,a,p){l(u,i,o,e);const n=new s(u[0],u[1],u[2],u[3],t.spatialReference);return[await this._export(n,e[0],e[1],r,a,p)]}_tiledExport(t,e,i,o){const r=n.create({size:e,spatialReference:t.spatialReference,scales:[t.scale]}),a=new h(r),p=a.getTileCoverage(t);if(!p)return null;const m=[];return p.forEach(((r,p,n,l)=>{f.set(r,p,n,l),a.getTileBounds(u,f);const d=new s(u[0],u[1],u[2],u[3],t.spatialReference);m.push(this._export(d,e,e,0,i,o))})),Promise.all(m)}};t([o()],y.prototype,"_imagePromise",void 0),t([o()],y.prototype,"bitmaps",void 0),t([o()],y.prototype,"container",void 0),t([o()],y.prototype,"fetchSource",void 0),t([o()],y.prototype,"hidpi",void 0),t([o()],y.prototype,"imageMaxWidth",void 0),t([o()],y.prototype,"imageMaxHeight",void 0),t([o()],y.prototype,"imageRotationSupported",void 0),t([o()],y.prototype,"imageNormalizationSupported",void 0),t([o()],y.prototype,"requestUpdate",void 0),t([o()],y.prototype,"updating",null),y=t([r("esri.views.2d.layers.support.ExportStrategy")],y);const S=y;export{S as default};
