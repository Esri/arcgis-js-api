/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/has","../../../../../core/promiseUtils","./BaseFeatureSource"],(function(e,t,r,o,i){"use strict";const s=r("esri-featurelayer-webgl"),n=r("esri-mobile"),u={maxDrillLevel:s&&"object"==typeof s&&null!=s.maxDrillLevel?s.maxDrillLevel:n?1:4,maxRecordCountFactor:s&&"object"==typeof s&&null!=s.maxRecordCountFactor?s.maxRecordCountFactor:n?1:3};let a=function(e){function r(t){return e.call(this,t)||this}return t._inheritsLoose(r,e),r.prototype._fetchDataTile=async function(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,r=this._subscriptions.get(e.key.id),i=r.signal,s=e.getQuantizationParameters();let n=0;const a=async(c,l)=>{const d=this._sourceQueryInfo,f=this._createQuery(c,{maxRecordCountFactor:t?u.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:s});n++;try{const t=await this._queue.push({tile:e,query:f,signal:i,depth:l});if(n--,o.throwIfAborted(i),!t)return;if(d!==this._sourceQueryInfo)return void a(c,l);if(t.exceededTransferLimit&&l<u.maxDrillLevel){for(const e of c.createChildTiles())a(e,l+1);return}const s={tile:e,id:e.id,features:t,end:0===n};r.requests.done.push({query:f,request:s}),this._onRequest(s,"new")}catch(t){o.isAbortError(t)||this._onRequest({tile:e,id:e.id,features:null,end:!0},"new")}};a(e,0)},r}(i.BaseFeatureSource);e.DrillDownFeatureSource=a,Object.defineProperty(e,"__esModule",{value:!0})}));
