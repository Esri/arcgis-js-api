/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/has","../../../../../core/promiseUtils","./BaseFeatureSource"],(function(e,t,r,i,o){"use strict";const s=r("esri-mobile"),a={maxDrillLevel:s?1:4,maxRecordCountFactor:s?1:3};let n=function(e){function r(t){return e.call(this,t)||this}return t._inheritsLoose(r,e),r.prototype._fetchDataTile=async function(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,r=this._subscriptions.get(e.key.id),o=r.signal,s=e.getQuantizationParameters();let n=0;const u=async(c,d)=>{const l=this._queryInfo,p=this._createQuery(c,{maxRecordCountFactor:t?a.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:s});n++;try{const t=await this._queue.push({tile:e,query:p,signal:o,depth:d});if(n--,i.throwIfAborted(o),!t)return;if(l!==this._queryInfo)return void u(c,d);if(t.exceededTransferLimit&&d<a.maxDrillLevel){for(const e of c.createChildTiles())u(e,d+1);return}const s={id:e.id,addOrUpdate:t,end:0===n,type:"append"};r.add({query:p,message:s}),this._onMessage(s)}catch(h){i.isAbortError(h)||this._onMessage({id:e.id,addOrUpdate:null,end:!0,type:"append"})}};u(e,0)},r}(o.BaseFeatureSource);e.DrillDownFeatureSource=n,Object.defineProperty(e,"__esModule",{value:!0})}));
