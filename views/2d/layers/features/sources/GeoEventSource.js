/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/has","../../../../../core/maybe","../../../../../layers/graphics/OptimizedGeometry","../../../../../layers/graphics/featureConversionUtils","../support/FeatureSetReaderJSON","../../../../../chunks/rbush","../../../../../layers/graphics/data/StreamFeatureManager","../../../../../layers/graphics/sources/connections/createConnection","../support/UpdateToken","./DataTileSource"],(function(e,t,n,o,r,i,s,a,c,u,d,l){"use strict";const h=2500;function p(e,t){const n=e.weakClone(),o=i.quantizeX(t,e.geometry.coords[0]),s=i.quantizeY(t,e.geometry.coords[1]);return n.geometry=new r([],[o,s]),n}function _(e){switch(e){case"esriGeometryPoint":return p;case"esriGeometryPolygon":case"esriGeometryPolyline":default:return(t,n)=>{const o=t.weakClone(),s=new r,a=!1,c=!1,u=i.quantizeOptimizedGeometry(s,t.geometry,a,c,e,n,!1,!1);return o.geometry=u,o}}}function f(e){switch(e){case"esriGeometryPoint":return e=>({minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]});default:return e=>{let t=1/0,n=1/0,o=-1/0,r=-1/0;return e.geometry.forEachVertex(((e,i)=>{t=Math.min(t,e),n=Math.min(n,i),o=Math.max(o,e),r=Math.max(r,i)})),{minX:t,minY:n,maxX:o,maxY:r}}}}function m(e,t){const n=a.rbush(9,f(t));return n.load(e),n}function y(e,t){return e.search({minX:t.bounds[0],minY:t.bounds[1],maxX:t.bounds[2],maxY:t.bounds[3]})}let g=function(){function e(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map}var n=e.prototype;return n.add=function(e){this._objectIdToFeature.set(e.objectId,e),this._index=null},n.get=function(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null},n.forEach=function(e){this._objectIdToFeature.forEach(e)},n.search=function(e){return this._index||(this._index=m(this._features,this._geometryType)),y(this._index,e)},n.removeById=function(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null},n.update=function(e,t){this.onUpdate(e,t)},t._createClass(e,[{key:"_features",get:function(){const e=[];return this._objectIdToFeature.forEach((t=>e.push(t))),e}},{key:"size",get:function(){return this._objectIdToFeature.size}}]),e}(),b=function(e){function n(n){var o;(o=e.call(this,n)||this).type="geoevent",o._dataReceiveEventEnabled=!1,o._level=0,o._updateInfo={websocket:0,client:0};const{outSR:r}=n,{geometryType:i,objectIdField:s,timeInfo:a,purgeOptions:d,source:l,spatialReference:p,serviceFilter:f,maxReconnectionAttempts:m,maxReconnectionInterval:y,updateInterval:b}=n.serviceInfo,v=new g(o._onUpdate.bind(t._assertThisInitialized(o)),i),I=new c.default(v,s,a,d),F=u.createConnection(l,p,r,i,f,m,y);o._store=v,o._manager=I,o._connection=F,o._quantize=_(i),o._handles=[o._connection.on("feature",(e=>o._onFeature(e))),o._connection.watch("connectionStatus",(e=>o.events.emit("connectionStatus",e))),o._connection.watch("errorString",(e=>o.events.emit("errorString",e)))];let T=performance.now();return o._updateIntervalId=setInterval((()=>{const e=performance.now(),t=e-T;if(t>h){T=e;const n=Math.round(o._updateInfo.client/(t/1e3)),r=Math.round(o._updateInfo.websocket/(t/1e3));o._updateInfo.client=0,o._updateInfo.websocket=0,o.events.emit("updateRate",{client:n,websocket:r})}n.canAcceptRequest()&&o._manager.checkForUpdates()}),b),o}t._inheritsLoose(n,e);var r=n.prototype;return r.destroy=function(){e.prototype.destroy.call(this),clearInterval(this._updateIntervalId),this._handles.forEach((e=>e.remove())),this._connection.destroy()},r._fetchDataTile=function(){},r.resume=function(){},r.enableEvent=function(e,t){"data-received"===e&&(this._dataReceiveEventEnabled=t)},r.subscribe=function(t){e.prototype.subscribe.call(this,t);const n=this._subscriptions.get(t.id);this._level=t.level;const o=this._getTileFeatures(t);this._onMessage({type:"append",id:t.key.id,addOrUpdate:o,end:!0}),n.didSend=!0},r.unsubscribe=function(t){e.prototype.unsubscribe.call(this,t)},r.forEachRequest=function(e,t){const n=this._subscriptions.get(e),{tile:r,signal:i}=n,s={type:"append",tile:r,id:e,addOrUpdate:this._getTileFeatures(r),end:!0};t(s,{signal:i}),n.requests.stream.entries.forEach((e=>{o.isSome(e)&&t(e,{signal:i})}))},r.createTileQuery=function(e){throw new Error("Service does not support tile  queries")},r.resend=async function(){this._subscriptions.forEach((e=>{const{tile:t}=e,n={type:"append",id:t.id,addOrUpdate:this._getTileFeatures(t),end:!0};this._onMessage(n)}))},r._getTileFeatures=function(e){const t=this._store.search(e).map((t=>this._quantize(t,e.transform)));return s.FeatureSetReaderJSON.fromOptimizedFeatures(t,this._serviceInfo.geometryType,e.transform)},r._onFeature=function(e){this._updateInfo.websocket++;try{this._dataReceiveEventEnabled&&this.events.emit("feature",e);const t=i.convertFromFeature(e,this._serviceInfo.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(t)}catch(t){}},r._onUpdate=function(e,t){o.isSome(e)&&(this._updateInfo.client+=e.length),this._subscriptions.forEach(((e,t)=>{e.didSend&&e.tile.level===this._level&&this._onMessage({type:"append",id:t,addOrUpdate:null,clear:!0,end:!1})})),this._subscriptions.forEach(((e,t)=>{if(!e.didSend||e.tile.level!==this._level)return;const n=e.tile,o={type:"append",id:t,addOrUpdate:this._getTileFeatures(n),remove:[],end:!0,status:d.UpdateToken.empty()};e.requests.stream.enqueue(o),this._onMessage(o)}))},t._createClass(n,[{key:"updating",get:function(){return!1}}]),n}(l.DataTileSource);e.GeoEventSource=b,Object.defineProperty(e,"__esModule",{value:!0})}));
