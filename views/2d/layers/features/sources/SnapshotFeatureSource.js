/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import"../../../../../core/has.js";import t from"../../../../../core/Logger.js";import{unwrapOrThrow as e,isSome as s,isNone as r}from"../../../../../core/maybe.js";import{throwIfAborted as o,after as a}from"../../../../../core/promiseUtils.js";import i from"../../../../../core/RandomLCG.js";import{BaseFeatureSource as n}from"./BaseFeatureSource.js";import{FeatureSetReaderIndirect as d}from"../support/FeatureSetReaderPBFIndirect.js";import{UpdateToken as h}from"../support/UpdateToken.js";const u=t.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource");function l(t,e,s){const r=t.getXHydrated(),o=t.getYHydrated(),a=e.getColumnForX(r),i=Math.floor(e.normalizeCol(a));return`${s}/${Math.floor(e.getRowForY(o))}/${i}`}function c(t,e){if(r(t))return null;const s=e.transform,o=t.getQuantizationTransform();if(r(o)){const[e,r]=s.scale,[o,a]=s.translate,i=-o/e,n=1/e,d=a/r,h=1/-r;return t.transform(i,d,n,h)}const[a,i]=o.scale,[n,d]=o.translate,[h,u]=s.scale,[l,c]=s.translate,g=a/h,p=(n-l)/h,_=i/u,m=(-d+c)/u;return t.transform(p,m,g,_)}class g extends n{constructor(t){super(t),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new i(1e3),this._store=t.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(t,e){super.update(t,e),this._hasAggregates=t.targets.aggregate}async resend(t=!1){if(await this._downloadPromise,this._invalidated||t){const t=e(this._schema.featureCount,"Expected featureCount to be defined");return this._invalidated=!1,this._subscriptions.forEach((t=>t.clear())),this._downloadPromise=this._download(t),void await this._downloadPromise}const s=this._queries.map((({query:t,reader:e})=>this._sendPatchQuery(t,e)));await Promise.all(s),this._subscriptions.forEach((t=>{t.requests.done.forEach((t=>this._onMessage(t.message)))}))}async refresh(){await this.resend(!0)}async _sendPatchQuery(t,e){const r=s(t.outFields)?t.outFields:[],a=this._queryInfo.outFields,i=a.filter((t=>!r.includes(t)));if(!i.length)return;const n=t.clone(),d=this._signal;n.returnGeometry=!1,n.returnCentroid=!1,n.outFields=i,t.outFields=a;const h=await this._queue.push({query:n,depth:0,signal:d});o({signal:d}),e.joinAttributes(h)}async _fetchDataTile(t){if(!this._downloadPromise){const t=e(this._schema.featureCount,"Expected featureCount to be defined");this._downloadPromise=this._download(t)}const s=this._store.search(t),r=this._subscriptions.get(t.key.id),o=s.length-1;for(let e=0;e<o;e++){const o=c(s[e],t),i={type:"append",id:t.id,addOrUpdate:o,end:!1,status:h.empty()};r.add({query:null,message:i}),this._hasAggregates||await a(1),this._onMessage(i)}const i=c(o>=0?s[o]:null,t),n=this._didSendEnd,d={type:"append",id:t.id,addOrUpdate:i,end:n,status:h.empty()};r.add({query:null,message:d}),this._onMessage(d)}async _download(t){try{await this.whenInitialized();const e=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;e.clear();const r=Math.ceil(t/this.pageSize),o=Array.from({length:r},((t,e)=>e)).sort(((t,e)=>this._random.getInt()-this._random.getInt())).map((t=>this._downloadPage(t,e,s)));await Promise.all(o),this._store.sweepFeatures(e,this._store.storage),this._store.sweepFeatureSets(s)}catch(e){u.error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",e)}this._sendEnd(),this._loading=!1}async _downloadPage(t,e,r){const a=this.pageSize,i={start:t*a,num:a,cacheHint:!0};s(this.maxRecordCountFactor)&&(i.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createQuery(i),d=this._signal,h=await this._queue.push({query:n,depth:t,signal:d});o({signal:d}),this._queries.push({query:n,reader:h}),this._store.insert(h),r.add(h.instance);const u=h.getCursor();for(;u.next();)e.set(u.getDisplayId());this._send(h)}_send(t){if(!this._subscriptions.size)return;let e=null;const o=new Map,a=new Set,i=new Map;this._subscriptions.forEach((t=>{const s=t.tile;o.set(s.key.id,null),e=s.tileInfoView,a.add(s.level);const{row:r,col:n}=s.key,d=`${s.level}/${r}/${n}`,h=i.get(d)??[];h.push(t),i.set(d,h)}));for(const s of a){const a=e.getLODInfoAt(s),n=t.getCursor();for(;n.next();){const t=l(n,a,s),e=n.getIndex();if(i.has(t))for(const s of i.get(t)){const t=s.tile.id;let a=o.get(t);r(a)&&(a=[],o.set(t,a)),a.push(e)}}}o.forEach(((e,r)=>{if(s(e)){const s=this._subscriptions.get(r),o={type:"append",id:r,addOrUpdate:c(d.from(t,e),s.tile),end:!1,status:h.empty()};s.add({query:null,message:o}),this._onMessage(o)}}))}_sendEnd(){this._subscriptions.forEach((t=>{const e={type:"append",id:t.tile.id,addOrUpdate:null,end:!0,status:h.empty()};t.add({query:null,message:e}),this._onMessage(e)})),this._didSendEnd=!0}}export{g as SnapshotFeatureSource};
