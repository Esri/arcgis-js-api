/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../core/maybe","../../../../core/promiseUtils","../../../../TimeExtent","../../../../core/accessorSupport/diffUtils","../../../../tasks/support/Query","../../engine/webgl/definitions","./sources/createSource","./support/tileUtils","./support/UpdateToken"],(function(e,t,i,s,n,r,o,a,u,l,c,h){"use strict";let d=0,p=function(){function e(e,t){this.didSend=!1,this.dataTileCount=0,this.update=h.UpdateToken.all(),this._abortController=new AbortController,this.invalid=!1,this.displayTile=e,this._pixelBuffer=t,this.partitions=_(e,t)}var i=e.prototype;return i.setUpdate=function(e,t){this.update=e,this.dataTileCount=0,t!==this._pixelBuffer&&(this._pixelBuffer=t,this.partitions=_(this.displayTile,t)),e.mesh&&(this.didSend=!1)},i.abort=function(){this._abortController.abort()},t._createClass(e,[{key:"signal",get:function(){return this._abortController.signal}}]),e}(),f=function(){function e(e,t,i){this.resolved=!1,this.tile=t,this.offset=e,this.extent=i}return e.prototype.reset=function(){this.resolved=!1},e}();function _(e,t){const i=[];if(i.push(new f([0,0],e,null)),0===t)return i;const s=Math.min(t,u.TILE_SIZE),n=u.TILE_SIZE;return i.push(new f([-n,-n],c.getPow2NeighborTile(e,-1,-1),[n-s,n-s,n,n])),i.push(new f([0,-n],c.getPow2NeighborTile(e,0,-1),[0,n-s,n,n])),i.push(new f([n,-n],c.getPow2NeighborTile(e,1,-1),[0,n-s,s,n])),i.push(new f([-n,0],c.getPow2NeighborTile(e,-1,0),[n-s,0,n,n])),i.push(new f([n,0],c.getPow2NeighborTile(e,1,0),[0,0,s,n])),i.push(new f([-n,n],c.getPow2NeighborTile(e,-1,1),[n-s,0,n,s])),i.push(new f([0,n],c.getPow2NeighborTile(e,0,1),[0,0,n,s])),i.push(new f([n,n],c.getPow2NeighborTile(e,1,1),[0,0,s,s])),i}let y=function(){function e(e,t,i){this.type="remote",this._pendingEdits=new Set,this._queryInfo=null,this._subscriptions={display:new Map},this._invalid={outFields:!1,queryFilterParameters:!1};const s=this._onDataTileRequest.bind(this);this._source=l.createSource(e,t,i,s,(()=>this.canAcceptPatch())),this._serviceInfo=e,this._geometryType=e.geometryType,this._outSR=t}var u=e.prototype;return u.destroy=function(){this._getSubscriptions().map((({displayTile:e})=>this.unsubscribe(e))),this._source.destroy()},u.enableEvent=function(e,t){this._source.enableEvent(e,t)},u.setViewState=function(e){this._source.setViewState(e)},u.update=function(e,t){var s,n,a,u;const l=this._serviceInfo.fields.length,c=null!=(s=null==(n=this._schema)?void 0:n.outFields)?s:[],h=null!=(a=null==(u=this._schema)?void 0:u.pixelBuffer)?a:0,d=t.outFields.filter((e=>-1===c.indexOf(e))),p=[...c,...d],f=0===t.pixelBuffer?0:Math.max(t.pixelBuffer,h);t.pixelBuffer=f,t.outFields=p.length>=.75*l?["*"]:p,t.outFields.sort();const _=o.diff(this._schema,t);if(this._subscriptions.display.forEach((t=>{t.invalid&&(e.queryFilter=!0)})),!_)return;const y=this._schema&&o.hasDiff(_,"outFields"),b=this._schema&&o.hasDiff(_,"pixelBuffer"),g=this._schema&&o.hasDiffAny(_,["definitionExpression","gdbVersion","historicMoment"]);i("esri-2d-update-debug")&&console.debug("Applying Update - Source:",_);const m={returnCentroid:"esriGeometryPolygon"===this._geometryType,returnGeometry:!0,outFields:t.outFields,outSpatialReference:this._outSR,orderByFields:[`${this._serviceInfo.objectIdField} ASC`],where:t.definitionExpression||"1=1",gdbVersion:t.gdbVersion,historicMoment:t.historicMoment?new Date(t.historicMoment):null,timeExtent:r.fromJSON(t.timeExtent)};e.source=!0,b&&(e.why.mesh.push("Pixel buffer changed"),e.mesh=!0),g&&(e.why.mesh.push("Layer filter changed"),e.why.source.push("Layer filter changed"),e.mesh=!0,e.queryFilter=!0,this._invalid.queryFilterParameters=!0),y&&(e.why.source.push("Layer required fields changed"),this._invalid.outFields=!0),this._schema=t,this._source.update(m),this._queryInfo=m},u.subscribe=function(e){this._subscriptions.display.has(e.id)||this._subscribeDisplayTile(e)},u.unsubscribe=function(e){if(!this._subscriptions.display.has(e.id))return;const t=this._subscriptions.display.get(e.id);this._subscriptions.display.delete(e.id),this._source.unsubscribe(e),t.abort()},u.forEachRequest=function(e,t){this._source.forEachRequest(e,t)},u.query=function(e){return this._source.query(e)},u.createQuery=function(){return new a({...this._queryInfo})},u.createTileQuery=function(e){if("stream"===this._serviceInfo.type)throw new Error("Service does not support tile  queries");const t=this.createQuery();return t.quantizationParameters=e.getQuantizationParameters(),t.resultType="tile",t.geometry=e.extent,"esriGeometryPolyline"===this._serviceInfo.geometryType&&(t.maxAllowableOffset=e.resolution),this._serviceInfo.capabilities.query.supportsQuantization||(t.quantizationParameters=null,t.maxAllowableOffset=e.resolution),t},u.invalidate=function(){this._subscriptions.display.forEach((e=>e.invalid=!0))},u.forEachPendingEdit=function(e){this._getSubscriptions().some((({invalid:e})=>e))?this._pendingEdits.forEach(e):this._pendingEdits.clear()},u.onEdits=async function(e){const t=e.addedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),i=e.updatedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),s=e.deletedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),r=[...t,...i];s.forEach((e=>{this._pendingEdits.has(e)&&this._pendingEdits.delete(e)})),r.forEach((e=>this._pendingEdits.add(e)));const o=this._getSubscriptions().map((({displayTile:e})=>e)).map((e=>{const t=this.createTileQuery(e);return t.objectIds=r,{tile:e,query:t}})).map((async({tile:e,query:t})=>({tile:e,result:await this._source.query(t)})));(await n.all(o)).forEach((({tile:e,result:t})=>{const n=this._subscriptions.display.get(e.key.id);if(!n)return;const r=n.signal,o=h.UpdateToken.all();this.onDisplayTilePatch({type:"update",id:e.key.id,version:d++,update:o,addOrUpdate:t,remove:[...i,...s],end:!0,noData:!1},{signal:r})})),this.invalidate()},u.resubscribe=async function(e,t=!1){const i=this._schema.pixelBuffer;this._subscriptions.display.forEach((t=>t.setUpdate(e,i)));let s=!1;if(this._subscriptions.display.forEach((e=>{e.invalid&&(s=!0)})),this._invalid.outFields&&(this._invalid.outFields=!1),t||this._invalid.queryFilterParameters||s){const e=this._getSubscriptions().map((({displayTile:e})=>e));e.forEach((e=>this.unsubscribe(e))),e.forEach((e=>this.subscribe(e))),this._source.resume(),this._invalid.queryFilterParameters=!1}else e.mesh?await this._source.resend({dataTileOnly:!1}):await this._source.resend({dataTileOnly:!0})},u.pause=function(){this._source.pause()},u.resume=function(){this._source.resume()},u._getSubscriptions=function(){const e=[];return this._subscriptions.display.forEach((t=>{e.push(t)})),e},u._subscribeDisplayTile=function(e){const t=new p(e,this._schema.pixelBuffer);this._subscriptions.display.set(e.id,t),this._source.subscribe(e);for(const i of t.partitions){const t=i.tile,n=this._source.get(t.id);if(s.isSome(n))for(const t of n.requests.done)this._onPartitionMessage(e.id,i,t.request,"new")}},u._onDataTileRequest=function(e,t,i){const s=this._subscriptions.display.get(e.id);if(i&&i.dataTileOnly){for(const i of s.partitions)if(i.tile.id===e.id){this._onPartitionMessage(e.id,i,e,t);break}}else{for(const i of s.partitions)if(i.tile.id===e.id){this._onPartitionMessage(e.id,i,e,t);break}this._subscriptions.display.forEach(((i,s)=>{if(s!==e.id)for(const n of i.partitions)if(n.tile.id===e.id){this._onPartitionMessage(s,n,e,t);break}}))}},u._onPartitionMessage=function(e,t,i,n){const r=s.andThen(i.features,(e=>function(e,t){if(s.isNone(t.extent))return e;const{offset:i,extent:n}=t,[r,o,a,u]=n,[l,c]=i;return e.extent(r,o,a,u).transform(l,c)}(e,t))),o=this._subscriptions.display.get(e),a=o.signal;let u=o.update;o.didSend||(n="replace"),s.isSome(r)&&!r.seen&&(u=h.UpdateToken.all(),r.seen=!0);let l=!1;i.end&&(t.resolved=!0,l=e===t.tile.id),o.didSend=!0,this.onDisplayTilePatch({type:n,id:e,version:d++,update:u,addOrUpdate:r,remove:i.remove||[],noData:i.noData,end:l},{signal:a})},t._createClass(e,[{key:"updating",get:function(){return this._source.updating||this._getSubscriptions().some((e=>!e.didSend))}},{key:"isStream",get:function(){return"geoevent"===this._source.type}},{key:"sourceEvents",get:function(){return"geoevent"===this._source.type?{type:"geoevent",events:this._source.events}:{type:"feature",events:this._source.events}}}]),e}();e.Source2D=y,Object.defineProperty(e,"__esModule",{value:!0})}));
