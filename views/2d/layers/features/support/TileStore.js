/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/has","../../../../../core/Evented","../../../tiling/TileKey","../../../tiling/TileCoverage","../../../../../chunks/rbush","./Tile"],(function(e,t,s,i,n,o,h){"use strict";const d={added:[],removed:[]},l=new Set,r=new i(0,0,0,0);return function(s){function i(e){var i;return(i=s.call(this)||this)._tiles=new Map,i._index=o.rbush(9,t("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),i.tiles=[],i.tileScheme=e,i}e._inheritsLoose(i,s);var u=i.prototype;return u.destroy=function(){this.clear()},u.clear=function(){this.tiles.length=0,this._tiles.clear(),this._index.clear()},u.has=function(e){return this._tiles.has(e)},u.get=function(e){return this._tiles.get(e)},u.findByKey=function(e){return this._tiles.get(e.id)},u.intersections=function(e,t){const s="string"==typeof e?this.get(e):e;if(!s)return[];const i=t*s.resolution,n=s.bounds[0]-i,o=s.bounds[1]-i,h=s.bounds[2]+i,d=s.bounds[3]+i,l=[];for(const e of this._index.search({minX:n,minY:o,maxX:h,maxY:d})){const t=e.bounds.slice();t[0]=Math.max(t[0],n),t[1]=Math.max(t[1],o),t[2]=Math.min(t[2],h),t[3]=Math.min(t[3],d),t[2]-t[0]>0&&t[3]-t[1]>0&&l.push({bounds:t,tile:e})}return l},u.boundsIntersections=function(e){return this._index.search({minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]})},u.updateTiles=function(e){const t={added:[],removed:[]};for(const s of e.added)if(!this.has(s)){const e=new h.Tile(this.tileScheme,s);this._tiles.set(s,e),this._index.insert(e),t.added.push(e)}for(const s of e.removed)if(this.has(s)){const e=this.get(s);this._tiles.delete(s),this._index.remove(e),t.removed.push(e)}this.tiles.length=0,this._tiles.forEach((e=>this.tiles.push(e))),(t.added.length||t.removed.length)&&this.emit("update",t)},u.setViewState=function(e){const t=this.tileScheme.getTileCoverage(e,0);if(!t)return;const{spans:s,lodInfo:i}=t,{level:o}=i;if(s.length>0)for(const{row:e,colFrom:t,colTo:n}of s)for(let s=t;s<=n;s++){const t=r.set(o,e,i.normalizeCol(s),i.getWorldForColumn(s)).id;if(l.add(t),!this.has(t)){const e=new h.Tile(this.tileScheme,t);this._tiles.set(t,e),this._index.insert(e),this.tiles.push(e),d.added.push(e)}}for(let e=this.tiles.length-1;e>=0;e--){const t=this.tiles[e];l.has(t.id)||(this._tiles.delete(t.id),this.tiles.splice(e,1),this._index.remove(t),d.removed.push(t))}(d.added.length||d.removed.length)&&this.emit("update",d),n.pool.release(t),l.clear(),d.added.length=0,d.removed.length=0},i}(s)}));
