/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/Error","../../../../../rest/query/operations/pbfFeatureServiceParser"],(function(e,t,s){"use strict";const n=268435455;let r=function(){function e(){this.fieldMap=new Map,this.fields=[],this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}var t=e.prototype;return t.hasField=function(e){return this.fieldMap.has(e)},t.isDateField=function(e){return(null!=e&&this.fieldMap.get(e)?.isDate)??!1},t.getFieldIndex=function(e){return null!=e?this.fieldMap.get(e)?.index:void 0},e}();function a(e){const t=1,n=2,r=e.asUnsafe(),a=r.getLength(),i=r.pos()+a,o={name:"",isDate:!1};for(;r.pos()<i&&r.next();)switch(r.tag()){case t:o.name=r.getString();break;case n:"esriFieldTypeDate"===s.parseFieldType(r.getEnum())&&(o.isDate=!0);break;default:r.skip()}return o}function i(e){return e.toLowerCase().trim()}function o(e,o,f=!1){const c=1,d=3,u=9,l=12,g=13,p=15,h=e.asUnsafe(),b=h.pos(),m=new r;let y=0,w=0;const k=1,x=2,I=4,F=3;let L=null,S=null,A=null,C=!1;for(;h.next();)switch(h.tag()){case c:L=h.getString();break;case d:S=h.getString();break;case l:A=h.processMessage(s.parseTransform);break;case u:if(m.exceededTransferLimit=h.getBool(),m.exceededTransferLimit){m.offsets.geometry=f?new Float64Array(8e3):new Int32Array(8e3),m.centroid=f?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<m.centroid.length;e++)m.centroid[e]=n}break;case g:{const t=a(e),s=t.name,n=i(t.name),r={fieldName:s,index:y++,isDate:t.isDate};m.fields.push(r),m.fieldMap.set(t.name,r),m.fieldMap.set(n,r);break}case p:{const e=h.getLength(),t=h.pos()+e;if(!m.exceededTransferLimit){const e=m.offsets.geometry,t=m.centroid;e.push(0),t.push(n),t.push(n)}!C&&m.exceededTransferLimit&&(C=!0,m.offsets.attributes=f?new Float64Array(8e3*y):new Uint32Array(8e3*y));let s=w*y;for(;h.pos()<t&&h.next();)switch(h.tag()){case k:{if(C)m.offsets.attributes[s++]=h.pos();else{m.offsets.attributes.push(h.pos())}const e=h.getLength();h.skipLen(e);break}case x:if(o){const e=h.getLength(),t=h.pos()+e;for(;h.pos()<t&&h.next();)switch(h.tag()){case F:{h.getUInt32();const e=h.getSInt64(),t=h.getSInt64();m.centroid[2*w]=e,m.centroid[2*w+1]=t;break}default:h.skip()}}else{m.offsets.geometry[w]=h.pos();const e=h.getLength();m.vertexCount+=e,h.skipLen(e)}break;case I:{const e=h.getLength(),t=h.pos()+e;for(;h.pos()<t&&h.next();)switch(h.tag()){case F:{h.getUInt32();const e=h.getSInt64(),t=h.getSInt64();m.centroid[2*w]=e,m.centroid[2*w+1]=t;break}default:h.skip()}break}default:h.skip()}w++,m.hasFeatures=!0;break}default:h.skip()}const M=L||S;if(!M)throw new t("FeatureSet has no objectId or globalId field name");return m.featureCount=w,m.fieldCount=y,m.objectIdFieldIndex=m.getFieldIndex(M),m.transform=A,m.displayIds=new Uint32Array(m.featureCount),m.groupIds=new Uint16Array(m.featureCount),h.move(b),m}e.FeatureSetHeader=r,e.parseHeader=o,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
