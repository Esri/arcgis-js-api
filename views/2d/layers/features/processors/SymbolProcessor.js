/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/Error","../../../../../core/has","../../../../../core/Logger","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/accessorSupport/diffUtils","../../../../../geometry/SpatialReference","../../../engine/webgl/Utils","../../../engine/webgl/cpuMapped/DisplayRecordReader","../../../engine/webgl/mesh/MeshData","../../../engine/webgl/mesh/factories/WGLMeshFactory","../../../engine/webgl/mesh/templates/WGLTemplateStore","../../../engine/webgl/util/BidiText","../../../engine/webgl/util/Matcher","../textUtils","./BaseProcessor","../support/AttributeStore"],(function(e,t,r,s,i,n,a,o,l,c,u,d,f,h,p,g,y,m,_,b,S,T){"use strict";function v(e,t){return(!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}function w(e){const t=e.message,r={message:{data:{},tileKey:t.tileKey},transferList:new Array};for(const s in t.data){const e=t.data[s];if(r.message.data[s]=null,n.isSome(e)){const t=e.stride,i=e.indices.slice(0),a=e.vertices.slice(0),o=e.records.slice(0),l={stride:t,indices:i,vertices:a,records:o,metrics:n.andThen(e.metrics,(e=>e.slice(0)))};r.transferList.push(i,a,o),r.message.data[s]=l}}return r}i.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");let D=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).type="symbol",e._matchers={feature:null,aggregate:null},e._bufferData=new Map,e}e._inheritsLoose(r,t);var i=r.prototype;return i.initialize=function(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])},i.destroy=function(){},i.update=function(){var t=e._asyncToGenerator((function*(e,t){const r=t.schema.processors[0];if("symbol"!==r.type)return;const i=u.diff(this._schema,r);u.hasDiff(i,"mesh")&&(s("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",i),e.mesh=!0,e.why.mesh.push("Symbology changed"),this._schema=r,this._factory=this._createFactory(r),this._factory.update(r,this.tileStore.tileScheme.tileInfo))}));function r(e,r){return t.apply(this,arguments)}return r}(),i.onTileMessage=function(e,t,r,s){return a.throwIfAborted(s),this._onTileData(e,t,r,s)},i.onTileClear=function(e){const t={clear:!0};return this._bufferData.delete(e.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t})},i.onTileError=function(e,t,r){const s=r.signal,i={tileKey:e.id,error:t};return this.remoteClient.invoke("tileRenderer.onTileError",i,{signal:s})},i.onTileUpdate=function(e){for(const t of e.removed){if(!this._bufferData.has(t.key.id))continue;this._bufferData.get(t.key.id).forEach((e=>{const t=new Set;f.forEachGeometryType((r=>{const s=e.message.data[r];if(n.isSome(s)){const e=h.DisplayRecordReader.from(s.records).getCursor();for(;e.next();)t.add(e.id)}}));const r=e.message.tileKey,s={type:"update",addOrUpdate:null};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:r,data:s})})),this._bufferData.delete(t.key.id)}for(const t of e.added)this._bufferData.forEach((e=>{for(const r of e)r.message.tileKey===t.id&&this._updateTileMesh("append",t,w(r),[],!1,!1,null)}))},i._addBufferData=function(e,t){this._bufferData.has(e)||this._bufferData.set(e,[]),this._bufferData.get(e).push(w(t))},i._createFactory=function(e){const{geometryType:t,objectIdField:r,fields:s}=this.service,i=(e,t)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",e,t),a={geometryType:t,fields:s,spatialReference:d.fromJSON(this.spatialReference)},o=new y.WGLTemplateStore(i,this.tileStore.tileScheme.tileInfo),{matcher:l,aggregateMatcher:c}=e.mesh;return this._store=o,this._matchers.feature=_.createMatcher(l,o,a),this._matchers.aggregate=n.andThen(c,(e=>_.createMatcher(e,o,a))),new g.WGLMeshFactory(t,r,o)},i._onTileData=function(){var t=e._asyncToGenerator((function*(e,t,r,s){const{type:i,addOrUpdate:o,remove:l}=t,c=t.end;if(!o){const t={type:i,addOrUpdate:null,remove:l,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},s)}const u=this._processFeatures(e,o,r,s);try{const r=yield u;if(n.isNone(r)){const t={type:i,addOrUpdate:null,remove:l,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},s)}for(const t of r)e.key.id!==t.message.tileKey&&this._addBufferData(e.key.id,t);yield a.all(r.map((r=>{const n=e.key.id===r.message.tileKey,a=n?t.remove:[],o=n&&t.end;return this._updateTileMesh(i,e,r,a,o,t.clear,s.signal)})))}catch(d){this._handleError(e,d,s)}}));function r(e,r,s,i){return t.apply(this,arguments)}return r}(),i._updateTileMesh=function(){var t=e._asyncToGenerator((function*(e,t,r,s,i,o,l){const c=e,u=r.message.tileKey;u!==t.key.id&&(i=!1);const d=n.andThen(r,(e=>e.message)),f=n.andThen(r,(e=>e.transferList))||[],h={type:c,addOrUpdate:d,remove:s,clear:!1,end:i},p={transferList:n.unwrap(f)||[],signal:l};return a.throwIfAborted(p),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:u,data:h},p)}));function r(e,r,s,i,n,a,o){return t.apply(this,arguments)}return r}(),i._processFeatures=function(){var t=e._asyncToGenerator((function*(e,t,r,s){if(n.isNone(t)||!t.hasFeatures)return null;const i={transform:e.transform,hasZ:!1,hasM:!1},o=this._factory,l={viewingMode:"",scale:e.scale},c=yield this._matchers.feature,u=yield this._matchers.aggregate;a.throwIfAborted(s);const d=this._getLabelInfos(e,t);return yield o.analyze(t.getCursor(),c,u,i,l),a.throwIfAborted(s),this._writeFeatureSet(e,t,i,d,o,r)}));function r(e,r,s,i){return t.apply(this,arguments)}return r}(),i._writeFeatureSet=function(e,t,r,s,i,a){const o=t.getSize(),l="simple"===this._schema.mesh.matcher.type&&this._schema.mesh.matcher.isDotDensity,c=new p.MeshData(e.key.id,{features:o,records:o,metrics:0},l,a,!0),u={viewingMode:"",scale:e.scale},d=t.getCursor();for(;d.next();)try{const t=d.getDisplayId(),a=n.isSome(s)?s.get(t):null;i.writeCursor(c,d,r,u,e.level,a)}catch(h){}const f=e.tileInfoView.tileInfo.isWrappable;return c.serialize(f)},i._handleError=function(e,t,r){if(!a.isAbortError(t)){const s={tileKey:e.id,error:t.message};return this.remoteClient.invoke("tileRenderer.onTileError",s,{signal:r.signal})}},i._getLabelingSchemaForScale=function(e){const t=this._schema.mesh.labels;if(n.isNone(t))return null;if("subtype"===t.type){const r={type:"subtype",classes:{}};let s=!1;for(const i in t.classes){const n=t.classes[i].filter((t=>v(t,e.scale)));s=s||!!n.length,r.classes[i]=n}return s?r:null}const r=t.classes.filter((t=>v(t,e.scale)));return r.length?{type:"simple",classes:r}:null},i._getLabels=function(e,t){if("subtype"===t.type){var r;const s=this.service.subtypeField,i=n.unwrapOrThrow(s,"Expected to find subtype Field"),a=e.readAttribute(i);return null==a?[]:null!=(r=t.classes[a])?r:[]}return t.classes},i._getLabelInfos=function(e,t){const r=this._getLabelingSchemaForScale(e);if(n.isNone(r))return null;const s=new Map,i=t.getCursor();for(;i.next();){const e=i.getDisplayId(),t=[],n=T.isAggregateId(e),a=n&&1!==i.readAttribute("cluster_count")?"aggregate":"feature",o=this._getLabels(i,r);for(const r of o){if(r.target!==a)continue;const s=i.getStorage(),o=n&&"feature"===a?s.getComputedStringAtIndex(i.readAttribute("referenceId"),r.fieldIndex):s.getComputedStringAtIndex(e,r.fieldIndex);if(!o)continue;const l=m.bidiText(o.toString()),c=l[0],u=l[1];this._store.getMosaicItem(r.symbol,b.codepoints(c)).then((e=>{t[r.index]={glyphs:e.glyphMosaicItems,rtl:u,index:r.index}}))}s.set(e,t)}return s},e._createClass(r,[{key:"supportsTileUpdates",get:function(){return!0}}]),r}(S);return D=t.__decorate([c.subclass("esri.views.2d.layers.features.processors.SymbolProcessor")],D),D}));
