/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../core/Error","../../../../core/has","../../../../core/Logger","../../../../core/maybe","../../../../core/screenUtils","../../../../core/sql","../../../../core/accessorSupport/diffUtils","../../../../layers/support/labelingInfo","../../engine/webgl/enums","../../engine/webgl/Utils","../../engine/webgl/techniques/utils","../../engine/webgl/util/vvFlagUtils","./createSymbolSchema","./support/pixelBuffering","./support/rendererUtils","../support/clusterUtils","../support/util"],(function(e,t,r,i,n,l,s,o,a,u,d,p,y,c,f,m,g,b){"use strict";const S=i.getLogger("esri.views.2d.layers.features.schemaUtils"),x="ValidationError";function h(e){return e}function v(e,t){let r=0,i=0,l=u.WGLSymbologyType.DEFAULT;if(n.isSome(e)){if(i=f.getPtMaxVVSize(e,t),"visualVariables"in e&&(r=y.getVVFlags(e.visualVariables||[]),"dot-density"===e.type&&(l=u.WGLSymbologyType.DOT_DENSITY)),"heatmap"===e.type&&(l=u.WGLSymbologyType.HEATMAP),"dictionary"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:u.WGLSymbologyType.DEFAULT};if("pie-chart"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:u.WGLSymbologyType.PIE_CHART};if(l!==u.WGLSymbologyType.DOT_DENSITY&&l!==u.WGLSymbologyType.HEATMAP){const t=e.getSymbols();"backgroundFillSymbol"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);let r=!0,i=!0;for(const e of t)if("cim"===e.type&&(i=!1),"simple-fill"===e.type||"picture-fill"===e.type){const t=e.outline,n=t&&"none"!==t.style&&"solid"!==t.style,l="simple-fill"===e.type&&"none"!==e.style&&"solid"!==e.style;n&&(r=!1),("picture-fill"===e.type||l||n)&&(i=!1)}r?l=i?u.WGLSymbologyType.OUTLINE_FILL_SIMPLE:u.WGLSymbologyType.OUTLINE_FILL:i&&(l=u.WGLSymbologyType.SIMPLE)}}return{vvFlags:r,maxVVSize:i,symbologyType:l}}let T=null;function w(e){if(r("esri-2d-update-debug")){const t=E(e,!0);console.debug("Created new schema",t),console.debug("Schema diff",o.diff(T,t)),T=t}return E(e)}function E(e,t=!1){try{const r=G(e,t),i=U(e),l={};r.map((t=>F(l,e,t)));const o=n.isSome(e.subtypeCode)?`${e.subtypeField} = ${e.subtypeCode}`:null,a=n.unwrap(s.sqlAnd(e.definitionExpression,o));return{source:{definitionExpression:a,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:e.historicMoment?.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:e.timeExtent?.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:r,tileRenderer:i,targets:l}}catch(r){if(r.fieldName===x)return S.error(r),null;throw r}}function F(e,r,i){switch(i.target){case"feature":return void L(e,V(r),i);case"aggregate":{if(!("featureReduction"in r))return;const n=r.featureReduction;switch(n?.type){case"selection":throw new t(x,"Mapview does not support `selection` reduction type",n);case"binning":return L(e,V(r),i),void z(e,n,r.fields.map((e=>e.toJSON())),i);case"cluster":return L(e,V(r),i),void N(e,n,r.fields.map((e=>e.toJSON())),i)}}}}function I(e,t){for(const r in t){const i=t[r];if(i.target!==e.name)continue;const n=e.attributes[r];if(n?.context){const e=n.context;e.mesh=e.mesh||i.context?.mesh,e.storage=e.storage||i.context?.storage}else e.attributes[r]=i}return e}function V(e){return[n.unwrap(e.filter)?.toJSON()??null,n.unwrap(n.unwrap(e.featureEffect)?.filter)?.toJSON()??null]}function L(e,t,r){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),I(e.feature,r.attributes.fields),e}function O(e,r){const{onStatisticExpression:i,onStatisticField:n,statisticType:l}=e;switch(l){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(i){const{returnType:r}=i;return r?"string"===r?"esriFieldTypeString":"esriFieldTypeDouble":(S.error(new t(x,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}const l=r.find((e=>e.name===n));return l?l.type:(S.error(new t(x,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}}}function z(e,t,r,i){return e.aggregate||(e.aggregate={name:"aggregate",type:"bin",filters:null,input:"feature",params:{fixedBinLevel:t.fixedBinLevel,fields:(t.fields??[]).map((e=>({...e.toJSON(),type:O(e,r)})))},attributes:{}}),I(e.aggregate,i.attributes.fields),e}function N(e,t,r,i){return e.aggregate||(e.aggregate={name:"aggregate",type:"cluster",input:"feature",filters:null,attributes:{},params:{clusterRadius:l.pt2px(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(l.pt2px(t.clusterMaxSize)/64),fields:(t.fields??[])?.map((e=>({...e.toJSON(),type:O(e,r)})))}}),I(e.aggregate,i.attributes.fields),e}function M(e,t){return t.field?R(e,{...t,type:"field",field:t.field}):t.valueExpression?R(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:void 0,fieldIndex:void 0}}function R(e,t){switch(t.type){case"expression":{const r=h(t.valueExpression);if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"label-expression":{const r=h(JSON.stringify(t.label));if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"field":{const r=t.field;return"aggregate"===t.target&&e.fields[r]||(e.fields[r]={...t,name:r}),{field:r}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function G(e,t=!1){const r=new Array;let i=0;return r.push(P(e,i++,t)),r}function A(e,t,r,i,n,l=!1){const s=R(e,{type:"label-expression",target:r,context:{mesh:!0},resultType:"string",label:{labelExpression:t.labelExpression,labelExpressionInfo:t.labelExpressionInfo?{expression:t.labelExpressionInfo.expression}:null,symbol:!!t.symbol,where:t.where}}),{fieldIndex:o}=s;return{...c.createSymbolSchema(t,n,l),fieldIndex:o,target:r,index:i}}function D(e,r,i){const n="featureReduction"in r&&r.featureReduction;if(!n)return{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};const l="aggregate",s=[];let o=null,u=b.toJSONGeometryType(r.geometryType),d=[],p=null;if(n)switch(n.type){case"selection":return S.error(new t(x,"Mapview does not support `selection` reduction type",n)),{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};case"cluster":case"binning":if(s.push(...n.fields??[]),"cluster"===n.type?u="esriGeometryPoint":"binning"===n.type&&(u="esriGeometryPolygon"),n.renderer&&!n.renderer.authoringInfo?.isAutoGenerated){if("cluster"===n.type){const{renderer:e}=g.injectDynamicLevelDependentSizeVisualVariable(n.renderer,n,null);p=e}else p=n.renderer;const t=v(n.renderer,n);o=q(e,l,n.renderer,t,i),d=n&&n.labelsVisible&&n.labelingInfo||[]}else if("cluster"===n.type){if(p=g.createClusterRenderer(s,r.renderer,n,null,!0),n.symbol){const e=v(p,n);o={type:"simple",symbol:c.createSymbolSchema(n.symbol,e,i),symbologyType:e.symbologyType}}d=n&&n.labelsVisible&&n.labelingInfo||[]}}k(e,s);return{labels:a.validateLabelingInfo(d,"binning"===n.type?"esriGeometryPolygon":u),matcher:o,fields:s,rendererOverride:p}}function P(e,r,i=!1){const l={indexCount:0,fields:{}},s="featureReduction"in e?e.featureReduction??void 0:void 0,o=s?"aggregate":"feature";if("sublayers"in e){const r={type:"subtype",subtypeField:e.subtypeField,renderers:{},symbologyType:u.WGLSymbologyType.DEFAULT},s={type:"subtype",mapping:{},target:"feature",subtypeField:e.subtypeField},a={type:"subtype",classes:{}},d={type:"symbol",target:"feature",aggregateFields:[],attributes:l,storage:s,mesh:{matcher:r,aggregateMatcher:null,labels:a,sortKey:null}},p=new Set;let c=0;for(const{renderer:f,subtypeCode:m,labelingInfo:g,labelsVisible:b}of e.sublayers){let e=0;"visualVariables"in f&&f.visualVariables&&(f.visualVariables.some((e=>"rotation"!==e.type))&&S.warnOnce("SubtypeGroupLayer currently only supports rotation visualVariables. All other visualVariable types will be ignored."),e=y.getVVFlags(f.visualVariables.filter((e=>"size"!==e.type))));const d={symbologyType:u.WGLSymbologyType.DEFAULT,vvFlags:e,maxVVSize:0},h=q(l,o,f,d,i),v=C(l,o,f),T=b&&g;if("dictionary"===h.type)throw new t(x,"Dictionary renderer is not supported in subtype layers");if("subtype"===h.type)throw new t(x,"Nested subtype renderers is not supported");if(n.isSome(v)&&"subtype"===v.type)throw new t(x,"Nested subtype storage is not supported");if(n.isSome(v)&&n.isSome(v.attributeMapping))throw new t(x,"Non-visual-variable attributes are not supported in subtype layers");if("heatmap"===h.type)throw new t(x,"Heatmaps are not supported in subtype layers");if("pie-chart"===h.type)throw new t(x,"Pie-charts are not supported in subtype layers");if(p.has(m))throw new t(x,"Subtype codes for sublayers must be unique");p.add(m),r.renderers[m]=h,s.mapping[m]=v,T&&(a.classes[m]=T.map((e=>A(l,e,"feature",c++,d,i))))}return d}if("heatmap"===e.renderer?.type&&"raster"===m.getSupportedHeatmapRenderer()){const{radius:t,fieldOffset:r,field:i}=e.renderer;return{type:"heatmap",aggregateFields:[],attributes:l,target:o,storage:null,mesh:{radius:t,fieldOffset:r,field:M(l,{target:o,field:i,resultType:"numeric"}).field}}}const d=D(l,e,i),p=b.toJSONGeometryType(e.geometryType),c=d.rendererOverride??e.renderer,f=v(c,s),g=q(l,o,c,f,i),h=C(l,o,c),T=B(l,e.orderBy,e.renderer,s),w=e.labelsVisible&&e.labelingInfo||[],E=a.validateLabelingInfo(w,p);let F=0;const I=[...E.map((e=>A(l,e,"feature",F++,f,i))),...d.labels.map((e=>A(l,e,"aggregate",F++,f,i)))];return{type:"symbol",target:o,attributes:l,aggregateFields:d.fields,storage:h,mesh:{matcher:g,labels:{type:"simple",classes:I},aggregateMatcher:d.matcher,sortKey:T}}}function U(e){return"heatmap"===e.renderer?.type&&"raster"===m.getSupportedHeatmapRenderer()?{type:"heatmap"}:{type:"symbol"}}function B(e,r,i,l){if(n.isSome(l))return null;if(n.isSome(r)&&r.length){r.length>1&&S.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${r.length}. All but the first will be discarded`);const i=r[0],n="ascending"===i.order?"asc":"desc";if(i.field)return{field:i.field,order:n};if(i.valueExpression){return{fieldIndex:R(e,{type:"expression",target:"feature",valueExpression:i.valueExpression,resultType:"numeric"}).fieldIndex,order:n}}return S.error(new t(x,"Expected to find a field or valueExpression for OrderByInfo",i)),null}if(n.isSome(i)&&"unique-value"===i.type&&i.orderByClassesEnabled){return{byRenderer:!0,order:"asc"}}return null}function k(e,t){const r={mesh:!0,storage:!0};for(const i of t){const{name:t,onStatisticField:n,onStatisticExpression:l,statisticType:s}=i;let o,a;const u="numeric",d="feature";if(l){a=R(e,{type:"expression",target:d,valueExpression:l.expression,resultType:u}).fieldIndex}else{o=R(e,{type:"field",target:d,field:n,resultType:u}).field}R(e,{type:"statistic",target:"aggregate",name:t,context:r,inField:o,inFieldIndex:a,statisticType:s})}}function C(e,t,r){let i;switch(r.type){case"simple":case"class-breaks":case"unique-value":case"dictionary":i={visualVariables:!0,attributes:null};break;default:i=p.getTechniqueFromRenderer(r).getStorageSpec(r)}return J(e,t,i,r)}function J(e,t,r,i){if(n.isNone(r))return null;const{visualVariables:l,attributes:s}=r;let o=null;l&&"visualVariables"in i&&(o=W(e,t,i.visualVariables));const a=n.isSome(o)?4:0;let u=null;return n.isSome(s)&&(u=s.map(((r,i)=>{const{field:n,fieldIndex:l}=M(e,{valueExpression:r.valueExpression,field:r.field,resultType:"numeric",target:t});return{binding:i+a,field:n,fieldIndex:l}}))),{type:"simple",target:t,attributeMapping:u,vvMapping:o}}function W(e,t,r){if(!r||!r.length)return[];const i={storage:!0},l="numeric";return m.simplifyVisualVariables(r).map((r=>{const n=d.getVVType(r.type),{field:s,fieldIndex:o}=M(e,{target:t,valueExpression:r.valueExpression,field:r.field,context:i,resultType:l});switch(r.type){case"size":return"$view.scale"===r.valueExpression?null:{type:"size",binding:n,field:s,fieldIndex:o,normalizationField:M(e,{target:t,field:r.normalizationField,context:i,resultType:l}).field,valueRepresentation:r.valueRepresentation??null};case"color":return{type:"color",binding:n,field:s,fieldIndex:o,normalizationField:M(e,{target:t,field:r.normalizationField,context:i,resultType:l}).field};case"opacity":return{type:"opacity",binding:n,field:s,fieldIndex:o,normalizationField:M(e,{target:t,field:r.normalizationField,context:i,resultType:l}).field};case"rotation":return{type:"rotation",binding:n,field:s,fieldIndex:o}}})).filter(n.isSome)}function q(e,t,r,i,l=!1){const s=n.unwrapOr(e,{indexCount:0,fields:{}});switch(r.type){case"simple":case"dot-density":return _(s,r,i,l);case"class-breaks":return $(s,t,r,i,l);case"unique-value":return j(s,t,r,i,l);case"dictionary":return K(s,r,i,l);case"heatmap":return Y(s,r,i,l);case"pie-chart":return H(s,r,i,l)}}function _(e,t,r,i=!1){const n=t.getSymbols(),l=n.length?n[0]:null;return{type:"simple",symbol:c.createSymbolSchema(l,r,i),symbologyType:r.symbologyType}}function H(e,t,r,i=!1){const n=t.getSymbols(),l=n[0],s=n.length>1?n[1]:null;return{type:"pie-chart",markerSymbol:c.createSymbolSchema(l,r,i),fillSymbol:c.createSymbolSchema(s,r,i),symbologyType:r.symbologyType}}function $(e,t,r,i,n=!1){const l={mesh:!0,use:"renderer.field"},s=r.backgroundFillSymbol,{field:o,fieldIndex:a}=M(e,{target:t,field:r.field,valueExpression:r.valueExpression,resultType:"numeric",context:l}),u=r.normalizationType,d="log"===u?"esriNormalizeByLog":"percent-of-total"===u?"esriNormalizeByPercentOfTotal":"field"===u?"esriNormalizeByField":null,p=r.classBreakInfos.map((e=>({symbol:c.createSymbolSchema(e.symbol,i,n),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:o,fieldIndex:a,backgroundFillSymbol:c.createSymbolSchema(s,i,n),defaultSymbol:c.createSymbolSchema(r.defaultSymbol,i,n),intervals:p,normalizationField:r.normalizationField,normalizationTotal:r.normalizationTotal,normalizationType:d,isMaxInclusive:r.isMaxInclusive,symbologyType:i.symbologyType}}function j(e,r,i,n,l=!1){const s=[],o=i.backgroundFillSymbol,a={target:r,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new t(x,"Expected renderer.field to be a string",i);const{field:u,fieldIndex:d}=M(e,{...a,field:i.field,valueExpression:i.valueExpression});for(const t of i.uniqueValueInfos??[])s.push({value:""+t.value,symbol:c.createSymbolSchema(t.symbol,n,l)});return{type:"map",attributes:e.fields,field:u,fieldIndex:d,field2:M(e,{...a,field:i.field2}).field,field3:M(e,{...a,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter??void 0,backgroundFillSymbol:c.createSymbolSchema(o,n),defaultSymbol:c.createSymbolSchema(i.defaultSymbol,n),map:s,symbologyType:n.symbologyType}}function K(e,t,r,i=!1){return{type:"dictionary",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:r,symbologyType:r.symbologyType}}function Y(e,t,r,i=!1){const n=t.getSymbols(),l=n.length?n[0]:null;return{type:"heatmap",symbol:c.createSymbolSchema(l,r,i),symbologyType:r.symbologyType}}e.createSymbolSchema=c.createSymbolSchema,e.addAggregateFields=k,e.createMatcherSchema=q,e.createRendererAttributeSchema=M,e.createSchema=w,e.createSymbolSchemaOptions=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
