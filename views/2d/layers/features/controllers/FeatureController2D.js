/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/maybe","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../core/promiseUtils","../../../../../core/watchUtils","../../../../../layers/graphics/featureConversionUtils","../../../../../layers/support/FieldsIndex","../../../../../core/HandleOwner","../support/FeatureSetReaderJSON","../../../../support/QueueProcessor","../support/AttributeStore","../support/ComputedAttributeStorage","../FeatureStore2D","../../../../../layers/graphics/data/QueryEngine","../support/UpdateToken","../sources/createSource","../support/ClusterStore"],(function(e,t,r,s,i,o,a,n,u,c,h,d,l,p,g,f,y,_,S,m,v,b,I,w,E){"use strict";const k=5e3,C="tileRenderer.featuresView.attributeView.initialize",T="tileRenderer.featuresView.attributeView.requestUpdate",F="tileRenderer.featuresView.requestRender";function A(e){return"worker:port-closed"===e.name}function O(e){if(!d.isAbortError(e)&&!A(e))throw e}function R(e){return"feature"===e.type&&"snapshot"===e.mode}let U=function(t){function i(){var e;return(e=t.apply(this,arguments)||this)._storage=new m.ComputedAttributeStorage,e._markedIdsBufId=e._storage.createBitset(),e._lastCleanup=performance.now(),e._cleanupNeeded=!1,e._invalidated=!1,e._tileToResolver=new Map,e.tileStore=null,e.config=null,e.processor=null,e.remoteClient=null,e.service=null,e}e._inheritsLoose(i,t);var o=i.prototype;return o.initialize=function(){this._initAttributeStore(),this._initStores(),this._initQueryEngine(),this._initSource(),this._updateQueue=new _.QueueProcessor({concurrency:"geoevent"===this._source.type?1:4,process:(e,t)=>this._onTileMessage(e,{signal:t})}),this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),this.watch("updating",(e=>!e&&this.onIdle()))]),this._checkUpdating=setInterval((()=>this.notifyChange("updating")),300)},o.startup=async function(){this._initAttributeStore(),this.tileStore.tiles.forEach((e=>this._source.subscribe(e)))},o._initSource=function(){const e=this.tileStore.tileScheme,t=()=>this._updateQueue.length<50,r=(e,t)=>(this._invalidated=!0,this._patchTile(e,t));this._source=w.createSource(this.service,this.spatialReference,e,r,t,this.featureStore),this._proxyEvents()},o._proxyEvents=function(){if("geoevent"===this._source.type){const e=this._source.events;this.handles.add([e.on("connectionStatus",(e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(O))),e.on("errorString",(e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(O))),e.on("feature",(e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(O))),e.on("updateRate",(e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(O)))])}},o._initAttributeStore=function(){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new S.default({type:"remote",initialize:(e,t)=>d.ignoreAbortErrors(this.remoteClient.invoke(C,e,{signal:t}).catch(O)),update:(e,t)=>d.ignoreAbortErrors(this.remoteClient.invoke(T,e,{signal:t}).catch(O)),render:e=>d.ignoreAbortErrors(this.remoteClient.invoke(F,void 0,{signal:e}).catch(O))},this.config)},o._initStores=function(){const e="snapshot"===this.service.type?"snapshot":"on-demand",t={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new v.FeatureStore2D(t,this._storage,e),this.aggregateStore=new E.ClusterStore(t,this.spatialReference,this._storage),this.handles.add(this.aggregateStore.events.on("valueRangesChanged",(e=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:e.valueRanges}}).catch(O)})))},o._initQueryEngine=function(){var e;const t=this;null==(e=this.queryEngine)||e.destroy(),this.queryEngine=new b.default({definitionExpression:this.config.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds:e=>t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map((e=>t.getObjectId(e)))},timeInfo:this.service.timeInfo})},o.destroy=function(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy(),clearInterval(this._checkUpdating)},o.isUpdating=function(){return this._source.updating||!!this._updateQueue.length},o.enableEvent=function(e){this._source.enableEvent(e.name,e.value)},o.pause=function(){this._updateQueue.pause(),this._updateQueue.clear()},o.update=async function(e,t){this._set("config",t),this._schema=t.schema,this._initQueryEngine(),await Promise.all([this._source.update(e,t.schema.source),this.featureStore.updateSchema(e,t.schema.targets.feature),this.attributeStore.update(e,t),this.attributeStore.updateFilters(e,this)]),await this.aggregateStore.updateSchema(e,t.schema.targets.aggregate),r("esri-2d-update-debug")&&e.describe()},o.applyUpdate=async function(e){e.mesh&&this.clearTiles(),this._updateQueue.clear(),this._updateQueue.resume(),await this._source.applyUpdate(e),this.notifyChange("updating"),await l.whenFalseOnce(this,"updating",!0),this.hasAggregates&&(await d.after(10),await l.whenFalseOnce(this,"updating",!0))},o.onEdits=async function(e){try{const t=e.deletedFeatures.map((e=>({...e,objectId:e.objectId&&-1!==e.objectId?e.objectId:this._lookupObjectIdByGlobalId(e.globalId)})));this.featureStore.invalidate(),await this._source.edit({...e,deletedFeatures:t})}catch(t){}},o.refresh=async function(){this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(),this._cleanupNeeded=!0,this.notifyChange("updating"),await l.whenFalseOnce(this,"updating",!0)},o.clearTiles=function(){for(const e of this.tileStore.tiles)this.processor.onTileClear(e)},o.onTileUpdate=function(e){this.aggregateStore.onTileUpdate(e);for(const t of e.added)this._source.subscribe(t),this._level=t.level;for(const t of e.removed)this._source.unsubscribe(t),this._cleanupNeeded=!0,this._tileToResolver.has(t.id)&&(this._tileToResolver.get(t.id).resolve(),this._tileToResolver.delete(t.id));this.notifyChange("updating")},o.onIdle=function(){this._invalidated&&((this.hasAggregates||"heatmap"===this.processor.type)&&this._repushTiles(),this._invalidated=!1),this._markAndSweep()},o.queryExtent=function(e){return this.queryEngine.executeQueryForExtent(e)},o.queryFeatures=function(e){return this.queryEngine.executeQuery(e)},o.queryFeatureCount=function(e){return this.queryEngine.executeQueryForCount(e)},o.queryLatestObservations=function(e){return this.queryEngine.executeQueryForLatestObservations(e)},o.queryObjectIds=function(e){return this.queryEngine.executeQueryForIds(e)},o.queryStatistics=async function(){return{...this.featureStore.storeStatistics,displayedFeatureCount:0,displayedVertexCount:0,displayPreProcessTime:0}},o.getObjectId=function(e){return this.featureStore.lookupObjectId(e,this._storage)},o.getDisplayId=function(e){if(this._schema.targets.aggregate){const t=this.aggregateStore.getDisplayId(e);if(s.isNone(t)){const t=this.featureStore.lookupDisplayId(e);return this.aggregateStore.getDisplayIdForReferenceId(t)}return t}return this.featureStore.lookupDisplayId(e)},o.getFeature=function(e){const t=this.featureStore.lookupFeatureByDisplayId(e,this._storage);if(s.isNone(t))return null;const r=t.readHydratedGeometry(),i=p.convertToGeometry(r,t.geometryType,t.hasZ,t.hasM);return{attributes:t.readAttributes(),geometry:i}},o.getAggregate=function(e){return this.aggregateStore.getAggregate(e)},o.setHighlight=async function(e){const t=e.map((e=>this.getDisplayId(e)));return this.attributeStore.setHighlight(e,t)},o._lookupObjectIdByGlobalId=function(e){const t=this.service.globalIdField;if(s.isNone(t))throw new Error("Expected globalIdField to be defined");let r=null;if(this.featureStore.forEach((s=>{e===s.readAttribute(t)&&(r=s.getObjectId())})),s.isNone(r))throw new Error(`Expected to find a feature with globalId ${e}`);return r},o._repushTiles=function(){for(const e of this.tileStore.tiles)this._patchTile({type:"append",id:e.key.id,addOrUpdate:y.FeatureSetReaderJSON.fromOptimizedFeatures([],this.service.geometryType),remove:[],end:!0,status:I.UpdateToken.empty()})},o._maybeForceCleanup=function(){performance.now()-this._lastCleanup>k&&this._markAndSweep()},o._patchTile=function(e,t){const r=this._updateQueue.push(e,t).then((()=>{this.notifyChange("updating")})).catch((e=>{this.notifyChange("updating")}));return this.notifyChange("updating"),r},o._onTileMessage=async function(e,t){d.throwIfAborted(t);const r=this.tileStore.get(e.id);if(!r)return;if(e.clear)return this.processor.onTileClear(r);const i=e.status;e.remove.length&&(this._cleanupNeeded=!0);const o=[];for(const s of e.remove)o.push(this.featureStore.lookupDisplayId(s));e.remove=o;try{if(s.isNone(e.addOrUpdate))return void this.processor.onTileMessage(r,{...e,addOrUpdate:null},this.hasAggregates,t).catch(d.throwIfNotAbortError);if(e.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(e.addOrUpdate.instance)&&i.targets.feature||(i.targets.feature=!0,this.featureStore.onTileData(r,e)),i.storage.data&&i.storage.filters||(i.storage.data=!0,i.storage.filters=!0,this.attributeStore.onTileData(r,e),"geoevent"===this._source.type?(await this.attributeStore.sendUpdates(),d.throwIfAborted(t)):this.attributeStore.sendUpdates()),this.hasAggregates&&!i.targets.aggregate){i.targets.aggregate=!0;const t=R(this._source)&&this._source.loading,s=!R(this._source)||t||e.end;if(this.aggregateStore.onTileData(r,e,this._storage,this.attributeStore,s),!s)return;i.mesh||(this.attributeStore.onTileData(r,e),this.attributeStore.sendUpdates(),this.processor.onTileClear(r))}i.mesh||(i.mesh=!0,await this.processor.onTileMessage(r,e,this.hasAggregates,t),d.throwIfAborted(t)),this._maybeForceCleanup()}catch(a){d.throwIfNotAbortError(a)}},o._mark=function(e,t,r){const s=(4294901760&this._storage.getInstanceId(e))>>>16;e&&(t.add(s),r.set(e))},o._markAndSweep=function(){if(this._lastCleanup=performance.now(),!this._cleanupNeeded||"geoevent"===this._source.type||"snapshot"===this._source.mode)return;this._cleanupNeeded=!1;const e=this._storage.getBitset(this._markedIdsBufId),t=new Set;e.clear();for(const r of this.tileStore.tiles)this._source.forEachRequest(r.key.id,(r=>{if(s.isNone(r.addOrUpdate))return;const i=r.addOrUpdate.getCursor();for(;i.next();){let r=i.getDisplayId();if(!r){const e=i.getObjectId();r=this.featureStore.lookupDisplayId(e)}this._mark(r,t,e)}}));this._source.forEachPendingEdit((r=>{const s=this.featureStore.lookupDisplayId(r);this._mark(s,t,e)})),this._updateQueue.forEach((r=>{for(const s of r.remove){const r=this.featureStore.lookupDisplayId(s);this._mark(r,t,e)}})),this.config.schema.targets.aggregate&&(this.aggregateStore.sweepFeatures(e,this.featureStore),this.aggregateStore.sweepClusters(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(e,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(t)},e._createClass(i,[{key:"fieldsIndex",get:function(){return new g(this.service.fields)}},{key:"hasAggregates",get:function(){return!!this.config.schema.targets.aggregate}},{key:"spatialReference",get:function(){return this.tileStore.tileScheme.spatialReference}},{key:"updating",get:function(){return this.isUpdating()}}]),i}(f.HandleOwner);return t.__decorate([a.property({constructOnly:!0})],U.prototype,"tileStore",void 0),t.__decorate([a.property()],U.prototype,"config",void 0),t.__decorate([a.property({readOnly:!0})],U.prototype,"fieldsIndex",null),t.__decorate([a.property()],U.prototype,"processor",void 0),t.__decorate([a.property({constructOnly:!0})],U.prototype,"remoteClient",void 0),t.__decorate([a.property({constructOnly:!0})],U.prototype,"service",void 0),t.__decorate([a.property()],U.prototype,"spatialReference",null),t.__decorate([a.property()],U.prototype,"updating",null),U=t.__decorate([n.subclass("esri.views.2d.layers.features.controllers.FeatureController2D")],U),U}));
