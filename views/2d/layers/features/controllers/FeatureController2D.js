/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/HandleOwner","../../../../../core/has","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/arrayUtils","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/subclass","../../../../../layers/graphics/featureConversionUtils","../../../../../layers/graphics/data/QueryEngine","../../../../../layers/support/FieldsIndex","../FeatureStore2D","../sources/createSource","../support/AttributeStore","../support/ClusterStore","../support/ComputedAttributeStorage","../support/FeatureSetReaderJSON","../support/UpdateToken","../../../../support/QueueProcessor"],(function(e,t,r,i,s,n,o,a,u,c,h,l,d,p,g,f,y,_,S,m,v,b){"use strict";const I=5e3,T="tileRenderer.featuresView.attributeView.initialize",E="tileRenderer.featuresView.attributeView.requestUpdate",w="tileRenderer.featuresView.requestRender";function C(e){return"worker:port-closed"===e.name}function k(e){if(!n.isAbortError(e)&&!C(e))throw e}function F(e){return"feature"===e.type&&"snapshot"===e.mode}let A=function(t){function r(){var e;return(e=t.apply(this,arguments)||this)._storage=new S.ComputedAttributeStorage,e._markedIdsBufId=e._storage.createBitset(),e._lastCleanup=performance.now(),e._cleanupNeeded=!1,e._invalidated=!1,e._tileToResolver=new Map,e._didEdit=!1,e.tileStore=null,e.config=null,e.processor=null,e.remoteClient=null,e.service=null,e}e._inheritsLoose(r,t);var a=r.prototype;return a.initialize=function(){this._initAttributeStore(),this._initStores(),this._initQueryEngine(),this._initSource(),this._updateQueue=new b.QueueProcessor({concurrency:"geoevent"===this._source.type?1:4,process:(e,t)=>this._onTileMessage(e,{signal:t})}),this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),this.watch("updating",(e=>!e&&this.onIdle()))]),this._checkUpdating=setInterval((()=>this.notifyChange("updating")),300)},a.startup=function(){var t=e._asyncToGenerator((function*(){this._initAttributeStore()}));function r(){return t.apply(this,arguments)}return r}(),a._initSource=function(){const e=this.tileStore.tileScheme,t=()=>this._updateQueue.length<50,r=(e,t)=>(this._invalidated=!0,this._patchTile(e,t));this._source=f.createSource(this.service,this.spatialReference,e,r,t,this.featureStore),this._proxyEvents()},a._proxyEvents=function(){if("geoevent"===this._source.type){const e=this._source.events;this.handles.add([e.on("connectionStatus",(e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(k))),e.on("errorString",(e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(k))),e.on("feature",(e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(k))),e.on("updateRate",(e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(k)))])}},a._initAttributeStore=function(){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new y({type:"remote",initialize:(e,t)=>n.ignoreAbortErrors(this.remoteClient.invoke(T,e,{signal:t}).catch(k)),update:(e,t)=>n.ignoreAbortErrors(this.remoteClient.invoke(E,e,{signal:t}).catch(k)),render:e=>n.ignoreAbortErrors(this.remoteClient.invoke(w,void 0,{signal:e}).catch(k))},this.config)},a._initStores=function(){const e="snapshot"===this.service.type?"snapshot":"on-demand",t={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new g.FeatureStore2D(t,this._storage,e),this.aggregateStore=new _.ClusterStore(t,this.spatialReference,this._storage,this.service),this.handles.add(this.aggregateStore.events.on("valueRangesChanged",(e=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:e.valueRanges}}).catch(k)})))},a._initQueryEngine=function(){var e;const t=this;null==(e=this.queryEngine)||e.destroy(),this.queryEngine=new d.default({definitionExpression:this.config.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds:e=>t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map((e=>t.getObjectId(e)))},timeInfo:this.service.timeInfo})},a.destroy=function(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy();for(const e of this.tileStore.tiles)this._source.unsubscribe(e);clearInterval(this._checkUpdating)},a.isUpdating=function(){return this._source.updating||!!this._updateQueue.length},a.enableEvent=function(e){this._source.enableEvent(e.name,e.value)},a.pause=function(){this._updateQueue.pause(),this._updateQueue.clear()},a.pauseStream=function(){"geoevent"===this._source.type&&this._source.pauseStream()},a.resumeStream=function(){"geoevent"===this._source.type&&this._source.resumeStream()},a.update=function(){var t=e._asyncToGenerator((function*(e,t){this._set("config",t),this._schema=t.schema,this._initQueryEngine(),yield Promise.all([this._source.update(e,t.schema.source),this.featureStore.updateSchema(e,t.schema.targets.feature),this.attributeStore.update(e,t),this.attributeStore.updateFilters(e,this)]),yield this.aggregateStore.updateSchema(e,t.schema.targets.aggregate),i("esri-2d-update-debug")&&e.describe()}));function r(e,r){return t.apply(this,arguments)}return r}(),a.applyUpdate=function(){var t=e._asyncToGenerator((function*(e){e.mesh&&this.clearTiles(),this._updateQueue.resume(),yield this._source.applyUpdate(e),this.notifyChange("updating"),yield o.whenOnce((()=>!this.updating)),this.hasAggregates&&(yield n.after(10),yield o.whenOnce((()=>!this.updating)))}));function r(e){return t.apply(this,arguments)}return r}(),a.onEdits=function(){var t=e._asyncToGenerator((function*({edits:e}){i("esri-2d-update-debug")&&console.debug("Applying Edit:",e),this._didEdit=!0;try{const t=e.removed.map((e=>e.objectId&&-1!==e.objectId?e.objectId:this._lookupObjectIdByGlobalId(e.globalId))),r=e.addOrModified.map((({objectId:e})=>e));this.featureStore.invalidate(),yield this._source.edit(r,t),this.clearTiles(),this.notifyChange("updating"),this.aggregateStore.clear(),yield this._source.resend(),yield o.whenOnce((()=>!this.updating))}catch(t){}}));function r(e){return t.apply(this,arguments)}return r}(),a.refresh=function(){var t=e._asyncToGenerator((function*(e){if(!e){const e=v.UpdateToken.empty();return e.storage.filters=!0,this.applyUpdate(e)}this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(),this._cleanupNeeded=!0,this.notifyChange("updating"),yield o.whenOnce((()=>!this.updating))}));function r(e){return t.apply(this,arguments)}return r}(),a.clearTiles=function(){for(const e of this.tileStore.tiles)this.processor.onTileClear(e)},a.onTileUpdate=function(e){this.aggregateStore.onTileUpdate(e);for(const t of e.added)this._source.subscribe(t),this._level=t.level;for(const t of e.removed)this._source.unsubscribe(t),this._cleanupNeeded=!0,this._tileToResolver.has(t.id)&&(this._tileToResolver.get(t.id).resolve(),this._tileToResolver.delete(t.id));this.notifyChange("updating")},a.onIdle=function(){this._invalidated&&((this.hasAggregates||"heatmap"===this.processor.type)&&this._repushCurrentLevelTiles(),this._invalidated=!1),this._markAndSweep()},a.querySummaryStatistics=function(){var t=e._asyncToGenerator((function*({query:e,params:t}){return this.queryEngine.executeQueryForSummaryStatistics(e,t)}));function r(e){return t.apply(this,arguments)}return r}(),a.queryUniqueValues=function(){var t=e._asyncToGenerator((function*({query:e,params:t}){return this.queryEngine.executeQueryForUniqueValues(e,t)}));function r(e){return t.apply(this,arguments)}return r}(),a.queryClassBreaks=function(){var t=e._asyncToGenerator((function*({query:e,params:t}){return this.queryEngine.executeQueryForClassBreaks(e,t)}));function r(e){return t.apply(this,arguments)}return r}(),a.queryHistogram=function(){var t=e._asyncToGenerator((function*({query:e,params:t}){return this.queryEngine.executeQueryForHistogram(e,t)}));function r(e){return t.apply(this,arguments)}return r}(),a.queryExtent=function(e){return this.queryEngine.executeQueryForExtent(e)},a.queryFeatures=function(e){return this.queryEngine.executeQuery(e)},a.queryVisibleFeatures=function(){var t=e._asyncToGenerator((function*(e){const t=yield this.queryEngine.executeQuery(e),r=t.objectIdFieldName;return t.features=t.features.filter((e=>{const t=e.attributes[r],i=this.getDisplayId(t);return this.attributeStore.isVisible(i)})),t}));function r(e){return t.apply(this,arguments)}return r}(),a.queryFeatureCount=function(e){return this.queryEngine.executeQueryForCount(e)},a.queryLatestObservations=function(e){return this.queryEngine.executeQueryForLatestObservations(e)},a.queryObjectIds=function(e){return this.queryEngine.executeQueryForIds(e)},a.queryStatistics=function(){var t=e._asyncToGenerator((function*(){return this.featureStore.storeStatistics}));function r(){return t.apply(this,arguments)}return r}(),a.getObjectId=function(e){return this.featureStore.lookupObjectId(e,this._storage)},a.getDisplayId=function(e){if(this._schema.targets.aggregate){const t=this.aggregateStore.getDisplayId(e);if(s.isNone(t)){const t=this.featureStore.lookupDisplayId(e);return this.aggregateStore.getDisplayIdForReferenceId(t)}return t}return this.featureStore.lookupDisplayId(e)},a.getFeatures=function(e){const t=[],r=[];for(const i of e){const e=this.hasAggregates?this.getAggregate(i):null;if(s.isSome(e))if(s.isSome(e.referenceId)){const r=this.getFeature(e.referenceId);s.isSome(r)&&t.push(r)}else r.push(e);else{const e=this.getFeature(i);s.isSome(e)&&t.push(e)}}return{features:t,aggregates:r}},a.getFeature=function(e){const t=this.featureStore.lookupFeatureByDisplayId(e,this._storage);if(s.isNone(t))return null;const r=t.readHydratedGeometry(),i=l.convertToGeometry(r,t.geometryType,t.hasZ,t.hasM);return{attributes:t.readAttributes(),geometry:i}},a.getAggregate=function(e){return this.aggregateStore.getAggregate(e)},a.getAggregates=function(){return this.aggregateStore.getAggregates()},a.setHighlight=function(){var t=e._asyncToGenerator((function*(e){const t=e.map((e=>this.getDisplayId(e)));return this.attributeStore.setHighlight(e,t)}));function r(e){return t.apply(this,arguments)}return r}(),a._lookupObjectIdByGlobalId=function(e){const t=this.service.globalIdField;if(s.isNone(t))throw new Error("Expected globalIdField to be defined");let r=null;if(this.featureStore.forEach((i=>{e===i.readAttribute(t)&&(r=i.getObjectId())})),s.isNone(r))throw new Error(`Expected to find a feature with globalId ${e}`);return r},a._repushCurrentLevelTiles=function(){const e=this.tileStore.tiles.filter((e=>e.level===this._level));for(const t of e)this._patchTile({type:"append",id:t.key.id,addOrUpdate:m.FeatureSetReaderJSON.fromOptimizedFeatures([],this.service),remove:[],end:!0,status:v.UpdateToken.empty()})},a._maybeForceCleanup=function(){performance.now()-this._lastCleanup>I&&this._markAndSweep()},a._patchTile=function(e,t){const r=this._updateQueue.push(e,t).then((()=>{this.notifyChange("updating")})).catch((e=>{this.notifyChange("updating")}));return this.notifyChange("updating"),r},a._onTileMessage=function(){var t=e._asyncToGenerator((function*(e,t){n.throwIfAborted(t);const r=this.tileStore.get(e.id);if(!r)return;if(e.clear)return this.processor.onTileClear(r);const i=e.status;this._cleanupNeeded=!0;const o=[];for(const s of e.remove){const e=this.featureStore.lookupDisplayId(s);e&&o.push(e)}e.remove=o;try{if(s.isNone(e.addOrUpdate))return void this.processor.onTileMessage(r,{...e,addOrUpdate:null},this.hasAggregates,t).catch(n.throwIfNotAbortError);if(e.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(e.addOrUpdate.instance)&&i.targets.feature||(i.targets.feature=!0,this.featureStore.onTileData(r,e)),!i.storage.data||!i.storage.filters){i.storage.data=!0,i.storage.filters=!0,this.attributeStore.onTileData(r,e);"geoevent"===this._source.type||this._didEdit?(yield this.attributeStore.sendUpdates(),n.throwIfAborted(t)):this.attributeStore.sendUpdates()}if(this.hasAggregates&&!i.targets.aggregate){i.targets.aggregate=!0;const t=F(this._source)&&this._source.loading,s=!F(this._source)||t||e.end;if(this.aggregateStore.onTileData(r,e,this._storage,this.attributeStore,s),!s)return;i.mesh||(this.attributeStore.onTileData(r,e),yield this.attributeStore.sendUpdates(),this.processor.onTileClear(r))}i.mesh||(i.mesh=!0,yield this.processor.onTileMessage(r,e,this.hasAggregates,t),n.throwIfAborted(t)),this._maybeForceCleanup()}catch(a){n.throwIfNotAbortError(a)}}));function r(e,r){return t.apply(this,arguments)}return r}(),a._mark=function(e,t,r){const i=(4294901760&this._storage.getInstanceId(e))>>>16;e&&(t.add(i),r.set(e))},a._markAndSweep=function(){this._lastCleanup=performance.now();if(!(!("feature"===this._source.type&&"snapshot"===this._source.mode)&&("geoevent"===this._source.type||this._cleanupNeeded)))return;this._cleanupNeeded=!1;const e=this._storage.getBitset(this._markedIdsBufId),t=new Set;e.clear();for(const r of this.tileStore.tiles)for(const i of this._source.readers(r.id)){const r=i.getCursor();for(;r.next();){let i=r.getDisplayId();if(!i){const e=r.getObjectId();i=this.featureStore.lookupDisplayId(e)}this._mark(i,t,e)}}"symbol"===this.processor.type&&this.processor.forEachBufferId((r=>{this._mark(r,t,e)})),this._updateQueue.forEach((r=>{for(const i of r.remove){const r=this.featureStore.lookupDisplayId(i);this._mark(r,t,e)}})),this.config.schema.targets.aggregate&&(this.aggregateStore.sweepFeatures(e,this.featureStore),this.aggregateStore.sweepClusters(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(e,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(t)},e._createClass(r,[{key:"fieldsIndex",get:function(){return new p(this.service.fields)}},{key:"hasAggregates",get:function(){return!!this.config.schema.targets.aggregate}},{key:"spatialReference",get:function(){return this.tileStore.tileScheme.spatialReference}},{key:"updating",get:function(){return this.isUpdating()}}]),r}(r.HandleOwner);t.__decorate([a.property({constructOnly:!0})],A.prototype,"tileStore",void 0),t.__decorate([a.property()],A.prototype,"config",void 0),t.__decorate([a.property({readOnly:!0})],A.prototype,"fieldsIndex",null),t.__decorate([a.property()],A.prototype,"processor",void 0),t.__decorate([a.property({constructOnly:!0})],A.prototype,"remoteClient",void 0),t.__decorate([a.property({constructOnly:!0})],A.prototype,"service",void 0),t.__decorate([a.property()],A.prototype,"spatialReference",null),t.__decorate([a.property()],A.prototype,"updating",null),A=t.__decorate([h.subclass("esri.views.2d.layers.features.controllers.FeatureController2D")],A);return A}));
