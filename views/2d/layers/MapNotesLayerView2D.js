/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/Collection","../../../Graphic","../../../core/watchUtils","../../layers/LayerView","./graphics/GraphicsView2D","./graphics/GraphicContainer","./LayerView2D"],(function(e,i,s,t,r,a,n,o,c,h,p,l,u,d,f,g,w,y){"use strict";const V="sublayers",m="layerView",v=Object.freeze({remove(){},pause(){},resume(){}});let _=function(i){function s(){return i.apply(this,arguments)||this}e._inheritsLoose(s,i);var r=s.prototype;return r.fetchPopupFeatures=async function(e){return(await Promise.all(Array.from(this.graphicsViews(),(i=>i.searchFeatures(e).then((e=>e.filter((e=>!!e.popupTemplate)))))))).flat()},r.graphicsViews=function*(){t.isSome(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():t.isSome(this._graphicsViews)?yield*this._graphicsViews:yield*[]},r.hitTest=async function(e,i){if(this.suspended)return null;const s=Array.from(this.graphicsViews(),(async s=>{const r=await s.hitTest(e,i);if(r){if(t.isSome(this._graphicsViewsFeatureCollectionMap)){const e=this._graphicsViewsFeatureCollectionMap.get(s);!r.popupTemplate&&e.popupTemplate&&(r.popupTemplate=e.popupTemplate)}return r}return null}));return(await Promise.all(s)).filter((e=>!!e))[0]||null},r.highlight=function(e){let i;if("number"==typeof e?i=[e]:e instanceof u?i=[e.uid]:Array.isArray(e)&&e.length>0?i="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):l.isCollection(e)&&(i=e.map((e=>e&&e.uid)).toArray()),i=i.filter((e=>null!=e)),!i.length)return v;for(const s of this.graphicsViews())s.addHighlight(i);return{remove:()=>{for(const e of this.graphicsViews())e.removeHighlight(i)}}},r.update=function(e){for(const i of this.graphicsViews())i.processUpdate(e)},r.attach=function(){const e=this.view,i=()=>this.requestUpdate(),s=this.layer.featureCollections;if(t.isSome(s)&&s.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const t of s){const s=new w(this.view.featuresTilingScheme);s.fadeTransitionEnabled=!0;const r=new g({view:e,graphics:t.source,renderer:t.renderer,requestUpdateCallback:i,container:s});this._graphicsViewsFeatureCollectionMap.set(r,t),this.container.addChild(r.container),this.handles.add([d.init(t,"visible",(e=>r.container.visible=e)),d.init(r,"updating",(()=>this.notifyChange("updating")))],m)}}else t.isSome(this.layer.sublayers)&&this.handles.add(d.on(this.layer,"sublayers","change",(()=>this._createGraphicsViews()),(()=>this._createGraphicsViews()),(()=>this._destroyGraphicsViews())),V)},r.detach=function(){this._destroyGraphicsViews(),this.handles.remove(V)},r.moveStart=function(){},r.moveEnd=function(){},r.viewChange=function(){for(const e of this.graphicsViews())e.viewChange()},r.isUpdating=function(){for(const e of this.graphicsViews())if(e.updating)return!0;return!1},r._destroyGraphicsViews=function(){this.container.removeAllChildren(),this.handles.remove(m);for(const e of this.graphicsViews())e.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null},r._createGraphicsViews=function(){if(this._destroyGraphicsViews(),t.isNone(this.layer.sublayers))return;const e=[],i=this.view,s=()=>this.requestUpdate();for(const t of this.layer.sublayers){const r=new w(this.view.featuresTilingScheme);r.fadeTransitionEnabled=!0;const a=new g({view:i,graphics:t.graphics,requestUpdateCallback:s,container:r});this.handles.add([t.on("graphic-update",a.graphicUpdateHandler),d.init(t,"visible",(e=>a.container.visible=e)),d.init(a,"updating",(()=>this.notifyChange("updating")))],m),this.container.addChild(a.container),e.push(a)}this._graphicsViews=e},s}(y.LayerView2DMixin(f));return _=i.__decorate([o.subclass("esri.views.2d.layers.MapNotesLayerView2D")],_),_}));
