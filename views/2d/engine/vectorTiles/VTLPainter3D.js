/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../brushes","./shaders/ProgramCache"],(function(e,t){"use strict";const r=1e-6;return function(){function s(e,t){this.spriteMosaic=e,this.glyphMosaic=t,this._brushCache=new Map}var a=s.prototype;return a.dispose=function(){this._brushCache&&(this._brushCache.forEach((e=>e.dispose())),this._brushCache=null),this._programCache&&(this._programCache.dispose(),this._programCache=null)},a.setContext=function(e){this._programCache||(this._programCache=new t(e))},a.getVectorTileProgramCache=function(){return this._programCache},a.drawTile=function(e,t,r){const{context:s}=e,a=r.layers;r.backgroundBucketIds.length>0&&(e.renderPass="background",r.backgroundBucketIds.forEach((s=>this._renderStyleLayer(r.getLayerById(s),e,t,!0)))),s.setBlendingEnabled(!1),s.setDepthTestEnabled(!0),s.setDepthWriteEnabled(!0),s.setDepthFunction(515),e.renderPass="opaque";for(let r=a.length-1;r>=0;r--)this._renderStyleLayer(a[r],e,t,!1);s.setDepthWriteEnabled(!1),s.setBlendingEnabled(!0),s.setBlendFunctionSeparate(1,771,1,771),e.renderPass="translucent";for(let r=0;r<a.length;r++)this._renderStyleLayer(a[r],e,t,!1);s.setDepthTestEnabled(!1),e.renderPass="symbol";for(let r=0;r<a.length;r++)this._renderStyleLayer(a[r],e,t,!1);s.bindVAO()},a._renderStyleLayer=function(e,t,s,a=!1){if(!(a||e&&s.layerData.has(e.uid)))return;const{renderPass:n}=t;let i;switch(e.type){case 0:if("background"!==n)return;i="vtlBackground";break;case 1:if("opaque"!==n&&"translucent"!==t.renderPass)return;i="vtlFill";break;case 2:if("translucent"!==n)return;i="vtlLine";break;case 4:if("symbol"!==n)return;i="vtlCircle";break;case 3:if("symbol"!==n)return;i="vtlSymbol"}const h=t.displayLevel;void 0!==e.minzoom&&e.minzoom>h+r||void 0!==e.maxzoom&&e.maxzoom<=h-r||(t.styleLayerUID=e.uid,t.styleLayer=e,this.drawWithBrush(t,s,i))},a.drawWithBrush=function(t,r,s){if(!this._brushCache.has(s)){const t=e.vtlBrushes[s];this._brushCache.set(s,new t)}this._brushCache.get(s).drawMany(t,[r])},a.getVectorTileProgramCach=function(){return this._programCache},s}()}));
