/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../core/has","../../../../core/promiseUtils","../../../../chunks/builtins","../../../webgl/Texture","../../../webgl/FramebufferObject","../../../webgl/RenderingContext","../webgl/Rect","./RectangleBinPack"],(function(t,e,i,s,h,n,r,o){"use strict";return function(){function t(t,e,i){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,this.width=t,this.height=e,this._glyphSource=i,this._binPack=new o(t-4,e-4),this._glyphData.push(new Uint8Array(t*e)),this._dirties.push(!0),this._textures.push(void 0)}var i=t.prototype;return i.getGlyphItems=function(t,i){const s=[],h=this._glyphSource,n=new Set;for(const t of i){const e=Math.floor(.00390625*t);n.add(e)}const a=[];return n.forEach((e=>{if(e<=256){const i=t+e;if(this._rangePromises.has(i))a.push(this._rangePromises.get(i));else{const s=h.getRange(t,e).then((()=>{this._rangePromises.delete(i)}),(()=>{this._rangePromises.delete(i)}));this._rangePromises.set(i,s),a.push(s)}}})),e.all(a).then((()=>{let e,n=this._glyphIndex[t];n||(n={},this._glyphIndex[t]=n),e=i;for(const i of e){const e=n[i];if(e){s[i]={sdf:!0,rect:e.rect,metrics:e.metrics,page:e.page,code:i};continue}const a=h.getGlyph(t,i);if(!a||!a.metrics)continue;const c=a.metrics;let l;if(0===c.width)l=new r(0,0,0,0);else{const t=3,e=c.width+2*t,i=c.height+2*t;let s=e%4?4-e%4:4,h=i%4?4-i%4:4;1===s&&(s=5),1===h&&(h=5),l=this._binPack.allocate(e+s,i+h),l.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(void 0),this._binPack=new o(this.width-4,this.height-4),l=this._binPack.allocate(e+s,i+h));const n=this._glyphData[this._currentPage],r=a.bitmap;let g,_;if(r)for(let t=0;t<i;t++){g=e*t,_=this.width*(l.y+t+1)+l.x;for(let t=0;t<e;t++)n[_+t+1]=r[g+t]}}n[i]={rect:l,metrics:c,tileIDs:null,page:this._currentPage},s[i]={sdf:!0,rect:l,metrics:c,page:this._currentPage,code:i},this._dirties[this._currentPage]=!0}return s}))},i.removeGlyphs=function(t){for(const e in this._glyphIndex){const i=this._glyphIndex[e];if(!i)continue;let s;for(const e in i)if(s=i[e],s.tileIDs.delete(t),0===s.tileIDs.size){const t=this._glyphData[s.page],h=s.rect;let n,r;for(let e=0;e<h.height;e++)for(n=this.width*(h.y+e)+h.x,r=0;r<h.width;r++)t[n+r]=0;delete i[e],this._dirties[s.page]=!0}}},i.bind=function(t,e,i,h=0){this._textures[i]||(this._textures[i]=new s(t,{pixelFormat:6406,dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));const n=this._textures[i];n.setSamplingMode(e),this._dirties[i]&&n.setData(this._glyphData[i]),t.bindTexture(n,h),this._dirties[i]=!1},i.dispose=function(){this._binPack=null;for(const t of this._textures)t&&t.dispose();this._textures.length=0},t}()}));
