/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../../webgl/BufferObject","../../../webgl/FramebufferObject","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../webgl/enums","../../../webgl/RenderingContext","../../../../chunks/builtins","../../../webgl/Texture","../../../webgl/VertexArrayObject","./RectangleBinPack","../webgl/Rect"],(function(t,e,i,s,h,n,r,a,c,o,l){"use strict";return function(){function t(t,e,i){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,this.width=t,this.height=e,this._glyphSource=i,this._binPack=new o(t-4,e-4),this._glyphData.push(new Uint8Array(t*e)),this._dirties.push(!0),this._textures.push(void 0)}var e=t.prototype;return e.getGlyphItems=function(t,e){const i=[],s=this._glyphSource,h=new Set,n=1/256;for(const a of e){const t=Math.floor(a*n);h.add(t)}const r=[];return h.forEach((e=>{if(e<=256){const i=t+e;if(this._rangePromises.has(i))r.push(this._rangePromises.get(i));else{const h=s.getRange(t,e).then((()=>{this._rangePromises.delete(i)}),(()=>{this._rangePromises.delete(i)}));this._rangePromises.set(i,h),r.push(h)}}})),Promise.all(r).then((()=>{let h=this._glyphIndex[t];h||(h={},this._glyphIndex[t]=h);for(const n of e){const e=h[n];if(e){i[n]={sdf:!0,rect:e.rect,metrics:e.metrics,page:e.page,code:n};continue}const r=s.getGlyph(t,n);if(!r||!r.metrics)continue;const a=r.metrics;let c;if(0===a.width)c=new l(0,0,0,0);else{const t=3,e=a.width+2*t,i=a.height+2*t;let s=e%4?4-e%4:4,h=i%4?4-i%4:4;1===s&&(s=5),1===h&&(h=5),c=this._binPack.allocate(e+s,i+h),c.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(void 0),this._binPack=new o(this.width-4,this.height-4),c=this._binPack.allocate(e+s,i+h));const n=this._glyphData[this._currentPage],l=r.bitmap;let g,u;if(l)for(let r=0;r<i;r++){g=e*r,u=this.width*(c.y+r+1)+c.x;for(let t=0;t<e;t++)n[u+t+1]=l[g+t]}}h[n]={rect:c,metrics:a,tileIDs:null,page:this._currentPage},i[n]={sdf:!0,rect:c,metrics:a,page:this._currentPage,code:n},this._dirties[this._currentPage]=!0}return i}))},e.removeGlyphs=function(t){for(const e in this._glyphIndex){const i=this._glyphIndex[e];if(!i)continue;let s;for(const e in i)if(s=i[e],s.tileIDs.delete(t),0===s.tileIDs.size){const t=this._glyphData[s.page],h=s.rect;let n,r;for(let e=0;e<h.height;e++)for(n=this.width*(h.y+e)+h.x,r=0;r<h.width;r++)t[n+r]=0;delete i[e],this._dirties[s.page]=!0}}},e.bind=function(t,e,i,s=0){this._textures[i]||(this._textures[i]=new a(t,{pixelFormat:6406,dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));const h=this._textures[i];h.setSamplingMode(e),this._dirties[i]&&h.setData(this._glyphData[i]),t.bindTexture(h,s),this._dirties[i]=!1},e.dispose=function(){this._binPack=null;for(const t of this._textures)t&&t.dispose();this._textures.length=0},t}()}));
