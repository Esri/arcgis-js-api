/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as t}from"../../../../../core/maybe.js";import{BucketType as e}from"../enums.js";import{VTLSymbol as r}from"./core.js";class s{constructor(t){this.tile=t,this.parent=null,this.children=new Set}}class i{constructor(){this.nodes=new Map,this.roots=new Set}create(t){const e=new s(t);let r;const i=[];if(this.nodes.forEach((t=>{this._canConnectDirectly(e,t)&&i.push(t),!r&&this._canConnectDirectly(t,e)&&(r=t)})),r){for(const t of i)r.children.delete(t),e.children.add(t),t.parent=e;r.children.add(e),e.parent=r}else{this.roots.add(e);for(const t of i)e.children.add(t),t.parent=e,this.roots.delete(t)}return this.nodes.set(t.key.id,e),e}destroy(e){t(e.parent)?(e.parent.children.delete(e),e.children.forEach((r=>{t(e.parent)&&e.parent.children.add(r)}))):this.roots.delete(e),e.children.forEach((t=>{t.parent=e.parent,e.parent||this.roots.add(t)})),this.nodes.delete(e.tile.key.id)}clear(){this.roots.clear(),this.nodes.clear()}_canConnectDirectly(t,e){let{level:r,row:s,col:i}=e.tile.key;const{world:l}=e.tile.key;for(;r>0;){if(r--,s>>=1,i>>=1,t.tile.key.level===r&&t.tile.key.row===s&&t.tile.key.col===i&&t.tile.key.world===l)return!0;if(this.nodes.has(`${r}/${s}/${i}/${l}`))return!1}return!1}}class l{constructor(){this._tileGraph=new i,this._tileArray=null}has(t){return"string"==typeof t?this._tileGraph.nodes.has(t):this._tileGraph.nodes.has(t.key.id)}getAll(){return this._tileArray||(this._tileArray=[],this._tileGraph.nodes.forEach((t=>{this._tileArray.push(t.tile)}))),this._tileArray}getRoots(){const t=[];return this._tileGraph.roots.forEach((e=>{t.push(e.tile)})),t}getParent(e){const r=this._tileGraph.nodes.get("string"==typeof e?e:e.key.id);return t(r.parent)&&r.parent.tile}getChildren(t){const e=[];return this._tileGraph.nodes.get("string"==typeof t?t:t.key.id).children.forEach((t=>{e.push(t.tile)})),e}get(t){return this._tileGraph.nodes.get(t).tile}removeKey(t){const e=this._tileGraph.nodes.get(t);this._tileGraph.destroy(e),this._tileArray=null}forEach(t){this._tileGraph.nodes.forEach(((e,r)=>t(e.tile,r)))}add(t){this._tileGraph.create(t),this._tileArray=null}remove(t){const e=this._tileGraph.nodes.get(t.key.id);this._tileGraph.destroy(e),this._tileArray=null}clear(){this._tileGraph.clear(),this._tileArray=[]}}function o(t,e,r,s,i,l){const o=r-i;if(o>=0)return(e>>o)+(s-(l<<o))*(t>>o);const n=-o;return e-(l-(s<<n))*(t>>n)<<n}class n{constructor(t,e,r){this._rows=Math.ceil(e/r),this._columns=Math.ceil(t/r),this._cellSize=r,this.cells=new Array(this._rows);for(let s=0;s<this._rows;s++){this.cells[s]=new Array(this._columns);for(let t=0;t<this._columns;t++)this.cells[s][t]=[]}}getCell(t,e){const r=Math.min(Math.max(Math.floor(e/this._cellSize),0),this._rows-1),s=Math.min(Math.max(Math.floor(t/this._cellSize),0),this._columns-1);return this.cells[r]&&this.cells[r][s]||null}getCellSpan(t,e,r,s){return[Math.min(Math.max(Math.floor(t/this._cellSize),0),this.columns-1),Math.min(Math.max(Math.floor(e/this._cellSize),0),this.rows-1),Math.min(Math.max(Math.floor(r/this._cellSize),0),this.columns-1),Math.min(Math.max(Math.floor(s/this._cellSize),0),this.rows-1)]}get cellSize(){return this._cellSize}get columns(){return this._columns}get rows(){return this._rows}}function h(t,e,s,i,l,o){const n=e[i++];for(let h=0;h<n;h++){const n=new r(o);n.xTile=e[i++],n.yTile=e[i++],n.hash=e[i++],n.priority=e[i++];const h=e[i++];for(let t=0;t<h;t++){const t=e[i++],r=e[i++],l=e[i++],o=e[i++],h=!!e[i++],a=e[i++],c=s[i++],d=s[i++],p=e[i++],u=e[i++];n.colliders.push({xTile:t,yTile:r,dxPixels:l,dyPixels:o,hard:h,partIndex:a,width:p,height:u,minLod:c,maxLod:d})}const a=t[i++];for(let e=0;e<a;e++)n.textVertexRanges.push([t[i++],t[i++]]);const c=t[i++];for(let e=0;e<c;e++)n.iconVertexRanges.push([t[i++],t[i++]]);l.push(n)}return i}function a(t,e,r){for(const[s,i]of t.symbols)c(t,e,r,i,s)}function c(t,r,s,i,l){const o=t.layerData.get(l);if(o.type===e.SYMBOL){for(const e of i){const r=e.unique;let i;if(e.selectedForRendering){const e=r.parts[0],l=e.startOpacity,o=e.targetOpacity;t.allSymbolsFadingOut=t.allSymbolsFadingOut&&0===o;const n=s?Math.floor(127*l)|o<<7:o?255:0;i=n<<24|n<<16|n<<8|n}else i=0;for(const[t,s]of e.iconVertexRanges)for(let e=t;e<t+s;e+=4)o.iconOpacity[e/4]=i;if(e.selectedForRendering){const e=r.parts[1],l=e.startOpacity,o=e.targetOpacity;t.allSymbolsFadingOut=t.allSymbolsFadingOut&&0===o;const n=s?Math.floor(127*l)|o<<7:o?255:0;i=n<<24|n<<16|n<<8|n}else i=0;for(const[t,s]of e.textVertexRanges)for(let e=t;e<t+s;e+=4)o.textOpacity[e/4]=i}o.lastOpacityUpdate=r,o.opacityChanged=!0}}export{n as GridIndex,l as TileForest,i as TileGraph,s as TileNode,h as deserializeSymbols,o as tileCoordChange,a as writeOpacityToBuffers};
