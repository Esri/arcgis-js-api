/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports"],(function(t){"use strict";function e(t,e,n,o,l,i){t.fillStyle=e,t.fillRect(n,o,l,i)}function n(t,e,n,o,l,i){t.strokeStyle=e,t.strokeRect(n,o,l,i)}function o(t,e){return`${Math.round(10*t)/10}${e}`}t.drawColliders=function(t,o){const l=window.COLLISION_XRAY;for(let i=0;i<o.length;++i){const r=!o[i].unique.show;if(l||!r)for(const d of o[i].colliders){if(!d.enabled)continue;const s=!o[i].unique.parts[d.partIndex].show;if(!l&&s)continue;const a=d.xScreen,c=d.yScreen,m=d.dxScreen,h=d.dyScreen;t.globalAlpha=r||s?.2:1,e(t,"green",a-1,c-1,3,3),n(t,"red",a+m,c+h,d.width,d.height),e(t,"blue",a+m-1,c+h-1,3,3),t.globalAlpha=1}}},t.drawGridIndex=function(t,e){t.strokeStyle="black";const n=e.cellSize,o=e.rows,l=e.columns;for(let i=0;i<o;i++){const o=e.cells[i],r=i*n,d=(i+1)*n;for(let e=0;e<l;e++){const l=o[e],i=e*n,s=(e+1)*n;t.strokeRect(i,r,s-i,d-r),t.fillText(`cells:${l.length}`,i+4,r+12)}}},t.perfAdd=function(t,e,n){if(!window.PERFORMANCE_RECORDING_STORAGE)return;const o=window.PERFORMANCE_RECORDING_STORAGE;o.perf=o.perf||{};const l=o.perf;l[t]=l[t]||{start:null,time:0,min:void 0,max:void 0,samples:[],unit:n},l[t].time+=e,l[t].samples.push(e),(null==l[t].min||e<l[t].min)&&(l[t].min=e),(null==l[t].max||e>l[t].max)&&(l[t].max=e)},t.perfClear=function(){if(!window.PERFORMANCE_RECORDING_STORAGE)return;window.PERFORMANCE_RECORDING_STORAGE.perf={}},t.perfElement=function(t){if(!window.PERFORMANCE_RECORDING_STORAGE){const t=document.createElement("div");return t.innerHTML="No recorded data is present because performance recording is disabled.",t}const e=document.createElement("div");let n="";const l=window.PERFORMANCE_RECORDING_STORAGE.perf;n+='<table style="border-collapse: collapse;">',n+=`<tr style="text-weight: bold; border-bottom: 1px solid "${t}";"><td>Name</td><td>Total</td><td>Runs</td><td>Average</td><td>Min</td><td>Distribution</td><td>Max</td><td>Histogram (50 bins)</td></tr>`;const i=[];for(const t in l)i.push({name:t,value:l[t].time/l[t].samples.length,sortkey:l[t].max});i.sort(((t,e)=>-(t.sortkey-e.sortkey)));const r=i.map((t=>t.name));for(const t of r)n+="<tr>",n+=`<td>${t}</td>`,n+=`<td>${o(l[t].time,l[t].unit)}</td>`,n+=`<td>${l[t].samples.length}</td>`,n+=`<td>${o(l[t].time/l[t].samples.length,l[t].unit)}</td>`,n+=`<td style="text-align: right;">${o(l[t].min,l[t].unit)}</td>`,n+="<td data-distribution='1'></td>",n+=`<td>${o(l[t].max,l[t].unit)}</td>`,n+="<td data-histogram='1'></td>",n+="</tr>";n+="<table>",e.innerHTML=n;const d=e.querySelectorAll("td[data-distribution='1']"),s=e.querySelectorAll("td[data-histogram='1']");for(let e=0;e<d.length;e++){let n=d[e];{const o=document.createElement("canvas");o.height=10,o.width=100;const d=o.getContext("2d");if(d.strokeStyle=t,d.beginPath(),d.moveTo(0,5),d.lineTo(100,5),l[r[e]].max>l[r[e]].min+.001)for(const t of l[r[e]].samples){const n=(t-l[r[e]].min)/(l[r[e]].max-l[r[e]].min);d.moveTo(100*n,3),d.lineTo(100*n,7)}d.stroke(),d.strokeRect((i[e].value-l[r[e]].min)/(l[r[e]].max-l[r[e]].min)*100-2,0,4,9),n.appendChild(o)}n=s[e];{const o=new Array(50);for(let t=0;t<o.length;t++)o[t]=0;for(const t of l[r[e]].samples){const n=(t-l[r[e]].min)/(l[r[e]].max-l[r[e]].min);o[1===n?o.length-1:Math.floor(n*o.length)]++}const i=document.createElement("canvas");i.height=30,i.width=120;const d=i.getContext("2d");d.strokeStyle=t,d.fillStyle=t;let s=0;for(let t=0;t<o.length;t++){const e=o[t];s=Math.max(s,e)}for(let t=0;t<o.length;t++){const e=o[t];d.fillRect(t*i.width/o.length,i.height*(1-e/s),i.width/o.length,i.height*(e/s))}d.beginPath(),d.moveTo(0,i.height),d.lineTo(i.width,i.height),d.stroke(),n.appendChild(i)}}const a=e.querySelectorAll("td");for(let t=0;t<a.length;t++)a[t].style.padding="5px";return e},Object.defineProperty(t,"__esModule",{value:!0})}));
