/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{clone as s}from"../../../core/lang.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as r}from"../../../core/accessorSupport/decorators/writer.js";import o from"../../../renderers/visualVariables/SizeVariable.js";import{isSizeVariable as a}from"../../../renderers/visualVariables/support/sizeVariableUtils.js";var l;let n=l=class extends o{writeLevels(e,s,i){for(const t in e){const e=this.levels[t];return void(s.stops=e)}}clone(){return new l({axis:this.axis,field:this.field,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,maxDataValue:this.maxDataValue,maxSize:a(this.maxSize)?this.maxSize.clone():this.maxSize,minDataValue:this.minDataValue,minSize:a(this.minSize)?this.minSize.clone():this.minSize,normalizationField:this.normalizationField,stops:this.stops&&this.stops.map((e=>e.clone())),target:this.target,useSymbolValue:this.useSymbolValue,valueRepresentation:this.valueRepresentation,valueUnit:this.valueUnit,legendOptions:this.legendOptions&&this.legendOptions.clone(),levels:s(this.levels)})}};e([i()],n.prototype,"levels",void 0),e([r("levels")],n.prototype,"writeLevels",null),n=l=e([t("esri.views.2d.engine.LevelDependentSizeVariable")],n);export{n as LevelDependentSizeVariable};
