/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","./MeshData","./Utils"],(function(t,e,s){"use strict";return function(){function i(t,e,s,i=0,o=0){this.id=t,this.geometryType=e,this.materialKey=s,this.minZoom=i,this.maxZoom=o,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}var o=i.prototype;return o.clone=function(){return this.copy()},o.copy=function(){const t=new i(this.id,this.geometryType,this.materialKey);return t.vertexFrom=this.vertexFrom,t.vertexCount=this.vertexCount,t.indexFrom=this.indexFrom,t.indexCount=this.indexCount,t.zOrder=this.zOrder,t.symbolLevel=this.symbolLevel,t.meshData=this.meshData,t.minZoom=this.minZoom,t.maxZoom=this.maxZoom,t},o.setMeshDataFromBuffers=function(t,i,o){const r=new e;for(const e in i){const o=i[e].stride,n=i[e].data;if(!n)continue;const a=[],h=s.strideToPackingFactor(o);for(let e=0;e<o*t.vertexCount/h;++e)a[e]=n[e+o*t.vertexFrom/h];r.vertexData.set(e,a)}r.indexData.length=0;for(let e=0;e<t.indexCount;++e)r.indexData[e]=o[e+t.indexFrom]-t.vertexFrom;r.vertexCount=t.vertexCount,this.meshData=r},o.readMeshDataFromBuffers=function(t,i){this.meshData?this.meshData.clear():this.meshData=new e;for(const e in t){const i=t[e].stride,o=t[e].data,r=[],n=s.strideToPackingFactor(i);for(let t=0;t<i*this.vertexCount/n;++t)r[t]=o[t+i*this.vertexFrom/n];this.meshData.vertexData.set(e,r)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=i[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount},o.writeMeshDataToBuffers=function(t,e,i,o){if(this.meshData){for(const i in e){const o=e[i].stride,r=this.meshData.vertexData.get(i),n=e[i].data,a=s.strideToPackingFactor(o);for(let e=0;e<o*this.meshData.vertexCount/a;++e)n[e+o*t/a]=r[e]}for(let e=0;e<this.meshData.indexData.length;++e)o[e+i]=this.meshData.indexData[e]+t;this.vertexFrom=t,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}},i.writeAllMeshDataToBuffers=function(t,e,s){let i=0,o=0;for(const r of t)r.writeMeshDataToBuffers(i,e,o,s),i+=r.vertexCount,o+=r.indexCount},o._computeSortKey=function(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType},o.serialize=function(t){return t.push(this.geometryType),t.push(this.materialKey),t.push(this.vertexFrom),t.push(this.vertexCount),t.push(this.indexFrom),t.push(this.indexCount),t.push(this.minZoom),t.push(this.maxZoom),t},i.deserialize=function(t,e){const s=t.readInt32(),o=t.readInt32(),r=new i(e.id,s,o);return r.vertexFrom=t.readInt32(),r.vertexCount=t.readInt32(),r.indexFrom=t.readInt32(),r.indexCount=t.readInt32(),r.minZoom=t.readInt32(),r.maxZoom=t.readInt32(),r},t._createClass(i,[{key:"sortKey",get:function(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}}]),i}()}));
