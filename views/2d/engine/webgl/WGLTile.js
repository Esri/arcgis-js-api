/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{a as s,m as t}from"../../../../chunks/mat2d.js";import{s as r,m as e}from"../../../../chunks/mat3.js";import{c as a}from"../../../../chunks/mat3f32.js";import{t as o}from"../../../../chunks/vec2.js";import{c as i}from"../../../../chunks/vec2f32.js";import{TILE_SIZE as n}from"./definitions.js";import{TiledDisplayObject as h}from"./TiledDisplayObject.js";class m{acquire(s){return{refCount:1,version:-1,labelMat2d:a(),tileMat3:a(),dvs:a()}}release(s){}}class c extends h{constructor(s,t,r){super(s,t,r,n,n)}destroy(){super.destroy(),this._transforms&&c.TransformCache.release(this.key.hash)}setTransform(a,n){const h=n/(a.resolution*a.pixelRatio),m=this.transforms.tileMat3,[c,f]=a.toScreenNoRotation([0,0],[this.x,this.y]),l=this.width/this.rangeX*h,u=this.height/this.rangeY*h;r(m,l,0,0,0,u,0,c,f,1),e(this.transforms.dvs,a.displayViewMat3,m);const d=this.transforms.labelMat2d,p=a.getScreenTransform(d,n),j=i();o(j,[this.x,this.y],p),s(d,j),t(d,a.viewMat2d,d)}_createTransforms(){return c.TransformCache.acquire(this.key.hash)}}c.TransformCache=new m;export{c as WGLTile};
