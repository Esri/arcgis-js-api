/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../../webgl/BufferObject","../../../webgl/FramebufferObject","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../webgl/enums","../../../webgl/RenderingContext","../../../../chunks/builtins","../../../webgl/Texture","../../../webgl/VertexArrayObject","./Utils"],(function(e,t,n,r,a,f,i,u,s,o){"use strict";return function(){function t(t){this.geometryMap=o.createGeometryData((()=>({indexBuffer:e.createIndex(t,35044),vao:null})),((n,r)=>({vertexBuffer:e.createVertex(t,o.C_VBO_INFO[r])})))}var n=t.prototype;return n.dispose=function(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}},n.get=function(e){const t=this.geometryMap[e];return{draw(e,n,r,a,f){if(!t.data.vao){const a={};for(const e in t.buffers)a[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new s(e,r,n,a,t.data.indexBuffer)}const i=t.data.vao;e.bindVAO(i),e.drawElements(4,f,5125,Uint32Array.BYTES_PER_ELEMENT*a),e.bindVAO(null)}}},n.has=function(e){return null!=this.geometryMap[e]},n.upload=function(e,t){t.forEach(((t,n)=>{this._upload(t,n,e)}))},n._upload=function(e,t,n){if(e.indices&&(e.indices.allDirty?this._uploadIndices(n,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(n,t,e.indices.from,e.indices.count)),e.vertices){const r=e.vertices;for(const e in r){const a=r[e];a.allDirty?this._uploadVertices(n,t,e):null!=a.from&&null!=a.count&&this._uploadVertices(n,t,e,a.from,a.count)}}},n._uploadVertices=function(e,t,n,r,a){const f=this.geometryMap[t];if(!f)return;const i=e.geometries[t].vertexBuffer[n];if(!i)return;const u=i.stride,s=i.data.buffer;f.buffers[n]&&s.byteLength>0&&(null!=r&&null!=a?f.buffers[n].data.vertexBuffer.setSubData(s,r*u,r*u,(r+a)*u):f.buffers[n].data.vertexBuffer.setData(s))},n._uploadIndices=function(e,t,n,r){const a=this.geometryMap[t];if(!a)return;const f=4,i=e.geometries[t].indexBuffer.buffer;a.data.indexBuffer&&i.byteLength>0&&(null!=n&&null!=r?a.data.indexBuffer.setSubData(i,n*f,n*f,(n+r)*f):a.data.indexBuffer.setData(i))},t}()}));
