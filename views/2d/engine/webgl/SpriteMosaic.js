/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Error","./definitions","./GeometryUtils","./Rect","./RectangleBinPack","../../../webgl/enums","../../../webgl/Texture"],(function(t,e,i,s,a,r,o,n){"use strict";function h(t){return t&&"static"===t.type}function c(t,e){return new n.Texture(t,{pixelFormat:o.PixelFormat.RGBA,dataType:o.PixelType.UNSIGNED_BYTE,width:e[0],height:e[1]},null)}return function(){function o(t,e,i=0){this._mosaicPages=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects=new Map,this._spriteCopyQueue=[],this.pixelRatio=1,(t<=0||e<=0)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!"),this._pageWidth=t,this._pageHeight=e,i>0&&(this._maxItemSize=i),this.pixelRatio=window.devicePixelRatio||1,this._binPack=new r(this._pageWidth,this._pageHeight);const s=Math.floor(this._pageWidth),a=Math.floor(this._pageHeight);this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(s*a)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0})}var n=o.prototype;return n.getWidth=function(t){return t>=this._mosaicPages.length?-1:this._mosaicPages[t].size[0]},n.getHeight=function(t){return t>=this._mosaicPages.length?-1:this._mosaicPages[t].size[1]},n.getPageTexture=function(t){return t<this._mosaicPages.length?this._mosaicPages[t].texture:null},n.has=function(t){return this._mosaicRects.has(t)},n.getSpriteItem=function(t){return this._mosaicRects.get(t)},n.addSpriteItem=function(t,e,s,r,o,n,c=1){if(this._mosaicRects.has(t))return this._mosaicRects.get(t);let g,u,p;if(h(s))[g,u,p]=this._allocateImage(e[0],e[1]);else{g=new a(0,0,e[0],e[1]),u=this._mosaicPages.length;const t=void 0;this._mosaicPages.push({mosaicsData:s,size:[e[0]+2*i.SPRITE_PADDING,e[1]+2*i.SPRITE_PADDING],dirty:!0,texture:t})}if(g.width<=0||g.height<=0)return null;const _={rect:g,width:e[0],height:e[1],sdf:o,simplePattern:n,pixelRatio:c,page:u};return this._mosaicRects.set(t,_),h(s)&&this._copy({rect:g,spriteSize:e,spriteData:s.data,page:u,pageSize:p,repeat:r,sdf:o}),_},n.hasItemsToProcess=function(){return 0!==this._spriteCopyQueue.length},n.processNextItem=function(){const t=this._spriteCopyQueue.pop();t&&this._copy(t)},n.getSpriteItems=function(t){const e={};for(const i of t)e[i]=this.getSpriteItem(i);return e},n.getMosaicItemPosition=function(t){const e=this.getSpriteItem(t),s=e&&e.rect;if(!s)return null;s.width=e.width,s.height=e.height;const a=e.width,r=e.height,o=i.SPRITE_PADDING,n=this._mosaicPages[e.page];return{size:[e.width,e.height],tl:[(s.x+o)/n[0],(s.y+o)/n[1]],br:[(s.x+o+a)/n[0],(s.y+o+r)/n[1]],page:e.page}},n.bind=function(t,e,i=0,s=0){const a=this._mosaicPages[i],r=a.mosaicsData;let o=a.texture;if(o||(o=c(t,a.size),a.texture=o),o.setSamplingMode(e),h(r))t.bindTexture(o,s),a.dirty&&(o.setData(new Uint8Array(r.data.buffer)),o.generateMipmap());else{r.data.bindFrame(t,o,s),o.generateMipmap()}a.dirty=!1},o._copyBits=function(t,e,i,s,a,r,o,n,h,c,g){let u=s*e+i,p=n*r+o;if(g){p-=r;for(let o=-1;o<=c;o++,u=((o+c)%c+s)*e+i,p+=r)for(let e=-1;e<=h;e++)a[p+e]=t[u+(e+h)%h]}else for(let _=0;_<c;_++){for(let e=0;e<h;e++)a[p+e]=t[u+e];u+=e,p+=r}},n._copy=function(t){if(t.page>=this._mosaicPages.length)return;const s=this._mosaicPages[t.page],a=s.mosaicsData;if(!h(s.mosaicsData))throw new e("mapview-invalid-resource","unsuitable data type!");const r=t.spriteData,n=a.data;n&&r||console.error("Source or target images are uninitialized!"),o._copyBits(r,t.spriteSize[0],0,0,n,t.pageSize[0],t.rect.x+i.SPRITE_PADDING,t.rect.y+i.SPRITE_PADDING,t.spriteSize[0],t.spriteSize[1],t.repeat),s.dirty=!0},n._allocateImage=function(t,e){t+=2*i.SPRITE_PADDING,e+=2*i.SPRITE_PADDING;const o=Math.max(t,e);if(this._maxItemSize&&this._maxItemSize<o){const i=2**Math.ceil(s.log2(t)),r=2**Math.ceil(s.log2(e)),o=new a(0,0,t,e);return this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(i*r)},size:[i,r],dirty:!0,texture:void 0}),[o,this._mosaicPages.length-1,[i,r]]}const n=this._binPack.allocate(t,e);if(n.width<=0){const i=this._mosaicPages[this._currentPage];return!i.dirty&&h(i.mosaicsData)&&(i.mosaicsData.data=null),this._currentPage=this._mosaicPages.length,this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(this._pageWidth*this._pageHeight)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0}),this._binPack=new r(this._pageWidth,this._pageHeight),this._allocateImage(t,e)}return[n,this._currentPage,[this._pageWidth,this._pageHeight]]},n.dispose=function(){this._binPack=null;for(const t of this._mosaicPages){const e=t.texture;e&&e.dispose();const i=t.mosaicsData;if(!h(i)){i.data.destroy()}}this._mosaicPages=null,this._mosaicRects.clear()},t._createClass(o,[{key:"itemCount",get:function(){return this._mosaicRects.size}}]),o}()}));
