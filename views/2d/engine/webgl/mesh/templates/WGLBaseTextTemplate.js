/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/maybe","../../../../../../core/screenUtils","../../../../../../layers/graphics/featureConversionUtils","../../definitions","../../number","./shapingUtils","../../enums","../../materialKey/MaterialKey","../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper"],(function(e,t,i,s,r,n,o,h,a,l){"use strict";return u=>function(u){function c(...e){var t;return(t=u.call(this,...e)||this)._isCIM=!1,t.geometryType=h.WGLGeometryType.TEXT,t._aux=n.i8888to32(0,0,t._referenceSize,t._bitset),t}e._inheritsLoose(c,u);var p=c.prototype;return p.bindTextInfo=function(e,i){e&&e.length?this._shapingInfo=t.andThen(e,(e=>o.shapeGlyphs(e,i,{scale:this._scale,angle:this._angle,xOffset:this._xOffset,yOffset:this._yOffset,hAlign:this._xAlignD,vAlign:this._yAlignD,maxLineWidth:Math.max(32,Math.min(this._lineWidth,512)),lineHeight:r.MAGIC_LABEL_LINE_HEIGHT*Math.max(.25,Math.min(this._lineHeight,4)),decoration:this._decoration,isCIM:this._isCIM}))):this._shapingInfo=null},p.writeMeshWithGeometry=function(e,i,r,n,o,h){if(t.isSome(this._textPlacement)){const t=null!=h?h:r.readLegacyGeometry();return this._writePlacedText(e,i,o,t)}const a=h?s.deltaDecodeGeometry(s.convertFromGeometry(h),2):"esriGeometryPolygon"===n?r.readCentroid():r.readUnquantizedGeometry();if(a){if(a.isPoint){const[t,s]=a.coords;return this._writeGlyphs(e,i,o,{x:t,y:s})}a.forEachVertex(((t,s)=>this._writeGlyphs(e,i,o,{x:t,y:s})))}},p._writePlacedText=function(e,s,r,o){const h=this._shapingInfo;if(t.isNone(h))return;const u=a.MaterialKeyBase.load(this._materialKey),c=t.unwrap(this._textPlacement),p=l.CIMMarkerPlacementHelper.getPlacement(o,c,i.pt2px(1));if(!p)return;let f,_,m=p.next();for(;null!=m;){_=n.i1616to32(Math.round(8*m.tx),Math.round(8*m.ty)),f=m.getAngle(),h.setRotation(f);for(const t of h.glyphs){u.textureBinding=t.textureBinding;const i=s.getVector("geometry").vertexCount,n=s.indexVector.length,o=this._writeIndices(s),h=this._writeVertex(s,r,_,t);e.writeDisplayRecord(this.geometryType,u.data,i,h,n,o)}h.setRotation(-f),m=p.next()}},p._writeGlyphs=function(e,i,s,r){const o=this._shapingInfo;if(t.isNone(o))return;const h=a.MaterialKeyBase.load(this._materialKey),l=n.i1616to32(Math.round(8*r.x),Math.round(8*r.y));for(const t of o.glyphs){h.textureBinding=t.textureBinding;const r=i.getVector("geometry").vertexCount,n=i.indexVector.length,o=this._writeIndices(i),a=this._writeVertex(i,s,l,t);e.writeDisplayRecord(this.geometryType,h.data,r,a,n,o)}},p._writeVertexCommon=function(e,t,i,s){const r=this._color,o=this._haloColor,h=n.i8888to32(0,0,this._referenceSize,this._bitset),a=n.i8888to32(0,0,this._size,this._haloSize);e.push(i),e.push(t),e.push(r),e.push(o),e.push(a),e.push(h)},p._writeVertex=function(e,t,i,s){const r=e.get("geometry");return this._writeVertexCommon(r,t,i,s),r.push(s.offsets.upperLeft),r.push(s.texcoords.upperLeft),this._writeVertexCommon(r,t,i,s),r.push(s.offsets.upperRight),r.push(s.texcoords.upperRight),this._writeVertexCommon(r,t,i,s),r.push(s.offsets.lowerLeft),r.push(s.texcoords.lowerLeft),this._writeVertexCommon(r,t,i,s),r.push(s.offsets.lowerRight),r.push(s.texcoords.lowerRight),4},p._writeIndices=function(e){const t=e.getVector("geometry").vertexCount,i=e.indexVector;return i.push(t+0),i.push(t+1),i.push(t+2),i.push(t+1),i.push(t+3),i.push(t+2),6},c}(u)}));
