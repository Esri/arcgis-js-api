/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/Logger","../../../../../../symbols/cim/cimAnalyzer","./WGLMeshTemplate"],(function(e,t,a,i){"use strict";const r=t.getLogger("esri.views.2d.engine.webgl.WGLDynamicMeshTemplate");return function(t){function i(e){var a;return(a=t.call(this)||this)._ongoingMaterialRequestMap=new Map,a._materialCache=new Map,a._dynamicPropertyMap=new Map,a._cimLayer=e,a}return e._inheritsLoose(i,t),i.prototype.analyze=function(e,t,i,n){const s=t.readLegacyFeature(),o=this._materialCache,c=this._cimLayer.materialHash;if(!c)return r.error("A Dynamic mesh template must have a material hash value or function!"),Promise.reject(null);const l="function"==typeof c?c(s,i,n):c;if(o.has(l)){const e=o.get(l);return Promise.resolve(e)}if(this._ongoingMaterialRequestMap.has(l))return this._ongoingMaterialRequestMap.get(l);const u=a.analyzeCIMResource(this._cimLayer.cim,this._cimLayer.materialOverrides);u.mosaicHash=l;const h=e.getMosaicItem(u).then((e=>(this._ongoingMaterialRequestMap.delete(l),o.set(l,e),e))).catch((e=>(this._ongoingMaterialRequestMap.delete(l),r.error(".analyze()",e.message),null)));return this._ongoingMaterialRequestMap.set(l,h),h},i}(i)}));
