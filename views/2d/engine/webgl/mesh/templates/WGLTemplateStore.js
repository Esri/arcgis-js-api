/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/Logger","../../../../../../core/Error","../../../../../../core/promiseUtils","../../../../../../symbols/support/defaults","../../util/Result","../../../../layers/features/schemaUtils","./WGLTextTemplate","./WGLMarkerTemplate","./WGLDynamicFillTemplate","./WGLDynamicLineTemplate","./WGLDynamicMarkerTemplate","../../../../layers/features/textUtils","./WGLDynamicTextTemplate","./WGLFillTemplate","./WGLLineTemplate","../../util/Lock"],(function(e,t,r,i,s,a,o,c,n,l,m,h,u,p,_,f,T,M){"use strict";const y=r.getLogger("esri.views.2d.engine.webgl.mesh.templates.WGLTemplateStore"),I=new Array;function d(e,t){const r=e.length;return e.push(null),t.then((t=>e[r]=t)),e}function k(e){return!!(1&e)}function S(e){return"worker:port-closed"===e.name}let g=function(){function e(e,t){this._idCounter=1,this._templateIdCounter=1,this._idToTemplateGroup=new Map,this._symbolToTemplate=new Map,this._fetchQueue=[],this._idToResolver=new Map,this._cimTemplateCache=new Map,this._cimAnalyses=[],this._lock=new M.default,this._fetchResource=e,this._joinOnUTurn=t}var r=e.prototype;return r.createTemplateGroup=function(e,t){this._initErrorTemplates();const r=e.hash;if(this._symbolToTemplate.has(r))return this._symbolToTemplate.get(r);const i=new Array;t&&this._createMeshTemplates(i,t,!0),this._createMeshTemplates(i,e,!1);const s=this._createGroupId("expanded-cim"===e.type);return this._idToTemplateGroup.set(s,i),this._symbolToTemplate.set(r,s),s},r.getTemplateGroup=function(e){return this._idToTemplateGroup.has(e)?this._idToTemplateGroup.get(e):I},r.getDynamicTemplateGroup=function(e){return this._idToTemplateGroup.has(e)?(k(e)||y.error("mapview-template-store",`Id ${e} does not refer to a dynamic template`),this._idToTemplateGroup.get(e)):I},r.getMosaicItem=function(e,t){const r=this._createTemplateId(),i=new Promise((e=>this._idToResolver.set(r,e)));return this._fetchQueue.push({symbol:e,id:r,glyphIds:t}),i},r.finalize=function(e){return this._fetchQueue.length||this._lock.isHeld()?M.withLock(this._lock,this._fetchAllQueuedResources.bind(this),e):Promise.resolve()},r._initErrorTemplates=function(){this._errorTemplates||(this._errorTemplates={fill:this._createMeshTemplates([],c.createSymbolSchema(a.errorPolygonSymbol2D),!1),marker:this._createMeshTemplates([],c.createSymbolSchema(a.errorPointSymbol2D),!1),line:this._createMeshTemplates([],c.createSymbolSchema(a.errorPolylineSymbol2D),!1)})},r._fetchAllQueuedResources=function(e){if(!this._fetchQueue.length)return Promise.resolve();const t=this._fetchQueue,r=this._cimAnalyses;return this._fetchQueue=[],this._cimAnalyses=[],Promise.all(r).then((()=>this._fetchResource(t,e).then((e=>{for(const{id:t,mosaicItem:r}of e){this._idToResolver.get(t)(r),this._idToResolver.delete(t)}})))).catch((e=>{s.isAbortError(e)?this._fetchQueue=this._fetchQueue.concat(t):S(e)||y.error(new i("mapview-template-store","Unable to fetch requested texture resources",e))}))},r._createGroupId=function(e){return this._idCounter++<<1|(e?1:0)},r._createTemplateId=function(){return this._templateIdCounter++},r._createSMS=async function(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e);return o.ok(t,y)?l.fromSimpleMarker(e,t):this._markerError},r._createPMS=async function(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e);return o.ok(t,y)?l.fromPictureMarker(e,t):this._markerError},r._createSFS=async function(e,t){const{spriteMosaicItem:r}=await this.getMosaicItem(e);return o.ok(r,y)?f.fromSimpleFill(e,r,t):this._fillError},r._createPFS=async function(e,t){const{spriteMosaicItem:r}=await this.getMosaicItem(e);return o.ok(r,y)?f.fromPictureFill(e,r,t):this._fillError},r._createSLS=async function(e,t){const{spriteMosaicItem:r}=await this.getMosaicItem(e);return o.ok(r,y)?T.fromSimpleLine(e,r,this._joinOnUTurn):this._lineError},r._createLMS=async function(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e);return o.ok(t,y)?l.fromLineSymbolMarker(e,t):this._markerError},r._createTS=async function(e){const{glyphMosaicItems:t}=await this.getMosaicItem(e);return n.fromText(e,t)},r._createCIMText=async function(e){const{glyphMosaicItems:t}=await this.getMosaicItem(e.cim,p.codepoints(e.text));return o.ok(t,y)?n.fromCIMText(e,t):this._textError},r._createCIMFill=async function(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e.cim);return o.ok(t,y)?f.fromCIMFill(e,t):this._fillError},r._createCIMLine=async function(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e.cim);return o.ok(t,y)?T.fromCIMLine(e,t,this._joinOnUTurn):this._lineError},r._createCIMMarker=async function(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e.cim);return o.ok(t,y)?l.fromCIMMarker(e,t):this._markerError},r._createCIM=async function(e){const t=e.templateHash;if(this._cimTemplateCache.has(t))return this._cimTemplateCache.get(t);const r={...e,cim:{...e.cim,mosaicHash:e.materialHash}};let i;switch(r.type){case"marker":i=this._createCIMMarker(r);break;case"line":i=this._createCIMLine(r);break;case"fill":i=this._createCIMFill(r);break;case"text":i=this._createCIMText(r)}return i.then((e=>this._cimTemplateCache.set(t,e))),i},r._createDynamicCIM=function(e){const t=e.templateHash;if(this._cimTemplateCache.has(t))return this._cimTemplateCache.get(t);let r;switch(e.type){case"marker":r=u.fromCIMMarker(e);break;case"line":r=h.fromCIMLine(e);break;case"fill":r=m.fromCIMFill(e);break;case"text":r=_.fromCIMText(e)}return this._cimTemplateCache.set(t,r),r},r._createPrimitiveMeshTemplates=function(e,t,r){switch(t.type){case"esriSMS":return d(e,this._createSMS(t));case"esriPMS":return d(e,this._createPMS(t));case"esriSFS":return d(e,this._createSFS(t,r));case"line-marker":return d(e,this._createLMS(t));case"esriPFS":return d(e,this._createPFS(t,r));case"esriSLS":return d(e,this._createSLS(t,!1));case"esriTS":return d(e,this._createTS(t));default:return y.error("Unable to create mesh template for unknown symbol type {: $ }{symbol.type}"),e}},r._createMeshTemplates=function(e,t,r){if(-1!==t.type.indexOf("3d"))return y.error("3D symbols are not supported with MapView"),e;if("expanded-cim"===t.type){for(const r of t.layers)"function"==typeof r.materialHash?e.push(this._createDynamicCIM(r)):d(e,this._createCIM(r));return e}if("composite-symbol"===t.type){for(const i of t.layers)this._createPrimitiveMeshTemplates(e,i,r);return e}return"cim"===t.type||"label"===t.type||"web-style"===t.type?e:this._createPrimitiveMeshTemplates(e,t,r)},t._createClass(e,[{key:"_markerError",get:function(){return this._errorTemplates.marker[0]}},{key:"_fillError",get:function(){return this._errorTemplates.fill[0]}},{key:"_lineError",get:function(){return this._errorTemplates.line[0]}},{key:"_textError",get:function(){return this._errorTemplates.line[0]}}]),e}();e.WGLTemplateStore=g,e.isDynamicId=k,Object.defineProperty(e,"__esModule",{value:!0})}));
