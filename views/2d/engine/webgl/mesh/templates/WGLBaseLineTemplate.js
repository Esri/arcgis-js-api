/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/maybe","../../definitions","../../enums","../../number","../../TurboLine","../../materialKey/MaterialKey","./templateUtils"],(function(e,t,i,s,r,o,n,l){"use strict";const a=8,h=31,u=1024,c=65535,p=r=>function(r){function a(...e){var t;return(t=r.call(this,...e)||this).tessellationProperties={},t._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0},t.geometryType=s.WGLGeometryType.LINE,t}e._inheritsLoose(a,r);var h=a.prototype;return h._initializeTessellator=function(e){const t=n.LineMaterialKey.load(this._materialKey),s=this._tessellationOptions,r=t.vvSizeFieldStops||t.vvSizeMinMaxValue||t.vvSizeScaleStops||t.vvSizeUnitValue,l=this.tessellationProperties._halfWidth<i.THIN_LINE_HALF_WIDTH_THRESHOLD;this.tessellationProperties.minMaxZoom=this._minMaxZoom;const a=l&&!e&&!r;s.wrapDistance=c,s.textured=this._isDashed||this._hasPattern,s.offset=this.tessellationProperties.offset,s.halfWidth=this.tessellationProperties._halfWidth;const h=a?0:1;this._lineTessellator=new o.LineTessellation(_(this.tessellationProperties,h,h),d(this.tessellationProperties),a)},h._write=function(e,t,i){const s="esriGeometryPoint"===t.geometryType;e.recordStart(t.getDisplayId(),this._materialKey,this.geometryType,!1,s),this._writeGeometry(e,t,i,s),e.recordEnd()},h._writeGeometry=function(e,i,s,r){const o=null!=s?s:i.readLegacyGeometryForDisplay(),n=this._getLines(o,r);t.isNone(n)||this._writeVertices(e,i,n)},h._getLines=function(e,i){if(t.isNone(e))return null;const s=e.paths||e.rings;if(t.isNone(s))return null;const r=i?256:16;return l.clipLinesMarshall(s,r)},h._writeVertices=function(e,t,i){const s=t.getDisplayId(),r=e.vertexCount(),o=this.tessellationProperties,n=this._tessellationOptions;o.out=e,o.id=s,o.indexCount=0,o.vertexCount=0,o.offset=r,n.capType=this._capType,n.joinType=this._joinType;for(const{line:l,start:a}of i)n.initialDistance=a%c,this._lineTessellator.tessellate(l,n)},a}(r),_=(e,t,i)=>(s,o,n,l,c,p,_,d,f,y,x)=>{const v=r.i1616to32(x,Math.ceil(u*e._halfWidth)),m=r.i8888to32(Math.round(h*_),Math.round(h*d),Math.round(h*f),Math.round(h*y)),W=r.i8888to32(h*c,h*p,0,e._bitset),T=e.out;return T.vertexBounds(s,o,t,i),T.vertexWrite(r.i1616to32(a*s,a*o)),T.vertexWrite(e.id),T.vertexWrite(e._fillColor),T.vertexWrite(m),T.vertexWrite(v),T.vertexWrite(e._tl),T.vertexWrite(e._br),T.vertexWrite(W),T.vertexWrite(r.i1616to32(Math.ceil(u*e._halfReferenceWidth),0)),T.vertexWrite(e.minMaxZoom),T.vertexEnd(),e.offset+e.vertexCount++},d=e=>(t,i,s)=>{const r=e.out;r.indexWrite(t),r.indexWrite(i),r.indexWrite(s),e.indexCount+=3};return p}));
