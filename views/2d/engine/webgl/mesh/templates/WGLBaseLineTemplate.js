/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/maybe","../../definitions","../../number","../../enums","../../materialKey/MaterialKey","./templateUtils","../../TurboLine"],(function(e,t,r,i,n,o,s,l){"use strict";const a=8,x=31,u=1024,h=65535,c=1/3.8,d=i=>function(i){function a(...e){var t;return(t=i.call(this,...e)||this).tessellationProperties={},t._tessellationOptions={},t.geometryType=n.WGLGeometryType.LINE,t}e._inheritsLoose(a,i);var x=a.prototype;return x._initializeTessellator=function(e){const t=o.LineMaterialKey.load(this._materialKey),i=this._tessellationOptions,n=t.vvSizeFieldStops||t.vvSizeMinMaxValue||t.vvSizeScaleStops||t.vvSizeUnitValue,s=this.tessellationProperties._halfWidth<r.THIN_LINE_THRESHOLD/2;if(i.thin=s&&!e&&!n,i.trackDistance=this._isDashed||this._hasPattern,i.wrapDistance=h,i.innerBisectorAutoSplitThreshold=c,i.outerBisectorAutoSplitThreshold=c,i.enableInnerBisectorSplit=this._isDashed||this._hasPattern,i.enableOuterBisectorSplit=this._isDashed||this._hasPattern,i.thin)return void(this._tessellationCallbacks={vertex:v(this.tessellationProperties),bridge:_(this.tessellationProperties)});const a=new l.StandardTessellationCallbacks(W(this.tessellationProperties),f(this.tessellationProperties));a.miterLimitCosine=this._miterLimitCosine,a.textured=this._isDashed||this._hasPattern,a.joinOnUTurn=this._joinOnUTurn,this._tessellationCallbacks=a},x._write=function(e,t,r){const i="esriGeometryPoint"===t.geometryType;e.recordStart(t.getDisplayId(),this._materialKey,this.geometryType,!1,i),this._writeGeometry(e,t,r,i),e.recordEnd()},x._writeGeometry=function(e,r,i,n){const o=null!=i?i:r.readLegacyGeometry(),s=this._getLines(o,n);t.isNone(s)||this._writeVertices(e,r,s)},x._getLines=function(e,r){if(t.isNone(e))return null;const i=e.paths||e.rings;if(t.isNone(i))return null;const n=r?256:16;return s.clipLinesMarshall(i,n)},x._writeVertices=function(e,t,r){const i=t.getDisplayId(),n=e.vertexCount(),o=this.tessellationProperties;o.out=e,o.id=i,o.indexCount=0,o.vertexCount=0,o.offset=n;for(const{line:s,start:a}of r)this._tessellationOptions.initialDistance=a%h,this._tessellationCallbacks instanceof l.StandardTessellationCallbacks&&(this._tessellationCallbacks.capType=this._capType,this._tessellationCallbacks.joinType=this._joinType),l.tessellate(s,this._tessellationOptions,this._tessellationCallbacks),l.cleanup()},a}(i),v=e=>t=>{const r=e.out,n=Math.ceil(u*e._halfWidth),o=Math.ceil(u*e._halfReferenceWidth);t.entry0=e.offset+e.vertexCount++;{const s=i.i1616to32(t.distance,n),l=i.i8888to32(Math.round(x*t.prevNormal.x),Math.round(x*t.prevNormal.y),Math.round(0*x),Math.round(-1*x)),u=i.i8888to32(0,0,0,e._bitset);r.vertexBounds(t.currentVertex.x,t.currentVertex.y,0,0),r.vertexWrite(i.i1616to32(a*t.currentVertex.x,a*t.currentVertex.y)),r.vertexWrite(e.id),r.vertexWrite(e._fillColor),r.vertexWrite(l),r.vertexWrite(s),r.vertexWrite(e._tl),r.vertexWrite(e._br),r.vertexWrite(u),r.vertexWrite(i.i1616to32(o,0)),r.vertexEnd()}t.entry2=e.offset+e.vertexCount++;{const s=i.i1616to32(t.distance,n),l=i.i8888to32(Math.round(x*-t.prevNormal.x),Math.round(x*-t.prevNormal.y),Math.round(0*x),Math.round(1*x)),u=i.i8888to32(0,0,0,e._bitset);r.vertexBounds(t.currentVertex.x,t.currentVertex.y,0,0),r.vertexWrite(i.i1616to32(a*t.currentVertex.x,a*t.currentVertex.y)),r.vertexWrite(e.id),r.vertexWrite(e._fillColor),r.vertexWrite(l),r.vertexWrite(s),r.vertexWrite(e._tl),r.vertexWrite(e._br),r.vertexWrite(u),r.vertexWrite(i.i1616to32(o,0)),r.vertexEnd()}t.exit0=e.offset+e.vertexCount++;{const s=i.i1616to32(t.distance,n),l=i.i8888to32(Math.round(x*t.nextNormal.x),Math.round(x*t.nextNormal.y),Math.round(0*x),Math.round(-1*x)),u=i.i8888to32(0,0,0,e._bitset);r.vertexBounds(t.currentVertex.x,t.currentVertex.y,0,0),r.vertexWrite(i.i1616to32(a*t.currentVertex.x,a*t.currentVertex.y)),r.vertexWrite(e.id),r.vertexWrite(e._fillColor),r.vertexWrite(l),r.vertexWrite(s),r.vertexWrite(e._tl),r.vertexWrite(e._br),r.vertexWrite(u),r.vertexWrite(i.i1616to32(o,0)),r.vertexEnd()}t.exit2=e.offset+e.vertexCount++;{const s=i.i1616to32(t.distance,n),l=i.i8888to32(Math.round(x*-t.nextNormal.x),Math.round(x*-t.nextNormal.y),Math.round(0*x),Math.round(1*x)),u=i.i8888to32(0,0,0,e._bitset);r.vertexBounds(t.currentVertex.x,t.currentVertex.y,0,0),r.vertexWrite(i.i1616to32(a*t.currentVertex.x,a*t.currentVertex.y)),r.vertexWrite(e.id),r.vertexWrite(e._fillColor),r.vertexWrite(l),r.vertexWrite(s),r.vertexWrite(e._tl),r.vertexWrite(e._br),r.vertexWrite(u),r.vertexWrite(i.i1616to32(o,0)),r.vertexEnd()}},_=e=>t=>{const r=e.out;r.indexWrite(t.leftExit0),r.indexWrite(t.rightEntry0),r.indexWrite(t.leftExit2),r.indexWrite(t.rightEntry0),r.indexWrite(t.rightEntry2),r.indexWrite(t.leftExit2),e.indexCount+=6},W=e=>(t,r,n,o,s,l,h,c,d)=>{const v=i.i1616to32(d,Math.ceil(u*e._halfWidth)),_=i.i8888to32(Math.round(x*s),Math.round(x*l),Math.round(x*h),Math.round(x*c)),W=i.i8888to32(x*n,x*o,0,e._bitset),f=e.out;return f.vertexBounds(t,r,1,1),f.vertexWrite(i.i1616to32(a*t,a*r)),f.vertexWrite(e.id),f.vertexWrite(e._fillColor),f.vertexWrite(_),f.vertexWrite(v),f.vertexWrite(e._tl),f.vertexWrite(e._br),f.vertexWrite(W),f.vertexWrite(i.i1616to32(Math.ceil(u*e._halfReferenceWidth),0)),f.vertexEnd(),e.offset+e.vertexCount++},f=e=>(t,r,i)=>{const n=e.out;n.indexWrite(t),n.indexWrite(r),n.indexWrite(i),e.indexCount+=3};return d}));
