/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{unwrapOr as t}from"../../../../../../core/maybe.js";import{pt2px as e}from"../../../../../../core/screenUtils.js";import{c as o}from"../../../../../../chunks/mat2df32.js";import{c as s}from"../../../../../../chunks/vec2f32.js";import{Alignment as i,ExtremityPlacement as r}from"../../../../../../symbols/cim/enums.js";import{premultiplyAlphaRGBA as a,premultiplyAlphaRGBAArray as n}from"../../color.js";import{MIN_MAX_ZOOM_PRECISION_FACTOR as h,BITSET_MARKER_ALIGNMENT_MAP as l,BITSET_MARKER_ALIGNMENT_SCREEN as m,BITSET_GENERIC_LOCK_COLOR as f,BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE as c,BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY as u,SPRITE_PADDING as d,PICTURE_FILL_COLOR as p}from"../../definitions.js";import{WGLSymbologyType as x}from"../../enums.js";import{i1616to32 as M,i8888to32 as y}from"../../number.js";import{MarkerMaterialKey as _}from"../../materialKey/MaterialKey.js";import{getMinMaxZoom as S,DEFAULT_MIN_ZOOM as g,DEFAULT_MAX_ZOOM as V}from"./util.js";import z from"./WGLBaseMarkerTemplate.js";import B from"./WGLMeshTemplate.js";class b extends(z(B)){constructor(t,e,r,a,n,p,S,g,V,z,B,b,k,w,L,R,j,C,P,E,U,A,T){super(),this.angle=a,this.height=S,this.width=p,this.xOffset=e*P,this.yOffset=r*P,this._markerPlacement=E,this._effects=U,this._anchorX=.5-(.5+R)*L.width/L.width,this._anchorY=.5-(.5+j)*L.height/L.height,this._minMaxZoom=M(Math.round(A*h),Math.round(T*h));const v=(w===i.MAP?l:m)|(B?f:0)|(k?c:0)|(b?u:0),K=L&&L.sdf,W=_.load(t);W.sdf=K,W.pattern=!0,W.textureBinding=L.textureBinding,this._materialKey=W.data,this._fillColor=n,this._outlineColor=V,this._sizeOutlineWidth=y(Math.round(Math.min(Math.sqrt(128*p),255)),Math.round(Math.min(Math.sqrt(128*S),255)),Math.round(Math.min(Math.sqrt(128*z),255)),Math.round(Math.min(Math.sqrt(128*g),255)));const X=L.rect.x+d,q=L.rect.y+d,Y=X+L.width,H=q+L.height;this._offsets.xUpperLeft=X,this._offsets.yUpperLeft=q,this._offsets.xUpperRight=Y,this._offsets.yUpperRight=q,this._offsets.xBottomLeft=X,this._offsets.yBottomLeft=H,this._offsets.xBottomRight=Y,this._offsets.yBottomRight=H,W.symbologyType===x.PIE_CHART?(this._texUpperLeft=M(0,1),this._texUpperRight=M(1,1),this._texBottomLeft=M(0,0),this._texBottomRight=M(1,0)):(this._texUpperLeft=M(X,q),this._texUpperRight=M(Y,q),this._texBottomLeft=M(X,H),this._texBottomRight=M(Y,H)),p*=C,S*=C,p*=P,S*=P;const I=Math.round(64*C);this._bitestAndDistRatio=M(v,I),this._computedWidth=p,this._computedHeight=S;const N=s(),O=o();this._applyTransformation(O,N)}static fromCIMMarker(o,s,r){const n=s&&s.width||1,h=s&&s.height||1,l=o.size,m=n/h*o.scaleX,f=o.scaleSymbolsProportionally&&o.frameHeight?l/o.frameHeight:1;let c=a(o.color);const u=a(o.outlineColor),d=e(l),p=d*m,x=e(o.offsetX||0),M=e(o.offsetY||0),y=e(o.outlineWidth||0)*f,_=o.alignment||i.SCREEN,g=e(o.referenceSize),[V,z]=S(o.scaleInfo,r);s.sdf||0!==c||(c=-1);let B=o.rotation||0;o.rotateClockwise||(B=-B);let k=0,w=0;const L=o.anchorPoint;L&&(o.isAbsoluteAnchorPoint?l&&(k=-L.x/(l*m),w=L.y/l):(k=L.x,w=L.y));const R=new b(o.materialKey,x,M,B,c,p,d,g,u,y,o.colorLocked,o.scaleSymbolsProportionally,!1,_,s,k,w,o.sizeRatio,t(o.scaleFactor,1),o.markerPlacement,o.effects,V,z);return R._vertexBoundsScaleX=o.maxVVSize?o.maxVVSize/p:1,R._vertexBoundsScaleY=o.maxVVSize?o.maxVVSize/d:1,R}static fromPictureMarker(t,o){const s=Math.round(e(t.width)),r=Math.round(e(t.height)),a=p,n=Math.round(e(t.xoffset||0)),h=Math.round(e(t.yoffset||0)),l=new b(t.materialKey,n,h,t.angle,a,s,r,r,0,0,!1,!1,!1,i.SCREEN,o,0,0,1,1,null,null,g,V);return l._vertexBoundsScaleX=t.maxVVSize?t.maxVVSize/t.width:1,l._vertexBoundsScaleY=t.maxVVSize?t.maxVVSize/t.height:1,l}static fromSimpleMarker(t,o){const s=n(t.color),r=Math.round(e(t.size)),a=r,h=Math.round(e(t.xoffset||0)),l=Math.round(e(t.yoffset||0)),m=t.style,f=t.outline,c=0|(f&&f.color&&n(f.color)),u=0|(f&&f.width&&Math.round(e(f.width))),d=new b(t.materialKey,h,l,t.angle,s,r,a,a,c,u,!1,!1,"esriSMSCross"===m||"esriSMSX"===m,i.SCREEN,o,0,0,126/64,1,null,null,g,V);return d.boundsType="esriSMSCircle"===m?"circle":"square",d._vertexBoundsScaleX=t.maxVVSize?t.maxVVSize/t.size:1,d._vertexBoundsScaleY=t.maxVVSize?t.maxVVSize/t.size:1,d}static fromLineSymbolMarker(t,o){const s=n(t.color),a=6,h=Math.round(e(a*t.lineWidth)),l=h,m="cross"===t.style||"x"===t.style;let f;switch(t.placement){case"begin-end":f=r.Both;break;case"begin":f=r.JustBegin;break;case"end":f=r.JustEnd;break;default:f=r.None}const c={type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:f,offsetAlongLine:0},u=new b(t.materialKey,0,0,0,s,h,l,l/a,s,m?Math.round(e(t.lineWidth)):0,!1,!1,m,i.MAP,o,0,0,126/64,1,c,null,g,V);return u.boundsType="circle"===t.style?"circle":"square",u}}export{b as default};
