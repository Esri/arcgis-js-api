/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../tiling/PagedTileQueue","../../../tiling/TileInfoView","../../../tiling/TileKey","../../../tiling/TileQueue","../../../tiling/TileStrategy","../definitions","../DisplayId","../enums","../Utils","./VertexDataWriter","../../../layers/features/support/tileUtils"],(function(e,t,r,i,n,s,u,a,c,o,h,l,_){"use strict";const d=1,f=2,y=4,p=8,g=16,x=32,m=64,w=128;function L(e){switch(e){case d:case p:case x:return-1;case f:case m:return 0;case y:case g:case w:return 1}}function v(e){switch(e){case d:case f:case y:return-1;case p:case g:return 0;case x:case m:case w:return 1}}const E=d|p|x,T=y|g|w,W=d|f|y,G=x|m|w;let S=function(){function e(e,t,r,i,n){this._hasAggregate=!1,this.hasRecords=!1,this._data={self:new Map,neighbors:new Array},this._current={geometryType:0,writer:null,overlaps:0,start:0,insertAfter:0,sortKey:0,id:0,materialKey:0,indexStart:0,vertStart:0,isDotDensity:!1,bufferingEnabled:!1,metricBoxLenPointer:0},this.hint=t,this.tileKey=e,this._hasAggregate=i,this._pixelBufferEnabled=n,this._strideOptions=r}var r=e.prototype;return r.serialize=function(e){const t=[];return t.push(this._serializeTileVertexData(this.tileKey,this.tileKey,this._data.self)),this._data.neighbors.forEach(((r,i)=>{const s=1<<i,u=L(s),a=v(s),c=_.getPow2NeighborKey(new n(this.tileKey),u,a,e),o=this._serializeTileVertexData(this.tileKey,c.id,r.vertexData);o.message.bufferIds=r.displayIds,t.push(o)})),t},r._serializeTileVertexData=function(e,t,r){var i,n,s,u,a;const c=new Array;return{message:{tileKeyOrigin:e,tileKey:t,data:{[o.WGLGeometryType.MARKER]:null==(i=r.get(o.WGLGeometryType.MARKER))?void 0:i.serialize(c),[o.WGLGeometryType.FILL]:null==(n=r.get(o.WGLGeometryType.FILL))?void 0:n.serialize(c),[o.WGLGeometryType.LINE]:null==(s=r.get(o.WGLGeometryType.LINE))?void 0:s.serialize(c),[o.WGLGeometryType.TEXT]:null==(u=r.get(o.WGLGeometryType.TEXT))?void 0:u.serialize(c),[o.WGLGeometryType.LABEL]:null==(a=r.get(o.WGLGeometryType.LABEL))?void 0:a.serialize(c)}},transferList:c}},r.featureStart=function(e,t){this._current.insertAfter=e,this._current.sortKey=t},r.featureEnd=function(){},r.recordStart=function(e,t,r,i){this._current.writer=this._getVertexWriter(r),this._current.overlaps=0,this._current.indexStart=this._current.writer.indexCount,this._current.vertStart=this._current.writer.vertexCount,this._current.bufferingEnabled=i,this._current.id=e,this._current.materialKey=t,this._current.geometryType=r,this._current.isDotDensity=!1,this._current.writer.recordStart()},r.recordCount=function(){return this._current.writer.recordCount},r.vertexCount=function(){return this._current.writer.vertexCount},r.indexCount=function(){return this._current.writer.indexCount},r.vertexEnsureSize=function(e){this._current.writer.vertexEnsureSize(e)},r.indexEnsureSize=function(e){this._current.writer.indexEnsureSize(e)},r.vertexBounds=function(e,t,r,i){this._current.bufferingEnabled&&this._addOverlap(e,t,r,i)},r.vertexWrite=function(e){this._current.writer.writeVertex(e)},r.vertexWriteF32=function(e){this._current.writer.writeVertexF32(e)},r.vertexEnd=function(){},r.vertexWriter=function(){return this._current.writer.vertexWriter},r.indexWrite=function(e){this._current.writer.writeIndex(e)},r.indexWriter=function(){return this._current.writer.indexWriter},r.metricWriter=function(){return this._current.writer.metricWriter},r.metricStart=function(e,t,r,i,n,s,u,a){this._current.writer=this._getVertexWriter(o.WGLGeometryType.LABEL);const h=this._current.writer.metricWriter;h.push(c.getDisplayIdTexel(e)),h.push(t),h.push(r),h.push(i),h.push(n),h.push(s),h.push(u),h.push(a),h.push(255),this._current.metricBoxLenPointer=h.push(0)},r.metricEnd=function(){const e=this._current.writer.metricWriter;0===e.getValue(this._current.metricBoxLenPointer)&&e.seek(e.length-10)},r.metricBoxWrite=function(e,t,r,i){const n=this._current.writer.metricWriter;n.incr(this._current.metricBoxLenPointer),n.push(0),n.push(0),n.push(e),n.push(t),n.push(r),n.push(i)},r.recordEnd=function(){const e=this._current.vertStart,t=this._current.writer.vertexCount-e;if(!t)return!1;this.hasRecords=!0;const r=this._current.indexStart,i=this._current.writer.indexCount-r;if(this._current.writer.recordEnd(this._current.id,this._current.materialKey,this._current.insertAfter,r,i,e,t,this._current.sortKey),!this._pixelBufferEnabled||this._hasAggregate||0===this._current.overlaps||this._current.geometryType===o.WGLGeometryType.LABEL)return!0;const n=this._current.writer;for(let s=0;s<8;s++){const e=1<<s;if(!!(this._current.overlaps&e)){this._data.neighbors[s]||(this._data.neighbors[s]={vertexData:new Map,displayIds:new Set});const t=this._data.neighbors[s],r=this._current.geometryType;if(!t.vertexData.has(r)){const e=h.getStrides(r,this._strideOptions).geometry,i=new l.VertexDataWriter(r,e,a.PATCH_PIXEL_BUFFER_ALLOC_SIZE);t.vertexData.set(r,i)}const i=t.vertexData.get(this._current.geometryType),u=8,c=512*-L(e)*u,o=512*-v(e)*u;i.copyLastFrom(n,c,o),t.displayIds.add(this._current.id)}}return!0},r._addOverlap=function(e,t,r,i){const n=255^((e<0+r?T:e>=a.TILE_SIZE-r?E:T|E)|(t<0+i?G:t>=a.TILE_SIZE-i?W:G|W));this._current.overlaps|=n},r._getVertexWriter=function(e){if(!this._data.self.has(e)){const t=this._data.self,r=h.getStrides(e,this._strideOptions).geometry;t.set(e,new l.VertexDataWriter(e,r,this.hint.records))}return this._data.self.get(e)},t._createClass(e,[{key:"hasAggregates",get:function(){return this._hasAggregate}},{key:"hasPixelBufferEnabled",get:function(){return this._pixelBufferEnabled}}]),e}();e.MeshData=S,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
