/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{TILE_SIZE as i}from"./definitions.js";import{Point as t,GeometryType as s}from"./Geometry.js";import{between as h}from"./GeometryUtils.js";class e{constructor(i,t,s){this.ratio=i,this.x=t,this.y=s}}class n{constructor(t,s,h,e=8,n=8){this.lines=[],this.starts=[],this.validateTessellation=!0,this.pixelRatio=e,this.pixelMargin=n,this.tileSize=i*e,this.dz=t,this.yPos=s,this.xPos=h}setPixelMargin(i){i!==this.pixelMargin&&(this.pixelMargin=i,this.setExtent(this._extent))}setExtent(i){this._extent=i,this.finalRatio=this.tileSize/i*(1<<this.dz);let t=this.pixelRatio*this.pixelMargin;t/=this.finalRatio;const s=i>>this.dz;t>s&&(t=s),this.margin=t,this.xmin=s*this.xPos-t,this.ymin=s*this.yPos-t,this.xmax=this.xmin+s+2*t,this.ymax=this.ymin+s+2*t}reset(i){this.type=i,this.lines=[],this.starts=[],this.line=null,this.start=0}moveTo(i,s){this._pushLine(),this._prevIsIn=this._isIn(i,s),this._moveTo(i,s,this._prevIsIn),this._prevPt=new t(i,s),this._firstPt=new t(i,s),this._dist=0}lineTo(i,s){const h=this._isIn(i,s),n=new t(i,s),l=t.distance(this._prevPt,n);let x,a,y,o,r,m,p,u;if(h)this._prevIsIn?this._lineTo(i,s,!0):(x=this._prevPt,a=n,y=this._intersect(a,x),this.start=this._dist+l*(1-this._r),this._lineTo(y.x,y.y,!0),this._lineTo(a.x,a.y,!0));else if(this._prevIsIn)a=this._prevPt,x=n,y=this._intersect(a,x),this._lineTo(y.x,y.y,!0),this._lineTo(x.x,x.y,!1);else{const i=this._prevPt,t=n;if(i.x<=this.xmin&&t.x<=this.xmin||i.x>=this.xmax&&t.x>=this.xmax||i.y<=this.ymin&&t.y<=this.ymin||i.y>=this.ymax&&t.y>=this.ymax)this._lineTo(t.x,t.y,!1);else{const s=[];if((i.x<this.xmin&&t.x>this.xmin||i.x>this.xmin&&t.x<this.xmin)&&(o=(this.xmin-i.x)/(t.x-i.x),u=i.y+o*(t.y-i.y),u<=this.ymin?m=!1:u>=this.ymax?m=!0:s.push(new e(o,this.xmin,u))),(i.x<this.xmax&&t.x>this.xmax||i.x>this.xmax&&t.x<this.xmax)&&(o=(this.xmax-i.x)/(t.x-i.x),u=i.y+o*(t.y-i.y),u<=this.ymin?m=!1:u>=this.ymax?m=!0:s.push(new e(o,this.xmax,u))),(i.y<this.ymin&&t.y>this.ymin||i.y>this.ymin&&t.y<this.ymin)&&(o=(this.ymin-i.y)/(t.y-i.y),p=i.x+o*(t.x-i.x),p<=this.xmin?r=!1:p>=this.xmax?r=!0:s.push(new e(o,p,this.ymin))),(i.y<this.ymax&&t.y>this.ymax||i.y>this.ymax&&t.y<this.ymax)&&(o=(this.ymax-i.y)/(t.y-i.y),p=i.x+o*(t.x-i.x),p<=this.xmin?r=!1:p>=this.xmax?r=!0:s.push(new e(o,p,this.ymax))),0===s.length)r?m?this._lineTo(this.xmax,this.ymax,!0):this._lineTo(this.xmax,this.ymin,!0):m?this._lineTo(this.xmin,this.ymax,!0):this._lineTo(this.xmin,this.ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this.start=this._dist+l*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this.start=this._dist+l*s[0].ratio;for(let i=0;i<s.length;i++)this._lineTo(s[i].x,s[i].y,!0)}this._lineTo(t.x,t.y,!1)}}this._dist+=l,this._prevIsIn=h,this._prevPt=n}close(){if(this.line.length>2){const i=this._firstPt,t=this._prevPt;i.x===t.x&&i.y===t.y||this.lineTo(i.x,i.y);const s=this.line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),0===this.lines.length?null:(this.type===s.Polygon&&i&&a.simplify(this.tileSize,this.margin*this.finalRatio,this.lines),this.lines)}resultWithStarts(){if(this.type!==s.LineString)throw new Error("Only valid for lines");this._pushLine();const i=this.lines,t=i.length;if(0===t)return null;const h=[];for(let s=0;s<t;s++)h.push({line:i[s],start:this.starts[s]||0});return h}_isIn(i,t){return i>=this.xmin&&i<=this.xmax&&t>=this.ymin&&t<=this.ymax}_intersect(i,s){let h,e,n;if(s.x>=this.xmin&&s.x<=this.xmax)e=s.y<=this.ymin?this.ymin:this.ymax,n=(e-i.y)/(s.y-i.y),h=i.x+n*(s.x-i.x);else if(s.y>=this.ymin&&s.y<=this.ymax)h=s.x<=this.xmin?this.xmin:this.xmax,n=(h-i.x)/(s.x-i.x),e=i.y+n*(s.y-i.y);else{e=s.y<=this.ymin?this.ymin:this.ymax,h=s.x<=this.xmin?this.xmin:this.xmax;const t=(h-i.x)/(s.x-i.x),l=(e-i.y)/(s.y-i.y);t<l?(n=t,e=i.y+t*(s.y-i.y)):(n=l,h=i.x+l*(s.x-i.x))}return this._r=n,new t(h,e)}_pushLine(){this.line&&(this.type===s.Point?this.line.length>0&&(this.lines.push(this.line),this.starts.push(this.start)):this.type===s.LineString?this.line.length>1&&(this.lines.push(this.line),this.starts.push(this.start)):this.type===s.Polygon&&this.line.length>3&&(this.lines.push(this.line),this.starts.push(this.start))),this.line=[],this.start=0}_moveTo(i,h,e){this.type!==s.Polygon?e&&(i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),h=Math.round((h-(this.ymin+this.margin))*this.finalRatio),this.line.push(new t(i,h))):(e||(i<this.xmin&&(i=this.xmin),i>this.xmax&&(i=this.xmax),h<this.ymin&&(h=this.ymin),h>this.ymax&&(h=this.ymax)),i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),h=Math.round((h-(this.ymin+this.margin))*this.finalRatio),this.line.push(new t(i,h)),this._is_h=!1,this._is_v=!1)}_lineTo(i,h,e){let n,l;if(this.type!==s.Polygon)if(e){if(i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),h=Math.round((h-(this.ymin+this.margin))*this.finalRatio),this.line.length>0&&(n=this.line[this.line.length-1],n.equals(i,h)))return;this.line.push(new t(i,h))}else this.line&&this.line.length>0&&this._pushLine();else if(e||(i<this.xmin&&(i=this.xmin),i>this.xmax&&(i=this.xmax),h<this.ymin&&(h=this.ymin),h>this.ymax&&(h=this.ymax)),i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),h=Math.round((h-(this.ymin+this.margin))*this.finalRatio),this.line&&this.line.length>0){n=this.line[this.line.length-1];const s=n.x===i,e=n.y===h;if(s&&e)return;this._is_h&&s||this._is_v&&e?(n.x=i,n.y=h,l=this.line[this.line.length-2],l.x===i&&l.y===h?(this.line.pop(),this.line.length<=1?(this._is_h=!1,this._is_v=!1):(l=this.line[this.line.length-2],this._is_h=l.x===i,this._is_v=l.y===h)):(this._is_h=l.x===i,this._is_v=l.y===h)):(this.line.push(new t(i,h)),this._is_h=s,this._is_v=e)}else this.line.push(new t(i,h))}}class l{setExtent(i){this._ratio=4096===i?1:4096/i}get validateTessellation(){return this._ratio<1}reset(i){this.lines=[],this.line=null}moveTo(i,s){this.line&&this.lines.push(this.line),this.line=[];const h=this._ratio;this.line.push(new t(i*h,s*h))}lineTo(i,s){const h=this._ratio;this.line.push(new t(i*h,s*h))}close(){const i=this.line;i&&!i[0].isEqual(i[i.length-1])&&i.push(i[0])}result(){return this.line&&this.lines.push(this.line),0===this.lines.length?null:this.lines}}var x;!function(i){i[i.sideLeft=0]="sideLeft",i[i.sideRight=1]="sideRight",i[i.sideTop=2]="sideTop",i[i.sideBottom=3]="sideBottom"}(x||(x={}));class a{static simplify(i,t,s){if(!s)return;const h=-t,e=i+t,n=-t,l=i+t,y=[],o=[],r=s.length;for(let a=0;a<r;++a){const i=s[a];if(!i||i.length<2)continue;let t,r=i[0];const m=i.length;for(let s=1;s<m;++s)t=i[s],r.x===t.x&&(r.x<=h&&(r.y>t.y?(y.push(a),y.push(s),y.push(x.sideLeft),y.push(-1)):(o.push(a),o.push(s),o.push(x.sideLeft),o.push(-1))),r.x>=e&&(r.y<t.y?(y.push(a),y.push(s),y.push(x.sideRight),y.push(-1)):(o.push(a),o.push(s),o.push(x.sideRight),o.push(-1)))),r.y===t.y&&(r.y<=n&&(r.x<t.x?(y.push(a),y.push(s),y.push(x.sideTop),y.push(-1)):(o.push(a),o.push(s),o.push(x.sideTop),o.push(-1))),r.y>=l&&(r.x>t.x?(y.push(a),y.push(s),y.push(x.sideBottom),y.push(-1)):(o.push(a),o.push(s),o.push(x.sideBottom),o.push(-1)))),r=t}if(0===y.length||0===o.length)return;a.fillParent(s,o,y),a.fillParent(s,y,o);const m=[];a.calcDeltas(m,o,y),a.calcDeltas(m,y,o),a.addDeltas(m,s)}static fillParent(i,t,s){const e=s.length,n=t.length;for(let l=0;l<n;l+=4){const n=t[l],a=t[l+1],y=t[l+2],o=i[n][a-1],r=i[n][a];let m=8092,p=-1;for(let t=0;t<e;t+=4){if(s[t+2]!==y)continue;const e=s[t],n=s[t+1],l=i[e][n-1],a=i[e][n];switch(y){case x.sideLeft:case x.sideRight:if(h(o.y,l.y,a.y)&&h(r.y,l.y,a.y)){const i=Math.abs(a.y-l.y);i<m&&(m=i,p=t)}break;case x.sideTop:case x.sideBottom:if(h(o.x,l.x,a.x)&&h(r.x,l.x,a.x)){const i=Math.abs(a.x-l.x);i<m&&(m=i,p=t)}}}t[l+3]=p}}static calcDeltas(i,t,s){const h=t.length;for(let e=0;e<h;e+=4){const h=[],n=a.calcDelta(e,t,s,h);i.push(t[e]),i.push(t[e+1]),i.push(t[e+2]),i.push(n)}}static calcDelta(i,t,s,h){const e=t[i+3];if(-1===e)return 0;const n=h.length;return n>1&&h[n-2]===e?0:(h.push(e),a.calcDelta(e,s,t,h)+1)}static addDeltas(i,t){const s=i.length;let h=0;for(let e=0;e<s;e+=4){const t=i[e+3];t>h&&(h=t)}for(let e=0;e<s;e+=4){const s=t[i[e]],n=i[e+1],l=h-i[e+3];switch(i[e+2]){case x.sideLeft:s[n-1].x-=l,s[n].x-=l,1===n&&(s[s.length-1].x-=l),n===s.length-1&&(s[0].x-=l);break;case x.sideRight:s[n-1].x+=l,s[n].x+=l,1===n&&(s[s.length-1].x+=l),n===s.length-1&&(s[0].x+=l);break;case x.sideTop:s[n-1].y-=l,s[n].y-=l,1===n&&(s[s.length-1].y-=l),n===s.length-1&&(s[0].y-=l);break;case x.sideBottom:s[n-1].y+=l,s[n].y+=l,1===n&&(s[s.length-1].y+=l),n===s.length-1&&(s[0].y+=l)}}}}export{l as SimpleBuilder,n as TileClipper};
