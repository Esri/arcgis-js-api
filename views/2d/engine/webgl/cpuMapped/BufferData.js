/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/has","../../../../../core/maybe","../../../../webgl/BufferObject","../../../../webgl/FramebufferObject","../../../../webgl/enums","../../../../webgl/RenderingContext","../../../../../chunks/builtins","../../../../webgl/Texture","../../../../webgl/VertexArrayObject","../definitions","../FeatureDisplayList","./Buffer","./DisplayRecordReader","../mesh/heuristics"],(function(e,t,r,i,s,n,o,u,d,f,a,c,l,h,_,x){"use strict";let v=function(){function e(e,t,r,i,s){this._vaoInvalidated=!0;const n=x.getMeshHeuristic(t),o=Math.max(n.indicesPerRecord*n.multiplier*r,s+1),u=Math.max(n.verticesPerRecord*n.multiplier*r,i+1),d=e/Uint32Array.BYTES_PER_ELEMENT,f=new h.Buffer("index",o,1),a={geometry:new h.Buffer("vertex",u,d)};this.stride=e,this.strideInt=d,this.geometryType=t,this._buffers={index:f,vertex:a}}e.createPooled=function(t,r,s,n,o,u,d){const f=Math.max(c.BUFFER_DATA_MINIMUM_SIZE,Math.round(1.5*u)),a=()=>new e(r.stride,s,f,n,o),l=i.unwrapOr(t,a);return l._buffers.index.clear(),l._buffers.vertex.geometry.clear(),l._records=null,l._displayList=null,l._vaoInvalidated=!0,l._pool=d,l._released=!1,l};var r=e.prototype;return r.release=function(){this.isReleased||(this._pool.release(this),this._released=!0)},r.destroy=function(){this._buffers.index.destroy(),this._buffers.vertex.geometry.destroy(),i.andThen(this._vao,(e=>e.dispose(!1)))},r.draw=function(e,t,r,i,s){this.upload(e);const n=this._getVAO(e,t,r),o=Uint32Array.BYTES_PER_ELEMENT*i;e.bindVAO(n),e.drawElements(4,s,5125,o),e.bindVAO(null)},r.insert=function(e){if(e.done)return;const{vertexData:t,offset:r}=e,{records:i,indices:s,vertices:n}=t,o=this._getInsertionInfo(_.DisplayRecordReader.from(i,r)),{vertFrom:u,vertCount:d,indexFrom:f,indexCount:a,recordCount:c,done:l}=o;if(e.done=l,e.offset=c+r,0===c)return;const{index:h,vertex:x}=this._buffers,v=x.geometry.insert(n,u,d,0),g=h.insert(s,f,a,v);this._addRecords(_.DisplayRecordReader.from(i,r,c),g,v)},r.free=function(e){const t=_.DisplayRecordReader.from(e.records).getCursor();for(;t.next();)this._freeId(t.id)},r.freeIds=function(e){for(const t of e)this._freeId(t)},r.upload=function(e){const{index:t,vertex:r}=this._buffers;t.upload(e),r.geometry.upload(e)},r.has=function(e){if(!this._records)return!1;const t=this._records.getCursor();for(;t.next();)if(t.id===e)return!0;return!1},r.getViewOf=function(e){if(!this._records)return null;const t=this._records.getCursor();for(;t.next();)if(t.id===e)return t;return null},r._getInsertionInfo=function(e){const t=e.getCursor(),{index:r,vertex:i}=this._buffers,s=r.maxAvailableSpace(),n=i.geometry.maxAvailableSpace();let o=0,u=null,d=0,f=null,a=0,c=!0;for(;t.next();){null===f&&(f=t.vertexFrom,u=t.indexFrom);const e=a+t.vertexCount,r=d+t.indexCount;if(e>=n||r>=s){c=!1;break}o+=1,d=r,a=e}return{done:c,vertFrom:f,vertCount:a,indexFrom:u,indexCount:d,recordCount:o}},r._addRecords=function(e,t,r){const i=e.getCursor();for(;i.next();)i.indexFrom+=t,i.vertexFrom+=r;this._records?(this._records.link(e),this._displayList=null):this._records=e},r._freeId=function(e){const t=this._records.getCursor(),r=this._buffers.index,i=this._buffers.vertex.geometry;if(!t.lookup(e))return;const s=t.indexFrom;let n=t.indexCount;const o=t.vertexFrom;let u=t.vertexCount;for(;t.next()&&t.id===e;)n+=t.indexCount,u+=t.vertexCount;r.free(s,n),i.free(o,u,!0),this._records.delete(e)},r._getVAO=function(e,t,r){if(this._vaoInvalidated){const e=JSON.stringify(t)+JSON.stringify([...r]);e!==this._vaoHash&&(i.andThen(this._vao,(e=>{e.dispose(!1)})),this._vao=null,this._vaoHash=e),this._vaoInvalidated=!1}if(i.isNone(this._vao)){const{index:s,vertex:n}=this._buffers;if(i.isNone(n.geometry.gpu)||i.isNone(s.gpu))throw new Error("bad news");this._vao=new a(e,r,t,{geometry:n.geometry.gpu},s.gpu)}return this._vao},t._createClass(e,[{key:"isReleased",get:function(){return this._released}},{key:"indexBufferSize",get:function(){return this._buffers.index.bufferSize}},{key:"vertexBufferSize",get:function(){return this._buffers.vertex.geometry.bufferSize}},{key:"displayList",get:function(){return i.isNone(this._displayList)&&(this._displayList=l.FeatureDisplayList.from(this,this._records.getCursor())),this._displayList}}]),e}();e.BufferData=v,Object.defineProperty(e,"__esModule",{value:!0})}));
