/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../../core/Logger","../definitions","../../../../../chunks/vec2f32","./BoundingBox","../util/serializationUtils"],(function(t,s,i,e,o){"use strict";const n=t.getLogger("esri/views/2d/engine/webgl/collisions/Metric");return function(){function t(t,s,e,o,n){this.id=t,this.range=s,this.boxes=null,this.minZoom=-1,this.size=0,this.directionX=0,this.directionY=0,this.offsetX=0,this.offsetY=0,this.placementPadding=0,this.anchor=i.fromValues(e,o),this.baseZoom=n}var h=t.prototype;return h.add=function(t,s,i){t.x=t.x+s,t.y=t.y+i,this.bounds?this.boxes?(this.boxes.push(t),this.bounds.extend(t)):(this.boxes=[this.bounds,t],this.bounds=this.bounds.clone(),this.bounds.extend(t)):this.bounds=t},h.computeIndex=function(){const t=this.anchor[0],i=this.anchor[1],e=Math.floor(t/s.COLLISION_BUCKET_SIZE),o=Math.floor(i/s.COLLISION_BUCKET_SIZE);this.xBucket=e,this.yBucket=o;const n=s.TILE_SIZE/s.COLLISION_BUCKET_SIZE;if(this.hasVV)return this.xOverflow=n,void(this.yOverflow=n);this.xOverflow=Math.min(n,Math.ceil(2*this.bounds.width/s.COLLISION_BUCKET_SIZE)),this.yOverflow=Math.min(n,Math.ceil(2*this.bounds.height/s.COLLISION_BUCKET_SIZE))},h.findCollisionDelta=function(t){const i=this.bounds.findCollisionDelta(t.bounds),e=this.boxes&&this.boxes.length,o=t.boxes&&t.boxes.length;return Math.abs(i)>s.COLLISION_MAX_ZOOM_DELTA||!e&&!o?i:e&&o?this._boxesToBoxes(t):e?this._boxesToBox(t):this._boxToBoxes(t)},h.computeVVOffset=function(t,s){s||n.error("mapview-labeling",`Unable to compute label offset. Expected an evaluator function but found ${s}`);let i=this.size;if(this.hasVV){const e=s(t);i=isNaN(e)||null==e||e===1/0?this.size:e}this._computeOffset(i)},h.setPlacementOffset=function(t,s,i,e,o){this.hasVV=t,this.size=s,this.placementPadding=Math.round(i),this.directionX=e,this.directionY=o},h.clone=function(){const s=new t(this.id,this.range,this.anchor[0],this.anchor[1],this.baseZoom);return s.minZoom=this.minZoom,this.bounds&&(s.bounds=this.bounds.clone()),this.boxes&&(s.boxes=this.boxes.map((t=>t.clone()))),s.xBucket=this.xBucket,s.yBucket=this.yBucket,s.xOverflow=this.xOverflow,s.yOverflow=this.yOverflow,s.hasVV=this.hasVV,s.size=this.size,s.directionX=this.directionX,s.directionY=this.directionY,s.offsetX=this.offsetX,s.offsetY=this.offsetY,s},h._boxToBoxes=function(t){let s=-1/0;for(const i of t.boxes){const t=this.bounds.findCollisionDelta(i);s=Math.max(t,s)}return s},h._boxesToBox=function(t){let s=this.boxes[0].findCollisionDelta(t.bounds);for(let i=1;i<this.boxes.length;i++){const e=this.boxes[i].findCollisionDelta(t.bounds);s=Math.max(e,s)}return s},h._boxesToBoxes=function(t){let s=-1/0;for(let i=0;i<this.boxes.length;i++){const e=this.boxes[i];for(const i of t.boxes){const t=e.findCollisionDelta(i);s=Math.max(t,s)}}return s},h._computeOffset=function(t){this.offsetX=this.directionX*(t/2+this.placementPadding),this.offsetY=this.directionY*(t/2+this.placementPadding)},h.serialize=function(t){return t.push(this.id),this.bounds.serialize(t),t.push(this.range.from),t.push(this.range.count),t.push(this.anchor[0]),t.push(this.anchor[1]),t.push(this.baseZoom),t.push(this.hasVV?1:0),t.push(this.size),t.writeF32(this.directionX),t.writeF32(this.directionY),t.push(this.offsetX),t.push(this.offsetY),t.push(this.placementPadding),o.serializeList(t,this.boxes),t},t.deserialize=function(s){const i=s.readInt32(),n=e.deserialize(s),h={from:s.readInt32(),count:s.readInt32()},r=s.readInt32(),a=s.readInt32(),f=s.readInt32(),c=s.readInt32(),u=s.readInt32(),d=s.readF32(),l=s.readF32(),b=s.readInt32(),x=s.readInt32(),m=s.readInt32(),I=o.deserializeList(s,e),p=new t(i,h,r,a,f);return p.bounds=n,p.boxes=I,p.setPlacementOffset(!!c,u,m,d,l),p.offsetX=b,p.offsetY=x,p.computeIndex(),c||p._computeOffset(u),p},t}()}));
