/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","./mesh/templates/util"],(function(t,e){"use strict";let r,i=function(){this.closed=void 0,this.isFirstVertex=void 0,this.isLastVertex=void 0,this.isCap=void 0,this.currentVertex={x:void 0,y:void 0},this.inbound={x:void 0,y:void 0},this.outbound={x:void 0,y:void 0},this.prevNormal={x:void 0,y:void 0},this.nextNormal={x:void 0,y:void 0},this.bisector={x:void 0,y:void 0},this.leftInner={x:void 0,y:void 0},this.rightInner={x:void 0,y:void 0},this.leftOuter={x:void 0,y:void 0},this.rightOuter={x:void 0,y:void 0}};function n(){if(d.cosine<x.innerBisectorAutoSplitThreshold){d.splitInner=!0,d.gapInner=!0;const t=Math.max(x.innerBisectorAutoSplitThreshold,d.cosine),e=Math.sqrt(1-t*t)/t;d.leftInner.x=d.nextNormal.x+d.sign*e*d.outbound.x,d.leftInner.y=d.nextNormal.y+d.sign*e*d.outbound.y,d.rightInner.x=d.prevNormal.x-d.sign*e*d.inbound.x,d.rightInner.y=d.prevNormal.y-d.sign*e*d.inbound.y}else x.enableInnerBisectorSplit&&(d.splitInner=!0,d.gapInner=!1,d.leftInner.x=d.rightInner.x=d.bisector.x/d.cosine,d.leftInner.y=d.rightInner.y=d.bisector.y/d.cosine);if(d.cosine<x.outerBisectorAutoSplitThreshold){d.splitOuter=!0,d.gapOuter=!0;const t=Math.max(x.outerBisectorAutoSplitThreshold,d.cosine),e=Math.sqrt(1-t*t)/t;d.leftOuter.x=d.prevNormal.x-d.sign*e*d.inbound.x,d.leftOuter.y=d.prevNormal.y-d.sign*e*d.inbound.y,d.rightOuter.x=d.nextNormal.x+d.sign*e*d.outbound.x,d.rightOuter.y=d.nextNormal.y+d.sign*e*d.outbound.y}else x.enableOuterBisectorSplit&&(d.splitOuter=!0,d.gapOuter=!1,d.leftOuter.x=d.rightOuter.x=d.bisector.x/d.cosine,d.leftOuter.y=d.rightOuter.y=d.bisector.y/d.cosine)}const x={};let o,s,u,l,c,y,a;const d=new i;function h(){if(c)return d.distance=0,d.isCap=d.isFirstVertex=d.isLastVertex=!1,void(c=!1);if(0===u)if(d.isFirstVertex=0===s,a=r[s],0===s){if(u=0,d.closed){d.inbound.x=a.x-r[r.length-2].x,d.inbound.y=a.y-r[r.length-2].y;const t=Math.sqrt(d.inbound.x*d.inbound.x+d.inbound.y*d.inbound.y);d.inbound.x/=t,d.inbound.y/=t}}else d.inbound.x=a.x-y.x,d.inbound.y=a.y-y.y,u=Math.sqrt(d.inbound.x*d.inbound.x+d.inbound.y*d.inbound.y),d.inbound.x/=u,d.inbound.y/=u;if(d.distance+u-l<=x.wrapDistance){if(s<r.length-1){d.outbound.x=r[s+1].x-a.x,d.outbound.y=r[s+1].y-a.y;const t=Math.sqrt(d.outbound.x*d.outbound.x+d.outbound.y*d.outbound.y);d.outbound.x/=t,d.outbound.y/=t}else if(d.closed){d.outbound.x=r[1].x-a.x,d.outbound.y=r[1].y-a.y;const t=Math.sqrt(d.outbound.x*d.outbound.x+d.outbound.y*d.outbound.y);d.outbound.x/=t,d.outbound.y/=t}else d.outbound.x=d.inbound.x,d.outbound.y=d.inbound.y;return 0!==s||d.closed||(d.inbound.x=d.outbound.x,d.inbound.y=d.outbound.y),++s,d.isLastVertex=s===r.length,d.isCap=!d.closed&&(d.isFirstVertex||d.isLastVertex),d.distance+=u-l,u=0,l=0,c=d.distance+u-l===x.wrapDistance,d.currentVertex.x=a.x,d.currentVertex.y=a.y,y=a,void(a=null)}d.outbound.x=d.inbound.x,d.outbound.y=d.inbound.y,l+=x.wrapDistance-d.distance,d.distance=x.wrapDistance,c=!0;const t=l/u;d.currentVertex.x=(1-t)*y.x+t*a.x,d.currentVertex.y=(1-t)*y.y+t*a.y}function b(){d.prevNormal.x=-d.inbound.y,d.prevNormal.y=d.inbound.x,d.nextNormal.x=-d.outbound.y,d.nextNormal.y=d.outbound.x}function V(){b(),d.bisector.x=d.prevNormal.x+d.nextNormal.x,d.bisector.y=d.prevNormal.y+d.nextNormal.y;const t=Math.sqrt(d.bisector.x*d.bisector.x+d.bisector.y*d.bisector.y);if(t<.001)return d.bisector.x=void 0,d.bisector.y=void 0,d.cosine=0,void(d.sign=void 0);d.bisector.x/=t,d.bisector.y/=t,d.cosine=d.bisector.x*d.nextNormal.x+d.bisector.y*d.nextNormal.y,d.sign=d.prevNormal.x*d.nextNormal.y-d.prevNormal.y*d.nextNormal.x>=0?1:-1}function g(t){o.vertex(d),1===t?(d.leftEntry0=d.entry0,d.leftEntry1=d.entry1,d.leftEntry2=d.entry2,d.leftExit0=d.exit0,d.leftExit1=d.exit1,d.leftExit2=d.exit2):2===t&&(d.rightEntry0=d.entry0,d.rightEntry1=d.entry1,d.rightEntry2=d.entry2,d.rightExit0=d.exit0,d.rightExit1=d.exit1,d.rightExit2=d.exit2)}function p(t){o.vertex(d),1===t?(d.leftEntry0=d.entry0,d.leftEntry2=d.entry2,d.leftExit0=d.exit0,d.leftExit2=d.exit2):2===t&&(d.rightEntry0=d.entry0,d.rightEntry2=d.entry2,d.rightExit0=d.exit0,d.rightExit2=d.exit2)}let f=function(){function t(t,r){this.writeVertex=t,this.writeTriangle=r,this.capType=0,this.joinType=2,this.miterLimitCosine=e.getLimitCosine(2),this.roundLimitCosine=Math.cos(23*Math.PI/180),this.almostParallelCosine=.97,this.radsPerSlice=.8,this.textured=!1,this.joinOnUTurn=!1}var r=t.prototype;return r.vertex=function(t){const e=2===this.joinType?this.miterLimitCosine:this.roundLimitCosine,r=t.isCap&&0!==this.capType;let i=!1;t.cosine>this.almostParallelCosine?(t.exit0=t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance),t.exit2=t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance)):t.cosine<1-this.almostParallelCosine?(i=!t.isCap&&this.joinOnUTurn,t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance),t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance),t.exit0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance),t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance)):t.canSplit?(n(),t.sign>0?(t.splitInner?(t.exit0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.outbound.x,t.outbound.y,t.leftInner.x,t.leftInner.y,0,-1,t.distance),t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.inbound.x,t.inbound.y,t.rightInner.x,t.rightInner.y,0,-1,t.distance)):t.exit0=t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.inbound.x,t.inbound.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance),t.cosine<e?(i=!t.isCap,t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance),t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance)):t.splitOuter?(i=i||t.gapOuter,t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.inbound.x,t.inbound.y,-t.leftOuter.x,-t.leftOuter.y,0,1,t.distance),t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.outbound.x,t.outbound.y,-t.rightOuter.x,-t.rightOuter.y,0,1,t.distance)):t.entry2=t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance)):(t.splitInner?(t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.outbound.x,t.outbound.y,-t.leftInner.x,-t.leftInner.y,0,1,t.distance),t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.inbound.x,t.inbound.y,-t.rightInner.x,-t.rightInner.y,0,1,t.distance)):t.exit2=t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance),t.cosine<e?(i=!t.isCap,t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance),t.exit0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance)):t.splitOuter?(i=i||t.gapOuter,t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.inbound.x,t.inbound.y,t.leftOuter.x,t.leftOuter.y,0,-1,t.distance),t.exit0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.outbound.x,t.outbound.y,t.rightOuter.x,t.rightOuter.y,0,-1,t.distance)):t.exit0=t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance))):t.sign>0?(t.exit0=t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,t.inbound.x,t.inbound.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance),t.cosine<e?(i=!t.isCap,t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance),t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance)):t.entry2=t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance)):(t.exit2=t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance),t.cosine<e?(i=!t.isCap,t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance),t.exit0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance)):t.exit0=t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance));const x=t.canSplit&&(t.splitInner||t.splitOuter);let o;if(o=t.entry1=t.exit1=x||i||r?this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,0,0,0,0,t.distance):null,i&&1!==this.joinType)this.writeTriangle(o,t.sign>0?t.exit2:t.entry0,t.sign>0?t.entry2:t.exit0);else if(r&&1===this.capType||i&&1===this.joinType){let e,r,i,n,x,s;if(t.isCap){const o=Math.PI;x=Math.ceil(o/this.radsPerSlice),s=o/x,t.isFirstVertex?(e=t.prevNormal.x,r=t.prevNormal.y,i=t.entry0,n=t.entry2):t.isLastVertex&&(e=-t.nextNormal.x,r=-t.nextNormal.y,i=t.exit2,n=t.exit0)}else{const o=2*Math.acos(t.cosine);x=Math.ceil(o/this.radsPerSlice),s=o/x,e=t.sign>0?-t.prevNormal.x:t.nextNormal.x,r=t.sign>0?-t.prevNormal.y:t.nextNormal.y,i=t.sign>0?t.entry2:t.exit0,n=t.sign>0?t.exit2:t.entry0}const u=Math.cos(s),l=Math.sin(s),c=l*e+u*r;let y,a;e=u*e-l*r,r=c;for(let s=0;s<x;++s){if(y=a,s<x-1)if(t.isCap){const i=t.isFirstVertex?-1:1;a=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,e,r,i,0,t.distance)}else a=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,e,r,0,t.sign,t.distance);this.writeTriangle(0===s?i:y,o,s===x-1?n:a);const c=l*e+u*r;e=u*e-l*r,r=c}}else if(r&&2===this.capType){const e=t.isFirstVertex?1:-1;let r,i;this.textured?(r=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.prevNormal.x-e*t.inbound.x,t.prevNormal.y-e*t.inbound.y,-e,-1,t.distance),i=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.prevNormal.x-e*t.inbound.x,-t.prevNormal.y-e*t.inbound.y,-e,1,t.distance)):(r=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.prevNormal.x-e*t.inbound.x,t.prevNormal.y-e*t.inbound.y,0,-1,t.distance),i=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.prevNormal.x-e*t.inbound.x,-t.prevNormal.y-e*t.inbound.y,0,1,t.distance)),e>0?(this.writeTriangle(o,t.entry2,i),this.writeTriangle(o,i,r),this.writeTriangle(o,r,t.entry0)):(this.writeTriangle(o,i,t.exit2),this.writeTriangle(o,r,i),this.writeTriangle(o,t.exit0,r))}},r.bridge=function(t){this.writeTriangle(t.leftExit0,t.rightEntry0,null!=t.leftExit1?t.leftExit1:t.leftExit2),this.writeTriangle(t.rightEntry0,null!=t.rightEntry1?t.rightEntry1:t.rightEntry2,null!=t.leftExit1?t.leftExit1:t.leftExit2),null!=t.leftExit1&&null!=t.rightEntry1?(this.writeTriangle(t.leftExit1,t.rightEntry1,t.leftExit2),this.writeTriangle(t.rightEntry1,t.rightEntry2,t.leftExit2)):null!=t.leftExit1?this.writeTriangle(t.leftExit1,t.rightEntry2,t.leftExit2):null!=t.rightEntry1&&this.writeTriangle(t.rightEntry1,t.rightEntry2,t.leftExit2)},t}(),E=function(){function t(t,e){this.writeVertex=t,this.writeTriangle=e}var e=t.prototype;return e.vertex=function(t){t.entry0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance),t.entry2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance),t.exit0=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance),t.exit2=this.writeVertex(t.currentVertex.x,t.currentVertex.y,0,0,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance)},e.bridge=function(t){this.writeTriangle(t.leftExit0,t.rightEntry0,t.leftExit2),this.writeTriangle(t.rightEntry0,t.rightEntry2,t.leftExit2)},t}();t.StandardTessellationCallbacks=f,t.TessellationState=i,t.ThinTessellationCallbacks=E,t.cleanup=function(){r=null,o=null},t.splitVertex=n,t.tessellate=function(t,e,i){x.trackDistance=null!=e.trackDistance&&e.trackDistance,x.wrapDistance=null!=e.wrapDistance?e.wrapDistance:65535,x.thin=null!=e.thin&&e.thin,x.initialDistance=null!=e.initialDistance?e.initialDistance:0,x.enableOuterBisectorSplit=null!=e.enableOuterBisectorSplit&&e.enableOuterBisectorSplit,x.outerBisectorAutoSplitThreshold=null!=e.outerBisectorAutoSplitThreshold?e.outerBisectorAutoSplitThreshold:0,x.enableInnerBisectorSplit=null!=e.enableOuterBisectorSplit&&e.enableOuterBisectorSplit,x.innerBisectorAutoSplitThreshold=null!=e.innerBisectorAutoSplitThreshold?e.innerBisectorAutoSplitThreshold:0,r=t,o=i,s=0,u=0,l=0,c=!1,y=null,a=null,d.currentVertex.x=null,d.currentVertex.y=null,d.distance=x.initialDistance;const n=r[0],f=r[r.length-1];d.canSplit=!1,d.closed=n.x===f.x&&n.y===f.y,r.length<2||2===r.length&&d.closed||(x.thin?x.trackDistance?function(){h(),b(),p(1);for(;u-l>x.wrapDistance||s<r.length;)h(),b(),p(2),o.bridge(d),d.leftExit0=d.rightExit0,d.leftExit2=d.rightExit2}():function(){for(;s<r.length;){if(s>0&&(d.inbound.x=d.outbound.x,d.inbound.y=d.outbound.y),s<r.length-1){d.outbound.x=r[s+1].x-r[s].x,d.outbound.y=r[s+1].y-r[s].y;const t=Math.sqrt(d.outbound.x*d.outbound.x+d.outbound.y*d.outbound.y);d.distance+=t,d.outbound.x/=t,d.outbound.y/=t}else d.outbound.x=d.inbound.x,d.outbound.y=d.inbound.y;0===s&&(d.inbound.x=d.outbound.x,d.inbound.y=d.outbound.y),d.currentVertex.x=r[s].x,d.currentVertex.y=r[s].y,d.prevNormal.x=-d.inbound.y,d.prevNormal.y=d.inbound.x,d.nextNormal.x=-d.outbound.y,d.nextNormal.y=d.outbound.x,0===s?(o.vertex(d),d.leftEntry0=d.entry0,d.leftEntry2=d.entry2,d.leftExit0=d.exit0,d.leftExit2=d.exit2):(o.vertex(d),d.rightEntry0=d.entry0,d.rightEntry2=d.entry2,d.rightExit0=d.exit0,d.rightExit2=d.exit2,o.bridge(d),d.leftExit0=d.rightExit0,d.leftExit2=d.rightExit2),++s}}():x.enableOuterBisectorSplit||x.outerBisectorAutoSplitThreshold>0||x.enableInnerBisectorSplit||x.innerBisectorAutoSplitThreshold>0?(d.canSplit=!0,function(){h(),V(),d.splitInner=d.gapInner=d.splitOuter=d.gapOuter=!1,g(1),d.closure0=d.leftEntry0,d.closure1=d.leftEntry1,d.closure2=d.leftEntry2;for(;u-l>x.wrapDistance||s<r.length-1||s<r.length&&(!d.closed||x.trackDistance);)h(),V(),d.splitInner=d.gapInner=d.splitOuter=d.gapOuter=!1,g(2),o.bridge(d),d.leftExit0=d.rightExit0,d.leftExit1=d.rightExit1,d.leftExit2=d.rightExit2;d.closed&&!x.trackDistance&&(d.rightEntry0=d.closure0,d.rightEntry1=d.closure1,d.rightEntry2=d.closure2,o.bridge(d),d.leftExit0=d.rightExit0,d.leftExit1=d.rightExit1,d.leftExit2=d.rightExit2)}()):function(){h(),V(),g(1),d.closure0=d.leftEntry0,d.closure1=d.leftEntry1,d.closure2=d.leftEntry2;for(;u-l>x.wrapDistance||s<r.length-1||s<r.length&&(!d.closed||x.trackDistance);)h(),V(),g(2),o.bridge(d),d.leftExit0=d.rightExit0,d.leftExit1=d.rightExit1,d.leftExit2=d.rightExit2;d.closed&&!x.trackDistance&&(d.rightEntry0=d.closure0,d.rightEntry1=d.closure1,d.rightEntry2=d.closure2,o.bridge(d),d.leftExit0=d.rightExit0,d.leftExit1=d.rightExit1,d.leftExit2=d.rightExit2)}())},Object.defineProperty(t,"__esModule",{value:!0})}));
