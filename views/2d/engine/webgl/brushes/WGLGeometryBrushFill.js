/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/maybe","../../../../../core/RandomLCG","../definitions","../enums","../Utils","./WGLGeometryBrush","../materialKey/MaterialKey","../../../../webgl/BufferObject","../../../../webgl/enums","../../../../webgl/FramebufferObject","../../../../webgl/Renderbuffer","../../../../webgl/Texture","../../../../webgl/VertexArrayObject"],(function(e,t,o,r,i,a,s,n,d,l,u,_,c,T){"use strict";const m=e=>{const t={geometry:[{location:0,name:"a_pos",count:2,type:l.DataType.SHORT},{location:1,name:"a_id",count:3,type:l.DataType.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:l.DataType.UNSIGNED_BYTE}]};return e.dotDensity?(t.geometry.push({location:3,name:"a_inverseArea",count:1,type:l.DataType.FLOAT}),a.createProgramDescriptor(e.data,t)):(t.geometry.push({location:3,name:"a_color",count:4,type:l.DataType.UNSIGNED_BYTE,normalized:!0}),e.simple||t.geometry.push({location:4,name:"a_aux1",count:4,type:l.DataType.UNSIGNED_SHORT}),t.geometry.push({location:5,name:"a_aux2",count:4,type:l.DataType.UNSIGNED_BYTE},{location:6,name:"a_aux3",count:4,type:l.DataType.UNSIGNED_BYTE}),e.simple||t.geometry.push({location:7,name:"a_zoomRange",count:2,type:l.DataType.UNSIGNED_SHORT}),a.createProgramDescriptor(e.data,t))};let p=function(a){function s(){var e;return(e=a.apply(this,arguments)||this)._dotTextureSize=0,e._dotTextures=null,e._dotSamplers=new Int32Array([r.TEXTURE_BINDING_RENDERER_0,r.TEXTURE_BINDING_RENDERER_1]),e._dotVAO=null,e._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])},e}e._inheritsLoose(s,a);var p=s.prototype;return p.dispose=function(){this._disposeTextures(),this._dotFBO=t.disposeMaybe(this._dotFBO),this._dotVAO=t.disposeMaybe(this._dotVAO)},p.getGeometryType=function(){return i.WGLGeometryType.FILL},p.drawGeometry=function(e,o,r,i){const{context:a,painter:s,rendererInfo:d,requiredLevel:u,passOptions:_}=e,c=n.FillMaterialKey.load(r.materialKey),T=s.materialManager;let p=l.PrimitiveType.TRIANGLES,f=m(c);t.isSome(_)&&"hittest"===_.type&&(f=this._getTriangleDesc(r.materialKey,f),p=l.PrimitiveType.POINTS);const{attributes:y,bufferLayouts:h}=f,D=T.getMaterialProgram(e,c,"materials/fill",y,i);if(a.useProgram(D),this._setSharedUniforms(D,e,o),D.setUniform2f("u_tileOffset",512*o.key.col,512*o.key.row),c.textureBinding){s.textureManager.bindTextures(a,D,c);const t=1/2**(u-o.key.level)/e.pixelRatio;D.setUniform1f("u_zoomFactor",t)}const x=1/e.pixelRatio;D.setUniform1f("u_blur",x),D.setUniform1f("u_antialiasing",x),this._setSizeVVUniforms(c,D,d,o),this._setColorAndOpacityVVUniforms(c,D,d);const E=t.isSome(_)&&"hittest"===_.type,g=r.target.getVAO(a,h,y,E);let S=r.indexCount,w=r.indexFrom*Uint32Array.BYTES_PER_ELEMENT;if(E&&(S/=3,w/=3),a.bindVAO(g),!c.dotDensity||E)a.drawElements(p,S,l.DataType.UNSIGNED_INT,w);else{const t=this._drawDotLocations(e,o,D,S,w);this._drawDotDensity(e,o,t)}},p._drawDotDensity=function(e,t,o){const{context:r,painter:i,rendererInfo:a}=e,s=i.materialManager.getProgram(e,this._dotDesc),n=this._createDotDensityMesh(r,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:l.DataType.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});r.setStencilTestEnabled(!0),r.useProgram(s),s.setUniform1f("u_tileZoomFactor",1),s.setUniform1i("u_texture",this._dotSamplers[0]),s.setUniform1f("u_dotSize",Math.max(a.ddDotSize,1)),s.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(s,e,t),r.bindTexture(o,this._dotSamplers[0]),r.bindVAO(n),r.drawArrays(l.PrimitiveType.POINTS,0,262144)},p._drawDotLocations=function(e,t,o,i,a){const{context:s,rendererInfo:n,requiredLevel:d}=e,u=s.getViewport();s.setViewport(0,0,512,512);const _=s.getBoundFramebufferObject(),c=this._createFBO(s);s.bindFramebuffer(c),s.setClearColor(0,0,0,0),s.clear(s.gl.COLOR_BUFFER_BIT|s.gl.STENCIL_BUFFER_BIT),s.setStencilTestEnabled(!1);const T=1/2**(d-t.key.level),m=r.TILE_SIZE,p=m*window.devicePixelRatio*m*window.devicePixelRatio,f=1/T*(1/T),y=n.ddDotScale?e.state.scale/n.ddDotScale:1;return o.setUniform1f("u_tileZoomFactor",T),o.setUniform1f("u_tileDotsOverArea",p/(r.TILE_SIZE*window.devicePixelRatio*r.TILE_SIZE*window.devicePixelRatio)),o.setUniformMatrix4fv("u_dotColors",n.ddColors),o.setUniform4fv("u_isActive",n.ddActiveDots),o.setUniform4fv("u_dotBackgroundColor",n.ddBackgroundColor),o.setUniform1f("u_dotValue",Math.max(1,n.ddDotValue*y*f)),this._bindDotDensityTextures(s,o,n,m),s.drawElements(l.PrimitiveType.TRIANGLES,i,l.DataType.UNSIGNED_INT,a),s.setViewport(u.x,u.y,u.width,u.height),s.bindFramebuffer(_),c.colorTexture},p._createFBO=function(e){if(t.isNone(this._dotFBO)){const t=512,o=512,r={target:l.TextureType.TEXTURE_2D,pixelFormat:l.PixelFormat.RGBA,dataType:l.PixelType.UNSIGNED_BYTE,samplingMode:l.TextureSamplingMode.NEAREST,wrapMode:l.TextureWrapMode.CLAMP_TO_EDGE,width:t,height:o},i={colorTarget:l.TargetType.TEXTURE,depthStencilTarget:l.DepthStencilTargetType.DEPTH_STENCIL_RENDER_BUFFER},a=new _.Renderbuffer(e,{width:t,height:o,internalFormat:l.RenderbufferFormat.DEPTH_STENCIL});this._dotFBO=new u.FramebufferObject(e,i,r,a)}return this._dotFBO},p._disposeTextures=function(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}},p._bindDotDensityTextures=function(e,t,o,r){const i=this._createDotDensityTextures(e,r,o.ddSeed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(let a=0;a<i.length;a++)e.bindTexture(i[a],this._dotSamplers[a])},p._createDotDensityMesh=function(e,o,r){if(t.isNone(this._dotVAO)){const t=2,i=new Int16Array(262144*t);for(let e=0;e<512;e++)for(let o=0;o<512;o++)i[t*(o+512*e)]=o,i[t*(o+512*e)+1]=e;const a=d.BufferObject.createVertex(e,l.Usage.STATIC_DRAW,i);this._dotVAO=new T.VertexArrayObject(e,o,r,{geometry:a},null)}return this._dotVAO},p._createDotDensityTextures=function(e,t,r){if(this._dotTextureSize===t&&this._seed===r||(this._disposeTextures(),this._dotTextureSize=t,this._seed=r),null===this._dotTextures){const i=new o(r);this._dotTextures=[this._allocDotDensityTexture(e,t,i),this._allocDotDensityTexture(e,t,i)]}return this._dotTextures},p._allocDotDensityTexture=function(e,t,o){const r=new Float32Array(t*t*4);for(let i=0;i<r.length;i++)r[i]=o.getFloat();return new c.Texture(e,{wrapMode:l.TextureWrapMode.REPEAT,pixelFormat:l.PixelFormat.RGBA,dataType:l.PixelType.FLOAT,samplingMode:l.TextureSamplingMode.NEAREST,width:t,height:t},r)},s}(s);return p}));
