/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/maybe","../enums","../Utils","./WGLGeometryBrush","../materialKey/MaterialKey","../../../../webgl/enums"],(function(e,t,a,n,o,i,r){"use strict";const s=e=>n.createProgramDescriptor(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:r.DataType.SHORT},{location:1,name:"a_id",count:4,type:r.DataType.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:r.DataType.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:r.DataType.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:r.DataType.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:r.DataType.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:r.DataType.BYTE},{location:7,name:"a_aux",count:2,type:r.DataType.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:r.DataType.UNSIGNED_SHORT}]});let l=function(n){function o(){return n.apply(this,arguments)||this}e._inheritsLoose(o,n);var l=o.prototype;return l.dispose=function(){},l.getGeometryType=function(){return a.WGLGeometryType.LINE},l.supportsSymbology=function(e){return!0},l.drawGeometry=function(e,a,n,o){const{context:l,painter:c,rendererInfo:u,displayLevel:m,passOptions:y,requestRender:p,allowDelayedRender:T}=e,d=i.LineMaterialKey.load(n.materialKey),_=t.isSome(y)&&"hittest"===y.type;let f=s(d),D=r.PrimitiveType.TRIANGLES;_&&(f=this._getTriangleDesc(n.materialKey,f),D=r.PrimitiveType.POINTS);const{attributes:g,bufferLayouts:E}=f,N=c.materialManager.getMaterialProgram(e,d,"materials/line",g,o);if(T&&t.isSome(p)&&!N.compiled)return void p();const S=1/e.pixelRatio,U=0;l.useProgram(N),this._setSharedUniforms(N,e,a),d.textureBinding&&c.textureManager.bindTextures(l,N,d);const G=2**(m-a.key.level);N.setUniform1f("u_zoomFactor",G),N.setUniform1f("u_blur",U+S),N.setUniform1f("u_antialiasing",S),this._setSizeVVUniforms(d,N,u,a),this._setColorAndOpacityVVUniforms(d,N,u),l.setFaceCullingEnabled(!1);const h=n.target.getVAO(l,E,g,_);let I=n.indexCount,b=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;_&&(I/=3,b/=3),l.bindVAO(h),l.drawElements(D,I,r.DataType.UNSIGNED_INT,b)},o}(o);return l}));
