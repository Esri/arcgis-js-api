/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import t from"../../../../core/has.js";import{isSome as e,unwrapOrThrow as r,isNone as s}from"../../../../core/maybe.js";import{FreeList as a}from"./cpuMapped/FreeList.js";const i=t("esri-2d-log-allocations");class n{constructor(t){this._array=t}get array(){return this._array}get length(){return this._array.length}static create(t){const e=_.acquire(t);return new n(e)}expand(t){const e=_.acquire(t);e.set(this._array),_.release(this._array),this._array=e}destroy(){_.release(this._array)}set(t,e){this._array.set(t._array,e)}slice(){const t=_.acquire(this._array.byteLength);return t.set(this._array),new n(t)}}class o{constructor(){this._data=new ArrayBuffer(o.BYTE_LENGTH),this._freeList=new a({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 64e6}get buffer(){return this._data}allocate(t){const e=this._freeList.firstFit(t);return s(e)?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)}free(t){this._freeList.free(t.byteOffset,t.byteLength)}}class c{constructor(){this._bytesAllocated=0,this._pages=[],this._pagesByBuffer=new Map,this._addPage()}get _bytesTotal(){return this._pages.length*o.BYTE_LENGTH}acquire(t){if(this._bytesAllocated+=t,i&&console.log(`Allocating ${t}, (${this._bytesAllocated} / ${this._bytesTotal})`),t>o.BYTE_LENGTH)return new Uint32Array(t/Uint32Array.BYTES_PER_ELEMENT);for(const r of this._pages){const s=r.allocate(t);if(e(s))return s}return r(this._addPage().allocate(t),"Expected to allocate page")}release(t){this._bytesAllocated-=t.byteLength,i&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.free(t)}_addPage(){const t=new o;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}}const _=new c;export{n as TypedBuffer};
