/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../core/maybe","./cpuMapped/FreeList"],(function(t,e,r,n,s){"use strict";const a=r("esri-2d-log-allocations");let i=function(){function t(t,e){this._array=t,this._pool=e}t.create=function(e,r){return new t(r.acquire(e),r)};var r=t.prototype;return r.expand=function(t){const e=this._pool.acquire(t);e.set(this._array),this._pool.release(this._array),this._array=e},r.destroy=function(){this._pool.release(this._array)},r.set=function(t,e){this._array.set(t._array,e)},r.slice=function(){const e=this._pool.acquire(this._array.byteLength);return e.set(this._array),new t(e,this._pool)},e._createClass(t,[{key:"array",get:function(){return this._array}},{key:"length",get:function(){return this._array.length}}]),t}(),o=function(){function t(){this._data=new ArrayBuffer(t.BYTE_LENGTH),this._freeList=new s.FreeList({start:0,end:this._data.byteLength})}var r=t.prototype;return r.allocate=function(t){const e=this._freeList.firstFit(t);return n.isNone(e)?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)},r.free=function(t){this._freeList.free(t.byteOffset,t.byteLength)},e._createClass(t,[{key:"buffer",get:function(){return this._data}}],[{key:"BYTE_LENGTH",get:function(){return 64e6}}]),t}(),u=function(){function t(){this._bytesAllocated=0,this._pages=[],this._pagesByBuffer=new Map,this._addPage()}var r=t.prototype;return r.destroy=function(){this._pages=[],this._pagesByBuffer=null},r.acquire=function(t){if(this._bytesAllocated+=t,a&&console.log(`Allocating ${t}, (${this._bytesAllocated} / ${this._bytesTotal})`),t>o.BYTE_LENGTH)return new Uint32Array(t/Uint32Array.BYTES_PER_ELEMENT);for(const e of this._pages){const r=e.allocate(t);if(n.isSome(r))return r}return n.unwrapOrThrow(this._addPage().allocate(t),"Expected to allocate page")},r.release=function(t){this._bytesAllocated-=t.byteLength,a&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.free(t)},r._addPage=function(){const t=new o;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t},e._createClass(t,[{key:"_bytesTotal",get:function(){return this._pages.length*o.BYTE_LENGTH}}]),t}();t.BufferPool=u,t.TypedBuffer=i,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
