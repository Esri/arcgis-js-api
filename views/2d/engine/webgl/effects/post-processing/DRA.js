/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Logger.js";import t from"../../VertexStream.js";import{ColorAttachment as s,BlendFactor as r,PixelFormat as i,PixelType as o,TextureSamplingMode as n,TextureWrapMode as a,DepthStencilTargetType as h,TextureType as d}from"../../../../../webgl/enums.js";import{FramebufferObject as u}from"../../../../../webgl/FramebufferObject.js";import{Texture as l}from"../../../../../webgl/Texture.js";const p=e.getLogger("esri.views.2d.engine.webgl.effects.post-processing.DRA"),_=2;class f{constructor(){this._fbos=null,this._colorAttachmentsPoints=[s.COLOR_ATTACHMENT0,s.COLOR_ATTACHMENT1],this._size=[0,0],this._programDesc={"min-max":{vsPath:"post-processing/pp",fsPath:"post-processing/dra/min-max",attributes:new Map([["a_position",0]])},dra:{vsPath:"post-processing/pp",fsPath:"post-processing/dra",attributes:new Map([["a_position",0]])}}}dispose(){this._disposeFBOs(),this._layerTexture&&(this._layerTexture.dispose(),this._layerTexture=null)}draw(e,i,o){this._createOrResizeResources(e);const{context:n,state:a,painter:h,pixelRatio:d}=e,{materialManager:u}=h,l=this._programDesc,{size:_}=a,f=this._fbos,m=[d*_[0],d*_[1]],T=n.capabilities.drawBuffers;if(!T)return void p.error("esri.DRA","WebGL Extension WEBGL_draw_buffers isn't supported!");this._quad||(this._quad=new t(n,[-1,-1,1,-1,-1,1,1,1]));const c=this._layerTexture;i.copyToTexture(0,0,m[0],m[1],0,0,c);const g=this._quad;g.bind();const x=u.getProgram(l["min-max"]);n.useProgram(x),n.setBlendingEnabled(!1);let b,E=i.colorTexture,w=i.colorTexture;const M=[m[0],m[1]],A=[0,0];for(let t=0;t<f.length;t++){const e=f[t],r=e.descriptor;A[0]=r.width,A[1]=r.height,n.bindFramebuffer(e),T.drawBuffers(this._colorAttachmentsPoints),n.setViewport(0,0,r.width,r.height),b=t,b>6&&(b=6),n.bindTexture(E,b),n.bindTexture(w,b+1),x.setUniform1i("u_minTexture",b),x.setUniform1i("u_maxTexture",b+1),x.setUniform2fv("u_srcResolution",M),x.setUniform2fv("u_dstResolution",A),g.draw(),E=e.getColorTexture(s.COLOR_ATTACHMENT0),w=e.getColorTexture(s.COLOR_ATTACHMENT1),M[0]=A[0],M[1]=A[1]}n.setViewport(0,0,m[0],m[1]),n.bindFramebuffer(i);const R=u.getProgram(l.dra);n.useProgram(R),n.bindTexture(E,5),n.bindTexture(w,6),n.bindTexture(c,7),R.setUniform1i("u_minColor",5),R.setUniform1i("u_maxColor",6),R.setUniform1i("u_texture",7),n.setStencilWriteMask(0),n.setStencilTestEnabled(!1),n.setDepthWriteEnabled(!1),n.setDepthTestEnabled(!1),g.draw(),n.setBlendingEnabled(!0),n.setBlendFunction(r.ONE,r.ONE_MINUS_SRC_ALPHA),n.setStencilTestEnabled(!0),g.unbind()}_createOrResizeResources(e){const{context:t,state:s,pixelRatio:r}=e,{size:p}=s;let f=Math.round(r*p[0]),m=Math.round(r*p[1]);if(this._size[0]!==f||this._size[1]!==m){for(this._size[0]=f,this._size[1]=m,this._disposeFBOs(),this._fbos=[];f>1||m>1;){f=Math.max(1,0|Math.floor((f+_-1)/_)),m=Math.max(1,0|Math.floor((m+_-1)/_));const e={pixelFormat:i.RGBA,internalFormat:i.RGBA,dataType:o.UNSIGNED_BYTE,samplingMode:n.NEAREST,wrapMode:a.CLAMP_TO_EDGE,flipped:!1,width:f,height:m},s=new u(t,{depthStencilTarget:h.NONE,width:f,height:m},[e,e]);this._fbos.push(s)}this._layerTexture?this._layerTexture.resize(Math.round(r*p[0]),Math.round(r*p[1])):this._layerTexture=new l(t,{target:d.TEXTURE_2D,pixelFormat:i.RGBA,internalFormat:i.RGBA,dataType:o.UNSIGNED_BYTE,wrapMode:a.CLAMP_TO_EDGE,samplingMode:n.LINEAR,flipped:!1,width:Math.round(r*p[0]),height:Math.round(r*p[1])})}}_disposeFBOs(){if(this._fbos){for(const e of this._fbos)e.dispose();this._fbos.length=0,this._fbos=null}}}export{f as DRA};
