/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["../../../../../../core/Logger","../../../../../webgl/BufferObject","../../../../../webgl/FramebufferObject","../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/has","../../../../../webgl/checkWebGLError","../../../../../webgl/enums","../../../../../../chunks/builtins","../../../../../webgl/renderState","../../../../../webgl/Texture","../../../../../webgl/VertexArrayObject","../../definitions","./parameters"],(function(o,i,t,e,l,n,r,h,a,s,u,d,g){"use strict";const f=o.getLogger("esri.views.2d.engine.webgl.painter.highlight.HighlightGradient");function H(o,i){i.fillColor[0]=o.color.r/255,i.fillColor[1]=o.color.g/255,i.fillColor[2]=o.color.b/255,i.fillColor[3]=o.color.a,o.haloColor?(i.outlineColor[0]=o.haloColor.r/255,i.outlineColor[1]=o.haloColor.g/255,i.outlineColor[2]=o.haloColor.b/255,i.outlineColor[3]=o.haloColor.a):(i.outlineColor[0]=i.fillColor[0],i.outlineColor[1]=i.fillColor[1],i.outlineColor[2]=i.fillColor[2],i.outlineColor[3]=i.fillColor[3]),i.fillColor[3]*=o.fillOpacity,i.outlineColor[3]*=o.haloOpacity,i.fillColor[0]*=i.fillColor[3],i.fillColor[1]*=i.fillColor[3],i.fillColor[2]*=i.fillColor[3],i.outlineColor[0]*=i.outlineColor[3],i.outlineColor[1]*=i.outlineColor[3],i.outlineColor[2]*=i.outlineColor[3],i.outlineWidth=g.HIGHLIGHT_SIZING.outlineWidth,i.outerHaloWidth=g.HIGHLIGHT_SIZING.outerHaloWidth,i.innerHaloWidth=g.HIGHLIGHT_SIZING.innerHaloWidth,i.outlinePosition=g.HIGHLIGHT_SIZING.outlinePosition}const C=[0,0,0,0];return function(){function o(){this._convertedHighlightOptions={fillColor:[.2*.75,.6*.75,.675,.75],outlineColor:[.2*.9,.54,.81,.9],outlinePosition:g.HIGHLIGHT_SIZING.outlinePosition,outlineWidth:g.HIGHLIGHT_SIZING.outlineWidth,innerHaloWidth:g.HIGHLIGHT_SIZING.innerHaloWidth,outerHaloWidth:g.HIGHLIGHT_SIZING.outerHaloWidth},this.shadeTexChanged=!0,this.texelData=new Uint8Array(4*g.SHADE_TEXTURE_SIZE),this.minMaxDistance=[0,0]}var i=o.prototype;return i.setHighlightOptions=function(o){const i=this._convertedHighlightOptions;H(o,i);const t=i.outlinePosition-i.outlineWidth/2-i.outerHaloWidth,e=i.outlinePosition-i.outlineWidth/2,l=i.outlinePosition+i.outlineWidth/2,n=i.outlinePosition+i.outlineWidth/2+i.innerHaloWidth,r=Math.sqrt(Math.PI/2)*g.SIGMA,h=Math.abs(t)>r?Math.round(10*(Math.abs(t)-r))/10:0,a=Math.abs(n)>r?Math.round(10*(Math.abs(n)-r))/10:0;let s;h&&!a?f.error("The outer rim of the highlight is "+h+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards positive values (inwards)."):!h&&a?f.error("The inner rim of the highlight is "+a+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards negative values (outwards)."):h&&a&&f.error("The highlight is "+Math.max(h,a)+"px away from the edge of the feature; consider reducing some width values.");const u=[void 0,void 0,void 0,void 0];function d(o,i,t){u[0]=(1-t)*o[0]+t*i[0],u[1]=(1-t)*o[1]+t*i[1],u[2]=(1-t)*o[2]+t*i[2],u[3]=(1-t)*o[3]+t*i[3]}const{texelData:c}=this;for(let f=0;f<g.SHADE_TEXTURE_SIZE;++f)s=t+f/(g.SHADE_TEXTURE_SIZE-1)*(n-t),s<t?(u[4*f+0]=0,u[4*f+1]=0,u[4*f+2]=0,u[4*f+3]=0):s<e?d(C,i.outlineColor,(s-t)/(e-t)):s<l?[u[0],u[1],u[2],u[3]]=i.outlineColor:s<n?d(i.outlineColor,i.fillColor,(s-l)/(n-l)):[u[4*f+0],u[4*f+1],u[4*f+2],u[4*f+3]]=i.fillColor,c[4*f+0]=255*u[0],c[4*f+1]=255*u[1],c[4*f+2]=255*u[2],c[4*f+3]=255*u[3];this.minMaxDistance[0]=t,this.minMaxDistance[1]=n,this.shadeTexChanged=!0},i.applyHighlightOptions=function(o,i){this.shadeTex||(this.shadeTex=new s(o,{target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,width:g.SHADE_TEXTURE_SIZE,height:1,samplingMode:9729})),this.shadeTexChanged&&(this.shadeTex.updateData(0,0,0,g.SHADE_TEXTURE_SIZE,1,this.texelData),this.shadeTexChanged=!1),o.bindTexture(this.shadeTex,d.TEXTURE_BINDING_HIGHLIGHT_1),i.setUniform2fv("u_minMaxDistance",this.minMaxDistance)},i.destroy=function(){this.shadeTex&&(this.shadeTex.dispose(),this.shadeTex=null)},o}()}));
