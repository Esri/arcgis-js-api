/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../config","../../../../core/maybe","../../../../core/Logger","../../../../core/Error","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../request","../../../../chunks/vec2","./definitions","../../../../chunks/vec2f32","./util/BidiText","../../../../symbols/cim/Rasterizer","./enums","./fontUtils","./GlyphMosaic","./GlyphSource","./SDFConverter","./SpriteMosaic","./animatedFormats/apng","./animatedFormats/gif","./util/Result","./util/symbolUtils"],(function(e,t,i,s,n,r,a,o,c,h,u,d,l,g,p,f,y,_,m,w,M,S,T){"use strict";const I=u.create(),b="arial-unicode-ms-regular",v=s.getLogger("esri.views.2d.engine.webgl.TextureManager"),x=e=>"esriSMS"===e.type&&e.path;function z(e){switch(e.type){case"esriSMS":case"esriPMS":case"CIMPointSymbol":case"CIMVectorMarker":case"CIMPictureMarker":case"CIMCharacterMarker":return!1;default:return!0}}function R(e,t){const i=Math.round(a.pt2px(t)*window.devicePixelRatio),s=i>=128?2:4;return Math.min(e,i*s)}const C=(e,t,i)=>v.error(new n(e,t,i));let G=function(){function e(e,t,i){this.mosaicType=e,this.page=t,this.sdf=i}return e.fromMosaic=function(t,i){return new e(t,i.page,i.sdf)},e}();return function(){function s(e){this._invalidFontsMap=new Map,this._sdfConverter=new _(126),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._rasterizer=new l,this._ongoingRasterizations=new Map,this._spriteMosaic=new m(e,2048,2048,500),this._glyphSource=new y(`${t.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new f(1024,1024,this._glyphSource)}var u=s.prototype;return u.dispose=function(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._rasterizer=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null},u.rasterizeItem=async function(e,t,s,n){if(i.isNone(e))return C("mapview-null-resource","Unable to rasterize null resource"),null;switch(e.type){case"CIMTextSymbol":case"esriTS":{const t=await this._rasterizeText(e,s,n);return t.forEach((e=>this._setTextureBinding(g.MosaicType.GLYPH,e))),{glyphMosaicItems:t}}case"esriSMS":case"esriPMS":case"esriSFS":case"esriPFS":case"esriSLS":default:{if((r=e).type&&-1!==r.type.toLowerCase().indexOf("3d"))return C("mapview-invalid-type",`MapView does not support symbol type: ${e.type}`,e),null;const i=await this._rasterizeSpriteSymbol(e,t,n);return S.ok(i)&&i&&this._setTextureBinding(g.MosaicType.SPRITE,i),{spriteMosaicItem:i}}}var r},u.bindTextures=function(e,t,i,s=!1){if(0===i.textureBinding)return;const n=this._bindingInfos[i.textureBinding-1],r=n.page,a=s?9987:9729;switch(n.mosaicType){case g.MosaicType.SPRITE:{const i=this.sprites.getWidth(r),s=this.sprites.getHeight(r),n=c.set(I,i,s);return this._spriteMosaic.bind(e,a,r,h.TEXTURE_BINDING_SPRITE_ATLAS),t.setUniform1i("u_texture",h.TEXTURE_BINDING_SPRITE_ATLAS),void t.setUniform2fv("u_mosaicSize",n)}case g.MosaicType.GLYPH:{const i=this.glyphs.width,s=this.glyphs.height,n=c.set(I,i,s);return this._glyphMosaic.bind(e,a,r,h.TEXTURE_BINDING_GLYPH_ATLAS),t.setUniform1i("u_texture",h.TEXTURE_BINDING_GLYPH_ATLAS),void t.setUniform2fv("u_mosaicSize",n)}default:v.error("mapview-texture-manager",`Cannot handle unknown type ${n.mosaicType}`)}},u._hashMosaic=function(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3},u._setTextureBinding=function(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=G.fromMosaic(e,t),n=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,n),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)},u._rasterizeText=async function(e,t,i){const s=p.getFullyQualifiedFontName(e.font),n=this._invalidFontsMap.has(s),r=t||function(e){const t=[];for(let i=0;i<e.length;i++)t.push(e.charCodeAt(i));return t}(d.bidiText(e.text)[0]);try{return await this._glyphMosaic.getGlyphItems(n?b:s,r,i)}catch(e){return C("mapview-invalid-resource",`Couldn't find font ${s}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(s,!0),this._glyphMosaic.getGlyphItems(b,r,i)}},u._rasterizeSpriteSymbol=async function(e,t,i){if(function(e){switch(e.type){case"CIMSolidStroke":case"CIMSolidFill":return!0;case"esriSFS":return"esriSFSSolid"===e.style||"esriSFSNull"===e.style;case"esriSLS":return"esriSLSSolid"===e.style||"esriSLSNull"===e.style;default:return!1}}(e))return null;const s=T.keyFromSymbol(e);if(this._spriteMosaic.has(s))return this._spriteMosaic.getSpriteItem(s);if(x(e)||(e=>e.url||e.imageData)(e))return this._handleAsyncResource(s,e,i);const r=this._rasterizer.rasterizeJSONResource(e,t);if(r){const{size:t,image:i,sdf:n,simplePattern:a}=r;return this._addItemToMosaic(s,t,{type:"static",data:i},z(e),n,a)}return new n("TextureManager","unrecognized or null rasterized image")},u._handleAsyncResource=async function(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;s=x(t)?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s);try{await s,this._ongoingRasterizations.delete(e)}catch{this._ongoingRasterizations.delete(e)}return s},u._handleSVG=async function(e,t,i){const s=[126,126],n=await this._sdfConverter.draw(e.path,i);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(n.buffer)},!1,!0,!0)},u._handleGIFOrPNG=async function(e,t,i){const s=await async function(e,t){const i=e.imageData?`data:${e.contentType};base64,${e.imageData}`:e.url;let s;const a=";base64,";if(-1!==i.indexOf(a)){const e=i.indexOf(a)+a.length,t=i.substring(e),n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;e++)r[e]=n.charCodeAt(e);s=r.buffer}else try{const{data:e}=await o(i,{responseType:"array-buffer",...t});s=e}catch(e){if(!r.isAbortError(e))return new n("mapview-invalid-resource",`Could not fetch requested resource at ${i}`)}return s}(e,i);if(S.ok(s)){const a=M.isGIF(s),c=w.isPNG(s);if(!a&&!c)return new n("mapview-invalid-resource","Image data is neither GIF nor PNG!");let h;try{a&&M.isAnimatedGIF(s)?h=await M.default.create(s,i):c&&w.isAnimatedPNG(s)&&(h=await w.default.create(s,i))}catch(e){if(!r.isAbortError(e))return new n("mapview-invalid-resource","Could not fetch requested resource!")}if(h&&S.ok(h))return this._addItemToMosaic(t,[h.width,h.height],{type:"animated",data:h},z(e),!1,!1);const u=new Blob([s],{type:a?"image/gif":"image/png"}),d=await async function(e){const t=window.URL.createObjectURL(e);try{const{data:e}=await o(t,{responseType:"image"});return window.URL.revokeObjectURL(t),e}catch(e){return window.URL.revokeObjectURL(t),new n("mapview-invalid-resource",`Could not fetch requested resource at ${t}`)}}(u);if(d&&d instanceof HTMLImageElement){let i=d.width,s=d.height;"esriPMS"===e.type&&(i=Math.round(R(d.width,e.width)),s=Math.round(d.height*(i/d.width)));const{size:n,sdf:r,image:a}=this._rasterizer.rasterizeImageResource(i,s,d,e.colorSubstitutions);return this._addItemToMosaic(t,n,{type:"static",data:a},z(e),r,!1)}}return new n("mapview-invalid-resource","Could not handle resource!")},u._handleImage=async function(e,t,i){if((e=>e.url&&-1!==e.url.indexOf(".gif")||e.contentType&&"image/gif"===e.contentType||e.imageData&&-1!==e.imageData.indexOf("data:image/gif"))(e)||(e=>e.url&&-1!==e.url.indexOf(".png")||e.contentType&&"image/png"===e.contentType||e.imageData&&-1!==e.imageData.indexOf("data:image/png"))(e))return this._handleGIFOrPNG(e,t,i);const s=e.imageData?`data:${e.contentType};base64,${e.imageData}`:e.url;try{const{data:n}=await o(s,{responseType:"image",...i});-1!==s.indexOf("data:image/svg+xml")&&(n.width=a.pt2px(e.width),n.height=a.pt2px(e.height));let r=n.width,c=n.height;"esriPMS"===e.type&&(r=Math.round(R(n.width,e.width)),c=Math.round(n.height*(r/n.width)));const{size:h,sdf:u,image:d}=this._rasterizer.rasterizeImageResource(r,c,n,e.colorSubstitutions);return this._addItemToMosaic(t,h,{type:"static",data:d},z(e),u,!1)}catch(e){if(!r.isAbortError(e))return new n("mapview-invalid-resource",`Could not fetch requested resource at ${s}`)}},u._addItemToMosaic=function(e,t,i,s,n,r){return this._spriteMosaic.addSpriteItem(e,t,i,s,n,r)},e._createClass(s,[{key:"sprites",get:function(){return this._spriteMosaic}},{key:"glyphs",get:function(){return this._glyphMosaic}}]),s}()}));
