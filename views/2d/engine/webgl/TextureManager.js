/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../config","../../../../core/maybe","../../../../core/Logger","../../../../core/Error","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../request","../../../../chunks/vec2","./definitions","../../../../chunks/vec2f32","../../../support/QueueProcessor","./util/BidiText","../../../../symbols/cim/Rasterizer","./enums","./fontUtils","./GlyphMosaic","./GlyphSource","./SDFConverter","./SpriteMosaic","./animatedFormats/apng","./animatedFormats/gif","./util/Result","./util/symbolUtils"],(function(e,t,i,s,r,n,a,o,c,u,h,d,l,g,p,f,m,_,y,w,M,S,T,I){"use strict";const b=h.create(),v="arial-unicode-ms-regular",x=126,R=s.getLogger("esri.views.2d.engine.webgl.TextureManager"),z=e=>"esriSMS"===e.type&&e.path,C=e=>e.url||e.imageData,P=e=>e.url&&-1!==e.url.indexOf(".gif")||e.contentType&&"image/gif"===e.contentType||e.imageData&&-1!==e.imageData.indexOf("data:image/gif"),A=e=>e.url&&-1!==e.url.indexOf(".png")||e.contentType&&"image/png"===e.contentType||e.imageData&&-1!==e.imageData.indexOf("data:image/png"),G=e=>e.type&&-1!==e.type.toLowerCase().indexOf("3d");function F(e){switch(e.type){case"CIMSolidStroke":case"CIMSolidFill":return!0;case"esriSFS":return"esriSFSSolid"===e.style||"esriSFSNull"===e.style;case"esriSLS":return"esriSLSSolid"===e.style||"esriSLSNull"===e.style;default:return!1}}const U=e=>-1!==e.indexOf("data:image/svg+xml");function L(e){switch(e.type){case"esriSMS":case"esriPMS":case"CIMPointSymbol":case"CIMVectorMarker":case"CIMPictureMarker":case"CIMCharacterMarker":return!1;default:return!0}}function B(e){const t=[];for(let i=0;i<e.length;i++)t.push(e.charCodeAt(i));return t}async function E(e,t){const i=e.imageData?`data:${e.contentType};base64,${e.imageData}`:e.url;let s;const a=";base64,";if(-1!==i.indexOf(a)){const e=i.indexOf(a)+a.length,t=i.substring(e),r=atob(t),n=new Uint8Array(r.length);for(let i=0;i<r.length;i++)n[i]=r.charCodeAt(i);s=n.buffer}else try{const{data:e}=await o(i,{responseType:"array-buffer",...t});s=e}catch(c){if(!n.isAbortError(c))return new r("mapview-invalid-resource",`Could not fetch requested resource at ${i}`)}return s}function k(e,t){const i=Math.round(a.pt2px(t)*window.devicePixelRatio),s=i>=128?2:4;return Math.min(e,i*s)}const N=(e,t,i)=>R.error(new r(e,t,i));let D=function(){function e(e,t,i){this.mosaicType=e,this.page=t,this.sdf=i}return e.fromMosaic=function(t,i){return new e(t,i.page,i.sdf)},e}();return function(){function s(e){this._invalidFontsMap=new Map,this._sdfConverter=new y(x),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._rasterizer=new g,this._ongoingRasterizations=new Map,this._imageRequestQueue=new d.QueueProcessor({concurrency:10,process:async(e,t)=>{n.throwIfAborted(t);try{return await o(e,{responseType:"image",signal:t})}catch(i){if(!n.isAbortError(i))throw new r("mapview-invalid-resource",`Could not fetch requested resource at ${e}`,i);throw i}}}),this._spriteMosaic=new w(e,2048,2048,500),this._glyphSource=new _(`${t.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new m(1024,1024,this._glyphSource)}var h=s.prototype;return h.dispose=function(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._rasterizer=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null},h.rasterizeItem=async function(e,t,s,r){if(i.isNone(e))return N("mapview-null-resource","Unable to rasterize null resource"),null;switch(e.type){case"CIMTextSymbol":case"esriTS":{const t=await this._rasterizeText(e,s,r);return t.forEach((e=>this._setTextureBinding(p.MosaicType.GLYPH,e))),{glyphMosaicItems:t}}case"esriSMS":case"esriPMS":case"esriSFS":case"esriPFS":case"esriSLS":default:{if(G(e))return N("mapview-invalid-type",`MapView does not support symbol type: ${e.type}`,e),null;const i=await this._rasterizeSpriteSymbol(e,t,r);return T.ok(i)&&i&&this._setTextureBinding(p.MosaicType.SPRITE,i),{spriteMosaicItem:i}}}},h.bindTextures=function(e,t,i,s=!1){if(0===i.textureBinding)return;const r=this._bindingInfos[i.textureBinding-1],n=r.page,a=s?9987:9729;switch(r.mosaicType){case p.MosaicType.SPRITE:{const i=this.sprites.getWidth(n),s=this.sprites.getHeight(n),r=c.set(b,i,s);return this._spriteMosaic.bind(e,a,n,u.TEXTURE_BINDING_SPRITE_ATLAS),t.setUniform1i("u_texture",u.TEXTURE_BINDING_SPRITE_ATLAS),void t.setUniform2fv("u_mosaicSize",r)}case p.MosaicType.GLYPH:{const i=this.glyphs.width,s=this.glyphs.height,r=c.set(b,i,s);return this._glyphMosaic.bind(e,a,n,u.TEXTURE_BINDING_GLYPH_ATLAS),t.setUniform1i("u_texture",u.TEXTURE_BINDING_GLYPH_ATLAS),void t.setUniform2fv("u_mosaicSize",r)}default:R.error("mapview-texture-manager",`Cannot handle unknown type ${r.mosaicType}`)}},h._hashMosaic=function(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3},h._setTextureBinding=function(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=D.fromMosaic(e,t),r=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,r),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)},h._rasterizeText=async function(e,t,i){const s=f.getFullyQualifiedFontName(e.font),r=this._invalidFontsMap.has(s),n=t||B(l.bidiText(e.text)[0]);try{return await this._glyphMosaic.getGlyphItems(r?v:s,n,i)}catch(a){return N("mapview-invalid-resource",`Couldn't find font ${s}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(s,!0),this._glyphMosaic.getGlyphItems(v,n,i)}},h._rasterizeSpriteSymbol=async function(e,t,i){if(F(e))return null;const s=I.keyFromSymbol(e);if(this._spriteMosaic.has(s))return this._spriteMosaic.getSpriteItem(s);if(z(e)||C(e))return this._handleAsyncResource(s,e,i);const n=this._rasterizer.rasterizeJSONResource(e,t);if(n){const{size:t,image:i,sdf:r,simplePattern:a}=n;return this._addItemToMosaic(s,t,{type:"static",data:i},L(e),r,a)}return new r("TextureManager","unrecognized or null rasterized image")},h._handleAsyncResource=async function(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;s=z(t)?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s);try{await s,this._ongoingRasterizations.delete(e)}catch{this._ongoingRasterizations.delete(e)}return s},h._handleSVG=async function(e,t,i){const s=[x,x],r=await this._sdfConverter.draw(e.path,i);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(r.buffer)},!1,!0,!0)},h._handleGIFOrPNG=async function(e,t,i){const s=await E(e,i);if(T.ok(s)){const o=S.isGIF(s),c=M.isPNG(s);if(!o&&!c)return new r("mapview-invalid-resource","Image data is neither GIF nor PNG!");let u;try{o&&S.isAnimatedGIF(s)?u=await S.default.create(s,i):c&&M.isAnimatedPNG(s)&&(u=await M.default.create(s,i))}catch(a){if(!n.isAbortError(a))return new r("mapview-invalid-resource","Could not fetch requested resource!")}if(u&&T.ok(u))return this._addItemToMosaic(t,[u.width,u.height],{type:"animated",data:u},L(e),!1,!1);const h=new Blob([s],{type:o?"image/gif":"image/png"}),d=await this._imageFromBlob(h);if(d&&d instanceof HTMLImageElement){let i=d.width,s=d.height;"esriPMS"===e.type&&(i=Math.round(k(d.width,e.width)),s=Math.round(d.height*(i/d.width)));const{size:r,sdf:n,image:a}=this._rasterizer.rasterizeImageResource(i,s,d,e.colorSubstitutions);return this._addItemToMosaic(t,r,{type:"static",data:a},L(e),n,!1)}}return new r("mapview-invalid-resource","Could not handle resource!")},h._handleImage=async function(e,t,i){if(P(e)||A(e))return this._handleGIFOrPNG(e,t,i);const s=e.imageData?`data:${e.contentType};base64,${e.imageData}`:e.url;try{const{data:r}=await this._imageRequestQueue.push(s,{...i});U(s)&&(r.width=a.pt2px(e.width),r.height=a.pt2px(e.height));let n=r.width,o=r.height;"esriPMS"===e.type&&(n=Math.round(k(r.width,e.width)),o=Math.round(r.height*(n/r.width)));const{size:c,sdf:u,image:h}=this._rasterizer.rasterizeImageResource(n,o,r,e.colorSubstitutions);return this._addItemToMosaic(t,c,{type:"static",data:h},L(e),u,!1)}catch(o){if(!n.isAbortError(o))return new r("mapview-invalid-resource",`Could not fetch requested resource at ${s}. ${o.message}`)}},h._imageFromBlob=async function(e){const t=window.URL.createObjectURL(e);try{const{data:e}=await this._imageRequestQueue.push(t);return window.URL.revokeObjectURL(t),e}catch(i){if(window.URL.revokeObjectURL(t),!n.isAbortError(i))return new r("mapview-invalid-resource",`Could not fetch requested resource at ${t}`);throw i}},h._addItemToMosaic=function(e,t,i,s,r,n){return this._spriteMosaic.addSpriteItem(e,t,i,s,r,n)},e._createClass(s,[{key:"sprites",get:function(){return this._spriteMosaic}},{key:"glyphs",get:function(){return this._glyphMosaic}}]),s}()}));
