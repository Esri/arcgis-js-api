/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","./DirtyMap","./DisplayRecordStore","./WGLBuffers","./WGLTile"],(function(t,e,s,i,a,l){"use strict";let r=function(t){function l(){var e;return(e=t.apply(this,arguments)||this)._data=null,e._displayList=null,e._lastCommitTime=0,e._hasData=!1,e._invalidated=!1,e._wglBuffers=null,e._dirtyMap=new s,e}e._inheritsLoose(l,t);var r=l.prototype;return r.destroy=function(){t.prototype.destroy.call(this),this.clear()},r.getGeometry=function(t){return this._wglBuffers&&this._wglBuffers.has(t)?this._wglBuffers.get(t):null},r.getDisplayList=function(){return this._displayList},r.patch=function(t){if(!0===t.clear)return this.clear(),void(this._hasData=!1);const e=t.addOrUpdate,a=t.remove;!this._data&&e&&e.tileDisplayData?.displayObjects.length?(e.tileDisplayData.computeDisplayList(),this._dirtyMap=new s,this._dispRecStore=i.fromTileData(e,this._dirtyMap),this._data=e,this._dirtyMap.markAllDirty(),this._hasData=!0,t.end&&this.ready()):this._data&&(e&&e.tileDisplayData?.displayObjects.length||a.length)?this._doPatchData(t):t.end&&this.ready(),t.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")},r.commit=function(t){t.time&&t.time===this._lastCommitTime||(this._lastCommitTime=t.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new a(t.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))},r.clear=function(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)},r._doPatchData=function(t){this._invalidated=!0,this._patchData(t)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=i.fromTileData(this._data,this._dirtyMap)),this.requestRender()},r._patchData=function(t){let e=!0;const s=t.addOrUpdate&&t.addOrUpdate.tileDisplayData&&t.addOrUpdate.tileDisplayData.displayObjects||[],i=(t.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);let a;i.length>0&&(a=new Set(i));const l=this._data.tileDisplayData;for(const r of i){const t=l.displayObjectRegistry.get(r);if(t){l.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);l.displayObjectRegistry.delete(r)}}a?.size&&(l.displayObjects=l.displayObjects.filter((t=>!a.has(t.id))));for(const r of s){let s,i=l.displayObjectRegistry.get(r.id);if(i){const t=i.displayRecords;i.set(r),i.displayRecords=t;const e=i.displayRecords.length;for(let s=0;s<e;++s){const t=i.displayRecords[s],e=r.displayRecords[s];(s>=r.displayRecords.length||t.geometryType!==e.geometryType||t.symbolLevel!==e.symbolLevel||t.zOrder!==e.zOrder||t.materialKey!==e.materialKey)&&(this._dispRecStore.delete(i.displayRecords[s]),s<r.displayRecords.length&&(i.displayRecords[s]=void 0))}i.displayRecords.length=r.displayRecords.length}else{let t;i=r.copy(),i.displayRecords=[],l.displayObjectRegistry.set(r.id,i);const e=l.displayObjects;if(null!=i.insertAfter)if(s={},i.insertAfter>=0){const s=l.displayObjectRegistry.get(i.insertAfter);s?(t=e.indexOf(s)+1,t<e.length?e.splice(t,0,i):(e.push(i),t=e.length)):(e.push(i),t=e.length)}else e.unshift(i),t=0;else e.push(i),t=e.length;if(s){const i=r.displayRecords.length>0?1:0;let a=0;for(let r=t-1;r>=0&&a<i;--r)for(let t=e[r].displayRecords.length-1;t>=0&&a<i;--t){const i=e[r].displayRecords[t],d=l.displayList.getDPInfoType();s[d]||(s[d]=i,++a)}}}const a=r.displayRecords.length;for(let d=0;d<a;++d){const a=r.displayRecords[d];let o=i.displayRecords[d];o?(o.meshData=a.meshData,o.materialKey=a.materialKey):(o=a.copy(),o.vertexFrom=void 0,o.indexFrom=void 0,i.displayRecords[d]=o);const n=a.geometryType,p=l.displayList.getDPInfoType(),h=t.addOrUpdate.tileBufferData.geometries[n],y=h.vertexBuffer,c=h.indexBuffer;let f;s&&(f=s[p]?l.displayList.splitAfter(s[p]):-1),e=this._dispRecStore.setMeshData(o,a,y,c,f)&&e,s&&null!=o.indexFrom&&null!=o.indexFrom&&(s[p]=o)}}return e},e._createClass(l,[{key:"hasData",get:function(){return!!this._hasData}},{key:"displayObjects",get:function(){return this._displayObjects??[]}}]),l}(l.WGLTile);t.GraphicTile=r,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
