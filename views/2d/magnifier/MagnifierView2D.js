/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../request.js";import r from"../../../core/Handles.js";import{clamp as s}from"../../../core/mathUtils.js";import{isNone as t,isSome as i,disposeMaybe as a}from"../../../core/maybe.js";import{createTask as o}from"../../../core/promiseUtils.js";import{watch as n,initial as l}from"../../../core/reactiveUtils.js";import{isSVG as h}from"../../../core/urlUtils.js";import{c as m}from"../../../chunks/mat3f32.js";import{DisplayObject as u}from"../engine/DisplayObject.js";import{Pos2us as d}from"../engine/webgl/DefaultVertexAttributeLayouts.js";import{WGLDrawPhase as c}from"../engine/webgl/enums.js";import{createMagnifierProgram as _,magnifierProgramTemplate as p}from"../engine/webgl/shaders/MagnifierPrograms.js";import{loadMagnifierResources as f}from"../../magnifier/resources.js";import{BufferObject as g}from"../../webgl/BufferObject.js";import{PrimitiveType as T,Usage as b,TextureType as x,PixelFormat as R,PixelType as y,TextureWrapMode as k,TextureSamplingMode as A}from"../../webgl/enums.js";import{Texture as v}from"../../webgl/Texture.js";import{VertexArrayObject as E}from"../../webgl/VertexArrayObject.js";class j extends u{constructor(){super(),this._handles=new r,this._resourcePixelRatio=1,this.visible=!1}destroy(){this._handles.destroy(),this._handles=null,this._disposeRenderResources(),this._resourcesTask&&(this._resourcesTask.abort(),this._resourcesTask=null)}get background(){return this._background}set background(e){this._background=e,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(e){this._magnifier=e,this._handles.removeAll(),this._handles.add([n((()=>e.version),(()=>{this.visible=e.visible&&i(e.position)&&e.size>0,this.requestRender()}),l),n((()=>[e.maskUrl,e.overlayUrl]),(()=>this._reloadResources())),n((()=>e.size),(()=>{this._disposeRenderResources(),this.requestRender()}))])}_createTransforms(){return{dvs:m()}}doRender(e){const r=e.context;if(!this._resourcesTask)return void this._reloadResources();if(e.drawPhase!==c.MAP||!this._canRender())return;this._updateResources(e);const i=this._magnifier;if(t(i.position))return;const a=e.pixelRatio,o=i.size*a,n=1/i.factor,l=Math.ceil(n*o);this._readbackTexture.resize(l,l);const{size:h}=e.state,m=a*h[0],u=a*h[1],d=.5*l,_=.5*l,p=s(a*i.position.x,d,m-d-1),f=s(u-a*i.position.y,_,u-_-1);r.setBlendingEnabled(!0);const g=p-d,b=f-_,x=this._readbackTexture;r.bindTexture(x,0),r.gl.copyTexImage2D(x.descriptor.target,0,x.descriptor.pixelFormat,g,b,l,l,0);const R=this.background?.color,y=R?[R.a*R.r/255,R.a*R.g/255,R.a*R.b/255,R.a]:[1,1,1,1],k=(p+i.offset.x*a)/m*2-1,A=(f-i.offset.y*a)/u*2-1,v=o/m*2,E=o/u*2,j=this._program;r.bindVAO(this._vertexArrayObject),r.bindTexture(this._overlayTexture,6),r.bindTexture(this._maskTexture,7),r.useProgram(j),j.setUniform4fv("u_background",y),j.setUniform1i("u_readbackTexture",0),j.setUniform1i("u_overlayTexture",6),j.setUniform1i("u_maskTexture",7),j.setUniform4f("u_drawPos",k,A,v,E),j.setUniform1i("u_maskEnabled",i.maskEnabled?1:0),j.setUniform1i("u_overlayEnabled",i.overlayEnabled?1:0),r.setStencilTestEnabled(!1),r.setColorMask(!0,!0,!0,!0),r.drawArrays(T.TRIANGLE_STRIP,0,4),r.bindVAO()}_canRender(){return this.mask&&this.overlay&&null!=this._magnifier}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const r=i(this._magnifier)?this._magnifier.maskUrl:null,s=i(this._magnifier)?this._magnifier.overlayUrl:null;this._resourcesTask=o((async a=>{const o=t(r)||t(s)?f(a):null,n=i(r)?e(r,{responseType:"image",signal:a}).then((e=>e.data)):o.then((e=>e.mask)),l=i(s)?e(s,{responseType:"image",signal:a}).then((e=>e.data)):o.then((e=>e.overlay)),[h,m]=await Promise.all([n,l]);this.mask=h,this.overlay=m,this._disposeRenderResources(),this.requestRender()}))}_disposeRenderResources(){this._readbackTexture=a(this._readbackTexture),this._overlayTexture=a(this._overlayTexture),this._maskTexture=a(this._maskTexture),this._vertexArrayObject=a(this._vertexArrayObject),this._program=a(this._program)}_updateResources(e){if(e.pixelRatio!==this._resourcePixelRatio&&this._disposeRenderResources(),this._readbackTexture)return;const r=e.context;this._resourcePixelRatio=e.pixelRatio;const s=Math.ceil(this._magnifier.size*e.pixelRatio);this._program=_(r);const t=new Uint16Array([0,1,0,0,1,1,1,0]),i=p.attributes;this._vertexArrayObject=new E(r,i,d,{geometry:g.createVertex(r,b.STATIC_DRAW,t)}),this.overlay.width=s,this.overlay.height=s,this._overlayTexture=new v(r,{target:x.TEXTURE_2D,pixelFormat:R.RGBA,internalFormat:R.RGBA,dataType:y.UNSIGNED_BYTE,wrapMode:k.CLAMP_TO_EDGE,samplingMode:A.NEAREST,flipped:!0,preMultiplyAlpha:!h(this.overlay.src)||!e.context.driverTest.svgAlwaysPremultipliesAlpha},this.overlay),this.mask.width=s,this.mask.height=s,this._maskTexture=new v(r,{target:x.TEXTURE_2D,pixelFormat:R.ALPHA,internalFormat:R.ALPHA,dataType:y.UNSIGNED_BYTE,wrapMode:k.CLAMP_TO_EDGE,samplingMode:A.NEAREST,flipped:!0},this.mask);const a=1/this._magnifier.factor;this._readbackTexture=new v(r,{target:x.TEXTURE_2D,pixelFormat:R.RGBA,internalFormat:R.RGBA,dataType:y.UNSIGNED_BYTE,wrapMode:k.CLAMP_TO_EDGE,samplingMode:A.LINEAR,flipped:!1,width:Math.ceil(a*s),height:Math.ceil(a*s)})}}export{j as default};
