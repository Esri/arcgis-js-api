/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/maybe","../core/Logger","../core/accessorSupport/ensureType","../core/handleUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/cast","../core/accessorSupport/decorators/subclass","../core/Error","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../core/events","../core/promiseUtils","../core/scheduling","../geometry/SpatialReference","../geometry/support/webMercatorUtils","../geometry/Point","../geometry/Extent","../geometry","../core/Collection","../core/screenUtils","../Graphic","../chunks/vec3f64","../Camera","../Ground","../Viewpoint","../core/watchUtils","../geometry/projectionEllipsoid","../geometry/HeightModelInfo","../geometry/support/aaBoundingRect","../geometry/projection","./support/spatialReferenceSupport","../webscene/Environment","../core/workers/workers","../core/domUtils","./support/screenshotUtils","../geometry/support/scaleUtils","../layers/support/layerUtils","./BreakpointsOwner","./support/layerViewUtils","./DOMContainer","./3d/support/ElevationProvider","./GroundView","./PopupView","./support/screenUtils","./View","./ViewAnimation","./support/WebGLRequirements","./ViewingMode","./3d/layerViewModuleImportUtils","./3d/constraints/Constraints","./3d/environment/SceneViewEnvironment","../chunks/boundedPlane","./3d/support/geometryUtils","./3d/environment/SceneViewEnvironmentManager","./3d/webgl-engine/lib/intersectorUtils","./3d/webgl-engine/lib/Intersector","./3d/input/SceneInputManager","./3d/interactive/graphics/analysisFactoryUtils","./3d/support/debugFlags","./3d/layers/graphics/GraphicsDeconflictor","./3d/layers/graphics/Labeler","./3d/layers/graphics/ObjectResourceCache","./3d/layers/support/FeatureTileTree3D","./3d/support/PropertiesPool","./3d/state/ViewState","./3d/state/ViewStateManager","./3d/state/helpers/SceneIntersectionHelper","./3d/support/CombinedElevationProvider","./3d/support/DisplayQualityProfile","./3d/support/HighlightOptions","./3d/support/MapCoordsHelper","./3d/support/QualitySettings","./3d/support/RenderCoordsHelper","./3d/support/ResourceController","./3d/terrain/terrainUtils","./3d/support/SceneViewPerformanceInfo","./3d/support/SharedSymbolResources","./3d/support/pointsOfInterest/PointsOfInterest","./3d/terrain/TerrainSurface","./3d/webgl-engine/Stage","./support/hitTestSelectUtils","./ui/3d/DefaultUI3D"],(function(e,t,i,r,n,a,s,o,l,p,c,d,h,u,g,y,f,m,_,w,v,S,b,R,T,x,O,M,C,V,P,I,E,H,G,A,L,U,D,F,k,z,N,W,q,j,B,$,Q,K,Z,J,X,Y,ee,te,ie,re,ne,ae,se,oe,le,pe,ce,de,he,ue,ge,ye,fe,me,_e,we,ve,Se,be,Re,Te,xe,Oe,Me,Ce,Ve,Pe,Ie,Ee){"use strict";function He(e){return Object.freeze({__proto__:null,default:e})}const Ge=a.getLogger("esri.views.SceneView");let Ae=function(i){function a(e){var r;(r=i.call(this,e)||this)._clippingArea=null,r._userClippingArea=null,r._initialDefaultSpatialReference=null,r._defaults={},r._externallySet={environment:!1},r._createGraphicsViewController=null,r._resolveWhenReady=[],r.propertiesPool=new ge.PropertiesPool({slicePlane:ie.BoundedPlaneClass},t._assertThisInitialized(r)),r._resourceController=Te.newResourceController(t._assertThisInitialized(r)),r._defaultToMapOptions={include:new Set},r._defaultHitTestOptions={exclude:new Set},r.deconflictor=new ce.GraphicsDeconflictor({view:t._assertThisInitialized(r)}),r.labeler=new de.Labeler({view:t._assertThisInitialized(r),deconflictor:r.deconflictor.labels}),r.sharedSymbolResources=null,r.basemapTerrain=null,r.elevationProvider=null,r.camera=null,r.canvas=null,r.center=null,r.constraints=new ee.default,r.environmentManager=new ne.default,r.extent=null,r.floors=new R,r.windowDevicePixelRatio=1,r.fullOpacity=1,r.graphicsView=null,r.groundView=null,r.navigating=!1,r.map=null,r.screenSizePerspectiveEnabled=!0,r.state=new ye,r.scale=null,r.spatialReference=null,r.isHeightModelInfoRequired=!0,r.alphaCompositingEnabled=!1,r.supersampleScreenhotsEnabled=!0,r.type="3d",r.ui=new Ee,r._numUpdating=0,r._lastUpdateTime=0,r.updatingProgress=.5,r.viewpoint=null,r.zoom=null,r.highlightOptions=new ve,U.initialize(),e&&e.environment||(r._defaults.environment=new te,r.environment=r._defaults.environment);const a=e=>{n.isSome(e)&&4===e.type||(r.notifyChange("dataExtent"),r.updatingChanged(),r.map&&r.map.allLayers.forEach((async e=>{try{await e.when()}catch{}r.updatingChanged()})))};r.handles.add([P.on(t._assertThisInitialized(r),"map.allLayers","after-changes",a,a,a,!0),r.allLayerViews.on("after-changes",(e=>r._updateUpdatingMonitors(e))),r.watch("map",(e=>{e&&e.load&&e.load().catch((()=>{}))}))]),r.inputManager=new oe({view:t._assertThisInitialized(r)});const s=()=>{const e=window.devicePixelRatio;e!==r.windowDevicePixelRatio&&(r.windowDevicePixelRatio=e,r.notifyChange("pixelRatio"))};return r.stateManager=new fe({view:t._assertThisInitialized(r),updateDevicePixelRatio:s}),r}t._inheritsLoose(a,i);var l=a.prototype;return l.initialize=function(){this.groundView=new B({view:this}),this._updateUpdatingMonitors();const e=()=>this._updateDefaultToMapOptions();this.handles.add(P.on(this,"map.allLayers","after-changes",e,e,e)),this.updatingHandles.add(this.qualitySettings,"memoryLimit",(e=>{this.resourceController&&(this.resourceController.memoryController.maxMemory=e)}),2),this.updatingHandles.add(this.qualitySettings,"additionalCacheMemory",(e=>{this.resourceController&&(this.resourceController.memoryController.additionalCacheMemory=e)}),2),this.updatingHandles.add(this.qualitySettings,"frameRate",(e=>m.setFrameDuration(e>0?1e3/Math.ceil(e):0)),2),this.updatingHandles.add(pe,"SCENEVIEW_LOCKING_LOG",(e=>this.defaultsFromMap.logDebugInformation=e),2),this.updatingHandles.add(this,"map.ground",e,3),this.updatingHandles.add(this,"map.ground.opacity",(()=>this._updateDefaultHitTestOptions()),3),this.handles.add(this.watch("spatialReference",(()=>this.notifyChange("clippingArea")),!0))},l.destroy=function(){this.destroyed||(this.invalidate(),this.activeTool=null,this.layerViewManager.clear(),this._exitSurface(),this._disposeGraphicsView(),this.sharedSymbolResources&&(this.sharedSymbolResources.destroy(),this.sharedSymbolResources=null),this.labeler.destroy(),this._set("labeler",null),this.deconflictor.destroy(),this._set("deconflictor",null),this._resourceController.destroy(),this._resourceController=null,this.stateManager.destroy(),this._set("stateManager",null),this.inputManager.destroy(),this._set("inputManager",null),this.propertiesPool.destroy(),this.handles.remove("updatingMonitors"),this.environmentManager.destroy(),this._set("environmentManager",null),this.groundView.destroy(),this.groundView=null)},l.castEnvironment=function(e){return e?e instanceof te?e:e instanceof L?null!=this.environment?this.environment.cloneWithWebsceneEnvironment(e):te.fromWebsceneEnvironment(e):s.ensureType(te,e):new te},l.on=function(e,t,r,n){const a=this.viewEvents.on(e,t,r,n);return a||i.prototype.on.call(this,e,t)},l.hasEventListener=function(e){return i.prototype.hasEventListener.call(this,e)||this.viewEvents.hasHandler(e)},l.toMap=function(e,t){if(!this.ready)return Ge.error("#toMap()","Scene view cannot be used before it is ready"),null;const i=t?this.externalToInternalIntersectOptions(t):this._defaultToMapOptions,r=n.isSome(i.graphics)&&(n.isSome(i.graphics.include)||n.isSome(i.graphics.exclude)),a=Q.isSupportedScreenPointEvent(e)?Q.createScreenPointFromSupportedEvent(this,e):e,s=T.screenPointObjectToArray(a);i.enableDraped=i.include&&!i.include.has(ae.TERRAIN_ID)||i.exclude&&i.exclude.has(ae.TERRAIN_ID);const o=this.sceneIntersectionHelper,l=new se.Intersector(this.state.mode);if(l.options.selectionMode=!0,l.options.store=r?2:0,o.intersectIntersectorScreen(s,l,i),r){for(const e of l.results.all){const t=e.toGraphic(this);if(n.isNone(t))return this._intersectResultToMapPoint(e);if(this._testGraphicUidFilter(i.graphics,t))return this._intersectResultToMapPoint(e)}return null}return this._intersectResultToMapPoint(l.results.min)},l.toScreen=function(e){if(!this.ready)return Ge.error("#toScreen()","Scene view cannot be used before it is ready"),null;const t=n.unwrapOr(null==e.z&&j.getElevationAtPoint(this.elevationProvider,e),0);return G.projectPointToVector(e,De,this.renderSpatialReference,t),this.state.camera.projectToScreen(De,Fe),T.createScreenPoint(Fe[0],Fe[1])},l.pixelSizeAt=function(e){return this.ready?e?(G.projectPointToVector(e,De,this.renderSpatialReference),this.state.camera.computeScreenPixelSizeAt(De)):0:(Ge.error("#pixelSizeAt()","Scene view cannot be used before it is ready"),null)},l.overlayPixelSizeInMapUnits=function(e){const t=this.basemapTerrain.overlayManager;return t?t.overlayPixelSizeInMapUnits(e):1},l.hitTest=function(e,t){if(!this.ready)return Ge.error("#hitTest()","Scene view cannot be used before it is ready"),null;const i=Q.isSupportedScreenPointEvent(e)?Q.createScreenPointFromSupportedEvent(this,e):e,r=T.createScreenPointArray(i.x,i.y),a=t?this.externalToInternalIntersectOptions(t):this._defaultHitTestOptions;a.requiresGroundFeedback=!0,a.enableDraped=!0;const s=new se.Intersector(this.state.mode);s.options.selectionMode=!0,s.options.store=2,this.sceneIntersectionHelper.intersectIntersectorScreen(r,s,a);const o=this._intersectResultsToHits(s.results.all,a.graphics),l=s.results.ground,p=l.toOwner(this),c=n.isSome(p)&&"type"in p&&"integrated-mesh"===p.type?p:null,d={screenPoint:i,results:o,ground:{mapPoint:this._intersectResultToMapPoint(l),distance:l.hasIntersectionPoint?l.distanceInRenderSpace:0,layer:c}};return pe.SCENEVIEW_HITTEST_RETURN_INTERSECTOR&&(d.intersector=s),Promise.resolve(d)},l.popupHitTest=function(e){return Ie.hitTestSelectSameDistance(this,e).then((({results:t,ground:i})=>{let r=null;return!(0===t.length||Math.abs(t[0].distance-i.distance)<1e-5)||i.layer&&"integrated-mesh"===i.layer.type||(r=i.mapPoint),{results:t,screenPoint:e,mapPoint:r}}))},l.goTo=function(e,t){return this.updatingHandles.addPromise(this.stateManager.goTo(e,t))},l.whenLayerView=function(e){return i.prototype.whenLayerView.call(this,e)},l.getAnalysisView=function(e){return i.prototype.getAnalysisView.call(this,e)},l.whenAnalysisView=function(e){return i.prototype.whenAnalysisView.call(this,e)},l.takeScreenshot=function(e){return this.whenReady().then((()=>{const t=F.toRenderSettings(e,this);return t.pixelRatio/=this.pixelRatio,this._stage.renderView.takeScreenshot(F.screenshotSuperSampleSettings(t,this.supersampleScreenhotsEnabled,this.padding))}))},l.addUpdatingPromise=function(e){return this.updatingHandles.addPromise(e)},l.importLayerView=function(e){return Y.layerView3DImporter.importLayerView(e)},l.hasLayerViewModule=function(e){return Y.layerView3DImporter.hasLayerViewModule(e)},l.createAnalysisView=async function(e){return le.analysisViewFactory(this,e)},l.createAnalysisController=async function(e){return le.analysisControllerFactory(this,e)},l.forceDOMReadyCycle=function(){this.forceReadyCycle()},l.getDefaultSpatialReference=function(){return this.get("map.initialViewProperties.spatialReference")||this.get("defaultsFromMap.spatialReference")||this.get("defaultsFromMap.isSpatialReferenceDone")&&this._initialDefaultSpatialReference||null},l.validate=async function(){let e=J.check();if(r("safari")&&r("safari")<9&&(e=new d("sceneview:browser-not-supported","This browser is not supported by SceneView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:r("safari")})),n.isSome(e))throw Ge.warn("#validate()",e.message),e},l.isSpatialReferenceSupported=function(e,t,i){const r=e.isGeographic,n=e.isWebMercator,a=A.isSpatialReferenceSupported(e,"global"),s="local"===this.viewingMode,o=!(!this._isOverridden("viewingMode")&&!this.get("map.initialViewProperties.viewingMode"));if(o){if(s&&r)return i?i(`Layer ${t.id} is ignored because it is GCS and viewing mode is local`):Ge.warnOnce("Geographic coordinate systems are not supported in local viewing mode."),!1;if(!s&&!a)return i?i(`Layer ${t.id} is ignored because its spatial reference is not supported in global viewing mode`):Ge.warnOnce("Spatial reference defined on view not supported in global viewing mode."),!1}else if(r&&!a)return i?i(`Layer ${t.id} is ignored because its spatial reference is geographic but unsupported`):Ge.warnOnce("Spatial reference is geographic but not supported."),!1;if(t)if(z.isTiledLayer(t)){let r;if(o){r=null!=xe.getTiledLayerInfo(t,e,X.viewingModeFromString(this.viewingMode)).tileInfo}else{let i=xe.getTiledLayerInfo(t,e,1);null==i.tileInfo&&(i=xe.getTiledLayerInfo(t,e,2),null!=i.tileInfo&&n&&!this.ready&&(this.viewingMode="local")),r=null!=i.tileInfo}if(!r)return i&&i(`Layer ${t.id} is ignored because it is tiled but\n            its tiling scheme is not supported or compatible with the viewing mode`),!1}else if((e.isWGS84||n)&&!s)return null==this._initialDefaultSpatialReference&&(this._initialDefaultSpatialReference=e),o||this.ready||(this.viewingMode="global",i&&i(`Viewing mode locked to global due to reprojectable layer ${t.id}`)),i&&i(`Layer ${t.id} is ignored because it supports server-side reprojection`),!1;return!0},l.whenReady=function(){return new Promise((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))},l.computeMapPointFromVec3d=function(e,t){let i=this.spatialReference||_.WGS84;return G.projectVectorToVector(e,this.renderSpatialReference,e,i)||(i=_.WGS84,G.projectVectorToVector(e,this.renderSpatialReference,e,i)),t?(t.x=e[0],t.y=e[1],t.z=e[2],t.spatialReference=i):t=new v(e,i),t},l.trackGraphicState=function(e){if(!e.graphic)return Ge.error("trackGraphicState","GraphicState.graphic must not be null or undefined to start tracking"),null;const t=this.getViewForGraphic(e.graphic);let i=null,r=!1;const a=t=>{!r&&n.isSome(t)&&"graphics3d"in t&&t.graphics3d&&t.graphics3d.graphicsCore&&(i=t.graphics3d.graphicsCore.trackGraphicState(e))};return n.isSome(t)?a(t):this.whenViewForGraphic(e.graphic,{waitForLayer:!0}).then((e=>a(e)),(()=>{})).catch((()=>{})),{remove:()=>{r=!0,n.isSome(i)&&(i.remove(),i=null)}}},l.highlight=function(e){if(Array.isArray(e))return o.handlesGroup(e.map((e=>this.highlight(e))));if(R.isCollection(e))return o.handlesGroup(e.toArray().map((e=>this.highlight(e))));const t=this.getViewForGraphic(e);return t&&"highlight"in t?t.highlight(e):o.makeHandle()},l.maskOccludee=function(e){if(!e)return Ge.error("maskOccludee","GraphicState.graphic must not be null or undefined to mask an occludee"),null;const t=this.getViewForGraphic(e);let i=null,r=!1;const a=t=>{!r&&n.isSome(t)&&"graphics3d"in t&&W.occludeesSupported(t)&&(i=t.maskOccludee(e))};return n.isSome(t)?a(t):this.whenViewForGraphic(e,{waitForLayer:!0}).then((e=>a(e)),(()=>{})).catch((()=>{})),{remove:()=>{r=!0,n.isSome(i)&&(i.remove(),i=null)}}},l.getViewForGraphic=function(e){return e.layer===this.graphics?this.graphicsView:e.layer?this.allLayerViews.find((t=>t.layer===e.layer)):null},l.graphicChanged=function(e){n.isSome(this.graphicsView)&&this.graphicsView.graphicChanged(e)},l.whenViewForGraphic=async function(e,t){if(e.layer===this)return await P.whenOnce(this,"graphicsView"),this.graphicsView;if(!e.layer||!this.map)throw new d("no-view-for-graphic");return t&&t.waitForLayer&&!this.map.allLayers.includes(e.layer)?new Promise(((t,i)=>{const r=this.map.allLayers.on("change",(n=>{-1!==n.added.indexOf(e.layer)&&(r.remove(),this.whenLayerView(e.layer).then(t,i))}))})):this.whenLayerView(e.layer)},l.externalToInternalIntersectOptions=function(e){const t=this._externalToInternalRenderItems(e.include,0),i=this._externalToInternalRenderItems(e.exclude,1);return{include:t.layerUids,exclude:i.layerUids,graphics:{include:t.graphicUids,exclude:i.graphicUids}}},l._intersectResultToMapPoint=function(e,t){return e.getIntersectionPoint(De)?(t=this.computeMapPointFromVec3d(De,t),"TerrainRenderer"===e.intersector&&this.basemapTerrain&&(t.z=n.unwrapOr(j.getElevationAtPoint(this.basemapTerrain,t),0)),t):null},l._intersectResultsToHits=function(e,t){const i=new Array;let r=null;for(let a=0;a<e.length;a++){const s=e[a],o=s.toOwner(this);if(n.isSome(o)&&(o===this.map.ground||"type"in o&&"integrated-mesh"===o.type))break;const l=s.toGraphic(this);if(!n.isSome(l))continue;if(n.isNone(r)&&a!==e.length-1&&(r=new Set),n.isSome(r)){const e=this._getGraphicFilterUid(l);if(r.has(e))continue;r.add(e)}if(!this._testGraphicUidFilter(t,l))continue;const p=this._intersectResultToMapPoint(s),c=s.distanceInRenderSpace;i.push({graphic:l,mapPoint:p,distance:c})}return i},l._getGraphicFilterUid=function(e){if(e.layer&&"objectIdField"in e.layer){const t=e.attributes[e.layer.objectIdField];if(t)return`o-${e.layer.id}-${t}`}return`u-${e.uid}`},l._testGraphicUidFilter=function(e,t){const i=this._getGraphicFilterUid(t);return n.isNone(e)||(n.isNone(e.include)||e.include.has(i))&&(n.isNone(e.exclude)||!e.exclude.has(i))},l._externalToInternalRenderItems=function(e,t,i={layerUids:null,graphicUids:null}){return e?(e instanceof x?(Ue(i,this._getGraphicFilterUid(e)),0===t&&(n.isSome(this.graphicsView)&&e.layer===this?Le(i,this.graphicsView.graphics3d.layer.id):e.layer&&Le(i,e.layer.uid))):"forEach"in e?e.forEach((e=>{Array.isArray(e)?this._externalToInternalRenderItems(e,t,i):R.isCollection(e)?e===this.graphics&&n.isSome(this.graphicsView)?Le(i,this.graphicsView.graphics3d.layer.id):this._externalToInternalRenderItems(e,t,i):e instanceof C?e===this.map.ground&&Le(i,ae.TERRAIN_ID):this._externalToInternalRenderItems(e,t,i)})):Le(i,e.uid),i):i},l._viewingModeToManifold=function(e){switch(e){case 1:return"spherical";case 2:return"planar"}},l._initBasemapTerrain=function(e){this._set("basemapTerrain",new Ve({view:this,manifold:this._viewingModeToManifold(e)})),this._set("elevationProvider",new _e.CombinedElevationProvider({view:this})),this.elevationProvider.register("ground",this.basemapTerrain)},l._exitBasemapTerrain=function(){this.basemapTerrain&&(this.elevationProvider.unregister(this.basemapTerrain),this.elevationProvider.destroy(),this._set("elevationProvider",null),this.basemapTerrain.destroy(),this._set("basemapTerrain",null))},l._initGlobe=function(t){this._initCoordinateSystem(t),this.state.init(t,this.spatialReference),this._initBasemapTerrain(t),this._set("pointsOfInterest",new Ce.default({view:this})),this._set("featureTiles",new ue.default({renderCoordsHelper:this.renderCoordsHelper,cameraOnSurface:this.pointsOfInterest.contentCameraOnSurface,focus:this.pointsOfInterest.focus,tilingSchemeOwner:this.basemapTerrain,viewState:this.state,scheduler:this._resourceController.scheduler,terrain:this.basemapTerrain}));const i=()=>{const e=this.basemapTerrain&&this.basemapTerrain.extent;if(this.clippingArea||e)if(e&&this.basemapTerrain.spatialReference){const e=H.toExtent(this.basemapTerrain.extent,this.basemapTerrain.spatialReference);this.clippingArea?this.featureTiles.filterExtent=e.intersection(this.clippingArea):this.featureTiles.filterExtent=e}else this.featureTiles.filterExtent=this.clippingArea;else this.featureTiles.filterExtent=null};this.handles.add([this.updatingHandles.add(pe,"FEATURE_TILE_TREE_SHOW_TILES",(t=>{t&&this.featureTiles&&!this.featureTreeDebugger?this.updatingHandles.addPromise(new Promise((function(t,i){e(["./3d/layers/support/FeatureTileTree3DDebugger"],t,i)}))).then((({FeatureTileTree3DDebugger:e})=>{!this.featureTreeDebugger&&pe.FEATURE_TILE_TREE_SHOW_TILES&&(this.featureTreeDebugger=new e({view:this}))})):t||!this.featureTreeDebugger||pe.FEATURE_TILE_TREE_SHOW_TILES||(this.featureTreeDebugger.destroy(),this.featureTreeDebugger=null)}),3),this.updatingHandles.add(this,"clippingArea",i,3),this.updatingHandles.add(this,"basemapTerrain.extent",i,3)],"feature-tiles"),this.stateManager.init()},l._exitGlobe=function(){this.state&&(this.stateManager.deinit(),this.handles.remove("render-coords-helper"),this.handles.remove("feature-tiles"),this.featureTiles.destroy(),this._set("featureTiles",null),this.pointsOfInterest.destroy(),this._set("pointsOfInterest",null),this._exitBasemapTerrain(),this.state.exit(),this._exitCoordinateSystem())},l._initCoordinateSystem=function(e){if(this.spatialReference){const t=this.spatialReference;this.mapCoordsHelper&&this.mapCoordsHelper.spatialReference.equals(t)||this._set("mapCoordsHelper",new Se.MapCoordsHelper(this.map,t));const i=1===e,r=i?I.getSphericalPCPF(t):t;r!==this.renderSpatialReference&&(this._set("renderCoordsHelper",Re.RenderCoordsHelper.createMode(e,r)),i||this.handles.add(this.watch("basemapTerrain.extent",(e=>{0===e[0]&&0===e[1]&&0===e[2]&&0===e[3]||(this.renderCoordsHelper.extent=e)}),!0),"render-coords-helper"),this.sceneIntersectionHelper&&this.sceneIntersectionHelper.setTolerance(se.Intersector.DEFAULT_TOLERANCE/this.renderCoordsHelper.unitInMeters))}else this._set("mapCoordsHelper",null),this._set("renderCoordsHelper",null)},l._exitCoordinateSystem=function(){this.mapCoordsHelper&&(this.handles.remove("render-coords-helper"),this._set("renderCoordsHelper",null),this._set("mapCoordsHelper",null))},l.updatingChanged=function(){this.notifyChange("updating")},l._updateUpdatingMonitors=function(e=null){n.isSome(e)&&4===e.type||(this.handles.remove("updatingMonitors"),this.allLayerViews.forEach((e=>{e.destroyed||(this.handles.add([e.watch(["updating","updatingProgress"],(()=>this.updatingChanged()),!0)],"updatingMonitors"),e.when((()=>this.updatingChanged()),(()=>this.updatingChanged())))})),this.updatingChanged())},l._renderScreenshotOverlay=function(e,t){if(!this.overlay||!this.overlay.hasVisibleItems)return;const i=e.getContext("2d");i.putImageData(t,0,0),this.overlay.renderCanvas(e);const r=i.getImageData(0,0,t.width,t.height);for(let n=0;n<r.data.length;n++)t.data[n]=r.data[n]},l._initStage=function(e){const t={renderContext:this.renderContext,deactivatedWebGLExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions,viewingMode:e,alpha:this.alphaCompositingEnabled,canvas:this.renderCanvas,screenshot:{renderOverlay:(e,t)=>this._renderScreenshotOverlay(e,t)}},i=new me.SceneIntersectionHelper(e,{forEachLayer:e=>this._stage.layers.forAll(e)},this);this._set("sceneIntersectionHelper",i);const r=D.byId(this.surface);this._stage=new Pe.Stage({scheduler:this.resourceController.scheduler,viewingMode:e,container:r,options:t,sceneIntersectionHelper:i}),this._lostWebGLContextHandle=y.on(this._stage.renderView.canvas,"webglcontextlost",(()=>this.fatalError=new d("webgl-context-lost"))),this.handles.add([this.updatingHandles.add(this.qualitySettings,"antialiasingEnabled",(()=>{this._stage.renderView.setRenderParameters({antialiasingEnabled:this.qualitySettings.antialiasingEnabled})}),2),this.updatingHandles.add(this.qualitySettings,"highQualityTransparency",(()=>{this._stage.renderView.setRenderParameters({highQualityTransparency:this.qualitySettings.highQualityTransparency})}),2),P.init(this,"magnifier",(e=>this._stage.renderView.magnifier=e),!0)],"stage");const n=()=>{this._stage.renderView.setRenderParameters({defaultHighlightOptions:ve.toEngineOptions(this.highlightOptions)})};for(const a of["highlightOptions","highlightOptions.color","highlightOptions.haloColor","highlightOptions.haloOpacity","highlightOptions.fillOpacity","highlightOptions.shadowOpacity","highlightOptions.shadowColor","highlightOptions.shadowDifference"])this.handles.add(this.updatingHandles.add(this,a,n),"stage");n(),this.renderCoordsHelper&&this.sceneIntersectionHelper.setTolerance(se.Intersector.DEFAULT_TOLERANCE/this.renderCoordsHelper.unitInMeters),this._set("canvas",this._stage.renderView.canvas)},l._exitStage=function(){this._set("sceneIntersectionHelper",null),this._stage.destroy(),this._stage=null,this._lostWebGLContextHandle.remove(),this._lostWebGLContextHandle=null,this.handles.remove("stage"),this._set("canvas",null)},l._initSurface=function(e){this._exitSurface(),this._initStage(e),this._initGlobe(e),this.sharedSymbolResources=new Me.SharedSymbolResources({view:this,viewingMode:e,resourceController:this._resourceController,pointsOfInterest:this.pointsOfInterest,viewState:this.state,objectResourceCache:new he.ObjectResourceCache})},l._exitSurface=function(){this.sharedSymbolResources&&(this.sharedSymbolResources.objectResourceCache.destroy(),this.sharedSymbolResources.destroy(),this.sharedSymbolResources=null,this._exitGlobe(),this._exitStage())},l._createGraphicsViewIfNeeded=function(){if(this.graphicsView||this._createGraphicsViewController)return;if(0===this.graphics.length)return;this.handles.remove("graphics-view"),this._createGraphicsViewController=f.createAbortController();const e=()=>{this._createGraphicsViewController=null,this.updatingChanged()};this._createGraphicsViewAsync(this._createGraphicsViewController.signal).then(e,e),this.updatingChanged()},l._createGraphicsViewAsync=async function(t){const i=(await new Promise((function(t,i){e(["./3d/layers/GraphicsView3D"],(function(e){t(He(e))}),i)}))).default;f.throwIfAborted(t),await P.whenTrueOnce(this.basemapTerrain,"ready",t),this._set("graphicsView",new i({view:this}))},l._disposeGraphicsView=function(){this._createGraphicsViewController&&(this._createGraphicsViewController.abort(),this._createGraphicsViewController=null),this.handles.remove("graphics-view"),n.isSome(this.graphicsView)&&(this.handles.remove(this.graphicsView.graphics3d.layer.id),this.graphicsView.destroy(),this._set("graphicsView",null))},l._startup=function(){const e=X.viewingModeFromString(this.viewingMode);if(1===e&&(this._clippingArea=null),this._set("ready",!0),this._initSurface(e),this.handles.add(P.on(this,"graphics","after-changes",(()=>this._createGraphicsViewIfNeeded())),"graphics-view"),this._createGraphicsViewIfNeeded(),!this._externallySet.environment){const e=this.get("map.initialViewProperties.environment");e&&(this.environment=e)}this.labeler.setup(),this.environmentManager.connectView(this),this.inputManager.connect();const t=this._resolveWhenReady;this._resolveWhenReady=[],t.forEach((e=>e(this)))},l._teardown=function(){this._initialDefaultSpatialReference=null,this.inputManager.disconnect(),this.environmentManager.disconnectView(),this.labeler.dispose(),this._disposeGraphicsView(),this.handles.remove("graphics-view"),this._exitSurface(),this._set("ready",!1)},l._updateDefaultToMapOptions=function(){if(this._defaultToMapOptions.include.clear(),this.map){this.map.ground&&this._defaultToMapOptions.include.add(ae.TERRAIN_ID);for(const e of this.map.allLayers.items)"integrated-mesh"===e.type&&this._defaultToMapOptions.include.add(e.uid)}},l._updateDefaultHitTestOptions=function(){if(this._defaultHitTestOptions.exclude.clear(),this.map){this.map.ground&&this.map.ground.opacity<1&&this._defaultHitTestOptions.exclude.add(ae.TERRAIN_ID);for(const e of this.map.allLayers.items)"integrated-mesh"===e.type&&e.opacity<1&&this._defaultToMapOptions.exclude.add(e.uid)}},t._createClass(a,[{key:"renderSpatialReference",get:function(){return this.renderCoordsHelper&&this.renderCoordsHelper.spatialReference}},{key:"basemapSpatialReference",get:function(){return this.basemapTerrain&&this.basemapTerrain.spatialReference}},{key:"clippingArea",get:function(){if("global"===this.viewingMode)return null;let e=this._userClippingArea||this.get("map.clippingArea");if(!(!!this._userClippingArea||this.get("map.clippingEnabled"))||!e)return this._clippingArea=null,null;if(!(e instanceof S))return Ge.error("#clippingArea","only clippingArea geometries of type Extent are supported"),this._clippingArea;if(this.spatialReference){if(!w.canProject(e.spatialReference,this.spatialReference))return Ge.error("#clippingArea","setting clippingArea with incompatible SpatialReference"),this._clippingArea;e=w.project(e,this.spatialReference)}return this._clippingArea&&e&&this._clippingArea.equals(e)?this._clippingArea:(this._clippingArea=e,e)},set:function(e){this.ready&&"global"===this.viewingMode&&e?Ge.error("#clippingArea=","Clipping area is only supported in local viewingMode"):(this._userClippingArea=e,this.notifyChange("clippingArea"))}},{key:"dataExtent",get:function(){const e=this.spatialReference||_.WGS84;let t,i=this.clippingArea;i&&(i=w.project(i,e));const r=r=>{let a=w.project(r,e);a&&(i&&(a=a.intersection(i),!a)||(n.isSome(t)?t.union(a):t=a))},a=this.basemapTerrain;if(a&&a.spatialReference&&r(new S({xmin:a.extent[0],ymin:a.extent[1],zmin:0,xmax:a.extent[2],ymax:a.extent[3],zmax:0,spatialReference:a.spatialReference})),this.map){const e=e=>{!e.fullExtent||"graphics"===e.type&&e.internal||r(e.fullExtent)};this.map.allLayers.forEach((t=>e(t)))}return n.isNone(t)?new S({xmin:0,ymin:0,zmin:0,xmax:0,ymax:0,zmax:0,spatialReference:e}):(t.hasZ?(t.zmin=Math.min(0,t.zmin),t.zmax=Math.max(0,t.zmax)):(t.zmin=0,t.zmax=0),t)}},{key:"environment",set:function(e){e!==this._defaults.environment&&(this._externallySet.environment=!0),this._set("environment",e)}},{key:"pixelRatio",get:function(){return Math.min(this.windowDevicePixelRatio,this.maximumPixelRatio)},set:function(e){n.isSome(e)?this._override("pixelRatio",e):this._clearOverride("pixelRatio")}},{key:"maximumPixelRatio",get:function(){let e=1/0;const{maximumPixelRatio:t,maximumRenderResolution:i}=this.qualitySettings;if(null!=t&&(e=Math.min(e,t)),null!=i){const t=i/Math.max(this.width,this.height);e=Math.min(e,t)}return e},set:function(e){n.isSome(e)?this._override("maximumPixelRatio",e):this._clearOverride("maximumPixelRatio")}},{key:"groundExtent",get:function(){const e=this._get("basemapTerrain");if(e&&e.spatialReference){const t=e.extent;return new S({xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3],spatialReference:e.spatialReference})}const t=this.spatialReference||_.WGS84;return new S({spatialReference:t})}},{key:"initialExtentRequired",get:function(){return this.stateManager&&!this.stateManager.hasInitialView}},{key:"interacting",get:function(){return this.navigating||n.isSome(this.activeTool)}},{key:"stationary",get:function(){return!this.animation&&!this.resizing&&(n.isNone(this.state)||this.state.stationary)}},{key:"qualityProfile",get:function(){return this._get("qualityProfile")||we.getDefaultProfile()},set:function(e){we.isValidProfile(e)&&(we.apply(e,this.qualitySettings),this._set("qualityProfile",e))}},{key:"slicePlane",set:function(e){if(this._stage.renderView.setRenderParameters({slicePlane:e}),n.isNone(e))return void this._set("slicePlane",null);const t=this.propertiesPool.get("slicePlane");re.boundedPlane.copy(e,t),this._set("slicePlane",t)}},{key:"resolution",get:function(){return null!=this.spatialReference?k.getResolutionForScale(this.scale,this.spatialReference):0}},{key:"heightModelInfo",get:function(){const e=this.getDefaultHeightModelInfo();return null!=e?E.deriveUnitFromSR(e,this.spatialReference):null}},{key:"updating",get:function(){var e,t,i;let r=0,a=0,s=!1;this.allLayerViews.forEach((e=>{if(e.isFulfilled()){if(e.updating){if(s=!0,e.suspended)return;++a,r+="updatingProgress"in e?e.updatingProgress:.5}}else++a}));for(const o of[this.graphicsView,this.basemapView,this.basemapTerrain,this.layerViewManager,this._resourceController,this._stage,this.featureTiles,this.pointsOfInterest,this.environmentManager,this.overlay,this.updatingHandles,this.featureTreeDebugger])if(n.isSome(o)&&o.updating){const e=.1;a+=e,r+=.5*e}for(const o of[this.deconflictor,this.labeler])n.isSome(o)&&o.updating&&(++a,r+=o.updatingProgress);if(s=!!(s||a>0||!this.ready||!this.stationary||this._createGraphicsViewController||null!=(e=this.inputManager)&&e.hasPendingInputs||null!=(t=this.map)&&null!=(i=t.allLayers)&&i.some((e=>!e.isFulfilled()))),s?(this._numUpdating=Math.max(a,this._numUpdating),r+=this._numUpdating-a):this._numUpdating=0,this._numUpdating>0?r/=this._numUpdating:r=s?.5:1,this._get("updatingProgress")!==r){const e=this._resourceController.scheduler.now;if(r<1){const t=Math.min((e-this._lastUpdateTime)/2e3,1);r=this.updatingProgress*(1-t)+r*t}this._set("updatingProgress",r),this._lastUpdateTime=s&&r<1?e:0}return s}},{key:"viewingMode",get:function(){const e=this.get("map.initialViewProperties.viewingMode");if(e)return e;const t=this.spatialReference;return!t||A.isSpatialReferenceSupported(t,"global")?"global":"local"},set:function(e){if(this.ready)Ge.error("#viewingMode","viewingMode cannot be set once view is ready");else{["local","global"].indexOf(e)>=0?this._override("viewingMode",e):void 0===e&&this._clearOverride("viewingMode")}}},{key:"resourceController",get:function(){return this._resourceController}},{key:"performanceInfo",get:function(){return new Oe(this)}}]),a}(N.BreakpointsOwner(q.DOMContainer($.PopupView(K))));function Le(e,t){e.layerUids||(e.layerUids=new Set),e.layerUids.add(t)}function Ue(e,t){e.graphicUids||(e.graphicUids=new Set),e.graphicUids.add(t)}i.__decorate([l.property()],Ae.prototype,"_resourceController",void 0),i.__decorate([l.property()],Ae.prototype,"_stage",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"deconflictor",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"labeler",void 0),i.__decorate([l.property({type:Z,readOnly:!0,aliasOf:"state.animation"})],Ae.prototype,"animation",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"basemapTerrain",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"elevationProvider",void 0),i.__decorate([l.property({type:M,aliasOf:"stateManager.camera"})],Ae.prototype,"camera",void 0),i.__decorate([l.property({type:M,aliasOf:"stateManager.contentCamera"})],Ae.prototype,"contentCamera",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"canvas",void 0),i.__decorate([l.property({type:v,aliasOf:"stateManager.center"})],Ae.prototype,"center",void 0),i.__decorate([l.property({type:S,dependsOn:["map.clippingArea?","map.clippingEnabled?","viewingMode"]})],Ae.prototype,"clippingArea",null),i.__decorate([l.property({type:ee.default})],Ae.prototype,"constraints",void 0),i.__decorate([l.property({type:S,dependsOn:["basemapTerrain.extent","clippingArea","map"],readOnly:!0})],Ae.prototype,"dataExtent",null),i.__decorate([l.property({value:null,type:te})],Ae.prototype,"environment",null),i.__decorate([p.cast("environment")],Ae.prototype,"castEnvironment",null),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"environmentManager",void 0),i.__decorate([l.property({type:S,aliasOf:"stateManager.extent"})],Ae.prototype,"extent",void 0),i.__decorate([l.property()],Ae.prototype,"floors",void 0),i.__decorate([l.property({readOnly:!0,aliasOf:"stateManager.screenCenter"})],Ae.prototype,"screenCenter",void 0),i.__decorate([l.property({type:Number})],Ae.prototype,"pixelRatio",null),i.__decorate([l.property({type:Number,dependsOn:["qualitySettings.maximumPixelRatio","qualitySettings.maximumRenderResolution","size"]})],Ae.prototype,"maximumPixelRatio",null),i.__decorate([l.property({aliasOf:"stateManager.frustum"})],Ae.prototype,"frustum",void 0),i.__decorate([l.property({type:Number,readOnly:!0})],Ae.prototype,"fullOpacity",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"graphicsView",void 0),i.__decorate([l.property({type:S,dependsOn:["basemapTerrain.extent"],readOnly:!0})],Ae.prototype,"groundExtent",null),i.__decorate([l.property()],Ae.prototype,"groundView",void 0),i.__decorate([l.property({type:Boolean})],Ae.prototype,"initialExtentRequired",null),i.__decorate([l.property({type:Boolean,readOnly:!0})],Ae.prototype,"interacting",null),i.__decorate([l.property()],Ae.prototype,"stationary",null),i.__decorate([l.property({aliasOf:"state.navigating"})],Ae.prototype,"navigating",void 0),i.__decorate([l.property()],Ae.prototype,"map",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"mapCoordsHelper",void 0),i.__decorate([l.property({aliasOf:"stateManager.padding"})],Ae.prototype,"padding",void 0),i.__decorate([l.property({type:Ce.default,readOnly:!0})],Ae.prototype,"pointsOfInterest",void 0),i.__decorate([l.property({type:ue.default,readOnly:!0})],Ae.prototype,"featureTiles",void 0),i.__decorate([l.property()],Ae.prototype,"featureTreeDebugger",void 0),i.__decorate([l.property({type:Boolean})],Ae.prototype,"screenSizePerspectiveEnabled",void 0),i.__decorate([l.property({constructOnly:!0})],Ae.prototype,"deactivatedWebGLExtensions",void 0),i.__decorate([l.property({constructOnly:!0})],Ae.prototype,"debugWebGLExtensions",void 0),i.__decorate([l.property({constructOnly:!0})],Ae.prototype,"renderCanvas",void 0),i.__decorate([l.property({constructOnly:!0})],Ae.prototype,"state",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"inputManager",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"stateManager",void 0),i.__decorate([l.property({type:["low","medium","high"]})],Ae.prototype,"qualityProfile",null),i.__decorate([l.property({type:be,get(){let e=this._get("qualitySettings");return e||(e=new be,we.apply(this.qualityProfile,e)),e}})],Ae.prototype,"qualitySettings",void 0),i.__decorate([l.property()],Ae.prototype,"slicePlane",null),i.__decorate([l.property({dependsOn:["viewingMode"]})],Ae.prototype,"preconditionsReady",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"renderCoordsHelper",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"sceneIntersectionHelper",void 0),i.__decorate([l.property({type:Number,dependsOn:["scale","spatialReference"],readOnly:!0})],Ae.prototype,"resolution",null),i.__decorate([l.property({type:Number,aliasOf:"stateManager.scale"})],Ae.prototype,"scale",void 0),i.__decorate([l.property({dependsOn:[]})],Ae.prototype,"heightModelInfo",null),i.__decorate([l.property({dependsOn:["map.initialViewProperties?.spatialReference","defaultsFromMap.isSpatialReferenceDone"]})],Ae.prototype,"spatialReference",void 0),i.__decorate([l.property({type:Boolean,constructOnly:!0})],Ae.prototype,"alphaCompositingEnabled",void 0),i.__decorate([l.property({type:Boolean})],Ae.prototype,"supersampleScreenhotsEnabled",void 0),i.__decorate([l.property({readOnly:!0})],Ae.prototype,"type",void 0),i.__decorate([l.property({type:Ee})],Ae.prototype,"ui",void 0),i.__decorate([l.property({type:Boolean,readOnly:!0,dependsOn:["graphicsView.updating","basemapView.updating","basemapTerrain.updating","layerViewManager.updating","_resourceController.updating","_stage.updating","featureTiles.updating","pointsOfInterest.updating","environmentManager.updating","overlay.updating","updatingHandles.updating","featureTreeDebugger.updating","labeler.updating","deconflictor.updating","ready","stationary","inputManager.hasPendingInputs"]})],Ae.prototype,"updating",null),i.__decorate([l.property({type:Number,readOnly:!0,dependsOn:["updating"]})],Ae.prototype,"updatingProgress",void 0),i.__decorate([l.property({type:["global","local"],dependsOn:["map.initialViewProperties?.viewingMode","spatialReference"]})],Ae.prototype,"viewingMode",null),i.__decorate([l.property({type:V,aliasOf:"stateManager.viewpoint"})],Ae.prototype,"viewpoint",void 0),i.__decorate([l.property({type:Number,aliasOf:"stateManager.zoom"})],Ae.prototype,"zoom",void 0),i.__decorate([l.property({type:ve})],Ae.prototype,"highlightOptions",void 0),Ae=i.__decorate([c.subclass("esri.views.SceneView")],Ae);const De=O.create(),Fe=T.createScreenPointArray();return Ae}));
