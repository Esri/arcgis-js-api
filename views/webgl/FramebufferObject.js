/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../core/Logger","../../core/maybe","./checkWebGLError","./enums","./Renderbuffer","./Texture","./Util"],(function(t,e,i,n,r,s,h,c){"use strict";const o=e.getLogger("esri.views.webgl.FrameBufferObject");let a=function(){function e(t,e,n=null,c=null){if(this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc={...e},t.instanceCounter.increment(r.ResourceType.Framebuffer,this),i.isSome(n)){Array.isArray(n)||(n=[n]);for(let e=0;e<n.length;++e){var o,a;const i=n[e];let r;l(i)?(r=i.descriptor,this._colorAttachments.set(36064+e,i)):(r=i,this._colorAttachments.set(36064+e,new h(t,i))),0!==(null==(o=this._desc)?void 0:o.colorTarget)&&2!==(null==(a=this._desc)?void 0:a.colorTarget)&&console.error("Framebuffer is initialized with a texture however the descriptor indicates using a renderbuffer color attachment!"),this._validateColorAttachmentPoint(36064+e),this._validateTextureDimensions(r,this._desc)}}if(c instanceof s){var u;const t=null!=(u=this._desc.depthStencilTarget)?u:3;2===t?this._stencilAttachment=c:1===t||3===t?this._depthAttachment=c:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),d(c.descriptor,this._desc)}else if(i.isSome(c)){let t;this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!"),l(c)?(this._depthStencilTexture=c,t=c.descriptor):this._depthStencilTexture=new h(this._context,c),this._validateTextureDimensions(t,this._desc)}}var a=e.prototype;return a.dispose=function(){if(!this._desc)return;const t=this._context.getBoundFramebufferObject();if(this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName){this._context.gl.deleteFramebuffer(this._glName),this._glName=null}this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(r.ResourceType.Framebuffer,this),this._desc=null},a.getColorTexture=function(t){const e=this._colorAttachments.get(t);return e&&l(e)?e:null},a.framebufferTexture2D=function(t,e,i=36064,n=3553,r=0){e.framebufferTexture2D(e.FRAMEBUFFER,i,n,t,r)},a.attachColorTexture=function(t,e=36064){if(!t)return;this._validateColorAttachmentPoint(e);const i=t.descriptor;this._validateTextureDimensions(i,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(t.glName,this._context.gl,e)),this._colorAttachments.set(e,t)},a.detachColorTexture=function(t=36064){const e=this._colorAttachments.get(t);if(l(e)){const i=e;return this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,this._context.gl,t)),this._colorAttachments.delete(t),i}},a.attachDepthStencilTexture=function(t){if(i.isNone(t))return;const e=t.descriptor;34041!==e.pixelFormat&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),34042!==e.dataType&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDimensions(e,this._desc),this._desc.depthStencilTarget&&4!==this._desc.depthStencilTarget&&(this._desc.depthStencilTarget=4),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(t.glName,this._context.gl,r.DepthStencilAttachment)),this._depthStencilTexture=t},a.detachDepthStencilTexture=function(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,this._context.gl,r.DepthStencilAttachment)),this._depthStencilTexture=null,t},a.attachDepthStencilBuffer=function(t){if(i.isNone(t))return;const e=t.descriptor;if(34041!==e.internalFormat&&33189!==e.internalFormat&&console.error("Depth/Stencil buffer must have correct internalFormat"),d(e,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=34041===e.internalFormat?3:1,this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=1===this._desc.depthStencilTarget?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(e.FRAMEBUFFER,i,e.RENDERBUFFER,t.glName)}this._depthAttachment=t},a.detachDepthStencilBuffer=function(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=1===this._desc.depthStencilTarget?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(t.FRAMEBUFFER,e,t.RENDERBUFFER,null)}return this._depthAttachment=null,e},a.detachAll=function(){this.detachColorTexture(),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()},a.copyToTexture=function(t,e,i,n,r,s,c){(t<0||e<0||r<0||s<0)&&console.error("Offsets cannot be negative!"),(i<=0||n<=0)&&console.error("Copy width and height must be greater than zero!");const o=this._desc,a=c.descriptor;3553!==c.descriptor.target&&console.error("Texture target must be TEXTURE_2D!"),(t+i>o.width||e+n>o.height||r+i>a.width||s+n>a.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const l=this._context,u=l.bindTexture(c,h.TEXTURE_UNIT_FOR_UPDATES);l.bindFramebuffer(this),l.gl.copyTexSubImage2D(3553,0,r,s,t,e,i,n),l.bindTexture(u,h.TEXTURE_UNIT_FOR_UPDATES)},a.readPixels=function(t,e,i,n,r,s,h){(i<=0||n<=0)&&console.error("Copy width and height must be greater than zero!"),h||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this);this._context.gl.readPixels(t,e,i,n,r,s,h)},a.resize=function(t,e){const i=this._desc;if(i.width!==t||i.height!==e){if(!this._initialized)return i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}},a.initializeAndBind=function(t=3553){var e,i,r,c;const o=this._context.gl;if(this._initialized)return void o.bindFramebuffer(o.FRAMEBUFFER,this.glName);this._glName&&o.deleteFramebuffer(this._glName);const a=this._context,d=o.createFramebuffer(),f=this._desc,_=null!=(e=f.colorTarget)?e:1,m=null!=(i=f.width)?i:1,T=null!=(r=f.height)?r:1;if(o.bindFramebuffer(o.FRAMEBUFFER,d),0===this._colorAttachments.size)if(0===_)this._colorAttachments.set(36064,u(a,f,2===this.descriptor.colorTarget?34067:3553));else{const t=new s(a,{internalFormat:32854,width:m,height:T});this._colorAttachments.set(36064,t)}this._colorAttachments.forEach(((e,i)=>{e&&(l(e)?this.framebufferTexture2D(e.glName,o,i,t):o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.RENDERBUFFER,e.glName))}));const p=null!=(c=f.depthStencilTarget)?c:0;switch(p){case 1:case 3:{this._depthAttachment||(this._depthAttachment=new s(a,{internalFormat:1===f.depthStencilTarget?33189:34041,width:m,height:T}));const t=1===p?o.DEPTH_ATTACHMENT:o.DEPTH_STENCIL_ATTACHMENT;o.framebufferRenderbuffer(o.FRAMEBUFFER,t,o.RENDERBUFFER,this._depthAttachment.glName);break}case 2:this._stencilAttachment||(this._stencilAttachment=new s(a,{internalFormat:36168,width:m,height:T})),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.STENCIL_ATTACHMENT,o.RENDERBUFFER,this._stencilAttachment.glName);break;case 4:if(!this._depthStencilTexture){a.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const t={target:3553,pixelFormat:34041,dataType:34042,samplingMode:9728,wrapMode:33071,width:m,height:T};this._depthStencilTexture=new h(a,t)}this.framebufferTexture2D(this._depthStencilTexture.glName,o,o.DEPTH_STENCIL_ATTACHMENT,t)}if(n.webglValidateShadersEnabled()){o.checkFramebufferStatus(o.FRAMEBUFFER)!==o.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!")}this._glName=d,this._initialized=!0},a._disposeColorAttachments=function(){this._colorAttachments.forEach(((t,e)=>{if(l(t))this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,this._context.gl,e)),t.dispose();else if(t instanceof WebGLRenderbuffer){const i=this._context.gl;this._initialized&&(this._context.bindFramebuffer(this),i.framebufferRenderbuffer(i.FRAMEBUFFER,e,i.RENDERBUFFER,null)),this._context.gl.deleteRenderbuffer(t)}})),this._colorAttachments.clear()},a._disposeDepthStencilAttachments=function(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=1===this._desc.depthStencilTarget?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(t.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,t,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)},a._validateTextureDimensions=function(t,e){3553!==t.target&&34067!==t.target&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Color attachment texture must match the framebuffer's!"):(e.width=t.width,e.height=t.height)},a._validateColorAttachmentPoint=function(t){if(-1===e._MAX_COLOR_ATTACHMENTS){const t=this._context.capabilities.drawBuffers;if(t){const i=this._context.gl;e._MAX_COLOR_ATTACHMENTS=i.getParameter(t.MAX_COLOR_ATTACHMENTS)}else e._MAX_COLOR_ATTACHMENTS=1}const i=t-36064;i+1>e._MAX_COLOR_ATTACHMENTS&&o.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${i+1}. Implementation supports up to ${e._MAX_COLOR_ATTACHMENTS} color attachments`)},t._createClass(e,[{key:"glName",get:function(){return this._glName}},{key:"descriptor",get:function(){return this._desc}},{key:"colorTexture",get:function(){const t=this._colorAttachments.get(36064);return t&&l(t)?t:null}},{key:"colorAttachment",get:function(){return this._colorAttachments.get(36064)}},{key:"depthStencilAttachment",get:function(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}},{key:"width",get:function(){return this._desc.width}},{key:"height",get:function(){return this._desc.height}},{key:"gpuMemoryUsage",get:function(){return c.getGpuMemoryUsage(this.colorAttachment)+c.getGpuMemoryUsage(this.depthStencilAttachment)}}]),e}();function l(t){return"type"in t&&"texture"===t.type}function u(t,e,i){return new h(t,{target:i,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,width:e.width,height:e.height})}function d(t,e){void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}return a._MAX_COLOR_ATTACHMENTS=-1,a}));
