/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../core/has","../../core/Logger","./Texture","./Renderbuffer"],(function(t,e,i,n,s){"use strict";const r=i.getLogger("esri.views.webgl.FrameBufferObject");let h=function(){function e(t,i,r,h){if(this._context=null,this._glName=null,this.id=o++,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,t.instanceCounter.increment(4,this),this._context=t,this._desc={...i},r){let e;var c;if(Array.isArray(r))for(const i of r){const{attachmentPoint:s,texture:r}=i,h=r instanceof n?r:new n(t,r);e=h.descriptor,this._colorAttachments.set(s,h),this._validateColorAttachmentPoint(s),this._validateTextureDimensions(e,this._desc)}else r instanceof n?(e=r.descriptor,this._colorAttachments.set(36064,r)):(e=r,this._colorAttachments.set(36064,new n(t,r))),0!==(null==(c=this._desc)?void 0:c.colorTarget)&&console.error("Framebuffer is initialized with a texture however the descriptor indicates using a renderbuffer color attachment!"),this._validateTextureDimensions(e,this._desc)}if(h instanceof s){var a;const t=null!=(a=this._desc.depthStencilTarget)?a:3;2===t?this._stencilAttachment=h:1===t||3===t?this._depthAttachment=h:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),e._validateBufferDimensions(h.descriptor,this._desc)}else if(h){let t;this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!"),h instanceof n?(this._depthStencilTexture=h,t=this._depthStencilTexture.descriptor):(t=h,this._depthStencilTexture=new n(this._context,t)),this._validateTextureDimensions(t,this._desc)}}var i=e.prototype;return i.dispose=function(){if(!this._context)return;const t=this._context,e=t.getBoundFramebufferObject();if(this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName){t.gl.deleteFramebuffer(this._glName),this._glName=null}t.bindFramebuffer(e),t.instanceCounter.decrement(4,this),this._context=null},i.getColorTexture=function(t){const e=this._colorAttachments.get(t);return e&&e instanceof n?e:null},i.attachColorTexture=function(t,e=36064){if(!t)return;this._validateColorAttachmentPoint(e);const i=t.descriptor;if(this._validateTextureDimensions(i,this._desc),this._disposeColorAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl;i.framebufferTexture2D(i.FRAMEBUFFER,e,i.TEXTURE_2D,t.glName,0)}this._colorAttachments.set(e,t)},i.detachColorTexture=function(t=36064){const e=this._colorAttachments.get(t);if(e instanceof n){const i=e;if(this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl;e.framebufferTexture2D(e.FRAMEBUFFER,t,e.TEXTURE_2D,null,0)}return this._colorAttachments.delete(t),i}},i.attachDepthStencilTexture=function(t){if(!t)return;const e=t.descriptor;if(34041!==e.pixelFormat&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),34042!==e.dataType&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8_WEBGL!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDimensions(e,this._desc),this._desc.depthStencilTarget&&4!==this._desc.depthStencilTarget&&(this._desc.depthStencilTarget=4),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl;e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,t.glName,0)}this._depthStencilTexture=t},i.detachDepthStencilTexture=function(){const t=this._depthStencilTexture;if(t&&this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl;this._context.gl.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,null,0)}return this._depthStencilTexture=null,t},i.attachDepthStencilBuffer=function(t){if(!t)return;const i=t.descriptor;if(34041!==i.internalFormat&&33189!==i.internalFormat&&console.error("Depth/Stencil buffer must have correct internalFormat"),e._validateBufferDimensions(i,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=34041===i.internalFormat?3:1,this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=1===this._desc.depthStencilTarget?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(e.FRAMEBUFFER,i,e.RENDERBUFFER,t.glName)}this._depthAttachment=t},i.detachDepthStencilBuffer=function(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=1===this._desc.depthStencilTarget?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(t.FRAMEBUFFER,e,t.RENDERBUFFER,null)}return this._depthAttachment=null,e},i.copyToTexture=function(t,e,i,n,s,r,h){(t<0||e<0||s<0||r<0)&&console.error("Offsets cannot be negative!"),(i<=0||n<=0)&&console.error("Copy width and height must be greater than zero!");const o=this._desc,c=h.descriptor;3553!==h.descriptor.target&&console.error("Texture target must be TEXTURE_2D!"),(t+i>o.width||e+n>o.height||s+i>c.width||r+n>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const a=this._context;a.bindTexture(h,0),a.bindFramebuffer(this),a.gl.copyTexSubImage2D(3553,0,s,r,t,e,i,n)},i.readPixels=function(t,e,i,n,s,r,h){(i<=0||n<=0)&&console.error("Copy width and height must be greater than zero!"),h||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this);this._context.gl.readPixels(t,e,i,n,s,r,h)},i.resize=function(t,e){const i=this._desc;if(i.width!==t||i.height!==e){if(!this._initialized)return i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}},i.initialize=function(){var t,e,i,r;if(this._initialized)return!1;const h=this._context,o=h.gl;this._glName&&o.deleteFramebuffer(this._glName);const a=o.createFramebuffer(),l=this._desc,_=null!=(t=l.colorTarget)?t:1,d=null!=(e=l.width)?e:1,f=null!=(i=l.height)?i:1;if(o.bindFramebuffer(o.FRAMEBUFFER,a),0===this._colorAttachments.size)if(0===_)this._colorAttachments.set(36064,c(h,l));else{const t=new s(h,{internalFormat:32854,width:d,height:f});this._colorAttachments.set(36064,t)}this._colorAttachments.forEach(((t,e)=>{t&&(t instanceof n?o.framebufferTexture2D(o.FRAMEBUFFER,e,o.TEXTURE_2D,t.glName,0):o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.RENDERBUFFER,t.glName))}));const u=null!=(r=l.depthStencilTarget)?r:0;switch(u){case 1:case 3:{this._depthAttachment||(this._depthAttachment=new s(h,{internalFormat:1===l.depthStencilTarget?33189:34041,width:d,height:f}));const t=1===u?o.DEPTH_ATTACHMENT:o.DEPTH_STENCIL_ATTACHMENT;o.framebufferRenderbuffer(o.FRAMEBUFFER,t,o.RENDERBUFFER,this._depthAttachment.glName);break}case 2:this._stencilAttachment||(this._stencilAttachment=new s(h,{internalFormat:36168,width:d,height:f})),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.STENCIL_ATTACHMENT,o.RENDERBUFFER,this._stencilAttachment.glName);break;case 4:if(!this._depthStencilTexture){h.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const t={target:3553,pixelFormat:34041,dataType:34042,samplingMode:9728,wrapMode:33071,width:d,height:f};this._depthStencilTexture=new n(h,t)}o.framebufferTexture2D(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.TEXTURE_2D,this._depthStencilTexture.glName,0)}return this._glName=a,this._initialized=!0,!0},i._disposeColorAttachments=function(){this._colorAttachments.forEach(((t,e)=>{if(t instanceof n){if(this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl;t.framebufferTexture2D(t.FRAMEBUFFER,e,t.TEXTURE_2D,null,0)}t.dispose()}else if(t instanceof WebGLRenderbuffer){const i=this._context.gl;this._initialized&&(this._context.bindFramebuffer(this),i.framebufferRenderbuffer(i.FRAMEBUFFER,e,i.RENDERBUFFER,null)),this._context.gl.deleteRenderbuffer(t)}})),this._colorAttachments.clear()},i._disposeDepthStencilAttachments=function(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=1===this._desc.depthStencilTarget?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(t.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,null,0)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)},e._validateBufferDimensions=function(t,e){console.assert(t.width>=0&&t.height>=0),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(e.width=t.width,e.height=t.height)},i._validateTextureDimensions=function(t,e){console.assert(t.width>=0&&t.height>=0),3553!==t.target&&console.error("Texture type must be TEXTURE_2D!"),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Color attachment texture must match the framebuffer's!"):(e.width=t.width,e.height=t.height)},i._validateColorAttachmentPoint=function(t){if(-1===e._MAX_COLOR_ATTACHMENTS){const t=this._context.capabilities.drawBuffers;if(t){const i=this._context.gl;e._MAX_COLOR_ATTACHMENTS=i.getParameter(t.MAX_COLOR_ATTACHMENTS)}else e._MAX_COLOR_ATTACHMENTS=1}const i=t-36064;i+1>e._MAX_COLOR_ATTACHMENTS&&r.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${i+1}. Implementation supports up to ${e._MAX_COLOR_ATTACHMENTS} color attachments`)},t._createClass(e,[{key:"glName",get:function(){return this._glName}},{key:"descriptor",get:function(){return this._desc}},{key:"colorTexture",get:function(){const t=this._colorAttachments.get(36064);return t&&t instanceof n?t:null}},{key:"colorAttachment",get:function(){return this._colorAttachments.get(36064)}},{key:"depthStencilAttachment",get:function(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}},{key:"width",get:function(){return this._desc.width}},{key:"height",get:function(){return this._desc.height}}]),e}();h._MAX_COLOR_ATTACHMENTS=-1;let o=0;const c=(t,e)=>new n(t,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,width:e.width,height:e.height});return h}));
