/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../core/Logger","../../core/maybe","./BufferObject","./checkWebGLError","./context-util","./enums","./Renderbuffer","./Texture","./Util"],(function(t,e,i,r,n,h,s,c,o,a,T){"use strict";const l=i.getLogger("esri.views.webgl.FrameBufferObject");let _=function(){function t(t,e,i=null,n=null){if(this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc={...e},t.instanceCounter.increment(c.ResourceType.Framebuffer,this),r.isSome(i)){Array.isArray(i)||(i=[i]);for(let t=0;t<i.length;++t){const e=i[t],r=c.ColorAttachment.COLOR_ATTACHMENT0+t;let n;E(e)?(u(e)?(n=e.descriptor,this._colorAttachments.set(r,e)):(n=e,this._colorAttachments.set(r,new a.Texture(this._context,n))),m(n,this._desc)):(f(e)?(n=e.descriptor,this._colorAttachments.set(r,e)):(n=e,this._colorAttachments.set(r,new o.Renderbuffer(this._context,n))),p(n,this._desc)),this._validateColorAttachmentPoint(r)}}if(r.isSome(n)){let t,e;if(E(n))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),u(n)?(e=n.descriptor,this._depthStencilTexture=n):(e=n,this._depthStencilTexture=new a.Texture(this._context,e)),m(e,this._desc);else{var h;f(n)?(e=n.descriptor,t=n):(e=n,t=new o.Renderbuffer(this._context,e));const i=null!=(h=this._desc.depthStencilTarget)?h:c.DepthStencilTargetType.DEPTH_STENCIL_RENDER_BUFFER;i===c.DepthStencilTargetType.STENCIL_RENDER_BUFFER?this._stencilAttachment=t:i===c.DepthStencilTargetType.DEPTH_RENDER_BUFFER||i===c.DepthStencilTargetType.DEPTH_STENCIL_RENDER_BUFFER?this._depthAttachment=t:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),p(e,this._desc)}}}var i=t.prototype;return i.dispose=function(){if(!this._desc)return;const t=this._context.getBoundFramebufferObject();if(this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName){this._context.gl.deleteFramebuffer(this._glName),this._glName=null}this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(c.ResourceType.Framebuffer,this),this._desc=null},i.getColorTexture=function(t){const e=this._colorAttachments.get(t);return e&&u(e)?e:null},i.attachColorTexture=function(t,e=c.ColorAttachment.COLOR_ATTACHMENT0){if(!t)return;this._validateColorAttachmentPoint(e);m(t.descriptor,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t)},i.detachColorTexture=function(t=c.ColorAttachment.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(u(e)){const i=e;return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)),this._colorAttachments.delete(t),i}},i.setColorTextureTarget=function(t,e=c.ColorAttachment.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(e);u(i)&&this._framebufferTexture2D(i.glName,e,t)},i.attachDepthStencilTexture=function(t){if(r.isNone(t))return;const e=t.descriptor;e.pixelFormat!==c.PixelFormat.DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==c.PixelType.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),m(e,this._desc),this._desc.depthStencilTarget&&this._desc.depthStencilTarget!==c.DepthStencilTargetType.DEPTH_STENCIL_TEXTURE&&(this._desc.depthStencilTarget=c.DepthStencilTargetType.DEPTH_STENCIL_TEXTURE),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,c.DepthStencilAttachment)),this._depthStencilTexture=t},i.detachDepthStencilTexture=function(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,c.DepthStencilAttachment)),this._depthStencilTexture=null,t},i.attachDepthStencilBuffer=function(t){if(r.isNone(t))return;const e=t.descriptor;if(e.internalFormat!==c.RenderbufferFormat.DEPTH_STENCIL&&e.internalFormat!==c.RenderbufferFormat.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),p(e,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=e.internalFormat===c.RenderbufferFormat.DEPTH_STENCIL?c.DepthStencilTargetType.DEPTH_STENCIL_RENDER_BUFFER:c.DepthStencilTargetType.DEPTH_RENDER_BUFFER,this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=this._desc.depthStencilTarget===c.DepthStencilTargetType.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(c.FramebufferTarget.FRAMEBUFFER,i,e.RENDERBUFFER,t.glName)}this._depthAttachment=t},i.detachDepthStencilBuffer=function(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===c.DepthStencilTargetType.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(c.FramebufferTarget.FRAMEBUFFER,e,t.RENDERBUFFER,null)}return this._depthAttachment=null,e},i.detachAll=function(){this._colorAttachments.forEach(((t,e)=>this._detachColorAttachment(e))),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()},i.copyToTexture=function(t,e,i,r,n,h,s){(t<0||e<0||n<0||h<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const o=this._desc,T=s.descriptor;s.descriptor.target!==c.TextureType.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(t+i>o.width||e+r>o.height||n+i>T.width||h+r>T.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const l=this._context,_=l.bindTexture(s,a.Texture.TEXTURE_UNIT_FOR_UPDATES);l.setActiveTexture(a.Texture.TEXTURE_UNIT_FOR_UPDATES),l.bindFramebuffer(this),l.gl.copyTexSubImage2D(c.TextureType.TEXTURE_2D,0,n,h,t,e,i,r),l.bindTexture(_,a.Texture.TEXTURE_UNIT_FOR_UPDATES)},i.readPixels=function(t,e,i,r,n,h,s){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),s||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this);this._context.gl.readPixels(t,e,i,r,n,h,s)},i.readPixelsAsync=function(){var t=e._asyncToGenerator((function*(t,e,i,r,o,a,T){if(this._context.type!==s.ContextType.WEBGL2)return h.webglDebugEnabled()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(t,e,i,r,o,a,T);const l=this._context.gl,_=n.BufferObject.createPixelPack(this._context,c.Usage.STREAM_READ,T.byteLength);this._context.bindBuffer(_),this._context.bindFramebuffer(this),l.readPixels(t,e,i,r,o,a,0),this._context.unbindBuffer(c.BufferType.PIXEL_PACK_BUFFER),yield _.getSubDataAsync(T),_.dispose()}));function i(e,i,r,n,h,s,c){return t.apply(this,arguments)}return i}(),i.resize=function(t,e){const i=this._desc;if(i.width!==t||i.height!==e){if(!this._initialized)return i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}},i.initializeAndBind=function(t=c.FramebufferTarget.FRAMEBUFFER){var e,i,r,n;const s=this._context.gl;if(this._initialized)return void s.bindFramebuffer(t,this.glName);this._glName&&s.deleteFramebuffer(this._glName);const T=this._context,l=s.createFramebuffer(),_=this._desc,f=null!=(e=_.colorTarget)?e:c.TargetType.RENDER_BUFFER,E=null!=(i=_.width)?i:1,m=null!=(r=_.height)?r:1;if(s.bindFramebuffer(t,l),0===this._colorAttachments.size)if(f===c.TargetType.TEXTURE||f===c.TargetType.CUBEMAP)this._colorAttachments.set(c.ColorAttachment.COLOR_ATTACHMENT0,d(T,_,this.descriptor.colorTarget===c.TargetType.CUBEMAP?c.TextureType.TEXTURE_CUBE_MAP:c.TextureType.TEXTURE_2D));else{const t=new o.Renderbuffer(T,{internalFormat:c.SizedPixelFormat.RGBA4,width:E,height:m});this._colorAttachments.set(c.ColorAttachment.COLOR_ATTACHMENT0,t)}this._colorAttachments.forEach(((e,i)=>{e&&(u(e)?this._framebufferTexture2D(e.glName,i,A(e),t):s.framebufferRenderbuffer(t,i,s.RENDERBUFFER,e.glName))}));const p=null!=(n=_.depthStencilTarget)?n:c.DepthStencilTargetType.NONE;switch(p){case c.DepthStencilTargetType.DEPTH_RENDER_BUFFER:case c.DepthStencilTargetType.DEPTH_STENCIL_RENDER_BUFFER:{this._depthAttachment||(this._depthAttachment=new o.Renderbuffer(T,{internalFormat:_.depthStencilTarget===c.DepthStencilTargetType.DEPTH_RENDER_BUFFER?c.RenderbufferFormat.DEPTH_COMPONENT16:c.RenderbufferFormat.DEPTH_STENCIL,width:E,height:m}));const e=p===c.DepthStencilTargetType.DEPTH_RENDER_BUFFER?s.DEPTH_ATTACHMENT:s.DEPTH_STENCIL_ATTACHMENT;s.framebufferRenderbuffer(t,e,s.RENDERBUFFER,this._depthAttachment.glName);break}case c.DepthStencilTargetType.STENCIL_RENDER_BUFFER:this._stencilAttachment||(this._stencilAttachment=new o.Renderbuffer(T,{internalFormat:c.RenderbufferFormat.STENCIL_INDEX8,width:E,height:m})),s.framebufferRenderbuffer(t,s.STENCIL_ATTACHMENT,s.RENDERBUFFER,this._stencilAttachment.glName);break;case c.DepthStencilTargetType.DEPTH_STENCIL_TEXTURE:if(!this._depthStencilTexture){T.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const t={target:c.TextureType.TEXTURE_2D,pixelFormat:c.PixelFormat.DEPTH_STENCIL,dataType:c.PixelType.UNSIGNED_INT_24_8,samplingMode:c.TextureSamplingMode.NEAREST,wrapMode:c.TextureWrapMode.CLAMP_TO_EDGE,width:E,height:m};this._depthStencilTexture=new a.Texture(T,t)}this._framebufferTexture2D(this._depthStencilTexture.glName,s.DEPTH_STENCIL_ATTACHMENT,A(this._depthStencilTexture),t)}if(h.webglValidateShadersEnabled()){s.checkFramebufferStatus(t)!==s.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!")}this._glName=l,this._initialized=!0},i._framebufferTexture2D=function(t,e=c.ColorAttachment.COLOR_ATTACHMENT0,i=c.TextureType.TEXTURE_2D,r=c.FramebufferTarget.FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(r,e,i,t,n)},i._detachColorAttachment=function(t){h.webglDebugEnabled()&&console.warn("Detaching an FBO attachment can be a slow due to invalidating framebuffer completeness!");const e=this._context.gl,i=this._colorAttachments.get(t);return u(i)?this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)):this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(c.FramebufferTarget.FRAMEBUFFER,t,e.RENDERBUFFER,null)),this._colorAttachments.delete(t),i},i._disposeColorAttachments=function(){this._colorAttachments.forEach(((t,e)=>{this._detachColorAttachment(e),t.dispose()})),this._colorAttachments.clear()},i._disposeDepthStencilAttachments=function(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===c.DepthStencilTargetType.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(c.FramebufferTarget.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(c.FramebufferTarget.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)},i._validateColorAttachmentPoint=function(e){if(-1===t._MAX_COLOR_ATTACHMENTS){const e=this._context.capabilities.drawBuffers;if(e){const i=this._context.gl;t._MAX_COLOR_ATTACHMENTS=i.getParameter(e.MAX_COLOR_ATTACHMENTS)}else t._MAX_COLOR_ATTACHMENTS=1}const i=e-c.ColorAttachment.COLOR_ATTACHMENT0;i+1>t._MAX_COLOR_ATTACHMENTS&&l.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${i+1}. Implementation supports up to ${t._MAX_COLOR_ATTACHMENTS} color attachments`)},e._createClass(t,[{key:"glName",get:function(){return this._glName}},{key:"descriptor",get:function(){return this._desc}},{key:"colorTexture",get:function(){const t=this._colorAttachments.get(c.ColorAttachment.COLOR_ATTACHMENT0);return t&&u(t)?t:null}},{key:"colorAttachment",get:function(){return this._colorAttachments.get(c.ColorAttachment.COLOR_ATTACHMENT0)}},{key:"depthStencilAttachment",get:function(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}},{key:"width",get:function(){return this._desc.width}},{key:"height",get:function(){return this._desc.height}},{key:"gpuMemoryUsage",get:function(){return[...this._colorAttachments].reduce(((t,[e,i])=>t+T.getGpuMemoryUsage(i)),0)+T.getGpuMemoryUsage(this.depthStencilAttachment)}}]),t}();function u(t){return"type"in t&&"texture"===t.type}function f(t){return"type"in t&&"renderbuffer"===t.type}function E(t){return u(t)||"pixelFormat"in t}function d(t,e,i){return new a.Texture(t,{target:i,pixelFormat:c.PixelFormat.RGBA,dataType:c.PixelType.UNSIGNED_BYTE,samplingMode:c.TextureSamplingMode.NEAREST,wrapMode:c.TextureWrapMode.CLAMP_TO_EDGE,width:e.width,height:e.height})}function m(t,e){t.target!==c.TextureType.TEXTURE_2D&&t.target!==c.TextureType.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Color attachment texture must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function p(t,e){void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function A(t){return t.descriptor.target===c.TextureType.TEXTURE_CUBE_MAP?c.TextureType.TEXTURE_CUBE_MAP_POSITIVE_X:c.TextureType.TEXTURE_2D}_._MAX_COLOR_ATTACHMENTS=-1,t.FramebufferObject=_,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
