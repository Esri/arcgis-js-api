/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../core/has","../../core/maybe"],(function(e,t,r){"use strict";function n(e,t){return e.vertexBuffers[t].size/i(e.layout[t])}function i(e){return e[0].stride}function s(e){switch(e){case 5126:case 5124:case 5125:return 4;case 5122:case 5123:return 2;case 5120:case 5121:return 1;default:throw new Error("Unknown data type")}}function o(e){switch(e){case 5120:return Int8Array;case 5126:return Float32Array;case 5124:return Int32Array;case 5122:return Int16Array;case 5121:return Uint8Array;case 5125:return Uint32Array;case 5123:return Uint16Array;default:throw new Error("Unknown data type")}}function a(e,t,r,n,i,o){const a=s(n);if(e.length>0){const s=e[0].stride,c=s+a*r;e.forEach((e=>e.stride=c)),e.push({name:t,count:r,type:n,offset:s,stride:c,normalized:i,divisor:o})}else e.push({name:t,count:r,type:n,offset:0,stride:a*r,normalized:i,divisor:o})}function c(e,t){for(let r=0;r<e.length;r++)if(e[r].name===t)return!0;return!1}function u(e,t){for(let r=0;r<e.length;r++)if(e[r].name===t)return e[r];return null}function f(e,t,r,n,i=0){const s=e.getBoundFramebufferObject(),o=e.getBoundTexture(0);e.bindFramebuffer(t),e.bindTexture(r,0),e.gl.copyTexImage2D(e.gl.TEXTURE_2D,i,r.descriptor.pixelFormat,n[0],n[1],n[2],n[3],0),e.gl.flush(),e.bindFramebuffer(s),e.bindTexture(o,0)}function d(e,t){const r={};for(const n in e)r[n]=e[n].map((e=>e.divisor?{...e,baseInstance:t}:e));return r}function l(e,t,r,n,i){const s=e.gl,o=e.capabilities.instancing;e.bindBuffer(r);for(const a of n){const e=t[a.name],r=(i||(0+a.baseInstance?a.baseInstance:0))*a.stride;if(void 0===e&&console.error(`There is no location for vertex attribute '${a.name}' defined.`),a.baseInstance&&!a.divisor&&console.error(`Vertex attribute '${a.name}' uses baseInstanceOffset without divisor.`),a.count<=4)s.vertexAttribPointer(e,a.count,a.type,a.normalized,a.stride,a.offset+r),s.enableVertexAttribArray(e),a.divisor&&a.divisor>0&&o&&o.vertexAttribDivisor(e,a.divisor);else if(9===a.count)for(let t=0;t<3;t++)s.vertexAttribPointer(e+t,3,a.type,a.normalized,a.stride,a.offset+12*t+r),s.enableVertexAttribArray(e+t),a.divisor&&a.divisor>0&&o&&o.vertexAttribDivisor(e+t,a.divisor);else if(16===a.count)for(let t=0;t<4;t++)s.vertexAttribPointer(e+t,4,a.type,a.normalized,a.stride,a.offset+16*t+r),s.enableVertexAttribArray(e+t),a.divisor&&a.divisor>0&&o&&o.vertexAttribDivisor(e+t,a.divisor);else console.error("Unsupported vertex attribute element count: "+a.count)}}function b(e,t,r,n){const i=e.gl,s=e.capabilities.instancing;e.bindBuffer(r);for(const o of n){const e=t[o.name];if(o.count<=4)i.disableVertexAttribArray(e),o.divisor&&o.divisor>0&&s&&s.vertexAttribDivisor(e,0);else if(9===o.count)for(let t=0;t<3;t++)i.disableVertexAttribArray(e+t),o.divisor&&o.divisor>0&&s&&s.vertexAttribDivisor(e+t,0);else if(16===o.count)for(let t=0;t<4;t++)i.disableVertexAttribArray(e+t),o.divisor&&o.divisor>0&&s&&s.vertexAttribDivisor(e+t,0);else console.error("Unsupported vertex attribute element count: "+o.count)}e.unbindBuffer(34962)}function v(e){switch(e){case 6406:case 6409:case 36168:return 1;case 6410:case 32854:case 33325:case 32854:case 33189:return 2;case 6407:case 6402:return 3;case 6408:case 34041:case 33326:case 35898:case 33327:case 34041:return 4;case 33328:case 34842:return 8;case 34836:return 16;case 33776:case 33777:return.5;case 33778:case 33779:return 1;case 37488:case 37489:case 37492:case 37493:case 37494:case 37495:return.5;case 37490:case 37491:case 37496:case 37497:return 1}return 0}function m(e){if(r.isNone(e))return 0;if("colorAttachment"in e)return e.glName?m(e.colorAttachment)+m(e.depthStencilAttachment):0;if("descriptor"in e)return e.glName?m(e.descriptor):0;const t=e.internalFormat||"pixelFormat"in e&&e.pixelFormat;if(!t)return 0;const n="hasMipmap"in e&&e.hasMipmap?1.3:1,i=e.width*e.height;return v(t)*i*n}e.addDescriptor=a,e.bindVertexBufferLayout=l,e.copyFramebufferToTexture=f,e.findAttribute=u,e.getBytesPerElement=s,e.getBytesPerElementFormat=v,e.getGpuMemoryUsage=m,e.getStride=i,e.getTypedArrayConstructor=o,e.hasAttribute=c,e.setBaseInstanceOffset=d,e.unbindVertexBufferLayout=b,e.vertexCount=n,Object.defineProperty(e,"__esModule",{value:!0})}));
