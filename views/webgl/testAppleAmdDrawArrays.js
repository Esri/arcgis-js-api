/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../core/has","../3d/webgl-engine/core/shaderModules/interfaces","./BufferObject","./context-util","./enums","./FramebufferObject","./WebGLDriverTestModule"],(function(e,r,t,n,i,o,a,s,l){"use strict";let c=function(e){function l(r){var n;return(n=e.call(this)||this)._rctx=r,n._dummyProgram=null,n._rctx.type===o.ContextType.WEBGL2&&t("mac")&&t("chrome")&&(n._program=n._prepareProgram(),n._dummyProgram=n._prepareDummyProgram()),n}r._inheritsLoose(l,e);var c=l.prototype;return c.dispose=function(){e.prototype.dispose.call(this),this._dummyProgram?.dispose(),this._dummyProgram=null},c._test=function(e){const r=this._rctx;r.resetState();const t=new s.FramebufferObject(r,{colorTarget:a.TargetType.TEXTURE,depthStencilTarget:a.DepthStencilTargetType.NONE},{target:a.TextureType.TEXTURE_2D,wrapMode:a.TextureWrapMode.CLAMP_TO_EDGE,pixelFormat:a.PixelFormat.RGBA,dataType:a.PixelType.UNSIGNED_BYTE,samplingMode:a.TextureSamplingMode.NEAREST,width:1,height:1}),n=i.BufferObject.createIndex(this._rctx,a.Usage.STATIC_DRAW,new Uint8Array([0]));r.bindFramebuffer(t),r.setViewport(0,0,1,1),r.useProgram(this._dummyProgram),r.bindBuffer(n,a.BufferType.ELEMENT_ARRAY_BUFFER),r.drawElements(a.PrimitiveType.POINTS,1,a.DataType.UNSIGNED_BYTE,0),r.useProgram(e),r.bindVAO(null),r.drawArrays(a.PrimitiveType.TRIANGLES,0,258);const o=new Uint8Array(4);return t.readPixels(0,0,1,1,a.PixelFormat.RGBA,a.PixelType.UNSIGNED_BYTE,o),t.dispose(),n.dispose(),255===o[0]},c._prepareProgram=function(){const e=85,r=`\n    precision highp float;\n\n    varying float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${n.glsl.float(e)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,t=`\n    precision highp float;\n\n    varying float triangleId;\n\n    void main(void) {\n      gl_FragColor = triangleId == ${n.glsl.float(e)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(r,t,new Map([]))},c._prepareDummyProgram=function(){const e="\n    void main(void) {\n      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);\n    }",r="\n    void main(void) {\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }";return this._rctx.programCache.acquire(e,r,new Map([]))},l}(l.WebGLDriverTestModule);e.DrawArraysRequiresIndicesTypeReset=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
