/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../core/mathUtils","../../core/maybe","./enums","./capabilities/isWebGL2Context"],(function(e,t,i,a,o){"use strict";const r=4;let s=function(){function s(e,t,i=null){this._context=e,this.type="texture",this._glName=null,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,e.instanceCounter.increment(a.ResourceType.Texture,this),this._descriptor={target:3553,samplingMode:9729,wrapMode:10497,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,...t},this.setData(i)}var p=s.prototype;return p.dispose=function(){this._context.gl&&this._glName&&(this._context.unbindTextureAllUnits(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(a.ResourceType.Texture,this))},p.release=function(){this.dispose()},p.resize=function(e,t){const i=this._descriptor;i.width===e&&i.height===t||(i.width=e,i.height=t,this.setData(null))},p.setData=function(e){if(!this._context||!this._context.gl)return;const t=this._context.gl;this._glName||(this._glName=t.createTexture()),void 0===e&&(e=null),null===e&&(this._descriptor.width=this._descriptor.width||r,this._descriptor.height=this._descriptor.height||r);const a=this._context.bindTexture(this,s.TEXTURE_UNIT_FOR_UPDATES),o=this._descriptor;s._validateTexture(this._context,o),t.pixelStorei(t.UNPACK_ALIGNMENT,o.unpackAlignment),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,o.flipped?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.preMultiplyAlpha?1:0);const p=o.pixelFormat;let h=o.internalFormat?o.internalFormat:p;if(e instanceof ImageData||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||e instanceof HTMLVideoElement){let i=e.width,a=e.height;e instanceof HTMLVideoElement&&(i=e.videoWidth,a=e.videoHeight),o.width&&o.height,t.texImage2D(t.TEXTURE_2D,0,h,p,o.dataType,e),o.hasMipmap&&this.generateMipmap(),void 0===o.width&&(o.width=i),void 0===o.height&&(o.height=a)}else{null!=o.width&&null!=o.height||console.error("Width and height must be specified!"),t.DEPTH24_STENCIL8&&h===t.DEPTH_STENCIL&&(h=t.DEPTH24_STENCIL8);let a=o.width,r=o.height;if(n(e)){const i=Math.round(Math.log(Math.max(a,r))/Math.LN2)+1;o.hasMipmap=o.hasMipmap&&i===e.levels.length;for(let s=0;;++s){const i=e.levels[Math.min(s,e.levels.length-1)];if(t.compressedTexImage2D(t.TEXTURE_2D,s,h,a,r,0,i),1===a&&1===r||!o.hasMipmap)break;a=Math.max(1,a>>1),r=Math.max(1,r>>1)}}else if(i.isSome(e))t.texImage2D(t.TEXTURE_2D,0,h,a,r,0,p,o.dataType,e),o.hasMipmap&&this.generateMipmap();else for(let e=0;t.texImage2D(t.TEXTURE_2D,e,h,a,r,0,p,o.dataType,null),(1!==a||1!==r)&&o.hasMipmap;++e)a=Math.max(1,a>>1),r=Math.max(1,r>>1)}s._applySamplingMode(t,this._descriptor),s._applyWrapMode(t,this._descriptor),s._applyAnisotropicFilteringParameters(this._context,this._descriptor),this._context.bindTexture(a,s.TEXTURE_UNIT_FOR_UPDATES)},p.updateData=function(e,t,i,a,o,r){r||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const n=this._context.gl,p=this._descriptor,h=this._context.bindTexture(this,s.TEXTURE_UNIT_FOR_UPDATES);(t<0||i<0||a>p.width||o>p.height||t+a>p.width||i+o>p.height)&&console.error("An attempt to update out of bounds of the texture!"),n.pixelStorei(n.UNPACK_ALIGNMENT,p.unpackAlignment),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,p.flipped?1:0),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,p.preMultiplyAlpha?1:0),r instanceof ImageData||r instanceof HTMLImageElement||r instanceof HTMLCanvasElement||r instanceof HTMLVideoElement?n.texSubImage2D(n.TEXTURE_2D,e,t,i,p.pixelFormat,p.dataType,r):n.texSubImage2D(n.TEXTURE_2D,e,t,i,a,o,p.pixelFormat,p.dataType,r),this._context.bindTexture(h,s.TEXTURE_UNIT_FOR_UPDATES)},p.generateMipmap=function(){const e=this._descriptor;e.hasMipmap||(e.hasMipmap=!0,this._samplingModeDirty=!0,s._validateTexture(this._context,e)),9729===e.samplingMode?(this._samplingModeDirty=!0,e.samplingMode=9985):9728===e.samplingMode&&(this._samplingModeDirty=!0,e.samplingMode=9984);const t=this._context.bindTexture(this,s.TEXTURE_UNIT_FOR_UPDATES),i=this._context.gl;i.generateMipmap(i.TEXTURE_2D),this._context.bindTexture(t,s.TEXTURE_UNIT_FOR_UPDATES)},p.setSamplingMode=function(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,this._samplingModeDirty=!0)},p.setWrapMode=function(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,s._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)},p.applyChanges=function(){const e=this._context.gl,t=this._descriptor;this._samplingModeDirty&&(s._applySamplingMode(e,t),this._samplingModeDirty=!1),this._wrapModeDirty&&(s._applyWrapMode(e,t),this._wrapModeDirty=!1)},s._validateTexture=function(e,i){(i.width<0||i.height<0)&&console.error("Negative dimension parameters are not allowed!");const a=t.isPowerOfTwo(i.width)&&t.isPowerOfTwo(i.height);o(e.gl)||a||("number"==typeof i.wrapMode?33071!==i.wrapMode&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):33071===i.wrapMode.s&&33071===i.wrapMode.t||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),i.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))},s._applySamplingMode=function(e,t){let i=t.samplingMode,a=t.samplingMode;9985===i||9987===i?(i=9729,t.hasMipmap||(a=9729)):9984!==i&&9986!==i||(i=9728,t.hasMipmap||(a=9728)),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,a)},s._applyWrapMode=function(e,t){"number"==typeof t.wrapMode?(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,t.wrapMode),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,t.wrapMode)):(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,t.wrapMode.s),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,t.wrapMode.t))},s._applyAnisotropicFilteringParameters=function(e,t){var i;const a=e.capabilities.textureFilterAnisotropic;if(!a)return;const o=e.gl;o.texParameterf(o.TEXTURE_2D,a.TEXTURE_MAX_ANISOTROPY,null!=(i=t.maxAnisotropy)?i:1)},e._createClass(s,[{key:"glName",get:function(){return this._glName}},{key:"descriptor",get:function(){return this._descriptor}}]),s}();function n(e){return i.isSome(e)&&"type"in e&&"compressed"===e.type}return s.TEXTURE_UNIT_FOR_UPDATES=0,s}));
