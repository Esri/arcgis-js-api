/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import r from"../../../core/Handles.js";import{watch as o,initial as n}from"../../../core/reactiveUtils.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{DoubleClickZoom as s}from"./handlers/DoubleClickZoom.js";import{DragRotate as p}from"./handlers/DragRotate.js";import{DragZoom as m}from"./handlers/DragZoom.js";import{GamepadNavigation as d}from"./handlers/GamepadNavigation.js";import{KeyboardNavigation as l}from"./handlers/KeyboardNavigation.js";import{MouseWheelZoom as c}from"./handlers/MouseWheelZoom.js";import{PinchAndPanNavigation as g}from"./handlers/PinchAndPanNavigation.js";import{PointerDownCancelAnimation as h}from"./handlers/PointerDownCancelAnimation.js";import{SingleKeyResetHeading as u}from"./handlers/SingleKeyResetHeading.js";import{SingleKeyResetTilt as w}from"./handlers/SingleKeyResetTilt.js";import{TwoFingerTilt as _}from"./handlers/TwoFingerTilt.js";import{BrowserEventSource as y}from"../../input/BrowserEventSource.js";import{InputManager as D,ViewEventPriorities as f}from"../../input/InputManager.js";import{PreventContextMenu as j}from"../../input/handlers/PreventContextMenu.js";import{Drag as v}from"../../input/recognizers/Drag.js";import{ImmediateDoubleClick as A}from"../../input/recognizers/ImmediateDoubleClick.js";import{PointerClickHoldAndDrag as P}from"../../input/recognizers/PointerClickHoldAndDrag.js";import{SingleAndDoubleClick as M}from"../../input/recognizers/SingleAndDoubleClick.js";import{VerticalTwoFingerDrag as R}from"../../input/recognizers/VerticalTwoFingerDrag.js";import{PivotPoint as T}from"../state/controllers/RotateController.js";let z=class extends t{constructor(){super(...arguments),this._handles=new r}destroy(){this._handles&&(this._handles.removeAll(),this._handles=null),this.disconnect()}get primaryDragAction(){return this._get("primaryDragAction")}set primaryDragAction(e){"pan"!==e&&"rotate"!==e||e===this._get("primaryDragAction")||(this._set("primaryDragAction",e),this._updateMode())}get mode(){return this._get("mode")}set mode(e){"default"!==e&&"pro"!==e||e===this._get("mode")||(this._set("mode",e),this._updateMode())}get hasPendingInputs(){return this._inputManager?.hasPendingInputs}get latestPointerType(){return this._inputManager?.latestPointerType}get latestPointerLocation(){return this._inputManager?.latestPointerLocation}disconnect(){this.view.viewEvents.disconnect(),this._inputManager&&(this._inputManager.destroy(),this._inputManager=null),this._source&&(this._source.destroy(),this._source=null)}connect(){const e=this.view;this._source=new y(this.view.surface,e.input);const t=[new A,new P,new M,new v(this.view.navigation),new R],r=new D({eventSource:this._source,recognizers:t});this._inputManager=r,r.installHandlers("prevent-context-menu",[new j],f.INTERNAL),this._modeDragPan=new g(e,"primary"),this._modeDragRotate=new p(e,"secondary",T.CENTER),this._modeDragZoom=new m(e,"tertiary");const i={lookAround:"b",pan:{left:"ArrowLeft",right:"ArrowRight",forward:"ArrowUp",backward:"ArrowDown",up:"u",down:"j",headingLeft:"a",headingRight:"d",tiltUp:"w",tiltDown:"s",zoomIn:"+",zoomOut:"-"},resetHeading:"n",resetTilt:"p"};r.installHandlers("navigation",[new h(e),new s(e),new d(e),new l(e,i.pan),new c(e),new w(e,i.resetTilt),new u(e,i.resetHeading),new p(e,"primary",T.EYE,[i.lookAround]),new p(e,"secondary",T.CENTER,[i.lookAround]),new g(e,"tertiary",[i.lookAround]),this._modeDragRotate,this._modeDragZoom,this._modeDragPan,new _(e)],f.INTERNAL),this.view.viewEvents.connect(r),this._updateMode(),this._handles.add(o((()=>this.view.navigation?.browserTouchPanEnabled),(e=>{this._source.browserTouchPanningEnabled=!e}),n))}_updateMode(){const e=this.mode,t=this.primaryDragAction,r=E.get(e).get(t);this._modeDragPan&&(this._modeDragPan.pointerAction=r.pan),this._modeDragRotate&&(this._modeDragRotate.pointerAction=r.rotate),this._modeDragZoom&&(this._modeDragZoom.pointerAction=r.zoom)}get test(){return{inputManager:this._inputManager,modeDragPan:this._modeDragPan,modeDragRotate:this._modeDragRotate,modeDragZoom:this._modeDragZoom}}};e([i()],z.prototype,"view",void 0),e([i({value:"pan"})],z.prototype,"primaryDragAction",null),e([i({value:"default"})],z.prototype,"mode",null),e([i({readOnly:!0})],z.prototype,"hasPendingInputs",null),e([i()],z.prototype,"latestPointerType",null),e([i()],z.prototype,"latestPointerLocation",null),e([i()],z.prototype,"_inputManager",void 0),z=e([a("esri.views.3d.input.SceneInputManager")],z);const E=new Map,b=new Map,k=new Map;b.set("pan",{pan:"primary",rotate:"secondary",zoom:"tertiary"}),b.set("rotate",{pan:"secondary",rotate:"primary",zoom:"tertiary"}),k.set("pan",{pan:"primary",rotate:"tertiary",zoom:"secondary"}),k.set("rotate",{pan:"tertiary",rotate:"primary",zoom:"secondary"}),E.set("default",b),E.set("pro",k);const C=z;export{C as default};
