/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["require","exports","../../core/Error","../../core/maybe"],(function(e,r,a,s){"use strict";const i=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),o=()=>new Promise(((r,a)=>e(["./layers/TileLayerView3D"],(e=>r(i(e))),a))),l=()=>new Promise(((r,a)=>e(["./layers/ElevationLayerView3D"],(e=>r(i(e))),a))),n={analysis:()=>new Promise(((r,a)=>e(["./layers/AnalysisLayerView3D"],(e=>r(i(e))),a))),"base-dynamic":()=>new Promise(((r,a)=>e(["./layers/BaseDynamicLayerView3D"],(e=>r(i(e))),a))),"base-elevation":l,"base-tile":o,"bing-maps":o,"building-scene":()=>new Promise(((r,a)=>e(["./layers/BuildingSceneLayerView3D"],(e=>r(i(e))),a))),csv:()=>new Promise(((r,a)=>e(["./layers/CSVLayerView3D"],(e=>r(i(e))),a))),elevation:l,feature:()=>new Promise(((r,a)=>e(["./layers/FeatureLayerView3D"],(e=>r(i(e))),a))),geojson:()=>new Promise(((r,a)=>e(["./layers/GeoJSONLayerView3D"],(e=>r(i(e))),a))),graphics:()=>new Promise(((r,a)=>e(["./layers/GraphicsLayerView3D"],(e=>r(i(e))),a))),group:()=>new Promise(((r,a)=>e(["../layers/GroupLayerView"],(e=>r(i(e))),a))),imagery:()=>new Promise(((r,a)=>e(["./layers/ImageryLayerView3D"],(e=>r(i(e))),a))),"integrated-mesh":()=>new Promise(((r,a)=>e(["./layers/IntegratedMeshLayerView3D"],(e=>r(i(e))),a))),"map-image":()=>new Promise(((r,a)=>e(["./layers/MapImageLayerView3D"],(e=>r(i(e))),a))),"ogc-feature":()=>new Promise(((r,a)=>e(["./layers/OGCFeatureLayerView3D"],(e=>r(i(e))),a))),"open-street-map":o,"point-cloud":()=>new Promise(((r,a)=>e(["./layers/PointCloudLayerView3D"],(e=>r(i(e))),a))),voxel:()=>new Promise(((r,a)=>e(["./layers/VoxelLayerView3D"],(e=>r(i(e))),a))),route:()=>new Promise(((r,a)=>e(["./layers/RouteLayerView3D"],(e=>r(i(e))),a))),scene:r=>null==r.profile||"mesh-pyramids"===r.profile?new Promise(((r,a)=>e(["./layers/SceneLayerView3D"],(e=>r(i(e))),a))):new Promise(((r,a)=>e(["./layers/SceneLayerGraphicsView3D"],(e=>r(i(e))),a))),stream:()=>new Promise(((r,a)=>e(["./layers/StreamLayerView3D"],(e=>r(i(e))),a))),tile:o,"imagery-tile":()=>new Promise(((r,a)=>e(["./layers/ImageryTileLayerView3D"],(e=>r(i(e))),a))),"vector-tile":()=>new Promise(((r,a)=>e(["./layers/VectorTileLayerView3D"],(e=>r(i(e))),a))),wcs:()=>new Promise(((r,a)=>e(["./layers/ImageryTileLayerView3D"],(e=>r(i(e))),a))),"web-tile":o,wfs:()=>new Promise(((r,a)=>e(["./layers/WFSLayerView3D"],(e=>r(i(e))),a))),wms:()=>new Promise(((r,a)=>e(["./layers/WMSLayerView3D"],(e=>r(i(e))),a))),wmts:()=>new Promise(((r,a)=>e(["./layers/WMTSLayerView3D"],(e=>r(i(e))),a))),"geo-rss":null,kml:null,"map-notes":null,"subtype-group":null,unknown:null,unsupported:null};function y(e){const r=e.declaredClass?e.declaredClass.slice(e.declaredClass.lastIndexOf(".")+1):"Unknown",s=r.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new a(`${s}:view-not-supported`,`${r} is not supported in 3D`)}const w={hasLayerViewModule:e=>s.isSome(n[e.type]),importLayerView:e=>{const r=n[e.type];if(!s.isSome(r))throw y(e);return r(e)}};r.layerView3DImporter=w,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
