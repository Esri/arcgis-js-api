/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["require","exports","../../core/Error","../../core/maybe"],(function(e,r,s,a){"use strict";const i=e=>Object.freeze({__proto__:null,default:e}),l=()=>new Promise(((r,s)=>e(["./layers/TileLayerView3D"],(e=>r(i(e))),s))),n=()=>new Promise(((r,s)=>e(["./layers/ElevationLayerView3D"],(e=>r(i(e))),s))),o={analysis:()=>new Promise(((r,s)=>e(["./layers/AnalysisLayerView3D"],(e=>r(i(e))),s))),"base-dynamic":()=>new Promise(((r,s)=>e(["./layers/BaseDynamicLayerView3D"],(e=>r(i(e))),s))),"base-elevation":n,"base-tile":l,"bing-maps":l,"building-scene":()=>new Promise(((r,s)=>e(["./layers/BuildingSceneLayerView3D"],(e=>r(i(e))),s))),csv:()=>new Promise(((r,s)=>e(["./layers/CSVLayerView3D"],(e=>r(i(e))),s))),elevation:n,feature:()=>new Promise(((r,s)=>e(["./layers/FeatureLayerView3D"],(e=>r(i(e))),s))),geojson:()=>new Promise(((r,s)=>e(["./layers/GeoJSONLayerView3D"],(e=>r(i(e))),s))),graphics:()=>new Promise(((r,s)=>e(["./layers/GraphicsLayerView3D"],(e=>r(i(e))),s))),group:()=>new Promise(((r,s)=>e(["../layers/GroupLayerView"],(e=>r(i(e))),s))),imagery:()=>new Promise(((r,s)=>e(["./layers/ImageryLayerView3D"],(e=>r(i(e))),s))),"integrated-mesh":()=>new Promise(((r,s)=>e(["./layers/IntegratedMeshLayerView3D"],(e=>r(i(e))),s))),"map-image":()=>new Promise(((r,s)=>e(["./layers/MapImageLayerView3D"],(e=>r(i(e))),s))),"ogc-feature":()=>new Promise(((r,s)=>e(["./layers/OGCFeatureLayerView3D"],(e=>r(i(e))),s))),"open-street-map":l,"point-cloud":()=>new Promise(((r,s)=>e(["./layers/PointCloudLayerView3D"],(e=>r(i(e))),s))),voxel:()=>new Promise(((r,s)=>e(["./layers/VoxelLayerView3D"],(e=>r(i(e))),s))),scene:r=>null==r.profile||"mesh-pyramids"===r.profile?new Promise(((r,s)=>e(["./layers/SceneLayerView3D"],(e=>r(i(e))),s))):new Promise(((r,s)=>e(["./layers/SceneLayerGraphicsView3D"],(e=>r(i(e))),s))),stream:()=>new Promise(((r,s)=>e(["./layers/StreamLayerView3D"],(e=>r(i(e))),s))),tile:l,"imagery-tile":()=>new Promise(((r,s)=>e(["./layers/ImageryTileLayerView3D"],(e=>r(i(e))),s))),"vector-tile":()=>new Promise(((r,s)=>e(["./layers/VectorTileLayerView3D"],(e=>r(i(e))),s))),wcs:()=>new Promise(((r,s)=>e(["./layers/ImageryTileLayerView3D"],(e=>r(i(e))),s))),"web-tile":l,wfs:()=>new Promise(((r,s)=>e(["./layers/WFSLayerView3D"],(e=>r(i(e))),s))),wms:()=>new Promise(((r,s)=>e(["./layers/WMSLayerView3D"],(e=>r(i(e))),s))),wmts:()=>new Promise(((r,s)=>e(["./layers/WMTSLayerView3D"],(e=>r(i(e))),s))),"geo-rss":null,kml:null,"map-notes":null,route:null,"subtype-group":null,unknown:null,unsupported:null};function y(e){const r=e.declaredClass?e.declaredClass.slice(e.declaredClass.lastIndexOf(".")+1):"Unknown",a=r.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new s(`${a}:view-not-supported`,`${r} is not supported in 3D`)}const w={hasLayerViewModule:e=>a.isSome(o[e.type]),importLayerView:e=>{const r=o[e.type];if(!a.isSome(r))throw y(e);return r(e)}};r.layerView3DImporter=w,Object.defineProperty(r,"__esModule",{value:!0})}));
