/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{j as r}from"../../../../../../chunks/mat4.js";import{c as e}from"../../../../../../chunks/mat4f32.js";import{s as a}from"../../../../../../chunks/vec3.js";import{Z as i,c as s}from"../../../../../../chunks/vec3f64.js";import{Float3DrawUniform as o}from"../../shaderModules/Float3DrawUniform.js";import{Float3PassUniform as n}from"../../shaderModules/Float3PassUniform.js";import{Matrix4DrawUniform as t}from"../../shaderModules/Matrix4DrawUniform.js";import{Matrix4PassUniform as m}from"../../shaderModules/Matrix4PassUniform.js";function c(r,e){e.instancedDoublePrecision?r.constants.add("cameraPosition","vec3",i):r.uniforms.add(new o("cameraPosition",((r,e)=>a(f,e.camera.viewInverseTransposeMatrix[3]-r.origin[0],e.camera.viewInverseTransposeMatrix[7]-r.origin[1],e.camera.viewInverseTransposeMatrix[11]-r.origin[2]))))}function d(e,i){if(e.vertex.uniforms.add(new m("proj",((r,e)=>e.camera.projectionMatrix))),i.instancedDoublePrecision){const i=(r,e)=>a(f,e.camera.viewInverseTransposeMatrix[3],e.camera.viewInverseTransposeMatrix[7],e.camera.viewInverseTransposeMatrix[11]);e.vertex.uniforms.add(new m("view",((e,a)=>r(v,a.camera.viewMatrix,i(e,a)))));const s=new n("localOrigin",i);return e.vertex.uniforms.add(s),s}e.vertex.uniforms.add(new t("view",((e,a)=>r(v,a.camera.viewMatrix,e.origin))));const s=new o("localOrigin",(r=>r.origin));return e.vertex.uniforms.add(s),s}const v=e(),f=s();export{c as addCameraPosition,d as addProjViewLocalOrigin};
