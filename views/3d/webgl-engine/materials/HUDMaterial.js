/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/mathUtils","../../../../core/screenUtils","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../chunks/mat4","../../../../geometry/support/aaBoundingRect","../../../../chunks/mat3f64","../../../../chunks/mat4f64","../../../../chunks/vec2f64","../../../../chunks/mat3","../../../../chunks/vec2","../../support/buffer/InterleavedLayout","../lib/geometryDataUtils","../lib/Util","./renderers/utils","../lib/screenSizePerspectiveUtils","../../../../core/libs/gl-matrix-2/types/mat4","../lib/GLMaterialTexture","./internal/MaterialUtil","../lib/Material","./internal/bufferWriterUtils","../../../../chunks/HUDMaterial.glsl","../shaders/HUDMaterialTechnique"],(function(t,e,n,i,r,s,a,o,c,l,u,f,h,p,d,m,g,A,x,S,v,O,C,P,V,y){"use strict";let b=function(t){function r(e,n){var i;return(i=t.call(this,n,e,j)||this).techniqueConfig=new y.HUDMaterialTechniqueConfiguration,i}e._inheritsLoose(r,t);var l=r.prototype;return l.getTechniqueConfig=function(t,e){return this.techniqueConfig.output=t,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.verticalOffset=!!this.params.verticalOffset,this.techniqueConfig.screenSizePerspective=!!this.params.screenSizePerspective,this.techniqueConfig.screenCenterOffsetUnitsEnabled="screen"===this.params.centerOffsetUnits?1:0,this.techniqueConfig.polygonOffsetEnabled=this.params.polygonOffset,this.techniqueConfig.isDraped=this.params.isDraped,this.techniqueConfig.occlusionTestEnabled=this.params.occlusionTest,this.techniqueConfig.pixelSnappingEnabled=this.params.pixelSnappingEnabled,this.techniqueConfig.sdf=this.params.textureIsSignedDistanceField,this.techniqueConfig.vvSize=!!this.params.vvSizeEnabled,this.techniqueConfig.vvColor=!!this.params.vvColorEnabled,0===t&&(this.techniqueConfig.debugDrawBorder=!!this.params.debugDrawBorder),4===t&&(this.techniqueConfig.binaryHighlightOcclusion=this.params.binaryHighlightOcclusion),this.techniqueConfig.depthEnabled=this.params.depthEnabled,this.techniqueConfig.transparencyPassType=e?e.transparencyPassType:3,this.techniqueConfig},l.intersect=function(t,e,n,i,r,s,a,o,c){c?this.intersectDrapedHudGeometry(t,s,a,o):this.intersectHudGeometry(t,e,n,i,a,o)},l.intersectDrapedHudGeometry=function(t,e,n,i){const r=t.getAttribute(g.VertexAttrConstants.POSITION),s=t.getAttribute(g.VertexAttrConstants.SIZE),a=this.params,o=V.calculateAnchorPosForRendering(a);let c=1,l=1;if(i){const t=i(X);c=t[0],l=t[5]}c*=t.screenToWorldRatio,l*=t.screenToWorldRatio;const u=W*t.screenToWorldRatio;for(let i=0;i<r.data.length/r.size;i++){const f=i*r.size,h=r.data[f],p=r.data[f+1],d=i*s.size;let m;_[0]=s.data[d]*c,_[1]=s.data[d+1]*l,a.textureIsSignedDistanceField&&(m=a.outlineSize*t.screenToWorldRatio/2),M(e,h,p,_,u,m,a,o)&&n()}},l.intersectHudGeometry=function(t,e,n,i,r,c){if(!i.options.selectionMode||!i.options.hud)return;if(A.isInstanceHidden(e))return;const l=t.data,u=this.params;let f=1,p=1;if(h.fromMat4(N,n),c){const t=c(X);f=t[0],p=t[5],function(t){const e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],c=t[7],l=t[8],u=1/Math.sqrt(e*e+n*n+i*i),f=1/Math.sqrt(r*r+s*s+a*a),h=1/Math.sqrt(o*o+c*c+l*l);t[0]=e*u,t[1]=n*u,t[2]=i*u,t[3]=r*f,t[4]=s*f,t[5]=a*f,t[6]=o*h,t[7]=c*h,t[8]=l*h}(N)}const d=l.getVertexAttr()[g.VertexAttrConstants.POSITION],m=l.getVertexAttr()[g.VertexAttrConstants.SIZE],S=l.getVertexAttr()[g.VertexAttrConstants.NORMAL],v=l.getVertexAttr()[g.VertexAttrConstants.AUXPOS1];g.assert(d.size>=3);const O=i.point,C=i.camera,P=V.calculateAnchorPosForRendering(u);f*=C.pixelRatio,p*=C.pixelRatio;const y="screen"===this.params.centerOffsetUnits;for(let t=0;t<d.data.length/d.size;t++){const e=t*d.size;a.set(U,d.data[e],d.data[e+1],d.data[e+2]),a.transformMat4(U,U,n);const c=t*m.size;_[0]=m.data[c]*f,_[1]=m.data[c+1]*p,a.transformMat4(U,U,C.viewMatrix);const l=t*v.size;if(a.set(F,v.data[l+0],v.data[l+1],v.data[l+2]),!y&&(U[0]+=F[0],U[1]+=F[1],0!==F[2])){const t=F[2];a.normalize(F,U),a.subtract(U,U,a.scale(F,F,t))}const h=t*S.size;if(a.set(D,S.data[h],S.data[h+1],S.data[h+2]),this.normalAndViewAngle(D,N,C,G),this.applyVerticalOffsetTransformationView(U,G,C,I),C.applyProjection(U,R),R[0]>-1){let t=Math.floor(R[0])+this.params.screenOffset[0],e=Math.floor(R[1])+this.params.screenOffset[1];y&&(t+=F[0],0!==F[1]&&(e+=x.applyScaleFactor(F[1],I.factorAlignment))),x.applyPrecomputedScaleFactor(_,I.factor,_);const n=k*C.pixelRatio;let c;if(u.textureIsSignedDistanceField&&(c=u.outlineSize*C.pixelRatio/2),M(O,t,e,_,n,c,u,P)){const t=i.ray;if(a.transformMat4(L,U,o.invert(B,C.viewMatrix)),R[0]=O[0],R[1]=O[1],C.unprojectFromRenderScreen(R,U)){const e=s.create();a.copy(e,t.direction);const n=1/a.length(e);a.scale(e,e,n);r(a.distance(t.origin,U)*n,e,-1,1,!0,L)}}}}},l.computeAttachmentOrigin=function(t,e){const n=t.data,i="getVertexAttr"in n?n.getVertexAttr():"vertexAttr"in n?n.vertexAttr:null;if(!i)return null;const r=g.VertexAttrConstants.POSITION,s=i[r],a="getIndices"in n?n.getIndices(r):"indices"in n?n.indices[r]:null;return m.computeAttachmentOriginPoints(s,a,e)},l.createBufferWriter=function(){return new K(this)},l.normalAndViewAngle=function(t,e,n,i){return S.isMat4(e)&&(e=h.fromMat4(H,e)),a.transformMat3(i.normal,t,e),a.transformMat4(i.normal,i.normal,n.viewInverseTransposeMatrix),i.cosAngle=a.dot(E,Z),i},l.updateScaleInfo=function(t,e,n){const i=this.params;i.screenSizePerspective?x.precomputeScaleFactor(n,e,i.screenSizePerspective,t.factor):(t.factor.scale=1,t.factor.factor=0,t.factor.minPixelSize=0,t.factor.paddingPixels=0),i.screenSizePerspectiveAlignment?x.precomputeScaleFactor(n,e,i.screenSizePerspectiveAlignment,t.factorAlignment):(t.factorAlignment.factor=t.factor.factor,t.factorAlignment.scale=t.factor.scale,t.factorAlignment.minPixelSize=t.factor.minPixelSize,t.factorAlignment.paddingPixels=t.factor.paddingPixels)},l.applyShaderOffsetsView=function(t,e,n,i,r,s,a){const o=this.normalAndViewAngle(e,n,r,G);return this.applyVerticalGroundOffsetView(t,o,r,a),this.applyVerticalOffsetTransformationView(a,o,r,s),this.applyPolygonOffsetView(a,o,i[3],r,a),this.applyCenterOffsetView(a,i,a),a},l.applyShaderOffsetsNDC=function(t,e,i,r,s){return this.applyCenterOffsetNDC(t,e,i,r),n.isSome(s)&&a.copy(s,r),this.applyPolygonOffsetNDC(r,e,i,r),r},l.applyPolygonOffsetView=function(t,e,n,r,s){const o=r.aboveGround?1:-1;let c=i.sign(n);0===c&&(c=o);const l=o*c;if(this.params.shaderPolygonOffset<=0)return a.copy(s,t);const u=i.clamp(Math.abs(e.cosAngle),.01,1),f=1-Math.sqrt(1-u*u)/u/r.viewport[2];return l>0?a.scale(s,t,f):a.scale(s,t,1/f),s},l.applyVerticalGroundOffsetView=function(t,e,n,i){const r=a.length(t),s=n.aboveGround?1:-1,o=.5*n.computeRenderPixelSizeAtDist(r),c=a.scale(U,e.normal,s*o);return a.add(i,t,c),i},l.applyVerticalOffsetTransformationView=function(t,e,n,i){const r=this.params;if(!r.verticalOffset||!r.verticalOffset.screenLength){if(r.screenSizePerspective||r.screenSizePerspectiveAlignment){const n=a.length(t);this.updateScaleInfo(i,n,e.cosAngle)}else i.factor.scale=1,i.factorAlignment.scale=1;return t}const s=a.length(t),o=r.screenSizePerspectiveAlignment||r.screenSizePerspective,c=O.verticalOffsetAtDistance(n,s,r.verticalOffset,e.cosAngle,o);return this.updateScaleInfo(i,s,e.cosAngle),a.scale(e.normal,e.normal,c),a.add(t,t,e.normal)},l.applyCenterOffsetView=function(t,e,n){const i="screen"!==this.params.centerOffsetUnits;return n!==t&&a.copy(n,t),i&&(n[0]+=e[0],n[1]+=e[1],e[2]&&(a.normalize(D,n),a.add(n,n,a.scale(D,D,e[2])))),n},l.applyCenterOffsetNDC=function(t,e,n,i){const r="screen"!==this.params.centerOffsetUnits;return i!==t&&a.copy(i,t),r||(i[0]+=e[0]/n.fullWidth*2,i[1]+=e[1]/n.fullHeight*2),i},l.applyPolygonOffsetNDC=function(t,e,n,r){const s=this.params.shaderPolygonOffset;if(t!==r&&a.copy(r,t),s){const t=n.aboveGround?1:-1,a=t*i.sign(e[3]);r[2]-=(a||t)*s}return r},l.getGLMaterial=function(t){return 0===t.output||7===t.output?new T(t):4===t.output?new z(t):void 0},l.calculateRelativeScreenBounds=function(t,e,n=c.create()){return function(t,e,n,i=w){p.copy(i,t.anchorPos),i[0]*=-e[0],i[1]*=-e[1],i[0]+=t.screenOffset[0]*n,i[1]+=t.screenOffset[1]*n}(this.params,t,e,n),n[2]=n[0]+t[0],n[3]=n[1]+t[1],n},r}(C.Material),q=function(t){function n(e){var n;return(n=t.call(this,{...e,...e.material.params})||this).updateParameters(),n}e._inheritsLoose(n,t);var i=n.prototype;return i.beginSlot=function(t){return t===(this.material.params.drawInSecondSlot?19:18)},i.updateParameters=function(t){this.updateTexture(this.material.params.textureId),this.selectProgram(t)},i.selectProgram=function(t){this.technique=this.techniqueRep.acquireAndReleaseExisting(y.HUDMaterialTechnique,this.material.getTechniqueConfig(this.output,t),this.technique)},i.ensureParameters=function(t){this.updateParameters(t)},i.bind=function(t,e){t.bindProgram(this.technique.program),this.bindTexture(t,this.technique.program),this.bindTextureScale(t,this.technique.program),this.technique.bindPass(t,this.material.params,e)},n}(v),T=function(t){function n(e){var n;return(n=t.call(this,e)||this).isOcclusionSlot=!1,n}e._inheritsLoose(n,t);var i=n.prototype;return i.beginSlot=function(t){const e=this.material.params.drawInSecondSlot?19:18;return this.material.params.occlusionTest?(this.isOcclusionSlot=12===t,12===t||t===e):(this.isOcclusionSlot=!1,t===e)},i.getTechnique=function(){return this.isOcclusionSlot?this.occlusionTechnique:this.technique},i.selectProgram=function(t){this.technique=this.techniqueRep.acquireAndReleaseExisting(y.HUDMaterialTechnique,this.material.getTechniqueConfig(this.output,t),this.technique),this.occlusionTechnique=this.techniqueRep.acquireAndReleaseExisting(y.HUDMaterialTechnique,this.material.getTechniqueConfig(6,t),this.occlusionTechnique)},i.bind=function(t,e){const n=this.getTechnique();t.bindProgram(n.program),this.isOcclusionSlot||(this.bindTexture(t,n.program),this.bindTextureScale(t,n.program)),n.bindPass(t,this.material.params,e)},n}(q),z=function(t){function n(e){return t.call(this,{...e,output:4})||this}return e._inheritsLoose(n,t),n}(q);function M(t,e,n,i,r,s,a,o){let c=e-r-(o[0]>0?i[0]*o[0]:0),l=c+i[0]+2*r,u=n-r-(o[1]>0?i[1]*o[1]:0),f=u+i[1]+2*r;if(a.textureIsSignedDistanceField){const t=a.distanceFieldBoundingBox;c+=i[0]*t[0],u+=i[1]*t[1],l-=i[0]*(1-t[2]),f-=i[1]*(1-t[3]),c-=s,l+=s,u-=s,f+=s}return t[0]>c&&t[0]<l&&t[1]>u&&t[1]<f}const I={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},w=f.create(),U=s.create(),D=s.create(),R=r.createRenderScreenPointArray3(),E=s.create(),L=s.create(),N=l.create(),H=l.create(),B=u.create(),F=s.create(),G={normal:E,cosAngle:0},X=u.create(),k=1,W=2,_=[0,0],Z=s.fromValues(0,0,1),j={texCoordScale:[1,1],occlusionTest:!0,binaryHighlightOcclusion:!0,drawInSecondSlot:!1,color:[1,1,1,1],outlineColor:[1,1,1,1],outlineSize:0,textureIsSignedDistanceField:!1,distanceFieldBoundingBox:null,vvSizeEnabled:!1,vvSizeMinSize:[1,1,1],vvSizeMaxSize:[100,100,100],vvSizeOffset:[0,0,0],vvSizeFactor:[1,1,1],vvColorEnabled:!1,vvColorValues:[0,0,0,0,0,0,0,0],vvColorColors:[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],screenOffset:[0,0],verticalOffset:null,screenSizePerspective:null,screenSizePerspectiveAlignment:null,slicePlaneEnabled:!1,anchorPos:f.fromValues(.5,.5),shaderPolygonOffset:1e-5,polygonOffset:!1,textureId:null,centerOffsetUnits:"world",depthEnabled:!0,pixelSnappingEnabled:!0,debugDrawBorder:!1,isDraped:!1,...C.materialParametersDefaults},J=d.newLayout().vec3f(g.VertexAttrConstants.POSITION).vec3f(g.VertexAttrConstants.NORMAL).vec2f(g.VertexAttrConstants.UV0).vec4u8(g.VertexAttrConstants.COLOR).vec2f(g.VertexAttrConstants.SIZE).vec4f(g.VertexAttrConstants.AUXPOS1).vec4f(g.VertexAttrConstants.AUXPOS2);let K=function(){function t(t){this.material=t,this.vertexBufferLayout=J}var e=t.prototype;return e.allocate=function(t){return this.vertexBufferLayout.createBuffer(t)},e.elementCount=function(t){return 6*t.indices[g.VertexAttrConstants.POSITION].length},e.write=function(t,e,n,i){P.writePosition(e.indices[g.VertexAttrConstants.POSITION],e.vertexAttr[g.VertexAttrConstants.POSITION].data,t.transformation,n.position,i,6),P.writeNormal(e.indices[g.VertexAttrConstants.NORMAL],e.vertexAttr[g.VertexAttrConstants.NORMAL].data,t.invTranspTransformation,n.normal,i,6);{const t=e.vertexAttr[g.VertexAttrConstants.UV0].data;let r,s,a,o;if(null==t||t.length<4){const t=this.material.params;r=0,s=0,a=t.texCoordScale[0],o=t.texCoordScale[1]}else r=t[0],s=t[1],a=t[2],o=t[3];a=Math.min(1.99999,a+1),o=Math.min(1.99999,o+1);const c=e.indices[g.VertexAttrConstants.POSITION].length,l=n.uv0;let u=i;for(let t=0;t<c;++t)l.set(u,0,r),l.set(u,1,s),u+=1,l.set(u,0,a),l.set(u,1,s),u+=1,l.set(u,0,a),l.set(u,1,o),u+=1,l.set(u,0,a),l.set(u,1,o),u+=1,l.set(u,0,r),l.set(u,1,o),u+=1,l.set(u,0,r),l.set(u,1,s),u+=1}P.writeColor(e.indices[g.VertexAttrConstants.COLOR],e.vertexAttr[g.VertexAttrConstants.COLOR].data,4,n.color,i,6);{const t=e.indices[g.VertexAttrConstants.SIZE],r=e.vertexAttr[g.VertexAttrConstants.SIZE].data,s=t.length,a=n.size;let o=i;for(let e=0;e<s;++e){const n=r[2*t[e]],i=r[2*t[e]+1];for(let t=0;t<6;++t)a.set(o,0,n),a.set(o,1,i),o+=1}}e.indices[g.VertexAttrConstants.AUXPOS1]&&e.vertexAttr[g.VertexAttrConstants.AUXPOS1]&&P.writeBufferVec4(e.indices[g.VertexAttrConstants.AUXPOS1],e.vertexAttr[g.VertexAttrConstants.AUXPOS1].data,n.auxpos1,i,6),e.indices[g.VertexAttrConstants.AUXPOS2]&&e.vertexAttr[g.VertexAttrConstants.AUXPOS2]&&P.writeBufferVec4(e.indices[g.VertexAttrConstants.AUXPOS2],e.vertexAttr[g.VertexAttrConstants.AUXPOS2].data,n.auxpos2,i,6)},t}();t.HUDMaterial=b,Object.defineProperty(t,"__esModule",{value:!0})}));
