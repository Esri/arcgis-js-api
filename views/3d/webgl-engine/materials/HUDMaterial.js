/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/mathUtils","../../../../core/screenUtils","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../chunks/mat4","../../../../geometry/support/aaBoundingRect","../../../../chunks/mat3f64","../../../../chunks/mat4f64","../../../../chunks/vec2f64","../../../../chunks/mat3","../../../../chunks/vec2","../../support/buffer/InterleavedLayout","../lib/Util","../lib/geometryDataUtils","./renderers/utils","../lib/screenSizePerspectiveUtils","../../../../core/libs/gl-matrix-2/types/mat4","../lib/GLMaterialTexture","./internal/MaterialUtil","../lib/Material","./internal/bufferWriterUtils","../../../../chunks/HUDMaterial.glsl","../shaders/HUDMaterialTechnique"],(function(e,t,i,n,s,r,a,o,c,l,u,f,h,p,d,g,m,v,x,S,b,y,P,q,A,O){"use strict";let z=function(e){function s(t){var i;return(i=e.call(this,t,X)||this).techniqueConfig=new O.HUDMaterialTechniqueConfiguration,i}t._inheritsLoose(s,e);var l=s.prototype;return l.getTechniqueConfig=function(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.verticalOffset=!!this.params.verticalOffset,this.techniqueConfig.screenSizePerspective=!!this.params.screenSizePerspective,this.techniqueConfig.screenCenterOffsetUnitsEnabled="screen"===this.params.centerOffsetUnits?1:0,this.techniqueConfig.polygonOffsetEnabled=this.params.polygonOffset,this.techniqueConfig.isDraped=this.params.isDraped,this.techniqueConfig.occlusionTestEnabled=this.params.occlusionTest,this.techniqueConfig.pixelSnappingEnabled=this.params.pixelSnappingEnabled,this.techniqueConfig.sdf=this.params.textureIsSignedDistanceField,this.techniqueConfig.vvSize=!!this.params.vvSizeEnabled,this.techniqueConfig.vvColor=!!this.params.vvColorEnabled,0===e&&(this.techniqueConfig.debugDrawBorder=!!this.params.debugDrawBorder),4===e&&(this.techniqueConfig.binaryHighlightOcclusion=this.params.binaryHighlightOcclusion),this.techniqueConfig.depthEnabled=this.params.depthEnabled,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.multipassGeometryEnabled=!!t&&t.multipassGeometryEnabled,this.techniqueConfig},l.intersect=function(e,t,i,n,s,r,a,o,c){c?this.intersectDrapedHudGeometry(e,r,a,o):this.intersectHudGeometry(e,t,i,n,a,o)},l.intersectDrapedHudGeometry=function(e,t,n,s){const r=e.vertexAttributes.get("position"),a=e.vertexAttributes.get("size"),o=this.params,c=A.calculateAnchorPosForRendering(o);let l=1,u=1;if(i.isSome(s)){const e=s(N);l=e[0],u=e[5]}l*=e.screenToWorldRatio,u*=e.screenToWorldRatio;const f=J*e.screenToWorldRatio;for(let i=0;i<r.data.length/r.size;i++){const s=i*r.size,h=r.data[s],p=r.data[s+1],d=i*a.size;let g;K[0]=a.data[d]*l,K[1]=a.data[d+1]*u,o.textureIsSignedDistanceField&&(g=o.outlineSize*e.screenToWorldRatio/2),V(t,h,p,K,f,g,o,c)&&n()}},l.intersectHudGeometry=function(e,t,n,s,c,l){if(!s.options.selectionMode||!s.options.hud)return;if(v.isInstanceHidden(t))return;const u=this.params;let f=1,p=1;if(h.fromMat4(G,n),i.isSome(l)){const e=l(N);f=e[0],p=e[5],D(G)}const d=e.vertexAttributes.get("position"),m=e.vertexAttributes.get("size"),S=e.vertexAttributes.get("normal"),b=e.vertexAttributes.get("auxpos1");g.assert(d.size>=3);const y=s.point,P=s.camera,q=A.calculateAnchorPosForRendering(u);f*=P.pixelRatio,p*=P.pixelRatio;const O="screen"===this.params.centerOffsetUnits;for(let i=0;i<d.data.length/d.size;i++){const e=i*d.size;a.set(U,d.data[e],d.data[e+1],d.data[e+2]),a.transformMat4(U,U,n);const t=i*m.size;K[0]=m.data[t]*f,K[1]=m.data[t+1]*p,a.transformMat4(U,U,P.viewMatrix);const l=i*b.size;if(a.set(W,b.data[l+0],b.data[l+1],b.data[l+2]),!O&&(U[0]+=W[0],U[1]+=W[1],0!==W[2])){const e=W[2];a.normalize(W,U),a.subtract(U,U,a.scale(W,W,e))}const h=i*S.size;if(a.set(H,S.data[h],S.data[h+1],S.data[h+2]),this.normalAndViewAngle(H,G,P,_),this.applyVerticalOffsetTransformationView(U,_,P,E),P.applyProjection(U,B),B[0]>-1){let e=Math.floor(B[0])+this.params.screenOffset[0],t=Math.floor(B[1])+this.params.screenOffset[1];O&&(e+=W[0],0!==W[1]&&(t+=x.applyScaleFactor(W[1],E.factorAlignment))),x.applyPrecomputedScaleFactor(K,E.factor,K);const i=j*P.pixelRatio;let n;if(u.textureIsSignedDistanceField&&(n=u.outlineSize*P.pixelRatio/2),V(y,e,t,K,i,n,u,q)){const e=s.ray;if(a.transformMat4(F,U,o.invert(k,P.viewMatrix)),B[0]=y[0],B[1]=y[1],P.unprojectFromRenderScreen(B,U)){const t=r.create();a.copy(t,e.direction);const i=1/a.length(t);a.scale(t,t,i);c(a.distance(e.origin,U)*i,t,-1,1,!0,F)}}}}},l.computeAttachmentOrigin=function(e,t){const i=e.vertexAttributes;if(!i)return!1;const n=i.get("position"),s=e.indices.get("position");return m.computeAttachmentOriginPoints(n,s,t)},l.createBufferWriter=function(){return new Z(this)},l.normalAndViewAngle=function(e,t,i,n){return S.isMat4(t)&&(t=h.fromMat4(L,t)),a.transformMat3(n.normal,e,t),a.transformMat4(n.normal,n.normal,i.viewInverseTransposeMatrix),n.cosAngle=a.dot(I,Q),n},l.updateScaleInfo=function(e,t,i){const n=this.params;n.screenSizePerspective?x.precomputeScaleFactor(i,t,n.screenSizePerspective,e.factor):(e.factor.scale=1,e.factor.factor=0,e.factor.minPixelSize=0,e.factor.paddingPixels=0),n.screenSizePerspectiveAlignment?x.precomputeScaleFactor(i,t,n.screenSizePerspectiveAlignment,e.factorAlignment):(e.factorAlignment.factor=e.factor.factor,e.factorAlignment.scale=e.factor.scale,e.factorAlignment.minPixelSize=e.factor.minPixelSize,e.factorAlignment.paddingPixels=e.factor.paddingPixels)},l.applyShaderOffsetsView=function(e,t,i,n,s,r,a){const o=this.normalAndViewAngle(t,i,s,_);return this.applyVerticalGroundOffsetView(e,o,s,a),this.applyVerticalOffsetTransformationView(a,o,s,r),this.applyPolygonOffsetView(a,o,n[3],s,a),this.applyCenterOffsetView(a,n,a),a},l.applyShaderOffsetsNDC=function(e,t,n,s,r){return this.applyCenterOffsetNDC(e,t,n,s),i.isSome(r)&&a.copy(r,s),this.applyPolygonOffsetNDC(s,t,n,s),s},l.applyPolygonOffsetView=function(e,t,i,s,r){const o=s.aboveGround?1:-1;let c=n.sign(i);0===c&&(c=o);const l=o*c;if(this.params.shaderPolygonOffset<=0)return a.copy(r,e);const u=n.clamp(Math.abs(t.cosAngle),.01,1),f=1-Math.sqrt(1-u*u)/u/s.viewport[2];return l>0?a.scale(r,e,f):a.scale(r,e,1/f),r},l.applyVerticalGroundOffsetView=function(e,t,i,n){const s=a.length(e),r=i.aboveGround?1:-1,o=.5*i.computeRenderPixelSizeAtDist(s),c=a.scale(U,t.normal,r*o);return a.add(n,e,c),n},l.applyVerticalOffsetTransformationView=function(e,t,i,n){const s=this.params;if(!s.verticalOffset||!s.verticalOffset.screenLength){if(s.screenSizePerspective||s.screenSizePerspectiveAlignment){const i=a.length(e);this.updateScaleInfo(n,i,t.cosAngle)}else n.factor.scale=1,n.factorAlignment.scale=1;return e}const r=a.length(e),o=s.screenSizePerspectiveAlignment||s.screenSizePerspective,c=y.verticalOffsetAtDistance(i,r,s.verticalOffset,t.cosAngle,o);return this.updateScaleInfo(n,r,t.cosAngle),a.scale(t.normal,t.normal,c),a.add(e,e,t.normal)},l.applyCenterOffsetView=function(e,t,i){const n="screen"!==this.params.centerOffsetUnits;return i!==e&&a.copy(i,e),n&&(i[0]+=t[0],i[1]+=t[1],t[2]&&(a.normalize(H,i),a.add(i,i,a.scale(H,H,t[2])))),i},l.applyCenterOffsetNDC=function(e,t,i,n){const s="screen"!==this.params.centerOffsetUnits;return n!==e&&a.copy(n,e),s||(n[0]+=t[0]/i.fullWidth*2,n[1]+=t[1]/i.fullHeight*2),n},l.applyPolygonOffsetNDC=function(e,t,i,s){const r=this.params.shaderPolygonOffset;if(e!==s&&a.copy(s,e),r){const e=i.aboveGround?1:-1,a=e*n.sign(t[3]);s[2]-=(a||e)*r}return s},l.getGLMaterial=function(e){return 0===e.output||7===e.output?new M(e):4===e.output?new T(e):void 0},l.calculateRelativeScreenBounds=function(e,t,i=c.create()){return w(this.params,e,t,i),i[2]=i[0]+e[0],i[3]=i[1]+e[1],i},s}(P.Material),C=function(e){function i(t){var i;return(i=e.call(this,{...t,...t.material.params})||this).updateParameters(),i}t._inheritsLoose(i,e);var n=i.prototype;return n.beginSlot=function(e){return e===(this.material.params.drawInSecondSlot?19:18)},n.updateParameters=function(e){this.updateTexture(this.material.params.textureId),this.selectProgram(e)},n.selectProgram=function(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(O.HUDMaterialTechnique,this.material.getTechniqueConfig(this.output,e),this.technique)},n.ensureParameters=function(e){this.updateParameters(e)},n.bind=function(e,t){e.bindProgram(this.technique.program),this.bindTexture(e,this.technique.program),this.bindTextureScale(e,this.technique.program),this.technique.bindPass(e,this.material.params,t)},i}(b),M=function(e){function i(t){var i;return(i=e.call(this,t)||this).isOcclusionSlot=!1,i}t._inheritsLoose(i,e);var n=i.prototype;return n.beginSlot=function(e){const t=this.material.params.drawInSecondSlot?19:18;return this.material.params.occlusionTest?(this.isOcclusionSlot=12===e,12===e||e===t):(this.isOcclusionSlot=!1,e===t)},n.getTechnique=function(){return this.isOcclusionSlot?this.occlusionTechnique:this.technique},n.selectProgram=function(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(O.HUDMaterialTechnique,this.material.getTechniqueConfig(this.output,e),this.technique),this.occlusionTechnique=this.techniqueRep.acquireAndReleaseExisting(O.HUDMaterialTechnique,this.material.getTechniqueConfig(6,e),this.occlusionTechnique)},n.bind=function(e,t){const i=this.getTechnique();e.bindProgram(i.program),this.isOcclusionSlot||(this.bindTexture(e,i.program),this.bindTextureScale(e,i.program)),i.bindPass(e,this.material.params,t)},i}(C),T=function(e){function i(t){return e.call(this,{...t,output:4})||this}return t._inheritsLoose(i,e),i}(C);function w(e,t,i,n=R){return p.copy(n,e.anchorPos),n[0]*=-t[0],n[1]*=-t[1],n[0]+=e.screenOffset[0]*i,n[1]+=e.screenOffset[1]*i,n}function D(e){const t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],o=e[6],c=e[7],l=e[8],u=1/Math.sqrt(t*t+i*i+n*n),f=1/Math.sqrt(s*s+r*r+a*a),h=1/Math.sqrt(o*o+c*c+l*l);return e[0]=t*u,e[1]=i*u,e[2]=n*u,e[3]=s*f,e[4]=r*f,e[5]=a*f,e[6]=o*h,e[7]=c*h,e[8]=l*h,e}function V(e,t,i,n,s,r,a,o){let c=t-s-(o[0]>0?n[0]*o[0]:0),l=c+n[0]+2*s,u=i-s-(o[1]>0?n[1]*o[1]:0),f=u+n[1]+2*s;if(a.textureIsSignedDistanceField){const e=a.distanceFieldBoundingBox;c+=n[0]*e[0],u+=n[1]*e[1],l-=n[0]*(1-e[2]),f-=n[1]*(1-e[3]),c-=r,l+=r,u-=r,f+=r}return e[0]>c&&e[0]<l&&e[1]>u&&e[1]<f}const E={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},R=f.create(),U=r.create(),H=r.create(),B=s.createRenderScreenPointArray3(),I=r.create(),F=r.create(),G=l.create(),L=l.create(),k=u.create(),W=r.create(),_={normal:I,cosAngle:0},N=u.create(),j=1,J=2,K=[0,0],Q=r.fromValues(0,0,1),X={texCoordScale:[1,1],occlusionTest:!0,binaryHighlightOcclusion:!0,drawInSecondSlot:!1,color:[1,1,1,1],outlineColor:[1,1,1,1],outlineSize:0,textureIsSignedDistanceField:!1,distanceFieldBoundingBox:null,vvSizeEnabled:!1,vvSizeMinSize:[1,1,1],vvSizeMaxSize:[100,100,100],vvSizeOffset:[0,0,0],vvSizeFactor:[1,1,1],vvColorEnabled:!1,vvColorValues:[0,0,0,0,0,0,0,0],vvColorColors:[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],screenOffset:[0,0],verticalOffset:null,screenSizePerspective:null,screenSizePerspectiveAlignment:null,slicePlaneEnabled:!1,anchorPos:f.fromValues(.5,.5),shaderPolygonOffset:1e-5,polygonOffset:!1,textureId:null,centerOffsetUnits:"world",depthEnabled:!0,pixelSnappingEnabled:!0,debugDrawBorder:!1,isDraped:!1,...P.materialParametersDefaults},Y=d.newLayout().vec3f("position").vec3f("normal").vec2f("uv0").vec4u8("color").vec2f("size").vec4f("auxpos1").vec4f("auxpos2");let Z=function(){function e(e){this.material=e,this.vertexBufferLayout=Y}var t=e.prototype;return t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){return 6*e.indices.get("position").length},t.write=function(e,t,i,n){q.writePosition(t.indices.get("position"),t.vertexAttributes.get("position").data,e.transformation,i.position,n,6),q.writeNormal(t.indices.get("normal"),t.vertexAttributes.get("normal").data,e.invTranspTransformation,i.normal,n,6);{const e=t.vertexAttributes.get("uv0").data;let s,r,a,o;if(null==e||e.length<4){const e=this.material.params;s=0,r=0,a=e.texCoordScale[0],o=e.texCoordScale[1]}else s=e[0],r=e[1],a=e[2],o=e[3];a=Math.min(1.99999,a+1),o=Math.min(1.99999,o+1);const c=t.indices.get("position").length,l=i.uv0;let u=n;for(let t=0;t<c;++t)l.set(u,0,s),l.set(u,1,r),u+=1,l.set(u,0,a),l.set(u,1,r),u+=1,l.set(u,0,a),l.set(u,1,o),u+=1,l.set(u,0,a),l.set(u,1,o),u+=1,l.set(u,0,s),l.set(u,1,o),u+=1,l.set(u,0,s),l.set(u,1,r),u+=1}q.writeColor(t.indices.get("color"),t.vertexAttributes.get("color").data,4,i.color,n,6);{const e=t.indices.get("size"),s=t.vertexAttributes.get("size").data,r=e.length,a=i.size;let o=n;for(let t=0;t<r;++t){const i=s[2*e[t]],n=s[2*e[t]+1];for(let e=0;e<6;++e)a.set(o,0,i),a.set(o,1,n),o+=1}}t.indices.get("auxpos1")&&t.vertexAttributes.get("auxpos1")&&q.writeBufferVec4(t.indices.get("auxpos1"),t.vertexAttributes.get("auxpos1").data,i.auxpos1,n,6),t.indices.get("auxpos2")&&t.vertexAttributes.get("auxpos2")&&q.writeBufferVec4(t.indices.get("auxpos2"),t.vertexAttributes.get("auxpos2").data,i.auxpos2,n,6)},e}();e.HUDMaterial=z,Object.defineProperty(e,"__esModule",{value:!0})}));
