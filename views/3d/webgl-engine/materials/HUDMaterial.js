/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/mathUtils","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/mat3","../../../../chunks/mat3f64","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec2","../../../../chunks/vec2f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../core/libs/gl-matrix-2/types/mat4","../../../../geometry/support/aaBoundingRect","../../support/buffer/InterleavedLayout","../lib/geometryDataUtils","../lib/GLMaterials","../lib/GLMaterialTexture","../lib/Material","../lib/screenSizePerspectiveUtils","../lib/Util","./internal/bufferWriterUtils","./internal/MaterialUtil","./renderers/utils","../../../../chunks/HUDMaterial.glsl","../shaders/HUDMaterialTechnique"],(function(e,t,i,n,r,s,a,o,c,l,u,f,p,h,d,m,g,v,x,S,b,y,P,A,O,z,C){"use strict";let M=function(e){function r(t){var i;return(i=e.call(this,t,X)||this).techniqueConfig=new C.HUDMaterialTechniqueConfiguration,i}t._inheritsLoose(r,e);var a=r.prototype;return a.getTechniqueConfig=function(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.verticalOffset=!!this.parameters.verticalOffset,this.techniqueConfig.screenSizePerspective=!!this.parameters.screenSizePerspective,this.techniqueConfig.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits?1:0,this.techniqueConfig.polygonOffsetEnabled=this.parameters.polygonOffset,this.techniqueConfig.isDraped=this.parameters.isDraped,this.techniqueConfig.occlusionTestEnabled=this.parameters.occlusionTest,this.techniqueConfig.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled,this.techniqueConfig.sdf=this.parameters.textureIsSignedDistanceField,this.techniqueConfig.vvSize=!!this.parameters.vvSizeEnabled,this.techniqueConfig.vvColor=!!this.parameters.vvColorEnabled,0===e&&(this.techniqueConfig.debugDrawBorder=!!this.parameters.debugDrawBorder),4===e&&(this.techniqueConfig.binaryHighlightOcclusion=this.parameters.binaryHighlightOcclusion),this.techniqueConfig.depthEnabled=this.parameters.depthEnabled,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.multipassGeometryEnabled=t.multipassGeometryEnabled,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig},a.intersect=function(e,t,i,r,s,a,o,c,l){n.isSome(l)?this.intersectDrapedHudGeometry(e,a,o,c,l):this.intersectHudGeometry(e,t,i,r,o,c)},a.intersectDrapedHudGeometry=function(e,t,i,r,s){const a=e.vertexAttributes.get("position"),o=e.vertexAttributes.get("size"),c=this.parameters,l=z.calculateAnchorPosForRendering(c);let u=1,f=1;if(n.isSome(r)){const e=r(N);u=e[0],f=e[5]}u*=e.screenToWorldRatio,f*=e.screenToWorldRatio;const p=J*e.screenToWorldRatio;for(let n=0;n<a.data.length/a.size;n++){const r=n*a.size,h=a.data[r],d=a.data[r+1],m=n*o.size;let g;K[0]=o.data[m]*u,K[1]=o.data[m+1]*f,c.textureIsSignedDistanceField&&(g=c.outlineSize*e.screenToWorldRatio/2),V(t,h,d,K,p,g,c,l)&&i(s.dist,s.normal,-1,!0)}},a.intersectHudGeometry=function(e,t,i,r,a,c){if(!r.options.selectionMode||!r.options.hud||O.isInstanceHidden(t))return;const l=this.parameters;let u=1,h=1;if(s.fromMat4(R,i),n.isSome(c)){const e=c(N);u=e[0],h=e[5],D(R)}const d=e.vertexAttributes.get("position"),m=e.vertexAttributes.get("size"),g=e.vertexAttributes.get("normal"),v=e.vertexAttributes.get("auxpos1");y.assert(d.size>=3);const x=r.point,S=r.camera,P=z.calculateAnchorPosForRendering(l);u*=S.pixelRatio,h*=S.pixelRatio;const A="screen"===this.parameters.centerOffsetUnits;for(let n=0;n<d.data.length/d.size;n++){const e=n*d.size;f.set(B,d.data[e],d.data[e+1],d.data[e+2]),f.transformMat4(B,B,i);const t=n*m.size;K[0]=m.data[t]*u,K[1]=m.data[t+1]*h,f.transformMat4(B,B,S.viewMatrix);const s=n*v.size;if(f.set(k,v.data[s+0],v.data[s+1],v.data[s+2]),!A&&(B[0]+=k[0],B[1]+=k[1],0!==k[2])){const e=k[2];f.normalize(k,B),f.subtract(B,B,f.scale(k,k,e))}const c=n*g.size;if(f.set(F,g.data[c],g.data[c+1],g.data[c+2]),this.normalAndViewAngle(F,R,S,W),this.applyVerticalOffsetTransformationView(B,W,S,E),S.applyProjection(B,G),G[0]>-1){let e=Math.floor(G[0])+this.parameters.screenOffset[0],t=Math.floor(G[1])+this.parameters.screenOffset[1];A&&(e+=k[0],0!==k[1]&&(t+=b.applyScaleFactor(k[1],E.factorAlignment))),b.applyPrecomputedScaleFactor(K,E.factor,K);const i=j*S.pixelRatio;let n;if(l.textureIsSignedDistanceField&&(n=l.outlineSize*S.pixelRatio/2),V(x,e,t,K,i,n,l,P)){const e=r.ray;if(f.transformMat4(I,B,o.invert(L,S.viewMatrix)),G[0]=x[0],G[1]=x[1],S.unprojectFromRenderScreen(G,B)){const t=p.create();f.copy(t,e.direction);const i=1/f.length(t);f.scale(t,t,i);a(f.distance(e.origin,B)*i,t,-1,!0,1,I)}}}}},a.computeAttachmentOrigin=function(e,t){const i=e.vertexAttributes;if(!i)return!1;const n=i.get("position"),r=e.indices.get("position");return g.computeAttachmentOriginPoints(n,r,t)},a.createBufferWriter=function(){return new Z(this)},a.normalAndViewAngle=function(e,t,i,n){return h.isMat4(t)&&(t=s.fromMat4(_,t)),f.transformMat3(n.normal,e,t),f.transformMat4(n.normal,n.normal,i.viewInverseTransposeMatrix),n.cosAngle=f.dot(H,Q),n},a.updateScaleInfo=function(e,t,i){const n=this.parameters;n.screenSizePerspective?b.precomputeScaleFactor(i,t,n.screenSizePerspective,e.factor):(e.factor.scale=1,e.factor.factor=0,e.factor.minPixelSize=0,e.factor.paddingPixels=0),n.screenSizePerspectiveAlignment?b.precomputeScaleFactor(i,t,n.screenSizePerspectiveAlignment,e.factorAlignment):(e.factorAlignment.factor=e.factor.factor,e.factorAlignment.scale=e.factor.scale,e.factorAlignment.minPixelSize=e.factor.minPixelSize,e.factorAlignment.paddingPixels=e.factor.paddingPixels)},a.applyShaderOffsetsView=function(e,t,i,n,r,s,a){const o=this.normalAndViewAngle(t,i,r,W);return this.applyVerticalGroundOffsetView(e,o,r,a),this.applyVerticalOffsetTransformationView(a,o,r,s),this.applyPolygonOffsetView(a,o,n[3],r,a),this.applyCenterOffsetView(a,n,a),a},a.applyShaderOffsetsNDC=function(e,t,i,r,s){return this.applyCenterOffsetNDC(e,t,i,r),n.isSome(s)&&f.copy(s,r),this.applyPolygonOffsetNDC(r,t,i,r),r},a.applyPolygonOffsetView=function(e,t,n,r,s){const a=r.aboveGround?1:-1;let o=Math.sign(n);0===o&&(o=a);const c=a*o;if(this.parameters.shaderPolygonOffset<=0)return f.copy(s,e);const l=i.clamp(Math.abs(t.cosAngle),.01,1),u=1-Math.sqrt(1-l*l)/l/r.viewport[2];return c>0?f.scale(s,e,u):f.scale(s,e,1/u),s},a.applyVerticalGroundOffsetView=function(e,t,i,n){const r=f.length(e),s=i.aboveGround?1:-1,a=.5*i.computeRenderPixelSizeAtDist(r),o=f.scale(B,t.normal,s*a);return f.add(n,e,o),n},a.applyVerticalOffsetTransformationView=function(e,t,i,n){const r=this.parameters;if(!r.verticalOffset||!r.verticalOffset.screenLength){if(r.screenSizePerspective||r.screenSizePerspectiveAlignment){const i=f.length(e);this.updateScaleInfo(n,i,t.cosAngle)}else n.factor.scale=1,n.factorAlignment.scale=1;return e}const s=f.length(e),a=r.screenSizePerspectiveAlignment||r.screenSizePerspective,o=A.verticalOffsetAtDistance(i,s,r.verticalOffset,t.cosAngle,a);return this.updateScaleInfo(n,s,t.cosAngle),f.scale(t.normal,t.normal,o),f.add(e,e,t.normal)},a.applyCenterOffsetView=function(e,t,i){const n="screen"!==this.parameters.centerOffsetUnits;return i!==e&&f.copy(i,e),n&&(i[0]+=t[0],i[1]+=t[1],t[2]&&(f.normalize(F,i),f.add(i,i,f.scale(F,F,t[2])))),i},a.applyCenterOffsetNDC=function(e,t,i,n){const r="screen"!==this.parameters.centerOffsetUnits;return n!==e&&f.copy(n,e),r||(n[0]+=t[0]/i.fullWidth*2,n[1]+=t[1]/i.fullHeight*2),n},a.applyPolygonOffsetNDC=function(e,t,i,n){const r=this.parameters.shaderPolygonOffset;if(e!==n&&f.copy(n,e),r){const e=i.aboveGround?1:-1,s=e*Math.sign(t[3]);n[2]-=(s||e)*r}return n},a.requiresSlot=function(e,t){const i=v.outputFromPass(t);if(0===i||7===i){if(20===e)return!0;const t=this.parameters.drawInSecondSlot?17:16;return this.parameters.occlusionTest&&11===e||e===t}return e===(this.parameters.drawInSecondSlot?17:16)||20===e},a.createGLMaterial=function(e){return 0===e.output||7===e.output?new q(e):4===e.output?new w(e):null},a.calculateRelativeScreenBounds=function(e,t,i=d.create()){return T(this.parameters,e,t,i),i[2]=i[0]+e[0],i[3]=i[1]+e[1],i},r}(S.Material),w=function(e){function i(t){return e.call(this,{...t,...t.material.parameters})||this}t._inheritsLoose(i,e);var n=i.prototype;return n.updateParameters=function(e){return this.updateTexture(this._material.parameters.textureId),this.selectProgram(e)},n.selectProgram=function(e){return this.ensureTechnique(C.HUDMaterialTechnique,e)},n.beginSlot=function(e){return this.updateParameters(e)},n.bind=function(e,t){this.bindTextures(t.program),this.bindTextureScale(t.program),t.bindPass(this._material.parameters,e)},i}(x),q=function(e){function i(){return e.apply(this,arguments)||this}t._inheritsLoose(i,e);var n=i.prototype;return n.isOcclusionSlot=function(e){return 11===e.slot&&this._material.parameters.occlusionTest&&(0===this._output||7===this._output)},n.selectProgram=function(e){return this.ensureTechnique(C.HUDMaterialTechnique,e,this.isOcclusionSlot(e)?6:this._output)},n.bind=function(e,t){this.isOcclusionSlot(e)||(this.bindTextures(t.program),this.bindTextureScale(t.program)),t.bindPass(this._material.parameters,e)},i}(w);function T(e,t,i,n=U){return l.copy(n,e.anchorPos),n[0]*=-t[0],n[1]*=-t[1],n[0]+=e.screenOffset[0]*i,n[1]+=e.screenOffset[1]*i,n}function D(e){const t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],c=e[7],l=e[8],u=1/Math.sqrt(t*t+i*i+n*n),f=1/Math.sqrt(r*r+s*s+a*a),p=1/Math.sqrt(o*o+c*c+l*l);return e[0]=t*u,e[1]=i*u,e[2]=n*u,e[3]=r*f,e[4]=s*f,e[5]=a*f,e[6]=o*p,e[7]=c*p,e[8]=l*p,e}function V(e,t,i,n,r,s,a,o){let c=t-r-(o[0]>0?n[0]*o[0]:0),l=c+n[0]+2*r,u=i-r-(o[1]>0?n[1]*o[1]:0),f=u+n[1]+2*r;if(a.textureIsSignedDistanceField){const e=a.distanceFieldBoundingBox;c+=n[0]*e[0],u+=n[1]*e[1],l-=n[0]*(1-e[2]),f-=n[1]*(1-e[3]),c-=s,l+=s,u-=s,f+=s}return e[0]>c&&e[0]<l&&e[1]>u&&e[1]<f}const E={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},U=u.create(),B=p.create(),F=p.create(),G=r.createRenderScreenPointArray3(),H=p.create(),I=p.create(),R=a.create(),_=a.create(),L=c.create(),k=p.create(),W={normal:H,cosAngle:0},N=c.create(),j=1,J=2,K=[0,0],Q=p.fromValues(0,0,1),X={texCoordScale:[1,1],occlusionTest:!0,binaryHighlightOcclusion:!0,drawInSecondSlot:!1,color:[1,1,1,1],outlineColor:[1,1,1,1],outlineSize:0,textureIsSignedDistanceField:!1,distanceFieldBoundingBox:null,vvSizeEnabled:!1,vvSizeMinSize:[1,1,1],vvSizeMaxSize:[100,100,100],vvSizeOffset:[0,0,0],vvSizeFactor:[1,1,1],vvColorEnabled:!1,vvColorValues:[0,0,0,0,0,0,0,0],vvColorColors:[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],screenOffset:[0,0],verticalOffset:null,screenSizePerspective:null,screenSizePerspectiveAlignment:null,slicePlaneEnabled:!1,anchorPos:u.fromValues(.5,.5),shaderPolygonOffset:1e-5,polygonOffset:!1,textureId:null,centerOffsetUnits:"world",depthEnabled:!0,pixelSnappingEnabled:!0,debugDrawBorder:!1,isDraped:!1,...S.materialParametersDefaults},Y=m.newLayout().vec3f("position").vec3f("normal").vec2f("uv0").vec4u8("color").vec2f("size").vec4f("auxpos1").vec4f("auxpos2");let Z=function(){function e(e){this.material=e,this.vertexBufferLayout=Y}var t=e.prototype;return t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){return 6*e.indices.get("position").length},t.write=function(e,t,i,n){P.writePosition(t.indices.get("position"),t.vertexAttributes.get("position").data,e.transformation,i.position,n,6),P.writeNormal(t.indices.get("normal"),t.vertexAttributes.get("normal").data,e.invTranspTransformation,i.normal,n,6);{const e=t.vertexAttributes.get("uv0").data;let r,s,a,o;if(null==e||e.length<4){const e=this.material.parameters;r=0,s=0,a=e.texCoordScale[0],o=e.texCoordScale[1]}else r=e[0],s=e[1],a=e[2],o=e[3];a=Math.min(1.99999,a+1),o=Math.min(1.99999,o+1);const c=t.indices.get("position").length,l=i.uv0;let u=n;for(let t=0;t<c;++t)l.set(u,0,r),l.set(u,1,s),u+=1,l.set(u,0,a),l.set(u,1,s),u+=1,l.set(u,0,a),l.set(u,1,o),u+=1,l.set(u,0,a),l.set(u,1,o),u+=1,l.set(u,0,r),l.set(u,1,o),u+=1,l.set(u,0,r),l.set(u,1,s),u+=1}P.writeColor(t.indices.get("color"),t.vertexAttributes.get("color").data,4,i.color,n,6);{const e=t.indices.get("size"),r=t.vertexAttributes.get("size").data,s=e.length,a=i.size;let o=n;for(let t=0;t<s;++t){const i=r[2*e[t]],n=r[2*e[t]+1];for(let e=0;e<6;++e)a.set(o,0,i),a.set(o,1,n),o+=1}}t.indices.get("auxpos1")&&t.vertexAttributes.get("auxpos1")&&P.writeBufferVec4(t.indices.get("auxpos1"),t.vertexAttributes.get("auxpos1").data,i.auxpos1,n,6),t.indices.get("auxpos2")&&t.vertexAttributes.get("auxpos2")&&P.writeBufferVec4(t.indices.get("auxpos2"),t.vertexAttributes.get("auxpos2").data,i.auxpos2,n,6)},e}();e.HUDMaterial=M,Object.defineProperty(e,"__esModule",{value:!0})}));
