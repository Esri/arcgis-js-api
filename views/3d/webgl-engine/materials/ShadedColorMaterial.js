/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/vec3f64","../../../../chunks/vec3","../../support/buffer/BufferView","../../../../geometry/support/aaBoundingBox","../../support/buffer/InterleavedLayout","../lib/Util","../lib/GLMaterial","./internal/MaterialUtil","../lib/Material","./internal/bufferWriterUtils","../shaders/ShadedColorMaterialTechnique"],(function(e,t,r,a,n,i,s,o,u,l,c,h,d){"use strict";let f=function(e){function r(t,r){var a;return(a=e.call(this,r,t,C)||this).supportsEdges=!0,a.techniqueConfig=new d.ShadedColorMaterialTechniqueConfiguration,a._vertexAttributeLocations=d.ShadedColorMaterialVertexAttrLocations,a}t._inheritsLoose(r,e);var n=r.prototype;return n.getTechniqueConfig=function(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.screenSizeEnabled=this.params.screenSizeEnabled,this.techniqueConfig.shadingEnabled=this.params.shadingEnabled,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig},n.getPassParameters=function(){return this.params},n.intersect=function(e,t,r,n,s,o,u){if(this.params.screenSizeEnabled){const r=e.getAttribute(d.ShadedColorMaterialVertexAttrConstants.OFFSET),c={applyToVertex:(e,t,i,s)=>{const o=a.set(g,r.data[3*s+0],r.data[3*s+1],r.data[3*s+2]),u=a.set(m,e,t,i);return a.scale(o,o,this.params.screenSize*n.camera.computeRenderPixelSizeAt(o)),a.add(u,u,o),[u[0],u[1],u[2]]},applyToAabb:e=>{const t=i.center(e,g);return i.scale(e,this.params.screenSize*n.camera.computeRenderPixelSizeAt(t))}};l.intersectTriangleGeometry(e,t,n,s,o,c,u)}else l.intersectTriangleGeometry(e,t,n,s,o,void 0,u)},n.getGLMaterial=function(e){return 0===e.output||7===e.output||4===e.output?new p(e):void 0},n.createBufferWriter=function(){return new S(this.params.screenSizeEnabled)},r}(c.Material),p=function(e){function r(t){var r;return(r=e.call(this,t)||this).updateParameters(),r}t._inheritsLoose(r,e);var a=r.prototype;return a.updateParameters=function(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(d.ShadedColorMaterialTechnique,this.material.getTechniqueConfig(this.output,e),this.technique)},a.beginSlot=function(e){if(4===this.output)return 3===e;let t=3;return this.technique.configuration.transparent&&(t=this.technique.configuration.writeDepth?5:8),e===t},a.ensureParameters=function(e){this.updateParameters(e)},a.bind=function(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.getPassParameters(),t)},r}(u);const C={color:[1,1,1,1],shadingTint:[0,0,0,.25],shadingDirection:a.normalize(r.create(),[.5,-.5,-.5]),transparent:!1,writeDepth:!0,slicePlaneEnabled:!1,cullFace:0,screenSizeEnabled:!1,screenSize:14,shadingEnabled:!0,...c.materialParametersDefaults};let S=function(){function e(e){this.screenSizeEnabled=e;const t=s.newLayout().vec3f(d.ShadedColorMaterialVertexAttrConstants.POSITION).vec3f(d.ShadedColorMaterialVertexAttrConstants.NORMAL);this.screenSizeEnabled&&t.vec3f(d.ShadedColorMaterialVertexAttrConstants.OFFSET),this.vertexBufferLayout=t}var t=e.prototype;return t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){return e.indices[d.ShadedColorMaterialVertexAttrConstants.POSITION].length},t.write=function(e,t,r,a){if(h.writeDefaultAttributes(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,r,a),this.screenSizeEnabled){if(!(d.ShadedColorMaterialVertexAttrConstants.OFFSET in t.vertexAttr))throw new Error(`${d.ShadedColorMaterialVertexAttrConstants.OFFSET} vertex attribute required for screenSizeEnabled ShadedColorMaterial`);{const i=t.vertexAttr[d.ShadedColorMaterialVertexAttrConstants.OFFSET],s=t.indices[d.ShadedColorMaterialVertexAttrConstants.OFFSET];o.assert(3===i.size);const u=r.getField(d.ShadedColorMaterialVertexAttrConstants.OFFSET,n.BufferViewVec3f);if(!u)throw new Error("unable to acquire view for "+d.ShadedColorMaterialVertexAttrConstants.OFFSET);h.writePosition(s,i.data,e.invTranspTransformation,u,a)}}},e}();const g=r.create(),m=r.create();e.ShadedColorMaterialVertexAttrConstants=d.ShadedColorMaterialVertexAttrConstants,e.ShadedColorMaterial=f,Object.defineProperty(e,"__esModule",{value:!0})}));
