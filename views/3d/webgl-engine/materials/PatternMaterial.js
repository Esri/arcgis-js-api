/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../geometry/support/buffer/BufferView","../../support/buffer/InterleavedLayout","../lib/GLMaterial","../lib/Material","../lib/OrderIndependentTransparency","../lib/Util","./internal/bufferWriterUtils","./internal/DefaultBufferWriter","./internal/MaterialUtil","../shaders/PatternTechnique"],(function(e,t,i,n,r,a,s,u,o,c,l,f){"use strict";let h=function(e){function i(t){var i;return(i=e.call(this,t,g)||this).supportsEdges=!0,i._vertexAttributeLocations=f.patternVertexAttributeLocations,i.techniqueConfig=new f.PatternTechniqueConfiguration,i}t._inheritsLoose(i,e);var r=i.prototype;return r.getTechniqueConfig=function(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.vertexColors=this.params.vertexColors,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.style=this.params.style,this.techniqueConfig.patternSpacing=this.params.patternSpacing,this.techniqueConfig.lineWidth=this.params.lineWidth,this.techniqueConfig.draped=this.params.draped,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<s.OITPolygonOffsetLimit,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig},r.getPassParameters=function(){return this.params},r.intersect=function(e,t,i,n,r,a,s){l.intersectTriangleGeometry(e,t,n,r,a,void 0,s)},r.getGLMaterial=function(e){return 0===e.output||7===e.output||4===e.output||1===e.output&&this.params.writeLinearDepth?new p(e):void 0},r.createBufferWriter=function(){const e=n.newLayout().vec3f("position").vec4u8("color").vec4f("uvMapSpace");return this.params.draped||e.mat3f("boundingRect"),new d(e)},i}(a.Material),p=function(e){function i(t){var i;return(i=e.call(this,t)||this).updateParameters(),i}t._inheritsLoose(i,e);var n=i.prototype;return n.updateParameters=function(e){this._technique=this._techniqueRep.releaseAndAcquire(f.PatternTechnique,this._material.getTechniqueConfig(this._output,e),this._technique)},n.beginSlot=function(e){if(4===this._output)return 3===e;return e===(this._technique.configuration.transparent?this._technique.configuration.writeDepth?5:8:3)},n._updateOccludeeState=function(e){e.hasOccludees!==this._material.params.sceneHasOcludees&&this._material.setParameterValues({sceneHasOcludees:e.hasOccludees})},n.ensureParameters=function(e){0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)},n.bind=function(e){this._technique.bindPass(this._material.getPassParameters(),e)},n.getPipelineState=function(e,t){return this._technique.getPipelineState(t)},i}(r),d=function(e){function n(){return e.apply(this,arguments)||this}t._inheritsLoose(n,e);var r=n.prototype;return r.write=function(e,t,n,r){for(const a of this.vertexBufferLayout.fieldNames){const s=t.vertexAttributes.get(a),c=t.indices.get(a);if(s&&c)switch(a){case"position":{u.assert(3===s.size);const t=n.getField(a,i.BufferViewVec3f);t&&o.writePosition(c,s.data,e.transformation,t,r);break}case"color":{u.assert(3===s.size||4===s.size);const e=n.getField(a,i.BufferViewVec4u8);e&&o.writeColor(c,s.data,s.size,e,r);break}case"uvMapSpace":{u.assert(4===s.size);const e=n.getField(a,i.BufferViewVec4f);e&&o.writeBufferVec4(c,s.data,e,r);break}case"boundingRect":{u.assert(9===s.size);const t=n.getField(a,i.BufferViewMat3f);t&&this.writeBoundingRect(c,s.data,e.transformation,t,r);break}}}},r.writeBoundingRect=function(e,t,i,n,r){const a=i,s=n.typedBuffer,u=n.typedBufferStride,o=e.length;r*=u;for(let c=0;c<o;++c){const i=9*e[c],n=t[i],o=t[i+1],l=t[i+2];s[r]=a[0]*n+a[4]*o+a[8]*l+a[12],s[r+1]=a[1]*n+a[5]*o+a[9]*l+a[13],s[r+2]=a[2]*n+a[6]*o+a[10]*l+a[14];for(let e=3;e<9;++e)s[r+e]=t[i+e];r+=u}},n}(c.DefaultBufferWriter);const g={color:[1,1,1,1],writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,style:2,patternSpacing:10,lineWidth:1,draped:!0,...a.materialParametersDefaults};e.PatternMaterial=h,Object.defineProperty(e,"__esModule",{value:!0})}));
