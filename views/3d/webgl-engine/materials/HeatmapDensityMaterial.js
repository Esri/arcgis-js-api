/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isNone as e}from"../../../../core/maybe.js";import{a as t,s as r}from"../../../../chunks/vec2.js";import{a as s}from"../../../../chunks/vec2f64.js";import{isVec2 as i}from"../../../../core/libs/gl-matrix-2/types/vec2.js";import{newLayout as n}from"../../support/buffer/InterleavedLayout.js";import o from"../lib/GLMaterial.js";import{Material as a}from"../lib/Material.js";import{RenderPass as u}from"../lib/RenderPass.js";import{RenderSlot as c}from"../lib/RenderSlot.js";import{VertexAttribute as f}from"../lib/VertexAttribute.js";import{writePosition as l,writeBufferFloat as m}from"./internal/bufferWriterUtils.js";import{HeatmapDensityPassParameters as p,HeatmapDensityTechniqueConfiguration as h,HeatmapDensityTechnique as T}from"../shaders/HeatmapDensityTechnique.js";export{RadiusMode}from"../shaders/HeatmapDensityTechnique.js";const d=2;class A extends p{constructor(){super(...arguments),this.isAttributeDriven=!1}}class b extends a{constructor(e){super(e,new A),this._techniqueConfig=new h}requiresSlot(e,t){return e===c.DRAPED_MATERIAL&&t===u.MATERIAL}getConfiguration(){return this._techniqueConfig.isAttributeDriven=this.parameters.isAttributeDriven,this._techniqueConfig}createGLMaterial(e){return new I(e)}intersect(s,n,o,a,u,c,l,m,p){if(e(p)||!i(c))return;const h=s.vertexAttributes.get(f.POSITION),{parameters:T}=this,{searchRadius:A}=T,{screenToWorldRatio:b}=s,I=A*b+d*b,g=I*I,v=h.data.length/h.size;for(let e=0;e<v;e++){const s=e*h.size,i=t(E,h.data[s],h.data[s+1]);r(i,c)<g&&l(p.dist,p.normal,-1,!1)}}createBufferWriter(){return new g(this.parameters.isAttributeDriven?R:v)}}class I extends o{beginSlot(e){return this.ensureTechnique(T,e)}}class g{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(f.POSITION).length*j}write(e,t,r,s){l(t.indices.get(f.POSITION),t.vertexAttributes.get(f.POSITION).data,e.transformation,r.position,s,j);const i=t.indices.get(f.POSITION).length,n=r.uv0;let o=s;for(let u=0;u<i;++u)n.setValues(o++,-1,-1),n.setValues(o++,1,-1),n.setValues(o++,1,1),n.setValues(o++,1,1),n.setValues(o++,-1,1),n.setValues(o++,-1,-1);const a="featureAttribute"in r?r.featureAttribute:null;a&&m(t.indices.get(f.FEATUREATTRIBUTE),t.vertexAttributes.get(f.FEATUREATTRIBUTE).data,a,s,j)}}const v=n().vec3f(f.POSITION).vec2f(f.UV0),R=v.clone().f32(f.FEATUREATTRIBUTE),j=6;function x(e){return e instanceof b}const E=s();export{b as HeatmapDensityMaterial,A as HeatmapDensityMaterialParameters,x as isHeatMapDensityMaterial};
