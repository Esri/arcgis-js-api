/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Logger","../../../../core/mathUtils","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/vec2","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/frustum","../../../../geometry/support/lineSegment","../../../../geometry/support/plane","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutputOptions","../lib/geometryDataUtils","../lib/GLMaterial","../lib/GLMaterials","../lib/Material","../lib/RenderSlot","../lib/Util","../lib/VertexAttribute","./VisualVariableMaterialParameters","./renderers/utils","../../../../chunks/RibbonLine.glsl","../shaders/RibbonLineTechnique"],(function(e,t,r,i,n,s,a,o,u,c,l,h,p,d,f,A,T,m,b,E,S,R,_,O,g){"use strict";const v=r.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");var I;!function(e){e[e.LEFT_JOIN_START=-2]="LEFT_JOIN_START",e[e.LEFT_JOIN_END=-1]="LEFT_JOIN_END",e[e.LEFT_CAP_START=-4]="LEFT_CAP_START",e[e.LEFT_CAP_END=-5]="LEFT_CAP_END",e[e.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",e[e.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",e[e.RIGHT_CAP_START=4]="RIGHT_CAP_START",e[e.RIGHT_CAP_END=5]="RIGHT_CAP_END"}(I||(I={}));let P=function(e){function r(t){var r;return(r=e.call(this,t,L)||this)._vertexAttributeLocations=g.ribbonVertexAttributeLocations,r.techniqueConfig=new g.RibbonLineTechniqueConfiguration,r.layout=r.createLayout(),r}t._inheritsLoose(r,e);var s=r.prototype;return s.isClosed=function(e,t){return D(this.parameters,e,t)},s.dispose=function(){},s.getPassParameters=function(){return this.parameters},s.getTechniqueConfig=function(e,t){this.techniqueConfig.output=e,this.techniqueConfig.draped=t.slot===b.RenderSlot.DRAPED_MATERIAL;const r=n.isSome(this.parameters.stipplePattern);return this.techniqueConfig.stippleEnabled=r,this.techniqueConfig.stippleOffColorEnabled=r&&n.isSome(this.parameters.stippleOffColor),this.techniqueConfig.stippleScaleWithLineWidth=r&&this.parameters.stippleScaleWithLineWidth,this.techniqueConfig.stipplePreferContinuous=r&&this.parameters.stipplePreferContinuous,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this.techniqueConfig.roundJoins="round"===this.parameters.join,this.techniqueConfig.capType=this.parameters.cap,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.vvColor=this.parameters.vvColorEnabled,this.techniqueConfig.vvOpacity=this.parameters.vvOpacityEnabled,this.techniqueConfig.vvSize=this.parameters.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.parameters.innerWidth>0&&n.isSome(this.parameters.innerColor),this.techniqueConfig.falloffEnabled=this.parameters.falloff>0,this.techniqueConfig.occluder=this.parameters.renderOccluded===m.RenderOccludedFlag.OccludeAndTransparentStencil,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig.wireframe=this.parameters.wireframe,this.techniqueConfig},s.intersect=function(e,t,r,i,s,a,o,u,c){n.isSome(c)?this._intersectDrapedLineGeometry(e,i,c,a,o):this._intersectLineGeometry(e,t,r,i,o)},s._intersectDrapedLineGeometry=function(e,t,r,n,s){if(!t.options.selectionMode)return;const a=e.vertexAttributes.get(S.VertexAttribute.POSITION).data,o=e.vertexAttributes.get(S.VertexAttribute.SIZE);let u=this.parameters.width;if(this.parameters.vvSizeEnabled){const t=e.vertexAttributes.get(S.VertexAttribute.SIZEFEATUREATTRIBUTE).data[0];u*=i.clamp(this.parameters.vvSizeOffset[0]+t*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else o&&(u*=o.data[0]);const c=n[0],l=n[1],h=(u/2+4)*e.screenToWorldRatio;let p=Number.MAX_VALUE,d=0;for(let f=0;f<a.length-5;f+=3){const e=a[f],t=a[f+1],r=c-e,n=l-t,s=a[f+3]-e,o=a[f+4]-t,u=s*r+o*n,h=s*s+o*o,A=i.clamp(u/h,0,1),T=s*A-r,m=o*A-n,b=T*T+m*m;b<p&&(p=b,d=f/3)}p<h*h&&s(r.dist,r.normal,d,!1)},s._intersectLineGeometry=function(e,t,r,n,s){if(!n.options.selectionMode||_.isInstanceHidden(t))return;if(!E.isTranslationMatrix(r))return void v.error("intersection assumes a translation-only matrix");const u=e.vertexAttributes,p=u.get(S.VertexAttribute.POSITION).data;let d=this.parameters.width;if(this.parameters.vvSizeEnabled){const e=u.get(S.VertexAttribute.SIZEFEATUREATTRIBUTE).data[0];d*=i.clamp(this.parameters.vvSizeOffset[0]+e*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else u.has(S.VertexAttribute.SIZE)&&(d*=u.get(S.VertexAttribute.SIZE).data[0]);const f=n.camera,A=F;a.copy(A,n.point);const T=d*f.pixelRatio/2+4*f.pixelRatio;o.set(k[0],A[0]-T,A[1]+T,0),o.set(k[1],A[0]+T,A[1]+T,0),o.set(k[2],A[0]+T,A[1]-T,0),o.set(k[3],A[0]-T,A[1]-T,0);for(let i=0;i<4;i++)if(!f.unprojectFromRenderScreen(k[i],X[i]))return;h.fromPoints(f.eye,X[0],X[1],Y),h.fromPoints(f.eye,X[1],X[2],Q),h.fromPoints(f.eye,X[2],X[3],K),h.fromPoints(f.eye,X[3],X[0],$);let m=Number.MAX_VALUE,b=0;const R=N(this.parameters,u,e.indices)?p.length-2:p.length-5;for(let i=0;i<R;i+=3){V[0]=p[i]+r[12],V[1]=p[i+1]+r[13],V[2]=p[i+2]+r[14];const e=(i+3)%p.length;if(M[0]=p[e]+r[12],M[1]=p[e+1]+r[13],M[2]=p[e+2]+r[14],h.signedDistance(Y,V)<0&&h.signedDistance(Y,M)<0||h.signedDistance(Q,V)<0&&h.signedDistance(Q,M)<0||h.signedDistance(K,V)<0&&h.signedDistance(K,M)<0||h.signedDistance($,V)<0&&h.signedDistance($,M)<0)continue;if(f.projectToRenderScreen(V,w),f.projectToRenderScreen(M,G),w[2]<0&&G[2]>0){o.subtract(q,V,M);const e=f.frustum,t=-h.signedDistance(e[c.PlaneIndex.NEAR],V)/o.dot(q,h.normal(e[c.PlaneIndex.NEAR]));o.scale(q,q,t),o.add(V,V,q),f.projectToRenderScreen(V,w)}else if(w[2]>0&&G[2]<0){o.subtract(q,M,V);const e=f.frustum,t=-h.signedDistance(e[c.PlaneIndex.NEAR],M)/o.dot(q,h.normal(e[c.PlaneIndex.NEAR]));o.scale(q,q,t),o.add(M,M,q),f.projectToRenderScreen(M,G)}else if(w[2]<0&&G[2]<0)continue;w[2]=0,G[2]=0;const t=l.distance2(l.fromPoints(w,G,B),A);t<m&&(m=t,o.copy(H,V),o.copy(J,M),b=i/3)}const O=n.rayBegin,g=n.rayEnd;if(m<T*T){let e=Number.MAX_VALUE;if(l.closestLineSegmentPoint(l.fromPoints(H,J,B),l.fromPoints(O,g,z),U)){o.subtract(U,U,O);const t=o.length(U);o.scale(U,U,1/t),e=t/o.distance(O,g)}s(e,U,b,!1)}},s.computeAttachmentOrigin=function(e,t){const r=e.vertexAttributes;if(!r)return null;const i=e.indices,n=r.get(S.VertexAttribute.POSITION);return f.computeAttachmentOriginLines(n,i?i.get(S.VertexAttribute.POSITION):null,i&&N(this.parameters,r,i),t)},s.createLayout=function(){const e=p.newLayout().vec3f(S.VertexAttribute.POSITION).f32(S.VertexAttribute.SUBDIVISIONFACTOR).vec2f(S.VertexAttribute.UV0).vec3f(S.VertexAttribute.AUXPOS1).vec3f(S.VertexAttribute.AUXPOS2);return this.parameters.vvSizeEnabled?e.f32(S.VertexAttribute.SIZEFEATUREATTRIBUTE):e.f32(S.VertexAttribute.SIZE),this.parameters.vvColorEnabled?e.f32(S.VertexAttribute.COLORFEATUREATTRIBUTE):e.vec4f(S.VertexAttribute.COLOR),this.parameters.vvOpacityEnabled&&e.f32(S.VertexAttribute.OPACITYFEATUREATTRIBUTE),e},s.createBufferWriter=function(){return new x(this.layout,this.parameters)},s.requiresSlot=function(e,t){if(e===b.RenderSlot.DRAPED_MATERIAL)return!0;if(this.parameters.renderOccluded===m.RenderOccludedFlag.OccludeAndTransparentStencil)return e===b.RenderSlot.OPAQUE_MATERIAL||e===b.RenderSlot.OCCLUDER_MATERIAL||e===b.RenderSlot.TRANSPARENT_OCCLUDER_MATERIAL;const r=T.outputFromPass(t);if(r===d.ShaderOutput.Color||r===d.ShaderOutput.Alpha){return e===(this.parameters.writeDepth?b.RenderSlot.TRANSPARENT_MATERIAL:b.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL)}return e===b.RenderSlot.OPAQUE_MATERIAL},s.createGLMaterial=function(e){return e.output===d.ShaderOutput.Color||e.output===d.ShaderOutput.Alpha||e.output===d.ShaderOutput.Highlight||e.output===d.ShaderOutput.Depth?new C(e):null},s.validateParameters=function(e){"miter"!==e.join&&(e.miterLimit=0),this._requiresTransparent(e)&&(e.transparent=!0)},s._requiresTransparent=function(e){return!!((e.color&&e.color[3])<1||e.innerWidth>0&&this._colorRequiresTransparent(e.innerColor)||e.stipplePattern&&this._colorRequiresTransparent(e.stippleOffColor)||e.falloff>0)},s._colorRequiresTransparent=function(e){return n.isSome(e)&&e[3]<1&&e[3]>0},r}(m.Material),C=function(e){function r(){return e.apply(this,arguments)||this}t._inheritsLoose(r,e);var i=r.prototype;return i.updateParameters=function(e){return this.ensureTechnique(g.RibbonLineTechnique,e)},i._updateOccludeeState=function(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})},i.beginSlot=function(e){return this._output!==d.ShaderOutput.Color&&this._output!==d.ShaderOutput.Alpha||this._updateOccludeeState(e),this.updateParameters(e)},i.bind=function(e,t){t.bindPass(this._material.getPassParameters(),e)},r}(A);const L={width:0,color:[1,1,1,1],join:"miter",cap:O.CapType.BUTT,miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleOffColor:null,stippleScaleWithLineWidth:!1,stipplePreferContinuous:!0,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,wireframe:!1,...m.DefaultMaterialParameters,...R.VisualVariableDefaultMaterialParameters};let x=function(){function e(e,t){this.parameters=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e;const r=t.stipplePattern?1:0;switch(this.parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=r;break;case"round":this.numJoinSubdivisions=O.NUM_ROUND_JOIN_SUBDIVISIONS+r}}var t=e.prototype;return t._isClosed=function(e){return N(this.parameters,e.vertexAttributes,e.indices)},t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){const t=2,r=e.indices.get(S.VertexAttribute.POSITION).length/2+1,i=this._isClosed(e);let n=i?2:2*t;return n+=((i?r:r-1)-(i?0:1))*(2*this.numJoinSubdivisions+4),n+=2,this.parameters.wireframe&&(n=2+4*(n-2)),n},t.write=function(e,t,r,i){var n;const s=W,a=j,u=Z,c=t.vertexAttributes.get(S.VertexAttribute.POSITION).data,l=t.indices&&t.indices.get(S.VertexAttribute.POSITION),h=null==(n=t.vertexAttributes.get(S.VertexAttribute.DISTANCETOSTART))?void 0:n.data;l&&l.length!==2*(c.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let p=1,d=0;this.parameters.vvSizeEnabled?d=t.vertexAttributes.get(S.VertexAttribute.SIZEFEATUREATTRIBUTE).data[0]:t.vertexAttributes.has(S.VertexAttribute.SIZE)&&(p=t.vertexAttributes.get(S.VertexAttribute.SIZE).data[0]);let f=[1,1,1,1],A=0;this.parameters.vvColorEnabled?A=t.vertexAttributes.get(S.VertexAttribute.COLORFEATUREATTRIBUTE).data[0]:t.vertexAttributes.has(S.VertexAttribute.COLOR)&&(f=t.vertexAttributes.get(S.VertexAttribute.COLOR).data);let T=0;this.parameters.vvOpacityEnabled&&(T=t.vertexAttributes.get(S.VertexAttribute.OPACITYFEATUREATTRIBUTE).data[0]);const m=c.length/3,b=e.transformation,E=new Float32Array(r.buffer),R=this.vertexBufferLayout.stride/4;let _=i*R;const O=_;let g=0;const v=h?(e,t,r)=>g=h[r]:(e,t,r)=>g+=o.distance(e,t),P=(e,t,r,i,n,s,a)=>{if(E[_++]=t[0],E[_++]=t[1],E[_++]=t[2],E[_++]=i,E[_++]=a,E[_++]=n,E[_++]=e[0],E[_++]=e[1],E[_++]=e[2],E[_++]=r[0],E[_++]=r[1],E[_++]=r[2],this.parameters.vvSizeEnabled?E[_++]=d:E[_++]=p,this.parameters.vvColorEnabled)E[_++]=A;else{const e=Math.min(4*s,f.length-4);E[_++]=f[e+0],E[_++]=f[e+1],E[_++]=f[e+2],E[_++]=f[e+3]}this.parameters.vvOpacityEnabled&&(E[_++]=T)};_+=R,o.set(a,c[0],c[1],c[2]),b&&o.transformMat4(a,a,b);const C=this._isClosed(t);if(C){const e=c.length-3;o.set(s,c[e],c[e+1],c[e+2]),b&&o.transformMat4(s,s,b)}else o.set(u,c[3],c[4],c[5]),b&&o.transformMat4(u,u,b),P(a,a,u,1,I.LEFT_CAP_START,0,0),P(a,a,u,1,I.RIGHT_CAP_START,0,0),o.copy(s,a),o.copy(a,u);const L=C?0:1,x=C?m:m-1;for(let S=L;S<x;S++){const e=(S+1)%m*3;o.set(u,c[e+0],c[e+1],c[e+2]),b&&o.transformMat4(u,u,b),v(s,a,S),P(s,a,u,0,I.LEFT_JOIN_END,S,g),P(s,a,u,0,I.RIGHT_JOIN_END,S,g);const t=this.numJoinSubdivisions;for(let r=0;r<t;++r){const e=(r+1)/(t+1);P(s,a,u,e,I.LEFT_JOIN_END,S,g),P(s,a,u,e,I.RIGHT_JOIN_END,S,g)}P(s,a,u,1,I.LEFT_JOIN_START,S,g),P(s,a,u,1,I.RIGHT_JOIN_START,S,g),o.copy(s,a),o.copy(a,u)}C?(o.set(u,c[3],c[4],c[5]),b&&o.transformMat4(u,u,b),g=v(s,a,x),P(s,a,u,0,I.LEFT_JOIN_END,L,g),P(s,a,u,0,I.RIGHT_JOIN_END,L,g)):(g=v(s,a,x),P(s,a,a,0,I.LEFT_CAP_END,x,g),P(s,a,a,0,I.RIGHT_CAP_END,x,g)),y(E,O+R,E,O,R);_=y(E,_-R,E,_,R),this.parameters.wireframe&&this._addWireframeVertices(r,O,_,R)},t._addWireframeVertices=function(e,t,r,i){const n=new Float32Array(e.buffer,r*Float32Array.BYTES_PER_ELEMENT),s=new Float32Array(e.buffer,t*Float32Array.BYTES_PER_ELEMENT,r-t);let a=0;const o=e=>a=y(s,e,n,a,i);for(let u=0;u<s.length-1;u+=2*i)o(u),o(u+2*i),o(u+1*i),o(u+2*i),o(u+1*i),o(u+3*i)},e}();function y(e,t,r,i,n){for(let s=0;s<n;s++)r[i++]=e[t++];return i}function N(e,t,r){return D(e,t.get(S.VertexAttribute.POSITION).data,r?r.get(S.VertexAttribute.POSITION):null)}function D(e,t,r){return!!e.isClosed&&(r?r.length>2:t.length>6)}const V=u.create(),M=u.create(),q=u.create(),U=u.create(),F=u.create(),w=s.createRenderScreenPointArray3(),G=s.createRenderScreenPointArray3(),H=u.create(),J=u.create(),B=l.create(),z=l.create(),W=u.create(),j=u.create(),Z=u.create(),k=[s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3()],X=[u.create(),u.create(),u.create(),u.create()],Y=h.create(),Q=h.create(),K=h.create(),$=h.create();e.RibbonLineMaterial=P,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
