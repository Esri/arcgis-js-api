/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Logger","../../../../core/mathUtils","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/vec2","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/lineSegment","../../../../geometry/support/plane","../../support/buffer/InterleavedLayout","../lib/geometryDataUtils","../lib/GLMaterial","../lib/Material","../lib/Util","./VisualVariableMaterialParameters","./renderers/utils","../shaders/RibbonLineTechnique"],(function(e,t,i,n,s,r,a,o,c,u,l,h,p,f,d,m,v,b,g){"use strict";const y=i.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");let S=function(e){function i(t){var i;return(i=e.call(this,t,A)||this)._vertexAttributeLocations=g.ribbonVertexAttributeLocations,i.techniqueConfig=new g.RibbonLineTechniqueConfiguration,i.layout=i.createLayout(),i}t._inheritsLoose(i,e);var r=i.prototype;return r.isClosed=function(e,t){return L(this.params,e,t)},r.dispose=function(){},r.getPassParameters=function(){return this.params},r.getTechniqueConfig=function(e,t){this.techniqueConfig.output=e;const i=s.isSome(t)&&23===t.slot;this.techniqueConfig.draped=i;const n=s.isSome(this.params.stipplePattern);return this.techniqueConfig.stippleEnabled=n,this.techniqueConfig.stippleIntegerRepeatsEnabled=n&&this.params.stippleIntegerRepeats,this.techniqueConfig.stippleOffColorEnabled=n&&s.isSome(this.params.stippleOffColor),this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.roundJoins="round"===this.params.join,this.techniqueConfig.roundCaps="round"===this.params.cap,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.vvColor=this.params.vvColorEnabled,this.techniqueConfig.vvOpacity=this.params.vvOpacityEnabled,this.techniqueConfig.vvSize=this.params.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.params.innerWidth>0&&s.isSome(this.params.innerColor),this.techniqueConfig.falloffEnabled=this.params.falloff>0,this.techniqueConfig.occluder=8===this.params.renderOccluded,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig},r.intersect=function(e,t,i,n,s,r,a,o,c){c?this.intersectDrapedLineGeometry(e,n,r,a):this.intersectLineGeometry(e,t,i,n,this.params.width,a)},r.intersectDrapedLineGeometry=function(e,t,i,s){if(!t.options.selectionMode)return;const r=e.vertexAttributes.get("position").data,a=e.vertexAttributes.get("size");let o=this.params.width;if(this.params.vvSizeEnabled){const t=e.vertexAttributes.get("sizeFeatureAttribute").data[0];o*=n.clamp(this.params.vvSizeOffset[0]+t*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0])}else a&&(o*=a.data[0]);const c=i[0],u=i[1],l=(o/2+4)*e.screenToWorldRatio;let h=Number.MAX_VALUE;for(let p=0;p<r.length-5;p+=3){const e=r[p],t=r[p+1],i=c-e,s=u-t,a=r[p+3]-e,o=r[p+4]-t,l=a*i+o*s,f=a*a+o*o,d=n.clamp(l/f,0,1),m=a*d-i,v=o*d-s,b=m*m+v*v;b<h&&(h=b)}h<l*l&&s()},r.intersectLineGeometry=function(e,t,i,s,r,c){if(!s.options.selectionMode||b.isInstanceHidden(t))return;if(!m.isTranslationMatrix(i))return void y.error("intersection assumes a translation-only matrix");const h=e.vertexAttributes,p=h.get("position").data;let f=r;if(this.params.vvSizeEnabled){const e=h.get("sizeFeatureAttribute").data[0];f*=n.clamp(this.params.vvSizeOffset[0]+e*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0])}else h.has("size")&&(f*=h.get("size").data[0]);const d=s.camera,v=T;a.copy(v,s.point);const g=f*d.pixelRatio/2+4*d.pixelRatio;o.set(J[0],v[0]-g,v[1]+g,0),o.set(J[1],v[0]+g,v[1]+g,0),o.set(J[2],v[0]+g,v[1]-g,0),o.set(J[3],v[0]-g,v[1]-g,0);for(let n=0;n<4;n++)if(!d.unprojectFromRenderScreen(J[n],k[n]))return;l.fromPoints(d.eye,k[0],k[1],I),l.fromPoints(d.eye,k[1],k[2],W),l.fromPoints(d.eye,k[2],k[3],N),l.fromPoints(d.eye,k[3],k[0],X);let S=Number.MAX_VALUE;const C=x(this.params,h,e.indices)?p.length-2:p.length-5;for(let n=0;n<C;n+=3){O[0]=p[n]+i[12],O[1]=p[n+1]+i[13],O[2]=p[n+2]+i[14];const e=(n+3)%p.length;if(R[0]=p[e]+i[12],R[1]=p[e+1]+i[13],R[2]=p[e+2]+i[14],l.signedDistance(I,O)<0&&l.signedDistance(I,R)<0||l.signedDistance(W,O)<0&&l.signedDistance(W,R)<0||l.signedDistance(N,O)<0&&l.signedDistance(N,R)<0||l.signedDistance(X,O)<0&&l.signedDistance(X,R)<0)continue;if(d.projectToRenderScreen(O,D),d.projectToRenderScreen(R,w),D[2]<0&&w[2]>0){o.subtract(_,O,R);const e=d.frustum,t=-l.signedDistance(e[4],O)/o.dot(_,l.normal(e[4]));o.scale(_,_,t),o.add(O,O,_),d.projectToRenderScreen(O,D)}else if(D[2]>0&&w[2]<0){o.subtract(_,R,O);const e=d.frustum,t=-l.signedDistance(e[4],R)/o.dot(_,l.normal(e[4]));o.scale(_,_,t),o.add(R,R,_),d.projectToRenderScreen(R,w)}else if(D[2]<0&&w[2]<0)continue;D[2]=0,w[2]=0;const t=u.distance2(u.fromPoints(D,w,G),v);t<S&&(S=t,o.copy(F,O),o.copy(j,R))}const A=s.rayBeginPoint,q=s.rayEndPoint;if(S<g*g){let e=Number.MAX_VALUE;if(u.closestLineSegmentPoint(u.fromPoints(F,j,G),u.fromPoints(A,q,U),M)){o.subtract(M,M,A);const t=o.length(M);o.scale(M,M,1/t),e=t/o.distance(A,q)}c(e,M)}},r.computeAttachmentOrigin=function(e,t){const i=e.vertexAttributes;if(!i)return null;const n=e.indices,s=i.get("position");return p.computeAttachmentOriginLines(s,n?n.get("position"):null,n&&x(this.params,i,n),t)},r.createLayout=function(){const e=h.newLayout().vec3f("position").f32("subdivisionFactor").vec2f("uv0").vec3f("auxpos1").vec3f("auxpos2");return this.params.vvSizeEnabled?e.f32("sizeFeatureAttribute"):e.f32("size"),this.params.vvColorEnabled?e.f32("colorFeatureAttribute"):e.vec4f("color"),this.params.vvOpacityEnabled&&e.f32("opacityFeatureAttribute"),e},r.createBufferWriter=function(){return new q(this.layout,this.params)},r.getGLMaterial=function(e){return 0===e.output||7===e.output||4===e.output||1===e.output?new C(e):void 0},r.validateParameterValues=function(e){"miter"!==e.join&&(e.miterLimit=0),this.requiresTransparent(e)&&(e.transparent=!0)},r.requiresTransparent=function(e){return!!((e.color&&e.color[3])<1||e.innerWidth>0&&this.colorRequiresTransparent(e.innerColor)||e.stipplePattern&&this.colorRequiresTransparent(e.stippleOffColor)||e.falloff>0)},r.colorRequiresTransparent=function(e){return s.isSome(e)&&e[3]<1&&e[3]>0},i}(d.Material),C=function(e){function i(t){var i;return(i=e.call(this,t)||this).updateParameters(),i}t._inheritsLoose(i,e);var n=i.prototype;return n.updateParameters=function(e){this._technique=this._techniqueRep.releaseAndAcquire(g.RibbonLineTechnique,this._material.getTechniqueConfig(this._output,e),this._technique)},n.beginSlot=function(e){return 23===e||(this._technique.configuration.occluder?3===e||10===e||11===e:0===this._output||7===this._output?(this.targetSlot=this._technique.configuration.writeDepth?5:8,e===this.targetSlot):3===e)},n._updateOccludeeState=function(e){e.hasOccludees!==this._material.params.sceneHasOcludees&&this._material.setParameterValues({sceneHasOcludees:e.hasOccludees})},n.ensureParameters=function(e){0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)},n.bind=function(e){this._technique.bindPass(this._material.getPassParameters(),e)},n.getPipelineState=function(e,t){return this._technique.getPipelineState(e,t)},i}(f);const A={width:0,color:[1,1,1,1],join:"miter",cap:"butt",miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleIntegerRepeats:!1,stippleOffColor:null,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,...d.materialParametersDefaults,...v.Default};let q=function(){function e(e,t){switch(this.params=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e,this.params.join){case"miter":case"bevel":this.numJoinSubdivisions=t.stipplePattern?1:0;break;case"round":this.numJoinSubdivisions=E}}var t=e.prototype;return t.isClosed=function(e){return x(this.params,e.vertexAttributes,e.indices)},t.numCapSubdivisions=function(e){if(this.isClosed(e))return 0;switch(this.params.cap){case"butt":return 0;case"square":return 1;case"round":return z}},t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){const t=2*this.numCapSubdivisions(e)+2,i=e.indices.get("position").length/2+1,n=this.isClosed(e);let s=n?2:2*t;const r=n?0:1,a=n?i:i-1;if(e.vertexAttributes.has("subdivisions")){const t=e.vertexAttributes.get("subdivisions").data;for(let e=r;e<a;++e){s+=4+2*t[e]}}else{s+=(a-r)*(2*this.numJoinSubdivisions+4)}return s+=2,s},t.write=function(e,t,i,n){const s=V,r=B,a=H,c=t.vertexAttributes.get("position").data,u=t.indices&&t.indices.get("position"),l=this.numCapSubdivisions(t);u&&u.length!==2*(c.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let h=null;t.vertexAttributes.has("subdivisions")&&(h=t.vertexAttributes.get("subdivisions").data);let p=1,f=0;this.params.vvSizeEnabled?f=t.vertexAttributes.get("sizeFeatureAttribute").data[0]:t.vertexAttributes.has("size")&&(p=t.vertexAttributes.get("size").data[0]);let d=[1,1,1,1],m=0;this.params.vvColorEnabled?m=t.vertexAttributes.get("colorFeatureAttribute").data[0]:t.vertexAttributes.has("color")&&(d=t.vertexAttributes.get("color").data);let v=0;this.params.vvOpacityEnabled&&(v=t.vertexAttributes.get("opacityFeatureAttribute").data[0]);const b=c.length/3,g=e.transformation,y=new Float32Array(i.buffer),S=this.vertexBufferLayout.stride/4;let C=n*S;const A=C;let q=0;const x=(e,t,i,n,s,r,a,o)=>{if(y[C++]=t[0],y[C++]=t[1],y[C++]=t[2],y[C++]=n,y[C++]=o,y[C++]=r+s/10,y[C++]=e[0],y[C++]=e[1],y[C++]=e[2],y[C++]=i[0],y[C++]=i[1],y[C++]=i[2],this.params.vvSizeEnabled?y[C++]=f:y[C++]=p,this.params.vvColorEnabled)y[C++]=m;else{const e=Math.min(4*a,d.length-4);y[C++]=d[e+0],y[C++]=d[e+1],y[C++]=d[e+2],y[C++]=d[e+3]}this.params.vvOpacityEnabled&&(y[C++]=v)};C+=S,o.set(r,c[0],c[1],c[2]),g&&o.transformMat4(r,r,g);const L=this.isClosed(t);if(L){const e=c.length-3;o.set(s,c[e],c[e+1],c[e+2]),g&&o.transformMat4(s,s,g)}else{o.copy(s,r),o.set(a,c[3],c[4],c[5]),g&&o.transformMat4(a,a,g);for(let e=0;e<l;++e){const t=1-e/l;x(s,r,a,t,1,-4,0,q),x(s,r,a,t,1,4,0,q)}x(s,r,a,0,0,-4,0,q),x(s,r,a,0,0,4,0,q),o.copy(s,r),o.copy(r,a)}const z=L?0:1,E=L?b:b-1;for(let P=z;P<E;P++){const e=(P+1)%b*3;o.set(a,c[e+0],c[e+1],c[e+2]),g&&o.transformMat4(a,a,g),q+=o.distance(s,r),x(s,r,a,0,1,-1,P,q),x(s,r,a,0,1,1,P,q);const t=h?h[P]:this.numJoinSubdivisions;for(let i=0;i<t;++i){const e=(i+1)/(t+1);x(s,r,a,e,1,-2,P,q),x(s,r,a,e,1,2,P,q)}x(s,r,a,1,0,-2,P,q),x(s,r,a,1,0,2,P,q),o.copy(s,r),o.copy(r,a)}if(L)o.set(a,c[3],c[4],c[5]),g&&o.transformMat4(a,a,g),q+=o.distance(s,r),x(s,r,a,0,1,-1,z,q),x(s,r,a,0,1,1,z,q);else{q+=o.distance(s,r),x(s,r,a,0,1,-5,E,q),x(s,r,a,0,1,5,E,q);for(let e=0;e<l;++e){const t=(e+1)/l;x(s,r,a,t,1,-5,E,q),x(s,r,a,t,1,5,E,q)}}P(y,A+S,y,A,S);C=P(y,C-S,y,C,S)},e}();function P(e,t,i,n,s){for(let r=0;r<s;r++)i[n++]=e[t++];return n}function x(e,t,i){return L(e,t.get("position").data,i?i.get("position"):null)}function L(e,t,i){return!!e.isClosed&&(i?i.length>2:t.length>6)}const z=3,E=1,O=c.create(),R=c.create(),_=c.create(),M=c.create(),T=c.create(),D=r.createRenderScreenPointArray3(),w=r.createRenderScreenPointArray3(),F=c.create(),j=c.create(),G=u.create(),U=u.create(),V=c.create(),B=c.create(),H=c.create(),J=[r.createRenderScreenPointArray3(),r.createRenderScreenPointArray3(),r.createRenderScreenPointArray3(),r.createRenderScreenPointArray3()],k=[c.create(),c.create(),c.create(),c.create()],I=l.create(),W=l.create(),N=l.create(),X=l.create();e.RibbonLineMaterial=S,Object.defineProperty(e,"__esModule",{value:!0})}));
