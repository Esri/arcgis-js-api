/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Logger","../../../../core/mathUtils","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/vec2","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/lineSegment","../../../../geometry/support/plane","../../support/buffer/InterleavedLayout","../lib/geometryDataUtils","../lib/GLMaterial","../lib/GLMaterials","../lib/Material","../lib/Util","./VisualVariableMaterialParameters","./renderers/utils","../../../../chunks/RibbonLine.glsl","../shaders/RibbonLineTechnique"],(function(e,t,i,r,n,s,a,o,c,u,l,p,h,f,d,m,v,b,g,y,S){"use strict";const C=i.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");let A=function(e){function i(t){var i;return(i=e.call(this,t,L)||this)._vertexAttributeLocations=S.ribbonVertexAttributeLocations,i.techniqueConfig=new S.RibbonLineTechniqueConfiguration,i.layout=i.createLayout(),i}t._inheritsLoose(i,e);var s=i.prototype;return s.isClosed=function(e,t){return z(this.parameters,e,t)},s.dispose=function(){},s.getPassParameters=function(){return this.parameters},s.getTechniqueConfig=function(e,t){this.techniqueConfig.output=e,this.techniqueConfig.draped=20===t.slot;const i=n.isSome(this.parameters.stipplePattern);return this.techniqueConfig.stippleEnabled=i,this.techniqueConfig.stippleOffColorEnabled=i&&n.isSome(this.parameters.stippleOffColor),this.techniqueConfig.stippleScaleWithLineWidth=i&&this.parameters.stippleScaleWithLineWidth,this.techniqueConfig.stipplePreferContinuous=i&&this.parameters.stipplePreferContinuous,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this.techniqueConfig.roundJoins="round"===this.parameters.join,this.techniqueConfig.roundCaps=2===this.parameters.cap,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.vvColor=this.parameters.vvColorEnabled,this.techniqueConfig.vvOpacity=this.parameters.vvOpacityEnabled,this.techniqueConfig.vvSize=this.parameters.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.parameters.innerWidth>0&&n.isSome(this.parameters.innerColor),this.techniqueConfig.falloffEnabled=this.parameters.falloff>0,this.techniqueConfig.occluder=8===this.parameters.renderOccluded,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig},s.intersect=function(e,t,i,r,s,a,o,c,u){n.isSome(u)?this.intersectDrapedLineGeometry(e,r,u,a,o):this.intersectLineGeometry(e,t,i,r,o)},s.intersectDrapedLineGeometry=function(e,t,i,n,s){if(!t.options.selectionMode)return;const a=e.vertexAttributes.get("position").data,o=e.vertexAttributes.get("size");let c=this.parameters.width;if(this.parameters.vvSizeEnabled){const t=e.vertexAttributes.get("sizeFeatureAttribute").data[0];c*=r.clamp(this.parameters.vvSizeOffset[0]+t*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else o&&(c*=o.data[0]);const u=n[0],l=n[1],p=(c/2+4)*e.screenToWorldRatio;let h=Number.MAX_VALUE,f=0;for(let d=0;d<a.length-5;d+=3){const e=a[d],t=a[d+1],i=u-e,n=l-t,s=a[d+3]-e,o=a[d+4]-t,c=s*i+o*n,p=s*s+o*o,m=r.clamp(c/p,0,1),v=s*m-i,b=o*m-n,g=v*v+b*b;g<h&&(h=g,f=d/3)}h<p*p&&s(i.dist,i.normal,f,!1)},s.intersectLineGeometry=function(e,t,i,n,s){if(!n.options.selectionMode||g.isInstanceHidden(t))return;if(!v.isTranslationMatrix(i))return void C.error("intersection assumes a translation-only matrix");const c=e.vertexAttributes,p=c.get("position").data;let h=this.parameters.width;if(this.parameters.vvSizeEnabled){const e=c.get("sizeFeatureAttribute").data[0];h*=r.clamp(this.parameters.vvSizeOffset[0]+e*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else c.has("size")&&(h*=c.get("size").data[0]);const f=n.camera,d=T;a.copy(d,n.point);const m=h*f.pixelRatio/2+4*f.pixelRatio;o.set(J[0],d[0]-m,d[1]+m,0),o.set(J[1],d[0]+m,d[1]+m,0),o.set(J[2],d[0]+m,d[1]-m,0),o.set(J[3],d[0]-m,d[1]-m,0);for(let r=0;r<4;r++)if(!f.unprojectFromRenderScreen(J[r],N[r]))return;l.fromPoints(f.eye,N[0],N[1],V),l.fromPoints(f.eye,N[1],N[2],k),l.fromPoints(f.eye,N[2],N[3],I),l.fromPoints(f.eye,N[3],N[0],X);let b=Number.MAX_VALUE,y=0;const S=O(this.parameters,c,e.indices)?p.length-2:p.length-5;for(let r=0;r<S;r+=3){E[0]=p[r]+i[12],E[1]=p[r+1]+i[13],E[2]=p[r+2]+i[14];const e=(r+3)%p.length;if(M[0]=p[e]+i[12],M[1]=p[e+1]+i[13],M[2]=p[e+2]+i[14],l.signedDistance(V,E)<0&&l.signedDistance(V,M)<0||l.signedDistance(k,E)<0&&l.signedDistance(k,M)<0||l.signedDistance(I,E)<0&&l.signedDistance(I,M)<0||l.signedDistance(X,E)<0&&l.signedDistance(X,M)<0)continue;if(f.projectToRenderScreen(E,_),f.projectToRenderScreen(M,w),_[2]<0&&w[2]>0){o.subtract(R,E,M);const e=f.frustum,t=-l.signedDistance(e[4],E)/o.dot(R,l.normal(e[4]));o.scale(R,R,t),o.add(E,E,R),f.projectToRenderScreen(E,_)}else if(_[2]>0&&w[2]<0){o.subtract(R,M,E);const e=f.frustum,t=-l.signedDistance(e[4],M)/o.dot(R,l.normal(e[4]));o.scale(R,R,t),o.add(M,M,R),f.projectToRenderScreen(M,w)}else if(_[2]<0&&w[2]<0)continue;_[2]=0,w[2]=0;const t=u.distance2(u.fromPoints(_,w,W),d);t<b&&(b=t,o.copy(F,E),o.copy(U,M),y=r/3)}const A=n.rayBegin,P=n.rayEnd;if(b<m*m){let e=Number.MAX_VALUE;if(u.closestLineSegmentPoint(u.fromPoints(F,U,W),u.fromPoints(A,P,j),D)){o.subtract(D,D,A);const t=o.length(D);o.scale(D,D,1/t),e=t/o.distance(A,P)}s(e,D,y,!1)}},s.computeAttachmentOrigin=function(e,t){const i=e.vertexAttributes;if(!i)return null;const r=e.indices,n=i.get("position");return h.computeAttachmentOriginLines(n,r?r.get("position"):null,r&&O(this.parameters,i,r),t)},s.createLayout=function(){const e=p.newLayout().vec3f("position").f32("subdivisionFactor").vec2f("uv0").vec3f("auxpos1").vec3f("auxpos2");return this.parameters.vvSizeEnabled?e.f32("sizeFeatureAttribute"):e.f32("size"),this.parameters.vvColorEnabled?e.f32("colorFeatureAttribute"):e.vec4f("color"),this.parameters.vvOpacityEnabled&&e.f32("opacityFeatureAttribute"),e},s.createBufferWriter=function(){return new q(this.layout,this.parameters)},s.requiresSlot=function(e,t){if(20===e)return!0;if(8===this.parameters.renderOccluded)return 2===e||9===e||10===e;const i=d.outputFromPass(t);if(0===i||7===i){return e===(this.parameters.writeDepth?4:7)}return 2===e},s.createGLMaterial=function(e){return 0===e.output||7===e.output||4===e.output||1===e.output?new P(e):null},s.validateParameters=function(e){"miter"!==e.join&&(e.miterLimit=0),this.requiresTransparent(e)&&(e.transparent=!0)},s.requiresTransparent=function(e){return!!((e.color&&e.color[3])<1||e.innerWidth>0&&this.colorRequiresTransparent(e.innerColor)||e.stipplePattern&&this.colorRequiresTransparent(e.stippleOffColor)||e.falloff>0)},s.colorRequiresTransparent=function(e){return n.isSome(e)&&e[3]<1&&e[3]>0},i}(m.Material),P=function(e){function i(){return e.apply(this,arguments)||this}t._inheritsLoose(i,e);var r=i.prototype;return r.updateParameters=function(e){return this.ensureTechnique(S.RibbonLineTechnique,e)},r._updateOccludeeState=function(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})},r.beginSlot=function(e){return 0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)},r.bind=function(e,t){t.bindPass(this._material.getPassParameters(),e)},i}(f);const L={width:0,color:[1,1,1,1],join:"miter",cap:0,miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleOffColor:null,stippleScaleWithLineWidth:!1,stipplePreferContinuous:!0,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,...m.materialParametersDefaults,...b.Default};let q=function(){function e(e,t){this.parameters=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e;const i=t.stipplePattern?1:0;switch(this.parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=i;break;case"round":this.numJoinSubdivisions=y.NUM_ROUND_JOIN_SUBDIVISIONS+i}}var t=e.prototype;return t.isClosed=function(e){return O(this.parameters,e.vertexAttributes,e.indices)},t.numCapSubdivisions=function(e){if(this.isClosed(e))return 0;switch(this.parameters.cap){case 1:case 2:return 1;default:return 0}},t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){const t=2*this.numCapSubdivisions(e)+2,i=e.indices.get("position").length/2+1,r=this.isClosed(e);let n=r?2:2*t;const s=r?0:1,a=r?i:i-1;if(e.vertexAttributes.has("subdivisions")){const t=e.vertexAttributes.get("subdivisions").data;for(let e=s;e<a;++e){n+=4+2*t[e]}}else{n+=(a-s)*(2*this.numJoinSubdivisions+4)}return n+=2,n},t.write=function(e,t,i,r){var n;const s=G,a=B,c=H,u=t.vertexAttributes.get("position").data,l=t.indices&&t.indices.get("position"),p=null==(n=t.vertexAttributes.get("distanceToStart"))?void 0:n.data,h=this.numCapSubdivisions(t);l&&l.length!==2*(u.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let f=null;t.vertexAttributes.has("subdivisions")&&(f=t.vertexAttributes.get("subdivisions").data);let d=1,m=0;this.parameters.vvSizeEnabled?m=t.vertexAttributes.get("sizeFeatureAttribute").data[0]:t.vertexAttributes.has("size")&&(d=t.vertexAttributes.get("size").data[0]);let v=[1,1,1,1],b=0;this.parameters.vvColorEnabled?b=t.vertexAttributes.get("colorFeatureAttribute").data[0]:t.vertexAttributes.has("color")&&(v=t.vertexAttributes.get("color").data);let g=0;this.parameters.vvOpacityEnabled&&(g=t.vertexAttributes.get("opacityFeatureAttribute").data[0]);const y=u.length/3,S=e.transformation,C=new Float32Array(i.buffer),A=this.vertexBufferLayout.stride/4;let P=r*A;const L=P;let q=0;const O=(e,t,i,r,n,s,a)=>{if(C[P++]=t[0],C[P++]=t[1],C[P++]=t[2],C[P++]=r,C[P++]=a,C[P++]=n,C[P++]=e[0],C[P++]=e[1],C[P++]=e[2],C[P++]=i[0],C[P++]=i[1],C[P++]=i[2],this.parameters.vvSizeEnabled?C[P++]=m:C[P++]=d,this.parameters.vvColorEnabled)C[P++]=b;else{const e=Math.min(4*s,v.length-4);C[P++]=v[e+0],C[P++]=v[e+1],C[P++]=v[e+2],C[P++]=v[e+3]}this.parameters.vvOpacityEnabled&&(C[P++]=g)};P+=A,o.set(a,u[0],u[1],u[2]),S&&o.transformMat4(a,a,S);const z=this.isClosed(t);if(z){const e=u.length-3;o.set(s,u[e],u[e+1],u[e+2]),S&&o.transformMat4(s,s,S)}else{o.copy(s,a),o.set(c,u[3],u[4],u[5]),S&&o.transformMat4(c,c,S);for(let e=0;e<h;++e){const t=1-e/h;O(s,a,c,t,-4,0,q),O(s,a,c,t,4,0,q)}O(s,a,c,0,-4,0,q),O(s,a,c,0,4,0,q),o.copy(s,a),o.copy(a,c)}const E=z?0:1,M=z?y:y-1,R=p?(e,t,i)=>q=p[i]:(e,t,i)=>q+=o.distance(e,t);for(let x=E;x<M;x++){const e=(x+1)%y*3;o.set(c,u[e+0],u[e+1],u[e+2]),S&&o.transformMat4(c,c,S),R(s,a,x),O(s,a,c,0,-1,x,q),O(s,a,c,0,1,x,q);const t=f?f[x]:this.numJoinSubdivisions;for(let i=0;i<t;++i){const e=(i+1)/(t+1);O(s,a,c,e,-1,x,q),O(s,a,c,e,1,x,q)}O(s,a,c,1,-2,x,q),O(s,a,c,1,2,x,q),o.copy(s,a),o.copy(a,c)}if(z)o.set(c,u[3],u[4],u[5]),S&&o.transformMat4(c,c,S),q=R(s,a,M),O(s,a,c,0,-1,E,q),O(s,a,c,0,1,E,q);else{q=R(s,a,M),O(s,a,c,0,-5,M,q),O(s,a,c,0,5,M,q);for(let e=0;e<h;++e){const t=(e+1)/h;O(s,a,c,t,-5,M,q),O(s,a,c,t,5,M,q)}}x(C,L+A,C,L,A);P=x(C,P-A,C,P,A)},e}();function x(e,t,i,r,n){for(let s=0;s<n;s++)i[r++]=e[t++];return r}function O(e,t,i){return z(e,t.get("position").data,i?i.get("position"):null)}function z(e,t,i){return!!e.isClosed&&(i?i.length>2:t.length>6)}const E=c.create(),M=c.create(),R=c.create(),D=c.create(),T=c.create(),_=s.createRenderScreenPointArray3(),w=s.createRenderScreenPointArray3(),F=c.create(),U=c.create(),W=u.create(),j=u.create(),G=c.create(),B=c.create(),H=c.create(),J=[s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3()],N=[c.create(),c.create(),c.create(),c.create()],V=l.create(),k=l.create(),I=l.create(),X=l.create();e.RibbonLineMaterial=A,Object.defineProperty(e,"__esModule",{value:!0})}));
