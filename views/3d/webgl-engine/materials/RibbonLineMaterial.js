/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/Logger","../../../../core/mathUtils","../../../../core/screenUtils","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../chunks/vec2","../../support/buffer/InterleavedLayout","../../support/geometryUtils","../lib/geometryDataUtils","../lib/Util","./renderers/utils","../lib/GLMaterial","../lib/Material","./VisualVariableMaterialParameters","../shaders/RibbonLineTechnique"],(function(t,e,n,i,r,s,a,o,c,u,l,p,h,b,f,d,m,v){"use strict";const g=i.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");let A=function(t){function i(e,n){var i;return(i=t.call(this,n,e,C)||this)._vertexAttributeLocations=v.ribbonVertexAttributeLocations,i.techniqueConfig=new v.RibbonLineTechniqueConfiguration,i.layout=i.createLayout(),i}e._inheritsLoose(i,t);var s=i.prototype;return s.isClosed=function(t,e){return T(this.params,t,e)},s.dispose=function(){},s.getPassParameters=function(){return this.params},s.getTechniqueConfig=function(t,e){this.techniqueConfig.output=t;const i=n.isSome(this.params.stipplePattern);return this.techniqueConfig.stippleEnabled=i,this.techniqueConfig.stippleIntegerRepeatsEnabled=i&&this.params.stippleIntegerRepeats,this.techniqueConfig.stippleOffColorEnabled=i&&n.isSome(this.params.stippleOffColor),this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.roundJoins="round"===this.params.join,this.techniqueConfig.roundCaps="round"===this.params.cap,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.vvColor=this.params.vvColorEnabled,this.techniqueConfig.vvOpacity=this.params.vvOpacityEnabled,this.techniqueConfig.vvSize=this.params.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.params.innerWidth>0&&n.isSome(this.params.innerColor),this.techniqueConfig.falloffEnabled=this.params.falloff>0,this.techniqueConfig.occluder=8===this.params.renderOccluded,this.techniqueConfig.transparencyPassType=e?e.transparencyPassType:3,this.techniqueConfig},s.intersect=function(t,e,n,i,r,s,a,o,c){c?this.intersectDrapedLineGeometry(t,i,s,a):this.intersectLineGeometry(t,e,n,i,this.params.width,a)},s.intersectDrapedLineGeometry=function(t,e,n,i){if(!e.options.selectionMode)return;const s=t.getAttribute(v.RibbonVertexAttributeConstants.POSITION).data,a=t.getAttribute(v.RibbonVertexAttributeConstants.SIZE);let o=this.params.width;if(this.params.vvSizeEnabled){const e=t.getAttribute(v.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE).data[0];o*=r.clamp(this.params.vvSizeOffset[0]+e*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0])}else a&&(o*=a.data[0]);const c=n[0],u=n[1],l=(o/2+4)*t.screenToWorldRatio;let p=Number.MAX_VALUE;for(let t=0;t<s.length-5;t+=3){const e=s[t],n=s[t+1],i=c-e,a=u-n,o=s[t+3]-e,l=s[t+4]-n,h=o*i+l*a,b=o*o+l*l,f=r.clamp(h/b,0,1),d=o*f-i,m=l*f-a,v=d*d+m*m;v<p&&(p=v)}p<l*l&&i()},s.intersectLineGeometry=function(t,e,n,i,s,a){if(!i.options.selectionMode||b.isInstanceHidden(e))return;if(!h.isTranslationMatrix(n))return void g.error("intersection assumes a translation-only matrix");const u=t.data,p=u.getVertexAttr(),f=p[v.RibbonVertexAttributeConstants.POSITION].data;let d=s;if(this.params.vvSizeEnabled){const t=p[v.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE].data[0];d*=r.clamp(this.params.vvSizeOffset[0]+t*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0])}else p[v.RibbonVertexAttributeConstants.SIZE]&&(d*=p[v.RibbonVertexAttributeConstants.SIZE].data[0]);const m=i.camera,A=L;c.copy(A,i.point);const S=d*m.pixelRatio/2+4*m.pixelRatio;o.set(j[0],A[0]-S,A[1]+S,0),o.set(j[1],A[0]+S,A[1]+S,0),o.set(j[2],A[0]+S,A[1]-S,0),o.set(j[3],A[0]-S,A[1]-S,0);for(let t=0;t<4;t++)if(!m.unprojectFromRenderScreen(j[t],Z[t]))return;l.plane.fromPoints(m.eye,Z[0],Z[1],H),l.plane.fromPoints(m.eye,Z[1],Z[2],G),l.plane.fromPoints(m.eye,Z[2],Z[3],J),l.plane.fromPoints(m.eye,Z[3],Z[0],k);let C=Number.MAX_VALUE;const R=O(this.params,p,u.indices)?f.length-2:f.length-5;for(let t=0;t<R;t+=3){P[0]=f[t]+n[12],P[1]=f[t+1]+n[13],P[2]=f[t+2]+n[14];const e=(t+3)%f.length;if(y[0]=f[e]+n[12],y[1]=f[e+1]+n[13],y[2]=f[e+2]+n[14],l.plane.signedDistance(H,P)<0&&l.plane.signedDistance(H,y)<0||l.plane.signedDistance(G,P)<0&&l.plane.signedDistance(G,y)<0||l.plane.signedDistance(J,P)<0&&l.plane.signedDistance(J,y)<0||l.plane.signedDistance(k,P)<0&&l.plane.signedDistance(k,y)<0)continue;if(m.projectToRenderScreen(P,U),m.projectToRenderScreen(y,D),U[2]<0&&D[2]>0){o.subtract(V,P,y);const t=m.frustum,e=-l.plane.signedDistance(t.planes[4],P)/o.dot(V,l.plane.normal(t.planes[4]));o.scale(V,V,e),o.add(P,P,V),m.projectToRenderScreen(P,U)}else if(U[2]>0&&D[2]<0){o.subtract(V,y,P);const t=m.frustum,e=-l.plane.signedDistance(t.planes[4],y)/o.dot(V,l.plane.normal(t.planes[4]));o.scale(V,V,e),o.add(y,y,V),m.projectToRenderScreen(y,D)}else if(U[2]<0&&D[2]<0)continue;U[2]=0,D[2]=0;const i=l.lineSegment.distance2(l.lineSegment.fromPoints(U,D,z),A);i<C&&(C=i,o.copy(M,P),o.copy(B,y))}const x=i.rayBeginPoint,T=i.rayEndPoint;if(C<S*S){let t=Number.MAX_VALUE;if(l.lineSegment.closestLineSegmentPoint(l.lineSegment.fromPoints(M,B,z),l.lineSegment.fromPoints(x,T,w),q)){o.subtract(q,q,x);const e=o.length(q);o.scale(q,q,1/e),t=e/o.distance(x,T)}a(t,q)}},s.computeAttachmentOrigin=function(t,e){const n=t.data,i="getVertexAttr"in n?n.getVertexAttr():"vertexAttr"in n?n.vertexAttr:null;if(!i)return null;const r=v.RibbonVertexAttributeConstants.POSITION,s="getVertexAttr"in n?n.indices:null,a=i[r];return p.computeAttachmentOriginLines(a,s?s[r]:null,s&&O(this.params,i,s),e)},s.createLayout=function(){const t=u.newLayout().vec3f(v.RibbonVertexAttributeConstants.POSITION).f32(v.RibbonVertexAttributeConstants.SUBDIVISIONFACTOR).vec2f(v.RibbonVertexAttributeConstants.UV0).vec3f(v.RibbonVertexAttributeConstants.AUXPOS1).vec3f(v.RibbonVertexAttributeConstants.AUXPOS2);return this.params.vvSizeEnabled?t.f32(v.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE):t.f32(v.RibbonVertexAttributeConstants.SIZE),this.params.vvColorEnabled?t.f32(v.RibbonVertexAttributeConstants.COLORFEATUREATTRIBUTE):t.vec4f(v.RibbonVertexAttributeConstants.COLOR),this.params.vvOpacityEnabled&&t.f32(v.RibbonVertexAttributeConstants.OPACITYFEATUREATTRIBUTE),t},s.createBufferWriter=function(){return new R(this.layout,this.params)},s.getGLMaterial=function(t){return 0===t.output||7===t.output||4===t.output||1===t.output?new S(t):void 0},s.validateParameterValues=function(t){"miter"!==t.join&&(t.miterLimit=0),this.requiresTransparent(t)&&(t.transparent=!0)},s.requiresTransparent=function(t){return!!((t.color&&t.color[3])<1||t.innerWidth>0&&this.colorRequiresTransparent(t.innerColor)||t.stipplePattern&&this.colorRequiresTransparent(t.stippleOffColor)||t.falloff>0)},s.colorRequiresTransparent=function(t){return n.isSome(t)&&t[3]<1&&t[3]>0},i}(d.Material),S=function(t){function n(e){var n;return(n=t.call(this,e)||this).updateParameters(),n}e._inheritsLoose(n,t);var i=n.prototype;return i.updateParameters=function(t){this.technique=this.techniqueRep.acquireAndReleaseExisting(v.RibbonLineTechnique,this.material.getTechniqueConfig(this.output,t),this.technique)},i.beginSlot=function(t){return this.technique.configuration.occluder?3===t||10===t||11===t:0===this.output||7===this.output?(this.targetSlot=this.technique.configuration.writeDepth?5:8,t===this.targetSlot):3===t},i._updateOccludeeState=function(t){t.hasOccludees!==this.material.params.sceneHasOcludees&&this.material.setParameterValues({sceneHasOcludees:t.hasOccludees})},i.ensureParameters=function(t){0!==this.output&&7!==this.output||this._updateOccludeeState(t),this.updateParameters(t)},i.bind=function(t,e){t.bindProgram(this.technique.program),this.technique.bindPass(t,this.material.getPassParameters(),e)},i.getPipelineState=function(t,e){return this.technique.getPipelineState(t,e)},n}(f);const C={width:0,color:[1,1,1,1],join:"miter",cap:"butt",miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleIntegerRepeats:!1,stippleOffColor:null,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,...d.materialParametersDefaults,...m.Default};let R=function(){function t(t,e){switch(this.params=e,this.numJoinSubdivisions=0,this.vertexBufferLayout=t,this.params.join){case"miter":case"bevel":this.numJoinSubdivisions=e.stipplePattern?1:0;break;case"round":this.numJoinSubdivisions=I}}var e=t.prototype;return e.isClosed=function(t){return O(this.params,t.vertexAttr,t.indices)},e.numCapSubdivisions=function(t){if(this.isClosed(t))return 0;switch(this.params.cap){case"butt":return 0;case"square":return 1;case"round":return E}},e.allocate=function(t){return this.vertexBufferLayout.createBuffer(t)},e.elementCount=function(t){const e=2*this.numCapSubdivisions(t)+2,n=t.indices[v.RibbonVertexAttributeConstants.POSITION].length/2+1,i=this.isClosed(t);let r=i?2:2*e;const s=i?0:1,a=i?n:n-1;if(t.vertexAttr[v.RibbonVertexAttributeConstants.SUBDIVISIONS]){const e=t.vertexAttr[v.RibbonVertexAttributeConstants.SUBDIVISIONS].data;for(let t=s;t<a;++t){r+=4+2*e[t]}}else{r+=(a-s)*(2*this.numJoinSubdivisions+4)}return r+=2,r},e.write=function(t,e,n,i){const r=N,s=F,a=_,c=e.vertexAttr[v.RibbonVertexAttributeConstants.POSITION].data,u=e.indices&&e.indices[v.RibbonVertexAttributeConstants.POSITION],l=this.numCapSubdivisions(e);u&&u.length!==2*(c.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let p=null;e.vertexAttr[v.RibbonVertexAttributeConstants.SUBDIVISIONS]&&(p=e.vertexAttr[v.RibbonVertexAttributeConstants.SUBDIVISIONS].data);let h=1,b=0;this.params.vvSizeEnabled?b=e.vertexAttr[v.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE].data[0]:e.vertexAttr[v.RibbonVertexAttributeConstants.SIZE]&&(h=e.vertexAttr[v.RibbonVertexAttributeConstants.SIZE].data[0]);let f=[1,1,1,1],d=0;this.params.vvColorEnabled?d=e.vertexAttr[v.RibbonVertexAttributeConstants.COLORFEATUREATTRIBUTE].data[0]:e.vertexAttr[v.RibbonVertexAttributeConstants.COLOR]&&(f=e.vertexAttr[v.RibbonVertexAttributeConstants.COLOR].data);let m=0;this.params.vvOpacityEnabled&&(m=e.vertexAttr[v.RibbonVertexAttributeConstants.OPACITYFEATUREATTRIBUTE].data[0]);const g=c.length/3,A=t.transformation,S=new Float32Array(n.buffer),C=this.vertexBufferLayout.stride/4;let R=i*C;const O=R,T=(t,e,n,i,r,s,a)=>{if(S[R++]=e[0],S[R++]=e[1],S[R++]=e[2],S[R++]=i,S[R++]=r,S[R++]=s,S[R++]=t[0],S[R++]=t[1],S[R++]=t[2],S[R++]=n[0],S[R++]=n[1],S[R++]=n[2],this.params.vvSizeEnabled?S[R++]=b:S[R++]=h,this.params.vvColorEnabled)S[R++]=d;else{const t=Math.min(4*a,f.length-4);S[R++]=f[t+0],S[R++]=f[t+1],S[R++]=f[t+2],S[R++]=f[t+3]}this.params.vvOpacityEnabled&&(S[R++]=m)};R+=C,o.set(s,c[0],c[1],c[2]),A&&o.transformMat4(s,s,A);const E=this.isClosed(e);if(E){const t=c.length-3;o.set(r,c[t],c[t+1],c[t+2]),A&&o.transformMat4(r,r,A)}else{o.copy(r,s),o.set(a,c[3],c[4],c[5]),A&&o.transformMat4(a,a,A);for(let t=0;t<l;++t){const e=1-t/l;T(r,s,a,e,1,-4,0),T(r,s,a,e,1,4,0)}T(r,s,a,0,0,-4,0),T(r,s,a,0,0,4,0),o.copy(r,s),o.copy(s,a)}const I=E?g:g-1;for(let t=E?0:1;t<I;t++){const e=(t+1)%g*3;o.set(a,c[e+0],c[e+1],c[e+2]),A&&o.transformMat4(a,a,A),T(r,s,a,0,1,-1,t),T(r,s,a,0,1,1,t);const n=p?p[t]:this.numJoinSubdivisions;for(let e=0;e<n;++e){const i=(e+1)/(n+1);T(r,s,a,i,1,-2,t),T(r,s,a,i,1,2,t)}T(r,s,a,1,0,-2,t),T(r,s,a,1,0,2,t),o.copy(r,s),o.copy(s,a)}if(E){R=x(S,O+C,S,R,2*C)}else{T(r,s,a,0,1,-5,I),T(r,s,a,0,1,5,I);for(let t=0;t<l;++t){const e=(t+1)/l;T(r,s,a,e,1,-5,I),T(r,s,a,e,1,5,I)}}x(S,O+C,S,O,C);R=x(S,R-C,S,R,C)},t}();function x(t,e,n,i,r){for(let s=0;s<r;s++)n[i++]=t[e++];return i}function O(t,e,n){return T(t,e[v.RibbonVertexAttributeConstants.POSITION].data,n?n[v.RibbonVertexAttributeConstants.POSITION]:null)}function T(t,e,n){return!!t.isClosed&&(n?n.length>2:e.length>6)}const E=3,I=1,P=a.create(),y=a.create(),V=a.create(),q=a.create(),L=a.create(),U=s.createRenderScreenPointArray3(),D=s.createRenderScreenPointArray3(),M=a.create(),B=a.create(),z=l.lineSegment.create(),w=l.lineSegment.create(),N=a.create(),F=a.create(),_=a.create(),j=[s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3(),s.createRenderScreenPointArray3()],Z=[a.create(),a.create(),a.create(),a.create()],H=l.plane.create(),G=l.plane.create(),J=l.plane.create(),k=l.plane.create();t.RibbonLineMaterial=A,Object.defineProperty(t,"__esModule",{value:!0})}));
