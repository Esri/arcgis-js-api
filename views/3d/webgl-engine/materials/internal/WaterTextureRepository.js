/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{getAssetUrl as e}from"../../../../../assets.js";import r from"../../../../../core/Accessor.js";import s from"../../../../../core/Logger.js";import{property as a}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as i}from"../../../../../support/requestImageUtils.js";import{ResourceState as p}from"../../lib/basicInterfaces.js";import{TextureType as m,PixelFormat as n,PixelType as l,TextureWrapMode as c,TextureSamplingMode as h}from"../../../../webgl/enums.js";import{Texture as d}from"../../../../webgl/Texture.js";const u=s.getLogger("esri.views.3d.webgl-engine.materials.internal.waterMaterialUtils");let g=class extends r{constructor(){super(...arguments),this._data=new Array,this._state=p.NOT_LOADED}dispose(){this._state=p.NOT_LOADED,this._data.forEach((t=>t.dispose())),this._data.length=0}get updating(){return this._state===p.LOADING}get resourceState(){return this._state}loadTextures(t){const r=[e("esri/images/materials/water/normals.jpg"),e("esri/images/materials/water/perturbation.jpg")];this._state=p.LOADING,Promise.all(r.map((t=>i(t)))).then((e=>{e.forEach((e=>this._data.push(new d(t,{target:m.TEXTURE_2D,pixelFormat:n.RGBA,dataType:l.UNSIGNED_BYTE,wrapMode:c.REPEAT,samplingMode:h.LINEAR_MIPMAP_LINEAR,hasMipmap:!0,maxAnisotropy:8,width:e.width,height:e.height},e)))),this._state=p.LOADED})).catch((t=>{u.error("Failed to load textures for water material.",t),this._state=p.NOT_LOADED}))}bind(t){this._state===p.LOADED&&(t.bindTexture("texWaveNormal",this._data[0]),t.bindTexture("texWavePerturbation",this._data[1]))}};t([a()],g.prototype,"_state",void 0),t([a({type:Boolean,readOnly:!0})],g.prototype,"updating",null),g=t([o("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")],g);export{g as WaterTextureRepository};
