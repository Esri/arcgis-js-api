/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/vec2f32","../../support/buffer/InterleavedLayout","../lib/GLMaterial","../lib/Material","./internal/bufferWriterUtils","../shaders/LineCalloutTechnique"],(function(e,t,i,n,r,s,a,u){"use strict";let o=function(e){function i(t){var n;return(n=e.call(this,t,f)||this).techniqueConfig=new u.LineCalloutTechniqueConfiguration,n._uniqueMaterialIdentifier=i.uniqueMaterialIdentifier(n.parameters),n}t._inheritsLoose(i,e);var n=i.prototype;return n.getPassParameters=function(){return this.parameters},n.getTechniqueConfig=function(e,t){const i=18!==(null==t?void 0:t.slot);return this.techniqueConfig.occlusionTestEnabled=this.parameters.occlusionTest,this.techniqueConfig.verticalOffset=!!this.parameters.verticalOffset,this.techniqueConfig.screenSizePerspective=!!this.parameters.screenSizePerspective,this.techniqueConfig.depthHudEnabled=i,this.techniqueConfig.depthHudAlignStartEnabled=!!this.parameters.depthHUDAlignStart,this.techniqueConfig.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits?1:0,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.multipassGeometryEnabled=!!t&&t.multipassGeometryEnabled,this.techniqueConfig},n.intersect=function(){},n.requiresSlot=function(e){switch(e){case 18:case 19:return!0}return!1},n.createGLMaterial=function(e){return 0===e.output?new l(e):null},n.createBufferWriter=function(){return new d},n.validateParameters=function(e){const t=i.uniqueMaterialIdentifier(e);t!==this._uniqueMaterialIdentifier&&(this._uniqueMaterialIdentifier=t)},i.uniqueMaterialIdentifier=function(e){return JSON.stringify({screenOffset:e.screenOffset||[0,0],centerOffsetUnits:e.centerOffsetUnits||"world"})},t._createClass(i,[{key:"uniqueMaterialIdentifier",get:function(){return this._uniqueMaterialIdentifier}}]),i}(s.Material),l=function(e){function i(){return e.apply(this,arguments)||this}t._inheritsLoose(i,e);var n=i.prototype;return n.updateParameters=function(e){return this.ensureTechnique(u.LineCalloutTechnique,e)},n.beginSlot=function(e){return this.updateParameters(e)},n.bind=function(e,t){t.bindPass(this._material.getPassParameters(),e)},i}(r);const f={verticalOffset:null,screenSizePerspective:null,screenOffset:[0,0],color:[0,0,0,1],size:1,borderColor:null,occlusionTest:!1,shaderPolygonOffset:1e-5,depthHUDAlignStart:!1,centerOffsetUnits:"world",slicePlaneEnabled:!1,...s.materialParametersDefaults},c=n.newLayout().vec3f("position").vec3f("normal").vec2f("uv0").vec4f("auxpos1"),h=[i.fromValues(0,0),i.fromValues(1,0),i.fromValues(0,1),i.fromValues(1,0),i.fromValues(1,1),i.fromValues(0,1)];let d=function(){function e(){this.vertexBufferLayout=c}var t=e.prototype;return t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){return 6*e.indices.get("position").length},t.write=function(e,t,i,n){a.writePosition(t.indices.get("position"),t.vertexAttributes.get("position").data,e.transformation,i.position,n,6),a.writeNormal(t.indices.get("normal"),t.vertexAttributes.get("normal").data,e.invTranspTransformation,i.normal,n,6),a.writeBufferVec4(t.indices.get("auxpos1"),t.vertexAttributes.get("auxpos1").data,i.auxpos1,n,6);for(let r=0;r<h.length;++r)i.uv0.setVec(n+r,h[r])},e}();e.LineCalloutMaterial=o,Object.defineProperty(e,"__esModule",{value:!0})}));
