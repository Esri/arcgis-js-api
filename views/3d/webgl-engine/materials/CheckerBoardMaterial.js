/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../core/shaderLibrary/ShaderOutputOptions","../lib/basicInterfaces","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","./internal/DefaultBufferWriter","./internal/MaterialUtil","../shaders/CheckerBoardTechnique"],(function(e,t,r,n,i,a,s,o,u,l){"use strict";let c=function(e){function i(t){var r;return(r=e.call(this,t,p)||this).techniqueConfig=new l.CheckerBoardTechniqueConfiguration,r}t._inheritsLoose(i,e);var a=i.prototype;return a.dispose=function(){},a.getPassParameters=function(){return this.parameters},a.getTechniqueConfig=function(e,t){return this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:n.TransparencyPassType.NONE,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig},a.intersect=function(e,t,r,n,i,a,s){return u.intersectTriangleGeometry(e,t,n,i,a,void 0,s)},a.requiresSlot=function(e){let t=s.RenderSlot.OPAQUE_MATERIAL;return this.parameters.transparent&&(t=this.parameters.writeDepth?s.RenderSlot.TRANSPARENT_MATERIAL:s.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL),e===t||e===s.RenderSlot.DRAPED_MATERIAL},a.createGLMaterial=function(e){return e.output===r.ShaderOutput.Color||e.output===r.ShaderOutput.Alpha?new h(e):null},a.createBufferWriter=function(){return new o.DefaultBufferWriter(o.PositionUVLayout)},i}(a.Material),h=function(e){function r(){return e.apply(this,arguments)||this}t._inheritsLoose(r,e);var n=r.prototype;return n.updateParameters=function(e){return this.ensureTechnique(l.CheckerBoardTechnique,e)},n.beginSlot=function(e){return this.updateParameters(e)},n.bind=function(e,t){t.bindPass(this._material.getPassParameters(),e)},r}(i);const p={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...a.DefaultMaterialParameters};e.CheckerBoardMaterial=c,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
