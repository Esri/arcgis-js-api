/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{clamp as e}from"../../../../core/mathUtils.js";import{isNone as t}from"../../../../core/maybe.js";import{fromValues as r}from"../../../../geometry/support/aaBoundingBox.js";import{BufferViewVec4f as i}from"../../../../geometry/support/buffer/BufferView.js";import{newLayout as s}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as a}from"../core/shaderLibrary/ShaderOutputOptions.js";import{NormalsDoubleSidedMode as o}from"../core/shaderLibrary/shading/Normals.glsl.js";import{computeAttachmentOriginLines as n}from"../lib/geometryDataUtils.js";import u from"../lib/GLMaterial.js";import{Material as h}from"../lib/Material.js";import{isPathGeometry as c}from"../lib/PathGeometry.js";import{RenderPass as l}from"../lib/RenderPass.js";import{RenderSlot as p}from"../lib/RenderSlot.js";import{assert as d}from"../lib/Util.js";import{VertexAttribute as m}from"../lib/VertexAttribute.js";import{pathVertexAttributeLocations as f,PathTechniqueConfiguration as b,PathTechnique as v,PathPassParameters as S}from"./PathTechnique.js";import{writeDefaultAttributes as A,writeBufferVec4 as g}from"./internal/bufferWriterUtils.js";import{intersectAabbInvDir as E}from"./internal/MaterialUtil.js";class _ extends h{constructor(e){super(e,new T),this.supportsEdges=!0,this._vertexAttributeLocations=f,this._configuration=new b,this.vertexBufferLayout=_.getVertexBufferLayout(this.parameters)}getConfiguration(e,t){return this._configuration.output=e,this._configuration.vvSize=this.parameters.vvSizeEnabled,this._configuration.vvColor=this.parameters.vvColorEnabled,this._configuration.vvOpacity=this.parameters.vvOpacityEnabled,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.hasOccludees=this.parameters.hasOccludees,e!==a.Color&&e!==a.Alpha||(this._configuration.doubleSidedMode=this.parameters.doubleSided&&"normal"===this.parameters.doubleSidedType?o.View:this.parameters.doubleSided&&"winding-order"===this.parameters.doubleSidedType?o.WindingOrder:o.None,this._configuration.receiveShadows=this.parameters.receiveShadows,this._configuration.receiveAmbientOcclusion=!!t.ssaoHelper.ready&&this.parameters.receiveSSAO),this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}isVisibleInPass(e){return e!==l.MATERIAL_DEPTH_SHADOWMAP_ALL&&e!==l.MATERIAL_DEPTH_SHADOWMAP_DEFAULT&&e!==l.MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT||this.parameters.castShadows}isVisible(){const e=this.parameters;return!!super.isVisible()&&e.opacity>0}intersect(i,s,a,o,n,u,h){const l=i;if(!c(l))return;const p=l.path,d=[this.parameters.size[0],this.parameters.size[1]];if(this.parameters.vvSizeEnabled){const t=this.parameters.vvSizeOffset,r=this.parameters.vvSizeFactor,i=this.parameters.vvSizeMinSize,s=this.parameters.vvSizeMaxSize,a=p.sizeAttributeValue;d[0]*=e(t[0]+a*r[0],i[0],s[0]),d[1]*=e(t[2]+a*r[2],i[2],s[2])}const m=Math.max(d[0],d[1]),f=i.boundingInfo;if(t(f))return void this._intersectTriangles(p,d,n,u,h);const b=r(f.bbMin[0]-m,f.bbMin[1]-m,f.bbMin[2]-m,f.bbMax[0]+m,f.bbMax[1]+m,f.bbMax[2]+m),v=[u[0]-n[0],u[1]-n[1],u[2]-n[2]],S=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]),A=[S/v[0],S/v[1],S/v[2]];E(b,n,A,o.tolerance)&&this._intersectTriangles(p,d,n,u,h)}_intersectTriangles(e,t,r,i,s){e.baked.size&&e.baked.size[0]===t[0]&&e.baked.size[1]===t[1]||e.baked.bake(t),e.baked.intersect(r,i,s)}computeAttachmentOrigin(e,t){const r=e.vertexAttributes;if(!r)return null;const i=r.get(m.POSITION);return n(i,null,!1,t)}createBufferWriter(){return new L(this.vertexBufferLayout)}requiresSlot(e){return e===(this.parameters.transparent?p.TRANSPARENT_MATERIAL:p.OPAQUE_MATERIAL)||e===p.DRAPED_MATERIAL}createGLMaterial(e){return e.output===a.Color||e.output===a.Alpha||e.output===a.Depth||e.output===a.Normal||e.output===a.Highlight||e.output===a.Shadow&&this.parameters.castShadows?new O(e):null}static getVertexBufferLayout(e){let t=s().vec3f(m.POSITION).vec4f(m.PROFILERIGHT).vec4f(m.PROFILEUP).vec4f(m.PROFILEVERTEXANDNORMAL);return(e.vvColorEnabled||e.vvSizeEnabled||e.vvOpacityEnabled)&&(t=t.vec4f(m.FEATUREVALUE)),t}}class O extends u{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}_updateShadowState(e){(t(this.technique)||e.shadowMap.enabled!==this.technique.configuration.receiveShadows)&&this._material.setParameters({receiveShadows:e.shadowMap.enabled})}beginSlot(e){return this._output!==a.Color&&this._output!==a.Alpha||(this._updateShadowState(e),this._updateOccludeeState(e)),this.ensureTechnique(v,e)}}class T extends S{constructor(){super(...arguments),this.doubleSided=!1,this.doubleSidedType="normal",this.receiveSSAO=!0,this.receiveShadows=!1,this.castShadows=!0,this.hasSlicePlane=!1,this.transparent=!1,this.hasOccludees=!1}}class L{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(m.POSITION).length}write(e,t,r,s){const a=e=>{if(t.vertexAttributes.has(e)){const a=t.vertexAttributes.get(e),o=t.indices.get(e);d(4===a.size);const n=r.getField(e,i);if(!n)throw new Error("unable to acquire view for "+e);g(o,a.data,n,s)}};a(m.PROFILERIGHT),a(m.PROFILEUP),a(m.PROFILEVERTEXANDNORMAL),this.vertexBufferLayout.hasField(m.FEATUREVALUE)&&a(m.FEATUREVALUE),A(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,r,s)}}export{_ as PathMaterial,T as PathMaterialParameters};
