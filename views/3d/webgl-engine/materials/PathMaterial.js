/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/mathUtils","../../../../core/maybe","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/buffer/BufferView","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../core/shaderLibrary/shading/Normals.glsl","../lib/geometryDataUtils","../lib/GLMaterial","../lib/Material","../lib/PathGeometry","../lib/RenderSlot","../lib/Util","../lib/VertexAttribute","./PathTechnique","./internal/bufferWriterUtils","./internal/MaterialUtil"],(function(e,t,r,i,a,s,n,u,o,h,c,l,d,p,f,b,S,v,m){"use strict";let g=function(e){function s(t){var r;return(r=e.call(this,t,new A)||this).supportsEdges=!0,r._vertexAttributeLocations=S.vertexAttributeLocations,r._configuration=new S.PathTechniqueConfiguration,r._vertexBufferLayout=s.getVertexBufferLayout(r.parameters),r}t._inheritsLoose(s,e);var c=s.prototype;return c.getConfiguration=function(e,t){return this._configuration.output=e,this._configuration.vvSize=this.parameters.vvSizeEnabled,this._configuration.vvColor=this.parameters.vvColorEnabled,this._configuration.vvOpacity=this.parameters.vvOpacityEnabled,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.hasOccludees=this.parameters.hasOccludees,e!==u.ShaderOutput.Color&&e!==u.ShaderOutput.Alpha||(this._configuration.doubleSidedMode=this.parameters.doubleSided&&"normal"===this.parameters.doubleSidedType?o.NormalsDoubleSidedMode.View:this.parameters.doubleSided&&"winding-order"===this.parameters.doubleSidedType?o.NormalsDoubleSidedMode.WindingOrder:o.NormalsDoubleSidedMode.None,this._configuration.receiveShadows=this.parameters.receiveShadows,this._configuration.receiveAmbientOcclusion=!!t.ssaoHelper.ready&&this.parameters.receiveSSAO),this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration},c.isVisibleForOutput=function(e){return e!==u.ShaderOutput.Shadow&&e!==u.ShaderOutput.ShadowExludeHighlight&&e!==u.ShaderOutput.ShadowHighlight||this.parameters.castShadows},c.isVisible=function(){return e.prototype.isVisible.call(this)&&this.parameters.opacity>0},c.intersect=function(e,t,s,n,u,o,h){const c=e;if(!d.isPathGeometry(c))return;const l=c.path,p=[this.parameters.size[0],this.parameters.size[1]];if(this.parameters.vvSizeEnabled){const e=this.parameters.vvSizeOffset,t=this.parameters.vvSizeFactor,i=this.parameters.vvSizeMinSize,a=this.parameters.vvSizeMaxSize,s=l.sizeAttributeValue;p[0]*=r.clamp(e[0]+s*t[0],i[0],a[0]),p[1]*=r.clamp(e[2]+s*t[2],i[2],a[2])}const f=Math.max(p[0],p[1]),b=e.boundingInfo;if(i.isNone(b))return void this._intersectTriangles(l,p,u,o,h);const S=a.fromValues(b.bbMin[0]-f,b.bbMin[1]-f,b.bbMin[2]-f,b.bbMax[0]+f,b.bbMax[1]+f,b.bbMax[2]+f),v=[o[0]-u[0],o[1]-u[1],o[2]-u[2]],g=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]),O=[g/v[0],g/v[1],g/v[2]];m.intersectAabbInvDir(S,u,O,n.tolerance)&&this._intersectTriangles(l,p,u,o,h)},c._intersectTriangles=function(e,t,r,i,a){e.baked.size&&e.baked.size[0]===t[0]&&e.baked.size[1]===t[1]||e.baked.bake(t),e.baked.intersect(r,i,a)},c.computeAttachmentOrigin=function(e,t){const r=e.vertexAttributes;if(!r)return null;const i=r.get(b.VertexAttribute.POSITION);return h.computeAttachmentOriginLines(i,null,!1,t)},c.createBufferWriter=function(){return new _(this._vertexBufferLayout)},c.requiresSlot=function(e,t){switch(t){case u.ShaderOutput.Shadow:case u.ShaderOutput.ShadowHighlight:case u.ShaderOutput.ShadowExludeHighlight:if(!this.parameters.castShadows)return!1;case u.ShaderOutput.Color:case u.ShaderOutput.Alpha:case u.ShaderOutput.Depth:case u.ShaderOutput.Normal:case u.ShaderOutput.Highlight:case u.ShaderOutput.ObjectAndLayerIdColor:return e===(this.parameters.transparent?p.RenderSlot.TRANSPARENT_MATERIAL:p.RenderSlot.OPAQUE_MATERIAL)||e===p.RenderSlot.DRAPED_MATERIAL;default:return!1}},c.createGLMaterial=function(e){return new O(e)},s.getVertexBufferLayout=function(e){const t=n.newLayout().vec3f(b.VertexAttribute.POSITION).vec4f(b.VertexAttribute.PROFILERIGHT).vec4f(b.VertexAttribute.PROFILEUP).vec4f(b.VertexAttribute.PROFILEVERTEXANDNORMAL);return(e.vvColorEnabled||e.vvSizeEnabled||e.vvOpacityEnabled)&&t.vec4f(b.VertexAttribute.FEATUREVALUE),t},s}(l.Material),O=function(e){function r(){return e.apply(this,arguments)||this}t._inheritsLoose(r,e);var a=r.prototype;return a._updateOccludeeState=function(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})},a._updateShadowState=function(e){(i.isNone(this.technique)||e.shadowMap.enabled!==this.technique.configuration.receiveShadows)&&this._material.setParameters({receiveShadows:e.shadowMap.enabled})},a.beginSlot=function(e){return this._output!==u.ShaderOutput.Color&&this._output!==u.ShaderOutput.Alpha||(this._updateShadowState(e),this._updateOccludeeState(e)),this.ensureTechnique(S.PathTechnique,e)},r}(c),A=function(e){function r(){var t;return(t=e.apply(this,arguments)||this).doubleSided=!1,t.doubleSidedType="normal",t.receiveSSAO=!0,t.receiveShadows=!1,t.castShadows=!0,t.hasSlicePlane=!1,t.transparent=!1,t.hasOccludees=!1,t}return t._inheritsLoose(r,e),r}(S.PathPassParameters),_=function(){function e(e){this.vertexBufferLayout=e}var t=e.prototype;return t.allocate=function(e){return this.vertexBufferLayout.createBuffer(e)},t.elementCount=function(e){return e.indices.get(b.VertexAttribute.POSITION).length},t.write=function(e,t,r,i,a){y(b.VertexAttribute.PROFILERIGHT,r,i,a),y(b.VertexAttribute.PROFILEUP,r,i,a),y(b.VertexAttribute.PROFILEVERTEXANDNORMAL,r,i,a),this.vertexBufferLayout.hasField(b.VertexAttribute.FEATUREVALUE)&&y(b.VertexAttribute.FEATUREVALUE,r,i,a),v.writeDefaultAttributes(r,this.vertexBufferLayout,e,t,i,a)},e}();function y(e,t,r,i){if(t.vertexAttributes.has(e)){const a=t.vertexAttributes.get(e),n=t.indices.get(e);f.assert(4===a.size);const u=r.getField(e,s.BufferViewVec4f);if(!u)throw new Error("unable to acquire view for "+e);v.writeBufferVec4(n,a.data,u,i)}}e.PathMaterial=g,e.PathMaterialParameters=A,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
