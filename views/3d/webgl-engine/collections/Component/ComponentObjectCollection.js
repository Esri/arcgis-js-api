/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../../../core/Logger.js";import{isNone as t,isSome as o,unwrap as n,applySome as r}from"../../../../../core/maybe.js";import i from"../../../../../core/PooledArray.js";import{e as s,t as a}from"../../../../../chunks/mat3.js";import{c}from"../../../../../chunks/mat3f32.js";import{d as m,v as l,t as f}from"../../../../../chunks/vec3.js";import{a as p,c as h}from"../../../../../chunks/vec3f64.js";import{c as u}from"../../../../../chunks/vec4f32.js";import{a as b}from"../../../../../chunks/vec32.js";import{c as g}from"../../../../../chunks/vec33.js";import{ViewingMode as d}from"../../../../ViewingMode.js";import{computeOffsetObb as y}from"../../../layers/i3s/I3SUtil.js";import{ColorMixModeEnum as C,encodeSymbolColor as j}from"../../../layers/support/symbolColorUtils.js";import{clone as v,radius as _}from"../../../support/orientedBoundingBox.js";import{glLayout as w}from"../../../support/buffer/glUtil.js";import{newLayout as M}from"../../../support/buffer/InterleavedLayout.js";import x from"./ComponentData.js";import{State as O,ComponentObject as D}from"./ComponentObject.js";import S from"./IntersectionGeometry.js";import{Renderable as A}from"./Renderable.js";import{RenderGeometry as I}from"./RenderGeometry.js";import{RenderSubmitSystem as E}from"./RenderSubmitSystem.js";import{createVertexBufferLayout as P}from"./SourceGeometry.js";import{ComponentParametersVarying as R,ComponentParametersUniform as k,ComponentParameterSummary as U,ComponentMaterial as B}from"./Material/ComponentMaterial.js";import{encodeElevationOffset as T}from"./Material/shader/ComponentData.glsl.js";import{getVisibility as V,updateVisibilityWithCount as G}from"../../lib/ComponentUtils.js";import{assert as L}from"../../lib/Util.js";import{VertexAttribute as N}from"../../lib/VertexAttribute.js";import{getVerticalOffsetI3S as H}from"../../lib/verticalOffsetUtils.js";import{EdgeInputBufferLayout as W}from"../../lib/edgeRendering/bufferLayouts.js";import{extractComponentsEdgeLocationsLayout as q}from"../../lib/edgeRendering/EdgeProcessingWorker.js";import{BufferManager as z}from"../../lib/TextureBackedBuffer/BufferManager.js";import{BufferObject as X}from"../../../../webgl/BufferObject.js";import{Usage as Y,PrimitiveType as F}from"../../../../webgl/enums.js";import{VertexArrayObject as J}from"../../../../webgl/VertexArrayObject.js";const K=e.getLogger("esri.views.3d.webgl-engine.collections.Component.ComponentObjectCollection");class Q{constructor(e,t){this._renderManager=e,this._viewingMode=t,this._objects=[new i,new i],this._renderSubmit=new E(this),this._renderManager.register(this._renderSubmit),this._componentBufferManager=new z(e.rctx,2)}dispose(){L(0===this._objects[O.Hidden].length&&0===this._objects[O.Visible].length,"ObjectCollection should be empty upon disposal"),this._componentBufferManager.destroy()}createObject(e){const t=new D;return t.toMapSpace=e.toMapSpace,t.transform=e.transform,t.obb=v(e.obb),t.components=new x(this._componentBufferManager,e.geometry.componentOffsets),t.renderable=this._createRenderable(e,t.components),t.intersectionGeometry=new S(e.geometry.positionData,t.components),this._objects[t.visible].push(t),t}destroyObject(e){const t=e;this._objects[t.visible].removeUnordered(t),t.dispose(),this._notifyDirty()}setObjectVisibility(e,t){const o=e;t!==o.visible&&(this._objects[o.visible].removeUnordered(o),this._objects[t].push(o),o.visible=t,this._notifyDirty())}preSubmit(e){const t=e.camera.eye;this.visibleObjects.forAll((e=>e.renderable.meta.cameraDepthSquared=m(t,e.obb.center)))}getMaterial(e){return e.renderable.material}updateMaterial(e,t){const o=e.renderable.material;t(o),o.dirty&&this._notifyDirty()}setAllComponentVisibilities(e,t){const o=e;o.components.visibility.reset(t),o.components.visibilityDirty(),this._notifyDirty()}forEachVisibleComponent(e,t){return e.components.visibility.forEachComponent(t)}getComponentCount(e){const t=e,o=t.components.visibility.componentCount();return{visible:o,invisible:t.components.count-o}}setComponentData(e,n){const r=e,i=r.renderable.material,s=r.components,a=s.materialDataBuffer,c=s.materialDataIndices,m={castShadows:!0,pickable:!0,externalColor:u(),externalColorMixMode:C.Multiply,elevationOffset:0},l=a.textureBuffer,f=new Uint8Array(4),p=new Uint32Array(f.buffer);let h=0,b=0,g=0,d=s.verticalOffsets,_=1/0,w=-1/0,M=!1,x=!1,O=0;for(let u=0;u<s.count;u++)n(u,m),h+=+(m.externalColor[3]<1),b+=+(m.externalColorMixMode===C.Replace&&1===m.externalColor[3]),g+=+m.castShadows,j(m.externalColor,m.externalColorMixMode,f),f[2]=254&f[2]|+m.castShadows,l.setData(c[u],0,f[0],f[1],f[2],f[3]),M||(M=u>0&&O!==p[0]),O=p[0],x||(x=0!==m.elevationOffset),x&&t(d)&&(d=new Array(u).fill(0)),o(d)&&(d[u]=m.elevationOffset),_=Math.min(_,m.elevationOffset),w=Math.max(w,m.elevationOffset),T(m.elevationOffset,f),l.setData(c[u],1,f[0],f[1],f[2],f[3]),m.pickable!==V(s.pickability,u)&&(s.pickability=G(s.pickability,s.count,u,m.pickable));s.verticalOffsets=x?d:null,r.offsetObb=x?y(r.obb,_,w,this._viewingMode,o(r.offsetObb)?r.offsetObb:v(r.obb)):null,M||x?(i.componentParameters=new R,i.componentParameters.castShadows=$(g,s.count),i.componentParameters.transparent=$(h,s.count),i.componentParameters.opaqueOverride=$(b,s.count),i.componentParameters.texture=l,l.updateTexture()):(i.componentParameters=new k,i.componentParameters.castShadows=m.castShadows?U.All:U.None,i.componentParameters.externalColor=m.externalColor,i.componentParameters.externalColorMixMode=m.externalColorMixMode),this._notifyDirty()}getComponentAabb(e,o,r,i=!1){e.intersectionGeometry.getComponentAabb(o,r);const s=e,a=s.components.verticalOffsets;if(i||t(a))return r;const c=a[o];if(this._viewingMode===d.Local||0===c)return r[2]+=c,r[5]+=c,r;const m=n(H(c));return m.localOrigin=s.transform.position,m.applyToAabb(r)}getComponentObb(e){return e.obb}getObjectTransform(e){return e.transform}getComponentPositions(e,t,o){return e.intersectionGeometry.getComponentPositions(t,o)}intersect(e,t,n,r,i,c){const m=e;o(i)&&(i.localOrigin=m.transform.position);const p=s(ee,m.transform.rotationScale);l(te,t,m.transform.position),l(oe,n,m.transform.position),f(te,te,p),f(oe,oe,p);const h=a(ee,p);return m.intersectionGeometry.intersect(te,oe,r,h,i,m.components.verticalOffsets,c)}addEdges(e,t,o,n){const r=e,{indices:i,positions:s}=r.intersectionGeometry,a=r.components.offsets;return t.addComponentObject(e,r.transform,{center:r.obb.center,radius:_(r.obb)},s,i,a,o,n)}async extractEdgeInformation(e,t,o){const n=e,r=n.components.visibility;if(r.allInvisible())return{buffer:q.createBuffer(0),origin:[0,0,0]};const{indices:i,positions:s}=n.intersectionGeometry,a=n.components.offsets,c=W.createBuffer(s.count);g(c.position,s),b(c.position,c.position,n.transform.rotationScale),this._setComponentIndices(c.componentIndex,i,a);const m=c.count,l=this._computeVisibilityIndices(i,r,a,m);return{origin:p(n.transform.position),buffer:await t.extractComponentsEdgeLocations({indices:l,indicesLength:l.length,skipDeduplicate:!0,data:c,writerSettings:{reducedPrecision:!1,variants:0}},o)}}_setComponentIndices(e,t,o){let n=0;for(let r=0;r<o.length-1;r++){const i=o[r],s=o[r+1];for(let o=i;o<s;o++){const r=t?t[o]:o;e.set(r,n)}n++}}_computeVisibilityIndices(e,t,o,n){if(e&&t.allVisible())return e;let r=0;t.forEachComponentRange(((e,t)=>(r+=o[t]-o[e],!0)));const i=2===e?.BYTES_PER_ELEMENT||n<=65536?new Uint16Array(r):new Uint32Array(r);let s=0;return t.forEachComponentRange(((t,n)=>{const r=o[t],a=o[n];for(let o=r;o<a;o++)i[s++]=e?e[o]:o;return!0})),i}addComponentHighlight(e,o){const n=e.components;t(n.highlightCounts)&&(n.highlightCounts=new Uint32Array(n.count+1));0===n.highlightCounts[o]++&&(n.highlightsDirty(),this._notifyDirty()),n.highlightCounts[n.count]++}removeComponentHighlight(e,o){const n=e.components;if(t(n.highlightCounts))return void K.warn("Removing non-existing highlight.");const r=n.highlightCounts[o],i=n.highlightCounts[n.count];if(0!==r){if(r>1)return n.highlightCounts[o]=r-1,void(n.highlightCounts[n.count]=i-1);n.highlightCounts[o]=0,n.highlightsDirty(),this._notifyDirty(),1===i?n.highlightCounts=null:n.highlightCounts[n.count]=i-1}else K.warn("Removing non-existing highlight.")}clearHighlights(e){const t=e.components;o(t.highlightCounts)&&(t.highlightCounts=null,t.highlightsDirty(),this._notifyDirty())}getObjectGPUMemoryUsage(e){return e.renderable.meta.gpuMemoryEstimate}get visibleObjects(){return this._objects[O.Visible]}_createRenderable(e,t){const i=this._renderManager.rctx,s=e.geometry,a=s.vertices.layoutParameters,c=X.createVertex(i,Y.STATIC_DRAW,s.vertices.data),m=r(s.indices,(e=>X.createIndex(i,Y.STATIC_DRAW,e))),l=w(P(a)),f=new Uint16Array(s.vertices.count);for(let n=0;n<t.count;n++){const e=t.offsets[n],r=t.offsets[n+1],i=t.materialDataIndices[n];if(o(s.indices))for(let t=e;t<r;t++){f[s.indices[t]]=i}else for(let t=e;t<r;t++)f[t]=i}const p=X.createVertex(i,Y.STATIC_DRAW,f.buffer),h=new B(e.transform,e.toMapSpace),u=new J(i,h.attributeLocations,{data:l,componentIndices:Z},{data:c,componentIndices:p},n(m)),b=new I(u,F.TRIANGLES,a,o(m)),g={cameraDepthSquared:.5,gpuMemoryEstimate:c.byteSize+p.byteSize+(o(m)?m.byteSize:0)};return new A(h,b,g)}_notifyDirty(){this._renderManager.notifyDirty()}}const Z=w(M().u16(N.COMPONENTINDEX));function $(e,t){return e===t?U.All:0===e?U.None:U.Some}const ee=c(),te=h(),oe=h();export{Q as ComponentObjectCollection};
