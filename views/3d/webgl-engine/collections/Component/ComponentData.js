/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/maybe","./IndexRange/ComponentRangeRunLengthEncoded"],(function(t,e,i){"use strict";function h(t,e,i){const h=[],n=[];let s=i.length,a=i.length;return e.forEachComponent((e=>(t[e]>0?(s!==e-1&&(h.length&&h.push(i[s+1]-h[h.length-1]),h.push(i[e])),s=e):(a!==e-1&&(n.length&&n.push(i[a+1]-n[n.length-1]),n.push(i[e])),a=e),!0))),h.length&&h.push(i[s+1]-h[h.length-1]),n.length&&n.push(i[a+1]-n[n.length-1]),{highlightRanges:h,defaultRanges:n}}return function(){function n(t,e){this.pickability=null,this.highlightCounts=null,this.verticalOffsets=null,this.cachedGeometryRanges=null,this.cachedHighlightRanges=null,this.cachedDefaultRanges=null,this.offsets=e.slice();const h=this.count;this.visibility=new i.ComponentRangeRunLengthEncoded(h),this.materialDataBuffer=t.getBuffer(h),this.materialDataIndices=new Uint16Array(h);for(let i=0;i<h;i++)this.materialDataIndices[i]=this.materialDataBuffer.acquireIndex()}var s=n.prototype;return s.destroy=function(){for(let t=0;t<this.count;t++)this.materialDataBuffer.releaseIndex(this.materialDataIndices[t])},s.highlightsDirty=function(){this.cachedHighlightRanges=null,this.cachedDefaultRanges=null},s.visibilityDirty=function(){this.cachedGeometryRanges=null,this.highlightsDirty()},s._updateCachedHighlightRanges=function(){if((e.isNone(this.cachedHighlightRanges)||e.isNone(this.cachedDefaultRanges))&&e.isSome(this.highlightCounts)){const{highlightRanges:t,defaultRanges:e}=h(this.highlightCounts,this.visibility,this.offsets);this.cachedHighlightRanges=t,this.cachedDefaultRanges=e}},t._createClass(n,[{key:"count",get:function(){return this.offsets.length-1}},{key:"geometryRanges",get:function(){return e.isNone(this.cachedGeometryRanges)&&(this.cachedGeometryRanges=this.visibility.computeOffsetRanges(this.offsets)),this.cachedGeometryRanges}},{key:"highlightRanges",get:function(){return e.isNone(this.highlightCounts)?null:(this._updateCachedHighlightRanges(),this.cachedHighlightRanges)}},{key:"defaultShadowMapRanges",get:function(){return e.isNone(this.highlightCounts)?this.geometryRanges:(this._updateCachedHighlightRanges(),this.cachedDefaultRanges)}}]),n}()}));
