/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../chunks/tslib.es6","../../../../../../core/maybe","../../../../../../chunks/mat3","../../../../../../chunks/mat3f32","../../../../../../chunks/vec3","../../../../../../chunks/vec3f32","../../../../../../chunks/vec4","../../../../../../chunks/vec4f32","../../../../layers/support/symbolColorUtils","../../../../support/debugFlags","../../../../terrain/interfaces","./ComponentTechnique","./ComponentTechniqueConfiguration","./shader/ComponentData.glsl","../../../../../../chunks/ComponentShader.glsl","./shader/VertexDiscardByOpacity.glsl","../../../core/material/MaterialBase","../../../core/renderPasses/AllRenderPasses","../../../core/shaderLibrary/ShaderOutput","../../../core/shaderLibrary/attributes/NormalAttribute.glsl","../../../core/shaderLibrary/shading/Normals.glsl","../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl","../../../core/shaderLibrary/util/AlphaCutoff","../../../core/shaderLibrary/util/EllipsoidMode","../../../core/util/TwoVectorPosition","../../../lib/basicInterfaces","../../../lib/TransparencyPassType"],(function(e,r,t,a,o,s,n,i,l,u,d,p,c,m,h,y,M,g,S,T,b,v,C,P,_,x,f,O,w){"use strict";let A=function(t){function n(e,r){var a;(a=t.call(this)||this).toMapSpace=r,a.baseColor=u.fromValues(1,1,1,1),a.usePBR=!1,a.hasParametersFromSource=!1,a.mrrFactors=i.fromValues(1,1,.5),a.emissiveFactor=i.fromValues(0,0,0),a.baseColorTexture=null,a.metallicRoughnessTexture=null,a.emissionTexture=null,a.occlusionTexture=null,a.normalTexture=null,a.objectOpacity=1,a.commonMaterialParameters=new D,a.componentParameters=new I,a.textureAlphaCutoff=_.defaultMaskAlphaCutoff,a.alphaDiscardMode=O.AlphaDiscardMode.Opaque,a.isIntegratedMesh=!1,a.polygonOffsetEnabled=!1,a.ellipsoidMode=x.EllipsoidMode.Earth,a.hasOccludees=!1,a._techniqueConfiguration=new h.ComponentTechniqueConfiguration;const n=new f.TwoVectorPosition(e.position),l=s.clone(e.rotationScale);return o.invert(l,l),a.transformNormalGlobalFromModel=o.transpose(l,l),a.transformWorldFromModelTL=n.low,a.transformWorldFromModelTH=n.high,a.transformWorldFromModelRS=e.rotationScale,a}r._inheritsLoose(n,t);var l=n.prototype;return l.dispose=function(){this._technique=a.releaseMaybe(this._technique),this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.emissionTexture=null,this.occlusionTexture=null,this.normalTexture=null},l.prepareTechnique=function(e,r,t,o){const s=this._techniqueConfiguration;s.hasVertexColors=o.colors,s.hasNormals=o.normals,s.textureCoordinateType=o.textureCoordinates,s.hasMetallicRoughnessTexture=a.isSome(this.metallicRoughnessTexture),s.hasEmissionTexture=a.isSome(this.emissionTexture),s.hasOcclusionTexture=a.isSome(this.occlusionTexture),s.hasNormalTexture=a.isSome(this.normalTexture),s.transparencyPassType=r.identifier===T.RenderPassIdentifier.Material&&null!=t.transparencyPassType?t.transparencyPassType:w.TransparencyPassType.NONE,s.hasMultipassTerrain=r.identifier===T.RenderPassIdentifier.Material&&null!=t.multipassTerrain&&t.multipassTerrain.enabled,s.cullAboveGround=r.identifier===T.RenderPassIdentifier.Material&&null!=t.multipassTerrain&&t.multipassTerrain.cullAboveGround,s.ellipsoidMode=this.ellipsoidMode,s.componentData=this.componentParameters.type,s.cullFace=this.commonMaterialParameters.cullFace,s.doubleSidedMode=this.commonMaterialParameters.doubleSided?C.NormalsDoubleSidedMode.View:C.NormalsDoubleSidedMode.None,s.hasBaseColorTexture=a.isSome(this.baseColorTexture);const n=this._computeWhichMaterialPass();s.blendingEnabled=n===N.Transparent||n===N.OpaqueAndTransparent,s.alphaDiscardMode=this.alphaDiscardMode,s.integratedMeshMode=this.isIntegratedMesh?F(t)?M.getOverlayNormalTexture(t)?h.IntegratedMeshMode.ColorOverlayWithWater:h.IntegratedMeshMode.ColorOverlay:h.IntegratedMeshMode.NoOverlay:h.IntegratedMeshMode.None,s.useLegacyTerrainShading=this.isIntegratedMesh&&p.TERRAIN_USE_LEGACY_SHADING,s.hasPolygonOffset=this.polygonOffsetEnabled;const i=this.hasParametersFromSource&&a.isNone(this.baseColorTexture);return s.pbrMode=s.integratedMeshMode===h.IntegratedMeshMode.ColorOverlayWithWater?P.PBRMode.WaterOnIntegratedMesh:this.usePBR?i?P.PBRMode.Schematic:P.PBRMode.Normal:P.PBRMode.Disabled,s.normalType=s.integratedMeshMode===h.IntegratedMeshMode.None?s.hasNormals?v.NormalAttributeType.CompressedAttribute:v.NormalAttributeType.ScreenDerivative:v.NormalAttributeType.Ground,s.hasSlicePlane=a.isSome(t.slicePlane)&&this.commonMaterialParameters.hasSlicePlane,r.identifier===T.RenderPassIdentifier.ShadowMap?(s.output=b.ShaderOutput.Shadow,s.vertexDiscardMode=g.VertexDiscardMode.None):r.identifier===T.RenderPassIdentifier.Highlight?(s.output=b.ShaderOutput.Highlight,s.vertexDiscardMode=g.VertexDiscardMode.None):(this._computeWhichMaterialPass()===N.OpaqueAndTransparent?s.vertexDiscardMode=r.transparent?g.VertexDiscardMode.Opaque:g.VertexDiscardMode.Transparent:s.vertexDiscardMode=g.VertexDiscardMode.None,s.output=k(r.subPass),r.subPass===T.MaterialSubPass.Alpha&&(s.hasOccludees=t.hasOccludees),r.subPass===T.MaterialSubPass.Color?(s.receiveAmbientOcclusion=t.ssaoHelper.ready,s.hasOccludees=t.hasOccludees,s.receiveShadows=t.shadowMap.ready,s.hasScreenSpaceReflections=t.ssr.enabled,s.hasCloudsReflections=a.isSome(t.cloudsFade.data)):(s.receiveAmbientOcclusion=!1,s.receiveShadows=!1),s.snowCover=this.hasSnowCover(t),r.subPass===T.MaterialSubPass.ObjectAndLayerIdColor&&(s.objectAndLayerIdColor=!0)),this._technique=e.releaseAndAcquire(m.ComponentTechnique,s,this._technique),this._setClean(),this._technique},l.hasSnowCover=function(e){return a.isSome(e.weather)&&e.weatherVisible&&"snowy"===e.weather.type&&"enabled"===e.weather.snowCover},l.submit=function(r,t,o){if(0===this.objectOpacity)return;const s=o.renderable.geometry,n=o.components,i=o.renderable.meta.cameraDepthSquared,l=n.geometryRanges,u=n.highlightRanges,d=n.defaultShadowMapRanges;switch(this._computeWhichMaterialPass()){case N.Opaque:r.materialOpaque.submitDraw(this,s,l,i);break;case N.Transparent:r.materialTransparent.submitDraw(this,s,l,i);break;case N.OpaqueAndTransparent:r.materialOpaque.submitDraw(this,s,l,i),r.materialTransparent.submitDraw(this,s,l,i);break;case N.IntegratedMesh:r.materialIntegratedMesh.submitDraw(this,s,l,i),B(t)&&r.highlightIntegratedMesh.submitDraw(this,s,l,i)}const p=this.componentParameters.castShadows!==e.ComponentParameterSummary.None;p&&r.shadowMap.submitDraw(this,s,l,i),a.isSome(u)&&(r.highlight.submitDraw(this,s,u,i),p&&r.highlightShadowMap.submitDraw(this,s,u,i)),p&&a.isSome(d)&&r.defaultShadowMap.submitDraw(this,s,d,i)},l._computeWhichMaterialPass=function(){return this.isIntegratedMesh?N.IntegratedMesh:this.objectOpacity<1?N.Transparent:this.componentParameters.opaqueOverride===e.ComponentParameterSummary.All?N.Opaque:this.baseColor[3]<1||this.alphaDiscardMode===O.AlphaDiscardMode.Blend||this.alphaDiscardMode===O.AlphaDiscardMode.MaskBlend?N.Transparent:this.componentParameters.transparent===e.ComponentParameterSummary.None?N.Opaque:this.componentParameters.transparent===e.ComponentParameterSummary.All?N.Transparent:N.OpaqueAndTransparent},r._createClass(n,[{key:"texture",get:function(){return a.isSome(this.baseColorTexture)?this.baseColorTexture.glTexture:null}},{key:"textureMetallicRoughness",get:function(){return a.isSome(this.metallicRoughnessTexture)?this.metallicRoughnessTexture.glTexture:null}},{key:"textureEmissive",get:function(){return a.isSome(this.emissionTexture)?this.emissionTexture.glTexture:null}},{key:"textureOcclusion",get:function(){return a.isSome(this.occlusionTexture)?this.occlusionTexture.glTexture:null}},{key:"textureNormal",get:function(){return a.isSome(this.normalTexture)?this.normalTexture.glTexture:null}}]),n}(S.MaterialBase);var N;t.__decorate([S.parameter({vectorOps:l.vec4})],A.prototype,"baseColor",void 0),t.__decorate([S.parameter()],A.prototype,"usePBR",void 0),t.__decorate([S.parameter()],A.prototype,"hasParametersFromSource",void 0),t.__decorate([S.parameter({vectorOps:n.vec3})],A.prototype,"mrrFactors",void 0),t.__decorate([S.parameter({vectorOps:n.vec3})],A.prototype,"emissiveFactor",void 0),t.__decorate([S.parameter({dispose:!0})],A.prototype,"baseColorTexture",void 0),t.__decorate([S.parameter({dispose:!0})],A.prototype,"metallicRoughnessTexture",void 0),t.__decorate([S.parameter({dispose:!0})],A.prototype,"emissionTexture",void 0),t.__decorate([S.parameter({dispose:!0})],A.prototype,"occlusionTexture",void 0),t.__decorate([S.parameter({dispose:!0})],A.prototype,"normalTexture",void 0),t.__decorate([S.parameter()],A.prototype,"objectOpacity",void 0),t.__decorate([S.parameterBlock()],A.prototype,"commonMaterialParameters",void 0),t.__decorate([S.parameterBlock()],A.prototype,"componentParameters",void 0),t.__decorate([S.parameter()],A.prototype,"textureAlphaCutoff",void 0),t.__decorate([S.parameter()],A.prototype,"alphaDiscardMode",void 0),t.__decorate([S.parameter()],A.prototype,"isIntegratedMesh",void 0),t.__decorate([S.parameter()],A.prototype,"polygonOffsetEnabled",void 0),t.__decorate([S.parameter()],A.prototype,"ellipsoidMode",void 0),t.__decorate([S.parameter()],A.prototype,"hasOccludees",void 0),function(e){e[e.Opaque=0]="Opaque",e[e.Transparent=1]="Transparent",e[e.OpaqueAndTransparent=2]="OpaqueAndTransparent",e[e.IntegratedMesh=3]="IntegratedMesh"}(N||(N={}));let D=function(e){function t(){var r;return(r=e.apply(this,arguments)||this).doubleSided=!1,r.cullFace=O.CullFaceOptions.Back,r.hasSlicePlane=!0,r}return r._inheritsLoose(t,e),t}(S.MaterialParameterBlock);t.__decorate([S.parameter()],D.prototype,"doubleSided",void 0),t.__decorate([S.parameter()],D.prototype,"cullFace",void 0),t.__decorate([S.parameter()],D.prototype,"hasSlicePlane",void 0);let I=function(t){function a(){var r;return(r=t.apply(this,arguments)||this).externalColor=u.fromValues(1,1,1,1),r.externalColorMixMode=d.ColorMixModeEnum.Multiply,r.castShadows=e.ComponentParameterSummary.All,r}return r._inheritsLoose(a,t),r._createClass(a,[{key:"transparent",get:function(){return this.externalColor[3]<1?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}},{key:"opaqueOverride",get:function(){return this.externalColorMixMode===d.ColorMixModeEnum.Replace&&1===this.externalColor[3]?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}},{key:"visible",get:function(){return this.externalColor[3]>0?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}},{key:"type",get:function(){return y.ComponentDataType.Uniform}}]),a}(S.MaterialParameterBlock);var R;t.__decorate([S.parameter({vectorOps:l.vec4})],I.prototype,"externalColor",void 0),t.__decorate([S.parameter()],I.prototype,"externalColorMixMode",void 0),t.__decorate([S.parameter()],I.prototype,"castShadows",void 0),e.ComponentParameterSummary=void 0,(R=e.ComponentParameterSummary||(e.ComponentParameterSummary={}))[R.All=0]="All",R[R.Some=1]="Some",R[R.None=2]="None";let q=function(t){function a(){var r;return(r=t.apply(this,arguments)||this).texture=null,r.transparent=e.ComponentParameterSummary.None,r.opaqueOverride=e.ComponentParameterSummary.None,r.castShadows=e.ComponentParameterSummary.None,r}return r._inheritsLoose(a,t),r._createClass(a,[{key:"type",get:function(){return y.ComponentDataType.Varying}}]),a}(S.MaterialParameterBlock);function k(e){switch(e){case T.MaterialSubPass.Color:return b.ShaderOutput.Color;case T.MaterialSubPass.Alpha:return b.ShaderOutput.Alpha;case T.MaterialSubPass.Depth:return b.ShaderOutput.Depth;case T.MaterialSubPass.Normal:return b.ShaderOutput.Normal;case T.MaterialSubPass.ObjectAndLayerIdColor:return b.ShaderOutput.ObjectAndLayerIdColor}}function B(e){return 0!==e.overlays.length&&a.isSome(e.overlays[c.OverlayIndex.INNER].getValidTexture(c.RenderTargetType.Highlight))}function F(e){return 0!==e.overlays.length&&a.isSome(e.overlays[c.OverlayIndex.INNER].getColorTextureNoRasterImage())}t.__decorate([S.parameter()],q.prototype,"texture",void 0),t.__decorate([S.parameter()],q.prototype,"transparent",void 0),t.__decorate([S.parameter()],q.prototype,"opaqueOverride",void 0),t.__decorate([S.parameter()],q.prototype,"castShadows",void 0),e.CommonMaterialParameters=D,e.ComponentMaterial=A,e.ComponentParametersUniform=I,e.ComponentParametersVarying=q,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
