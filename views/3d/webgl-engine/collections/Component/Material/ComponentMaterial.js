/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../chunks/tslib.es6","../../../../../../core/maybe","../../../../../../chunks/mat3","../../../../../../chunks/mat3f32","../../../../../../chunks/vec3","../../../../../../chunks/vec3f32","../../../../../../chunks/vec4","../../../../../../chunks/vec4f32","../../../../../../chunks/vec4f64","../../../../layers/support/symbolColorUtils","../../../../support/debugFlags","../../../../terrain/interfaces","./ComponentTechnique","./ComponentTechniqueConfiguration","./shader/ComponentData.glsl","../../../../../../chunks/ComponentShader.glsl","./shader/VertexDiscardByOpacity.glsl","../../../core/material/MaterialBase","../../../core/renderPasses/AllRenderPasses","../../../core/shaderLibrary/ShaderOutput","../../../core/shaderLibrary/attributes/NormalAttribute.glsl","../../../core/shaderLibrary/shading/Normals.glsl","../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl","../../../core/shaderLibrary/util/AlphaCutoff","../../../core/shaderLibrary/util/EllipsoidMode","../../../core/util/TwoVectorPosition","../../../lib/basicInterfaces","../../../lib/TransparencyPassType"],(function(e,r,t,a,o,s,n,i,l,u,d,c,p,m,h,y,M,g,T,v,S,f,x,C,_,b,P,O,w,N){"use strict";let A=function(t){function n(e,r){var a;(a=t.call(this)||this).toMapSpace=r,a.baseColor=u.fromValues(1,1,1,1),a.usePBR=!1,a.hasParametersFromSource=!1,a.mrrFactors=i.fromValues(1,1,.5),a.emissiveFactor=i.fromValues(0,0,0),a.baseColorTexture=null,a.metallicRoughnessTexture=null,a.emissionTexture=null,a.occlusionTexture=null,a.normalTexture=null,a.objectOpacity=1,a.commonMaterialParameters=new R,a.componentParameters=new k,a.textureAlphaCutoff=b.defaultMaskAlphaCutoff,a.alphaDiscardMode=w.AlphaDiscardMode.Opaque,a.isIntegratedMesh=!1,a.polygonOffsetEnabled=!1,a.ellipsoidMode=P.EllipsoidMode.Earth,a.hasOccludees=!1,a._techniqueConfiguration=new y.ComponentTechniqueConfiguration;const n=new O.TwoVectorPosition(e.position),l=s.clone(e.rotationScale);return o.invert(l,l),a.transformNormalGlobalFromModel=o.transpose(l,l),a.transformWorldFromModelTL=n.low,a.transformWorldFromModelTH=n.high,a.transformWorldFromModelRS=e.rotationScale,a}r._inheritsLoose(n,t);var l=n.prototype;return l.dispose=function(){this._technique=a.releaseMaybe(this._technique),this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.emissionTexture=null,this.occlusionTexture=null,this.normalTexture=null},l.prepareTechnique=function(e,r,t,o){const s=this._techniqueConfiguration;s.hasVertexColors=o.colors,s.hasNormals=o.normals,s.textureCoordinateType=o.textureCoordinates,s.hasMetallicRoughnessTexture=a.isSome(this.metallicRoughnessTexture),s.hasEmissionTexture=a.isSome(this.emissionTexture),s.hasOcclusionTexture=a.isSome(this.occlusionTexture),s.hasNormalTexture=a.isSome(this.normalTexture),s.transparencyPassType=r.identifier===S.RenderPassIdentifier.Material&&null!=t.transparencyPassType?t.transparencyPassType:N.TransparencyPassType.NONE,s.hasMultipassTerrain=r.identifier===S.RenderPassIdentifier.Material&&null!=t.multipassTerrain&&t.multipassTerrain.enabled,s.cullAboveGround=r.identifier===S.RenderPassIdentifier.Material&&null!=t.multipassTerrain&&t.multipassTerrain.cullAboveGround,s.ellipsoidMode=this.ellipsoidMode,s.componentData=this.componentParameters.type,s.cullFace=this.commonMaterialParameters.cullFace,s.doubleSidedMode=this.commonMaterialParameters.doubleSided?C.NormalsDoubleSidedMode.View:C.NormalsDoubleSidedMode.None,s.hasBaseColorTexture=a.isSome(this.baseColorTexture);const n=this._computeWhichMaterialPass();s.blendingEnabled=n===D.Transparent||n===D.OpaqueAndTransparent,s.alphaDiscardMode=this.alphaDiscardMode,s.integratedMeshMode=this.isIntegratedMesh?F(t)?g.getOverlayNormalTexture(t)?y.IntegratedMeshMode.ColorOverlayWithWater:y.IntegratedMeshMode.ColorOverlay:y.IntegratedMeshMode.NoOverlay:y.IntegratedMeshMode.None,s.useLegacyTerrainShading=this.isIntegratedMesh&&p.TERRAIN_USE_LEGACY_SHADING,s.hasPolygonOffset=this.polygonOffsetEnabled;const i=this.hasParametersFromSource&&a.isNone(this.baseColorTexture);if(s.pbrMode=s.integratedMeshMode===y.IntegratedMeshMode.ColorOverlayWithWater?_.PBRMode.WaterOnIntegratedMesh:this.usePBR?i?_.PBRMode.Schematic:_.PBRMode.Normal:_.PBRMode.Disabled,s.normalType=s.integratedMeshMode===y.IntegratedMeshMode.None?s.hasNormals?x.NormalAttributeType.CompressedAttribute:x.NormalAttributeType.ScreenDerivative:x.NormalAttributeType.Ground,s.hasSlicePlane=a.isSome(t.slicePlane)&&this.commonMaterialParameters.hasSlicePlane,r.identifier===S.RenderPassIdentifier.ShadowMap)s.output=f.ShaderOutput.Shadow,s.vertexDiscardMode=T.VertexDiscardMode.None;else if(r.identifier===S.RenderPassIdentifier.Highlight)s.output=f.ShaderOutput.Highlight,s.vertexDiscardMode=T.VertexDiscardMode.None;else{switch(this._computeWhichMaterialPass()===D.OpaqueAndTransparent?s.vertexDiscardMode=r.transparent?T.VertexDiscardMode.Opaque:T.VertexDiscardMode.Transparent:s.vertexDiscardMode=T.VertexDiscardMode.None,s.output=r.output,s.receiveAmbientOcclusion=!1,s.receiveShadows=!1,r.output){case f.ShaderOutput.Color:s.receiveAmbientOcclusion=t.ssaoHelper.active,s.hasOccludees=t.hasOccludees,s.receiveShadows=t.shadowMap.ready,s.hasScreenSpaceReflections=t.ssr.enabled,s.hasCloudsReflections=a.isSome(t.cloudsFade.data);break;case f.ShaderOutput.Alpha:s.hasOccludees=t.hasOccludees;break;case f.ShaderOutput.ObjectAndLayerIdColor:s.objectAndLayerIdColor=!0}s.snowCover=this.hasSnowCover(t)}return this._technique=e.releaseAndAcquire(h.ComponentTechnique,s,this._technique),this._setClean(),this._technique},l.hasSnowCover=function(e){return a.isSome(e.weather)&&e.weatherVisible&&"snowy"===e.weather.type&&"enabled"===e.weather.snowCover},l.submit=function(r,t,o){if(0===this.objectOpacity)return;const s=o.renderable.geometry,n=o.components,i=o.renderable.meta.cameraDepthSquared,l=n.geometryRanges,u=n.highlightRanges,d=n.defaultShadowMapRanges;switch(this._computeWhichMaterialPass()){case D.Opaque:r.materialOpaque.submitDraw(this,s,l,i);break;case D.Transparent:r.materialTransparent.submitDraw(this,s,l,i);break;case D.OpaqueAndTransparent:r.materialOpaque.submitDraw(this,s,l,i),r.materialTransparent.submitDraw(this,s,l,i);break;case D.IntegratedMesh:r.materialIntegratedMesh.submitDraw(this,s,l,i),B(t)&&r.highlightIntegratedMesh.submitDraw(this,s,l,i)}const c=this.componentParameters.castShadows!==e.ComponentParameterSummary.None;c&&r.shadowMap.submitDraw(this,s,l,i),a.isSome(u)&&(r.highlight.submitDraw(this,s,u,i),c&&r.highlightShadowMap.submitDraw(this,s,u,i)),c&&a.isSome(d)&&r.defaultShadowMap.submitDraw(this,s,d,i)},l._computeWhichMaterialPass=function(){return this.isIntegratedMesh?D.IntegratedMesh:this.objectOpacity<1?D.Transparent:this.componentParameters.opaqueOverride===e.ComponentParameterSummary.All?D.Opaque:this.baseColor[3]<1||this.alphaDiscardMode===w.AlphaDiscardMode.Blend||this.alphaDiscardMode===w.AlphaDiscardMode.MaskBlend?D.Transparent:this.componentParameters.transparent===e.ComponentParameterSummary.None?D.Opaque:this.componentParameters.transparent===e.ComponentParameterSummary.All?D.Transparent:D.OpaqueAndTransparent},r._createClass(n,[{key:"texture",get:function(){return a.isSome(this.baseColorTexture)?this.baseColorTexture.glTexture:null}},{key:"textureMetallicRoughness",get:function(){return a.isSome(this.metallicRoughnessTexture)?this.metallicRoughnessTexture.glTexture:null}},{key:"textureEmissive",get:function(){return a.isSome(this.emissionTexture)?this.emissionTexture.glTexture:null}},{key:"textureOcclusion",get:function(){return a.isSome(this.occlusionTexture)?this.occlusionTexture.glTexture:null}},{key:"textureNormal",get:function(){return a.isSome(this.normalTexture)?this.normalTexture.glTexture:null}}]),n}(v.MaterialBase);var D;t.__decorate([v.parameter({vectorOps:l.vec4})],A.prototype,"baseColor",void 0),t.__decorate([v.parameter()],A.prototype,"usePBR",void 0),t.__decorate([v.parameter()],A.prototype,"hasParametersFromSource",void 0),t.__decorate([v.parameter({vectorOps:n.vec3})],A.prototype,"mrrFactors",void 0),t.__decorate([v.parameter({vectorOps:n.vec3})],A.prototype,"emissiveFactor",void 0),t.__decorate([v.parameter({dispose:!0})],A.prototype,"baseColorTexture",void 0),t.__decorate([v.parameter({dispose:!0})],A.prototype,"metallicRoughnessTexture",void 0),t.__decorate([v.parameter({dispose:!0})],A.prototype,"emissionTexture",void 0),t.__decorate([v.parameter({dispose:!0})],A.prototype,"occlusionTexture",void 0),t.__decorate([v.parameter({dispose:!0})],A.prototype,"normalTexture",void 0),t.__decorate([v.parameter()],A.prototype,"objectOpacity",void 0),t.__decorate([v.parameterBlock()],A.prototype,"commonMaterialParameters",void 0),t.__decorate([v.parameterBlock()],A.prototype,"componentParameters",void 0),t.__decorate([v.parameter()],A.prototype,"textureAlphaCutoff",void 0),t.__decorate([v.parameter()],A.prototype,"alphaDiscardMode",void 0),t.__decorate([v.parameter()],A.prototype,"isIntegratedMesh",void 0),t.__decorate([v.parameter()],A.prototype,"polygonOffsetEnabled",void 0),t.__decorate([v.parameter()],A.prototype,"ellipsoidMode",void 0),t.__decorate([v.parameter()],A.prototype,"hasOccludees",void 0),function(e){e[e.Opaque=0]="Opaque",e[e.Transparent=1]="Transparent",e[e.OpaqueAndTransparent=2]="OpaqueAndTransparent",e[e.IntegratedMesh=3]="IntegratedMesh"}(D||(D={}));let R=function(e){function t(){var r;return(r=e.apply(this,arguments)||this).doubleSided=!1,r.cullFace=w.CullFaceOptions.Back,r.hasSlicePlane=!0,r}return r._inheritsLoose(t,e),t}(v.MaterialParameterBlock);t.__decorate([v.parameter()],R.prototype,"doubleSided",void 0),t.__decorate([v.parameter()],R.prototype,"cullFace",void 0),t.__decorate([v.parameter()],R.prototype,"hasSlicePlane",void 0);let k=function(t){function a(){var r;return(r=t.apply(this,arguments)||this).externalColor=d.fromValues(1,1,1,1),r.externalColorMixMode=c.ColorMixModeEnum.Multiply,r.castShadows=e.ComponentParameterSummary.All,r}return r._inheritsLoose(a,t),r._createClass(a,[{key:"transparent",get:function(){return this.externalColor[3]<1?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}},{key:"opaqueOverride",get:function(){return this.externalColorMixMode===c.ColorMixModeEnum.Replace&&1===this.externalColor[3]?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}},{key:"visible",get:function(){return this.externalColor[3]>0?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}},{key:"type",get:function(){return M.ComponentDataType.Uniform}}]),a}(v.MaterialParameterBlock);var q;t.__decorate([v.parameter({vectorOps:l.vec4})],k.prototype,"externalColor",void 0),t.__decorate([v.parameter()],k.prototype,"externalColorMixMode",void 0),t.__decorate([v.parameter()],k.prototype,"castShadows",void 0),e.ComponentParameterSummary=void 0,(q=e.ComponentParameterSummary||(e.ComponentParameterSummary={}))[q.All=0]="All",q[q.Some=1]="Some",q[q.None=2]="None";let I=function(t){function a(){var r;return(r=t.apply(this,arguments)||this).texture=null,r.transparent=e.ComponentParameterSummary.None,r.opaqueOverride=e.ComponentParameterSummary.None,r.castShadows=e.ComponentParameterSummary.None,r}return r._inheritsLoose(a,t),r._createClass(a,[{key:"type",get:function(){return M.ComponentDataType.Varying}}]),a}(v.MaterialParameterBlock);function B(e){return 0!==e.overlays.length&&a.isSome(e.overlays[m.OverlayIndex.INNER].getValidTexture(m.RenderTargetType.Highlight))}function F(e){return 0!==e.overlays.length&&a.isSome(e.overlays[m.OverlayIndex.INNER].getColorTextureNoRasterImage())}t.__decorate([v.parameter()],I.prototype,"texture",void 0),t.__decorate([v.parameter()],I.prototype,"transparent",void 0),t.__decorate([v.parameter()],I.prototype,"opaqueOverride",void 0),t.__decorate([v.parameter()],I.prototype,"castShadows",void 0),e.CommonMaterialParameters=R,e.ComponentMaterial=A,e.ComponentParametersUniform=k,e.ComponentParametersVarying=I,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
