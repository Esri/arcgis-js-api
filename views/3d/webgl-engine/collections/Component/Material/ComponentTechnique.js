/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["require","exports","../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../chunks/tslib.es6","../../../../../../core/maybe","../../../../../../chunks/mat3f64","../../../../../../chunks/vec4f64","./shader/ComponentData.glsl","../../../../../../chunks/ComponentShader.glsl","./shader/VertexDiscardByOpacity.glsl","../../../core/renderPasses/AllRenderPasses","../../../core/shaderLibrary/ShaderOutputOptions","../../../core/shaderLibrary/Slice.glsl","../../../core/shaderLibrary/attributes/NormalAttribute.glsl","../../../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl","../../../core/shaderLibrary/attributes/VertexPosition.glsl","../../../core/shaderLibrary/output/OutputHighlight.glsl","../../../core/shaderLibrary/shading/Normals.glsl","../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl","../../../core/shaderLibrary/shading/ScreenSpaceReflections.glsl","../../../core/shaderLibrary/util/DoublePrecision.glsl","../../../core/shaderLibrary/util/EllipsoidMode","../../../core/shaderTechnique/ReloadableShaderModule","../../../core/shaderTechnique/ShaderTechnique","../../../core/shaderTechnique/ShaderTechniqueConfiguration","../../../lib/basicInterfaces","../../../lib/OrderIndependentTransparency","../../../lib/Program","../../../lib/StencilUtils","../../../../../webgl/renderState"],(function(e,r,t,a,o,i,s,n,l,d,u,p,c,h,m,b,T,M,g,f,y,v,x,P,C,S,O,_,N,D){"use strict";let E=function(e){function a(){return e.apply(this,arguments)||this}t._inheritsLoose(a,e);var i=a.prototype;return i.bindPass=function(e){const r=this.program;b.bindViewProjTransform(r,e.viewTransform),c.bindSliceUniforms(this.program,this.configuration,e.slicePlane),e.identifier===u.RenderPassIdentifier.Material&&(void 0!==e.ssrParams&&f.bindSSRUniforms(this.program,e.ssrParams),r.setUniformMatrix3fv("transformNormalViewFromGlobal",e.transformNormalViewFromGlobal),e.subPass===u.MaterialSubPass.Depth&&r.setUniform2fv("nearFar",e.nearFar),e.subPass===u.MaterialSubPass.Color&&e.lighting.setUniforms(this.program,e.integratedMesh,e.hasFillLights)),e.identifier===u.RenderPassIdentifier.ShadowMap&&this.program.setUniform2fv("nearFar",e.nearFar)},i.bindMaterial=function(e,r){this._material=e;const t=this.program;t.setUniform4fv("baseColor",e.baseColor),t.setUniform1f("objectOpacity",e.objectOpacity),t.setUniform1f("textureAlphaCutoff",e.alphaCutoff),e.componentParameters.type===n.ComponentDataType.Varying?e.componentParameters.texture.bind(t,"componentColorTex","componentColorTexInvDim"):(t.setUniform4fv("externalColor",e.componentParameters.externalColor),t.setUniform1i("externalColorMixMode",e.componentParameters.externalColorMixMode)),o.isSome(e.baseColorTexture)&&e.baseColorTexture.bind(t,"baseColorTexture","baseColorTextureSize"),this.configuration.output!==p.ShaderOutput.Color&&this.configuration.output!==p.ShaderOutput.Alpha||(g.bindPBRUniforms(this.program,e,this.configuration.isSchematic),o.isSome(e.metallicRoughnessTexture)&&e.metallicRoughnessTexture.bind(t,"texMetallicRoughness","texMetallicRoughnessSize"),o.isSome(e.emissionTexture)&&e.emissionTexture.bind(t,"texEmission","texEmissionSize"),o.isSome(e.occlusionTexture)&&e.occlusionTexture.bind(t,"texOcclusion","texOcclusionSize"),o.isSome(e.normalTexture)&&e.normalTexture.bind(t,"normalTexture","normalTextureSize")),e.isIntegratedMesh&&(r.identifier===u.RenderPassIdentifier.Material&&r.subPass===u.MaterialSubPass.Color?(t.bindTexture(e.overlayColor,"ovColorTex"),t.bindTexture(e.overlayNormal,"ovNormalTex")):r.identifier===u.RenderPassIdentifier.Highlight&&t.bindTexture(e.overlayHighlight,"ovColorTex"),t.setUniform1f("overlayOpacity",1)),r.identifier===u.RenderPassIdentifier.Highlight&&T.bindOutputHighlight(this.program,r),r.identifier===u.RenderPassIdentifier.Material&&r.subPass===u.MaterialSubPass.Color&&(r.ambientOcclusionEnabled&&r.bindAmbientOcclusion(t),r.shadowsEnabled&&r.bindShadowMap(t)),r.identifier!==u.RenderPassIdentifier.Material||r.subPass!==u.MaterialSubPass.Color&&r.subPass!==u.MaterialSubPass.Alpha||!r.multipassTerrainParams.multipassTerrainEnabled||(this.program.setUniform2fv("nearFar",r.nearFar),t.setUniform2fv("inverseViewport",r.inverseViewport),r.multipassTerrainParams.terrainLinearDepthTexture&&t.bindTexture(r.multipassTerrainParams.terrainLinearDepthTexture,"terrainDepthTexture"))},i.bindDraw=function(e){if(b.bindModelTransform(this.program,e),this.program.setUniformMatrix3fv("transformNormalGlobalFromModel",e.transformNormalGlobalFromModel),this.program.rebindTextures(),o.isSome(this._material)&&this._material.isIntegratedMesh){const r=this._material.overlayTexScale,t=this._material.overlayTexOffset;this.program.setUniform4fv("overlayTexOffset",[e.toMapSpace[0]*r[0]+t[0],e.toMapSpace[1]*r[1]+t[1],e.toMapSpace[0]*r[2]+t[2],e.toMapSpace[1]*r[3]+t[3]]),this.program.setUniform4fv("overlayTexScale",[e.toMapSpace[2]*r[0],e.toMapSpace[3]*r[1],e.toMapSpace[2]*r[2],e.toMapSpace[3]*r[3]])}},i.initializeProgram=function(e){const t=a.shader.get(),o=this.configuration,i=t.build({multipassTerrainEnabled:o.multipassTerrainEnabled,cullAboveGround:o.cullAboveGround,oitEnabled:o.transparencyPassType===S.TransparencyPassType.Color,output:o.output,normalType:o.integratedMeshMode===r.IntegratedMeshMode.None?o.hasNormals?h.NormalAttributeType.CompressedAttribute:h.NormalAttributeType.ScreenDerivative:h.NormalAttributeType.Ground,attributeColor:o.hasVertexColors,attributeTextureCoordinates:o.vertexTextureCoordinates,componentData:o.componentData,alphaDiscardMode:o.alphaDiscardMode,baseColorTexture:o.baseColorTexture,doubleSidedMode:o.doubleSidedMode,receiveAmbientOcclusion:o.receiveAmbientOcclusion,receiveShadows:o.receiveShadows,slicePlaneEnabled:o.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,viewingMode:e.viewingMode,vertexDiscardMode:o.vertexDiscardMode,pbrMode:o.integratedMeshMode===r.IntegratedMeshMode.ColorOverlayWithWater?g.PBRMode.WaterOnIntegratedMesh:o.usePBR?o.isSchematic?g.PBRMode.Schematic:g.PBRMode.Normal:g.PBRMode.Disabled,hasMetalnessAndRoughnessTexture:o.hasMetalnessAndRoughnessTexture,hasEmissionTexture:o.hasEmissionTexture,hasOcclusionTexture:o.hasOcclusionTexture,hasNormalTexture:o.hasNormalTexture,vertexTangents:!1,supportsTextureAtlas:!0,doublePrecisionRequiresObfuscation:y.doublePrecisionRequiresObfuscation(e.rctx),overlayEnabled:o.integratedMeshMode===r.IntegratedMeshMode.ColorOverlay||o.integratedMeshMode===r.IntegratedMeshMode.ColorOverlayWithWater,ssrEnabled:o.ssrEnabled,highStepCount:!1,ellipsoidMode:o.ellipsoidMode});return new _.Program(e.rctx,i,t.attributeLocations)},i._setPipelineState=function(e){const t=this.configuration,a=t.integratedMeshMode!==r.IntegratedMeshMode.None,o=e===S.TransparencyPassType.NONE,i=e===S.TransparencyPassType.FrontFace;return D.makePipelineState({blending:t.output!==p.ShaderOutput.Color&&t.output!==p.ShaderOutput.Alpha||!t.blendingEnabled?null:o?O.blendingDefault:O.oitBlending(e),culling:D.cullingParams(t.cullFace),depthTest:{func:O.oitDepthTest(e)},depthWrite:o||i?D.defaultDepthWriteParams:null,colorWrite:D.defaultColorWriteParams,stencilWrite:a||t.sceneHasOcludees?N.stencilWriteMaskOn:null,stencilTest:a?N.replaceBitWhenDepthTestPasses(S.StencilBits.IntegratedMeshMaskExcluded):t.sceneHasOcludees?N.stencilBaseAllZerosParams:null,polygonOffset:o||i?t.polygonOffsetEnabled?{factor:2,units:2}:null:O.OITPolygonOffset})},i.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)},a}(P.ShaderTechnique);E.shader=new x.ReloadableShaderModule(l.ComponentShader,(()=>new Promise(((r,t)=>e(["./shader/ComponentShader.glsl"],r,t)))));let U=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).transformNormalGlobalFromModel=i.create(),r.toMapSpace=s.create(),r}return t._inheritsLoose(r,e),r}(b.VertexPositionModelTransform);var R,A;r.PassDiscardMode=void 0,(R=r.PassDiscardMode||(r.PassDiscardMode={}))[R.None=0]="None",R[R.Transparent=1]="Transparent",R[R.Opaque=2]="Opaque",R[R.COUNT=3]="COUNT",r.IntegratedMeshMode=void 0,(A=r.IntegratedMeshMode||(r.IntegratedMeshMode={}))[A.None=0]="None",A[A.NoOverlay=1]="NoOverlay",A[A.ColorOverlay=2]="ColorOverlay",A[A.ColorOverlayWithWater=3]="ColorOverlayWithWater",A[A.COUNT=4]="COUNT";let I=function(e){function a(){var t;return(t=e.apply(this,arguments)||this).output=p.ShaderOutput.Color,t.hasVertexColors=!1,t.hasNormals=!1,t.vertexTextureCoordinates=m.TextureCoordinateAttributeType.None,t.componentData=n.ComponentDataType.Uniform,t.slicePlaneEnabled=!1,t.cullFace=S.CullFaceOptions.Back,t.baseColorTexture=!1,t.receiveAmbientOcclusion=!0,t.receiveShadows=!0,t.vertexDiscardMode=d.VertexDiscardMode.None,t.doubleSidedMode=M.NormalsDoubleSidedMode.WindingOrder,t.blendingEnabled=!0,t.alphaDiscardMode=S.AlphaDiscardMode.Opaque,t.integratedMeshMode=r.IntegratedMeshMode.None,t.ssrEnabled=!1,t.polygonOffsetEnabled=!1,t.usePBR=!1,t.isSchematic=!1,t.hasMetalnessAndRoughnessTexture=!1,t.hasEmissionTexture=!1,t.hasOcclusionTexture=!1,t.hasNormalTexture=!1,t.sceneHasOcludees=!1,t.transparencyPassType=S.TransparencyPassType.NONE,t.ellipsoidMode=v.EllipsoidMode.Earth,t.multipassTerrainEnabled=!1,t.cullAboveGround=!1,t}return t._inheritsLoose(a,e),a}(C.ShaderTechniqueConfiguration);a.__decorate([C.parameter({count:p.ShaderOutput.COUNT})],I.prototype,"output",void 0),a.__decorate([C.parameter()],I.prototype,"hasVertexColors",void 0),a.__decorate([C.parameter()],I.prototype,"hasNormals",void 0),a.__decorate([C.parameter({count:m.TextureCoordinateAttributeType.COUNT})],I.prototype,"vertexTextureCoordinates",void 0),a.__decorate([C.parameter({count:n.ComponentDataType.COUNT})],I.prototype,"componentData",void 0),a.__decorate([C.parameter()],I.prototype,"slicePlaneEnabled",void 0),a.__decorate([C.parameter({count:S.CullFaceOptions.COUNT})],I.prototype,"cullFace",void 0),a.__decorate([C.parameter()],I.prototype,"baseColorTexture",void 0),a.__decorate([C.parameter()],I.prototype,"receiveAmbientOcclusion",void 0),a.__decorate([C.parameter()],I.prototype,"receiveShadows",void 0),a.__decorate([C.parameter({count:d.VertexDiscardMode.COUNT})],I.prototype,"vertexDiscardMode",void 0),a.__decorate([C.parameter({count:M.NormalsDoubleSidedMode.COUNT})],I.prototype,"doubleSidedMode",void 0),a.__decorate([C.parameter()],I.prototype,"blendingEnabled",void 0),a.__decorate([C.parameter({count:S.AlphaDiscardMode.COUNT})],I.prototype,"alphaDiscardMode",void 0),a.__decorate([C.parameter({count:r.IntegratedMeshMode.COUNT})],I.prototype,"integratedMeshMode",void 0),a.__decorate([C.parameter()],I.prototype,"ssrEnabled",void 0),a.__decorate([C.parameter()],I.prototype,"polygonOffsetEnabled",void 0),a.__decorate([C.parameter()],I.prototype,"usePBR",void 0),a.__decorate([C.parameter()],I.prototype,"isSchematic",void 0),a.__decorate([C.parameter()],I.prototype,"hasMetalnessAndRoughnessTexture",void 0),a.__decorate([C.parameter()],I.prototype,"hasEmissionTexture",void 0),a.__decorate([C.parameter()],I.prototype,"hasOcclusionTexture",void 0),a.__decorate([C.parameter()],I.prototype,"hasNormalTexture",void 0),a.__decorate([C.parameter()],I.prototype,"sceneHasOcludees",void 0),a.__decorate([C.parameter({count:S.TransparencyPassType.COUNT})],I.prototype,"transparencyPassType",void 0),a.__decorate([C.parameter({count:v.EllipsoidMode.COUNT})],I.prototype,"ellipsoidMode",void 0),a.__decorate([C.parameter()],I.prototype,"multipassTerrainEnabled",void 0),a.__decorate([C.parameter()],I.prototype,"cullAboveGround",void 0),r.ComponentDrawParameters=U,r.ComponentTechnique=E,r.ComponentTechniqueConfiguration=I,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
