/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{ViewingMode as e}from"../../../../../ViewingMode.js";import{IntegratedMeshMode as r}from"./ComponentTechniqueConfiguration.js";import{ComponentDataType as t}from"./shader/ComponentData.glsl.js";import{C as o}from"../../../../../../chunks/ComponentShader.glsl.js";import{ShaderOutput as i}from"../../../core/shaderLibrary/ShaderOutputOptions.js";import{doublePrecisionRequiresObfuscation as n}from"../../../core/shaderLibrary/util/DoublePrecision.glsl.js";import{ReloadableShaderModule as s}from"../../../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as a}from"../../../core/shaderTechnique/ShaderTechnique.js";import{TransparencyPassType as l,StencilBits as c}from"../../../lib/basicInterfaces.js";import{blendingDefault as m,oitBlending as p,oitDepthTest as u,OITPolygonOffset as d}from"../../../lib/OrderIndependentTransparency.js";import{Program as h}from"../../../lib/Program.js";import{stencilWriteMaskOn as f,replaceBitWhenDepthTestPasses as g,stencilBaseAllZerosParams as b}from"../../../lib/StencilUtils.js";import{makePipelineState as j,cullingParams as P,defaultDepthWriteParams as T,defaultColorWriteParams as C}from"../../../../../webgl/renderState.js";class x extends a{bindDraw(e,r){const o=this.program;o.bindDraw(e,r),o.rebindTextures(),e.componentParameters.type===t.Varying&&e.componentParameters.texture.bind(o,"componentColorTex","componentColorTexInvDim")}initializeConfiguration(r,t){t.spherical=r.viewingMode===e.Global,t.doublePrecisionRequiresObfuscation=n(r.rctx)}initializeProgram(e){const r=x.shader.get(),t=r.build(this.configuration);return new h(e.rctx,t,r.attributeLocations)}_setPipelineState(e){const t=this.configuration,o=t.integratedMeshMode!==r.None,n=e===l.NONE,s=e===l.FrontFace;return j({blending:t.output!==i.Color&&t.output!==i.Alpha||!t.blendingEnabled?null:n?m:p(e),culling:P(t.cullFace),depthTest:{func:u(e)},depthWrite:n||s?T:null,colorWrite:C,stencilWrite:o||t.hasOccludees?f:null,stencilTest:o?g(c.IntegratedMeshMaskExcluded):t.hasOccludees?b:null,polygonOffset:n||s?t.hasPolygonOffset?{factor:2,units:2}:null:d})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}x.shader=new s(o,(()=>import("./shader/ComponentShader.glsl.js")));export{x as ComponentTechnique};
