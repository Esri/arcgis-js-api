/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","exports","../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../ViewingMode","./ComponentTechniqueConfiguration","../../../../../../chunks/ComponentShader.glsl","../../../core/shaderLibrary/ShaderOutput","../../../core/shaderTechnique/ReloadableShaderModule","../../../core/shaderTechnique/ShaderTechnique","../../../lib/basicInterfaces","../../../lib/OrderIndependentTransparency","../../../lib/Program","../../../lib/StencilUtils","../../../lib/TransparencyPassType","../../../lib/VertexAttribute","../../../../../webgl/context-util","../../../../../webgl/renderState"],(function(e,t,n,i,r,a,l,o,s,u,c,d,h,p,b,g,f){"use strict";let P=function(e){function t(){return e.apply(this,arguments)||this}n._inheritsLoose(t,e);var a=t.prototype;return a.initializeConfiguration=function(e,t){t.hasWebGL2Context=e.rctx.type===g.ContextType.WEBGL2,t.spherical=e.viewingMode===i.ViewingMode.Global,t.doublePrecisionRequiresObfuscation=e.rctx.driverTest.doublePrecisionRequiresObfuscation.result},a.initializeProgram=function(e){return new d.Program(e.rctx,t.shader.get().build(this.configuration),O)},a._setPipelineState=function(e){const t=this.configuration,n=t.integratedMeshMode!==r.IntegratedMeshMode.None,i=e===p.TransparencyPassType.NONE,a=e===p.TransparencyPassType.FrontFace;return f.makePipelineState({blending:t.output!==l.ShaderOutput.Color&&t.output!==l.ShaderOutput.Alpha||!t.blendingEnabled?null:i?c.blendingDefault:c.oitBlending(e),culling:f.cullingParams(t.cullFace),depthTest:{func:c.oitDepthTest(e)},depthWrite:i||a?f.defaultDepthWriteParams:null,colorWrite:f.defaultColorWriteParams,stencilWrite:n||t.hasOccludees?h.stencilWriteMaskOn:null,stencilTest:n?h.replaceBitWhenDepthTestPasses(u.StencilBits.IntegratedMeshMaskExcluded):t.hasOccludees?h.stencilBaseAllZerosParams:null,polygonOffset:i||a?t.hasPolygonOffset?{factor:2,units:2}:null:c.OITPolygonOffset})},a.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)},t}(s.ShaderTechnique);P.shader=new o.ReloadableShaderModule(a.ComponentShader,(()=>new Promise(((t,n)=>e(["./shader/ComponentShader.glsl"],t,n)))));const O=new Map([[b.VertexAttribute.POSITION,0],[b.VertexAttribute.NORMAL,1],[b.VertexAttribute.NORMALCOMPRESSED,1],[b.VertexAttribute.COLOR,2],[b.VertexAttribute.UV0,3],[b.VertexAttribute.UVREGION,4],[b.VertexAttribute.COMPONENTINDEX,5]]);t.ComponentTechnique=P,t.attributeLocations=O,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
