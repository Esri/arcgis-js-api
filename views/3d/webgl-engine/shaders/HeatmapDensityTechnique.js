/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as i}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as o}from"../lib/DefaultVertexAttributeLocations.js";import{MaterialParameters as s}from"../lib/Material.js";import{Program as n}from"../lib/Program.js";import{DefaultTechniqueConfiguration as a}from"../materials/DefaultTechniqueConfiguration.js";import{H as l}from"../../../../chunks/HeatmapDensity.glsl.js";import{BlendOperation as u,BlendFactor as m}from"../../../webgl/enums.js";import{makePipelineState as c,simpleBlendingParams as d,defaultColorWriteParams as h}from"../../../webgl/renderState.js";var p;!function(e){e[e.Screen=0]="Screen",e[e.World=1]="World"}(p||(p={}));class f extends s{constructor(){super(...arguments),this.searchRadius=128,this.resolutionForScale=0}}class b extends t{initializeProgram(e){const r=b.shader.get().build(this.configuration);return new n(e.rctx,r,o)}initializePipeline(){return c({blending:d(m.ONE,m.ONE,u.ADD),colorWrite:h,depthTest:null,depthWrite:null})}destroy(){super.destroy()}}b.shader=new r(l,(()=>import("./HeatmapDensity.glsl.js")));class j extends a{constructor(){super(...arguments),this.isAttributeDriven=!1}}e([i()],j.prototype,"isAttributeDriven",void 0);export{f as HeatmapDensityPassParameters,b as HeatmapDensityTechnique,j as HeatmapDensityTechniqueConfiguration,p as RadiusMode};
