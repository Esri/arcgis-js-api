/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{NoParameters as e}from"../core/shaderModules/interfaces.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../core/shaderTechnique/ShaderTechnique.js";import{Default3D as s}from"../lib/DefaultVertexAttributeLocations.js";import{Program as o}from"../lib/Program.js";import{L as t}from"../../../../chunks/Laserlines.glsl.js";import{BlendFactor as n}from"../../../webgl/enums.js";import{makePipelineState as a,simpleBlendingParams as l,defaultColorWriteParams as m}from"../../../webgl/renderState.js";class c extends e{}class d extends i{initializeProgram(e){const r=d.shader.get().build(this.configuration);return new o(e.rctx,r,s)}initializePipeline(){return a({blending:l(n.ONE,n.ONE_MINUS_SRC_ALPHA),colorWrite:m})}}d.shader=new r(t,(()=>import("./Laserlines.glsl.js")));export{c as LaserlinePassParameters,d as LaserlineTechnique};
