/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{ViewingMode as e}from"../../../ViewingMode.js";import{a as i}from"../../../../chunks/Terrain.glsl.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{StencilBits as n}from"../lib/basicInterfaces.js";import{Default3D as l}from"../lib/DefaultVertexAttributeLocations.js";import{Program as s}from"../lib/Program.js";import{renderWhenBitIsNotSet as o}from"../lib/StencilUtils.js";import{BlendFactor as a,CompareFunction as c}from"../../../webgl/enums.js";import{makePipelineState as d,simpleBlendingParams as u,backFaceCullingParams as p,defaultDepthWriteParams as m,defaultColorWriteParams as h}from"../../../webgl/renderState.js";class g extends t{constructor(){super(...arguments),this.useStencil=!1}initializeConfiguration(i,r){r.spherical=i.viewingMode===e.Global}initializeProgram(e){const i=g.shader.get().build(this.configuration);return new s(e.rctx,i,l)}initializePipeline(){return this._stencilPipelineState=this._createPipeline(!0),this._createPipeline(!1)}_createPipeline(e){const i=this.configuration,r=i.backfaceCullingEnabled&&!i.renderOccluded;return d({blending:i.renderOccluded?u(a.ONE,a.ONE_MINUS_SRC_ALPHA):null,culling:r&&p,depthTest:!i.renderOccluded&&{func:c.LESS},depthWrite:!i.renderOccluded&&m,colorWrite:h,stencilTest:e?o(n.IntegratedMeshMaskExcluded):null})}getPipelineState(e,i){return this.useStencil?this._stencilPipelineState:super.getPipelineState(e,i)}}g.shader=new r(i,(()=>import("../core/shaderLibrary/terrain/Terrain.glsl.js")));export{g as TerrainTechnique};
