/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../core/shaderTechnique/ShaderTechniqueConfiguration","../lib/DefaultVertexAttributeLocations","../../../webgl/Program","../../../webgl/renderState","../core/shaderLibrary/util/View.glsl","../materials/internal/MaterialUtil","../core/shaderLibrary/Slice.glsl","../core/shaderLibrary/attributes/VerticalOffset.glsl","../../../../chunks/LineCallout.glsl"],(function(e,r,i,t,a,n,o,s,l,d,c,u,p,h,f){"use strict";let m=function(e){function r(){return e.apply(this,arguments)||this}i._inheritsLoose(r,e);var t=r.prototype;return t.initializeProgram=function(e){const i=r.shader.get(),t=this.configuration,a=i.build({occlusionTestEnabled:t.occlusionTestEnabled,verticalOffsetEnabled:t.verticalOffset,screenSizePerspectiveEnabled:t.screenSizePerspective,depthHudEnabled:t.depthHudEnabled,depthHudAlignStartEnabled:t.depthHudAlignStartEnabled,screenCenterOffsetUnitsEnabled:t.screenCenterOffsetUnitsEnabled,slicePlaneEnabled:t.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!0,viewingMode:e.viewingMode,isDraped:!1});return new l(e.rctx,a.generateSource("vertex"),a.generateSource("fragment"),s.Default3D)},t.bindPass=function(e,r,i){c.View.bindProjectionMatrix(this.program,i.camera.projectionMatrix),f.LineCallout.bindUniforms(this.program,r,i.camera.pixelRatio||1),h.VerticalOffset.bindUniforms(this.program,r,i),this.program.setUniform1i("hudVisibilityTexture",0),e.bindTexture(i.hudVisibilityTexture,0),this.program.setUniform1f("cameraGroundRelative",i.camera.aboveGround?1:-1),this.program.setUniform1f("polygonOffset",r.shaderPolygonOffset),c.View.bindViewport(this.program,i),this.program.setUniform1f("perDistancePixelRatio",Math.tan(i.camera.fovY/2)/(i.camera.fullViewport[2]/2)),this.program.setUniformMatrix4fv("viewNormal",i.camera.viewInverseTransposeMatrix),this.program.setUniform2f("pixelToNDC",2/i.camera.fullViewport[2],2/i.camera.fullViewport[3]);const t=i.camera.pixelRatio||1;this.program.setUniform1f("lineSize",Math.ceil(r.size)*t),u.bindScreenSizePerspective(r.screenSizePerspective,this.program,"screenSizePerspectiveAlignment")},t.bindDraw=function(e){c.View.bindView(this.program,e),c.View.bindCamPosition(this.program,e.origin,e.camera.viewInverseTransposeMatrix),p.Slice.bindUniformsWithOrigin(this.program,this.configuration,e)},t.initializePipeline=function(){return this.configuration.depthHudEnabled?d.makePipelineState({depthTest:{func:513},depthWrite:d.defaultDepthWriteParams}):d.makePipelineState({blending:d.separateBlendingParams(1,770,771,771),depthTest:{func:513},colorWrite:d.defaultColorWriteParams})},r}(n.ShaderTechnique);m.shader=new a.ReloadableShaderModule(f.LineCalloutShader,(()=>new Promise((function(r,i){e(["./LineCallout.glsl"],r,i)}))));let b=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).occlusionTestEnabled=!0,r.verticalOffset=!1,r.screenSizePerspective=!1,r.depthHudEnabled=!1,r.depthHudAlignStartEnabled=!1,r.screenCenterOffsetUnitsEnabled=0,r.slicePlaneEnabled=!1,r}return i._inheritsLoose(r,e),r}(o.ShaderTechniqueConfiguration);t.__decorate([o.parameter()],b.prototype,"occlusionTestEnabled",void 0),t.__decorate([o.parameter()],b.prototype,"verticalOffset",void 0),t.__decorate([o.parameter()],b.prototype,"screenSizePerspective",void 0),t.__decorate([o.parameter()],b.prototype,"depthHudEnabled",void 0),t.__decorate([o.parameter()],b.prototype,"depthHudAlignStartEnabled",void 0),t.__decorate([o.parameter({count:2})],b.prototype,"screenCenterOffsetUnitsEnabled",void 0),t.__decorate([o.parameter()],b.prototype,"slicePlaneEnabled",void 0),r.LineCalloutTechnique=m,r.LineCalloutTechniqueConfiguration=b,Object.defineProperty(r,"__esModule",{value:!0})}));
