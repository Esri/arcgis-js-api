/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ShaderOutput as t}from"../core/shaderLibrary/ShaderOutputOptions.js";import{NoParameters as r}from"../core/shaderModules/interfaces.js";import{ReloadableShaderModule as i}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as s}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as o}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{CullFaceOptions as n,TransparencyPassType as a}from"../lib/basicInterfaces.js";import{Default3D as l}from"../lib/DefaultVertexAttributeLocations.js";import{oitBlending as p,oitDepthTest as c,oitDepthWrite as u,getOITPolygonOffset as h}from"../lib/OrderIndependentTransparency.js";import{Program as d}from"../lib/Program.js";import{stencilWriteMaskOn as m,stencilToolMaskBaseParams as f,stencilBaseAllZerosParams as y}from"../lib/StencilUtils.js";import{DefaultTechniqueConfiguration as g}from"../materials/DefaultTechniqueConfiguration.js";import{I as b}from"../../../../chunks/ImageMaterial.glsl.js";import{BlendFactor as O}from"../../../webgl/enums.js";import{simpleBlendingParams as T,makePipelineState as P,cullingParams as S,defaultDepthWriteParams as j,defaultColorWriteParams as v}from"../../../webgl/renderState.js";class N extends r{}class _ extends s{initializeProgram(e){const t=_.shader.get().build(this.configuration);return new d(e.rctx,t,l)}_setPipelineState(e,r){const i=this.configuration,s=e===a.NONE,o=e===a.FrontFace;return P({blending:i.output!==t.Color&&i.output!==t.Alpha||!i.transparent?null:s?C:p(e),culling:S(i.cullFace),depthTest:{func:c(e)},depthWrite:s?i.writeDepth&&j:u(e),colorWrite:v,stencilWrite:i.hasOccludees?m:null,stencilTest:i.hasOccludees?r?f:y:null,polygonOffset:s||o?null:h(i.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}_.shader=new i(b,(()=>import("./ImageMaterial.glsl.js")));const C=T(O.ONE,O.ONE_MINUS_SRC_ALPHA);class w extends g{constructor(){super(...arguments),this.output=t.Color,this.cullFace=n.None,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.transparencyPassType=a.NONE,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}e([o({count:t.COUNT})],w.prototype,"output",void 0),e([o({count:n.COUNT})],w.prototype,"cullFace",void 0),e([o()],w.prototype,"hasSlicePlane",void 0),e([o()],w.prototype,"transparent",void 0),e([o()],w.prototype,"enableOffset",void 0),e([o()],w.prototype,"writeDepth",void 0),e([o()],w.prototype,"hasOccludees",void 0),e([o({count:a.COUNT})],w.prototype,"transparencyPassType",void 0),e([o()],w.prototype,"hasMultipassTerrain",void 0),e([o()],w.prototype,"cullAboveGround",void 0);export{N as ImageMaterialPassParameters,_ as ImageMaterialTechnique,w as ImageMaterialTechniqueConfiguration};
