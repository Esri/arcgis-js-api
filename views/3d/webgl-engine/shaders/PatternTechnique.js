/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../core/shaderTechnique/ShaderTechniqueConfiguration","../../../webgl/Program","../../../webgl/renderState","../core/shaderLibrary/util/View.glsl","../core/shaderLibrary/Slice.glsl","../core/shaderLibrary/output/OutputHighlight.glsl","../lib/OrderIndependentTransparency","../core/shaderLibrary/shading/MultipassTerrainTest.glsl","../lib/StencilUtils","../../../../chunks/Pattern.glsl"],(function(e,t,r,a,i,o,n,s,l,p,c,u,d,h,g,f){"use strict";let m=function(e){function t(){return e.apply(this,arguments)||this}r._inheritsLoose(t,e);var a=t.prototype;return a.initializeProgram=function(e){const r=t.shader.get(),a=this.configuration,i=r.build({output:a.output,attributeColor:a.vertexColors,slicePlaneEnabled:a.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,style:a.style,patternSpacing:a.patternSpacing,lineWidth:a.lineWidth,draped:a.draped,OITEnabled:0===a.transparencyPassType,multipassTerrainEnabled:a.multipassTerrainEnabled,cullAboveGround:a.cullAboveGround});return new s(e.rctx,i.generateSource("vertex"),i.generateSource("fragment"),_)},a.bindPass=function(e,t,r){p.View.bindProjectionMatrix(this.program,r.camera.projectionMatrix),this.program.setUniform4fv("matColor",t.color),this.configuration.draped?(this.program.setUniform1f("worldToScreenRatio",1/r.screenToWorldRatioGlobalWM),this.program.setUniform1f("texelSize",1/r.camera.pixelRatio)):this.program.setUniform1f("worldToScreenPerDistanceRatio",1/r.camera.perScreenPixelRatio),4===this.configuration.output&&u.OutputHighlight.bindOutputHighlight(e,this.program,r),(1===this.configuration.output||r.multipassTerrainEnabled)&&this.program.setUniform2fv("cameraNearFar",r.camera.nearFar),r.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",r.inverseViewport),h.bindMultipassTerrainUniforms(this.program,e,r))},a.bindDraw=function(e){p.View.bindView(this.program,e),p.View.bindCamPosition(this.program,e.origin,e.camera.viewInverseTransposeMatrix),c.Slice.bindUniformsWithOrigin(this.program,this.configuration,e)},a.setPipelineState=function(e,t){const r=this.configuration,a=3===e,i=2===e,o=e=>0!==e&&{face:1===e?1028:1029,mode:2305};return l.makePipelineState({blending:0===r.output||7===r.output?r.transparent&&a?d.blendingDefault:d.OITBlending(e):null,culling:o(r.cullFace),depthTest:{func:d.OITDepthTest(e)},depthWrite:a?r.writeDepth&&l.defaultDepthWriteParams:d.OITDepthWrite(e),colorWrite:l.defaultColorWriteParams,stencilWrite:r.sceneHasOcludees?g.stencilWriteMaskOn:null,stencilTest:r.sceneHasOcludees?t?g.stencilToolMaskBaseParams:g.stencilBaseAllZerosParams:null,polygonOffset:a||i?r.polygonOffset&&b:d.getOITPolygonOffset(r.enableOffset)})},a.initializePipeline=function(){return this._occludeePipelineState=this.setPipelineState(this.configuration.transparencyPassType,!0),this.setPipelineState(this.configuration.transparencyPassType,!1)},a.getPipelineState=function(e){return e?this._occludeePipelineState:this.pipeline},t}(o.ShaderTechnique);m.shader=new i.ReloadableShaderModule(f.PatternShader,(()=>new Promise((function(t,r){e(["./Pattern.glsl"],t,r)}))));const b={factor:1,units:1};let y=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).output=0,t.cullFace=0,t.slicePlaneEnabled=!1,t.vertexColors=!1,t.transparent=!0,t.polygonOffset=!1,t.writeDepth=!0,t.sceneHasOcludees=!1,t.enableOffset=!0,t.transparencyPassType=3,t.multipassTerrainEnabled=!1,t.cullAboveGround=!0,t}return r._inheritsLoose(t,e),t}(n.ShaderTechniqueConfiguration);a.__decorate([n.parameter({count:8})],y.prototype,"output",void 0),a.__decorate([n.parameter({count:3})],y.prototype,"cullFace",void 0),a.__decorate([n.parameter()],y.prototype,"slicePlaneEnabled",void 0),a.__decorate([n.parameter()],y.prototype,"vertexColors",void 0),a.__decorate([n.parameter()],y.prototype,"transparent",void 0),a.__decorate([n.parameter()],y.prototype,"polygonOffset",void 0),a.__decorate([n.parameter()],y.prototype,"writeDepth",void 0),a.__decorate([n.parameter()],y.prototype,"sceneHasOcludees",void 0),a.__decorate([n.parameter({count:6})],y.prototype,"style",void 0),a.__decorate([n.parameter()],y.prototype,"patternSpacing",void 0),a.__decorate([n.parameter()],y.prototype,"lineWidth",void 0),a.__decorate([n.parameter()],y.prototype,"enableOffset",void 0),a.__decorate([n.parameter()],y.prototype,"draped",void 0),a.__decorate([n.parameter({count:4})],y.prototype,"transparencyPassType",void 0),a.__decorate([n.parameter()],y.prototype,"multipassTerrainEnabled",void 0),a.__decorate([n.parameter()],y.prototype,"cullAboveGround",void 0);const _={position:0,color:3,uvMapSpace:4,boundingRect:5};t.PatternTechnique=m,t.PatternTechniqueConfiguration=y,t.patternVertexAttributeLocations=_,Object.defineProperty(t,"__esModule",{value:!0})}));
