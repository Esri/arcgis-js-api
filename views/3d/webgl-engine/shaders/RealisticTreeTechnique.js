/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../core/shaderTechnique/ReloadableShaderModule","../lib/DefaultVertexAttributeLocations","../../../webgl/Program","../core/shaderLibrary/util/DoublePrecision.glsl","./DefaultMaterialTechnique","../../../../chunks/RealisticTree.glsl"],(function(e,r,i,t,a,s,l,o,n){"use strict";let u=function(e){function r(){return e.apply(this,arguments)||this}return i._inheritsLoose(r,e),r.prototype.initializeProgram=function(e){const i=r.shader.get(),t=this.configuration,o=i.build({OITEnabled:0===t.transparencyPassType,output:t.output,viewingMode:e.viewingMode,receiveShadows:t.receiveShadows,slicePlaneEnabled:t.slicePlaneEnabled,sliceHighlightDisabled:t.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,symbolColor:t.symbolColors,vvSize:t.vvSize,vvColor:t.vvColor,vvInstancingEnabled:!0,instanced:t.instanced,instancedColor:t.instancedColor,instancedDoublePrecision:t.instancedDoublePrecision,useOldSceneLightInterface:!1,pbrMode:t.usePBR?1:0,hasMetalnessAndRoughnessTexture:!1,hasEmissionTexture:!1,hasOcclusionTexture:!1,hasNormalTexture:!1,hasColorTexture:t.hasColorTexture,receiveAmbientOcclusion:t.receiveAmbientOcclusion,useCustomDTRExponentForWater:!1,normalType:0,doubleSidedMode:2,vertexTangets:!1,attributeTextureCoordinates:t.hasColorTexture?1:0,textureAlphaPremultiplied:t.textureAlphaPremultiplied,attributeColor:t.vertexColors,screenSizePerspectiveEnabled:t.screenSizePerspective,verticalOffsetEnabled:t.verticalOffset,offsetBackfaces:t.offsetBackfaces,doublePrecisionRequiresObfuscation:l.doublePrecisionRequiresObfuscation(e.rctx),alphaDiscardMode:t.alphaDiscardMode,supportsTextureAtlas:!1,multipassTerrainEnabled:t.multipassTerrainEnabled,cullAboveGround:t.cullAboveGround});return new s(e.rctx,o.generateSource("vertex"),o.generateSource("fragment"),a.Default3D)},r}(o.DefaultMaterialTechnique);u.shader=new t.ReloadableShaderModule(n.RealisticTreeShader,(()=>new Promise((function(r,i){e(["../core/shaderLibrary/default/RealisticTree.glsl"],r,i)})))),r.RealisticTreeTechnique=u,Object.defineProperty(r,"__esModule",{value:!0})}));
