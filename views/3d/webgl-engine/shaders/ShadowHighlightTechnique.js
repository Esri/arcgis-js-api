/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec2f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/DefaultVertexAttributeLocations","../lib/Program","../lib/Util","../../../../chunks/ShadowHighlight.glsl","../../../webgl/renderState"],(function(e,r,t,i,a,o,n,h,s,l,c,p,d,g,u,m,f){"use strict";const w=0,S=1;let T=function(e){function r(){return e.apply(this,arguments)||this}t._inheritsLoose(r,e);var o=r.prototype;return o.initializeProgram=function(e){const t=r.shader.get().build({highlightedThreshold:.99999,selfShadowThreshold:.025});return new g.Program(e.rctx,t,d.Default3D)},o.initializePipeline=function(e){return f.makePipelineState({blending:f.separateBlendingParams(770,1,771,771),colorWrite:f.defaultColorWriteParams,depthTest:null,depthWrite:null})},o.bindPass=function(e,r){if(i.isNone(r.linearDepthTexture))return;this.program.bindTexture(r.linearDepthTexture,"depthMap"),this.program.bindTexture(r.highlightColorTexture,"highlightMap"),h.transformMat4(v,r.lighting.lightingMainDirection,r.camera.viewInverseTransposeMatrix),h.normalize(v,v),u.inverseProjectionInfo(r.camera.projectionMatrix,r.camera.fullWidth,r.camera.fullHeight,x,b),a.translate(M,r.camera.viewMatrix,r.camera.center),a.invert(M,M),this.program.setUniform4fv("color",e.shadowColor),this.program.setUniform1f("opacity",e.shadowOpacity),this.program.setUniform1f("occludedOpacity",e.occludedShadowOpacity),this.program.setUniform1f("terminationFactor",e.opacityElevation*e.dayNightTerminator),this.program.setUniform2fv("nearFar",r.camera.nearFar),this.program.setUniformMatrix4fv("inverseView",M),this.program.setUniform4fv("projInfo",x),this.program.setUniform2fv("zScale",b),this.program.setUniform3fv("lightingMainDirectionView",v),this.program.setUniform2f("texelSize",1/r.linearDepthTexture.descriptor.width,1/r.linearDepthTexture.descriptor.height),r.shadowMap.bind(this.program),r.shadowMap.bindView(this.program,r.camera.center);let t=r.shadowMap.getSnapshot(w);i.isSome(t)&&this.program.bindTexture(t,"highlightDepthTex"),t=r.shadowMap.getSnapshot(S),i.isSome(t)&&this.program.bindTexture(t,"defaultDepthTex")},t._createClass(r,[{key:"primitiveType",get:function(){return 5}}]),r}(p.ShaderTechnique);T.shader=new c.ReloadableShaderModule(m.ShadowHighlightShader,(()=>new Promise(((r,t)=>e(["./ShadowHighlight.glsl"],r,t)))));const v=s.create(),b=n.create(),x=l.create(),M=o.create();r.DefaultSnapshotSlot=S,r.HighlightShadowMapSlot=w,r.ShadowHighlightTechnique=T,Object.defineProperty(r,"__esModule",{value:!0})}));
