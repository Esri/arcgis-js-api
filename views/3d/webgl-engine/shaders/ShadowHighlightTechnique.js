/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec2f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/DefaultVertexAttributeLocations","../lib/Program","../lib/Util","../../../../chunks/ShadowHighlight.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,r,t,i,a,o,n,h,l,s,c,d,u,g,p,m,f,S){"use strict";const T=0,w=1;let v=function(e){function r(r){var t;return t=e.call(this,r,null,(()=>t.destroy()))||this}t._inheritsLoose(r,e);var o=r.prototype;return o.initializeProgram=function(e){const t=r.shader.get().build({highlightedThreshold:.99999,selfShadowThreshold:.025});return new g.Program(e.rctx,t,u.Default3D)},o.initializePipeline=function(e){return S.makePipelineState({blending:S.separateBlendingParams(f.BlendFactor.SRC_ALPHA,f.BlendFactor.ONE,f.BlendFactor.ONE_MINUS_SRC_ALPHA,f.BlendFactor.ONE_MINUS_SRC_ALPHA),colorWrite:S.defaultColorWriteParams,depthTest:null,depthWrite:null})},o.bindPass=function(e,r){if(i.isNone(r.linearDepthTexture))return;this.program.bindTexture(r.linearDepthTexture,"depthMap"),this.program.bindTexture(r.highlightColorTexture,"highlightMap"),h.transformMat4(b,r.lighting.lightingMainDirection,r.camera.viewInverseTransposeMatrix),h.normalize(b,b),p.inverseProjectionInfo(r.camera.projectionMatrix,r.camera.fullWidth,r.camera.fullHeight,x,M),a.translate(P,r.camera.viewMatrix,r.camera.center),a.invert(P,P),this.program.setUniform4fv("uColor",e.shadowColor),this.program.setUniform1f("opacity",e.shadowOpacity),this.program.setUniform1f("occludedOpacity",e.occludedShadowOpacity),this.program.setUniform1f("terminationFactor",e.opacityElevation*e.dayNightTerminator),this.program.setUniform2fv("nearFar",r.camera.nearFar),this.program.setUniformMatrix4fv("inverseViewMatrix",P),this.program.setUniform4fv("projInfo",x),this.program.setUniform2fv("zScale",M),this.program.setUniform3fv("lightingMainDirectionView",b),this.program.setUniform2f("texelSize",1/r.linearDepthTexture.descriptor.width,1/r.linearDepthTexture.descriptor.height),r.shadowMap.bind(this.program),r.shadowMap.bindView(this.program,r.camera.center);let t=r.shadowMap.getSnapshot(T);i.isSome(t)&&this.program.bindTexture(t,"highlightDepthTex"),t=r.shadowMap.getSnapshot(w),i.isSome(t)&&this.program.bindTexture(t,"defaultDepthTex")},t._createClass(r,[{key:"primitiveType",get:function(){return f.PrimitiveType.TRIANGLE_STRIP}}]),r}(d.ShaderTechnique);v.shader=new c.ReloadableShaderModule(m.ShadowHighlightShader,(()=>new Promise(((r,t)=>e(["./ShadowHighlight.glsl"],r,t)))));const b=l.create(),M=n.create(),x=s.create(),P=o.create();r.DefaultSnapshotSlot=w,r.HighlightShadowMapSlot=T,r.ShadowHighlightTechnique=v,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
