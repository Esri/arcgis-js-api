/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{ShaderOutput as t}from"../core/shaderLibrary/ShaderOutputOptions.js";import{ReloadableShaderModule as i}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{Default3D as s}from"../lib/DefaultVertexAttributeLocations.js";import{Program as p}from"../lib/Program.js";import{depthCompareLess as l,stencilWriteMaskOn as n,stencilToolMaskBaseParams as o,stencilBaseAllZerosParams as a}from"../lib/StencilUtils.js";import{N as u}from"../../../../chunks/NativeLine.glsl.js";import{BlendFactor as h,PrimitiveType as m}from"../../../webgl/enums.js";import{separateBlendingParams as d,makePipelineState as c,defaultColorWriteParams as f,defaultDepthWriteParams as P}from"../../../webgl/renderState.js";class g extends r{constructor(e,t,i){super(e,t,i),this.stipplePattern=null,this.stippleTextureBind=null,this.stippleTextureRepository=e.stippleTextureRepository}get stippleEnabled(){return this.configuration.stippleEnabled&&this.configuration.output!==t.Highlight}initializeProgram(e){const t=g.shader.get().build(this.configuration);return new p(e.rctx,t,s)}destroy(){super.destroy(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(t,i){if(this.program.bindPass(t,i),this.stipplePattern!==t.stipplePattern){const e=t.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,e),this.stipplePattern=e}if(this.stippleEnabled){const{pixelSize:t,sdfNormalizer:i,pixels:r}=e(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};this.program.setUniform1f("stipplePatternSDFNormalizer",i),this.program.setUniform1f("stipplePatternTextureSize",r),this.program.setUniform1f("stipplePatternPixelSize",t),this.program.setUniform1f("stipplePatternPixelSizeInv",1/t)}}initializePipeline(){const e=this.configuration,i=d(h.SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA),r=(t,i=null,r=null)=>c({blending:i,depthTest:l,depthWrite:r,colorWrite:f,stencilWrite:e.hasOccludees?n:null,stencilTest:e.hasOccludees?t?o:a:null});return e.output===t.Color?(this._occludeePipelineState=r(!0,e.transparent||this.stippleEnabled?i:null,P),r(!1,e.transparent||this.stippleEnabled?i:null,P)):r(!1)}get primitiveType(){return m.LINES}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}g.shader=new i(u,(()=>import("./NativeLine.glsl.js")));export{g as NativeLineTechnique};
