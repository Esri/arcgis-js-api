/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{ReloadableShaderModule as e}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{Program as i}from"../lib/Program.js";import{VertexAttribute as t}from"../lib/VertexAttribute.js";import{L as o}from"../../../../chunks/LaserlinePath.glsl.js";import{BlendFactor as s}from"../../../webgl/enums.js";import{makePipelineState as a,simpleBlendingParams as n,defaultColorWriteParams as l}from"../../../webgl/renderState.js";class m extends r{initializeProgram(e){const r=m.shader.get().build(this.configuration);return new i(e.rctx,r,m.attributeLocations)}initializePipeline(){return a({blending:n(s.ONE,s.ONE_MINUS_SRC_ALPHA),colorWrite:l})}}m.shader=new e(o,(()=>import("./LaserlinePath.glsl.js"))),m.attributeLocations=new Map([[t.START,0],[t.END,1],[t.UP,2],[t.EXTRUDE,3]]);export{m as LaserlinePathTechnique};
