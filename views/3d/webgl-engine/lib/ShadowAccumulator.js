/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{equals as i}from"../../../../core/arrayUtils.js";import r from"../../../../core/Handles.js";import{smoothstep as s}from"../../../../core/mathUtils.js";import{isNone as o,disposeMaybe as a,releaseMaybe as n}from"../../../../core/maybe.js";import{watch as h,syncAndInitial as c}from"../../../../core/reactiveUtils.js";import{property as _}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as u}from"../../../../core/accessorSupport/decorators/subclass.js";import{z as l,c as m}from"../../../../chunks/vec3.js";import{c as p}from"../../../../chunks/vec3f64.js";import{ShaderTechniqueConfiguration as d}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{BindParameters as g}from"./BindParameters.js";import{Camera as f}from"./Camera.js";import{ZERO as w}from"./depthRange.js";import{createQuadVAO as v}from"./glUtil3D.js";import{ShadowCastRenderer as b,shadowCastDisabledElevationThreshold as A,shadowCastDisableElevationMax as y,shadowCastDisableElevationMin as R}from"./ShadowCastRenderer.js";import{ShadowMap as T}from"./ShadowMap.js";import{S,s as D}from"../../../../chunks/ShadowCastAccumulate.glsl.js";import{ShadowCastAccumulateTechnique as j}from"../shaders/ShadowCastAccumulateTechnique.js";import{TaskPriority as C}from"../../../support/Scheduler.js";import{TargetType as F,DepthStencilTargetType as E,TextureType as P,PixelFormat as q,PixelType as x,TextureSamplingMode as M,TextureWrapMode as U,ClearBufferBit as O}from"../../../webgl/enums.js";import{FramebufferObject as L}from"../../../webgl/FramebufferObject.js";import{vertexCount as B}from"../../../webgl/Util.js";var I;let N=I=class extends t{constructor(e,t,i,s,a,n){super({}),this._rctx=e,this._stage=i,this._prepareForShadowMapPass=s,this._renderToShadowMap=a,this._requestRender=n,this._progress=0,this._sampleCount=0,this._passParameters=new S,this._enabled=!1,this._cachedLightDirections=[],this._depthRange=w,this._previewing=!1,this._handles=new r,this._cameraForcedForScreenshot=!1,this._bindParameters=new g(new T(e,i.viewingMode),null,null),this._bindParameters.shadowMap.enabled=!0,this._bindParameters.camera=new f,this._vao=v(e);const _={colorTarget:F.TEXTURE,depthStencilTarget:E.NONE,width:0,height:0},u={target:P.TEXTURE_2D,pixelFormat:q.RGBA,dataType:x.UNSIGNED_BYTE,samplingMode:M.LINEAR,wrapMode:U.CLAMP_TO_EDGE,width:0,height:0};this._fbo=new L(e,_,u),this._accumulationRenderer=new b(t,e,this,n);const l=this._stage.resourceController.scheduler;this._handles.add(l.registerTask(C.SHADOW_ACCUMULATOR,this)),this._handles.add(h((()=>i.renderView),(e=>{this._handles.remove(I.renderViewHandleKey),o(e)||this._handles.add(e.events.on("force-camera-for-screenshot",(()=>this._cameraForcedForScreenshot=!0)),I.renderViewHandleKey)}),c))}normalizeCtorArgs(){return{}}get computedSamples(){return this._progress}get shadowCastTexture(){return this._fbo.colorTexture}get isAccumulating(){return this._isPreviewing||this._isRefining}get accumulationTechnique(){if(o(this._accumulationTechnique)){const e={rctx:this._rctx,viewingMode:this._stage.viewingMode};this._accumulationTechnique=new j(e,new d)}return this._accumulationTechnique}get _isRefining(){return this._isActive&&!this._isDoneAccumulating&&!this._previewing}get _isPreviewing(){return this._isActive&&this._previewing}get _isActive(){return this._enabled&&this._sampleCount>0}get canAccumulate(){return null!==this._passParameters.linearDepthTexture&&this._depthRange!==w&&this._opacityFromElevation>A}get _isDoneAccumulating(){return this._progress>=this._sampleCount}get _lightDirections(){return this._cachedLightDirections}set _lightDirections(e){const t=this._cachedLightDirections;if(i(t,e,l))return;const r=e.length;t.length=r,this._sampleCount=Math.min(D,r);for(let i=0;i<r;++i){const r=e[i],s=t[i]||p();m(s,r),t[i]=s}this._invalidate()}get _opacityFromElevation(){return this._accumulationRenderer.opacityFromElevation}set _opacityFromElevation(e){this._accumulationRenderer.opacityFromElevation=e}get running(){return this._isRefining&&this.canAccumulate&&this._progress>0}runTask(e){for(this._prepareForShadowMapPass(this._bindParameters);!e.done&&!this._isDoneAccumulating;)this._accumulateShadow(),e.madeProgress();this._requestRender()}renderAccumulation(e,t,i,r){if(this._passParameters.linearDepthTexture=e,this._depthRange=t,this._updateCamera(i),this._bindParameters.contentCamera=r,this.notifyChange("canAccumulate"),!this.isAccumulating||!this.canAccumulate)return;(this._previewing||0===this._progress||this._cameraForcedForScreenshot)&&this._clear();const s=this._cameraForcedForScreenshot?this._sampleCount:Math.min(I.previewSamples,this._sampleCount-this._progress);for(let o=0;o<s;++o)this._accumulateShadow();this._cameraForcedForScreenshot=!1}render(e){this._accumulationRenderer.render(e)}dispose(){this._stop(),this._handles.destroy(),this._accumulationRenderer=a(this._accumulationRenderer),this._bindParameters.shadowMap.dispose(),this._fbo=a(this._fbo),this._vao=a(this._vao),this._accumulationTechnique=n(this._accumulationTechnique),this._cachedLightDirections.length=0,this._sampleCount=0}setOptions(e){void 0!==e.enabled&&(this.enabled=e.enabled),void 0!==e.previewing&&(this.previewing=e.previewing),void 0!==e.lightDirections&&(this.lightDirections=e.lightDirections),this._accumulationRenderer.setOptions(e)}set previewing(e){this._previewing!==e&&(this._previewing=e,this._requestRenderIfEnabled())}set lightDirections(e){this._lightDirections=e}readAccumulatedShadow(e,t){if(!this._isActive||this._progress<1||e<0||e>this._fbo.width||t<0||t>this._fbo.height)return 0;const i=k;return this._fbo.readPixels(e,t,1,1,q.RGBA,x.UNSIGNED_BYTE,i),i[0]/this._progress}_start(){this._progress=0,this._enabled=!0}_stop(){this._enabled=!1}_invalidate(){this._progress=0,this._requestRenderIfEnabled()}_clear(){this._rctx.bindFramebuffer(this._fbo),this._rctx.setClearColor(0,0,0,0),this._rctx.clearSafe(O.COLOR_BUFFER_BIT),this._progress=0}_accumulateShadow(){const e=this._lightDirections[this._progress];this._renderToShadowMap(this._bindParameters,e,this._depthRange),this._passParameters.origin=this._bindParameters.camera.center,this._rctx.bindFramebuffer(this._fbo);const t=this.accumulationTechnique;this._rctx.bindTechnique(t,this._passParameters,this._bindParameters),this._rctx.bindVAO(this._vao),this._rctx.drawArrays(t.primitiveType,0,B(this._vao,"geometry")),this._progress++}_updateCamera(e){e.equals(this._bindParameters.camera)||(this._bindParameters.camera.copyFrom(e),this._fbo.resize(e.fullWidth,e.fullHeight),this._opacityFromElevation=1-s(R,y,e.relativeElevation))}set enabled(e){e!==this._enabled&&(e?this._start():this._stop())}_requestRenderIfEnabled(){this._enabled&&this._requestRender()}get test(){const e=this;return{lightDirections:this._lightDirections,get isDone(){return e._isDoneAccumulating},get isActive(){return e._isActive}}}};N.previewSamples=6,N.renderViewHandleKey="renderView",e([_()],N.prototype,"_progress",void 0),e([_()],N.prototype,"_sampleCount",void 0),e([_()],N.prototype,"_enabled",void 0),e([_()],N.prototype,"_depthRange",void 0),e([_()],N.prototype,"_previewing",void 0),e([_()],N.prototype,"_accumulationRenderer",void 0),e([_()],N.prototype,"_isRefining",null),e([_()],N.prototype,"_isActive",null),e([_()],N.prototype,"canAccumulate",null),e([_()],N.prototype,"_isDoneAccumulating",null),e([_()],N.prototype,"_opacityFromElevation",null),e([_()],N.prototype,"running",null),N=I=e([u("esri.views.3d.webgl-engine.lib.ShadowAccumulator")],N);const k=new Uint8Array(4);export{N as ShadowAccumulator};
