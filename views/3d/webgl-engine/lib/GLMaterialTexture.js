/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/promiseUtils","./basicInterfaces","./GLMaterial"],(function(e,t,i,r,s){"use strict";return function(s){function u(e){var t;return(t=s.call(this,e)||this)._numLoading=0,t._disposed=!1,t._textureRepository=e.textureRep,t._textureId=e.textureId,t._acquire(e.textureId,(e=>t._texture=e)),t._acquire(e.normalTextureId,(e=>t._textureNormal=e)),t._acquire(e.emissiveTextureId,(e=>t._textureEmissive=e)),t._acquire(e.occlusionTextureId,(e=>t._textureOcclusion=e)),t._acquire(e.metallicRoughnessTextureId,(e=>t._textureMetallicRoughness=e)),t}e._inheritsLoose(u,s);var o=u.prototype;return o.dispose=function(){this._texture=t.releaseMaybe(this._texture),this._textureNormal=t.releaseMaybe(this._textureNormal),this._textureEmissive=t.releaseMaybe(this._textureEmissive),this._textureOcclusion=t.releaseMaybe(this._textureOcclusion),this._textureMetallicRoughness=t.releaseMaybe(this._textureMetallicRoughness),this._disposed=!0},o.ensureResources=function(e){return 0===this._numLoading?r.ResourceState.LOADED:r.ResourceState.LOADING},o.updateTexture=function(e){(t.isNone(this._texture)||e!==this._texture.id)&&(this._texture=t.releaseMaybe(this._texture),this._textureId=e,this._acquire(this._textureId,(e=>this._texture=e)))},o.bindTextures=function(e){t.isSome(this._texture)&&e.bindTexture(this._texture.glTexture,"tex"),t.isSome(this._textureNormal)&&e.bindTexture(this._textureNormal.glTexture,"normalTexture"),t.isSome(this._textureEmissive)&&e.bindTexture(this._textureEmissive.glTexture,"texEmission"),t.isSome(this._textureOcclusion)&&e.bindTexture(this._textureOcclusion.glTexture,"texOcclusion"),t.isSome(this._textureMetallicRoughness)&&e.bindTexture(this._textureMetallicRoughness.glTexture,"texMetallicRoughness")},o.bindTextureScale=function(e){const i=t.isSome(this._texture)?this._texture.glTexture:null;t.isSome(i)&&i.descriptor.textureCoordinateScaleFactor?e.setUniform2fv("textureCoordinateScaleFactor",i.descriptor.textureCoordinateScaleFactor):e.setUniform2f("textureCoordinateScaleFactor",1,1)},o._acquire=function(e,r){if(t.isNone(e))return void r(null);const s=this._textureRepository.acquire(e);if(i.isPromiseLike(s))return++this._numLoading,void s.then((e=>{if(this._disposed)return t.releaseMaybe(e),void r(null);r(e)})).finally((()=>--this._numLoading));r(s)},u}(s)}));
