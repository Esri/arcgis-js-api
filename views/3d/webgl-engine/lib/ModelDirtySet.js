/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/MapUtils","./Util"],(function(e,t,o){"use strict";return function(){function r(e){this._residentGeomRecords=new Map,this._dirtyGeomRecords=new Map,this._model=e}var n=r.prototype;return n.hasDirtyGeometryRecords=function(){return t.someMap(this._dirtyGeomRecords,(e=>t.someMap(e,(e=>e&&e.size>0))))},n.handleUpdate=function(e,t,r){return o.assert(this[t],"ModelDirtySet doesn't know how to process "+t),this[t](e,r)},n.shaderTransformationChanged=function(e){const t=this._residentGeomRecords.get(e.id);t&&t.forEach(((e,t)=>{const o=this._model.get(1,t);o&&o.hasVolativeTransformation()&&e.forEach((e=>{for(const t of e[1])t.shaderTransformationChanged()}))}))},n.commit=function(){return this.commitLayers(this._dirtyGeomRecords.keys())},n.commitLayers=function(e){const t=[],r=[],n=[];for(const s of e){const e=this._dirtyGeomRecords.get(s);e&&(e.forEach(((e,i)=>{const d=this._ensureGeomRecord(s,i);e.forEach(((e,s)=>{const c=e[0],a=e[1],h=e[2];let f=!1;if(2&a){const e=d.get(s);if(e){const t=e[1];if(4&h){const e=this._model.get(1,i);for(const o of t)if(this._model.updateRenderGeometryTransformation(e,c,o)){f=!0;break}}if(!f)for(const e of t)n.push({renderGeometry:e,updateType:h})}else o.assert(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update")}if(4&a||f){const e=d.get(s);e?r.push.apply(r,e[1]):4===a&&o.assert(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove"),e&&d.delete(s)}if(1&a||f){const e=[c,[]],o=this._model.get(1,i);this._model.getGeometryRenderGeometries(o,c,e[1]),t.push.apply(t,e[1]),d.set(s,e)}})),0===d.size&&this._residentGeomRecords.get(s).delete(i)})),0===this._residentGeomRecords.get(s).size&&this._residentGeomRecords.delete(s),this._dirtyGeomRecords.delete(s))}return[t,r,n]},n.getResidentRenderGeometries=function(){return this.getResidentRenderGeometriesFilteredByLayers([...this._residentGeomRecords.keys()])},n.getResidentRenderGeometriesFilteredByLayers=function(e){const t=[];for(let o=0;o<e.length;o++){const r=e[o],n=this._residentGeomRecords.get(r);n&&n.forEach((e=>{e.forEach((e=>{t.push(...e[1])}))}))}return t},n._objectStateChanged=function(e,t,o,r){if(null!=o)this._componentPropertyChanged(t,o,r,e);else for(const o of t.geometryRecords)this._componentPropertyChanged(t,o,r,e)},n.visibilityChanged=function(e,t,o){this._objectStateChanged(1,e,t,o)},n.highlightChanged=function(e,t,o){this._objectStateChanged(8,e,t,o)},n.occlusionChanged=function(e,t,o){this._objectStateChanged(16,e,t,o)},n.vertexAttrsUpdated=function(e,t,o){this._updateOrCreateDirtyRecord(e,t,o,2,0,0,2,5,2)},n.layerAdded=function(e){const t=e.getObjects();for(let o=0;o<t.length;o++)this.layerObjectAdded(e,t[o])},n.layerRemoved=function(e){const t=e.getObjects();for(let o=0;o<t.length;o++)this.layerObjectRemoved(e,t[o])},n.layerObjectAdded=function(e,t){const o=e.id,r=t.geometryRecords;for(let e=0;e<r.length;e++)this.objGeometryAdded(t,r[e],o)},n.layerObjectRemoved=function(e,t){const o=e.id,r=t.geometryRecords;for(let e=0;e<r.length;e++)this.objGeometryRemoved(t,r[e],o)},n.layObjectReplaced=function(e,t){this.layerObjectRemoved(e,t[0]),this.layerObjectAdded(e,t[1])},n.objTransformation=function(e,t){t=t||this._getParentLayerId(e);const o=e.id;this._ensureGeomRecord(t,o).forEach((o=>{this._updateOrCreateDirtyRecord(e,o[0],t,2,0,0,2,5,4)}))},n.objGeometryAdded=function(e,t,o){this._updateOrCreateDirtyRecord(e,t,o,1,4,0,0,0)},n.objGeometryRemoved=function(e,t,o){this._updateOrCreateDirtyRecord(e,t,o,4,1,2,0,0)},n._componentPropertyChanged=function(e,t,o,r){this._updateOrCreateDirtyRecord(e,t,o,2,0,0,2,5,r)},n._updateOrCreateDirtyRecord=function(e,t,r,n,s,i,d,c,a){r=r||this._getParentLayerId(e);const h=e.id,f=t.id,l=this._ensureDirtyRecord(r,h),u=l.get(f);if(u){const e=u[1];e&s?l.delete(f):e&i?(u[1]=n,u[2]=a):e&d?u[2]|=a:e&c||o.assert(!1,"ModelDirtySet.objGeometryAdded: inconsistent state")}else l.set(f,[t,n,a])},n._ensureGeomRecord=function(e,t){let o=this._residentGeomRecords.get(e);o||(o=new Map,this._residentGeomRecords.set(e,o));let r=o.get(t);return r||(r=new Map,o.set(t,r)),r},n._ensureDirtyRecord=function(e,t){let o=this._dirtyGeomRecords.get(e);o||(o=new Map,this._dirtyGeomRecords.set(e,o));let r=o.get(t);return r||(r=new Map,o.set(t,r)),r},n._getParentLayerId=function(e){return e.parentLayer.id},n.formatDebugInfo=function(){const e=["ADD","UPD",void 0,"REM"];let t="";return this._dirtyGeomRecords.forEach(((o,r)=>{o.forEach(((o,n)=>{t.length>0&&(t+="\n"),t+=r+"."+n;const s=[];o.forEach((e=>{const t=e[1];s[t]||(s[t]=[]),s[t].push(e[0].geometry.id)}));for(let o=0;o<s.length;o++)if(s[o]){t+=" "+e[o-1]+": ";for(let e=0;e<s[o].length;e++)t+=s[o][e]+", "}}))})),t},e._createClass(r,[{key:"residentLayerCount",get:function(){return this._residentGeomRecords.size}},{key:"residentObjectCount",get:function(){let e=0;return this._residentGeomRecords.forEach((t=>{e+=t.size})),e}}]),r}()}));
