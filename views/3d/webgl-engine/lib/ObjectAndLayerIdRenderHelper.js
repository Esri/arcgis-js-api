/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../core/Logger","../../../../chunks/vec4f64","../../../../geometry/support/buffer/BufferView"],(function(e,r,t,o){"use strict";let i=function(){function e(){this.declaredClass="esri.views.3d.webgl-engine.lib.ObjectAndLayerIdRenderHelper",this.colorZero=new o.BufferViewVec4u8(new ArrayBuffer(4)),this._uidToRenderColor=new Map,this._colorToUID=new Map,this._layerUidToGraphicsUidToObjectId=new Map,this._layerUidToId=new Map,this._layerUidToPopupEnabled=new Map}var i=e.prototype;return i.setUidToObjectAndLayerId=function(e,r,t,o,i,d=null,a=null,n=null){if(!(e&&r&&t&&o))return;if(this._layerUidToId.set(o,t),this._layerUidToPopupEnabled.set(o,i),!i)return;let l=this._layerUidToGraphicsUidToObjectId.get(o);l||(l=new Map,this._layerUidToGraphicsUidToObjectId.set(o,l)),l.set(r,{objectId:e,attributeNodeId:d,attributeIndex:a,subLayerId:n})},i.getObjectAndLayerIdColor=function(e){const r=this.getObjectAndLayerIdColorArray(e);return t.fromValues(r.get(0,1),r.get(0,2),r.get(0,3),255)},i.getObjectAndLayerIdColorArray=function(e){if(!e.layerUid||!e.graphicUid)return this.colorZero;const t=this._layerUidToPopupEnabled.get(e.layerUid);if(void 0===t)return r.getLogger(this.declaredClass).warn("popupEnabled is undefined for layerUid "+e.layerUid),this.colorZero;if(!1===t)return this.colorZero;let i=this._uidToRenderColor.get(e.layerUid);i||(i=new Map,this._uidToRenderColor.set(e.layerUid,i));let d=i.get(e.graphicUid);if(!d){for(;!d;){const e=Math.floor(16777214*Math.random())+1;this._colorToUID.has(e)||(d=e)}if(d>16777215)throw new Error("Object ID Overflow");i.set(e.graphicUid,d),this._colorToUID.set(d,e)}const a=new ArrayBuffer(4);new DataView(a).setUint32(0,d,!1);return new o.BufferViewVec4u8(a)},i.getColorToObjectAndLayerIdMapping=function(){const e=new Map;for(const[t,o]of this._colorToUID.entries()){const i=this._layerUidToGraphicsUidToObjectId.get(o.layerUid);let d=null;i?(d=i.get(o.graphicUid),d||r.getLogger(this.declaredClass).warn("getColorMapping: no entry found for graphicsId "+o.graphicUid)):r.getLogger(this.declaredClass).warn("getColorMapping: no entry found for layerUid "+o.layerUid);const a=this._layerUidToId.get(o.layerUid);a||r.getLogger(this.declaredClass).warn("no layerId found for uid "+o.layerUid),d&&a&&e.set(t,d.attributeNodeId?{type:"object-and-layer-and-i3s-id",oid:d.objectId,lid:a,attrId:d.attributeNodeId,attrIdx:d.attributeIndex,subLayerId:d.subLayerId}:{type:"object-and-layer-id",oid:d.objectId,lid:a})}return e},e}();e.ObjectAndLayerIdRenderHelper=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
