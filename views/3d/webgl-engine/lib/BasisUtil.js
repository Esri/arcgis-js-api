/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../webgl/Texture","../../../webgl/Util","../../../../libs/basisu/BasisU"],(function(e,t,s,n,a){"use strict";let i=null,r=null;async function o(){return t.isNone(r)&&(r=a.getBasisTranscoder(),i=await r),r}function l(e){if(t.isNone(i))return e.byteLength;const s=new i.BasisFile(new Uint8Array(e));if(s.getNumImages()<1)return 0;const a=s.getNumLevels(0),r=s.getHasAlpha(),o=s.getImageWidth(0,0),l=s.getImageHeight(0,0);s.close(),s.delete();const g=n.getBytesPerElementFormat(r?37496:37492),c=(4**a-1)/(3*4**(a-1));return Math.ceil(o*l*g*c)}async function g(e,n,a){t.isNone(i)&&(i=await o());const r=new i.BasisFile(new Uint8Array(a));if(r.getNumImages()<1)return null;const l=r.getNumLevels(0),g=r.getHasAlpha(),c=r.getImageWidth(0,0),u=r.getImageHeight(0,0),{compressedTextureETC:m,compressedTextureS3TC:d}=e.capabilities,[h,p]=m?g?[1,37496]:[0,37492]:d?g?[3,33779]:[2,33776]:[13,6408];r.startTranscoding();const y=[];for(let t=0;t<l;t++)y.push(new Uint8Array(r.getImageTranscodedSizeInBytes(0,t,h))),r.transcodeImage(y[t],0,t,h,0,0);r.close(),r.delete();const w={...n,samplingMode:l>1?9987:9729,hasMipmap:l>1,internalFormat:p,width:c,height:u};return new s(e,w,{type:"compressed",levels:y})}e.createTextureFromBasis=g,e.estimateBasisTextureMemoryUsage=l,e.loadBasis=o,Object.defineProperty(e,"__esModule",{value:!0})}));
