/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{smoothstep as t,clamp as s}from"../../../../core/mathUtils.js";import{isNone as e,disposeMaybe as i,releaseMaybe as a}from"../../../../core/maybe.js";import{n as r,s as h,e as o}from"../../../../chunks/vec3.js";import{c}from"../../../../chunks/vec3f64.js";import{ViewingMode as n}from"../../../ViewingMode.js";import{ReadShadowMapBindParameters as m}from"../core/shaderLibrary/shading/ReadShadowMap.glsl.js";import{createQuadVAO as p}from"./glUtil3D.js";import{ShadowHighlightPassParameters as _,ShadowHighlightTechnique as d}from"../shaders/ShadowHighlightTechnique.js";import{vertexCount as u}from"../../../webgl/Util.js";const l=.001953125,g=4e4,w=5e4;class v{constructor(t,s){this._rctx=t,this._viewingMode=s,this._maxOpacity=1,this._passParameters=new _,this._drawParameters=new m,this._vao=p(this._rctx)}get technique(){return e(this._technique)&&(this._technique=new d({rctx:this._rctx,viewingMode:this._viewingMode})),this._technique}render(t,s){if(!t.shadowMap.enabled||!t.linearDepthTexture||!this.isVisible)return;const e=this.technique;this._drawParameters.origin=t.camera.center,this._rctx.bindFramebuffer(s),this._rctx.bindTechnique(e,this._passParameters,t).bindDraw(this._drawParameters,t),this._rctx.bindVAO(this._vao),this._rctx.drawArrays(e.primitiveType,0,u(this._vao,"geometry"))}get gpuMemoryUsage(){return this._vao?.size??0}setDefaultOptions(t){this._passParameters={...this._passParameters,...t},this._updateMaxOpacity()}updateParameters(e,i){this._passParameters.opacityElevation=1-t(g,w,e.relativeElevation);const a=this._viewingMode===n.Global?r(y,e.center):h(y,0,0,1),c=o(a,i);this._passParameters.dayNightTerminator=t(0,1,s(30*c,0,1))}dispose(){this._vao=i(this._vao),this._technique=a(this._technique)}get isVisible(){const{opacityElevation:t,dayNightTerminator:s}=this._passParameters;return this._maxOpacity*t*s>=l}_updateMaxOpacity(){const t=Math.max(this._passParameters.shadowOpacity,this._passParameters.occludedShadowOpacity);this._maxOpacity=t*this._passParameters.shadowColor[3]}}const y=c();export{v as ShadowHighlight};
