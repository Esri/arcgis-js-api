/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as t,unwrapOr as e,isNone as s}from"../../../../core/maybe.js";import{c as i,m as r}from"../../../../chunks/mat4.js";import{c as o,b as a,I as n}from"../../../../chunks/mat4f64.js";import{h,m,i as c,c as l,s as d}from"../../../../chunks/vec3.js";import{a as g,f as _,c as u}from"../../../../chunks/vec3f64.js";import{c as b,a as f}from"../../../../chunks/sphere.js";import{maxScale as p}from"../../support/mathUtils.js";import{Object3DState as v}from"./basicInterfaces.js";import{ContentObject as y}from"./ContentObject.js";import{ContentObjectType as j}from"./ContentObjectType.js";import{GeometryRecord as V}from"./GeometryRecord.js";import{Object3DStateID as S}from"./Object3DStateID.js";import{assert as A}from"./Util.js";import{addObject3DStateID as T,removeObject3DStateID as x}from"../materials/renderers/utils.js";class O extends y{constructor(t={}){super(),this.type=j.Object,this._geometryRecords=new Array,this._geometries=new Array,this._objectTransformation=o(),this._bvObjectSpace=new R,this._bvWorldSpace=new R,this._bvDirty=!0,this._hasVolatileTransformation=!1,this._visible=!0,this.castShadow=null==t.castShadow||t.castShadow,this.metadata=t.metadata,this.metadata&&this.metadata.isElevationSource&&(this.metadata.lastValidElevationBB=new L),this.transformation=o();const{geometries:e,materials:s,transformations:i,origins:r}=t;if(Array.isArray(e)){A(s.length===e.length,"Object3D: materials don't match geometries"),A(i.length===e.length,"Object3D: transformations don't match geometries"),this._geometryRecords.length=e.length,this._geometries.length=e.length;for(let t=0;t<e.length;t++)this._geometries[t]=e[t],this._geometryRecords[t]=V.pool.acquire(e[t],s[t],a(i[t]),{highlights:null,occludees:null,visible:this._visible},r&&r[t])}}get geometryRecords(){return this._geometryRecords}get geometries(){return this._geometries}get transformation(){return this._objectTransformation}set transformation(t){i(this._objectTransformation,t),this._invalidateBoundingVolume(),this._emit("objectTransformation",this)}dispose(){this._geometryRecords.length=0,this._geometries.length=0}get parentLayer(){return this._parentLayer}set parentLayer(t){A(null==this._parentLayer||null==t,"Object3D can only be added to a single Layer"),this._parentLayer=t}addGeometry(e,s,i,r,o){i=i||n,this._geometries.push(e);const a=V.pool.acquire(e,s,i,{highlights:null,occludees:null,visible:this._visible},r,o);return this._geometryRecords.push(a),this._hasVolatileTransformation=this._hasVolatileTransformation||t(a.shaderTransformation),this._emit("objectGeometryAdded",{object:this,record:a}),this._invalidateBoundingVolume(),a}removeGeometry(e){const s=this._geometryRecords.splice(e,1)[0];return this._hasVolatileTransformation=t(s.shaderTransformation)?this._geometryRecords.some((e=>t(e.shaderTransformation))):this._hasVolatileTransformation,s.dispose(),this._geometries.splice(e,1),this._emit("objectGeometryRemoved",{object:this,record:s}),this._invalidateBoundingVolume(),s}removeAllGeometries(){for(;this.geometryRecords.length>0;)this.removeGeometry(0)}geometryVertexAttrsUpdated(t){this._emit("vertexAttrsUpdated",{object:this,record:t}),this._invalidateBoundingVolume()}get isVisible(){return this._visible}setVisible(t){if(this._visible!==t){this._visible=t;for(const t of this._geometryRecords)t.instanceParameters.visible=this._visible;this._emit("visibilityChanged",this)}}maskOccludee(){const t=new S(v.MaskOccludee);for(const e of this._geometryRecords)e.instanceParameters.occludees=T(e.instanceParameters.occludees,t);return this._emit("occlusionChanged",this),t}removeOcclude(t){for(const e of this._geometryRecords)e.instanceParameters.occludees=x(e.instanceParameters.occludees,t);this._emit("occlusionChanged",this)}highlight(){const t=new S(v.Highlight);for(const e of this._geometryRecords)e.instanceParameters.highlights=T(e.instanceParameters.highlights,t);return this._emit("highlightChanged",this),t}removeHighlight(t){for(const e of this._geometryRecords)e.instanceParameters.highlights=x(e.instanceParameters.highlights,t);this._emit("highlightChanged",this)}getCombinedStaticTransformation(t,s){return r(e(s,o()),this.transformation,t.getStaticTransformation())}_getCombinedShaderTransformation(t,e){return e=e||o(),r(e,this.transformation,t.getShaderTransformation()),e}hasVolativeTransformation(){return this._hasVolatileTransformation}get boundingVolumeWorldSpace(){return this._validateBoundingVolume(),this._bvWorldSpace}get boundingVolumeObjectSpace(){return this._validateBoundingVolume(),this._bvObjectSpace}_validateBoundingVolume(){if(!this._bvDirty&&!this._hasVolatileTransformation)return;this._bvObjectSpace.init(),this._bvWorldSpace.init();for(let s=0;s<this._geometryRecords.length;++s){const e=this._geometries[s],i=this._geometryRecords[s],r=e.boundingInfo;t(r)&&(this._calculateTransformedBoundingVolume(r,this._bvObjectSpace,i.getShaderTransformation()),this._calculateTransformedBoundingVolume(r,this._bvWorldSpace,this._getCombinedShaderTransformation(i)))}h(this._bvObjectSpace.bounds,this._bvObjectSpace.min,this._bvObjectSpace.max,.5),h(this._bvWorldSpace.bounds,this._bvWorldSpace.min,this._bvWorldSpace.max,.5);const e=u(),i=u(),r=p(this.transformation);for(let t=0;t<this._geometryRecords.length;++t){const o=this._geometries[t].boundingInfo;if(s(o))continue;const a=this._geometryRecords[t].getShaderTransformation(),n=p(a);m(e,o.getCenter(),a);const h=c(e,this._bvObjectSpace.bounds),l=o.getBSRadius()*n;this._bvObjectSpace.bounds[3]=Math.max(this._bvObjectSpace.bounds[3],h+l),m(i,e,this.transformation);const d=c(i,this._bvWorldSpace.bounds),g=l*r;this._bvWorldSpace.bounds[3]=Math.max(this._bvWorldSpace.bounds[3],d+g)}this._bvDirty=!1}_calculateTransformedBoundingVolume(t,e,s){const i=t.getBBMin(),r=t.getBBMax(),o=g(i),a=g(r);m(o,o,s),m(a,a,s);for(let n=0;n<3;++n)e.min[n]=Math.min(e.min[n],o[n],a[n]),e.max[n]=Math.max(e.max[n],o[n],a[n]);for(let n=0;n<3;++n){l(o,i),l(a,r),o[n]=r[n],a[n]=i[n],m(o,o,s),m(a,a,s);for(let t=0;t<3;++t)e.min[t]=Math.min(e.min[t],o[t],a[t]),e.max[t]=Math.max(e.max[t],o[t],a[t])}}_invalidateBoundingVolume(){this._bvDirty=!0,t(this._parentLayer)&&this._parentLayer.notifyObjectBBChanged(this,this._bvWorldSpace.bounds)}_emit(e,s){t(this._parentLayer)&&this._parentLayer.events.emit(e,s)}get test(){const t=this;return{hasGeometry:e=>t._geometries.includes(e),getGeometryIndex:e=>t._geometries.indexOf(e)}}}class L{constructor(){this.min=_(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this.max=_(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)}isEmpty(){return this.max[0]<this.min[0]&&this.max[1]<this.min[1]&&this.max[2]<this.min[2]}}class R extends L{constructor(){super(...arguments),this.bounds=b()}init(){d(this.min,Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),d(this.max,-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),f(this.bounds)}}export{O as Object3D};
