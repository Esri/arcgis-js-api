/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/ObjectPool","../../../../core/PooledArray","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/frustum","../../../../geometry/support/ray","../../../../chunks/sphere","./Util"],(function(e,t,n,o,i,r,s,h,a,u){"use strict";let c=function(){function n(e,t){this._objectToBoundingSphere=e,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new l,this._objectCount=0,t&&(void 0!==t.maximumObjectsPerNode&&(this._maximumObjectsPerNode=t.maximumObjectsPerNode),void 0!==t.maximumDepth&&(this._maximumDepth=t.maximumDepth))}var r=n.prototype;return r.destroy=function(){this._degenerateObjects.clear(),l.clearPool(),j[0]=null,A.prune(),F.prune()},r.add=function(e,t=e.length){this._objectCount+=t,this._grow(e,t);const n=l.acquire();for(let o=0;o<t;o++){const t=e[o];this._isDegenerate(t)?this._degenerateObjects.add(t):(n.init(this._root),this._add(t,n))}l.release(n)},r.remove=function(e,n=null){this._objectCount-=e.length;const o=l.acquire();for(const i of e){const e=t.isSome(n)?n:a.copy(this._objectToBoundingSphere(i),B);S(e[3])?(o.init(this._root),this._remove(i,e,o)):this._degenerateObjects.delete(i)}l.release(o),this._shrink()},r.update=function(e,t){if(!S(t[3])&&this._isDegenerate(e))return;const n=T(e);this.remove(n,t),this.add(n)},r.forEachAlongRay=function(e,t,n){const o=h.wrap(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNode(o,e))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),!0}))},r.forEachAlongRayWithVerticalOffset=function(e,t,n,o){const i=h.wrap(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNodeWithOffset(i,e,o))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObjectWithOffset(i,e,o)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObjectWithOffset(i,e,o)&&n(e)})),!0}))},r.forEach=function(e){this._forEachNode(this._root,(t=>{const n=t.node;return n.terminals.forAll(e),null!==n.residents&&n.residents.forAll(e),!0})),this._degenerateObjects.forEach(e)},r.forEachDegenerateObject=function(e){this._degenerateObjects.forEach(e)},r.findClosest=function(e,t,n,o=(()=>!0),r=1/0){let h=1/0,u=1/0,c=null;const l=b(e,t),d=i=>{if(--r,!o(i))return;const l=this._objectToBoundingSphere(i);if(!s.intersectsSphere(n,l))return;const d=g(e,t,a.getCenter(l)),f=d-l[3],_=d+l[3];f<h&&(h=f,u=_,c=i)};return this._forEachNodeDepthOrdered(this._root,(o=>{if(r<=0||!s.intersectsSphere(n,o.bounds))return!1;i.scale(z,l,o.halfSize),i.add(z,z,o.bounds);if(g(e,t,z)>u)return!1;const h=o.node;return h.terminals.forAll((e=>d(e))),null!==h.residents&&h.residents.forAll((e=>d(e))),!0}),e,t),c},r.forEachInDepthRange=function(e,t,o,r,h,u,c){let l=-1/0,d=1/0;const f={setRange:e=>{o===n.DepthOrder.FRONT_TO_BACK?(l=Math.max(l,e.near),d=Math.min(d,e.far)):(l=Math.max(l,-e.far),d=Math.min(d,-e.near))}};f.setRange(r);const _=g(t,o,e),m=b(t,o),p=b(t,-o),S=e=>{if(!c(e))return;const n=this._objectToBoundingSphere(e),i=a.getCenter(n),r=g(t,o,i)-_,m=r-n[3],p=r+n[3];m>d||p<l||!s.intersectsSphere(u,n)||h(e,f)};this._forEachNodeDepthOrdered(this._root,(e=>{if(!s.intersectsSphere(u,e.bounds))return!1;i.scale(z,m,e.halfSize),i.add(z,z,e.bounds);if(g(t,o,z)-_>d)return!1;i.scale(z,p,e.halfSize),i.add(z,z,e.bounds);if(g(t,o,z)-_<l)return!1;const n=e.node;return n.terminals.forAll((e=>S(e))),null!==n.residents&&n.residents.forAll((e=>S(e))),!0}),t,o)},r.forEachNode=function(e){this._forEachNode(this._root,(t=>e(t.node,t.bounds,t.halfSize)))},r.forEachNeighbor=function(e,t){const n=a.getRadius(t),o=a.getCenter(t),r=t=>{const r=this._objectToBoundingSphere(t),s=a.getRadius(r),h=n+s;return!(i.squaredDistance(a.getCenter(r),o)-h*h<=0)||e(t)};let s=!0;const h=e=>{s&&(s=r(e))};this._forEachNode(this._root,(e=>{const t=a.getRadius(e.bounds),r=n+t;if(i.squaredDistance(a.getCenter(e.bounds),o)-r*r>0)return!1;const u=e.node;return u.terminals.forAll(h),s&&null!==u.residents&&u.residents.forAll(h),s})),s&&this.forEachDegenerateObject(h)},r._intersectsNode=function(e,t){return _(t.bounds,2*-t.halfSize,E),_(t.bounds,2*t.halfSize,M),u.rayBoxTest(e.origin,e.direction,E,M)},r._intersectsNodeWithOffset=function(e,t,n){return _(t.bounds,2*-t.halfSize,E),_(t.bounds,2*t.halfSize,M),n.applyToMinMax(E,M),u.rayBoxTest(e.origin,e.direction,E,M)},r._intersectsObject=function(e,t){const n=this._objectToBoundingSphere(t);return!(n[3]>0)||a.intersectsRay(n,e)},r._intersectsObjectWithOffset=function(e,t,n){const o=this._objectToBoundingSphere(t);return!(o[3]>0)||a.intersectsRay(n.applyToBoundingSphere(o),e)},r._forEachNode=function(e,t){let n=l.acquire().init(e);const o=[n];for(;0!==o.length;){if(n=o.pop(),t(n)&&!n.isLeaf())for(let e=0;e<n.node.children.length;e++){n.node.children[e]&&o.push(l.acquire().init(n).advance(e))}l.release(n)}},r._forEachNodeDepthOrdered=function(e,t,o,i=n.DepthOrder.FRONT_TO_BACK){let r=l.acquire().init(e);const s=[r];for(p(o,i,V);0!==s.length;){if(r=s.pop(),t(r)&&!r.isLeaf())for(let e=7;e>=0;--e){const t=V[e];r.node.children[t]&&s.push(l.acquire().init(r).advance(t))}l.release(r)}},r._remove=function(e,t,n){A.clear();const o=n.advanceTo(t,((e,t)=>{A.push(e.node),A.push(t)}))?n.node.terminals:n.node.residents;if(o.removeUnordered(e),0===o.length)for(let i=A.length-2;i>=0;i-=2){const e=A.data[i],t=A.data[i+1];if(!this._purge(e,t))break}},r._nodeIsEmpty=function(e){if(0!==e.terminals.length)return!1;if(null!==e.residents)return 0===e.residents.length;for(let t=0;t<e.children.length;t++)if(e.children[t])return!1;return!0},r._purge=function(e,t){return t>=0&&(e.children[t]=null),!!this._nodeIsEmpty(e)&&(null===e.residents&&(e.residents=new o({shrink:!0})),!0)},r._add=function(e,t){t.advanceTo(this._objectToBoundingSphere(e))?t.node.terminals.push(e):(t.node.residents.push(e),t.node.residents.length>this._maximumObjectsPerNode&&t.depth<this._maximumDepth&&this._split(t))},r._split=function(e){const t=e.node.residents;e.node.residents=null;for(let n=0;n<t.length;n++){const o=l.acquire().init(e);this._add(t.getItemAt(n),o),l.release(o)}},r._grow=function(e,t){if(0!==t&&(m(e,t,(e=>this._objectToBoundingSphere(e)),D),S(D[3])&&!this._fitsInsideTree(D)))if(this._nodeIsEmpty(this._root.node))a.copy(D,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const e=this._rootBoundsForRootAsSubNode(D);this._placingRootViolatesMaxDepth(e)?this._rebuildTree(D,e):this._growRootAsSubNode(e),l.release(e)}},r._rebuildTree=function(e,t){i.copy(R,t.bounds),R[3]=t.halfSize,m([e,R],2,(e=>e),v);const n=l.acquire().init(this._root);this._root.initFrom(null,v,v[3]),this._root.increaseHalfSize(1.25),this._forEachNode(n,(e=>(this.add(e.node.terminals.data,e.node.terminals.length),null!==e.node.residents&&this.add(e.node.residents.data,e.node.residents.length),!0))),l.release(n)},r._placingRootViolatesMaxDepth=function(e){const t=Math.log(e.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,(e=>(n=Math.max(n,e.depth),n+t<=this._maximumDepth))),n+t>this._maximumDepth},r._rootBoundsForRootAsSubNode=function(e){const t=e[3],n=e;let o=-1/0;const i=this._root.bounds,r=this._root.halfSize;for(let h=0;h<3;h++){const e=i[h]-r-(n[h]-t),s=n[h]+t-(i[h]+r),a=Math.max(0,Math.ceil(e/(2*r))),u=Math.max(0,Math.ceil(s/(2*r)))+1,c=2**Math.ceil(Math.log(a+u)*Math.LOG2E);o=Math.max(o,c),k[h].min=a,k[h].max=u}for(let h=0;h<3;h++){let e=k[h].min,t=k[h].max;const n=(o-(e+t))/2;e+=Math.ceil(n),t+=Math.floor(n);const s=i[h]-r-e*r*2;y[h]=s+(t+e)*r}const s=o*r;return y[3]=s*N,l.acquire().initFrom(null,y,s,0)},r._growRootAsSubNode=function(e){const t=this._root.node;i.copy(D,this._root.bounds),D[3]=this._root.halfSize,this._root.init(e),e.advanceTo(D,null,!0),e.node.children=t.children,e.node.residents=t.residents,e.node.terminals=t.terminals},r._shrink=function(){for(;;){const e=this._findShrinkIndex();if(-1===e)break;this._root.advance(e),this._root.depth=0}},r._findShrinkIndex=function(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let e=null;const t=this._root.node.children;let n=0,o=0;for(;o<t.length&&null==e;)n=o++,e=t[n];for(;o<t.length;)if(t[o++])return-1;return n},r._isDegenerate=function(e){return!S(this._objectToBoundingSphere(e)[3])},r._fitsInsideTree=function(e){const t=this._root.bounds,n=this._root.halfSize;return e[3]<=n&&e[0]>=t[0]-n&&e[0]<=t[0]+n&&e[1]>=t[1]-n&&e[1]<=t[1]+n&&e[2]>=t[2]-n&&e[2]<=t[2]+n},e._createClass(n,[{key:"bounds",get:function(){return this._root.bounds}},{key:"halfSize",get:function(){return this._root.halfSize}},{key:"root",get:function(){return this._root.node}},{key:"maximumObjectsPerNode",get:function(){return this._maximumObjectsPerNode}},{key:"maximumDepth",get:function(){return this._maximumDepth}},{key:"objectCount",get:function(){return this._objectCount}}]),n}(),l=function(){function e(){this.bounds=a.create(),this.halfSize=0,this.initFrom(null,null,0,0)}var n=e.prototype;return n.init=function(e){return this.initFrom(e.node,e.bounds,e.halfSize,e.depth)},n.initFrom=function(n,o,i,r=this.depth){return this.node=t.isSome(n)?n:e.createEmptyNode(),t.isSome(o)&&a.copy(o,this.bounds),this.halfSize=i,this.depth=r,this},n.increaseHalfSize=function(e){this.halfSize*=e,this.updateBoundsRadiusFromHalfSize()},n.updateBoundsRadiusFromHalfSize=function(){this.bounds[3]=this.halfSize*N},n.advance=function(t){let n=this.node.children[t];n||(n=e.createEmptyNode(),this.node.children[t]=n),this.node=n,this.halfSize/=2,this.depth++;const o=O[t];return this.bounds[0]+=o[0]*this.halfSize,this.bounds[1]+=o[1]*this.halfSize,this.bounds[2]+=o[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this},n.advanceTo=function(e,t,n=!1){for(;;){if(this.isTerminalFor(e))return t&&t(this,-1),!0;if(this.isLeaf()){if(!n)return t&&t(this,-1),!1;this.node.residents=null}const o=this._childIndex(e);t&&t(this,o),this.advance(o)}},n.isLeaf=function(){return null!=this.node.residents},n.isTerminalFor=function(e){return e[3]>this.halfSize/2},n._childIndex=function(e){const t=this.bounds;return(t[0]<e[0]?1:0)+(t[1]<e[1]?2:0)+(t[2]<e[2]?4:0)},e.createEmptyNode=function(){return{children:[null,null,null,null,null,null,null,null],terminals:new o({shrink:!0}),residents:new o({shrink:!0})}},e.acquire=function(){return e._pool.acquire()},e.release=function(t){e._pool.release(t)},e.clearPool=function(){e._pool.prune()},e}();function d(e,t){e[0]=Math.min(e[0],t[0]-t[3]),e[1]=Math.min(e[1],t[1]-t[3]),e[2]=Math.min(e[2],t[2]-t[3])}function f(e,t){e[0]=Math.max(e[0],t[0]+t[3]),e[1]=Math.max(e[1],t[1]+t[3]),e[2]=Math.max(e[2],t[2]+t[3])}function _(e,t,n){n[0]=e[0]+t,n[1]=e[1]+t,n[2]=e[2]+t}function m(e,t,n,o){if(1===t){const t=n(e[0]);a.copy(t,o)}else{E[0]=1/0,E[1]=1/0,E[2]=1/0,M[0]=-1/0,M[1]=-1/0,M[2]=-1/0;for(let o=0;o<t;o++){const t=n(e[o]);S(t[3])&&(d(E,t),f(M,t))}i.lerp(o,E,M,.5),o[3]=Math.max(M[0]-E[0],M[1]-E[1],M[2]-E[2])/2}}function p(e,t,n){if(!F.length)for(let o=0;o<8;++o)F.push({index:0,distance:0});for(let o=0;o<8;++o){const n=O[o];F.data[o].index=o,F.data[o].distance=g(e,t,n)}F.sort(((e,t)=>e.distance-t.distance));for(let o=0;o<8;++o)n[o]=F.data[o].index}function b(e,t){let n,o=1/0;for(let i=0;i<8;++i){const r=g(e,t,x[i]);r<o&&(o=r,n=x[i])}return n}function g(e,t,n){return t*(e[0]*n[0]+e[1]*n[1]+e[2]*n[2])}function S(e){return!isNaN(e)&&e!==-1/0&&e!==1/0&&e>0}l._pool=new n(l),function(e){var t;(t=e.DepthOrder||(e.DepthOrder={}))[t.FRONT_TO_BACK=1]="FRONT_TO_BACK",t[t.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(c||(c={}));const O=[r.fromValues(-1,-1,-1),r.fromValues(1,-1,-1),r.fromValues(-1,1,-1),r.fromValues(1,1,-1),r.fromValues(-1,-1,1),r.fromValues(1,-1,1),r.fromValues(-1,1,1),r.fromValues(1,1,1)],x=[r.fromValues(-1,-1,-1),r.fromValues(-1,-1,1),r.fromValues(-1,1,-1),r.fromValues(-1,1,1),r.fromValues(1,-1,-1),r.fromValues(1,-1,1),r.fromValues(1,1,-1),r.fromValues(1,1,1)],N=Math.sqrt(3),j=[null];function T(e){return j[0]=e,j}const y=a.create(),z=r.create(),E=r.create(),M=r.create(),A=new o,B=a.create(),D=a.create(),R=a.create(),v=a.create(),k=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],F=new o,V=[0,0,0,0,0,0,0,0];return c}));
