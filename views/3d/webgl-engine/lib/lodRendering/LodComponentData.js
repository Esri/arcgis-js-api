/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{glLayout as r}from"../../../support/buffer/glUtil.js";import{Default3D as e}from"../DefaultVertexAttributeLocations.js";import{GLMaterials as t}from"../GLMaterials.js";import{newIntersectorResult as s}from"../Intersector.js";import{IntersectorType as o,StoreResults as i}from"../IntersectorInterfaces.js";import{BufferObject as a}from"../../../../webgl/BufferObject.js";import{Usage as n}from"../../../../webgl/enums.js";import{VertexArrayObject as l}from"../../../../webgl/VertexArrayObject.js";class m{constructor(s,o){const i=s.renderContext.rctx,{geometry:m,material:u}=o;this._materialRepository=s.materialRep,u.setParameters({instancedDoublePrecision:!0});const f=u.createBufferWriter(),d=f.vertexBufferLayout,p=f.elementCount(m),c=f.allocate(p);f.write({},m,c,0),this.geometry=m,this.material=u,this.glMaterials=new t(u,this._materialRepository),this.vertexBufferLayout=d,this.vbo=a.createVertex(i,n.STATIC_DRAW,c.buffer),this.vao=new l(i,e,{geometry:r(d)},{geometry:this.vbo}),this.vertexCount=p}destroy(){this.glMaterials.destroy(),this.vbo.dispose(),this.vao.dispose()}get boundingInfo(){return this.geometry.boundingInfo}get triangleCount(){return this.vertexCount/3}intersect(r,e,t,a,n,l,m,u){const f=this.geometry.id;this.material.intersect(this.geometry,null,r.transform.transform,r,t,a,((t,a,d,p,c)=>{if(t>=0){if(null!=e&&!e(r.rayBegin,r.rayEnd,t))return;const p={layerUid:l.layerUid,graphicUid:l.graphicUid(n),geometryId:f,triangleNr:d,baseBoundingSphere:m,numLodLevels:u};if((null==r.results.min.drapedLayerOrder||c>=r.results.min.drapedLayerOrder)&&(null==r.results.min.dist||t<r.results.min.dist)&&r.results.min.set(o.LOD,p,t,a,r.transform.transform,c),r.options.store!==i.MIN&&(null==r.results.max.drapedLayerOrder||c>=r.results.max.drapedLayerOrder)&&(null==r.results.max.dist||t>r.results.max.dist)&&r.results.max.set(o.LOD,p,t,a,r.transform.transform,c),r.options.store===i.ALL){const e=s(r.results.min.ray);e.set(o.LOD,p,t,a,r.transform.transform,c),r.results.all.push(e)}}}))}}export{m as LodComponentData};
