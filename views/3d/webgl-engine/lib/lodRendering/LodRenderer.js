/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isNone as e}from"../../../../../core/maybe.js";import{isAborted as t,throwIfAborted as s}from"../../../../../core/promiseUtils.js";import{c as a}from"../../../../../chunks/mat4f64.js";import{b as n,e as i,m as r}from"../../../../../chunks/vec3.js";import{c as o}from"../../../../../chunks/vec3f64.js";import{c as l}from"../../../../../chunks/vec4f64.js";import c from"../../../support/debugFlags.js";import{glLayout as h}from"../../../support/buffer/glUtil.js";import{Camera as d}from"../Camera.js";import{Default3D as _}from"../DefaultVertexAttributeLocations.js";import{IntersectorType as u}from"../IntersectorInterfaces.js";import m from"../Octree.js";import{RenderPass as f}from"../RenderPass.js";import{RenderSlot as p}from"../RenderSlot.js";import{assert as g}from"../Util.js";import{InstanceData as I,StateFlags as D}from"./InstanceData.js";import{InstanceOctree as C}from"./InstanceOctree.js";import{LevelSelector as R}from"./LevelSelector.js";import{LodLevel as v}from"./LodLevel.js";import{RenderInstanceData as E}from"./RenderInstanceData.js";import{getInstanceBufferLayout as y}from"../../materials/DefaultMaterial.js";import{colorMixModes as A}from"../../materials/internal/MaterialUtil.js";import{encodeDoubleVec3 as b}from"../../materials/renderers/utils.js";import{DefaultMaterialDrawParameters as T}from"../../shaders/DefaultMaterialTechnique.js";import{bindVertexBufferLayout as L,unbindVertexBufferLayout as S}from"../../../../webgl/Util.js";let O=e=>{const t=e.baseBoundingSphere.radius,s=e.levels.map((e=>e.minScreenSpaceRadius));return new R(t,s)};function U(e){O=e}class M{constructor(e,t,s,a){this.type=u.LOD,this.isGround=!1,this._levels=[],this._defaultRenderInstanceData=[],this._highlightRenderInstanceData=[],this._instanceIndex=0,this._slicePlane=!1,this._enableLevelSelection=!0,this._lastCamera=new d,this._updateCyclesWithStaticCamera=-1,this._needFullCycle=!1,this.slots=[p.OPAQUE_MATERIAL,p.TRANSPARENT_MATERIAL],this.canRender=!0,this._symbol=e,this._optionalFields=t,this._metadata=s,this._instanceBufferLayout=y({instancedDoublePrecision:!0,instanced:t}),this._glInstanceBufferLayout=h(this._instanceBufferLayout,1),this._instanceData=new I(this._optionalFields,a),this._instanceData.on("instance-added",(()=>this._requestUpdateCycle())),this._instanceData.on("instance-removed",(()=>this._requestUpdateCycle())),this._instanceData.on("instance-transform-changed",(e=>{this._requestUpdateCycle(),this._metadata.notifyGraphicGeometryChanged(e.index)})),this._instanceData.on("instance-visibility-changed",(e=>{this._requestUpdateCycle(!0),this._metadata.notifyGraphicVisibilityChanged(e.index)})),this._instanceData.on("instance-highlight-changed",(()=>this._requestUpdateCycle(!0))),this._enableLevelSelection=this._symbol.levels.length>1}get levels(){return this._levels}get baseBoundingBox(){return this._levels[this._levels.length-1].boundingBox}get baseBoundingSphere(){return this._levels[this._levels.length-1].boundingSphere}get baseMaterial(){return this._levels[this._levels.length-1].components[0].material}get slicePlaneEnabled(){return this._slicePlane}set slicePlaneEnabled(e){this._slicePlane=e}get layerUid(){return this._metadata.layerUid}get instanceData(){return this._instanceData}get memoryUsage(){const e={cpu:0,gpu:0};return this._defaultRenderInstanceData.forEach((t=>{const s=t.memoryUsage;e.cpu+=s.cpu,e.gpu+=s.gpu})),this._highlightRenderInstanceData.forEach((t=>{const s=t.memoryUsage;e.cpu+=s.cpu,e.gpu+=s.gpu})),e}get renderStats(){const e=this._instanceData.size,t=[];return this._levels.forEach(((e,s)=>{const a=this._defaultRenderInstanceData[s],n=this._highlightRenderInstanceData[s],i=a.size+n.size,r=e.triangleCount;t.push({renderedInstances:i,renderedTriangles:i*r,trianglesPerInstance:r})})),{totalInstances:e,renderedInstances:t.reduce(((e,t)=>e+t.renderedInstances),0),renderedTriangles:t.reduce(((e,t)=>e+t.renderedTriangles),0),levels:t}}async initializeRenderContext(e,a){this._context=e;const n=e.renderContext.rctx,i=await Promise.allSettled(this._symbol.levels.map((t=>(this._defaultRenderInstanceData.push(new E(n,this._instanceBufferLayout)),this._highlightRenderInstanceData.push(new E(n,this._instanceBufferLayout)),v.create(e,t,a))))),r=i.map((e=>"fulfilled"===e.status?e.value:null)).filter((e=>e));if(t(a)||r.length!==i.length){r.forEach((e=>e.destroy())),s(a);for(const e of i)if("rejected"===e.status)throw e.reason}this._levels=r,this._levelSelector=O(this)}uninitializeRenderContext(){this._invalidateOctree(),this._levels.forEach((e=>e.destroy())),this._defaultRenderInstanceData.forEach((e=>e.destroy())),this._highlightRenderInstanceData.forEach((e=>e.destroy()))}get needsTransparentPass(){return this._levels.some((e=>e.components.some((e=>e.material.requiresSlot(p.TRANSPARENT_MATERIAL)))))}get needsHighlight(){return this._highlightRenderInstanceData.some((e=>e.size>0))}prepareRender(e){if(c.LOD_INSTANCE_RENDERER_DISABLE_UPDATES)return;if(this._enableLevelSelection){const t=e.bindParameters.contentCamera.equals(this._lastCamera);this._lastCamera.copyFrom(e.bindParameters.contentCamera),t||this._requestUpdateCycle()}const t=this._needFullCycle?this._instanceData.size:2e3;this._needFullCycle=!1,this._updateInstances(e.bindParameters.contentCamera,t),this.needsUpdates&&this._context.requestRender()}render(e){if(!this.baseMaterial.isVisible()||!this.baseMaterial.isVisibleInPass(e.pass))return;e.rctx.bindVAO();const t=e.pass!==f.MATERIAL_HIGHLIGHT&&e.pass!==f.MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT,s=e.pass!==f.MATERIAL_DEPTH_SHADOWMAP_DEFAULT;t&&this._renderComponents(e,this._defaultRenderInstanceData),s&&this._renderComponents(e,this._highlightRenderInstanceData)}intersect(e,t,s,a){if(!this.baseMaterial.isVisible())return;const i=o();n(i,a,s);const l=n=>{this._instanceData.getCombinedModelTransform(n,P),e.transform.set(P),r(F,s,e.transform.inverse),r(w,a,e.transform.inverse);const i=this._instanceData.getState(n),o=this._instanceData.getLodLevel(n),l=this._levels.length;g(i&D.ACTIVE,"invalid instance state"),g(o>=0&&o<l,"invaid lod level"),this._levels[o].intersect(e,t,F,w,n,this._metadata,l)};this.baseMaterial.parameters.verticalOffset?this.octree.forEach(l):this.octree.forEachAlongRay(s,i,l)}queryDepthRange(e){return this._queryDepthRangeOctree(e)}notifyShaderTransformationChanged(){this._invalidateOctree()}_requestUpdateCycle(e=!1){this._updateCyclesWithStaticCamera=-1,e&&(this._needFullCycle=!0),this.needsUpdates&&this._context.requestRender()}get needsUpdates(){return this._instanceData.size>0&&this._updateCyclesWithStaticCamera<1}get octree(){return this._octree||(this._octree=this._buildOctree()),this._octree}_invalidateOctree(){this._octree&&(this._octree.destroy(),this._octree=null)}_buildOctree(){const e=new C(this._instanceData,this.baseBoundingSphere),t=this._instanceData,s=t.view?t.view.state:null;for(let a=0;a<this._instanceData.capacity;++a){s.get(a)&D.ACTIVE&&e.addInstance(a)}return e}_queryDepthRangeOctree(e){const t=e.eye,s=e.viewForward,a=this.octree.findClosest(s,m.DepthOrder.FRONT_TO_BACK,e.frustum),r=this.octree.findClosest(s,m.DepthOrder.BACK_TO_FRONT,e.frustum);if(null!=a&&null!=r){this._instanceData.view.boundingSphere.getVec(a,V),n(V,V,t);const o=i(V,s)-V[3];this._instanceData.view.boundingSphere.getVec(r,V),n(V,V,t);const l=i(V,s)+V[3];return{near:Math.max(e.near,o),far:Math.min(e.far,l)}}return{near:1/0,far:-1/0}}_startUpdateCycle(){this._updateCyclesWithStaticCamera++,this._defaultRenderInstanceData.forEach((e=>{e.startUpdateCylce()})),this._highlightRenderInstanceData.forEach((e=>{e.startUpdateCylce()})),this.needsUpdates&&this._context.requestRender()}_updateInstances(e,t){const s=this._enableLevelSelection,a=this._levelSelector;a.updateCamera(e),this._defaultRenderInstanceData.forEach((e=>{e.beginUpdate()})),this._highlightRenderInstanceData.forEach((e=>{e.beginUpdate()}));const n=this._instanceData,i=this._instanceData.view,r=n.size,o=n.capacity;let l=this._instanceIndex;t=Math.min(r,t);for(let c=0;c<t;++c){0===l&&this._startUpdateCycle();const e=i.state.get(l);let r=0;if(!(e&D.ALLOCATED)){l=(l+1)%o,t++;continue}const c=i.lodLevel.get(l);if(e&D.DEFAULT_ACTIVE&&this._defaultRenderInstanceData[c].freeTail(),e&D.HIGHLIGHT_ACTIVE&&this._highlightRenderInstanceData[c].freeTail(),e&D.REMOVE)n.freeInstance(l);else if(e&D.VISIBLE){let t=0;s&&(i.modelOrigin.getVec(l,H),t=a.selectLevel(H,n.getCombinedMedianScaleFactor(l))),r=e&~(D.ACTIVE|D.TRANSFORM_CHANGED),t>=0&&(e&D.HIGHLIGHT?(x(this._highlightRenderInstanceData[t],i,l),r|=D.HIGHLIGHT_ACTIVE):(x(this._defaultRenderInstanceData[t],i,l),r|=D.DEFAULT_ACTIVE)),i.state.set(l,r),i.lodLevel.set(l,t)}else r=e&~(D.ACTIVE|D.TRANSFORM_CHANGED),i.state.set(l,r);if(this._octree){const t=!!(e&D.ACTIVE),s=!!(r&D.ACTIVE);!t&&s?this._octree.addInstance(l):t&&!s?this._octree.removeInstance(l):t&&s&&e&D.TRANSFORM_CHANGED&&(this._octree.removeInstance(l),this._octree.addInstance(l))}l=(l+1)%o}this._instanceIndex=l,this._defaultRenderInstanceData.forEach((e=>{e.endUpdate()})),this._highlightRenderInstanceData.forEach((e=>{e.endUpdate()}))}_renderComponents(e,t){this.levels.forEach(((s,a)=>{s.components.forEach((s=>{this._renderComponent(e,t[a],s,a)}))}))}_renderComponent(t,s,a,n){const i=t.bindParameters;if(0===s.size||!a.material.requiresSlot(i.slot))return;const{rctx:r,pass:o}=t,l=a.glMaterials.load(r,o);if(e(l))return;const h=l.beginSlot(i),d=r.bindTechnique(h,a.material.parameters,i);r.bindVAO(a.vao),h.ensureAttributeLocations(a.vao),h.bindDraw(q,i),c.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL&&t.pass===f.MATERIAL&&(d.setUniform4fv("externalColor",N[Math.min(n,N.length-1)]),d.setUniform1i("colorMixMode",A.replace));const u=r.capabilities.instancing,m=s.capacity,p=s.headIndex,I=s.tailIndex,D=s.firstIndex,C=this._glInstanceBufferLayout,R=(e,t)=>{L(r,_,s.buffer,C,e),u.drawArraysInstanced(h.primitiveType,0,a.vertexCount,t-e),S(r,_,s.buffer,C)};a.material.parameters.transparent&&null!=D?p>I?(g(D>=I&&D<=p,"invalid firstIndex"),R(D,p),R(I,D)):p<I&&(D<=p?(g(D>=0&&D<=p,"invalid firstIndex"),R(D,p),R(I,m),R(0,D)):(g(D>=I&&D<=m,"invalid firstIndex"),R(D,m),R(0,p),R(I,D))):p>I?R(I,p):p<I&&(R(0,p),R(I,m)),r.bindVAO(null)}}function x(e,t,s){const a=e.allocateHead();j(t,s,e.view,a)}function j(e,t,s,a){b(e.modelOrigin,t,s.modelOriginHi,s.modelOriginLo,a),s.model.copyFrom(a,e.model,t),s.modelNormal.copyFrom(a,e.modelNormal,t),e.color&&s.color&&s.color.copyFrom(a,e.color,t),e.featureAttribute&&s.featureAttribute&&s.featureAttribute.copyFrom(a,e.featureAttribute,t)}const H=o(),V=l(),P=a(),F=o(),w=o(),N=[[1,0,1,1],[0,0,1,1],[0,1,0,1],[1,1,0,1],[1,0,0,1]],q=new T;export{M as LodRenderer,U as setLevelSelectorFactory};
