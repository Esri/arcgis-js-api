/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../chunks/mat4f64","../../../../../chunks/vec2f64","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../chunks/vec4f64","../../../support/debugFlags","../../../support/buffer/glUtil","../../core/shaderLibrary/output/OutputHighlight.glsl","../Camera","../DefaultVertexAttributeLocations","../Util","./InstanceData","./InstanceOctree","./LevelSelector","./LodLevel","./RenderInstanceData","../../materials/DefaultMaterial","../../materials/internal/MaterialUtil","../../materials/renderers/utils","../../../../webgl/Util"],(function(e,t,a,n,s,i,r,l,c,o,h,u,d,f,g,p,_,m,y,I,D,v,b,C){"use strict";let E=function(e){const t=e.baseBoundingSphere.radius,a=e.levels.map((e=>e.minScreenSpaceRadius));return new m.LevelSelector(t,a)};function R(e){E=e}let S=function(){function e(e,t,a,n){this.type=6,this.isGround=!1,this._inverseViewport=i.create(),this._levels=[],this._defaultRenderInstanceData=[],this._highlightRenderInstanceData=[],this._instanceIndex=0,this._slicePlane=!1,this._enableLevelSelection=!0,this._lastCamera=new d,this._updateCyclesWithStaticCamera=-1,this._needFullCycle=!1,this.canRender=!0,this._symbol=e,this._optionalFields=t,this._metadata=a,this._instanceBufferLayout=D.getInstanceBufferLayout({instancedDoublePrecision:!0,instanced:t}),this._glInstanceBufferLayout=h.glLayout(this._instanceBufferLayout,1),this._instanceData=new p.InstanceData(this._optionalFields,n),this._instanceData.on("instance-added",(()=>this.requestUpdateCycle())),this._instanceData.on("instance-removed",(()=>this.requestUpdateCycle())),this._instanceData.on("instance-transform-changed",(e=>{this.requestUpdateCycle(),this._metadata.notifyGraphicGeometryChanged(e.index)})),this._instanceData.on("instance-visibility-changed",(e=>{this.requestUpdateCycle(!0),this._metadata.notifyGraphicVisibilityChanged(e.index)})),this._instanceData.on("instance-highlight-changed",(()=>this.requestUpdateCycle(!0))),this._enableLevelSelection=this._symbol.levels.length>1}var c=e.prototype;return c.initializeRenderContext=function(){var e=t._asyncToGenerator((function*(e,t){this._context=e;const a=e.renderContext.rctx,s=yield Promise.allSettled(this._symbol.levels.map((n=>(this._defaultRenderInstanceData.push(new I.RenderInstanceData(a,this._instanceBufferLayout)),this._highlightRenderInstanceData.push(new I.RenderInstanceData(a,this._instanceBufferLayout)),y.LodLevel.create(e,n,t))))),i=s.map((e=>"fulfilled"===e.status?e.value:null)).filter((e=>e));if(n.isAborted(t)||i.length!==s.length){i.forEach((e=>e.destroy())),n.throwIfAborted(t);for(const e of s)if("rejected"===e.status)throw e.reason}this._levels=i,this._levelSelector=E(this)}));function a(t,a){return e.apply(this,arguments)}return a}(),c.uninitializeRenderContext=function(){this.invalidateOctree(),this._levels.forEach((e=>e.destroy())),this._defaultRenderInstanceData.forEach((e=>e.destroy())),this._highlightRenderInstanceData.forEach((e=>e.destroy()))},c.prepareRender=function(e,t){if(o.LOD_INSTANCE_RENDERER_DISABLE_UPDATES)return;if(this._enableLevelSelection){const e=t.equals(this._lastCamera);this._lastCamera.copyFrom(t),e||this.requestUpdateCycle()}const a=this._needFullCycle?this._instanceData.size:2e3;this._needFullCycle=!1,this.updateInstances(t,a),this.needsUpdates&&this._context.requestRender()},c.render=function(e){var t,a;const n=3===e.slot?2:5===e.slot?4:null;if(!n||!this.baseMaterial.isVisible()||!this.baseMaterial.isVisibleInPass(e.pass))return!1;const i=e.camera;this._inverseViewport[0]=1/i.fullViewport[2],this._inverseViewport[1]=1/i.fullViewport[3];const r={slot:n,origin:[0,0,0],camera:i,inverseViewport:this._inverseViewport,shadowMap:e.shadowMap,shadowMappingEnabled:e.shadowMap.enabled,ssaoHelper:e.ssaoHelper,ssaoEnabled:e.ssaoHelper.enabled,screenToWorldRatio:null,screenToPCSRatio:null,slicePlane:e.sliceHelper&&e.sliceHelper.plane,hudVisibilityTexture:e.offscreenRenderingHelper?e.offscreenRenderingHelper.hudVisibilityTexture:null,highlightDepthTexture:null!=(t=null==(a=e.offscreenRenderingHelper)?void 0:a.depthTexture)?t:null,hasOccludees:!1,linearDepthTexture:null,lastFrameColorTexture:null,reprojectionMatrix:s.IDENTITY,ssrEnabled:!1,lighting:e.scenelightingData,transparencyPassType:e.transparencyPassType,terrainLinearDepthTexture:e.multipassTerrainParams.terrainLinearDepthTexture,geometryLinearDepthTexture:e.multipassGeometryParams.geometryLinearDepthTexture,multipassTerrainEnabled:e.multipassTerrainParams.multipassTerrainEnabled,cullAboveGround:e.multipassTerrainParams.cullAboveGround,multipassGeometryEnabled:e.multipassGeometryParams.multipassGeometryEnabled,highlightColorTexture:null};e.rctx.bindVAO();const l=5!==e.pass&&7!==e.pass,c=6!==e.pass;return l&&this._renderComponents(e,n,r,this._defaultRenderInstanceData),c&&this._renderComponents(e,n,r,this._highlightRenderInstanceData),l||c},c.intersect=function(e,t,a,n){if(!this.baseMaterial.isVisible())return;const s=l.create();r.subtract(s,n,a);const i=s=>{this._instanceData.getCombinedModelTransform(s,F),e.transform.set(F),r.transformMat4(V,a,e.transform.inverse),r.transformMat4(U,n,e.transform.inverse);const i=this._instanceData.getState(s),l=this._instanceData.getLodLevel(s);g.assert(i&p.StateFlags.ACTIVE,"invalid instance state"),g.assert(l>=0&&l<this._levels.length,"invaid lod level"),this._levels[l].intersect(e,t,V,U,s,this._metadata)};this.baseMaterial.parameters.verticalOffset?this.octree.forEach(i):this.octree.forEachAlongRay(a,s,i)},c.queryDepthRange=function(e){return this.queryDepthRangeOctree(e)},c.notifyShaderTransformationChanged=function(){this.invalidateOctree()},c.requestUpdateCycle=function(e=!1){this._updateCyclesWithStaticCamera=-1,e&&(this._needFullCycle=!0),this.needsUpdates&&this._context.requestRender()},c.invalidateOctree=function(){this._octree&&(this._octree.destroy(),this._octree=null)},c.buildOctree=function(){const e=new _.InstanceOctree(this._instanceData,this.baseBoundingSphere),t=this._instanceData,a=t.view?t.view.state:null;for(let n=0;n<this._instanceData.capacity;++n){a.get(n)&p.StateFlags.ACTIVE&&e.addInstance(n)}return e},c.queryDepthRangeOctree=function(e){const t=e.eye,a=e.viewForward,n=this.octree.findClosest(a,1,e.frustum),s=this.octree.findClosest(a,-1,e.frustum);if(null!=n&&null!=s){this._instanceData.view.boundingSphere.getVec(n,A),r.subtract(A,A,t);const i=r.dot(A,a)-A[3];this._instanceData.view.boundingSphere.getVec(s,A),r.subtract(A,A,t);const l=r.dot(A,a)+A[3];return{near:Math.max(e.near,i),far:Math.min(e.far,l)}}return{near:1/0,far:-1/0}},c.startUpdateCycle=function(){this._updateCyclesWithStaticCamera++,this._defaultRenderInstanceData.forEach((e=>{e.startUpdateCylce()})),this._highlightRenderInstanceData.forEach((e=>{e.startUpdateCylce()})),this.needsUpdates&&this._context.requestRender()},c.updateInstances=function(e,t){const a=this._enableLevelSelection,n=this._levelSelector;n.updateCamera(e),this._defaultRenderInstanceData.forEach((e=>{e.beginUpdate()})),this._highlightRenderInstanceData.forEach((e=>{e.beginUpdate()}));const s=this._instanceData,i=this._instanceData.view,r=s.size,l=s.capacity;let c=this._instanceIndex;t=Math.min(r,t);for(let o=0;o<t;++o){0===c&&this.startUpdateCycle();const e=i.state.get(c);let r=0;if(!(e&p.StateFlags.ALLOCATED)){c=(c+1)%l,t++;continue}const o=i.lodLevel.get(c);if(e&p.StateFlags.DEFAULT_ACTIVE&&this._defaultRenderInstanceData[o].freeTail(),e&p.StateFlags.HIGHLIGHT_ACTIVE&&this._highlightRenderInstanceData[o].freeTail(),e&p.StateFlags.REMOVE)s.freeInstance(c);else if(e&p.StateFlags.VISIBLE){let t=0;a&&(i.modelOrigin.getVec(c,x),t=n.selectLevel(x,s.getCombinedMedianScaleFactor(c))),r=e&~(p.StateFlags.ACTIVE|p.StateFlags.TRANSFORM_CHANGED),t>=0&&(e&p.StateFlags.HIGHLIGHT?(T(this._highlightRenderInstanceData[t],i,c),r|=p.StateFlags.HIGHLIGHT_ACTIVE):(T(this._defaultRenderInstanceData[t],i,c),r|=p.StateFlags.DEFAULT_ACTIVE)),i.state.set(c,r),i.lodLevel.set(c,t)}else r=e&~(p.StateFlags.ACTIVE|p.StateFlags.TRANSFORM_CHANGED),i.state.set(c,r);if(this._octree){const t=!!(e&p.StateFlags.ACTIVE),a=!!(r&p.StateFlags.ACTIVE);!t&&a?this._octree.addInstance(c):t&&!a?this._octree.removeInstance(c):t&&a&&e&p.StateFlags.TRANSFORM_CHANGED&&(this._octree.removeInstance(c),this._octree.addInstance(c))}c=(c+1)%l}this._instanceIndex=c,this._defaultRenderInstanceData.forEach((e=>{e.endUpdate()})),this._highlightRenderInstanceData.forEach((e=>{e.endUpdate()}))},c._renderComponents=function(e,t,a,n){this.levels.forEach(((s,i)=>{s.components.forEach((s=>{this._renderComponent(e,t,a,n[i],s,i)}))}))},c._renderComponent=function(e,t,n,s,i,r){if(0===s.size||!i.material.requiresSlot(t))return;const{rctx:l,pass:c}=e,h=i.glMaterials.load(l,c);if(a.isNone(h))return;const d=l.capabilities.instancing,p=h.beginSlot(n),_=p.program;p.bindPipelineState(l,t),l.useProgram(_),h.bind(n,p),l.bindVAO(i.vao),p.ensureAttributeLocations(i.vao),e.isHighlightPass&&u.bindOutputHighlight(_,n),p.bindDraw(n),o.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL&&0===e.pass&&(_.setUniform4fv("externalColor",w[Math.min(r,w.length-1)]),_.setUniform1i("colorMixMode",v.colorMixModes.replace));const m=s.capacity,y=s.headIndex,I=s.tailIndex,D=s.firstIndex,b=this._glInstanceBufferLayout,E=(e,t)=>{C.bindVertexBufferLayout(l,f.Default3D,s.buffer,b,e),d.drawArraysInstanced(p.primitiveType,0,i.vertexCount,t-e),C.unbindVertexBufferLayout(l,f.Default3D,s.buffer,b)};i.material.parameters.transparent&&null!=D?y>I?(g.assert(D>=I&&D<=y,"invalid firstIndex"),E(D,y),E(I,D)):y<I&&(D<=y?(g.assert(D>=0&&D<=y,"invalid firstIndex"),E(D,y),E(I,m),E(0,D)):(g.assert(D>=I&&D<=m,"invalid firstIndex"),E(D,m),E(0,y),E(I,D))):y>I?E(I,y):y<I&&(E(0,y),E(I,m)),l.bindVAO(null)},t._createClass(e,[{key:"levels",get:function(){return this._levels}},{key:"baseBoundingBox",get:function(){return this._levels[this._levels.length-1].boundingBox}},{key:"baseBoundingSphere",get:function(){return this._levels[this._levels.length-1].boundingSphere}},{key:"baseMaterial",get:function(){return this._levels[this._levels.length-1].components[0].material}},{key:"slicePlaneEnabled",get:function(){return this._slicePlane},set:function(e){this._slicePlane=e}},{key:"layerUid",get:function(){return this._metadata.layerUid}},{key:"instanceData",get:function(){return this._instanceData}},{key:"memoryUsage",get:function(){const e={cpu:0,gpu:0};return this._defaultRenderInstanceData.forEach((t=>{const a=t.memoryUsage;e.cpu+=a.cpu,e.gpu+=a.gpu})),this._highlightRenderInstanceData.forEach((t=>{const a=t.memoryUsage;e.cpu+=a.cpu,e.gpu+=a.gpu})),e}},{key:"renderStats",get:function(){const e=this._instanceData.size,t=[];return this._levels.forEach(((e,a)=>{const n=this._defaultRenderInstanceData[a],s=this._highlightRenderInstanceData[a],i=n.size+s.size,r=e.triangleCount;t.push({renderedInstances:i,renderedTriangles:i*r,trianglesPerInstance:r})})),{totalInstances:e,renderedInstances:t.reduce(((e,t)=>e+t.renderedInstances),0),renderedTriangles:t.reduce(((e,t)=>e+t.renderedTriangles),0),levels:t}}},{key:"slots",get:function(){return[3,5]}},{key:"needsHighlight",get:function(){return this._highlightRenderInstanceData.reduce(((e,t)=>e+t.size),0)>0}},{key:"needsUpdates",get:function(){return this._instanceData.size>0&&this._updateCyclesWithStaticCamera<1}},{key:"octree",get:function(){return this._octree||(this._octree=this.buildOctree()),this._octree}}]),e}();function T(e,t,a){const n=e.allocateHead();L(t,a,e.view,n)}function L(e,t,a,n){b.encodeDoubleVec3(e.modelOrigin,t,a.modelOriginHi,a.modelOriginLo,n),a.model.copyFrom(n,e.model,t),a.modelNormal.copyFrom(n,e.modelNormal,t),e.color&&a.color&&a.color.copyFrom(n,e.color,t),e.featureAttribute&&a.featureAttribute&&a.featureAttribute.copyFrom(n,e.featureAttribute,t)}const x=l.create(),A=c.create(),F=s.create(),V=l.create(),U=l.create(),w=[[1,0,1,1],[0,0,1,1],[0,1,0,1],[1,1,0,1],[1,0,0,1]];e.LodRenderer=S,e.setLevelSelectorFactory=R,Object.defineProperty(e,"__esModule",{value:!0})}));
