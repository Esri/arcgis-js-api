/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/TextureOnly.glsl","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","./DefaultVertexAttributeLocations","./Program","../../../webgl/enums","../../../webgl/renderState"],(function(e,r,t,a,i,n,l,o,u,s){"use strict";let d=function(e){function r(){return e.apply(this,arguments)||this}t._inheritsLoose(r,e);var a=r.prototype;return a.initializeProgram=function(e){return new o.Program(e.rctx,r.shader.get().build(),l.Default3D)},a.initializePipeline=function(){return this.configuration.hasAlpha?s.makePipelineState({blending:s.separateBlendingParams(u.BlendFactor.SRC_ALPHA,u.BlendFactor.ONE,u.BlendFactor.ONE_MINUS_SRC_ALPHA,u.BlendFactor.ONE_MINUS_SRC_ALPHA),colorWrite:s.defaultColorWriteParams}):s.makePipelineState({colorWrite:s.defaultColorWriteParams})},r}(n.ShaderTechnique);d.shader=new i.ReloadableShaderModule(a.TextureOnly,(()=>new Promise(((r,t)=>e(["../core/shaderLibrary/util/TextureOnly.glsl"],r,t))))),r.TextureTechnique=d,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
