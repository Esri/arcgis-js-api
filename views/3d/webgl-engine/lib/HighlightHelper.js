/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../chunks/vec4","../../../../chunks/vec4f32","../../../../chunks/vec4f64","../../support/debugFlags","./DefaultVertexAttributeLocations","./DefaultVertexBufferLayouts","./glUtil3D","../../../../chunks/HighlightComposition.glsl","../shaders/HighlightTechnique","../../../webgl/BufferObject","../../../webgl/enums","../../../webgl/FramebufferObject","../../../webgl/Util","../../../webgl/VertexArrayObject"],(function(e,i,t,r,o,a,l,s,h,p,u,n,c,g,d,m){"use strict";const T=32;return function(){function b(e,i){this._techniqueRep=e,this._rctx=i,this.viewportToRestore=o.create(),this.defaultOptions={color:r.fromValues(1,0,1,1),haloColor:r.fromValues(1,0,1,1),haloOpacity:1,fillOpacity:.2,haloOpacityOccluded:.25,fillOpacityOccluded:.05,shadowColor:r.fromValues(1,0,1,1),shadowOpacity:.15,occludedShadowOpacity:.075},this._grid={coverageMipmap:null,vao:null,verticalCellCount:0,horizontalCellCount:0,cellPixelSize:0,mipmapLevels:0,viewportWidth:0,viewportHeight:0}}var f=b.prototype;return f._assertResources=function(){if(this.quadVAO)return;this.quadVAO=h.createQuadVAO(this._rctx);const e={colorTarget:c.TargetType.TEXTURE,depthStencilTarget:c.DepthStencilTargetType.NONE,width:0,height:0},i={target:c.TextureType.TEXTURE_2D,pixelFormat:c.PixelFormat.RGBA,dataType:c.PixelType.UNSIGNED_BYTE,samplingMode:c.TextureSamplingMode.LINEAR,wrapMode:c.TextureWrapMode.CLAMP_TO_EDGE,width:0,height:0};this.blur0Fbo=new g.FramebufferObject(this._rctx,e,i),this.blur1Fbo=new g.FramebufferObject(this._rctx,e,i);const t=new u.HighlightCompositionTechniqueConfiguration;t.highlightStage=p.HighlightCompositionPass.Blur,t.gridOptimization=!1,this.blurTechnique=this._techniqueRep.acquire(u.HighlightCompositionTechnique,t),t.highlightStage=p.HighlightCompositionPass.Blur,t.gridOptimization=!0,this.blurGridTechnique=this._techniqueRep.acquire(u.HighlightCompositionTechnique,t),t.highlightStage=p.HighlightCompositionPass.Apply,t.gridOptimization=!1,this.applyTechnique=this._techniqueRep.acquire(u.HighlightCompositionTechnique,t),t.highlightStage=p.HighlightCompositionPass.Apply,t.gridOptimization=!0,this.applyGridTechnique=this._techniqueRep.acquire(u.HighlightCompositionTechnique,t),t.highlightStage=p.HighlightCompositionPass.Downsample,t.gridOptimization=!1,this.downsampleTechnique=this._techniqueRep.acquire(u.HighlightCompositionTechnique,t)},f.dispose=function(){if(this._grid.coverageMipmap)for(let e=1;e<this._grid.coverageMipmap.length;e++)this._grid.coverageMipmap[e].dispose();this._grid.vao&&this._grid.vao.dispose(!0),this.quadVAO&&(this.quadVAO.dispose(!0),this.quadVAO=null),this.blur0Fbo=i.disposeMaybe(this.blur0Fbo),this.blur1Fbo=i.disposeMaybe(this.blur1Fbo)},f.setDefaultOptions=function(e){this.defaultOptions=e},f.render=function(e,i,r){const o=e.pixelRatio,l=a.HIGHLIGHTS_GRID_OPTIMIZATION_ENABLED,s=this._rctx;this._assertResources(),t.copy(this.viewportToRestore,e.fullViewport);const h=e.fullWidth,p=e.fullHeight,u=Math.ceil(h/o),n=Math.ceil(p/o);this.blur0Fbo.resize(u,n),this.blur1Fbo.resize(u,n),s.bindVAO(this.quadVAO);let g=null;const m=l?this.blurGridTechnique:this.blurTechnique,b=s.useTechnique(m);l?(this._gridUpdateResources(i,T),this._gridComputeMipmap(),g=this._grid.vao,b.bindTexture(this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture,"coverageTex")):g=this.quadVAO,s.bindVAO(g),s.bindFramebuffer(this.blur0Fbo),s.setViewport(0,0,u,n),s.setClearColor(0,0,0,0),s.clear(c.ClearBufferBit.COLOR_BUFFER_BIT),b.bindTexture(i.colorTexture,"tex"),b.setUniform2f("blurSize",1/u,0),s.drawArrays(m.primitiveType,0,d.vertexCount(g,"geometry")),s.bindFramebuffer(this.blur1Fbo),s.clear(c.ClearBufferBit.COLOR_BUFFER_BIT),b.bindTexture(this.blur0Fbo.colorTexture,"tex"),b.setUniform2f("blurSize",0,1/n),s.drawArrays(m.primitiveType,0,d.vertexCount(g,"geometry")),s.bindFramebuffer(r),s.setViewport(this.viewportToRestore[0],this.viewportToRestore[1],this.viewportToRestore[2],this.viewportToRestore[3]);const f=l?this.applyGridTechnique:this.applyTechnique,v=s.useTechnique(f);if(v.bindTexture(this.blur1Fbo.colorTexture,"tex"),v.bindTexture(i.colorTexture,"origin"),l){const e=this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture;v.bindTexture(e,"coverageTex")}f.bindApplyPass(this.defaultOptions),s.drawArrays(f.primitiveType,0,d.vertexCount(g,"geometry")),s.bindVAO(null)},f._gridUpdateResources=function(e,i){const t=this._rctx,r=this._grid;let o=!1;if(null===r.coverageMipmap&&(r.coverageMipmap=[e],o=!0),r.viewportWidth===e.width&&r.viewportHeight===e.height||(o=!0,r.viewportWidth=e.width,r.viewportHeight=e.height),r.coverageMipmap[0]=e,r.cellPixelSize!==i&&(r.cellPixelSize=i,o=!0),o){for(let e=1;e<r.coverageMipmap.length;e++)r.coverageMipmap[e].dispose();r.mipmapLevels=Math.ceil(Math.log(r.cellPixelSize)*Math.LOG2E),r.coverageMipmap.length=r.mipmapLevels+1;for(let e=0;e<r.mipmapLevels;e++){const i=r.coverageMipmap[e],o={target:c.TextureType.TEXTURE_2D,pixelFormat:c.PixelFormat.RGB,dataType:c.PixelType.UNSIGNED_SHORT_5_6_5,samplingMode:c.TextureSamplingMode.LINEAR,wrapMode:c.TextureWrapMode.CLAMP_TO_EDGE,width:Math.ceil(i.width/2),height:Math.ceil(i.height/2)},a={colorTarget:c.TargetType.TEXTURE,depthStencilTarget:c.DepthStencilTargetType.NONE,width:Math.ceil(i.width/2),height:Math.ceil(i.height/2)};r.coverageMipmap[e+1]=new g.FramebufferObject(t,a,o)}}const a=Math.ceil(e.height/r.cellPixelSize),h=Math.ceil(e.width/r.cellPixelSize);if(!r.vao||r.verticalCellCount!==a||r.horizontalCellCount!==h){r.verticalCellCount=a,r.horizontalCellCount=h;const e=a+1,i=h+1,o=1/a,p=1/h,u=6,g=4,d=new Float32Array(u*g*e*i);let T=0;for(let t=0;t<e;t++)for(let e=0;e<i;e++)d[T+0]=(e-.5)*p*2-1,d[T+1]=(t-.5)*o*2-1,d[T+2]=e*p,d[T+3]=t*o,d[T+4]=(e+.5)*p*2-1,d[T+5]=(t-.5)*o*2-1,d[T+6]=e*p,d[T+7]=t*o,d[T+8]=(e-.5)*p*2-1,d[T+9]=(t+.5)*o*2-1,d[T+10]=e*p,d[T+11]=t*o,d[T+12]=(e-.5)*p*2-1,d[T+13]=(t+.5)*o*2-1,d[T+14]=e*p,d[T+15]=t*o,d[T+16]=(e+.5)*p*2-1,d[T+17]=(t-.5)*o*2-1,d[T+18]=e*p,d[T+19]=t*o,d[T+20]=(e+.5)*p*2-1,d[T+21]=(t+.5)*o*2-1,d[T+22]=e*p,d[T+23]=t*o,T+=u*g;r.vao&&r.vao.dispose(!0),r.vao=new m.VertexArrayObject(t,l.Default3D,{geometry:s.Pos2Tex},{geometry:n.BufferObject.createVertex(t,c.Usage.STATIC_DRAW,d)})}},f._gridComputeMipmap=function(){const e=this._rctx,i=this._grid,t=e.useTechnique(this.downsampleTechnique);e.bindVAO(this.quadVAO);for(let r=0;r<i.mipmapLevels;r++){e.bindFramebuffer(i.coverageMipmap[r+1]),t.bindTexture(i.coverageMipmap[r].colorTexture,"tex");const o=i.coverageMipmap[r+1].width,a=i.coverageMipmap[r+1].height;t.setUniform2f("invFramebufferDim",1/o,1/a),e.setViewport(0,0,o,a),e.drawArrays(c.PrimitiveType.TRIANGLE_STRIP,0,d.vertexCount(this.quadVAO,"geometry"))}},e._createClass(b,[{key:"profilingCallback",get:function(){return a.HIGHLIGHTS_PROFILE_TO_CONSOLE?e=>console.log(e):null}},{key:"gpuMemoryUsage",get:function(){let e=(i.isSome(this.blur0Fbo)?this.blur0Fbo.gpuMemoryUsage:0)+(i.isSome(this.blur1Fbo)?this.blur1Fbo.gpuMemoryUsage:0);if(this._grid.coverageMipmap)for(const i of this._grid.coverageMipmap)e+=i.gpuMemoryUsage;return e}},{key:"test",get:function(){return{coverage:this._grid.coverageMipmap,blur:[this.blur0Fbo,this.blur1Fbo]}}}]),b}()}));
