/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/vec4f64","../../../../chunks/vec4","./DefaultVertexAttributeLocations","./Util","../../../webgl/BufferObject","../../../webgl/Util","../../../webgl/VertexArrayObject","./DefaultVertexBufferLayouts","./glUtil3D","../../support/debugFlags","../../../webgl/FramebufferObject","../../../../chunks/vec4f32","../shaders/HighlightTechnique"],(function(e,i,t,r,o,l,a,h,s,n,u,p,c,g){"use strict";return function(){function d(e,t){this._grid={coverageMipmap:null,vao:null,verticalCellCount:0,horizontalCellCount:0,cellPixelSize:0,mipmapLevels:0,viewportWidth:0,viewportHeight:0},this.quadVAO=null,this.blur0Fbo=null,this.blur1Fbo=null,this._rctx=t,this.viewportToRestore=i.create(),this.defaultOptions={color:c.fromValues(1,0,1,1),haloColor:c.fromValues(1,0,1,1),haloOpacity:1,fillOpacity:.2,haloOpacityOccluded:.25,fillOpacityOccluded:.05};const r=new g.HighlightCompositionTechniqueConfiguration,o=(i,t)=>e.acquireAndReleaseExisting(g.HighlightCompositionTechnique,i,t);r.highlightStage=0,r.gridOptimization=!1,this.blurTechnique=o(r,this.blurTechnique),r.highlightStage=0,r.gridOptimization=!0,this.blurGridTechnique=o(r,this.blurGridTechnique),r.highlightStage=1,r.gridOptimization=!1,this.applyTechnique=o(r,this.applyTechnique),r.highlightStage=1,r.gridOptimization=!0,this.applyGridTechnique=o(r,this.applyGridTechnique),r.highlightStage=2,r.gridOptimization=!1,this.downsampleTechnique=o(r,this.downsampleTechnique)}var b=d.prototype;return b.setDefaultOptions=function(e){this.defaultOptions=e},b.render=function(e,i,r){const l=e.pixelRatio,h=!u.HIGHLIGHTS_GRID_OPTIMIZATION_DISABLED,s=this._rctx;o.assert(this.enabled),t.copy(this.viewportToRestore,e.fullViewport);const n=e.fullWidth,p=e.fullHeight,c=Math.ceil(n/l),g=Math.ceil(p/l);this.blur0Fbo.resize(c,g),this.blur1Fbo.resize(c,g),s.bindVAO(this.quadVAO);let d=null,b=null;h&&(this._gridUpdateResources(i,32),this._gridComputeMipmap()),h?(d=this._grid.vao,b=this.blurGridTechnique,s.bindTexture(this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture,1),b.program.setUniform1i("coverageTex",1)):(d=this.quadVAO,b=this.blurTechnique),b.bindPipelineState(s),s.bindProgram(b.program),s.bindVAO(d),s.bindFramebuffer(this.blur0Fbo),s.setViewport(0,0,c,g),s.setClearColor(0,0,0,0),s.clear(16384),b.program.setUniform1i("tex",0),s.bindTexture(i.colorTexture,0),b.program.setUniform2f("blurSize",1/c,0),s.drawArrays(b.primitiveType,0,a.vertexCount(d,"geometry")),s.bindFramebuffer(this.blur1Fbo),s.clear(16384),s.bindTexture(this.blur0Fbo.colorTexture,0),b.program.setUniform2f("blurSize",0,1/g),s.drawArrays(b.primitiveType,0,a.vertexCount(d,"geometry"));const m=h?this.applyGridTechnique:this.applyTechnique;if(s.bindFramebuffer(r),m.bindPipelineState(s),s.setViewport(this.viewportToRestore[0],this.viewportToRestore[1],this.viewportToRestore[2],this.viewportToRestore[3]),s.bindProgram(m.program),s.bindTexture(this.blur1Fbo.colorTexture,0),s.bindTexture(i.colorTexture,1),h){const e=this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture;s.bindTexture(e,2)}m.bindApplyPass(this.defaultOptions),s.drawArrays(m.primitiveType,0,a.vertexCount(d,"geometry")),s.bindVAO(null)},b.enable=function(){if(this.enabled)return;this.quadVAO=n.createQuadVAO(this._rctx);const e={colorTarget:0,depthStencilTarget:0,width:0,height:0},i={target:3553,pixelFormat:6408,dataType:5121,samplingMode:9729,wrapMode:33071,width:0,height:0};this.blur0Fbo=new p(this._rctx,e,i),this.blur1Fbo=new p(this._rctx,e,i)},b.disable=function(){this.enabled&&(this.quadVAO.dispose(!0),this.blur1Fbo.dispose(),this.blur0Fbo.dispose(),this.quadVAO=null,this.blur0Fbo=null,this.blur1Fbo=null)},b._gridUpdateResources=function(e,i){const t=this._rctx,o=this._grid;let a=!1;if(null===o.coverageMipmap&&(o.coverageMipmap=[e],a=!0),o.viewportWidth===e.width&&o.viewportHeight===e.height||(a=!0,o.viewportWidth=e.width,o.viewportHeight=e.height),o.coverageMipmap[0]=e,o.cellPixelSize!==i&&(o.cellPixelSize=i,a=!0),a){for(let e=1;e<o.coverageMipmap.length;e++)o.coverageMipmap[e].dispose();o.mipmapLevels=Math.ceil(Math.log(o.cellPixelSize)*Math.LOG2E),o.coverageMipmap.length=o.mipmapLevels+1;for(let e=0;e<o.mipmapLevels;e++){const i=o.coverageMipmap[e],r={target:3553,pixelFormat:6407,dataType:33635,samplingMode:9729,wrapMode:33071,width:Math.ceil(i.width/2),height:Math.ceil(i.height/2)},l={colorTarget:0,depthStencilTarget:0,width:Math.ceil(i.width/2),height:Math.ceil(i.height/2)},a=new p(t,l,r);o.coverageMipmap[e+1]=a}}const n=Math.ceil(e.height/o.cellPixelSize),u=Math.ceil(e.width/o.cellPixelSize);if(!o.vao||o.verticalCellCount!==n||o.horizontalCellCount!==u){o.verticalCellCount=n,o.horizontalCellCount=u;const e=n+1,i=u+1,a=1/n,p=1/u,c=6,g=4,d=new Float32Array(c*g*e*i);let b=0;for(let t=0;t<e;t++)for(let e=0;e<i;e++)d[b+0]=(e-.5)*p*2-1,d[b+1]=(t-.5)*a*2-1,d[b+2]=e*p,d[b+3]=t*a,d[b+4]=(e+.5)*p*2-1,d[b+5]=(t-.5)*a*2-1,d[b+6]=e*p,d[b+7]=t*a,d[b+8]=(e-.5)*p*2-1,d[b+9]=(t+.5)*a*2-1,d[b+10]=e*p,d[b+11]=t*a,d[b+12]=(e-.5)*p*2-1,d[b+13]=(t+.5)*a*2-1,d[b+14]=e*p,d[b+15]=t*a,d[b+16]=(e+.5)*p*2-1,d[b+17]=(t-.5)*a*2-1,d[b+18]=e*p,d[b+19]=t*a,d[b+20]=(e+.5)*p*2-1,d[b+21]=(t+.5)*a*2-1,d[b+22]=e*p,d[b+23]=t*a,b+=c*g;o.vao&&o.vao.dispose(!0),o.vao=new h(t,r.Default3D,{geometry:s.Pos2Tex},{geometry:l.createVertex(t,35044,d)})}},b._gridComputeMipmap=function(){const e=this._rctx,i=this._grid,t=this.downsampleTechnique.program;this.downsampleTechnique.bindPipelineState(e),e.bindVAO(this.quadVAO);for(let r=0;r<i.mipmapLevels;r++){e.bindFramebuffer(i.coverageMipmap[r+1]),e.bindTexture(i.coverageMipmap[r].colorTexture,0);const o=i.coverageMipmap[r+1].width,l=i.coverageMipmap[r+1].height;e.bindProgram(t),t.setUniform1i("tex",0),t.setUniform2f("invFramebufferDim",1/o,1/l),e.setViewport(0,0,o,l),e.drawArrays(5,0,a.vertexCount(this.quadVAO,"geometry"))}},b.getGpuMemoryUsage=function(){let e=a.getGpuMemoryUsage(this.blur0Fbo)+a.getGpuMemoryUsage(this.blur1Fbo);if(this._grid&&this._grid.coverageMipmap)for(const i of this._grid.coverageMipmap)e+=a.getGpuMemoryUsage(i);return e},e._createClass(d,[{key:"enabled",set:function(e){e?this.enable():this.disable()},get:function(){return null!==this.blur0Fbo}},{key:"profilingCallback",get:function(){return u.HIGHLIGHTS_PROFILE_TO_CONSOLE?e=>console.log(e):null}},{key:"test",get:function(){return{coverage:this._grid.coverageMipmap,blur:[this.blur0Fbo,this.blur1Fbo]}}}]),d}()}));
