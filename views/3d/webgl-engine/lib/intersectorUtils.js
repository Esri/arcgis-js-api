/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f64","../../../../chunks/boundedPlane","../../../../geometry/support/ray","./Object3D"],(function(t,e,r,i,n,s,a,o,c,h,d){"use strict";function u(t){return(e,r,i)=>(n.lerp(p,e,r,i),!c.extrusionContainsPoint(t,p))}let l=function(){function t(){this.min=new y,this.max=new y,this.hud=new y,this.ground=new y}return t.prototype.init=function(t){this.min.init(t),this.max.init(t),this.hud.init(t),this.ground.init(t),this.all=[]},t}(),y=function(){function t(t){this.normal=s.create(),this.transformation=i.create(),this._ray=h.create(),this.init(t)}var o=t.prototype;return o.getIntersectionPoint=function(t){return!!this.hasIntersectionPoint&&(n.scale(m,this.ray.direction,this.dist),n.add(t,this.ray.origin,m),!0)},o.getTransformedNormal=function(t){return n.copy(f,this.normal),f[3]=0,a.transformMat4(f,f,this.transformation),n.copy(t,f),n.normalize(t,t),t},o.init=function(t){this.dist=void 0,this.target=void 0,this.name=void 0,this.drapedLayerOrder=void 0,this.drapedLayerGraphicOrder=void 0,this.center=null,this.geometryId=null,this.triangleNr=null,this.intersector="Stage",t?h.copy(t,this._ray):this._ray=h.create()},o.set=function(t,e,i,a,o,c,h,u,l,y){t instanceof d.Object3D&&(t={type:"stage",obj:t}),this.dist=i,n.copy(this.normal,a),r.copy(this.transformation,o),this.target=t,this.name=e,this.drapedLayerOrder=c,this.center=h?s.clone(h):null,this.geometryId=u,this.triangleNr=l,this.drapedLayerGraphicOrder=y},o.copyFrom=function(t){h.copy(t.ray,this._ray),this.dist=t.dist,this.target=t.target,this.name=t.name,this.drapedLayerOrder=t.drapedLayerOrder,this.center=t.center?s.clone(t.center):null,this.geometryId=t.geometryId,this.triangleNr=t.triangleNr,this.intersector=t.intersector,this.drapedLayerGraphicOrder=t.drapedLayerGraphicOrder,n.copy(this.normal,t.normal),r.copy(this.transformation,t.transformation)},e._createClass(t,[{key:"ray",get:function(){return this._ray}},{key:"hasIntersectionPoint",get:function(){return null!=this.dist}},{key:"distanceInRenderSpace",get:function(){if(null!=this.dist)return n.scale(m,this.ray.direction,this.dist),n.length(m)}}]),t}();const p=s.create(),m=s.create(),f=o.create();t.IntersectorResult=y,t.IntersectorResults=l,t.sliceFilterPredicate=u,Object.defineProperty(t,"__esModule",{value:!0})}));
