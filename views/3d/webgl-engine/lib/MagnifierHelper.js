/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import s from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import t from"../../../../core/Handles.js";import{clamp as i}from"../../../../core/mathUtils.js";import{isNone as a,isSome as o,applySome as n}from"../../../../core/maybe.js";import{createTask as m}from"../../../../core/promiseUtils.js";import{watch as u}from"../../../../core/reactiveUtils.js";import{createScreenPointArray as l,createRenderScreenPointArray as p,screenPointObjectToArray as h}from"../../../../core/screenUtils.js";import{isSVG as c}from"../../../../core/urlUtils.js";import{property as _}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as d}from"../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as g}from"../../../../support/requestImageUtils.js";import{Pos2 as f}from"./DefaultVertexBufferLayouts.js";import{createQuadVAO as T}from"./glUtil3D.js";import{Program as v}from"./Program.js";import{VertexAttribute as y}from"./VertexAttribute.js";import{MagnifierPassParameters as k,build as R}from"../shaders/Magnifier.glsl.js";import{loadMagnifierResources as L}from"../../../magnifier/resources.js";import{PrimitiveType as S,BlendFactor as x,TextureType as E,PixelFormat as b,PixelType as j,TextureWrapMode as A,TextureSamplingMode as P}from"../../../webgl/enums.js";import{makePipelineState as w,simpleBlendingParams as M,defaultColorWriteParams as U}from"../../../webgl/renderState.js";import{Texture as I}from"../../../webgl/Texture.js";let N=class extends s{constructor(){super(...arguments),this._handles=new t,this._magnifier=null,this._imageSources=null,this._imageLoadTask=null,this._resources=null,this._passParameters=new k,this.events=new r,this.attributeLocations=new Map([[y.POSITION,0]]),this.tmpScreenPoint=l(),this.tmpRenderPoint=p()}get updating(){return a(this._imageSources)&&o(this._imageLoadTask)&&!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(e){if(e===this._magnifier)return;this._handles.removeAll(),this._magnifier=e;const s=()=>{this._updateResourceLoading(),this.events.emit("request-render")};o(this._magnifier)&&this._handles.add(u((()=>n(this._magnifier,(e=>e.version))),s)),s()}get enabled(){return o(this._validMagnifier)}get _validMagnifier(){return o(this._magnifier)&&this._magnifier.visible&&o(this._magnifier.position)&&this._magnifier.size>0?this._magnifier:null}get factor(){return o(this._magnifier)&&this._magnifier.factor||1}dispose(){this._magnifier=null,this._handles.destroy(),o(this._imageLoadTask)&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this._disposeResources()}render(e,s){const r=this._validMagnifier;if(a(r))return;const t=s.camera.pixelRatio,o=Math.ceil(t*r.size);if(this._updateResources(e,o),a(this._resources))return;this._passParameters.maskEnabled=r.maskEnabled,this._passParameters.overlayEnabled=r.overlayEnabled;const n=this._resources.program;e.useProgram(n),n.bindPass(this._passParameters,s);const m=this._resources.textures,u=Math.ceil(1/this.factor*o);m.input.resize(u,u);const l=s.camera.fullWidth,p=s.camera.fullHeight;h(r.position,this.tmpScreenPoint);const c=s.camera.screenToRender(this.tmpScreenPoint,this.tmpRenderPoint),_=.5*u,d=.5*u;c[0]=i(c[0],_,l-_-1),c[1]=i(c[1],d,p-d-1);const g=Math.floor(c[0]-_),f=Math.floor(c[1]-d);n.bindTexture("textureInput",m.input),e.gl.copyTexImage2D(m.input.descriptor.target,0,m.input.descriptor.pixelFormat,g,f,u,u,0);const T=r.offset.x*t,v=r.offset.y*t,y=(c[0]+T)/l*2-1,k=(c[1]-v)/p*2-1,R=o/l*2,L=o/p*2;e.bindVAO(this._resources.vao),n.bindTexture("textureOverlay",m.overlay),n.bindTexture("textureMask",m.mask),n.setUniform4f("drawPosition",y,k,R,L),e.setPipelineState(this._resources.pipelineState),e.drawArrays(S.TRIANGLE_STRIP,0,4)}_updateResourceLoading(){const e=this._validMagnifier;if(a(e))return;const s=e.maskUrl,r=e.overlayUrl;!o(this._imageLoadTask)||this._imageLoadTask.maskUrl===s&&this._imageLoadTask.overlayUrl===r||(this._imageLoadTask.task.abort(),this._imageLoadTask=null,this._imageSources=null),o(this._imageSources)||o(this._imageLoadTask)||(this._imageLoadTask={maskUrl:s,overlayUrl:r,task:m((async e=>{const t=a(s)||a(r)?L(e):null,i=o(s)?g(s,{signal:e}):t.then((e=>e.mask)),n=o(r)?g(r,{signal:e}):t.then((e=>e.overlay));this._imageSources={mask:await i,overlay:await n},this._disposeResources(),this.events.emit("request-render")}))},this._imageLoadTask.task.promise.then((()=>this.notifyChange("updating")),(()=>this.notifyChange("updating"))))}_updateResources(e,s){if(!this.enabled)return void this._disposeResources();if(o(this._resources)){if(this._resources.textures.size!==s){const r=this._createTextureResources(e,s);if(a(r))return void this._disposeResources();this._disposeTextureResources(this._resources.textures),this._resources.textures=r}return}const r=this._createTextureResources(e,s);a(r)||(this._resources={textures:r,program:this._createProgram(e),vao:T(e,f,this.attributeLocations,0,1),pipelineState:w({blending:M(x.ONE,x.ONE_MINUS_SRC_ALPHA),depthTest:null,depthWrite:null,colorWrite:U})})}_disposeResources(){a(this._resources)||(this._disposeTextureResources(this._resources.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}_disposeTextureResources(e){e.mask.dispose(),e.overlay.dispose(),e.input.dispose()}_createTextureResources(e,s){if(a(this._imageSources))return null;this._imageSources.overlay.width=s,this._imageSources.overlay.height=s,this._imageSources.mask.width=s,this._imageSources.mask.height=s;const r=new I(e,{target:E.TEXTURE_2D,pixelFormat:b.RGBA,internalFormat:b.RGBA,dataType:j.UNSIGNED_BYTE,wrapMode:A.CLAMP_TO_EDGE,samplingMode:P.LINEAR,flipped:!0,preMultiplyAlpha:!c(this._imageSources.overlay.src)||!e.driverTest.svgAlwaysPremultipliesAlpha},this._imageSources.overlay),t=new I(e,{target:E.TEXTURE_2D,pixelFormat:b.ALPHA,internalFormat:b.ALPHA,dataType:j.UNSIGNED_BYTE,wrapMode:A.CLAMP_TO_EDGE,samplingMode:P.LINEAR,flipped:!0},this._imageSources.mask);return{input:new I(e,{target:E.TEXTURE_2D,pixelFormat:b.RGBA,internalFormat:b.RGBA,dataType:j.UNSIGNED_BYTE,wrapMode:A.CLAMP_TO_EDGE,samplingMode:P.LINEAR,flipped:!1}),mask:t,overlay:r,size:s}}_createProgram(e){return new v(e,R(),this.attributeLocations)}};e([_()],N.prototype,"_imageSources",void 0),e([_()],N.prototype,"_imageLoadTask",void 0),e([_({readOnly:!0})],N.prototype,"updating",null),N=e([d("esri/views/3d/webgl-engine/lib/MagnifierHelper")],N);export{N as MagnifierHelper};
