/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{b as t,f as e,n,g as r,a,e as o,s,c as l,m as i}from"../../../../chunks/vec3.js";import{f as c,c as u,a as h}from"../../../../chunks/vec3f32.js";import{c as f}from"../../../../chunks/vec3f64.js";import{create as O,fromPositionAndNormal as A,intersectRay as y}from"../../../../geometry/support/plane.js";import{wrap as I}from"../../../../geometry/support/ray.js";import{PrimitiveType as g}from"./basicInterfaces.js";import{Vec3Compact as M}from"./BufferVectorMath.js";import{Geometry as m}from"./Geometry.js";import{generateDefaultIndexArray as d}from"./geometryDataUtils.js";import{assert as w}from"./Util.js";import{VertexAttribute as N}from"./VertexAttribute.js";const P=M;var U,S,p,x;!function(t){const e=.5,n=[[-e,-e,e],[e,-e,e],[e,e,e],[-e,e,e],[-e,-e,-e],[e,-e,-e],[e,e,-e],[-e,e,-e]],r=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],a=[0,0,1,0,1,1,0,1],o=new Uint16Array([0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5]),s=new Uint16Array(36);for(let c=0;c<6;c++)for(let t=0;t<6;t++)s[6*c+t]=c;const l=new Uint16Array(36);for(let c=0;c<6;c++)l[6*c+0]=0,l[6*c+1]=1,l[6*c+2]=2,l[6*c+3]=2,l[6*c+4]=3,l[6*c+5]=0;function i(t){Array.isArray(t)||(t=[t,t,t]);const e=new Array(24);for(let r=0;r<8;r++)e[3*r]=n[r][0]*t[0],e[3*r+1]=n[r][1]*t[1],e[3*r+2]=n[r][2]*t[2];return new m([[N.POSITION,{size:3,data:e,exclusive:!0}],[N.NORMAL,{size:3,data:r}],[N.UV0,{size:2,data:a}]],[[N.POSITION,o],[N.NORMAL,s],[N.UV0,l]])}t.createGeometry=i}(U||(U={})),function(t){const e=.5,n=[[-e,0,-e],[e,0,-e],[e,0,e],[-e,0,e],[0,-e,0],[0,e,0]],r=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],a=new Uint16Array([5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0]),o=new Uint16Array([0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7]);function s(t){Array.isArray(t)||(t=[t,t,t]);const e=new Array(18);for(let r=0;r<6;r++)e[3*r]=n[r][0]*t[0],e[3*r+1]=n[r][1]*t[1],e[3*r+2]=n[r][2]*t[2];return new m([[N.POSITION,{size:3,data:e,exclusive:!0}],[N.NORMAL,{size:3,data:r}]],[[N.POSITION,a],[N.NORMAL,o]])}t.createGeometry=s}(S||(S={})),function(r){const a=.5,o=0,s=c(-a,o,-a),l=c(a,o,-a),i=c(0,o,a),h=c(0,o+a,0),f=u(),O=u(),A=u(),y=u(),I=u();t(f,s,h),t(O,s,l),e(A,f,O),n(A,A),t(f,l,h),t(O,l,i),e(y,f,O),n(y,y),t(f,i,h),t(O,i,s),e(I,f,O),n(I,I);const g=[s,l,i,h],M=[0,-1,0,A[0],A[1],A[2],y[0],y[1],y[2],I[0],I[1],I[2]],d=[0,1,2,3,1,0,3,2,1,3,0,2],w=[0,0,0,1,1,1,2,2,2,3,3,3];function P(t){Array.isArray(t)||(t=[t,t,t]);const e=new Array(12);for(let n=0;n<4;n++)e[3*n]=g[n][0]*t[0],e[3*n+1]=g[n][1]*t[1],e[3*n+2]=g[n][2]*t[2];return new m([[N.POSITION,{size:3,data:e,exclusive:!0}],[N.NORMAL,{size:3,data:M}]],[[N.POSITION,new Uint16Array(d)],[N.NORMAL,new Uint16Array(w)]])}r.createGeometry=P}(p||(p={})),function(M){function x(t,e,n,r={uv:!0}){const a=-Math.PI,o=2*Math.PI,s=-Math.PI/2,l=Math.PI,i=Math.max(3,Math.floor(e)),c=Math.max(2,Math.floor(n)),u=(i+1)*(c+1),h=new Float32Array(3*u),f=new Float32Array(3*u),O=new Float32Array(2*u),A=[];let y=0;for(let m=0;m<=c;m++){const e=[],n=m/c,r=s+n*l,u=Math.cos(r);for(let s=0;s<=i;s++){const l=s/i,c=a+l*o,A=Math.cos(c)*u,I=Math.sin(r),g=-Math.sin(c)*u;h[3*y]=A*t,h[3*y+1]=I*t,h[3*y+2]=g*t,f[3*y]=A,f[3*y+1]=I,f[3*y+2]=g,O[2*y]=l,O[2*y+1]=n,e.push(y),++y}A.push(e)}const I=new Uint32Array(2*i*(c-1)*3);y=0;for(let m=0;m<c;m++)for(let t=0;t<i;t++){const e=A[m][t],n=A[m][t+1],r=A[m+1][t+1],a=A[m+1][t];0===m?(I[y++]=e,I[y++]=r,I[y++]=a):m===c-1?(I[y++]=e,I[y++]=n,I[y++]=r):(I[y++]=e,I[y++]=n,I[y++]=r,I[y++]=r,I[y++]=a,I[y++]=e)}const g=[[N.POSITION,I],[N.NORMAL,I]],M=[[N.POSITION,{size:3,data:h,exclusive:!0}],[N.NORMAL,{size:3,data:f,exclusive:!0}]];return r.uv&&(M.push([N.UV0,{size:2,data:O,exclusive:!0}]),g.push([N.UV0,I])),r.offset&&(g[0][0]=N.OFFSET,M[0][0]=N.OFFSET,g.push([N.POSITION,new Uint32Array(I.length)]),M.push([N.POSITION,{size:3,data:Float64Array.from(r.offset),exclusive:!0}])),new m(M,g)}function T(t,e,n){const r=t;let a,o;if(n)a=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],o=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]);else{const t=r*(1+Math.sqrt(5))/2;a=[-r,t,0,r,t,0,-r,-t,0,r,-t,0,0,-r,t,0,r,t,0,-r,-t,0,r,-t,t,0,-r,t,0,r,-t,0,-r,-t,0,r],o=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1])}for(let h=0;h<a.length;h+=3)P.scale(a,h,t/P.length(a,h));let s={};function l(e,n){e>n&&([e,n]=[n,e]);const r=e.toString()+"."+n.toString();if(s[r])return s[r];let o=a.length;return a.length+=3,P.add(a,3*e,a,3*n,a,o),P.scale(a,o,t/P.length(a,o)),o/=3,s[r]=o,o}for(let h=0;h<e;h++){const t=o.length,e=new Uint32Array(4*t);for(let n=0;n<t;n+=3){const t=o[n],r=o[n+1],a=o[n+2],s=l(t,r),i=l(r,a),c=l(a,t),u=4*n;e[u]=t,e[u+1]=s,e[u+2]=c,e[u+3]=r,e[u+4]=i,e[u+5]=s,e[u+6]=a,e[u+7]=c,e[u+8]=i,e[u+9]=s,e[u+10]=i,e[u+11]=c}o=e,s={}}const i=new Float32Array(a);for(let h=0;h<i.length;h+=3)P.normalize(i,h);const c=[[N.POSITION,o],[N.NORMAL,o]],u=[[N.POSITION,{size:3,data:new Float32Array(a),exclusive:!0}],[N.NORMAL,{size:3,data:i,exclusive:!0}]];return new m(u,c)}function L(t,e,n,r,a,o,s){const l=e?[e[0],e[1],e[2]]:[0,0,0],i=t?[t[0],t[1],t[2]]:[0,0,1];o=o||[0,0];const c=n?[255*n[0],255*n[1],255*n[2],n.length>3?255*n[3]:255]:[255,255,255,255],u=null!=r&&2===r.length?r:[1,1],h=[[N.POSITION,{size:3,data:l,exclusive:!0}],[N.NORMAL,{size:3,data:i,exclusive:!0}],[N.UV0,{size:o.length,data:o}],[N.COLOR,{size:4,data:c,exclusive:!0}],[N.SIZE,{size:2,data:u}]];if(null!=a){const t=new Float32Array([a[0],a[1],a[2],a[3]]);h.push([N.AUXPOS1,{size:4,data:t}])}if(null!=s){const t=new Float32Array([s[0],s[1],s[2],s[3]]);h.push([N.AUXPOS2,{size:4,data:t}])}return new m(h,null,g.Point)}function R(t,e,n,r,a,o,s,l){if(null!=t){const{data:e}=l.getMutableAttribute(N.NORMAL);e[0]=t[0],e[1]=t[1],e[2]=t[2]}if(null!=e){const{data:t}=l.getMutableAttribute(N.POSITION);t[0]=e[0],t[1]=e[1],t[2]=e[2]}if(null!=n){const{data:t}=l.getMutableAttribute(N.COLOR);t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3]}if(null!=r){const{data:t}=l.getMutableAttribute(N.SIZE);t[0]=r[0],t[1]=r[1]}if(null!=a){const{data:t}=l.getMutableAttribute(N.AUXPOS1);t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3]}if(null!=o){const{data:t}=l.getMutableAttribute(N.UV0);t[0]=o[0],t[1]=o[1]}if(null!=s){const{data:t}=l.getMutableAttribute(N.AUXPOS2);t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3]}}function b(t,e){const n=new Float32Array(3*t.length),r=new Float32Array(e?3*t.length:3),a=new Uint32Array(t.length),o=new Uint32Array(t.length);for(let c=0;c<t.length;c++)n[3*c]=t[c][0],n[3*c+1]=t[c][1],n[3*c+2]=t[c][2],e&&(r[3*c]=e[c][0],r[3*c+1]=e[c][1],r[3*c+2]=e[c][2]),a[c]=c,o[c]=0;e||(r[0]=0,r[1]=1,r[2]=0);const s=[0,0],l=[[N.POSITION,a],[N.NORMAL,e?a:o],[N.UV0,o]],i=[[N.POSITION,{size:3,data:n,exclusive:!0}],[N.NORMAL,{size:3,data:r,exclusive:!0}],[N.UV0,{size:2,data:s,exclusive:!0}]];return new m(i,l,g.Point)}function G(){const t=[0,0,0,0,0,100,100,0,0],e=new Uint16Array([0,1,2]),n=[0,1,0],r=new Uint16Array([0,0,0]),a=[0,0],o=new Uint16Array([0,0,0]),s=[[N.POSITION,e],[N.NORMAL,r],[N.UV0,o]],l=[[N.POSITION,{size:3,data:t,exclusive:!0}],[N.NORMAL,{size:3,data:n,exclusive:!0}],[N.UV0,{size:2,data:a,exclusive:!0}]];return new m(l,s)}M.createBoxGeometry=U.createGeometry,M.createDiamondGeometry=S.createGeometry,M.createTetrahedronGeometry=p.createGeometry,M.createSphereGeometry=x,M.createPolySphereGeometry=T,M.createPointGeometry=L,M.updatePointGeometry=R,M.createPointArrayGeometry=b,M.createTriangleGeometry=G;const F=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]];function V(t=F){const e=new Array(12);for(let c=0;c<4;c++)for(let n=0;n<3;n++)e[3*c+n]=t[c][n];const n=new Uint32Array([0,1,2,2,3,0]),r=[0,0,1],a=new Uint32Array([0,0,0,0,0,0]),o=[0,0,1,0,1,1,0,1],s=[255,255,255,255],l=[[N.POSITION,n],[N.NORMAL,a],[N.UV0,n],[N.COLOR,a]],i=[[N.POSITION,{size:3,data:e,exclusive:!0}],[N.NORMAL,{size:3,data:r,exclusive:!0}],[N.UV0,{size:2,data:o,exclusive:!0}],[N.COLOR,{size:4,data:s,exclusive:!0}]];return new m(i,l)}function j(t,e,n,r,a=!0,o=!0){let s=0;const l=e,i=t;let u=c(0,s,0),h=c(0,s+i,0),f=c(0,-1,0),O=c(0,1,0);r&&(s=i,h=c(0,0,0),u=c(0,s,0),f=c(0,1,0),O=c(0,-1,0));const A=[h,u],y=[f,O],I=n+2,g=Math.sqrt(i*i+l*l);if(r)for(let m=n-1;m>=0;m--){const t=m*(2*Math.PI/n),e=c(Math.cos(t)*l,s,Math.sin(t)*l);A.push(e);const r=c(i*Math.cos(t)/g,-l/g,i*Math.sin(t)/g);y.push(r)}else for(let m=0;m<n;m++){const t=m*(2*Math.PI/n),e=c(Math.cos(t)*l,s,Math.sin(t)*l);A.push(e);const r=c(i*Math.cos(t)/g,l/g,i*Math.sin(t)/g);y.push(r)}const M=new Uint32Array(2*(n+2)*3),d=new Uint32Array(2*(n+2)*3);let w=0,P=0;if(a){for(let t=3;t<A.length;t++)M[w++]=1,M[w++]=t-1,M[w++]=t,d[P++]=0,d[P++]=0,d[P++]=0;M[w++]=A.length-1,M[w++]=2,M[w++]=1,d[P++]=0,d[P++]=0,d[P++]=0}if(o){for(let t=3;t<A.length;t++)M[w++]=t,M[w++]=t-1,M[w++]=0,d[P++]=t,d[P++]=t-1,d[P++]=1;M[w++]=0,M[w++]=2,M[w++]=A.length-1,d[P++]=1,d[P++]=2,d[P++]=y.length-1}const U=new Float32Array(3*I);for(let c=0;c<I;c++)U[3*c]=A[c][0],U[3*c+1]=A[c][1],U[3*c+2]=A[c][2];const S=new Float32Array(3*I);for(let c=0;c<I;c++)S[3*c]=y[c][0],S[3*c+1]=y[c][1],S[3*c+2]=y[c][2];const p=[[N.POSITION,M],[N.NORMAL,d]],x=[[N.POSITION,{size:3,data:U,exclusive:!0}],[N.NORMAL,{size:3,data:S,exclusive:!0}]];return new m(x,p)}function C(t,l,i,f,O,A){const y=f?h(f):c(1,0,0),I=O?h(O):c(0,0,0);A=null==A||A;const g=u();n(g,y);const M=u();r(M,g,Math.abs(t));const d=u();r(d,M,-.5),a(d,d,I);const w=c(0,1,0);Math.abs(1-o(g,w))<.2&&s(w,0,0,1);const P=u();e(P,g,w),n(P,P),e(w,P,g);const U=2*i+(A?2:0),S=i+(A?2:0),p=new Float32Array(3*U),x=new Float32Array(3*S),z=new Float32Array(2*U),v=new Uint32Array(3*i*(A?4:2)),T=new Uint32Array(3*i*(A?4:2));A&&(p[3*(U-2)+0]=d[0],p[3*(U-2)+1]=d[1],p[3*(U-2)+2]=d[2],z[2*(U-2)]=0,z[2*(U-2)+1]=0,p[3*(U-1)+0]=p[3*(U-2)+0]+M[0],p[3*(U-1)+1]=p[3*(U-2)+1]+M[1],p[3*(U-1)+2]=p[3*(U-2)+2]+M[2],z[2*(U-1)]=1,z[2*(U-1)+1]=1,x[3*(S-2)+0]=-g[0],x[3*(S-2)+1]=-g[1],x[3*(S-2)+2]=-g[2],x[3*(S-1)+0]=g[0],x[3*(S-1)+1]=g[1],x[3*(S-1)+2]=g[2]);const L=(t,e,n)=>{v[t]=e,T[t]=n};let R=0;const b=u(),G=u();for(let e=0;e<i;e++){const t=e*(2*Math.PI/i);r(b,w,Math.sin(t)),r(G,P,Math.cos(t)),a(b,b,G),x[3*e+0]=b[0],x[3*e+1]=b[1],x[3*e+2]=b[2],r(b,b,l),a(b,b,d),p[3*e+0]=b[0],p[3*e+1]=b[1],p[3*e+2]=b[2],z[2*e+0]=e/i,z[2*e+1]=0,p[3*(e+i)+0]=p[3*e+0]+M[0],p[3*(e+i)+1]=p[3*e+1]+M[1],p[3*(e+i)+2]=p[3*e+2]+M[2],z[2*(e+i)+0]=e/i,z[2*e+1]=1;const n=(e+1)%i;L(R++,e,e),L(R++,e+i,e),L(R++,n,n),L(R++,n,n),L(R++,e+i,e),L(R++,n+i,n)}if(A){for(let t=0;t<i;t++){const e=(t+1)%i;L(R++,U-2,S-2),L(R++,t,S-2),L(R++,e,S-2)}for(let t=0;t<i;t++){const e=(t+1)%i;L(R++,t+i,S-1),L(R++,U-1,S-1),L(R++,e+i,S-1)}}const F=[[N.POSITION,v],[N.NORMAL,T],[N.UV0,v]],V=[[N.POSITION,{size:3,data:p,exclusive:!0}],[N.NORMAL,{size:3,data:x,exclusive:!0}],[N.UV0,{size:2,data:z,exclusive:!0}]];return new m(V,F)}function E(t,e,n,r,a){n=n||10,r=null==r||r,w(t.length>1);const o=[[0,0,0]],s=[],l=[];for(let i=0;i<n;i++){s.push([0,-i-1,-(i+1)%n-1]);const t=i/n*2*Math.PI;l.push([Math.cos(t)*e,Math.sin(t)*e])}return M.createPathExtrusionGeometry(l,t,o,s,r,a)}function k(o,i,h,g,M,d=c(0,0,0)){const w=o.length,P=new Float32Array(i.length*w*3+(6*h.length||0)),U=new Float32Array(i.length*w*3+(h?6:0)),S=(i.length-1)*w*6+3*g.length*2,p=new Uint32Array(S),x=new Uint32Array(S);let v=0,T=0,L=0,R=0;const b=u(),G=u(),F=u(),V=u(),j=u(),C=u(),E=u(),k=f(),B=u(),D=u(),X=u(),q=u(),Z=u(),J=O();s(B,0,1,0),t(G,i[1],i[0]),n(G,G),M?(a(k,i[0],d),n(F,k)):s(F,0,0,1),H(G,F,B,B,j,F,z),l(V,F),l(q,j);for(let t=0;t<h.length;t++)r(C,j,h[t][0]),r(k,F,h[t][2]),a(C,C,k),a(C,C,i[0]),P[v++]=C[0],P[v++]=C[1],P[v++]=C[2];U[T++]=-G[0],U[T++]=-G[1],U[T++]=-G[2];for(let t=0;t<g.length;t++)p[L++]=g[t][0]>0?g[t][0]:-g[t][0]-1+h.length,p[L++]=g[t][1]>0?g[t][1]:-g[t][1]-1+h.length,p[L++]=g[t][2]>0?g[t][2]:-g[t][2]-1+h.length,x[R++]=0,x[R++]=0,x[R++]=0;let K=h.length;const Q=h.length-1;for(let s=0;s<i.length;s++){let c=!1;if(s>0){l(b,G),s<i.length-1?(t(G,i[s+1],i[s]),n(G,G)):c=!0,a(D,b,G),n(D,D),a(X,i[s-1],V),A(i[s],D,J);y(J,I(X,b),k)?(t(k,k,i[s]),n(F,k),e(j,D,F),n(j,j)):H(D,V,q,B,j,F,z),l(V,F),l(q,j)}M&&(a(k,i[s],d),n(Z,k));for(let t=0;t<w;t++)if(r(C,j,o[t][0]),r(k,F,o[t][1]),a(C,C,k),n(E,C),U[T++]=E[0],U[T++]=E[1],U[T++]=E[2],a(C,C,i[s]),P[v++]=C[0],P[v++]=C[1],P[v++]=C[2],!c){const e=(t+1)%w;p[L++]=K+t,p[L++]=K+w+t,p[L++]=K+e,p[L++]=K+e,p[L++]=K+w+t,p[L++]=K+w+e;for(let t=0;t<6;t++)x[R++]=p[L-6+t]-Q}K+=w}const W=i[i.length-1];for(let t=0;t<h.length;t++)r(C,j,h[t][0]),r(k,F,h[t][1]),a(C,C,k),a(C,C,W),P[v++]=C[0],P[v++]=C[1],P[v++]=C[2];const Y=T/3;U[T++]=G[0],U[T++]=G[1],U[T++]=G[2];const $=K-w;for(let t=0;t<g.length;t++)p[L++]=g[t][0]>=0?K+g[t][0]:-g[t][0]-1+$,p[L++]=g[t][2]>=0?K+g[t][2]:-g[t][2]-1+$,p[L++]=g[t][1]>=0?K+g[t][1]:-g[t][1]-1+$,x[R++]=Y,x[R++]=Y,x[R++]=Y;const _=[[N.POSITION,p],[N.NORMAL,x]],tt=[[N.POSITION,{size:3,data:P,exclusive:!0}],[N.NORMAL,{size:3,data:U,exclusive:!0}]];return new m(tt,_)}function B(t,e,n){w(t.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),w(3===t[0].length,"createPolylineGeometry(): malformed vertex"),w(null==e||e.length===t.length,"createPolylineGeometry: need same number of points and normals"),w(null==e||3===e[0].length,"createPolylineGeometry(): malformed normal");const r=new Float64Array(3*t.length),a=new Uint32Array(2*(t.length-1));let o=0,s=0;for(let c=0;c<t.length;c++){for(let e=0;e<3;e++)r[o++]=t[c][e];c>0&&(a[s++]=c-1,a[s++]=c)}const l=[],i=[];if(l.push([N.POSITION,a]),i.push([N.POSITION,{size:3,data:r,exclusive:!0}]),e){const n=new Float32Array(3*e.length);let r=0;for(let a=0;a<t.length;a++)for(let t=0;t<3;t++)n[r++]=e[a][t];l.push([N.NORMAL,a]),i.push([N.NORMAL,{size:3,data:n,exclusive:!0}])}return n&&(i.push([N.COLOR,{size:4,data:n}]),l.push([N.COLOR,d(n.length/4)])),new m(i,l,g.Line)}function D(t,e,n,r,a=0){const o=new Array(18),s=[[-e,a,r/2],[n,a,r/2],[0,t+a,r/2],[-e,a,-r/2],[n,a,-r/2],[0,t+a,-r/2]],l=new Uint16Array([0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5]);for(let i=0;i<6;i++)o[3*i]=s[i][0],o[3*i+1]=s[i][1],o[3*i+2]=s[i][2];return new m([[N.POSITION,{size:3,data:o,exclusive:!0}]],[[N.POSITION,l]])}function X(t,e){const n=t.getMutableAttribute(N.POSITION).data;for(let r=0;r<n.length;r+=3){const t=n[r],a=n[r+1],o=n[r+2];s(v,t,a,o),i(v,v,e),n[r]=v[0],n[r+1]=v[1],n[r+2]=v[2]}}function q(t,e=t){const n=t.vertexAttributes,r=n.get(N.POSITION).data,a=n.get(N.NORMAL).data;if(a){const t=e.getMutableAttribute(N.NORMAL).data;for(let e=0;e<a.length;e+=3){const n=a[e+1];t[e+1]=-a[e+2],t[e+2]=n}}if(r){const t=e.getMutableAttribute(N.POSITION).data;for(let e=0;e<r.length;e+=3){const n=r[e+1];t[e+1]=-r[e+2],t[e+2]=n}}return e}function Z(t,r,a,s,l){return!(Math.abs(o(r,t))>l)&&(e(a,t,r),n(a,a),e(s,a,t),n(s,s),!0)}function H(t,e,n,r,a,o,s){return Z(t,e,a,o,s)||Z(t,n,a,o,s)||Z(t,r,a,o,s)}M.createSquareGeometry=V,M.createConeGeometry=j,M.createCylinderGeometry=C,M.createTubeGeometry=E,M.createPathExtrusionGeometry=k,M.createPolylineGeometry=B,M.createExtrudedTriangle=D,M.transformInPlace=X,M.cgToGIS=q,M.makeOrthoBasisDirUp=Z,M.makeOrthoBasisDirUpFallback=H}(x||(x={}));const z=.99619469809,v=u(),T=x;export{T as default};
