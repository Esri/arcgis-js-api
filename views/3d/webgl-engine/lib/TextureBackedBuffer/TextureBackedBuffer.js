/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{BufferViewVec4u8 as t}from"../../../../../geometry/support/buffer/BufferView.js";import{TextureType as e,PixelFormat as i,PixelType as s,TextureSamplingMode as r,TextureWrapMode as h}from"../../../../webgl/enums.js";import{Texture as d}from"../../../../webgl/Texture.js";class a{constructor(a,u=1){this.rctx=a,this.fieldCount=u,this.textureWidth=4096,this.dirty=!0,this.texture=new d(this.rctx,{target:e.TEXTURE_2D,pixelFormat:i.RGBA,dataType:s.UNSIGNED_BYTE,samplingMode:r.NEAREST,wrapMode:h.CLAMP_TO_EDGE,width:this.textureWidth,height:1,flipped:!1}),this.data=new t(new ArrayBuffer(4*this.textureWidth))}dispose(){this.texture.dispose(),this.texture=void 0,this.data=void 0}setData(t,e,i,s,r,h){const d=t*this.fieldCount+e;this.dirty=!0,this.data.set(d,0,i),this.data.set(d,1,s),this.data.set(d,2,r),this.data.set(d,3,h)}setDataElement(t,e,i,s){const r=t*this.fieldCount+e;this.dirty=!0,this.data.set(r,i,s)}resizeToFit(e){const i=e*this.fieldCount;if(i>=this.data.count){const e=Math.ceil((i+1)/this.textureWidth)*this.textureWidth,s=new t(new ArrayBuffer(4*e));s.typedBuffer.set(this.data.typedBuffer),this.data=s}}updateTexture(){if(!this.dirty)return;const t=this.texture.descriptor.width,e=this.texture.descriptor.height;this.data.count>t*e&&this.texture.resize(t,this.data.count/t),this.texture.setData(this.data.typedBuffer),this.dirty=!1}bind(t,e,i){t.bindTexture(e,this.texture),t.setUniform2f(i,1/this.texture.descriptor.width,1/this.texture.descriptor.height)}}export{a as TextureBackedBuffer};
