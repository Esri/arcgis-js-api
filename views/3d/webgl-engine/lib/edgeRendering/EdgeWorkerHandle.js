/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isUint32Array as t}from"../../../../../core/typedArrayUtil.js";import{WorkerHandle as e}from"../../../../../core/workers/WorkerHandle.js";import{unpackInterleavedBuffer as r}from"../../../support/buffer/workerHelper.js";import{extract as a}from"./EdgeProcessingWorker.js";class n extends e{constructor(t){super("EdgeProcessingWorker","extract",{extract:t=>[t.dataBuffer],extractComponentsEdgeLocations:t=>[t.dataBuffer],extractEdgeLocations:t=>[t.dataBuffer]},t)}async process(t,e,r){if(r)return a(t);const n=this._packInput(t),s=await this.invoke(n,e);return this._unpackOutput(s)}async extractEdgeLocations(t,e){const a=this._packInput(t),n=await this.invokeMethod("extractEdgeLocations",a,e);return r(n)}async extractComponentsEdgeLocations(t,e){const a=this._packInput(t),n=await this.invokeMethod("extractComponentsEdgeLocations",a,e);return r(n)}_packInput(e){return{dataBuffer:e.data.buffer,writerSettings:e.writerSettings,skipDeduplicate:e.skipDeduplicate,indicesBuffer:e.indices.buffer,indicesType:t(e.indices)?"Uint32Array":"Uint16Array",indicesLength:e.indicesLength}}_unpackOutput(t){return{regular:{instancesData:r(t.regular.instancesData),lodInfo:{lengths:new Float32Array(t.regular.lodInfo.lengths)}},silhouette:{instancesData:r(t.silhouette.instancesData),lodInfo:{lengths:new Float32Array(t.silhouette.lodInfo.lengths)}},averageEdgeLength:t.averageEdgeLength}}}export{n as default};
