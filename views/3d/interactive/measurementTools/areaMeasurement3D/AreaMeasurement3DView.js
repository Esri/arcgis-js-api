/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/Handles","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/screenUtils","../../../../../chunks/vec3f64","../../manipulatorUtils","../../editingTools/dragEventPipeline3D","../support/viewUtils","../../visualElements/LaserlineVisualElement","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/lib/Intersector","../../../../interactive/ManipulatorCollection"],(function(t,e,i,s,a,n,r,l,o,h,u,c,_){"use strict";const d={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};let p=function(){function u(t){var e,i,s;this.vertexManipulators=[],this._analysisView=null,this._analysisVisualization=null,this._state="pending",this._mode=0,this._cursorPoint=null,this._lastDraggedVertex=null,this._visible=!1,this._laserLine=null,this._cursorManipulator=null,this._listenerHandles=null,this._tempHandlePosition=n.create(),this._analysis=t.analysis,this._toolState=t.toolState,this._manipulators=null!=(e=t.manipulators)?e:new _.ManipulatorCollection,this._view=t.view,this._mode=null!=(i=t.mode)?i:0,this._cursorPoint=null!=(s=t.cursorPoint)?s:null,this._style=o.copyParameter(d,t.style),this._intersector=c.newIntersector(this._view.state.viewingMode),this._intersector.options.store=0,this._creationPromise=this._view.whenAnalysisView(this._analysis).then((t=>this._initialize(t)))}var p=u.prototype;return p._initialize=function(t){switch(this._state){case"pending":break;case"destroyed":return}this._analysisView=t,this._analysisVisualization=t.analysisVisualization,this._analysisViewData=t.analysisViewData;const e=r.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);e.available=!1,e.radius=this._style.handleRadius,e.interactive=!1,this._manipulators.add(e),this._cursorManipulator=e,this._laserLine=new h.LaserlineVisualElement({view:this._view,attached:!0,style:{glowColor:this._style.laserLineGlowColor,glowWidth:this._style.laserLineGlowWidth,glowFalloff:this._style.laserLineGlowFalloff,innerColor:this._style.laserLineInnerColor,innerWidth:this._style.laserLineInnerWidth,globalAlpha:this._style.laserLineGlobalAlpha}}),this._analysisView.analysisViewData.mode=this._mode,this._analysisViewData.cursorPoint=this._cursorPoint,this._visible&&this._updateVisibility(this._visible),this._state="ready"},p.destroy=function(){switch(this._state){case"pending":return void(this._state="destroyed");case"ready":break;default:return}this.hide(),this._laserLine.destroy(),this._laserLine=null,this._state="destroyed"},p.when=function(){return this._creationPromise.then((()=>{}))},p.whenMessages=function(){var e=t._asyncToGenerator((function*(){yield this._creationPromise,yield new Promise((t=>{s.reactTruthy((()=>!this._analysisView.updating),t,{initial:!0,sync:!0,once:!0})}))}));function i(){return e.apply(this,arguments)}return i}(),p.show=function(){this._setVisiblity(!0)},p.hide=function(){this._setVisiblity(!1)},p._setVisiblity=function(t){switch(this._state){case"ready":this._visible!==t&&this._updateVisibility(t);break;case"pending":this._visible=t;break;default:return}},p._updateVisibility=function(t){this._visible=t,this._analysis.visible=t,this._laserLine.visible=t,t?(this._initializeListeners(),this._updateAll(this._analysisVisualization.viewData)):(this._destroyListeners(),this.vertexManipulators.forEach((t=>{this._removeVertexManipulator(t.manipulator)})),this.vertexManipulators=[],this._view.cursor=null)},p.vertexHandleAt=function(t,e){const s=this._manipulators.intersect(t,e);return i.isSome(s)?s.manipulator.metadata:null},p.manipulatorToVertex=function(t){return t.metadata},p.pick=function(t){const e=this._view.spatialReference,s=a.screenPointObjectToArray(t.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const r=this._intersector.results.min,l=n.create();if(!r.getIntersectionPoint(l))return new u.PickResult;const o=this._view.renderCoordsHelper.fromRenderCoords(l,e);if(i.isNone(o))return new u.PickResult;const h=2===r.intersector?"surface":"feature";return new u.PickResult(h,l,o)},p.overlappingHandles=function(t,e){return o.pointToPointScreenDistance(t,e,this._view)<=this._style.handleRadius},p.screenToMap3D=function(){return l.screenToMap3D(this._view)},p.finishMeasurement=function(){switch(this._state){case"pending":return;case"ready":{const t=this._analysisViewData.path;return void(t.numVertices<3?(t.clear(),this.cursorPoint=null,this._toolState.polygonState="initial"):(t.close(),this.cursorPoint=null,this._toolState.polygonState="measured"))}}},p._updateAll=function(t){this._visible&&(this._updateVertexManipulators(t),this._updateLaserLine())},p._createVertexManipulator=function(){const t=r.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);t.radius=this._style.handleRadius;return{id:this._manipulators.add(t),manipulator:t}},p._removeVertexManipulator=function(t){this._manipulators.remove(t)},p._updateVertexManipulators=function(t){const e=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;o.resizeArray(s,e.length,(()=>this._createVertexManipulator()),(t=>this._removeVertexManipulator(t.manipulator))),s.forEach(((i,s)=>{i.manipulator.metadata=e[s],i.manipulator.renderLocation=t.positionsRenderCoords[s]})),"drawing"===this._toolState.polygonState&&i.isSome(this.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this.cursorPoint):this._cursorManipulator.available=!1},p._getFocusPoint=function(){const t=this.lastDraggedVertex;switch(this._toolState.polygonState){case"drawing":return i.isSome(this.cursorPoint)?this.cursorPoint:i.isSome(t)?this._analysisViewData.path.getVertexPositionAsPoint(t):i.unwrap(this._analysisViewData.path.lastPoint);case"editing":return i.isSome(t)?this._analysisViewData.path.getVertexPositionAsPoint(t):null;default:return this.cursorPoint}},p._updateLaserLine=function(){const t=this._style.laserLineEnabled&&"measured"!==this._toolState.polygonState&&this._toolState.active,e=this._getFocusPoint();if(t&&i.isSome(e)){const t=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(e,t),this._laserLine.heightManifoldTarget=t}else this._laserLine.heightManifoldTarget=null},p._initializeListeners=function(){this._listenerHandles=new e,this._listenerHandles.add([s.react((()=>this._toolState.polygonState),(()=>this._updateLaserLine())),s.react((()=>this._analysisVisualization.viewData),(()=>this._updateAll(this._analysisVisualization.viewData)),s.sync),s.react((()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.cursorPoint})),(()=>this._updateLaserLine())),s.react((()=>this._toolState.active),(()=>this._updateAll(this._analysisVisualization.viewData)))])},p._destroyListeners=function(){this._listenerHandles=i.destroyMaybe(this._listenerHandles)},t._createClass(u,[{key:"state",get:function(){return this._state}},{key:"analysisVisualization",get:function(){return this._analysisVisualization}},{key:"analysisView",get:function(){return this._analysisView}},{key:"validMeasurement",get:function(){return"ready"===this.state&&this._analysisViewData.validMeasurement}},{key:"path",get:function(){return"ready"!==this.state?null:this._analysisViewData.path}},{key:"requiresCursorPoint",get:function(){return("initial"===this._toolState.polygonState||"drawing"===this._toolState.polygonState)&&this._toolState.active}},{key:"visible",get:function(){return this._visible},set:function(t){t?this.show():this.hide()}},{key:"mode",get:function(){return this._mode},set:function(t){switch(this._state){case"pending":this._mode=t;break;case"ready":this._mode=t,this._analysisViewData.mode=t}}},{key:"cursorPoint",get:function(){return this._cursorPoint},set:function(t){switch(this._state){case"pending":this._cursorPoint=t;break;case"ready":this._cursorPoint=t,this._analysisViewData.cursorPoint=t}}},{key:"lastDraggedVertex",get:function(){return this._lastDraggedVertex},set:function(t){switch(this._state){case"pending":this._lastDraggedVertex=t;break;case"ready":this._lastDraggedVertex=t,this._analysisViewData.lastDraggedVertex=t}}},{key:"testData",get:function(){const t=this._laserLine.testData;return{labels:this._analysisVisualization.testData.labels,laserLineRenderer:i.isSome(t)?{heightManifoldEnabled:t.heightManifoldEnabled,heightManifoldTarget:t.heightManifoldTarget,pointDistanceEnabled:t.pointDistanceEnabled,pointDistanceOrigin:t.pointDistanceOrigin,pointDistanceTarget:t.pointDistanceTarget,lineVerticalPlaneEnabled:t.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}}]),u}();p._handleGeometry=u.createSphereGeometry(1,32,32),function(t){let e=function(){};t.PickRequest=e;let i=function(t=null,e=null,i=null){this.type=t,this.scenePoint=e,this.mapPoint=i};t.PickResult=i}(p||(p={}));return p}));
