/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/Handles","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/screenUtils","../../../../../chunks/vec3f64","../../../analysis/interfaces","../../manipulatorUtils","../../editingTools/dragEventPipeline3D","../support/viewUtils","../../visualElements/LaserlineVisualElement","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/lib/Intersector","../../../webgl-engine/lib/IntersectorInterfaces","../../../../interactive/ManipulatorCollection"],(function(t,e,i,s,n,a,l,r,o,h,u,c,d,_,p){"use strict";const y={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};let g=function(){function c(t){var e,i,s;this.vertexManipulators=[],this._analysisView=null,this._analysisVisualization=null,this._destroyed=!1,this._mode=l.MeasurementMode.Auto,this._cursorPoint=null,this._lastDraggedVertex=null,this._laserLine=null,this._cursorManipulator=null,this._listenerHandles=null,this._tempHandlePosition=a.create(),this._analysis=t.analysis,this._analysisView=t.analysisView,this._toolState=t.toolState,this._manipulators=null!=(e=t.manipulators)?e:new p.ManipulatorCollection,this._view=t.view,this._mode=null!=(i=t.mode)?i:l.MeasurementMode.Auto,this._cursorPoint=null!=(s=t.cursorPoint)?s:null,this._style=h.copyParameter(y,t.style),this._intersector=d.newIntersector(this._view.state.viewingMode),this._intersector.options.store=_.StoreResults.MIN,this._analysisVisualization=this._analysisView.analysisVisualization;const n=r.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);n.available=!1,n.radius=this._style.handleRadius,n.interactive=!1,this._manipulators.add(n),this._cursorManipulator=n,this._laserLine=new u.LaserlineVisualElement({view:this._view,attached:!0,style:{glowColor:this._style.laserLineGlowColor,glowWidth:this._style.laserLineGlowWidth,glowFalloff:this._style.laserLineGlowFalloff,innerColor:this._style.laserLineInnerColor,innerWidth:this._style.laserLineInnerWidth,globalAlpha:this._style.laserLineGlobalAlpha}}),this._analysisView.mode=this._mode,this._analysisView.cursorPoint=this._cursorPoint,this._updateVisibility(t.visible||!0)}var g=c.prototype;return g.destroy=function(){this._listenerHandles=i.destroyMaybe(this._listenerHandles),this._manipulators=i.destroyMaybe(this._manipulators),this._laserLine=i.destroyMaybe(this._laserLine),this._destroyed=!0},g.whenMessages=function(){var e=t._asyncToGenerator((function*(){yield s.whenOnce((()=>!this._analysisView.updating))}));function i(){return e.apply(this,arguments)}return i}(),g.show=function(){this._setVisibility(!0)},g.hide=function(){this._setVisibility(!1)},g._setVisibility=function(t){this._destroyed||this._analysis.visible===t||this._updateVisibility(t)},g._updateVisibility=function(t){this._analysis.visible=t,this._laserLine.visible=t,t?(this._initializeListeners(),this._updateAll(this._analysisVisualization.viewData)):(this._destroyListeners(),this.vertexManipulators.forEach((t=>{this._removeVertexManipulator(t.manipulator)})),this.vertexManipulators=[],this._view.cursor=null)},g.vertexHandleAt=function(t,e){const s=this._manipulators.intersect(t,e);return i.isSome(s)?s.manipulator.metadata:null},g.manipulatorToVertex=function(t){return t.metadata},g.pick=function(t){const e=this._view.spatialReference,s=n.screenPointObjectToArray(t.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const l=this._intersector.results.min,r=a.create();if(!l.getIntersectionPoint(r))return new c.PickResult;const o=this._view.renderCoordsHelper.fromRenderCoords(r,e);if(i.isNone(o))return new c.PickResult;const h=l.intersector===_.IntersectorType.TERRAIN?"surface":"feature";return new c.PickResult(h,r,o)},g.overlappingHandles=function(t,e){return h.pointToPointScreenDistance(t,e,this._view)<=this._style.handleRadius},g.screenToMap3D=function(){return o.screenToMap3D(this._view)},g._updateAll=function(t){this._analysis.visible&&(this._updateVertexManipulators(t),this._updateLaserLine())},g._createVertexManipulator=function(){const t=r.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);t.radius=this._style.handleRadius;return{id:this._manipulators.add(t),manipulator:t}},g._removeVertexManipulator=function(t){this._manipulators.remove(t)},g._updateVertexManipulators=function(t){const e=this._analysisView.path?this._analysisView.path.vertices:[],s=this.vertexManipulators;h.resizeArray(s,e.length,(()=>this._createVertexManipulator()),(t=>this._removeVertexManipulator(t.manipulator))),s.forEach(((i,s)=>{i.manipulator.metadata=e[s],i.manipulator.renderLocation=t.positionsRenderCoords[s]})),"drawing"===this._toolState.polygonState&&i.isSome(this.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this.cursorPoint):this._cursorManipulator.available=!1},g._getFocusPoint=function(){const t=this.lastDraggedVertex;switch(this._toolState.polygonState){case"drawing":return i.isSome(this.cursorPoint)?this.cursorPoint:i.isSome(t)?this._analysisView.path.getVertexPositionAsPoint(t):i.unwrap(this._analysisView.path.lastPoint);case"editing":return i.isSome(t)?this._analysisView.path.getVertexPositionAsPoint(t):null;default:return this.cursorPoint}},g._updateLaserLine=function(){const t=this._style.laserLineEnabled&&"measured"!==this._toolState.polygonState&&this._toolState.active,e=this._getFocusPoint();if(t&&i.isSome(e)){const t=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(e,t),this._laserLine.heightManifoldTarget=t}else this._laserLine.heightManifoldTarget=null},g._initializeListeners=function(){this._listenerHandles=new e,this._listenerHandles.add([s.watch((()=>this._toolState.polygonState),(()=>this._updateLaserLine())),s.watch((()=>this._analysisVisualization.viewData),(()=>this._updateAll(this._analysisVisualization.viewData)),s.sync),s.watch((()=>({lastDraggedVertex:this._analysisView.lastDraggedVertex,cursorPoint:this._analysisView.cursorPoint})),(()=>this._updateLaserLine())),s.watch((()=>this._toolState.active),(()=>this._updateAll(this._analysisVisualization.viewData)))])},g._destroyListeners=function(){this._listenerHandles=i.destroyMaybe(this._listenerHandles)},t._createClass(c,[{key:"destroyed",get:function(){return this._destroyed}},{key:"analysisVisualization",get:function(){return this._analysisVisualization}},{key:"analysisView",get:function(){return this._analysisView}},{key:"requiresCursorPoint",get:function(){return("initial"===this._toolState.polygonState||"drawing"===this._toolState.polygonState)&&this._toolState.active}},{key:"visible",get:function(){return this._analysis.visible},set:function(t){t?this.show():this.hide()}},{key:"mode",get:function(){return this._mode},set:function(t){this._destroyed||(this._mode=t,this._analysisView.mode=t)}},{key:"cursorPoint",get:function(){return this._cursorPoint},set:function(t){this._destroyed||(this._cursorPoint=t,this._analysisView.cursorPoint=t)}},{key:"lastDraggedVertex",get:function(){return this._lastDraggedVertex},set:function(t){this._destroyed||(this._lastDraggedVertex=t,this._analysisView.lastDraggedVertex=t)}},{key:"testData",get:function(){const t=this._laserLine.testData;return{labels:this._analysisVisualization.testData.labels,laserLineRenderer:i.isSome(t)?{heightManifoldEnabled:t.heightManifoldEnabled,heightManifoldTarget:t.heightManifoldTarget,pointDistanceEnabled:t.pointDistanceEnabled,pointDistanceOrigin:t.pointDistanceOrigin,pointDistanceTarget:t.pointDistanceTarget,lineVerticalPlaneEnabled:t.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}}]),c}();g._handleGeometry=c.createSphereGeometry(1,32,32),function(t){let e=function(){};t.PickRequest=e;let i=function(t=null,e=null,i=null){this.type=t,this.scenePoint=e,this.mapPoint=i};t.PickResult=i}(g||(g={}));return g}));
