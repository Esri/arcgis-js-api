/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/Handles","../../../../../core/maybe","../../../../../core/screenUtils","../../../../../core/watchUtils","../../../../../chunks/vec3f64","../../manipulatorUtils","../../editingTools/dragEventPipeline3D","../support/viewUtils","../../visualElements/LaserlineVisualElement","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/lib/Intersector","../../../../interactive/ManipulatorCollection"],(function(e,t,i,s,n,a,r,l,o,h,u,c,d){"use strict";const _={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};let p=function(){function u(e){var t,i,s,n;this.vertexManipulators=[],this._layerView=null,this._analysisView=null,this._state="pending",this._mode=0,this._cursorPoint=null,this._lastDraggedVertex=null,this._visible=!1,this._laserLine=null,this._cursorManipulator=null,this._listenerHandles=null,this._tempHandlePosition=a.create(),this._model=e.model,this._unit=null!=(t=e.unit)?t:"metric",this._manipulators=null!=(i=e.manipulators)?i:new d.ManipulatorCollection,this._view=this._model.sceneView,this._mode=null!=(s=e.mode)?s:0,this._cursorPoint=null!=(n=e.cursorPoint)?n:null,this._style=o.copyParameter(_,e.style),this._intersector=new c.Intersector(this._view.state.viewingMode),this._intersector.options.store=0;const r=this._model.analysis;this._creationPromise=this._view.whenLayerView(r).then((e=>this._initialize(e)))}var p=u.prototype;return p._initialize=function(e){switch(this._state){case"pending":break;case"destroyed":return}this._layerView=e,this._analysisView=e.analysisView,this._layerViewData=e.layerViewData;const t=r.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);t.available=!1,t.radius=this._style.handleRadius,t.interactive=!1,this._manipulators.add(t),this._cursorManipulator=t,this._laserLine=new h.LaserlineVisualElement({view:this._view,attached:!0,style:{glowColor:this._style.laserLineGlowColor,glowWidth:this._style.laserLineGlowWidth,glowFalloff:this._style.laserLineGlowFalloff,innerColor:this._style.laserLineInnerColor,innerWidth:this._style.laserLineInnerWidth,globalAlpha:this._style.laserLineGlobalAlpha}}),this._analysisView.mode=this._mode,this._layerView.unit=this._unit,this._layerViewData.cursorPoint=this._cursorPoint,this._visible&&this._updateVisibility(this._visible),this._state="ready"},p.destroy=function(){switch(this._state){case"pending":return void(this._state="destroyed");case"ready":break;default:return}this.hide(),this._laserLine.destroy(),this._laserLine=null,this._state="destroyed"},p.when=function(){return this._creationPromise.then((()=>{}))},p.whenMessages=function(){var t=e._asyncToGenerator((function*(){yield this._creationPromise,yield n.whenNotOnce(this.layerView,"updating")}));function i(){return t.apply(this,arguments)}return i}(),p.show=function(){this._setVisiblity(!0)},p.hide=function(){this._setVisiblity(!1)},p._setVisiblity=function(e){switch(this._state){case"ready":this._visible!==e&&this._updateVisibility(e);break;case"pending":this._visible=e;break;default:return}},p._updateVisibility=function(e){this._visible=e,this._model.analysis.visible=e,this._laserLine.visible=e,e?(this._initializeListeners(),this._updateAll(this._analysisView.viewData)):(this._destroyListeners(),this.vertexManipulators.forEach((e=>{this._removeVertexManipulator(e.manipulator)})),this.vertexManipulators=[],this._view.cursor=null)},p.vertexHandleAt=function(e,t){const s=this._manipulators.intersect(e,t);return i.isSome(s)?s.manipulator.metadata:null},p.manipulatorToVertex=function(e){return e.metadata},p.pick=function(e){const t=this._view.spatialReference,n=s.screenPointObjectToArray(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(n,this._intersector);const r=this._intersector.results.min,l=a.create();if(!r.getIntersectionPoint(l))return new u.PickResult;const o=this._view.renderCoordsHelper.fromRenderCoords(l,t);if(i.isNone(o))return new u.PickResult;const h="TerrainRenderer"===r.intersector?"surface":"feature";return new u.PickResult(h,l,o)},p.overlappingHandles=function(e,t){return o.pointToPointScreenDistance(e,t,this._view)<=this._style.handleRadius},p.screenToMap3D=function(){return l.screenToMap3D(this._view)},p.finishMeasurement=function(){switch(this._state){case"pending":return;case"ready":{const e=this._layerViewData.path;return void(e.numVertices<3?(e.clear(),this.cursorPoint=null,this._model.state="initial"):(e.close(),this.cursorPoint=null,this._model.state="measured"))}}},p._updateAll=function(e){this._visible&&(this._updateVertexManipulators(e),this._updateLaserLine())},p._createVertexManipulator=function(){const e=r.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);e.radius=this._style.handleRadius;return{id:this._manipulators.add(e),manipulator:e}},p._removeVertexManipulator=function(e){this._manipulators.remove(e)},p._updateVertexManipulators=function(e){const t=this._layerViewData.path?this._layerViewData.path.vertices:[],s=this.vertexManipulators;o.resizeArray(s,t.length,(()=>this._createVertexManipulator()),(e=>this._removeVertexManipulator(e.manipulator))),s.forEach(((i,s)=>{i.manipulator.metadata=t[s],i.manipulator.renderLocation=e.positionsRenderCoords[s]})),"drawing"===this._model.state&&i.isSome(this.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this.cursorPoint):this._cursorManipulator.available=!1},p._getFocusPoint=function(){const e=this._model,t=this.lastDraggedVertex;switch(e.state){case"drawing":return i.isSome(this.cursorPoint)?this.cursorPoint:i.isSome(t)?this._layerViewData.path.getVertexPositionAsPoint(t):i.unwrap(this._layerViewData.path.lastPoint);case"editing":return i.isSome(t)?this._layerViewData.path.getVertexPositionAsPoint(t):null;default:return this.cursorPoint}},p._updateLaserLine=function(){const e=this._model,t=this._style.laserLineEnabled&&"measured"!==e.state&&e.active,s=this._getFocusPoint();if(t&&i.isSome(s)){const e=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(s,e),this._laserLine.heightManifoldTarget=e}else this._laserLine.heightManifoldTarget=null},p._initializeListeners=function(){this._listenerHandles=new t,this._listenerHandles.add([this._model.watch("state",(()=>this._updateLaserLine())),this._analysisView.watch("viewData",(()=>this._updateAll(this._analysisView.viewData)),!0),this._layerViewData.watch(["lastDraggedVertex","cursorPoint"],(()=>this._updateLaserLine())),this._model.watch(["active"],(()=>this._updateAll(this._analysisView.viewData)))])},p._destroyListeners=function(){this._listenerHandles=i.destroyMaybe(this._listenerHandles)},e._createClass(u,[{key:"state",get:function(){return this._state}},{key:"analysisView",get:function(){return this._analysisView}},{key:"layerView",get:function(){return this._layerView}},{key:"validMeasurement",get:function(){return"ready"===this.state&&this._layerViewData.validMeasurement}},{key:"path",get:function(){return"ready"!==this.state?null:this._layerViewData.path}},{key:"unit",set:function(e){this._unit=e,"ready"===this.state&&(this.layerView.unit=e)}},{key:"requiresCursorPoint",get:function(){return("initial"===this._model.state||"drawing"===this._model.state)&&this._model.active}},{key:"visible",get:function(){return this._visible},set:function(e){e?this.show():this.hide()}},{key:"mode",get:function(){return this._mode},set:function(e){switch(this._state){case"pending":this._mode=e;break;case"ready":this._mode=e,this._analysisView.mode=e}}},{key:"cursorPoint",get:function(){return this._cursorPoint},set:function(e){switch(this._state){case"pending":this._cursorPoint=e;break;case"ready":this._cursorPoint=e,this._layerViewData.cursorPoint=e}}},{key:"lastDraggedVertex",get:function(){return this._lastDraggedVertex},set:function(e){switch(this._state){case"pending":this._lastDraggedVertex=e;break;case"ready":this._lastDraggedVertex=e,this._layerViewData.lastDraggedVertex=e}}},{key:"testData",get:function(){const e=this._laserLine.testData;return{labels:this._analysisView.testData.labels,laserLineRenderer:i.isSome(e)?{heightManifoldEnabled:e.heightManifoldEnabled,heightManifoldTarget:e.heightManifoldTarget,pointDistanceEnabled:e.pointDistanceEnabled,pointDistanceOrigin:e.pointDistanceOrigin,pointDistanceTarget:e.pointDistanceTarget,lineVerticalPlaneEnabled:e.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}}]),u}();return p._handleGeometry=u.createSphereGeometry(1,32,32),function(e){let t=function(){};e.PickRequest=t;let i=function(e=null,t=null,i=null){this.type=e,this.scenePoint=t,this.mapPoint=i};e.PickResult=i}(p||(p={})),p}));
