/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import e from"../../../../../core/Handles.js";import{destroyMaybe as i,isNone as s,isSome as a,unwrap as o}from"../../../../../core/maybe.js";import{watch as n,syncAndInitial as r}from"../../../../../core/reactiveUtils.js";import{property as l}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../../../core/accessorSupport/decorators/subclass.js";import{clonePoint as h}from"../../../../../layers/graphics/hydratedFeatures.js";import{isPrimaryPointerAction as m}from"../../../analysis/support/measurementUtils.js";import{screenToMap3D as d,hideManipulatorWhileDragging as u}from"../../editingTools/dragEventPipeline3D.js";import c from"./AreaMeasurement3DView.js";import{PickRequest as y}from"../support/PickRequest.js";import{AnalysisToolBase as w}from"../../../../interactive/AnalysisToolBase.js";import{createManipulatorDragEventPipeline as g}from"../../../../interactive/dragEventPipeline.js";import{createScreenPointFromEvent as v}from"../../../../support/screenUtils.js";let V=class extends w{constructor(t){super(t),this._handles=new e,this.polygonState="initial",this.analysisViewData=null}initialize(){const{view:t,analysisViewData:e,manipulators:i,visible:s}=this;this.measurementView=new c({view:t,analysisViewData:e,toolState:this,manipulators:i,visible:s}),this._setupManipulators(),this._handles.add(n((()=>this.state),(t=>{"measured"===t&&this.finishToolCreation()}),r))}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._handles=i(this._handles)}get state(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.validMeasurement&&"editing"!==this.polygonState?"measured":"measuring"}get cursor(){return"ready"===this.state||"drawing"===this.polygonState?"crosshair":null}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this.analysisViewData.cursorPoint=null}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=t=>`manipulator-${t}`,e=t=>t.events.on("grab-changed",(()=>{if(this.analysisViewData.validMeasurement){const t=this.manipulators.some((t=>t.manipulator.grabbing));this.polygonState=t?"editing":"measured"}})),i=(i,s)=>{this._handles.add([g(s,((t,e,i)=>{const s=u(t),a=o(t.metadata);e.next(s).next(d(this.view)).next((e=>{t.location=e.mapEnd,this.analysisViewData.path.setVertexPosition(a,h(e.mapEnd))}));const n=h(this.analysisViewData.path.getVertexPositionAsPoint(a));i.next(s).next((()=>{this.analysisViewData.path.setVertexPosition(a,n),t.location=n}))})),e(s)],t(i))},s=e=>{this._handles.remove(t(e))};this.manipulators.forEach((({id:t,manipulator:e})=>{i(t,e)})),this._handles.add([this.manipulators.on("after-add",(({item:{id:t,manipulator:e}})=>{i(t,e)})),this.manipulators.on("after-remove",(({item:{id:t}})=>{s(t)}))])}_handleImmediateDoubleClick(t){m(t)&&("drawing"===this.polygonState&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){"editing"===this.polygonState&&t.stopPropagation()}_handleImmediateClick(t){if(!m(t))return;const e=v(t);if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(e))return this.analysisViewData.cursorPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const i=this.measurementView.vertexHandleAt(e,t.pointerType);if(s(i)){if(this._addVertexAt(e))return this.analysisViewData.cursorPoint=null,void t.stopPropagation()}else 0===i.index&&(this.finishMeasurement(),t.stopPropagation());break}}"mouse"===t.pointerType&&this._hoverAt(e)}_handlePointerMove(t){if("mouse"===t.pointerType){const e=v(t);this._hoverAt(e)}}_handleKeyDown(t){"Enter"===t.key&&"drawing"===this.polygonState&&(this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){if(this.active&&("initial"===this.polygonState||"drawing"===this.polygonState)){const e=this._pick(t);a(e)&&(this.analysisViewData.cursorPoint=e.mapPoint)}else this.analysisViewData.cursorPoint=null}_addVertexAt(t){const e=this._pick(t);return!(!a(e)||!a(e.mapPoint))&&(this.analysisViewData.path.add(e.mapPoint),!0)}_pick(t){const e=new y(t);return this.measurementView.pick(e)}};t([l({readOnly:!0})],V.prototype,"state",null),t([l()],V.prototype,"polygonState",void 0),t([l({readOnly:!0})],V.prototype,"cursor",null),t([l()],V.prototype,"measurementView",void 0),t([l({constructOnly:!0})],V.prototype,"view",void 0),t([l()],V.prototype,"analysis",void 0),t([l({constructOnly:!0})],V.prototype,"analysisViewData",void 0),V=t([p("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],V);const f=V;export{f as default};
