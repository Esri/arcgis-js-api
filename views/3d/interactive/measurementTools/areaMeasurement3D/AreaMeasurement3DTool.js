/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/Handles","../../../../../core/Logger","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/subclass","../../../../../layers/graphics/hydratedFeatures","../../editingTools/dragEventPipeline3D","./AreaMeasurement3DView","../support/measurementUtils","../../../../interactive/dragEventPipeline","../../../../interactive/InteractiveToolBase","../../../../support/screenUtils"],(function(e,t,i,n,s,a,r,o,u,c,l,h,m,p,d,y,w,g){"use strict";const _=n.getLogger("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool");let V=function(t){function n(e){var n;return(n=t.call(this,e)||this)._handles=new i,n._tempPickRequest=new p.PickRequest,n.polygonState="initial",n}e._inheritsLoose(n,t);var r=n.prototype;return r.initialize=function(){this.measurementView=new p({view:this.view,analysis:this.analysis,toolState:this,manipulators:this.manipulators}),this.measurementView.when().then((()=>this._initialize()))},r._initialize=function(){this.destroyed?_.error("Calling _initialized() on destroyed AreaMeasurement3DTool."):(this._setupManipulators(),this.visible&&this.measurementView.show(),this._handles.add(a.react((()=>this.state),(e=>{"measured"===e?this.complete():this.finishToolCreation()}),a.sync)),"measured"===this.state?this.complete():this.startToolCreation())},r.destroy=function(){this.attached&&this.detach(),this.measurementView.destroy(),this._set("measurementView",null),this._handles=s.destroyMaybe(this._handles)},r.onShow=function(){this.created&&this.measurementView.show()},r.onHide=function(){this.created&&this.measurementView.hide()},r.onDetach=function(){switch(this.toolState){case"created":case"creating":this.measurementView.path&&this.measurementView.path.clear(),this.measurementView.cursorPoint=null,this.polygonState="initial"}},r.onInputEvent=function(e){switch(e.type){case"immediate-double-click":this._handleImmediateDoubleClick(e);break;case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}},r._setupManipulators=function(){const e=e=>`manipulator-${e}`;let t=0;const i=e=>i=>("start"===i.action&&(t++,this.measurementView.lastDraggedVertex=s.unwrap(this.measurementView.manipulatorToVertex(e)),"measured"===this.polygonState&&(this.polygonState="editing")),i),n=()=>e=>"end"===e.action?(t--,0===t&&"editing"===this.polygonState&&(this.polygonState="measured"),null):e,a=(t,a)=>{this._handles.add([y.createManipulatorDragEventPipeline(a,((e,t,a)=>{const r=m.hideManipulatorWhileDragging(e),o=s.unwrap(this.measurementView.manipulatorToVertex(e));t.next(i(e)).next(r).next(n()).next(this.measurementView.screenToMap3D()).next((t=>{e.location=t.mapEnd,this.measurementView.path.setVertexPosition(o,h.clonePoint(t.mapEnd))}));const u=h.clonePoint(this.measurementView.path.getVertexPositionAsPoint(o));a.next(r).next((()=>{this.measurementView.path.setVertexPosition(o,u),e.location=u}))}))],e(t))},r=t=>{this._handles.remove(e(t))};this.manipulators.forEach((({id:e,manipulator:t})=>{a(e,t)})),this._handles.add([this.manipulators.on("after-add",(({item:{id:e,manipulator:t}})=>{a(e,t)})),this.manipulators.on("after-remove",(({item:{id:e}})=>{r(e)}))])},r._handleImmediateDoubleClick=function(e){d.isPrimaryPointerAction(e)&&("drawing"===this.polygonState&&this.measurementView.finishMeasurement(),e.stopPropagation())},r._handleDrag=function(e){"editing"===this.polygonState&&e.stopPropagation()},r._handleImmediateClick=function(e){if(!d.isPrimaryPointerAction(e))return;const t=g.createScreenPointFromEvent(e);if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(t))return this.measurementView.cursorPoint=null,this.polygonState="drawing",void e.stopPropagation();break;case"drawing":{const i=this.measurementView.vertexHandleAt(t,e.pointerType);if(s.isNone(i)){if(this._addVertexAt(t))return this.measurementView.cursorPoint=null,void e.stopPropagation()}else 0===i.index&&(this.measurementView.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)},r._handlePointerMove=function(e){if("mouse"===e.pointerType){const t=g.createScreenPointFromEvent(e);this._hoverAt(t)}},r._handleKeyDown=function(e){"Enter"===e.key&&"drawing"===this.polygonState&&(this.measurementView.finishMeasurement(),e.stopPropagation())},r._hoverAt=function(e){if(this.measurementView.requiresCursorPoint){const t=this._pick(e);t.mapPoint&&(this.measurementView.cursorPoint=t.mapPoint)}else this.measurementView.cursorPoint=null},r._addVertexAt=function(e){const t=this._pick(e);return!!t.mapPoint&&(this.measurementView.path.add(t.mapPoint),!0)},r._pick=function(e){const t=this._tempPickRequest;return t.screenPoint=e,this.measurementView.pick(t)},e._createClass(n,[{key:"state",get:function(){var e,t;switch(this.polygonState){case"initial":return(null==(e=this.measurementView)||null==(t=e.path)?void 0:t.numVertices)>=1?"measuring":"ready";case"drawing":case"editing":return"measuring";case"measured":return"measured"}}},{key:"cursor",get:function(){return this.destroyed?(_.error("Can't query the cursor of a destroyed tool."),null):!this.active||"initial"!==this.polygonState&&"drawing"!==this.polygonState?null:"crosshair"}}]),n}(w.InteractiveToolBase);t.__decorate([r.property({readOnly:!0})],V.prototype,"state",null),t.__decorate([r.property()],V.prototype,"polygonState",void 0),t.__decorate([r.property({readOnly:!0})],V.prototype,"cursor",null),t.__decorate([r.property()],V.prototype,"measurementView",void 0),t.__decorate([r.property({constructOnly:!0})],V.prototype,"view",void 0),t.__decorate([r.property()],V.prototype,"analysis",void 0),V=t.__decorate([l.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],V);return V}));
