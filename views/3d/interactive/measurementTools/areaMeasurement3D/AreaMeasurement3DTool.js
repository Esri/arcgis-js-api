/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/Handles","../../../../../core/maybe","../../../../../core/memoize","../../../../../core/promiseUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/WatchUpdatingTracking","../../../../../geometry/Point","../../../../../layers/graphics/hydratedFeatures","../../../analysis/support/measurementUtils","../../SnappingVisualizer3D","../../editingTools/dragEventPipeline3D","./AreaMeasurement3DView","../support/PickRequest","../../../../interactive/AnalysisToolBase","../../../../interactive/coordinateHelper","../../../../interactive/dragEventPipeline","../../../../interactive/ManipulatorCollection","../../../../interactive/editGeometry/EditGeometry","../../../../interactive/editGeometry/EditGeometryOperations","../../../../interactive/snapping/SceneSnappingManagerPool","../../../../interactive/snapping/SnappingContext","../../../../interactive/snapping/SnappingDragPipelineStep","../../../../interactive/snapping/SnappingOperation","../../../../interactive/snapping/snappingUtils","../../../../support/screenUtils"],(function(e,t,n,i,a,s,o,r,p,l,c,d,g,u,h,m,y,_,w,v,S,f,P,M,V,D,k,b,x,O,A){"use strict";let C=function(t){function r(e){var i;return(i=t.call(this,e)||this)._handles=new n,i._updatingHandles=new d.WatchUpdatingTracking,i.polygonState="initial",i.manipulators=new P.ManipulatorCollection,i._getSnappingContext=a.memoize((e=>new k.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new V.EditGeometryOperations(new M.EditGeometry("point",S.createCoordinateHelper(!0,!1,i.view.spatialReference))),visualizer:new m.SnappingVisualizer3D}))),i}e._inheritsLoose(r,t);var p=r.prototype;return p.initialize=function(){const{view:e,analysisViewData:t,manipulators:n,visible:a}=this;this.measurementView=new _({view:e,analysisViewData:t,toolState:this,manipulators:n,visible:a});const r=D.acquire(e);this._snappingManagerResult=r,this._handles.add(r),this._snappingOperation=new x.SnappingOperation({view:e}),this._updatingHandles.add((()=>this.stagedPoint),(e=>{this.analysisViewData.cursorPoint=i.isSome(e)?u.clonePoint(e,new g):null}),o.syncAndInitial),O.setupSnappingToggleHandles(this,(()=>{const e=i.unwrapOr(this.view.inputManager.latestPointerType,"mouse"),t=this._getSnappingContext(e);this._updatingHandles.addPromise(s.ignoreAbortErrors(this._snappingOperation.resnap(this._snappingManager,t)))})),this._setupManipulators(),this._handles.add(o.watch((()=>this.state),(e=>{"measured"===e&&this.finishToolCreation()}),o.syncAndInitial))},p.destroy=function(){this.measurementView.destroy(),this._set("measurementView",null),this._handles=i.destroyMaybe(this._handles),this._updatingHandles=i.destroyMaybe(this._updatingHandles)},p.finishMeasurement=function(){const{path:e}=this.analysisViewData;e.numVertices<3?(e.clear(),this.polygonState="initial"):(e.close(),this.polygonState="measured"),this._resetSnappingState()},p.onShow=function(){this.measurementView.show()},p.onHide=function(){this.measurementView.hide()},p.onDeactivate=function(){this._resetSnappingState()},p.onInputEvent=function(e){switch(e.type){case"immediate-double-click":this._handleImmediateDoubleClick(e);break;case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}},p._setupManipulators=function(){const e=e=>e.events.on("grab-changed",(()=>{if(this.analysisViewData.validMeasurement){const e=this.manipulators.some((e=>e.manipulator.grabbing));this.polygonState=e?"editing":"measured"}})),t=t=>{this._handles.add([f.createManipulatorDragEventPipeline(t,((e,t,n,i)=>{const a=y.hideManipulatorWhileDragging(e),s=e.metadata,o=this._snappingManager,r=this._getSnappingContext(i),p=this._updatingHandles,{snappingStep:l,cancelSnapping:c}=b.createSnapDragEventPipelineStep({snappingManager:o,snappingContext:r,updatingHandles:p});n=n.next(a).next((t=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(s,d),e.location=d,t))).next(c),t.next(a).next(y.screenToMap3D(this.view)).next(...l).next((t=>{e.location=t.mapEnd,this.analysisViewData.lastDraggedVertex="end"===t.action?null:s,this.analysisViewData.path.setVertexPosition(s,u.clonePoint(t.mapEnd))}));const d=u.clonePoint(this.analysisViewData.path.getVertexPositionAsPoint(s))})),e(t)],t)};this.manipulators.forEach((({manipulator:e})=>{t(e)})),this._handles.add([this.manipulators.on("after-add",(({item:{manipulator:e}})=>{t(e)})),this.manipulators.on("after-remove",(({item:{manipulator:e}})=>this._handles.remove(e)))])},p._handleImmediateDoubleClick=function(e){h.isPrimaryPointerAction(e)&&("drawing"===this.polygonState&&this.finishMeasurement(),e.stopPropagation())},p._handleDrag=function(e){"editing"===this.polygonState&&e.stopPropagation()},p._handleImmediateClick=function(e){if(!h.isPrimaryPointerAction(e))return;const t=A.createScreenPointFromEvent(e),{pointerType:n}=e;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(t,n))return this.stagedPoint=null,this.polygonState="drawing",void e.stopPropagation();break;case"drawing":{const a=this.measurementView.vertexHandleAt(t,n);if(i.isNone(a)){if(this._addVertexAt(t,n))return this.stagedPoint=null,void e.stopPropagation()}else 0===a.index&&(this.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)},p._handlePointerMove=function(e){if("mouse"===e.pointerType){const t=A.createScreenPointFromEvent(e);this._hoverAt(t)}},p._handleKeyDown=function(e){"Enter"===e.key&&"drawing"===this.polygonState&&(this.finishMeasurement(),e.stopPropagation())},p._hoverAt=function(e){const{polygonState:t}=this;if(this.active&&("initial"===t||"drawing"===t)){const t=this._pick(e);if(i.isSome(t)&&i.isSome(t.mapPoint)){const e=this._getSnappingContext("mouse");this._updatingHandles.addPromise(s.ignoreAbortErrors(this._snappingOperation.snap({point:t.mapPoint},this._snappingManager,e)))}}else this.stagedPoint=null},p._addVertexAt=function(e,t){const n=this._pick(e);if(i.isSome(n)&&i.isSome(n.mapPoint)){const{mapPoint:e}=n,i=this._getSnappingContext(t),a=this._snappingOperation.update({point:e},this._snappingManager,i),s=u.clonePoint(a,new g);return this.analysisViewData.path.add(s),!0}return!1},p._pick=function(e){const t=new w.PickRequest(e);return this.measurementView.pick(t)},p._resetSnappingState=function(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null},e._createClass(r,[{key:"_snappingManager",get:function(){return this._snappingManagerResult.snappingManager}},{key:"state",get:function(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.validMeasurement&&"editing"!==this.polygonState?"measured":"measuring"}},{key:"cursor",get:function(){return"ready"===this.state||"drawing"===this.polygonState?"crosshair":null}},{key:"updating",get:function(){return this._updatingHandles.updating||this._snappingManager.updating}},{key:"stagedPoint",get:function(){return this._snappingOperation.stagedPoint},set:function(e){this._snappingOperation.stagedPoint=e}},{key:"snappingOptions",get:function(){return this._snappingManager.options}},{key:"test",get:function(){return{snappingManager:this._snappingManager}}}]),r}(v.AnalysisToolBase);t.__decorate([r.property({readOnly:!0})],C.prototype,"state",null),t.__decorate([r.property()],C.prototype,"polygonState",void 0),t.__decorate([r.property({readOnly:!0})],C.prototype,"cursor",null),t.__decorate([r.property()],C.prototype,"measurementView",void 0),t.__decorate([r.property({constructOnly:!0})],C.prototype,"view",void 0),t.__decorate([r.property({constructOnly:!0})],C.prototype,"analysis",void 0),t.__decorate([r.property({constructOnly:!0})],C.prototype,"analysisViewData",void 0),t.__decorate([r.property({readOnly:!0})],C.prototype,"manipulators",void 0),t.__decorate([r.property()],C.prototype,"updating",null),t.__decorate([r.property()],C.prototype,"stagedPoint",null),t.__decorate([r.property()],C.prototype,"snappingOptions",null),C=t.__decorate([c.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],C);return C}));
