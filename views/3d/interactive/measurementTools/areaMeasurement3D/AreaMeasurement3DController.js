/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../../core/maybe","../../../../../core/Handles","../../../../support/screenUtils","../../../../../layers/graphics/hydratedFeatures","../../../../interactive/dragEventPipeline","../../editingTools/dragEventPipeline3D","./AreaMeasurement3DView"],(function(e,t,i,n,o,a,s){"use strict";function r(e){return"mouse"!==e.pointerType||0===e.button}return function(){function d(e,i,n){this._manipulators=n,this._handles=new t,this._tempPickRequest=new s.PickRequest,this.model=e,this.view=i,this.model.reset(),this._setupManipulators()}var h=d.prototype;return h.destroy=function(){this._handles.destroy(),this._handles=null},h.handleInputEvent=function(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}},h._setupManipulators=function(){const t=e=>`manipulator-${e}`;let i=0;const s=t=>n=>("start"===n.action&&(i++,this.model.lastDraggedVertex=e.unwrap(this.view.manipulatorIdToVertexId(t)),"measured"===this.model.state&&(this.model.state="editing")),n),d=()=>e=>"end"===e.action?(i--,0===i&&"editing"===this.model.state&&(this.model.state="measured"),null):e,h=(i,h)=>{this._handles.add([o.createManipulatorDragEventPipeline(h,((t,o,r)=>{const h=a.hideManipulatorWhileDragging(t),l=e.unwrap(this.view.manipulatorIdToVertexId(i));o.next(s(i)).next(h).next(d()).next(this.view.screenToMap3D()).next((e=>{t.location=e.mapEnd,this.model.path.update(l,n.clonePoint(e.mapEnd))}));const c=n.clonePoint(this.model.path.vertex(l));r.next(h).next((()=>{this.model.path.update(l,c),t.location=c}))})),h.events.on("double-click",(e=>{r(e)&&("drawing"===this.model.state&&this.model.finishMeasurement(),e.stopPropagation())}))],t(i))},l=e=>{this._handles.remove(t(e))};this._manipulators.forEach((({id:e,manipulator:t})=>{h(e,t)})),this._handles.add([this._manipulators.on("after-add",(({item:{id:e,manipulator:t}})=>{h(e,t)})),this._manipulators.on("after-remove",(({item:{id:e}})=>{l(e)}))])},h._handleDrag=function(e){"editing"===this.model.state&&e.stopPropagation()},h._handleImmediateClick=function(t){if(!r(t))return;const n=i.createScreenPointFromEvent(t);if(this.model.active)switch(this.model.state){case"initial":this._addVertexAt(n)&&(this.model.state="drawing",t.stopPropagation());break;case"drawing":{const i=this.view.vertexHandleAt(n,t.pointerType);if(e.isNone(i)){if(this._addVertexAt(n))return}else 0===i&&(this.model.finishMeasurement(),t.stopPropagation());break}}"mouse"===t.pointerType&&this._hoverAt(n)},h._handlePointerMove=function(e){if("mouse"===e.pointerType){const t=i.createScreenPointFromEvent(e);this._hoverAt(t)}},h._handleKeyDown=function(e){"Enter"===e.key&&"drawing"===this.model.state&&(this.model.finishMeasurement(),e.stopPropagation())},h._hoverAt=function(e){if(this.view.requiresCursorPoint){const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}else this.model.cursorPoint=null},h._addVertexAt=function(e){const t=this._pick(e);return!!t.mapPoint&&(this.model.path.add(t.mapPoint),!0)},h._pick=function(e){const t=this._tempPickRequest;return t.screenPoint=e,this.view.pick(t)},d}()}));
