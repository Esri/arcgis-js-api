/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/maybe","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../core/Accessor","../../../../../intl/locale","../../../../../core/mathUtils","../../../../../intl/messages","../../../../../intl","../../../../../core/Handles","../../../../../core/watchUtils","../../../../../geometry/projectionEllipsoid","../../../../../core/unitUtils","../../../../../geometry/projection","../../../../../core/Quantity","../../../../../core/quantityFormatUtils","../../graphics/AreaMeasurement3D","./AreaMeasurementPathHelper","../support/measurementUtils","./MeasurementData","../support/UnitNormalizer"],(function(e,t,r,a,n,s,i,o,c,u,h,d,p,l,m,g,y,_,f,L,M,v,D,S,P,w,U,A){"use strict";let b=function(t){function r(){var e;return(e=t.apply(this,arguments)||this)._unitNormalizer=new A,e._measurementData=new U,e._handles=new y,e.dataObject=new S.AreaMeasurement3D,e.path=new P.AreaMeasurement3DPathHelper,e.cursorPoint=null,e.state="initial",e.lastDraggedVertex=null,e.mode="auto",e.unit="metric",e.active=!1,e.fittingSettings={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},e.geodesicMeasurementDistanceThreshold=1e5,e}e._inheritsLoose(r,t);var n=r.prototype;return n.initialize=function(){this.path.model=this.dataObject,m.fetchMessageBundle("esri/core/t9n/Units").then((e=>{this.messages=e})),this._handles.add(p.onLocaleChange((async()=>{this.messages=await m.fetchMessageBundle("esri/core/t9n/Units")}))),this._handles.add(_.whenTrue(this.sceneView,"ready",(()=>{const{spatialReference:e}=this.sceneView,t=f.getSphericalPCPF(e),r=t===f.SphericalECEFSpatialReference?f.WGS84ECEFSpatialReference:t,a=!e||M.canProjectWithoutEngine(e,r)?r:e;this._worldSpatialReference=a,this._unitNormalizer.spatialReference=a,this.path.view=this.sceneView})),"scene-view"),this.reset(),this._handles.add(this.path.on("clear",(()=>{this.notifyChange("numVertices"),this._updateMeasurementData()}))),this._handles.add(this.path.on("vertex-update",(()=>{this.notifyChange("numVertices"),this._updateMeasurementData()}))),this._handles.add(this.watch("state",(()=>this._updateMeasurementData()),!0)),this._handles.add(this.watch("fittingSettings",(()=>this._updateMeasurementData())))},n.destroy=function(){this._handles.destroy(),this._handles=null},n._updateMeasurementData=function(){const e=this._measurementData;e.update(this.path,this.sceneView,this._unitNormalizer,this.validMeasurement,this.sceneView.renderSpatialReference,this._worldSpatialReference,this.fittingSettings),this.dataObject.result={area:e.area,geodesicArea:e.geodesicArea,pathLength:e.pathLength,geodesicPathLength:e.geodesicPathLength,perimeterLength:e.perimeterLength},this.notifyChange("measurementData")},n.reset=function(){this.clearMeasurement(),this._updateMeasurementData()},n.clearMeasurement=function(){this.path.clear(),this.state="initial",this.cursorPoint=null},n.finishMeasurement=function(){this.path.numVertices<3?this.clearMeasurement():this.state="measured"},n._preferredAreaUnit=function(e,t){switch(t){case"metric":return L.preferredMetricAreaUnit(e.value,e.unit);case"imperial":return L.preferredImperialAreaUnit(e.value,e.unit);default:return t}},n._preferredLengthUnit=function(e,t){const r=this._deriveLengthUnitFromAreaUnit(t);switch(r){case"metric":return L.preferredMetricLengthUnit(e.value,e.unit);case"imperial":return L.preferredImperialLengthUnit(e.value,e.unit);default:return r}},n._toPreferredAreaUnit=function(e,t){return e.toUnit(this._preferredAreaUnit(e,t))},n._toPreferredLengthUnit=function(e,t){return e.toUnit(this._preferredLengthUnit(e,t))},n._formatAreaLabel=function(e,t,r){return e&&t&&D.formatDecimal(e,t,this._preferredAreaUnit(t,r))},n._formatLengthLabel=function(e,t,r){return e&&t&&D.formatDecimal(e,t,this._preferredLengthUnit(t,r))},n._deriveLengthUnitFromAreaUnit=function(e){switch(e){case"metric":return"metric";case"imperial":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"acres":return"imperial";case"ares":case"hectares":return"metric"}throw new Error("unhandled area unit")},e._createClass(r,[{key:"validMeasurement",get:function(){return this.numVertices>=3&&"measured"===this.state||"editing"===this.state}},{key:"numVertices",get:function(){return this.path.numVertices}},{key:"measurementData",get:function(){return this._measurementData}},{key:"area",get:function(){return this.measurementData.area}},{key:"geodesicArea",get:function(){return this.measurementData.geodesicArea}},{key:"areaLabel",get:function(){return this._formatAreaLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicArea:this.measurementData.area,this.unit)}},{key:"pathLength",get:function(){return this.measurementData.pathLength}},{key:"geodesicPathLength",get:function(){return this.measurementData.geodesicPathLength}},{key:"pathLengthLabel",get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.pathLength,this.unit)}},{key:"perimeterLength",get:function(){return this.measurementData.perimeterLength}},{key:"geodesicPerimeterLength",get:function(){return this.measurementData.geodesicPathLength}},{key:"perimeterLengthLabel",get:function(){return this.measurementData.perimeterLength&&this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.perimeterLength,this.unit)}},{key:"cursorSegmentLength",get:function(){const e=this.path.lastPoint;return a.isSome(e)&&a.isSome(this.cursorPoint)?new v(this._unitNormalizer.normalizeDistance(w.segmentLengthEuclidean(e,this.cursorPoint,this._worldSpatialReference)),"meters"):null}},{key:"geodesicCursorSegmentLength",get:function(){const e=this.path.lastPoint;return a.isSome(e)&&a.isSome(this.cursorPoint)?new v(w.segmentLengthGeodesic(e,this.cursorPoint),"meters"):null}},{key:"cursorSegmentLengthLabel",get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.geodesicCursorSegmentLength:this.cursorSegmentLength,this.unit)}},{key:"viewData",get:function(){const e=this.measurementData,t="geodesic"===this.measurementMode,r=t?this.geodesicArea:this.area;let a=1;if(r){const e=this._toPreferredAreaUnit(r,this.unit);a=l.nextHighestPowerOfTen(Math.sqrt(e.value)/Math.sqrt(300)),a*=Math.sqrt(L.convertUnit(1,e.unit,"square-meters")),a/=this._unitNormalizer.normalizeDistance(1)}return{validMeasurement:this.validMeasurement,path:this.path,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:t?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:t?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:t?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:this.validMeasurement?0:this.path.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:a}}},{key:"measurementMode",get:function(){let e=this.mode;if("auto"===e){e="euclidean";(this.geodesicPathLength?this.geodesicPathLength.value:0)+(!this.validMeasurement&&this.geodesicCursorSegmentLength?this.geodesicCursorSegmentLength.value:0)>this.geodesicMeasurementDistanceThreshold&&(e="geodesic")}return null==this.geodesicPathLength&&(e="euclidean"),e}}]),r}(d);return t.__decorate([i.property()],b.prototype,"messages",void 0),t.__decorate([i.property()],b.prototype,"dataObject",void 0),t.__decorate([i.property({constructOnly:!0})],b.prototype,"sceneView",void 0),t.__decorate([i.property({readOnly:!0})],b.prototype,"path",void 0),t.__decorate([i.property()],b.prototype,"cursorPoint",void 0),t.__decorate([i.property()],b.prototype,"state",void 0),t.__decorate([i.property()],b.prototype,"lastDraggedVertex",void 0),t.__decorate([i.property()],b.prototype,"mode",void 0),t.__decorate([i.property()],b.prototype,"unit",void 0),t.__decorate([i.property()],b.prototype,"active",void 0),t.__decorate([i.property()],b.prototype,"fittingSettings",void 0),t.__decorate([i.property({readOnly:!0})],b.prototype,"validMeasurement",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"numVertices",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"measurementData",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"area",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"geodesicArea",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"areaLabel",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"pathLength",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"geodesicPathLength",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"pathLengthLabel",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"perimeterLength",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"geodesicPerimeterLength",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"perimeterLengthLabel",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"cursorSegmentLength",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"geodesicCursorSegmentLength",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"cursorSegmentLengthLabel",null),t.__decorate([i.property({readOnly:!0})],b.prototype,"viewData",null),t.__decorate([i.property()],b.prototype,"geodesicMeasurementDistanceThreshold",void 0),t.__decorate([i.property({readOnly:!0})],b.prototype,"measurementMode",null),b=t.__decorate([o.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DModel")],b),b}));
