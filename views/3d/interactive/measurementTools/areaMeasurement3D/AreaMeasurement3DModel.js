/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../core/Accessor","../../../../../intl/locale","../../../../../core/mathUtils","../../../../../intl/messages","../../../../../intl","../../../../../core/Handles","../../../../../core/watchUtils","../../../../../geometry/projectionEllipsoid","../../../../../core/unitUtils","../../../../../geometry/projection","../../../../../core/Quantity","../../../../../core/quantityFormatUtils","../../graphics/AreaMeasurement3D","../support/measurementUtils","./MeasurementData","../support/setUtils","./PathChanges","../support/Path","../support/UnitNormalizer"],(function(e,t,r,a,n,s,i,o,h,d,c,u,p,l,m,g,_,y,f,L,v,D,C,M,O,P,S,w,b){"use strict";let A=function(t){function r(){var e;return(e=t.apply(this,arguments)||this)._unitNormalizer=new b,e._measurementData=new O,e._measurementDataChanges=new S,e._viewDataChanges=new S,e._handles=new g,e.dataObject=new C.AreaMeasurement3D,e.path=new w,e.pathVersion=0,e.cursorPoint=null,e.state="initial",e.lastDraggedVertex=null,e.mode="auto",e.unit="metric",e.active=!1,e.maxRelativeErrorCoplanar=.005,e.maxRelativeErrorAlmostCoplanar=.01,e.verticalAngleThreshold=80,e.geodesicMeasurementDistanceThreshold=1e5,e}e._inheritsLoose(r,t);var a=r.prototype;return a.initialize=function(){l.fetchMessageBundle("esri/core/t9n/Units").then((e=>{this.messages=e})),this._handles.add(u.onLocaleChange((async()=>{this.messages=await l.fetchMessageBundle("esri/core/t9n/Units")}))),this._handles.add(_.whenTrue(this.sceneView,"ready",(()=>{const{spatialReference:e}=this.sceneView,t=y.getSphericalPCPF(e),r=t===y.SphericalECEFSpatialReference?y.WGS84ECEFSpatialReference:t,a=!e||L.canProjectWithoutEngine(e,r)?r:e;this._worldSpatialReference=a,this._unitNormalizer.spatialReference=a})),"scene-view"),this.reset();const e=()=>{this._set("pathVersion",this.pathVersion+1)};this._handles.add(this.path.on("cleared",(()=>{this._measurementDataChanges.fullChange(),this._set("pathVersion",0),this.dataObject.geometry=null}))),this._handles.add(this.path.on("vertex-added",(()=>{this._measurementDataChanges.fullChange(),e(),this.dataObject.geometry=this.path.toPolygon()}))),this._handles.add(this.path.on("vertex-removed",(()=>{this._measurementDataChanges.fullChange(),e(),this.dataObject.geometry=this.path.toPolygon()}))),this._handles.add(this.path.on("vertex-updated",(t=>{this._measurementDataChanges.incrementalChange(t.index),e(),this.dataObject.geometry=this.path.toPolygon()}))),this._handles.add(this.dataObject.watch("geometry",(()=>{const e=this.measurementData;this.dataObject.result={area:e.area,geodesicArea:e.geodesicArea,pathLength:e.pathLength,geodesicPathLength:e.geodesicPathLength,perimeterLength:e.perimeterLength}})))},a.destroy=function(){this._handles.destroy(),this._handles=null},a.reset=function(){this.clearMeasurement()},a.clearMeasurement=function(){this.path.clear(),this.state="initial",this.cursorPoint=null},a.finishMeasurement=function(){this.path.length<3?this.clearMeasurement():(this._measurementDataChanges.fullChange(),this.state="measured")},a._preferredAreaUnit=function(e,t){switch(t){case"metric":return f.preferredMetricAreaUnit(e.value,e.unit);case"imperial":return f.preferredImperialAreaUnit(e.value,e.unit);default:return t}},a._preferredLengthUnit=function(e,t){const r=this._deriveLengthUnitFromAreaUnit(t);switch(r){case"metric":return f.preferredMetricLengthUnit(e.value,e.unit);case"imperial":return f.preferredImperialLengthUnit(e.value,e.unit);default:return r}},a._toPreferredAreaUnit=function(e,t){return e.toUnit(this._preferredAreaUnit(e,t))},a._toPreferredLengthUnit=function(e,t){return e.toUnit(this._preferredLengthUnit(e,t))},a._formatAreaLabel=function(e,t,r){return e&&t&&D.formatDecimal(e,t,this._preferredAreaUnit(t,r))},a._formatLengthLabel=function(e,t,r){return e&&t&&D.formatDecimal(e,t,this._preferredLengthUnit(t,r))},a._deriveLengthUnitFromAreaUnit=function(e){switch(e){case"metric":return"metric";case"imperial":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"acres":return"imperial";case"ares":case"hectares":return"metric"}throw new Error("unhandled area unit")},e._createClass(r,[{key:"validMeasurement",get:function(){return this.path.length>=3&&"measured"===this.state||"editing"===this.state}},{key:"isMeasuring",get:function(){return this.path.length>=1}},{key:"measurementData",get:function(){this._viewDataChanges.merge(this._measurementDataChanges),this._measurementDataChanges.clear();const e=P.clone(this._measurementData.intersectingSegments),t=P.clone(this._measurementData.geodesicIntersectingSegments);return this._measurementData.update(this.path,this.sceneView,this._unitNormalizer,this.validMeasurement,this.sceneView.renderSpatialReference,this._worldSpatialReference,{maxRelativeErrorCoplanar:this.maxRelativeErrorCoplanar,maxRelativeErrorAlmostCoplanar:this.maxRelativeErrorAlmostCoplanar,verticalAngleThreshold:this.verticalAngleThreshold}),M.compareSets(this._measurementData.intersectingSegments,e)||this._viewDataChanges.fullChange(),M.compareSets(this._measurementData.geodesicIntersectingSegments,t)||this._viewDataChanges.fullChange(),this._measurementData}},{key:"area",get:function(){return this.measurementData.area}},{key:"geodesicArea",get:function(){return this.measurementData.geodesicArea}},{key:"areaLabel",get:function(){return this._formatAreaLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicArea:this.measurementData.area,this.unit)}},{key:"pathLength",get:function(){return this.measurementData.pathLength}},{key:"geodesicPathLength",get:function(){return this.measurementData.geodesicPathLength}},{key:"pathLengthLabel",get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.pathLength,this.unit)}},{key:"perimeterLength",get:function(){return this.measurementData.perimeterLength}},{key:"geodesicPerimeterLength",get:function(){return this.measurementData.geodesicPathLength}},{key:"perimeterLengthLabel",get:function(){return this.measurementData.perimeterLength&&this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.perimeterLength,this.unit)}},{key:"cursorSegmentLength",get:function(){return this.path.back&&this.cursorPoint&&new v(this._unitNormalizer.normalizeDistance(M.segmentLengthEuclidean(this.path.back,this.cursorPoint,this._worldSpatialReference)),"meters")}},{key:"geodesicCursorSegmentLength",get:function(){return this.path.back&&this.cursorPoint&&new v(M.segmentLengthGeodesic(this.path.back,this.cursorPoint),"meters")}},{key:"cursorSegmentLengthLabel",get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.geodesicCursorSegmentLength:this.cursorSegmentLength,this.unit)}},{key:"viewData",get:function(){const e=this.measurementData,t="geodesic"===this.measurementMode,r=t?this.geodesicArea:this.area;let a=1;if(r){const e=this._toPreferredAreaUnit(r,this.unit);a=p.nextHighestPowerOfTen(Math.sqrt(e.value)/Math.sqrt(300)),a*=Math.sqrt(f.convertUnit(1,e.unit,"square-meters")),a/=this._unitNormalizer.normalizeDistance(1)}return{validMeasurement:this.validMeasurement,path:this.path,pathChanges:this._viewDataChanges,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:t?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:t?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:t?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:this.validMeasurement?0:this.path.length-2,perimeterLengthLabelSegmentIndex:0,checkerSize:a}}},{key:"measurementMode",get:function(){let e=this.mode;if("auto"===e){e="euclidean";(this.geodesicPathLength?this.geodesicPathLength.value:0)+(!this.validMeasurement&&this.geodesicCursorSegmentLength?this.geodesicCursorSegmentLength.value:0)>this.geodesicMeasurementDistanceThreshold&&(e="geodesic")}return null==this.geodesicPathLength&&(e="euclidean"),e}}]),r}(c);return t.__decorate([s.property()],A.prototype,"messages",void 0),t.__decorate([s.property()],A.prototype,"dataObject",void 0),t.__decorate([s.property({constructOnly:!0})],A.prototype,"sceneView",void 0),t.__decorate([s.property({readOnly:!0})],A.prototype,"path",void 0),t.__decorate([s.property({readOnly:!0})],A.prototype,"pathVersion",void 0),t.__decorate([s.property()],A.prototype,"cursorPoint",void 0),t.__decorate([s.property()],A.prototype,"state",void 0),t.__decorate([s.property()],A.prototype,"lastDraggedVertex",void 0),t.__decorate([s.property()],A.prototype,"mode",void 0),t.__decorate([s.property()],A.prototype,"unit",void 0),t.__decorate([s.property()],A.prototype,"active",void 0),t.__decorate([s.property({readOnly:!0,dependsOn:["path.length","state"]})],A.prototype,"validMeasurement",null),t.__decorate([s.property({readOnly:!0,dependsOn:["path.length"]})],A.prototype,"isMeasuring",null),t.__decorate([s.property({readOnly:!0,dependsOn:["pathVersion","validMeasurement","maxRelativeErrorCoplanar","maxRelativeErrorAlmostCoplanar","verticalAngleThreshold"],autoTracked:!1})],A.prototype,"measurementData",null),t.__decorate([s.property({readOnly:!0,dependsOn:["measurementData"]})],A.prototype,"area",null),t.__decorate([s.property({readOnly:!0,dependsOn:["measurementData"]})],A.prototype,"geodesicArea",null),t.__decorate([s.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],A.prototype,"areaLabel",null),t.__decorate([s.property({readOnly:!0,dependsOn:["measurementData"]})],A.prototype,"pathLength",null),t.__decorate([s.property({readOnly:!0,dependsOn:["measurementData"]})],A.prototype,"geodesicPathLength",null),t.__decorate([s.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],A.prototype,"pathLengthLabel",null),t.__decorate([s.property({readOnly:!0,dependsOn:["measurementData"]})],A.prototype,"perimeterLength",null),t.__decorate([s.property({readOnly:!0,dependsOn:["measurementData"]})],A.prototype,"geodesicPerimeterLength",null),t.__decorate([s.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],A.prototype,"perimeterLengthLabel",null),t.__decorate([s.property({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],A.prototype,"cursorSegmentLength",null),t.__decorate([s.property({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],A.prototype,"geodesicCursorSegmentLength",null),t.__decorate([s.property({readOnly:!0,dependsOn:["messages","unit","measurementMode","cursorSegmentLength","geodesicCursorSegmentLength"]})],A.prototype,"cursorSegmentLengthLabel",null),t.__decorate([s.property({readOnly:!0,dependsOn:["unit","measurementMode","measurementData"]})],A.prototype,"viewData",null),t.__decorate([s.property()],A.prototype,"maxRelativeErrorCoplanar",void 0),t.__decorate([s.property()],A.prototype,"maxRelativeErrorAlmostCoplanar",void 0),t.__decorate([s.property()],A.prototype,"verticalAngleThreshold",void 0),t.__decorate([s.property()],A.prototype,"geodesicMeasurementDistanceThreshold",void 0),t.__decorate([s.property({readOnly:!0,dependsOn:["mode","validMeasurement","geodesicPathLength","geodesicCursorSegmentLength","geodesicMeasurementDistanceThreshold"]})],A.prototype,"measurementMode",null),A=t.__decorate([i.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DModel")],A),A}));
