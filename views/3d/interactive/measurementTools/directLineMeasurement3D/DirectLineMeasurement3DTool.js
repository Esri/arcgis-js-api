/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/maybe","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/aliasOf","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../geometry/Point","../../../../../geometry","../../../../../core/Handles","../../../../../core/watchUtils","../../../../support/screenUtils","../../../../../layers/graphics/hydratedFeatures","../../../../interactive/dragEventPipeline","../../../../interactive/InteractiveToolBase","../../editingTools/dragEventPipeline3D","./DirectLineMeasurement3DModel","./DirectLineMeasurement3DView"],(function(e,t,i,n,r,s,o,a,c,l,d,u,h,p,m,_,y,P,v,M,g,f,w){"use strict";let k=function(t){function i(e){var i;return(i=t.call(this,e)||this)._handles=new m,i._cachedPickRequest=new w.DirectLineMeasurement3DView.PickRequest,i._cachedPickResult=new w.DirectLineMeasurement3DView.PickResult,i._isAnyPointerDown=!1,i.deferCreation=!0,i.startManipulator=null,i.endManipulator=null,i.model=new f({sceneView:e.view}),i}e._inheritsLoose(i,t);var r=i.prototype;return r.initialize=function(){const e=new w.DirectLineMeasurement3DView({model:this.model});this._set("directLineMeasurementView",e);const t=_.init(this,"state",(e=>{"ready"!==e&&this.create(),"measured"===e&&this.complete()}),!0);this._handles.add(t);const{start:i,end:r}=this.directLineMeasurementView.createManipulators(),s=(e,t,i)=>v.createManipulatorDragEventPipeline(e,((e,r,s)=>{const o=g.hideManipulatorWhileDragging(e);r.next(o).next(g.screenToMap3D(this.view)).next((e=>"start"!==e.action?e:null)).next((n=>{const r=P.clonePoint(n.mapEnd,L);this.model[t]=r,e.location=r,this.model[i]=this._surfaceLocation(r,n.surfaceType)})),s.next(o).next(v.resetProperties(this.model,[t,i])).next((()=>{e.location=n.unwrap(this.model[t])}))}));this._handles.add([s(i,"startPoint","startPointSurfaceLocation"),s(r,"endPoint","endPointSurfaceLocation")]),[i,r].forEach((e=>{this._handles.add([e.events.on("grab-changed",(()=>{const e=i.grabbing||r.grabbing;e&&"measured"===this.model.state&&(this.model.state="editing"),e||(this.model.finishMeasurement(),"editing"===this.model.state&&(this.model.state="measured"))}))])})),this.manipulators.add(i),this.manipulators.add(r),this.startManipulator=i,this.endManipulator=r},r.destroy=function(){this.directLineMeasurementView.destroy(),this._set("directLineMeasurementView",null),this.model.destroy(),this._set("model",null),this._handles.destroy(),this._handles=null},r.activate=function(){this.model.active=!0},r.deactivate=function(){this.model.active=!1},r.onDetach=function(){this.model.reset()},r.onShow=function(){this.directLineMeasurementView.show(),this._updateManipulatorVisibility()},r.onHide=function(){this.directLineMeasurementView.hide()},r.onInputEvent=function(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"pointer-down":this._handlePointerDown();break;case"pointer-up":this._handlePointerUp()}this._updateManipulatorVisibility()},r._handlePointerMove=function(e){this._clearCachedPickRequest();const t=y.createScreenPointFromEvent(e);"mouse"===e.pointerType&&(this._hoverAt(t),"drawing"===this.model.state&&(this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),e.stopPropagation()))},r._handlePointerDown=function(){this._isAnyPointerDown=!0},r._handlePointerUp=function(){this._isAnyPointerDown=!1},r._handleImmediateClick=function(e){if(this._clearCachedPickRequest(),!D(e))return;const t=y.createScreenPointFromEvent(e),i=e.pointerType;let n=!1;if(this.model.active)switch(this.model.state){case"initial":this.startManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),this.startManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.model.startPoint&&(this.startManipulator.interactive=!1,this.endManipulator.interactive=!1,this.model.state="drawing",this.endManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),n=!0);break;case"drawing":this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),null!=this.model.endPoint&&(this.endManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.startManipulator.interactive=!0,this.endManipulator.interactive=!0,this.model.finishMeasurement(),n=!0)}n&&e.stopPropagation(),"mouse"===e.pointerType&&this._hoverAt(t)},r._hoverAt=function(e){const t=this._isAnyPointerDown&&"drawing"!==this.model.state&&"editing"!==this.model.state;if(this.directLineMeasurementView.requiresCursorPoint&&!t){const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}else this.model.cursorPoint=null},r._pick=function(e){const t=this._cachedPickRequest.screenPoint;return t&&t.x===e.x&&t.y===e.y||(this._cachedPickRequest.screenPoint=e,this._cachedPickResult=this.directLineMeasurementView.pick(this._cachedPickRequest)),this._cachedPickResult},r._clearCachedPickRequest=function(){this._cachedPickRequest.screenPoint=null},r._surfaceLocation=function(e,t){return 0===t?"on-the-surface":e.z>=this.directLineMeasurementView.getElevation(e)?"above-the-surface":"below-the-surface"},r._updateManipulatorVisibility=function(){this.startManipulator.available=null!=this.model.startPoint,this.endManipulator.available=null!=this.model.endPoint},e._createClass(i,[{key:"state",get:function(){var e;return null!=(e=this.model)&&e.isMeasuring?"measured"===this.model.state?"measured":"measuring":"ready"}},{key:"creating",get:function(){return"initial"===this.model.state||"drawing"===this.model.state}},{key:"isSupported",get:function(){return"3d"===this.get("view.type")}},{key:"cursor",get:function(){var e;return null==(e=this.model)||!e.active||"drawing"!==this.model.state&&"initial"!==this.model.state?null:"crosshair"}}]),i}(M.InteractiveToolBase);function D(e){return"mouse"!==e.pointerType||0===e.button}t.__decorate([o.property({readOnly:!0})],k.prototype,"state",null),t.__decorate([o.property({readOnly:!0})],k.prototype,"creating",null),t.__decorate([o.property({readOnly:!0})],k.prototype,"isSupported",null),t.__decorate([o.property({readOnly:!0})],k.prototype,"cursor",null),t.__decorate([o.property({constructOnly:!0})],k.prototype,"model",void 0),t.__decorate([o.property({constructOnly:!0})],k.prototype,"directLineMeasurementView",void 0),t.__decorate([a.aliasOf("model.mode")],k.prototype,"mode",void 0),t.__decorate([a.aliasOf("model.unit")],k.prototype,"unit",void 0),t.__decorate([a.aliasOf("model.validMeasurement")],k.prototype,"validMeasurement",void 0),k=t.__decorate([c.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],k);const L=new h;return k}));
