// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../../../intl","../../../../../core/Accessor","../../../../../core/Handles","../../../../../core/mathUtils","../../../../../core/Quantity","../../../../../core/quantityFormatUtils","../../../../../core/unitUtils","../../../../../core/watchUtils","../../../../../core/accessorSupport/decorators","../../../../../core/libs/gl-matrix-2/vec3","../../../../../core/libs/gl-matrix-2/vec3f64","../../../../../geometry/Point","../../../../../geometry/support/geodesicConstants","../../../../../geometry/support/geodesicUtils","../support/UnitNormalizer","../../../support/pointUtils","../../../support/projectionUtils","../../../support/PropertiesPool"],(function(e,t,i,r,o,n,a,s,c,l,d,u,p,h,m,g,_,f,y,v,P){"use strict";var b=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._tempStartPosition=h.vec3f64.create(),t._tempEndPosition=h.vec3f64.create(),t._tempCornerPosition=h.vec3f64.create(),t._unitNormalizer=new f,t._handles=new n,t._propertiesPool=new P.default({startPoint:m,endPoint:m},t),t.cursorPoint=null,t.state="initial",t.mode="auto",t.unit="metric",t.active=!1,t.directDistance=null,t.horizontalDistance=null,t.verticalDistance=null,t.geodesicDistance=null,t.geodesicAngle=null,t.triangleCollapseRatioThreshold=.03,t.geodesicMeasurementDistanceThreshold=1e5,t}return i.__extends(t,e),t.prototype.initialize=function(){var e=this;r.loadMessageBundle("esri/core/t9n/Units").then((function(t){e.messages=t})),this._handles.add(r.onLocaleChange((function(){return i.__awaiter(e,void 0,void 0,(function(){var e;return i.__generator(this,(function(t){switch(t.label){case 0:return e=this,[4,r.loadMessageBundle("esri/core/t9n/Units")];case 1:return e.messages=t.sent(),[2]}}))}))}))),this._handles.add(d.init(this.sceneView,"spatialReference",(function(t){e._unitNormalizer.spatialReference=t})),"scene-view"),this.reset()},t.prototype.destroy=function(){this._handles.destroy(),this._handles=null,this._propertiesPool.destroy(),this._propertiesPool=null},Object.defineProperty(t.prototype,"startPoint",{set:function(e){if(e){var t=this._propertiesPool.get("startPoint");t.copy(e),this._set("startPoint",t),this._updateMeasurement()}else this._set("startPoint",null)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"startPointSurfaceLocation",{set:function(e){this._set("startPointSurfaceLocation",e),this._updateMeasurement()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"endPoint",{set:function(e){if(e){var t=this._propertiesPool.get("endPoint");t.copy(e),this._set("endPoint",t),this._updateMeasurement()}else this._set("endPoint",null)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"endPointSurfaceLocation",{set:function(e){this._set("endPointSurfaceLocation",e),this._updateMeasurement()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"measurementSurfaceLocation",{get:function(){var e=this.startPointSurfaceLocation,t=this.endPointSurfaceLocation;return null==e||null==t?"camera-dependent":"above-the-surface"===e&&"below-the-surface"===t||"below-the-surface"===e&&"above-the-surface"===t||"on-the-surface"===e&&"on-the-surface"===t?"camera-dependent":"above-the-surface"===e||"above-the-surface"===t?"above-the-surface":"below-the-surface"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"validMeasurement",{get:function(){return!!this.startPoint&&!!this.endPoint},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isMeasuring",{get:function(){return!!this.startPoint},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"geodesicDistanceExceeded",{get:function(){return this.horizontalDistance&&this.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"measurementMode",{get:function(){var e=this.mode;return"auto"===e&&(e="euclidean","degrees"!==this.unit&&"degrees-minutes-seconds"!==this.unit||(e="geodesic"),this.geodesicDistanceExceeded&&(e="geodesic")),e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"triangleView",{get:function(){var e=this._collapseTriangle(),t=this.messages,i=null,r=null,o=null,n="geodesic"===this.measurementMode,s=this.directDistance,d=n?this.geodesicDistance:this.horizontalDistance,u=this.verticalDistance,p=null;switch(this.unit){case"metric":i=t&&s&&c.formatMetricLength(t,s),r=t&&d&&c.formatMetricLength(t,d),o=t&&u&&c.formatMetricVerticalLength(t,u),p=s&&s.toUnit("meters");break;case"imperial":i=t&&s&&c.formatImperialLength(t,s),r=t&&d&&c.formatImperialLength(t,d),o=t&&u&&c.formatImperialVerticalLength(t,u),p=s&&s.toUnit(l.preferredImperialLengthUnit(s.value,s.unit));break;case"degrees":r=t&&this.geodesicAngle&&c.formatDecimal(t,this.geodesicAngle,"degrees"),p=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;case"degrees-minutes-seconds":r=this.geodesicAngle&&c.formatDMS(this.geodesicAngle),p=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;default:i=t&&s&&c.formatDecimal(t,s,this.unit),r=t&&d&&c.formatDecimal(t,d,this.unit),o=t&&u&&c.formatDecimal(t,u,this.unit),p=s&&s.toUnit(this.unit)}var h=1;return p&&(h=a.nextHighestPowerOfTen(p.value/30),h*="degrees"===p.unit?g.metersPerDegree:l.convertUnit(1,p.unit,"meters"),h/=this._unitNormalizer.normalizeDistance(1)),{visible:this.validMeasurement&&!this.startPoint.equals(this.endPoint),mode:this.measurementMode,collapsed:e,directLabel:i,horizontalLabel:r,verticalLabel:o,stripeLength:h}},enumerable:!1,configurable:!0}),t.prototype.reset=function(){this.clearMeasurement()},t.prototype.clearMeasurement=function(){this.state="initial",this.startPoint=null,this.endPoint=null,this.cursorPoint=null,this._clearOverride("measurementSurfaceLocation"),this._updateMeasurement()},t.prototype.finishMeasurement=function(){if(!this._isOverridden("measurementSurfaceLocation")){var e=this.measurementSurfaceLocation,t="camera-dependent"===e?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":e;this._override("measurementSurfaceLocation",t)}this.state="measured"},t.prototype._collapseTriangle=function(){return!(this.validMeasurement&&!this.startPoint.equals(this.endPoint))||("geodesic"===this.measurementMode||Math.min(this.verticalDistance.value/this.horizontalDistance.value,this.horizontalDistance.value/this.verticalDistance.value)<this.triangleCollapseRatioThreshold)},t.prototype._exactGeodesicDistanceAndAngle=function(e,t){y.pointToWGS84ComparableLonLat(e,D),y.pointToWGS84ComparableLonLat(t,M);var i=a.deg2rad(D[0]),r=a.deg2rad(D[1]),o=a.deg2rad(M[0]),n=a.deg2rad(M[1]),c=Math.abs(o-i),l=a.acosClamped(Math.sin(r)*Math.sin(n)+Math.cos(r)*Math.cos(n)*Math.cos(c)),d=a.rad2deg(l),u={distance:0};return _.inverseGeodeticSolver(u,[D[0],D[1]],[M[0],M[1]]),{distance:new s(u.distance,"meters"),angle:new s(d,"degrees")}},t.prototype._approximateGeodesicDistanceAndAngle=function(e){return{distance:new s(e,"meters"),angle:new s(e/g.metersPerDegree,"degrees")}},t.prototype._euclideanDistances=function(e,t){e.z>t.z&&(e=[e,e=t][0]);var i=e.clone();i.z=t.z;var r=this._tempStartPosition,o=this._tempEndPosition,n=this._tempCornerPosition,a=this.sceneView.spatialReference,c=v.canProject(a,v.WGS84ECEFSpatialReference)?v.WGS84ECEFSpatialReference:a;y.pointToVector(e,r,c),y.pointToVector(t,o,c),y.pointToVector(i,n,c);var l=p.vec3.distance(r,o),d=p.vec3.distance(n,o),u=Math.abs(t.z-e.z);return l=this._unitNormalizer.normalizeDistance(l),d=this._unitNormalizer.normalizeDistance(d),u=this._unitNormalizer.normalizeElevation(u),{direct:new s(l,"meters"),horizontal:new s(d,"meters"),vertical:new s(u,"meters")}},t.prototype._updateMeasurement=function(){if(!this.startPoint||!this.endPoint)return this._set("directDistance",null),this._set("horizontalDistance",null),this._set("verticalDistance",null),this._set("geodesicDistance",null),void this._set("geodesicAngle",null);var e=this._euclideanDistances(this.startPoint,this.endPoint),t=this.sceneView.spatialReference,i=v.canProjectToWGS84ComparableLonLat(t)?this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint):this._approximateGeodesicDistanceAndAngle(e.horizontal.value);this._set("directDistance",e.direct),this._set("horizontalDistance",e.horizontal),this._set("verticalDistance",e.vertical),this._set("geodesicDistance",i.distance),this._set("geodesicAngle",i.angle)},i.__decorate([u.property()],t.prototype,"messages",void 0),i.__decorate([u.property({constructOnly:!0})],t.prototype,"sceneView",void 0),i.__decorate([u.property({value:null})],t.prototype,"startPoint",null),i.__decorate([u.property({value:null})],t.prototype,"startPointSurfaceLocation",null),i.__decorate([u.property({value:null})],t.prototype,"endPoint",null),i.__decorate([u.property({value:null})],t.prototype,"endPointSurfaceLocation",null),i.__decorate([u.property({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],t.prototype,"measurementSurfaceLocation",null),i.__decorate([u.property()],t.prototype,"cursorPoint",void 0),i.__decorate([u.property()],t.prototype,"state",void 0),i.__decorate([u.property()],t.prototype,"mode",void 0),i.__decorate([u.property()],t.prototype,"unit",void 0),i.__decorate([u.property()],t.prototype,"active",void 0),i.__decorate([u.property({readOnly:!0,dependsOn:["startPoint","endPoint"]})],t.prototype,"validMeasurement",null),i.__decorate([u.property({readOnly:!0,dependsOn:["startPoint"]})],t.prototype,"isMeasuring",null),i.__decorate([u.property({readOnly:!0})],t.prototype,"directDistance",void 0),i.__decorate([u.property({readOnly:!0})],t.prototype,"horizontalDistance",void 0),i.__decorate([u.property({readOnly:!0})],t.prototype,"verticalDistance",void 0),i.__decorate([u.property({readOnly:!0})],t.prototype,"geodesicDistance",void 0),i.__decorate([u.property({readOnly:!0})],t.prototype,"geodesicAngle",void 0),i.__decorate([u.property({readOnly:!0,dependsOn:["horizontalDistance","geodesicMeasurementDistanceThreshold"]})],t.prototype,"geodesicDistanceExceeded",null),i.__decorate([u.property({readOnly:!0,dependsOn:["horizontalDistance","unit","geodesicDistanceExceeded"]})],t.prototype,"measurementMode",null),i.__decorate([u.property({readOnly:!0,dependsOn:["messages","unit","measurementMode","startPoint","endPoint","triangleCollapseRatioThreshold"]})],t.prototype,"triangleView",null),i.__decorate([u.property()],t.prototype,"triangleCollapseRatioThreshold",void 0),i.__decorate([u.property()],t.prototype,"geodesicMeasurementDistanceThreshold",void 0),t=i.__decorate([u.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],t)}(o),D=h.vec3f64.create(),M=h.vec3f64.create();return b}));