/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/maybe","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../core/Accessor","../../../../../core/screenUtils","../../../../../chunks/vec3f64","../../../../../core/Handles","../../../support/ElevationProvider","../../../support/geometryUtils","../../../webgl-engine/lib/Intersector","../../visualElements/LaserlineVisualElement","../../manipulatorUtils","../support/viewUtils"],(function(e,t,i,s,n,r,a,o,l,d,c,h,u,_,p,m,w,g,b,L,v,P){"use strict";var f;const y={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5};var V;e.DirectLineMeasurement3DView=f=function(i){function s(e){var t;return(t=i.call(this,{model:e.model})||this)._state="pending",t._visible=!1,t._laserLine=null,t._handles=new m,t._listenerHandles=null,t._cursorPosition=p.create(),t._startPosition=p.create(),t._endPosition=p.create(),t._lastDraggedHandle=null,t.dataObjectView=null,t._view=e.model.sceneView,t._params=e.params?P.copyParameter(y,e.params):P.copyParameter(y,{}),t._intersector=new b.Intersector(t._view.state.mode),t._intersector.options.store=0,t}t._inheritsLoose(s,i);var r=s.prototype;return r.initialize=function(){const e=this.model.model,t=this._view.getAnalysisView(e);n.isSome(t)?this._initialize(t):this._view.whenAnalysisView(e).then((e=>this._initialize(e)))},r._initialize=function(e){switch(this._state){case"pending":break;case"destroyed":return}this._set("dataObjectView",e),this._laserLine=new L.LaserlineVisualElement({view:this._view,attached:!0}),this._initializeListeners(),this._state="ready"},r.destroy=function(){switch(this._state){case"pending":return void(this._state="destroyed");case"ready":break;case"destroyed":default:return}this.hide(),this._destroyListeners(),this._handles.destroy(),this._handles=null,this._laserLine.destroy(),this._laserLine=null,this._state="destroyed"},r.createManipulators=function(){const e=()=>{const e=v.createSphereManipulator(this._view,this._params.handleColor,this._params.handleOpacity);return e.available=!1,e.radius=this._params.handleRadius,e},t=e(),i=e();this.model.startPoint&&(t.location=n.unwrap(this.model.startPoint),t.available=!0),this.model.endPoint&&(i.location=n.unwrap(this.model.endPoint),i.available=!0);const s=()=>{let e=this._lastDraggedHandle;t.grabbing&&!i.grabbing&&(e="start"),i.grabbing&&!t.grabbing&&(e="end"),t.grabbing||i.grabbing||(e=null);const s=e!==this._lastDraggedHandle;this._lastDraggedHandle=e,s&&this.visible&&this._updateLaserLine()};return this._handles.add([t.events.on("grab-changed",(()=>{s()})),i.events.on("grab-changed",(()=>{s()}))]),{start:t,end:i}},r.show=function(){switch(this._state){case"ready":this._visible||(this._visible=!0,this.model.model.visible=!0,this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha},this._laserLine.visible=!0,this._updateCursorPosition(),this._updateStartPosition(),this._updateEndPosition(),this._updateLaserLine());break;case"pending":this._visible=!0;break;case"destroyed":default:return}},r.hide=function(){switch(this._state){case"ready":this._visible&&(this._visible=!1,this.model.model.visible=!1,this._laserLine.visible=!1,this._view.cursor=null);break;case"pending":this._visible=!1;break;case"destroyed":default:return}},r.pick=function(e){const t=this._view.spatialReference,i=_.screenPointObjectToArray(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,r=p.create();if(!s.getIntersectionPoint(r))return new f.PickResult;const a=this._view.renderCoordsHelper.fromRenderCoords(r,t);if(n.isNone(a))return new f.PickResult;const o="TerrainRenderer"===s.intersector?"ground":"feature";return new f.PickResult(o,r,a)},r.getElevation=function(e){return this._view.basemapTerrain.ready?n.unwrapOr(w.getElevationAtPoint(this._view.elevationProvider,e),0):0},r.overlappingHandles=function(e,t){return P.pointToPointScreenDistance(e,t,this._view)<=this._params.handleRadius},r._updateCursorPosition=function(){this.model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this.model.cursorPoint,this._cursorPosition)},r._updateStartPosition=function(){n.isSome(this.model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.startPoint,this._startPosition)},r._updateEndPosition=function(){n.isSome(this.model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.endPoint,this._endPosition)},r._getFocusPosition=function(){const t=this.model,i=this.viewMode===e.ViewMode.Direct&&n.isSome(this.dataObjectView)&&"euclidean"===this.dataObjectView.visualizedMeasurement;switch(t.state){case"drawing":return i?this._startPosition:t.endPoint?this._endPosition:this._startPosition;case"editing":return i?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return t.cursorPoint?this._cursorPosition:null}},r._getFocusSpherePosition=function(){return"drawing"===this.model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition},r._updateLaserLine=function(){const t=this.model,i=this._getFocusPosition(),s=this.viewMode,r=this.dataObjectView,a=this._params.laserLineEnabled&&!!i&&"measured"!==t.state&&t.active;if(a&&n.isSome(r)){const n="euclidean"===r.actualVisualizedMeasurement;this._laserLine.heightManifoldTarget=n?i:null;const o=a&&!!t.startPoint&&"geodesic"===r.actualVisualizedMeasurement;this._laserLine.pointDistanceLine=o?{origin:this._getFocusSpherePosition(),target:i}:null;const l=a&&s===e.ViewMode.Triangle;this._laserLine.lineVerticalPlaneSegment=l?g.lineSegment.fromPoints(this._startPosition,this._endPosition,D):null}else this._laserLine.heightManifoldTarget=null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=null},r._initializeListeners=function(){this._listenerHandles=new m,this._listenerHandles.add([this.model.watch("state",(e=>{n.applySome(this.dataObjectView,(t=>{t.allowVisualElementsOrientationChange="measured"!==e})),this._visible&&this._updateLaserLine()}),!0),this.model.watch("measurementMode",(()=>{this._visible&&this._updateLaserLine()}),!0),this.model.watch("cursorPoint",(()=>{this._updateCursorPosition(),this._visible&&this._updateLaserLine()}),!0),this.model.model.watch("startPoint",(()=>{this._updateStartPosition(),this._visible&&this._updateLaserLine()}),!0),this.model.model.watch("endPoint",(()=>{this._updateEndPosition(),this._visible&&this._updateLaserLine()}),!0),this.model.watch("active",(()=>{this._visible&&this._updateLaserLine()}),!0)])},r._destroyListeners=function(){this._listenerHandles.destroy(),this._listenerHandles=null},t._createClass(s,[{key:"requiresCursorPoint",get:function(){return"initial"===this.model.state&&this.model.active}},{key:"visible",get:function(){return this._visible},set:function(e){e?this.show():this.hide()}},{key:"viewMode",get:function(){const t=this.dataObjectView;if(!n.isSome(t))return e.ViewMode.None;switch(t.viewMode){default:case"none":return e.ViewMode.None;case"segment":return e.ViewMode.Direct;case"segment-and-triangle":return e.ViewMode.Triangle;case"segment-and-projection":return e.ViewMode.ProjectedGeodesic}}},{key:"testData",get:function(){const e=this._laserLine.testData;return{...n.isSome(this.dataObjectView)?this.dataObjectView.testData:{labels:{direct:null,horizontal:null,vertical:null},stripeLength:1},laserLineRenderer:{heightManifoldEnabled:!!n.isSome(e)&&e.heightManifoldEnabled,heightManifoldTarget:n.isSome(e)?e.heightManifoldTarget:null,pointDistanceEnabled:!!n.isSome(e)&&e.pointDistanceEnabled,pointDistanceOrigin:n.isSome(e)?e.pointDistanceOrigin:null,pointDistanceTarget:n.isSome(e)?e.pointDistanceTarget:null,lineVerticalPlaneEnabled:!!n.isSome(e)&&e.lineVerticalPlaneEnabled}}}},{key:"directLabelText",get:function(){return n.isSome(this.dataObjectView)?this.dataObjectView.segmentLabel.text:null}},{key:"horizontalLabelText",get:function(){return n.isSome(this.dataObjectView)?this.dataObjectView.horizontalLabel.text:null}},{key:"verticalLabelText",get:function(){return n.isSome(this.dataObjectView)?this.dataObjectView.verticalLabel.text:null}}]),s}(u),i.__decorate([o.property({readOnly:!0})],e.DirectLineMeasurement3DView.prototype,"dataObjectView",void 0),i.__decorate([o.property({constructOnly:!0})],e.DirectLineMeasurement3DView.prototype,"model",void 0),i.__decorate([o.property()],e.DirectLineMeasurement3DView.prototype,"directLabelText",null),i.__decorate([o.property()],e.DirectLineMeasurement3DView.prototype,"horizontalLabelText",null),i.__decorate([o.property()],e.DirectLineMeasurement3DView.prototype,"verticalLabelText",null),e.DirectLineMeasurement3DView=f=i.__decorate([l.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],e.DirectLineMeasurement3DView),function(e){let t=function(){};e.PickRequest=t;let i=function(e=null,t=null,i=null){this.type=e,this.scenePoint=t,this.mapPoint=i};e.PickResult=i}(e.DirectLineMeasurement3DView||(e.DirectLineMeasurement3DView={})),(V=e.ViewMode||(e.ViewMode={}))[V.Triangle=0]="Triangle",V[V.ProjectedGeodesic=1]="ProjectedGeodesic",V[V.Direct=2]="Direct",V[V.None=3]="None";const D=g.lineSegment.create();var M=e.DirectLineMeasurement3DView;e.default=M,Object.defineProperty(e,"__esModule",{value:!0})}));
