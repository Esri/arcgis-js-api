/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/maybe","../../../../../core/mathUtils","../../../../../core/screenUtils","../../../../../chunks/vec3f64","../../../../../chunks/vec3","../../../../../core/Handles","../../../../../geometry/projectionEllipsoid","../../../../../core/unitUtils","../../../../../chunks/mat4","../../../../../chunks/mat4f64","../../../../../core/quantityFormatUtils","../../../../../chunks/vec2","../../../support/ElevationProvider","../../../support/stack","../../../support/geometryUtils","../../../webgl-engine/lib/Intersector","../../../webgl-engine/materials/lineStippleUtils","../../../../../chunks/vec4f32","../../visualElements/LaserlineVisualElement","../../visualElements/RightAngleQuadVisualElement","../../manipulatorUtils","../support/viewUtils","../support/labelUtils","../../visualElements/LabelVisualElement","../../visualElements/LineVisualElement","../../visualElements/MeasurementArrowVisualElement","../../visualElements/support/Segment"],(function(e,t,i,s,n,r,o,a,l,h,d,c,_,m,g,u,v,p,b,L,w,S,P,f,D,M,y,z,A){"use strict";const C=L.fromValues(1,.5,0,.75),V={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:C,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:C,guideLineWidth:2,guideLineColor:C,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12};var E;e.DirectLineMeasurement3DView=function(){function L(t,i={}){this._visible=!1,this._measurementArrow=null,this._horizontalAndVerticalSegmentLines=null,this._rightAngleQuad=null,this._directSegmentLabel=null,this._verticalSegmentLabel=null,this._horizontalSegmentLabel=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._laserLine=null,this._directSegmentLabelMeasurement="directDistance",this._horizontalSegmentLabelMeasurement="horizontalDistance",this._verticalSegmentLabelMeasurement="verticalDistance",this._handles=new a,this._listenerHandles=null,this._cursorPosition=r.create(),this._startPosition=r.create(),this._endPosition=r.create(),this._cornerPosition=r.create(),this._origin=r.create(),this._originTransform=c.create(),this._lastDraggedHandle=null,this._viewMode=e.ViewMode.None,this._viewModeDirty=!0,this._triangleCollapseRatioThreshold=.03,this._model=t,this._view=t.sceneView,this._params=f.copyParameter(V,i),this._measurementArrow=new z.MeasurementArrowVisualElement({attached:!0,view:this._view,geometry:null,renderOccluded:4}),this._horizontalAndVerticalSegmentLines=new y.LineVisualElement({attached:!0,view:this._view,width:this._params.triangleLineWidth,color:this._params.triangleColor,renderOccluded:4}),this._rightAngleQuad=new S.RightAngleQuadVisualElement({attached:!0,view:this._view,color:C,renderOccluded:4}),this._directSegmentLabel=new M.LabelVisualElement({attached:!0,view:this._view,fontSize:this._params.direcLabelFontSize}),this._verticalSegmentLabel=new M.LabelVisualElement({attached:!0,view:this._view,fontSize:this._params.verticalLabelFontSize}),this._horizontalSegmentLabel=new M.LabelVisualElement({attached:!0,view:this._view,fontSize:this._params.horizontalLabelFontSize}),this._projectedGeodesicLine=new y.LineVisualElement({attached:!0,view:this._view,width:this._params.geodesicProjectionLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:b.createStipplePatternSimple(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4}),this._geodesicStartHint=new y.LineVisualElement({attached:!0,view:this._view,width:this._params.guideLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:b.createStipplePatternSimple(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4}),this._geodesicEndHint=new y.LineVisualElement({attached:!0,view:this._view,width:this._params.guideLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:b.createStipplePatternSimple(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4}),this._laserLine=new w.LaserlineVisualElement({view:this._view,attached:!0}),this._intersector=new p.Intersector(this._view.state.mode),this._intersector.options.store=0,this._initializeListeners()}var E=L.prototype;return E.destroy=function(){this.hide(),this._destroyListeners(),this._handles.destroy(),this._handles=null,this._measurementArrow.destroy(),this._measurementArrow=null,this._horizontalAndVerticalSegmentLines.destroy(),this._horizontalAndVerticalSegmentLines=null,this._rightAngleQuad.destroy(),this._rightAngleQuad=null,this._directSegmentLabel.destroy(),this._directSegmentLabel=null,this._verticalSegmentLabel.destroy(),this._verticalSegmentLabel=null,this._horizontalSegmentLabel.destroy(),this._horizontalSegmentLabel=null,this._projectedGeodesicLine.destroy(),this._projectedGeodesicLine=null,this._geodesicStartHint.destroy(),this._geodesicStartHint=null,this._geodesicEndHint.destroy(),this._geodesicEndHint=null},E._computeViewMode=function(){this._viewModeDirty=!1;const t=this._model,s=t.model,n=s.measurement,r="geodesic"===t.measurementMode;if(i.isNone(s.startPoint)||i.isNone(s.endPoint)||s.startPoint.equals(s.endPoint))return e.ViewMode.None;if(r){if(!this._model.geodesicDistanceExceeded)return e.ViewMode.Direct;if(this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition))return e.ViewMode.ProjectedGeodesic}if(i.isNone(n))return e.ViewMode.Direct;return Math.min(n.verticalDistance.value/n.horizontalDistance.value,n.horizontalDistance.value/n.verticalDistance.value)<this.triangleCollapseRatioThreshold?e.ViewMode.Direct:e.ViewMode.Triangle},E.createManipulators=function(){const e=()=>{const e=P.createSphereManipulator(this._view,this._params.handleColor,this._params.handleOpacity);return e.available=!1,e.radius=this._params.handleRadius,e},t=e(),s=e();this._model.startPoint&&(t.location=i.unwrap(this._model.startPoint),t.available=!0),this._model.endPoint&&(s.location=i.unwrap(this._model.endPoint),s.available=!0);const n=()=>{let e=this._lastDraggedHandle;t.grabbing&&!s.grabbing&&(e="start"),s.grabbing&&!t.grabbing&&(e="end"),t.grabbing||s.grabbing||(e=null);const i=e!==this._lastDraggedHandle;this._lastDraggedHandle=e,i&&this.visible&&this._updateLaserLine()};return this._handles.add([t.events.on("grab-changed",(()=>{n()})),s.events.on("grab-changed",(()=>{n()}))]),{start:t,end:s}},E.show=function(){this._visible||(this._visible=!0,this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha},this._laserLine.visible=!0,this._viewModeDirty=!0,this._updateCursorPosition(),this._updateStartPosition(),this._updateEndPosition(),this._updateLaserLine(),this._geometryChanged())},E.hide=function(){this._visible&&(this._visible=!1,this._measurementArrow.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._rightAngleQuad.visible=!1,this._directSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._horizontalSegmentLabel.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,this._laserLine.visible=!1,this._view.cursor=null)},E.pick=function(e){const t=this._view.spatialReference,i=n.screenPointObjectToArray(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,o=r.create();if(!s.getIntersectionPoint(o))return new L.PickResult;const a=this._view.renderCoordsHelper.fromRenderCoords(o,t),l="TerrainRenderer"===s.intersector?"ground":"feature";return new L.PickResult(l,o,a)},E.getElevation=function(e){return this._view.basemapTerrain.ready&&g.getElevationAtPoint(this._view.elevationProvider,e)||0},E.overlappingHandles=function(e,t){return f.pointToPointScreenDistance(e,t,this._view)<=this._params.handleRadius},E._getLabelPositions=function(t,i,r,o,a){const l=this._viewMode!==e.ViewMode.Triangle,h=n.castRenderScreenPointArray3(u.sv3d.get()),d=n.castRenderScreenPointArray3(u.sv3d.get());a.projectToRenderScreen(r,h),a.projectToRenderScreen(i,d);const c={direct:l?"top":"bottom",horizontal:"top",vertical:h[0]<d[0]?"left":"right"};if(!l){const e=u.sv2d.get(),o=u.sv2d.get();if(f.screenSpaceTangent(t,r,e,a),f.screenSpaceTangent(t,i,o,a),m.dot(e,o)>=H)c.direct=s.sign(e[1])===s.sign(o[1])?D.mirrorPosition(c.vertical):c.vertical;else{const e=n.castRenderScreenPointArray(u.sv2d.get());f.screenSpaceTangent(r,i,e,a),m.dot(e,o)>=H&&(c.direct=s.sign(e[0])===s.sign(o[0])?D.mirrorPosition(c.horizontal):c.horizontal)}}if("below-the-surface"===o){const e=e=>"top"===e?"bottom":"top";c.direct=e(c.direct),c.horizontal=e(c.horizontal),c.vertical=e(c.vertical)}return c},E._updateLabelText=function(){const e=this._model.model.measurement;if(i.isNone(e)||!this._model.messages)return;const t={verticalDistance:"",horizontalDistance:"",directDistance:"",geodesicDistance:""},s=this._model.messages,n=e.directDistance,r=e.horizontalDistance,o=e.verticalDistance,a=e.geodesicDistance,l=e.geodesicAngle;switch(this._model.unit){case"metric":t.directDistance=n&&_.formatMetricLength(s,n),t.horizontalDistance=r&&_.formatMetricLength(s,r),t.verticalDistance=o&&_.formatMetricVerticalLength(s,o),t.geodesicDistance=a&&_.formatMetricLength(s,a);break;case"imperial":t.directDistance=n&&_.formatImperialLength(s,n),t.horizontalDistance=r&&_.formatImperialLength(s,r),t.verticalDistance=o&&_.formatImperialVerticalLength(s,o),t.geodesicDistance=a&&_.formatImperialLength(s,a);break;case"degrees":{const e=l&&_.formatDecimal(s,l,"degrees");t.directDistance=e,t.horizontalDistance=e,t.geodesicDistance=e;break}case"degrees-minutes-seconds":t.horizontalDistanceText=l&&_.formatDMS(l);break;default:t.directDistance=n&&_.formatDecimal(s,n,this._model.unit),t.horizontalDistance=r&&_.formatDecimal(s,r,this._model.unit),t.verticalDistance=o&&_.formatDecimal(s,o,this._model.unit),t.geodesicDistance=a&&_.formatDecimal(s,a,this._model.unit)}this._directSegmentLabel.text=t[this._directSegmentLabelMeasurement],this._horizontalSegmentLabel.text=t[this._horizontalSegmentLabelMeasurement],this._verticalSegmentLabel.text=t[this._verticalSegmentLabelMeasurement]},E._geometryChanged=function(){const t=this._view,i=t.state.camera,s=this._model,n=s.measurementMode,r=t.renderCoordsHelper,a=this.viewMode;if(a===e.ViewMode.None)return this._rightAngleQuad.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._directSegmentLabel.visible=!1,this._horizontalSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._measurementArrow.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,void(this._geodesicEndHint.visible=!1);let l=this._startPosition,h=this._endPosition;const c="camera-dependent"===s.measurementSurfaceLocation?this._view.state.camera.aboveGround?"above-the-surface":"below-the-surface":s.measurementSurfaceLocation,_="above-the-surface"===c?1:-1,m=_*(t.renderCoordsHelper.getAltitude(h)-t.renderCoordsHelper.getAltitude(l));m<0&&(l=this._endPosition,h=this._startPosition);const g=this._cornerPosition;t.renderCoordsHelper.worldUpAtPosition(l,g),o.scale(g,g,_*Math.abs(m)),o.add(g,g,l);const v="geodesic"===n,p=v?new A.GeodesicSegment(this._startPosition,this._endPosition,this._view.renderCoordsHelper.spatialReference):new A.EuclideanSegment(this._startPosition,this._endPosition),b=this._getLabelPositions(l,h,g,c,i);switch(f.midpoint([l,h,g],this._origin),d.identity(this._originTransform),d.translate(this._originTransform,this._originTransform,this._origin),this._measurementArrow.geometry=p,this._measurementArrow.stripeLength=this._computeMeasurementArrowStripeLength(this._model.model),this._measurementArrow.visible=!0,this._directSegmentLabel.anchor=b.direct,this._directSegmentLabel.geometry=p,this._directSegmentLabel.visible=!0,this._directSegmentLabelMeasurement="geodesic"===n?"geodesicDistance":"directDistance",a){case e.ViewMode.Direct:this._horizontalSegmentLabelMeasurement=v?"geodesicDistance":"horizontalDistance",this._rightAngleQuad.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._horizontalSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1;break;case e.ViewMode.ProjectedGeodesic:{const e=o.copy(u.sv3d.get(),this._startPosition),t=o.copy(u.sv3d.get(),this._endPosition);r.setAltitude(0,e),r.setAltitude(0,t);const i=new A.GeodesicSegment(e,t,this._view.renderCoordsHelper.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(i),this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.setGeometryFromSegment(new A.EuclideanSegment(e,this._startPosition)),this._geodesicStartHint.visible=!0,this._geodesicEndHint.setGeometryFromSegment(new A.EuclideanSegment(t,this._endPosition)),this._geodesicEndHint.visible=!0,this._directSegmentLabel.geometry=i,this._directSegmentLabelMeasurement="geodesicDistance",this._rightAngleQuad.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._horizontalSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1;break}case e.ViewMode.Triangle:{this._horizontalAndVerticalSegmentLines.geometry=[[[l[0],l[1],l[2]],[g[0],g[1],g[2]],[h[0],h[1],h[2]]]],this._horizontalAndVerticalSegmentLines.visible=!0;const e=new A.EuclideanSegment(l,g);this._verticalSegmentLabel.visible=!0,this._verticalSegmentLabel.geometry=e,this._verticalSegmentLabel.anchor=b.vertical,this._verticalSegmentLabelMeasurement="verticalDistance";const t=new A.EuclideanSegment(g,h);this._horizontalSegmentLabel.visible=!0,this._horizontalSegmentLabel.geometry=t,this._horizontalSegmentLabel.anchor=b.horizontal,this._horizontalSegmentLabelMeasurement="horizontalDistance",this._rightAngleQuad.geometry={previous:l,center:g,next:h},this._rightAngleQuad.visible=!0,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1;break}}this._updateLabelText()},E._computeMeasurementArrowStripeLength=function(e){let t=null;if(i.isSome(e.measurement)){const i=e.measurement.directDistance;switch(this._model.model.settings.unit){case"metric":t=i&&i.toUnit("meters");break;case"imperial":t=i&&i.toUnit(h.preferredImperialLengthUnit(i.value,i.unit));break;case"degrees":case"degrees-minutes-seconds":{const i=e.measurement.geodesicAngle;t=i&&i.toUnit("degrees");break}default:t=i&&i.toUnit(this._model.model.settings.unit)}}let n=1;return t&&(n=s.nextHighestPowerOfTen(t.value/30),n*="degrees"===t.unit?l.getReferenceEllipsoid(this._view.spatialReference).metersPerDegree:h.convertUnit(1,t.unit,"meters")),n},E._requiresGeodesicGuideAt=function(e){if(!this._view.state)return!1;const t=this._view.state.camera,i=this._view.renderCoordsHelper,s=t.computeScreenPixelSizeAt(e);return i.getAltitude(e)/s>=10},E._updateCursorPosition=function(){this._model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this._model.cursorPoint,this._cursorPosition)},E._updateStartPosition=function(){i.isSome(this._model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.startPoint,this._startPosition)},E._updateEndPosition=function(){i.isSome(this._model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.endPoint,this._endPosition)},E._getFocusPosition=function(){const t=this._model,i=this.viewMode===e.ViewMode.Direct&&"euclidean"===t.measurementMode;switch(t.state){case"drawing":return i?this._startPosition:t.endPoint?this._endPosition:this._startPosition;case"editing":return i?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return t.cursorPoint?this._cursorPosition:null}},E._getFocusSpherePosition=function(){return"drawing"===this._model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition},E._updateLaserLine=function(){const t=this._model,i=this._getFocusPosition(),s=this.viewMode,n=this._params.laserLineEnabled&&!!i&&"measured"!==t.state&&t.active;if(n){const r=n&&"euclidean"===t.measurementMode;this._laserLine.heightManifoldTarget=r?i:null;const o=n&&!!t.startPoint&&"geodesic"===t.measurementMode;this._laserLine.pointDistanceLine=o?{origin:this._getFocusSpherePosition(),target:i}:null;const a=n&&s===e.ViewMode.Triangle;this._laserLine.lineVerticalPlaneSegment=a?v.lineSegment.fromPoints(this._startPosition,this._endPosition,T):null}else this._laserLine.heightManifoldTarget=null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=null},E._initializeListeners=function(){this._listenerHandles=new a,this._listenerHandles.add([this._model.watch("state",(()=>{this._visible&&this._updateLaserLine()}),!0),this._model.watch("measurementMode",(()=>{this._viewModeDirty=!0,this._visible&&this._updateLaserLine()}),!0),this._model.watch("hoveredHandle",(()=>{this._visible&&this._geometryChanged()}),!0),this._model.watch("cursorPoint",(()=>{this._updateCursorPosition(),this._visible&&this._updateLaserLine()}),!0),this._model.model.watch("startPoint",(()=>{this._updateStartPosition(),this._viewModeDirty=!0,this._visible&&(this._updateLaserLine(),this._geometryChanged())}),!0),this._model.model.watch("endPoint",(()=>{this._updateEndPosition(),this._viewModeDirty=!0,this._visible&&(this._updateLaserLine(),this._geometryChanged())}),!0),this._model.watch("messages",(()=>{this._viewModeDirty=!0,this._visible&&this._geometryChanged(),this._updateLabelText()}),!0),this._model.watch("unit",(()=>{this._viewModeDirty=!0,this._visible&&this._geometryChanged()}),!0),this._model.watch("active",(()=>{this._visible&&(this._updateLaserLine(),this._geometryChanged())}),!0),this._view.state.watch("camera",(()=>{this._visible&&this._geometryChanged()}),!0),this._model.model.watch("measurement",(()=>{this._viewModeDirty=!0,this._visible?this._geometryChanged():this._updateLabelText()}),!0)])},E._destroyListeners=function(){this._listenerHandles.destroy(),this._listenerHandles=null},t._createClass(L,[{key:"requiresCursorPoint",get:function(){return"initial"===this._model.state&&this._model.active}},{key:"cameraAboveGround",get:function(){return this._view.state.camera.aboveGround}},{key:"visible",get:function(){return this._visible},set:function(e){e?this.show():this.hide()}},{key:"viewMode",get:function(){return this._viewModeDirty&&(this._viewMode=this._computeViewMode()),this._viewMode}},{key:"triangleCollapseRatioThreshold",get:function(){return this._triangleCollapseRatioThreshold},set:function(e){this._triangleCollapseRatioThreshold=e,this._viewModeDirty=!0,this._geometryChanged()}},{key:"testData",get:function(){const e=this._laserLine.testData,t="geodesic"===this._model.measurementMode;return{labels:{direct:t?this._horizontalSegmentLabel:this._directSegmentLabel,horizontal:t?this._directSegmentLabel:this._horizontalSegmentLabel,vertical:this._verticalSegmentLabel},laserLineRenderer:{heightManifoldEnabled:!!i.isSome(e)&&e.heightManifoldEnabled,heightManifoldTarget:i.isSome(e)?e.heightManifoldTarget:null,pointDistanceEnabled:!!i.isSome(e)&&e.pointDistanceEnabled,pointDistanceOrigin:i.isSome(e)?e.pointDistanceOrigin:null,pointDistanceTarget:i.isSome(e)?e.pointDistanceTarget:null,lineVerticalPlaneEnabled:!!i.isSome(e)&&e.lineVerticalPlaneEnabled},stripeLength:this._computeMeasurementArrowStripeLength(this._model.model)}}},{key:"directLabelText",get:function(){return this._directSegmentLabel.text}},{key:"horizontalLabelText",get:function(){return this._horizontalSegmentLabel.text}},{key:"verticalLabelText",get:function(){return this._verticalSegmentLabel.text}}]),L}(),function(e){e.PickRequest=function(){};e.PickResult=function(e=null,t=null,i=null){this.type=e,this.scenePoint=t,this.mapPoint=i}}(e.DirectLineMeasurement3DView||(e.DirectLineMeasurement3DView={})),(E=e.ViewMode||(e.ViewMode={}))[E.Triangle=0]="Triangle",E[E.ProjectedGeodesic=1]="ProjectedGeodesic",E[E.Direct=2]="Direct",E[E.None=3]="None";const H=Math.cos(s.deg2rad(12)),T=v.lineSegment.create();var G=e.DirectLineMeasurement3DView;e.default=G,Object.defineProperty(e,"__esModule",{value:!0})}));
