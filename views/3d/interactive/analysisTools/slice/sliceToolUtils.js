/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../../geometry","../../../../../core/compilerUtils","../../../../../core/Logger","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/screenUtils","../../../../../chunks/mat4","../../../../../chunks/mat4f64","../../../../../chunks/quat","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../geometry/projection","../../../../../chunks/boundedPlane","../../../../../geometry/support/plane","../../../../../geometry/support/ray","../../../../../geometry/support/vector","../../../../../geometry/support/vectorStacks","../../Manipulator3D","../../manipulatorUtils","./sliceToolConfig","../../visualElements/LineVisualElement","../../visualElements/SlicePlaneVisualElement","../../../support/ElevationProvider","../../../support/RenderCoordsHelper","../../../support/geometryUtils/ray","../../../webgl-engine/lib/Geometry","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/materials/ColorMaterial","../../../webgl-engine/materials/ImageMaterial","../../../webgl-engine/materials/NativeLineMaterial","../../../webgl-engine/materials/RibbonLineMaterial","../../../../../widgets/Slice/SlicePlane","../../../../../geometry/Extent"],(function(e,t,s,n,i,r,a,o,c,l,d,u,g,p,m,T,R,_,f,E,b,S,h,A,y,I,v,O,L,P,w,M,N,H){"use strict";const D=n.getLogger("esri.views.3d.interactive.analysisTools.slice.sliceToolUtils");function C(e,t,s,n,i,r,a,o){return F(t,a.worldUpAtPosition(e,_.sv3d.get()),i,r,o.basis1,o.basis2),d.scale(o.basis1,o.basis1,s),d.scale(o.basis2,o.basis2,n),d.copy(o.origin,e),m.fromVectorsAndPoint(o.basis2,o.basis1,o.origin,o.plane),o}function F(e,t,s,n,i,r){const a=d.dot(e,t),o=_.sv3d.get(),c=_.sv3d.get();switch(0===n?Math.abs(a)>b.VERTICAL_DOT_THRESHOLD?1:2:n){case 2:{const n=Math.abs(a)<=b.SMALL_ANGLE_DOT_THRESHOLD?e:s.viewUp;d.cross(o,n,t),d.copy(c,t);break}case 1:d.cross(o,s.viewUp,t),d.cross(c,t,o);break;case 3:{const n=Math.abs(a)<=b.SMALL_ANGLE_DOT_THRESHOLD?t:s.viewUp;d.cross(o,n,e),d.cross(c,e,o);break}}const l=d.cross(_.sv3d.get(),o,c);d.dot(l,s.viewForward)>0&&d.scale(c,c,-1),d.normalize(i,o),d.normalize(r,c)}function U(e,t,s){const n=t.worldUpAtPosition(e.origin,_.sv3d.get()),i=e.basis1,r=de(e,n),a=Math.round(r/be)*be;return p.rotate(e,a-r,i,s)}function k(e,t,s,n,i,r){const a=d.copy(_.sv3d.get(),i.origin);d.add(a,a,d.scale(_.sv3d.get(),i.basis1,e.direction[0]<0?1:-1)),d.add(a,a,d.scale(_.sv3d.get(),i.basis2,e.direction[1]<0?1:-1));const o=d.length(i.basis1),c=d.length(i.basis2),l=d.subtract(_.sv3d.get(),s,a),u=d.subtract(_.sv3d.get(),t,a);let g=0,m=0;if($(e)){const t=Y(i),s=Y(r);g=o-.5*e.direction[0]*d.dot(i.basis1,u)/o,m=c-.5*e.direction[1]*d.dot(i.basis2,u)/c;const n=s/t;g*=n,m*=n}const T=g+.5*e.direction[0]*d.dot(i.basis1,l)/o,R=m+.5*e.direction[1]*d.dot(i.basis2,l)/c,f=d.scale(_.sv3d.get(),i.basis1,T/o),E=d.scale(_.sv3d.get(),i.basis2,R/c);(T<=0||X(r.origin,f,n)<=b.PLANE_MIN_BASIS_SCREEN_LEN2)&&d.copy(f,r.basis1),(R<=0||X(r.origin,E,n)<=b.PLANE_MIN_BASIS_SCREEN_LEN2)&&d.copy(E,r.basis2);const S=d.copy(_.sv3d.get(),a);return d.add(S,S,d.scale(_.sv3d.get(),f,e.direction[0]<0?-1:1)),d.add(S,S,d.scale(_.sv3d.get(),E,e.direction[1]<0?-1:1)),p.fromValues(S,f,E,r)}function G(e,t){return b.INITIAL_PLANE_HALF_SIZE_VIEW_PROPORTION*Math.min(t.width,t.height)*t.computeRenderPixelSizeAt(e)}function z(e,t,s,n){const i=d.cross(_.sv3d.get(),t,s);return d.cross(i,i,t),m.fromPositionAndNormal(e,i,n)}function x(e,t){return E.calculateTranslateRotateFromBases(e.basis1,e.basis2,e.origin,t)}function V(e,t,s,n){const i=t.worldUpAtPosition(e.origin,_.sv3d.get()),r=_.sv3d.get();switch(s){case 1:d.copy(r,i);break;case 2:d.copy(r,e.basis1)}return m.fromPositionAndNormal(e.origin,r,n)}function j(e,t,s,n){const i=Q(s,2),r=_.sm4d.get();o.rotateZ(r,t,i.edge*Math.PI/2);const c=d.normalize(_.sv3d.get(),i.basis);let l=d.scale(_.sv3d.get(),c,i.direction*n.computeScreenPixelSizeAt(i.position)*b.SHIFT_RESTART_OFFSET_DISTANCE);d.add(l,l,i.position);const g=n.projectToRenderScreen(l,a.castRenderScreenPointArray3(_.sv3d.get())),m=W(n,g);I.fromRender(n,g,Ee),d.normalize(Ee.direction,Ee.direction);const T=_.sv3d.get();!m&&p.intersectRay(s,Ee,T)&&(l=T),r[12]=0,r[13]=0,r[14]=0,e.modelTransform=r,e.renderLocation=u.clone(l),m?e.state|=fe:e.state&=~fe}function W(e,t){const[s,n,i,r]=e.viewport,a=Math.min(i,r)/16;let o=!0;return t[0]<s+a?(t[0]=s+a,o=!1):t[0]>s+i-a&&(t[0]=s+i-a,o=!1),t[1]<n+a?(t[1]=n+a,o=!1):t[1]>n+r-a&&(t[1]=n+r-a,o=!1),o}function Z(e,t,s,n){const i=d.length(n.basis1),r=d.length(n.basis2),a=K(n),c=Y(n),l=d.set(_.sv3d.get(),0,0,0);d.add(l,d.scale(_.sv3d.get(),n.basis1,t.direction[0]),d.scale(_.sv3d.get(),n.basis2,t.direction[1])),d.add(l,n.origin,l);let u=0,g=1;if($(t))1===t.direction[0]&&-1===t.direction[1]?u=be:1===t.direction[0]&&1===t.direction[1]?u=Math.PI:-1===t.direction[0]&&1===t.direction[1]&&(u=3*Math.PI/2),g=c;else{const e=0!==t.direction[0]?1:2;u=1===e?be:0,g=(1===e?r:i)-a}const p=o.identity(_.sm4d.get());o.rotateZ(p,p,u),o.scale(p,p,d.set(_.sv3d.get(),g,g,g)),o.multiply(p,s,p),p[12]=0,p[13]=0,p[14]=0,e.modelTransform=p,e.renderLocation=l}function B(e,t,s,n){const i=n.worldUpAtPosition(s.origin,_.sv3d.get()),r=Q(s,0),a=o.identity(_.sm4d.get());o.rotateZ(a,a,r.edge*Math.PI/2),o.rotateX(a,a,-de(s,i)),o.multiply(a,t,a),a[12]=0,a[13]=0,a[14]=0,e.modelTransform=a,e.renderLocation=r.position}function q(e,t,s){const n=Q(s,1),i=o.identity(_.sm4d.get());o.rotateZ(i,i,n.edge*Math.PI/2),o.rotateX(i,i,be),o.multiply(i,t,i),i[12]=0,i[13]=0,i[14]=0,e.modelTransform=i,e.renderLocation=n.position}function Q(e,t){switch(t){case 0:return{basis:e.basis1,direction:1,position:d.add(_.sv3d.get(),e.origin,e.basis1),edge:t};case 1:return{basis:e.basis2,direction:1,position:d.add(_.sv3d.get(),e.origin,e.basis2),edge:t};case 2:return{basis:e.basis1,direction:-1,position:d.subtract(_.sv3d.get(),e.origin,e.basis1),edge:t};case 3:return{basis:e.basis2,direction:-1,position:d.subtract(_.sv3d.get(),e.origin,e.basis2),edge:t}}}function X(e,t,s){const n=s.projectToRenderScreen(d.add(_.sv3d.get(),e,t),a.castRenderScreenPointArray3(_.sv3d.get())),i=s.projectToRenderScreen(d.subtract(_.sv3d.get(),e,t),a.castRenderScreenPointArray3(_.sv3d.get()));return d.squaredLength(d.subtract(n,n,i))}function K(e){const t=d.length(e.basis1),s=d.length(e.basis2);return b.RESIZE_HANDLE_EDGE_PADDING_FRAC*Math.min(t,s)}function Y(e){return K(e)}function $(e){return 0!==e.direction[0]&&0!==e.direction[1]}function J(e,t=1){const s=0===t?b.SHIFT_RESTART_OFFSET_DISTANCE:0,n=[u.fromValues(s,0,-b.SHIFT_RESTART_ARROW_LENGTH/2),u.fromValues(s,0,b.SHIFT_RESTART_ARROW_LENGTH/2)],i=ae(n,!0),r=(e,t)=>ie(n,n,{tubeRadius:b.SHIFT_RESTART_TUBE_RADIUS,tipRadius:b.SHIFT_RESTART_TIP_RADIUS,tipLength:b.SHIFT_RESTART_TIP_LENGTH,tubeFocusMultiplier:b.SHIFT_RESTART_TUBE_FOCUS_MULTIPLIER,tipFocusMultiplier:b.SHIFT_RESTART_TIP_FOCUS_MULTIPLIER,padding:e,bothEnds:!0,flat:null,focusTipLength:!0,addCap:t}),a=r(0,!1),o=r(b.SHIFT_RESTART_ARROW_OUTLINE_WIDTH,!0),c=new L.ColorMaterial({color:b.SHIFT_RESTART_ARROW_TIP_COLOR,cullFace:2,renderOccluded:16}),l=new L.ColorMaterial({color:b.SHIFT_RESTART_ARROW_CAP_COLOR,cullFace:2,renderOccluded:16}),d=new L.ColorMaterial({color:b.SHIFT_RESTART_TUBE_COLOR,cullFace:2,renderOccluded:16}),g=new L.ColorMaterial({color:b.SHIFT_RESTART_OUTLINE_COLOR,transparent:!0,writeDepth:!1,cullFace:1,renderOccluded:2}),p=O.createPolylineGeometry([[s,0,0],[s-b.SHIFT_RESTART_OFFSET_DISTANCE,0,0]]),m=O.createPolylineGeometry([[s,0,0],[s-b.SHIFT_RESTART_OFFSET_DISTANCE,0,0]]),T=new w.NativeLineMaterial({color:b.SHIFT_RESTART_CALLOUT_COLOR,renderOccluded:4});return new f.Manipulator3D({view:e,renderObjects:[...a.normal.map((({part:e,geometry:t,transform:s})=>({geometry:t,material:"tip"===e?c:"cap"===e?l:d,transform:s,stateMask:1|_e}))),...o.normal.map((({geometry:e,transform:t})=>({geometry:e,material:g,transform:t,stateMask:1|_e}))),{geometry:p,material:T,stateMask:1|_e|fe},...a.focused.map((({part:e,geometry:t,transform:s})=>({geometry:t,material:"tip"===e?c:"cap"===e?l:d,transform:s,stateMask:2|_e}))),...o.focused.map((({geometry:e,transform:t})=>({geometry:e,material:g,transform:t,stateMask:2|_e}))),{geometry:m,material:T,stateMask:2|_e|fe}],autoScaleRenderObjects:!1,collisionType:{type:"line",paths:[i]},collisionPriority:1,radius:b.SHIFT_RESTART_TIP_RADIUS,state:_e})}function ee(e,t){const s=new P.ImageMaterial({transparent:!0,writeDepth:!1,textureId:t.id,renderOccluded:16}),n=b.ROTATE_HEADING_OFFSET_DISTANCE,i=b.ROTATE_HEADING_DISC_RADIUS,r=i*b.ROTATE_HEADING_DISC_RADIUS_FOCUS_MULTIPLIER,a=e=>{const t=new Uint32Array([0,1,2,2,3,0]);return new v.Geometry([["position",{size:3,data:[n-e,-e,0,n+e,-e,0,n+e,e,0,n-e,e,0],exclusive:!0}],["uv0",{size:2,data:[0,0,1,0,1,1,0,1]}]],[["position",t],["uv0",t]])},o=O.createPolylineGeometry([[0,0,0],[n-i,0,0]]),c=O.createPolylineGeometry([[0,0,0],[n-r,0,0]]),l=new w.NativeLineMaterial({color:b.ROTATE_HEADING_CALLOUT_COLOR,renderOccluded:4}),d=[{geometry:a(i),material:s,stateMask:1|_e},{geometry:o,material:l,stateMask:1|_e},{geometry:a(r),material:s,stateMask:2|_e},{geometry:c,material:l,stateMask:2|_e}];return new f.Manipulator3D({view:e,renderObjects:d,autoScaleRenderObjects:!1,collisionType:{type:"disc",direction:[0,0,1],offset:[n,0,0]},collisionPriority:1,radius:i/2,state:_e})}function te(e){const t=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0],[-1,-1,0]];return new S.LineVisualElement({view:e,attached:!0,color:b.PLANE_OUTLINE_COLOR,width:b.PLANE_OUTLINE_WIDTH,writeDepthEnabled:!1,renderOccluded:4,geometry:[t]})}function se(e){return new h.SlicePlaneVisualElement({view:e,attached:!0,backgroundColor:[...b.PLANE_BACKGROUND_COLOR],gridColor:b.GRID_COLOR,gridWidth:4,renderOccluded:4})}function ne(e,t){const s=$(t),n=s?[u.fromValues(1,0,0),u.fromValues(0,0,0),u.fromValues(0,1,0)]:[u.fromValues(1,0,0),u.fromValues(-1,0,0)],i=O.createPolylineGeometry(n),r=b.RESIZE_HANDLE_COLOR,a=e=>new M.RibbonLineMaterial({color:r,width:e,renderOccluded:4}),o=()=>new w.NativeLineMaterial({color:r,renderOccluded:4}),c=s?b.RESIZE_HANDLE_CORNER_WIDTH:b.RESIZE_HANDLE_EDGE_WIDTH,l=c*b.DISPLAY_FOCUS_MULTIPLIER,d=b.RESIZE_HANDLE_EDGE_WIDTH,g=e=>e>1?a(e):o(),p=[{geometry:i,material:g(c),stateMask:1|Se},{geometry:i,material:g(l),stateMask:2|Se},{geometry:i,material:g(d),stateMask:he}],m=new f.Manipulator3D({view:e,renderObjects:p,collisionType:{type:"line",paths:[n]},autoScaleRenderObjects:!1,worldSized:!0,radius:s?b.RESIZE_HANDLE_CORNER_INPUT_RADIUS:b.RESIZE_HANDLE_EDGE_INPUT_RADIUS});return m.state=Se,m}function ie(e,t,s){const n=n=>{const i=(n?t:e).slice(0),a=d.subtract(_.sv3d.get(),i[0],i[1]);d.normalize(a,a);const g=d.subtract(_.sv3d.get(),i[i.length-1],i[i.length-2]);if(d.normalize(g,g),s.padding>0){const e=d.scale(u.create(),g,-s.padding);if(i[i.length-1]=d.add(e,e,i[i.length-1]),s.bothEnds){const e=d.scale(u.create(),a,-s.padding);i[0]=d.add(e,e,i[0])}}const p=n?s.tipFocusMultiplier:1,m=s.tipLength*(s.focusTipLength?p:1),T=s.tipRadius*p,R=o.identity(_.sm4d.get());if(s.padding>0){const e=m/4,t=d.set(_.sv3d.get(),0,e,0),n=1+s.padding/e;o.translate(R,R,t),o.scale(R,R,d.set(_.sv3d.get(),n,n,n)),o.translate(R,R,d.scale(t,t,-1/n))}const f=o.identity(c.create()),E=u.fromValues(0,1,0),b=o.fromQuat(c.create(),l.rotationTo(_.sq4d.get(),E,g));b[12]=i[i.length-1][0],b[13]=i[i.length-1][1],b[14]=i[i.length-1][2],o.multiply(b,b,R);const S=[{part:"tube",geometry:re(s.tubeRadius*(n?s.tubeFocusMultiplier:1)+s.padding,s.flat,i),transform:f}];let h,A;if(r.isSome(s.flat)?h=O.createExtrudedTriangle(m,T,T,s.flat.thickness):(h=O.createConeGeometry(m,T,24,!1,!1,!0),A=O.createConeGeometry(m,T,24,!1,!0,!1)),S.push({part:"tip",geometry:h,transform:b}),A&&S.push({part:"cap",geometry:A,transform:b}),s.bothEnds){const e=o.fromQuat(c.create(),l.rotationTo(_.sq4d.get(),E,a));e[12]=i[0][0],e[13]=i[0][1],e[14]=i[0][2],o.multiply(e,e,R),S.push({part:"tip",geometry:h,transform:e}),A&&S.push({part:"cap",geometry:A,transform:e})}return S};return{normal:n(!1),focused:n(!0)}}function re(e,t,s){const n=[];if(r.isSome(t))n.push([e,t.thickness/2],[-e,t.thickness/2],[-e,-t.thickness/2],[e,-t.thickness/2]);else{const t=12;for(let s=0;s<t;s++){const i=s/t*2*Math.PI;n.push([Math.cos(i)*e,Math.sin(i)*e])}}return O.createPathExtrusionGeometry(n,s,[],[],!1)}function ae(e,t){const s=d.subtract(u.create(),e[e.length-1],e[e.length-2]);if(d.normalize(s,s),d.scale(s,s,b.ROTATE_HEADING_TIP_LENGTH),d.add(s,s,e[e.length-1]),t){const t=d.subtract(u.create(),e[0],e[1]);return d.normalize(t,t),d.scale(t,t,b.ROTATE_HEADING_TIP_LENGTH),d.add(t,t,e[0]),[t,...e,s]}return[...e,s]}function oe(e,t,s,n=new N){if(r.isNone(e))return null;const{renderCoordsHelper:a}=t,o=a.fromRenderCoords(e.origin,t.spatialReference);if(r.isNone(o))return null;const c=g.tryProjectWithZConversion(o,s);if(r.isNone(c))return null;n.position=c;const l=a.worldUpAtPosition(e.origin,_.sv3d.get()),u=a.worldBasisAtPosition(e.origin,1,_.sv3d.get()),p=2*d.length(e.basis1),m=2*d.length(e.basis2),T=y.RenderCoordsHelper.renderUnitScaleFactor(t.spatialReference,s);return n.width=p*T,n.height=m*T,n.tilt=i.rad2deg(de(e,l)),n.heading=i.rad2deg(ue(e,l,u)),n}function ce(e,t,s){if(r.isNone(e)||r.isNone(e.position))return null;const{spatialReference:n}=e.position,i=le(me(e,{renderCoordsHelper:t,spatialReference:n},s),t,n);return!e.position.hasZ&&r.isSome(i)&&(i.zmin=null,i.zmax=null),i}function le(e,t,s){if(r.isNone(e))return null;const n=e.origin,i=_.sv3d.get(),a=_.sv3d.get(),o=_.sv3d.get(),c=_.sv3d.get();let l,u,g,p,m,T;d.add(i,n,e.basis1),d.add(i,i,e.basis2),d.add(a,n,e.basis1),d.sub(a,a,e.basis2),d.sub(o,n,e.basis1),d.sub(o,o,e.basis2),d.sub(c,n,e.basis1),d.add(c,c,e.basis2);for(const d of[i,a,o,c]){const e=t.fromRenderCoords(d,d,s);if(r.isNone(e))return null;l=null==l?e[0]:Math.min(l,e[0]),u=null==u?e[0]:Math.max(u,e[0]),g=null==g?e[1]:Math.min(g,e[1]),p=null==p?e[1]:Math.max(p,e[1]),m=null==m?e[2]:Math.min(m,e[2]),T=null==T?e[2]:Math.max(T,e[2])}return new H({xmin:l,xmax:u,ymin:g,ymax:p,zmin:m,zmax:T,spatialReference:s})}function de(e,t){return R.angleAroundAxis(t,e.basis2,e.basis1)+be}function ue(e,t,s){return R.angleAroundAxis(e.basis1,s,t)-be}function ge(e,t,s,n,r,a,o=p.create()){return a.toRenderCoords(e,o.origin)?(a.worldBasisAtPosition(o.origin,0,o.basis1),a.worldBasisAtPosition(o.origin,1,o.basis2),m.fromVectorsAndPoint(o.basis2,o.basis1,o.origin,o.plane),p.rotate(o,-i.deg2rad(t),p.normal(o),o),p.rotate(o,i.deg2rad(s),o.basis1,o),d.scale(o.basis1,o.basis1,n/2),d.scale(o.basis2,o.basis2,r/2),p.updateUnboundedPlane(o),o):(D.error(`Failed to project slice plane position, projection from ${e.spatialReference.wkid} is not supported`),null)}function pe(e,t){if(r.isNone(e)||r.isNone(e.position))return null;const s=g.tryProjectWithZConversion(e.position,t);if(r.isNone(s))return null;const n=y.RenderCoordsHelper.renderUnitScaleFactor(e.position.spatialReference,t),i=e.width*n,a=e.height*n;return{position:s,heading:e.heading,tilt:e.tilt,renderWidth:i,renderHeight:a}}function me(e,t,s,n=p.create()){const i=pe(e,t.spatialReference);return r.isNone(i)?null:Te(i,t,s,n)}function Te(e,t,s,n=p.create()){if(r.isNone(e))return null;let i=e.position;!e.position.hasZ&&r.isSome(t.elevationProvider)&&(i=e.position.clone(),i.z=r.unwrapOr(A.getElevationAtPoint(t.elevationProvider,e.position),0));const a=ge(i,e.heading,e.tilt,e.renderWidth,e.renderHeight,t.renderCoordsHelper,n);return!s.tiltEnabled&&r.isSome(a)&&U(a,t.renderCoordsHelper,a),a}function Re(e){switch(e.type){case"analysis":case"building-scene":case"csv":case"feature":case"geo-rss":case"geojson":case"graphics":case"group":case"integrated-mesh":case"kml":case"map-notes":case"ogc-feature":case"point-cloud":case"route":case"scene":case"stream":case"voxel":case"subtype-group":case"unknown":case"unsupported":case"wfs":case null:return!1;case"base-dynamic":case"base-elevation":case"base-tile":case"bing-maps":case"elevation":case"imagery":case"imagery-tile":case"map-image":case"open-street-map":case"tile":case"vector-tile":case"wcs":case"web-tile":case"wms":case"wmts":return!0;default:return s.neverReached(e.type),!1}}const _e=16,fe=32,Ee=T.create(),be=Math.PI/2,Se=16,he=32;function Ae(e){const t="building-scene-3d"===e.type?e:null;return r.isSome(t)}e.DidPointerMoveRecentlyFlag=_e,e.IsShiftEdgeOnScreenFlag=fe,e.addArrowTips=ae,e.calculateBoundedPlaneTranslateRotate=x,e.calculateDiagonalResizeHandleScale=Y,e.calculatePlaneHalfSize=G,e.calculateResizeHandlePadding=K,e.calculateScreenSpaceBasisLength2=X,e.createArrowGeometry=ie,e.createGridVisualElement=se,e.createOutlineVisualElement=te,e.createPlane=C,e.createResizeManipulator=ne,e.createRotateManipulator=ee,e.createRotatePlane=V,e.createShiftManipulator=J,e.createShiftPlane=z,e.forceHorizontalOrVertical=U,e.isAlwaysDrapedLayer=Re,e.isDiagonalResizeHandle=$,e.isIBuildingSceneLayerView3D=Ae,e.normalToBases=F,e.planeToExtent=le,e.planeToShape=oe,e.projectShape=pe,e.projectedShapeToPlane=Te,e.resizeNormal=Se,e.resizeOutlineOnly=he,e.resizePlane=k,e.shapeToExtent=ce,e.shapeToPlane=me,e.updateResizeHandle=Z,e.updateRotateHeadingHandle=B,e.updateRotateTiltHandle=q,e.updateShiftRestartHandle=j,Object.defineProperty(e,"__esModule",{value:!0})}));
