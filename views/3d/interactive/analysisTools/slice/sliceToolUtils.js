/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/compilerUtils","../../../../../core/maybe","../../../../../core/Logger","../../../../../geometry/Point","../../../../../geometry","../../../../../core/mathUtils","../../../../../core/screenUtils","../../../../../chunks/vec3f64","../../../../../chunks/vec3","../../../../../chunks/mat4","../../../../../chunks/mat4f64","../../../../../chunks/quat","../../../support/stack","../../../../../chunks/vector","../../../support/geometryUtils","../../../webgl-engine/lib/Geometry","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/materials/RibbonLineMaterial","../../../webgl-engine/materials/NativeLineMaterial","../../../webgl-engine/materials/ColorMaterial","../../Manipulator3D","../../manipulatorUtils","../../visualElements/LineVisualElement","./sliceToolConfig","../../visualElements/SlicePlaneVisualElement","../../../webgl-engine/materials/ImageMaterial","../../../../../widgets/Slice/SlicePlane"],(function(e,t,a,s,i,n,r,o,c,l,d,u,g,m,p,T,_,R,E,b,S,f,A,h,I,y,O,L){"use strict";const P=s.getLogger("esri.views.3d.interactive.analysisTools.slice.sliceToolUtils");function v(e,t,a,s,i,n,r,o){return w(t,r.worldUpAtPosition(e,m.sv3d.get()),i,n,o.basis1,o.basis2),l.scale(o.basis1,o.basis1,a),l.scale(o.basis2,o.basis2,s),l.copy(o.origin,e),T.plane.fromVectorsAndPoint(o.basis2,o.basis1,o.origin,o.plane),o}function w(e,t,a,s,i,n){const r=l.dot(e,t),o=m.sv3d.get(),c=m.sv3d.get();switch(0===s?Math.abs(r)>I.VERTICAL_DOT_THRESHOLD?1:2:s){case 2:{const s=Math.abs(r)<=I.SMALL_ANGLE_DOT_THRESHOLD?e:a.viewUp;l.cross(o,s,t),l.copy(c,t);break}case 1:l.cross(o,a.viewUp,t),l.cross(c,t,o);break;case 3:{const s=Math.abs(r)<=I.SMALL_ANGLE_DOT_THRESHOLD?t:a.viewUp;l.cross(o,s,e),l.cross(c,e,o);break}}const d=l.cross(m.sv3d.get(),o,c);l.dot(d,a.viewForward)>0&&l.scale(c,c,-1),l.normalize(i,o),l.normalize(n,c)}function M(e,t,a){const s=t.worldUpAtPosition(e.origin,m.sv3d.get()),i=e.basis1,n=ae(e,s),r=Math.round(n/le)*le;return T.boundedPlane.rotate(e,r-n,i,a)}function H(e,t,a,s,i,n){const r=l.copy(m.sv3d.get(),i.origin);l.add(r,r,l.scale(m.sv3d.get(),i.basis1,e.direction[0]<0?1:-1)),l.add(r,r,l.scale(m.sv3d.get(),i.basis2,e.direction[1]<0?1:-1));const o=l.length(i.basis1),c=l.length(i.basis2),d=l.subtract(m.sv3d.get(),a,r),u=l.subtract(m.sv3d.get(),t,r);let g=0,p=0;if(x(e)){const t=Z(i),a=Z(n);g=o-.5*e.direction[0]*l.dot(i.basis1,u)/o,p=c-.5*e.direction[1]*l.dot(i.basis2,u)/c;const s=a/t;g*=s,p*=s}const _=g+.5*e.direction[0]*l.dot(i.basis1,d)/o,R=p+.5*e.direction[1]*l.dot(i.basis2,d)/c,E=l.scale(m.sv3d.get(),i.basis1,_/o),b=l.scale(m.sv3d.get(),i.basis2,R/c);(_<=0||B(n.origin,E,s)<=I.PLANE_MIN_BASIS_SCREEN_LEN2)&&l.copy(E,n.basis1),(R<=0||B(n.origin,b,s)<=I.PLANE_MIN_BASIS_SCREEN_LEN2)&&l.copy(b,n.basis2);const S=l.copy(m.sv3d.get(),r);return l.add(S,S,l.scale(m.sv3d.get(),E,e.direction[0]<0?-1:1)),l.add(S,S,l.scale(m.sv3d.get(),b,e.direction[1]<0?-1:1)),T.boundedPlane.fromValues(S,E,b,n)}function N(e,t){return I.INITIAL_PLANE_HALF_SIZE_VIEW_PROPORTION*Math.min(t.width,t.height)*t.computeRenderPixelSizeAt(e)}function D(e,t,a,s){const i=l.cross(m.sv3d.get(),t,a);return l.cross(i,i,t),T.plane.fromPositionAndNormal(e,i,s)}function F(e,t){return A.calculateTranslateRotateFromBases(e.basis1,e.basis2,e.origin,t)}function C(e,t,a,s){const i=t.worldUpAtPosition(e.origin,m.sv3d.get()),n=m.sv3d.get();switch(a){case 1:l.copy(n,i);break;case 2:l.copy(n,e.basis1)}return T.plane.fromPositionAndNormal(e.origin,n,s)}function U(e,t,a,s){const i=j(a,2),n=m.sm4d.get();d.rotateZ(n,t,i.edge*Math.PI/2);const r=l.normalize(m.sv3d.get(),i.basis);let u=l.scale(m.sv3d.get(),r,i.direction*s.computeScreenPixelSizeAt(i.position)*I.SHIFT_RESTART_OFFSET_DISTANCE);l.add(u,u,i.position);const g=s.projectToRenderScreen(u,o.castRenderScreenPointArray3(m.sv3d.get())),p=k(s,g);T.ray.fromRender(s,g,ce),l.normalize(ce.direction,ce.direction);const _=m.sv3d.get();!p&&T.boundedPlane.intersectRay(a,ce,_)&&(u=_),n[12]=0,n[13]=0,n[14]=0,e.modelTransform=n,e.renderLocation=c.clone(u),p?e.state|=oe:e.state&=~oe}function k(e,t){const[a,s,i,n]=e.viewport,r=Math.min(i,n)/16;let o=!0;return t[0]<a+r?(t[0]=a+r,o=!1):t[0]>a+i-r&&(t[0]=a+i-r,o=!1),t[1]<s+r?(t[1]=s+r,o=!1):t[1]>s+n-r&&(t[1]=s+n-r,o=!1),o}function G(e,t,a,s){const i=l.length(s.basis1),n=l.length(s.basis2),r=W(s),o=Z(s),c=l.set(m.sv3d.get(),0,0,0);l.add(c,l.scale(m.sv3d.get(),s.basis1,t.direction[0]),l.scale(m.sv3d.get(),s.basis2,t.direction[1])),l.add(c,s.origin,c);let u=0,g=1;if(x(t))1===t.direction[0]&&-1===t.direction[1]?u=le:1===t.direction[0]&&1===t.direction[1]?u=Math.PI:-1===t.direction[0]&&1===t.direction[1]&&(u=3*Math.PI/2),g=o;else{const e=0!==t.direction[0]?1:2;u=1===e?le:0,g=(1===e?n:i)-r}const p=d.identity(m.sm4d.get());d.rotateZ(p,p,u),d.scale(p,p,l.set(m.sv3d.get(),g,g,g)),d.multiply(p,a,p),p[12]=0,p[13]=0,p[14]=0,e.modelTransform=p,e.renderLocation=c}function z(e,t,a,s){const i=s.worldUpAtPosition(a.origin,m.sv3d.get()),n=j(a,0),r=d.identity(m.sm4d.get());d.rotateZ(r,r,n.edge*Math.PI/2),d.rotateX(r,r,-ae(a,i)),d.multiply(r,t,r),r[12]=0,r[13]=0,r[14]=0,e.modelTransform=r,e.renderLocation=n.position}function V(e,t,a){const s=j(a,1),i=d.identity(m.sm4d.get());d.rotateZ(i,i,s.edge*Math.PI/2),d.rotateX(i,i,le),d.multiply(i,t,i),i[12]=0,i[13]=0,i[14]=0,e.modelTransform=i,e.renderLocation=s.position}function j(e,t){switch(t){case 0:return{basis:e.basis1,direction:1,position:l.add(m.sv3d.get(),e.origin,e.basis1),edge:t};case 1:return{basis:e.basis2,direction:1,position:l.add(m.sv3d.get(),e.origin,e.basis2),edge:t};case 2:return{basis:e.basis1,direction:-1,position:l.subtract(m.sv3d.get(),e.origin,e.basis1),edge:t};case 3:return{basis:e.basis2,direction:-1,position:l.subtract(m.sv3d.get(),e.origin,e.basis2),edge:t}}}function B(e,t,a){const s=a.projectToRenderScreen(l.add(m.sv3d.get(),e,t),o.castRenderScreenPointArray3(m.sv3d.get())),i=a.projectToRenderScreen(l.subtract(m.sv3d.get(),e,t),o.castRenderScreenPointArray3(m.sv3d.get()));return l.squaredLength(l.subtract(s,s,i))}function W(e){const t=l.length(e.basis1),a=l.length(e.basis2);return I.RESIZE_HANDLE_EDGE_PADDING_FRAC*Math.min(t,a)}function Z(e){return W(e)}function x(e){return 0!==e.direction[0]&&0!==e.direction[1]}function q(e,t=1){const a=0===t?I.SHIFT_RESTART_OFFSET_DISTANCE:0,s=[c.fromValues(a,0,-I.SHIFT_RESTART_ARROW_LENGTH/2),c.fromValues(a,0,I.SHIFT_RESTART_ARROW_LENGTH/2)],i=ee(s,!0),n=(e,t)=>$(s,s,{tubeRadius:I.SHIFT_RESTART_TUBE_RADIUS,tipRadius:I.SHIFT_RESTART_TIP_RADIUS,tipLength:I.SHIFT_RESTART_TIP_LENGTH,tubeFocusMultiplier:I.SHIFT_RESTART_TUBE_FOCUS_MULTIPLIER,tipFocusMultiplier:I.SHIFT_RESTART_TIP_FOCUS_MULTIPLIER,padding:e,bothEnds:!0,flat:null,focusTipLength:!0,addCap:t}),r=n(0,!1),o=n(I.SHIFT_RESTART_ARROW_OUTLINE_WIDTH,!0),l=new S.ColorMaterial({color:I.SHIFT_RESTART_ARROW_TIP_COLOR,cullFace:2,renderOccluded:16}),d=new S.ColorMaterial({color:I.SHIFT_RESTART_ARROW_CAP_COLOR,cullFace:2,renderOccluded:16}),u=new S.ColorMaterial({color:I.SHIFT_RESTART_TUBE_COLOR,cullFace:2,renderOccluded:16}),g=new S.ColorMaterial({color:I.SHIFT_RESTART_OUTLINE_COLOR,transparent:!0,writeDepth:!1,cullFace:1,renderOccluded:2}),m=R.createPolylineGeometry([[a,0,0],[a-I.SHIFT_RESTART_OFFSET_DISTANCE,0,0]]),p=R.createPolylineGeometry([[a,0,0],[a-I.SHIFT_RESTART_OFFSET_DISTANCE,0,0]]),T=new b.NativeLineMaterial({color:I.SHIFT_RESTART_CALLOUT_COLOR,renderOccluded:4});return new f.Manipulator3D({view:e,renderObjects:[...r.normal.map((({part:e,geometry:t,transform:a})=>({geometry:t,material:"tip"===e?l:"cap"===e?d:u,transform:a,stateMask:1|re}))),...o.normal.map((({geometry:e,transform:t})=>({geometry:e,material:g,transform:t,stateMask:1|re}))),{geometry:m,material:T,stateMask:1|re|oe},...r.focused.map((({part:e,geometry:t,transform:a})=>({geometry:t,material:"tip"===e?l:"cap"===e?d:u,transform:a,stateMask:2|re}))),...o.focused.map((({geometry:e,transform:t})=>({geometry:e,material:g,transform:t,stateMask:2|re}))),{geometry:p,material:T,stateMask:2|re|oe}],autoScaleRenderObjects:!1,collisionType:{type:"line",paths:[i]},collisionPriority:1,radius:I.SHIFT_RESTART_TIP_RADIUS,state:re})}function Q(e,t){const a=new O.ImageMaterial({transparent:!0,writeDepth:!1,textureId:t.id,renderOccluded:16}),s=I.ROTATE_HEADING_OFFSET_DISTANCE,i=I.ROTATE_HEADING_DISC_RADIUS,n=i*I.ROTATE_HEADING_DISC_RADIUS_FOCUS_MULTIPLIER,r=e=>{const t=new Uint32Array([0,1,2,2,3,0]);return new _.Geometry([["position",{size:3,data:[s-e,-e,0,s+e,-e,0,s+e,e,0,s-e,e,0],exclusive:!0}],["uv0",{size:2,data:[0,0,1,0,1,1,0,1]}]],[["position",t],["uv0",t]])},o=R.createPolylineGeometry([[0,0,0],[s-i,0,0]]),c=R.createPolylineGeometry([[0,0,0],[s-n,0,0]]),l=new b.NativeLineMaterial({color:I.ROTATE_HEADING_CALLOUT_COLOR,renderOccluded:4}),d=[{geometry:r(i),material:a,stateMask:1|re},{geometry:o,material:l,stateMask:1|re},{geometry:r(n),material:a,stateMask:2|re},{geometry:c,material:l,stateMask:2|re}];return new f.Manipulator3D({view:e,renderObjects:d,autoScaleRenderObjects:!1,collisionType:{type:"disc",direction:[0,0,1],offset:[s,0,0]},collisionPriority:1,radius:i/2,state:re})}function X(e){const t=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0],[-1,-1,0]];return new h.LineVisualElement({view:e,attached:!0,color:I.PLANE_OUTLINE_COLOR,width:I.PLANE_OUTLINE_WIDTH,writeDepthEnabled:!1,renderOccluded:4,geometry:[t]})}function K(e){return new y.SlicePlaneVisualElement({view:e,attached:!0,backgroundColor:[...I.PLANE_BACKGROUND_COLOR],gridColor:I.GRID_COLOR,gridWidth:4,renderOccluded:4})}function Y(e,t){const a=x(t),s=a?[c.fromValues(1,0,0),c.fromValues(0,0,0),c.fromValues(0,1,0)]:[c.fromValues(1,0,0),c.fromValues(-1,0,0)],i=R.createPolylineGeometry(s),n=[...I.HANDLE_COLOR,1],r=e=>new E.RibbonLineMaterial({color:n,width:e,renderOccluded:4}),o=()=>new b.NativeLineMaterial({color:n,renderOccluded:4}),l=a?I.RESIZE_HANDLE_CORNER_WIDTH:I.RESIZE_HANDLE_EDGE_WIDTH,d=l*I.DISPLAY_FOCUS_MULTIPLIER,u=I.RESIZE_HANDLE_EDGE_WIDTH,g=e=>e>1?r(e):o(),m=[{geometry:i,material:g(l),stateMask:1|de},{geometry:i,material:g(d),stateMask:2|de},{geometry:i,material:g(u),stateMask:ue}],p=new f.Manipulator3D({view:e,renderObjects:m,collisionType:{type:"line",paths:[s]},autoScaleRenderObjects:!1,worldSized:!0,radius:a?I.RESIZE_HANDLE_CORNER_INPUT_RADIUS:I.RESIZE_HANDLE_EDGE_INPUT_RADIUS,idHint:a?1:2});return p.state=de,p}function $(e,t,s){const i=i=>{const n=(i?t:e).slice(0),r=l.subtract(m.sv3d.get(),n[0],n[1]);l.normalize(r,r);const o=l.subtract(m.sv3d.get(),n[n.length-1],n[n.length-2]);if(l.normalize(o,o),s.padding>0){const e=l.scale(c.create(),o,-s.padding);if(n[n.length-1]=l.add(e,e,n[n.length-1]),s.bothEnds){const e=l.scale(c.create(),r,-s.padding);n[0]=l.add(e,e,n[0])}}const p=i?s.tipFocusMultiplier:1,T=s.tipLength*(s.focusTipLength?p:1),_=s.tipRadius*p,E=d.identity(m.sm4d.get());if(s.padding>0){const e=T/4,t=l.set(m.sv3d.get(),0,e,0),a=1+s.padding/e;d.translate(E,E,t),d.scale(E,E,l.set(m.sv3d.get(),a,a,a)),d.translate(E,E,l.scale(t,t,-1/a))}const b=d.identity(u.create()),S=c.fromValues(0,1,0),f=d.fromQuat(u.create(),g.rotationTo(m.sq4d.get(),S,o));f[12]=n[n.length-1][0],f[13]=n[n.length-1][1],f[14]=n[n.length-1][2],d.multiply(f,f,E);const A=[{part:"tube",geometry:J(s.tubeRadius*(i?s.tubeFocusMultiplier:1)+s.padding,s.flat,n),transform:b}];let h,I;if(a.isSome(s.flat)?h=R.createExtrudedTriangle(T,_,_,s.flat.thickness):(h=R.createConeGeometry(T,_,24,!1,!1,!0),I=R.createConeGeometry(T,_,24,!1,!0,!1)),A.push({part:"tip",geometry:h,transform:f}),I&&A.push({part:"cap",geometry:I,transform:f}),s.bothEnds){const e=d.fromQuat(u.create(),g.rotationTo(m.sq4d.get(),S,r));e[12]=n[0][0],e[13]=n[0][1],e[14]=n[0][2],d.multiply(e,e,E),A.push({part:"tip",geometry:h,transform:e}),I&&A.push({part:"cap",geometry:I,transform:e})}return A};return{normal:i(!1),focused:i(!0)}}function J(e,t,s){const i=[];if(a.isSome(t))i.push([e,t.thickness/2],[-e,t.thickness/2],[-e,-t.thickness/2],[e,-t.thickness/2]);else{const t=12;for(let a=0;a<t;a++){const s=a/t*2*Math.PI;i.push([Math.cos(s)*e,Math.sin(s)*e])}}return R.createPathExtrusionGeometry(i,s,[],[],!1)}function ee(e,t){const a=l.subtract(c.create(),e[e.length-1],e[e.length-2]);if(l.normalize(a,a),l.scale(a,a,I.ROTATE_HEADING_TIP_LENGTH),l.add(a,a,e[e.length-1]),t){const t=l.subtract(c.create(),e[0],e[1]);return l.normalize(t,t),l.scale(t,t,I.ROTATE_HEADING_TIP_LENGTH),l.add(t,t,e[0]),[t,...e,a]}return[...e,a]}function te(e,t,s,n=new L){if(a.isNone(e))return null;const o=a.isSome(n.position)?n.position:new i;t.fromRenderCoords(e.origin,o,s),n.position=o;const c=t.worldUpAtPosition(e.origin,m.sv3d.get()),d=t.worldBasisAtPosition(e.origin,1,m.sv3d.get());return n.width=2*l.length(e.basis1),n.height=2*l.length(e.basis2),n.tilt=r.rad2deg(ae(e,c)),n.heading=r.rad2deg(se(e,c,d)),n}function ae(e,t){return p.angleAroundAxis(t,e.basis2,e.basis1)+le}function se(e,t,a){return p.angleAroundAxis(e.basis1,a,t)-le}function ie(e,t,s=T.boundedPlane.create()){return a.isNone(e)||a.isNone(e.position)?null:t.toRenderCoords(e.position,s.origin)?(t.worldBasisAtPosition(s.origin,0,s.basis1),t.worldBasisAtPosition(s.origin,1,s.basis2),T.plane.fromVectorsAndPoint(s.basis2,s.basis1,s.origin,s.plane),T.boundedPlane.rotate(s,-r.deg2rad(e.heading),T.boundedPlane.normal(s),s),T.boundedPlane.rotate(s,r.deg2rad(e.tilt),s.basis1,s),l.scale(s.basis1,s.basis1,e.width/2),l.scale(s.basis2,s.basis2,e.height/2),T.boundedPlane.updateUnboundedPlane(s),s):(P.error(`Failed to project slice plane position, projection from ${e.position.spatialReference.wkid} is not supported`),null)}function ne(e){switch(e.type){case"building-scene":case"csv":case"feature":case"geo-rss":case"geojson":case"graphics":case"group":case"integrated-mesh":case"kml":case"map-notes":case"ogc-feature":case"point-cloud":case"route":case"scene":case"stream":case"unknown":case"unsupported":case null:return!1;case"base-dynamic":case"base-elevation":case"base-tile":case"bing-maps":case"elevation":case"imagery":case"imagery-tile":case"map-image":case"open-street-map":case"tile":case"vector-tile":case"wcs":case"web-tile":case"wms":case"wmts":return!0;default:return t.neverReached(e.type),!1}}const re=16,oe=32,ce=T.ray.create(),le=Math.PI/2,de=16,ue=32;e.DidPointerMoveRecentlyFlag=re,e.IsShiftEdgeOnScreenFlag=oe,e.addArrowTips=ee,e.calculateBoundedPlaneTranslateRotate=F,e.calculateDiagonalResizeHandleScale=Z,e.calculatePlaneHalfSize=N,e.calculateResizeHandlePadding=W,e.calculateScreenSpaceBasisLength2=B,e.createArrowGeometry=$,e.createGridVisualElement=K,e.createOutlineVisualElement=X,e.createPlane=v,e.createResizeManipulator=Y,e.createRotateManipulator=Q,e.createRotatePlane=C,e.createShiftManipulator=q,e.createShiftPlane=D,e.forceHorizontalOrVertical=M,e.isAlwaysDrapedLayer=ne,e.isDiagonalResizeHandle=x,e.normalToBases=w,e.planeToShape=te,e.resizeNormal=de,e.resizeOutlineOnly=ue,e.resizePlane=H,e.shapeToPlane=ie,e.updateResizeHandle=G,e.updateRotateHeadingHandle=z,e.updateRotateTiltHandle=V,e.updateShiftRestartHandle=U,Object.defineProperty(e,"__esModule",{value:!0})}));
