/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/Evented","../../../../../core/Handles","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/scheduling","../../../../../core/screenUtils","../../../../../core/watchUtils","../../../../../chunks/mat4","../../../../../chunks/mat4f64","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../geometry/support/plane","../../../../../geometry/support/ray","../../../../../geometry/support/vectorStacks","../../../../../support/elevationInfoUtils","../../Manipulator3D","../../manipulatorUtils","../dragEventPipeline3D","../manipulations/config","../../../support/mathUtils","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/materials/ColorMaterial","../../../../interactive/dragEventPipeline"],(function(t,e,a,i,n,r,o,s,l,c,h,d,u,g,p,R,m,I,D,S,_,T,A,E,M){"use strict";var f;!function(t){t.ScaleIn=32,t.ScaleOut=64,t.RotateLeft=128,t.RotateRight=256,t.Unlocked=1024,t.DelayedFocused=2048,t.TouchInput=32768}(f||(f={}));let N=function(){function t(t){this.mode=null,this._handles=new i,this._scaleRotateDragData=null,this._activeAnimation=null,this.events=new a,this.getFocused=()=>this.ringManipulator.focused,this.getScale=()=>r.isSome(this._scaleRotateDragData)&&"scale"===this._scaleRotateDragData.mode?this.adapter.scale:1,this.tool=t.tool,this.mode=t.mode,this.adapter=t.adapter,this.createManipulator(),this.updateDragState(),this.updateManipulatorTransform()}var s=t.prototype;return s.destroy=function(){r.isSome(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=null),this._handles=r.destroyMaybe(this._handles),this.tool.manipulators.remove(this.ringManipulator),this.ringManipulator=null},s.startAnimation=function(t){this.cancelActiveAnimation(),t.start();const e=o.addFrameTask({update:({deltaTime:e})=>{t.update(e)&&this.cancelActiveAnimation()}});this._activeAnimation={...t,frameTask:e}},s.cancelActiveAnimation=function(){r.isSome(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=r.destroyMaybe(this._activeAnimation))},s.forEachManipulator=function(t){t(this.ringManipulator,4)},s.createManipulator=function(){this.ringManipulator=this.createRingManipulator(),this.tool.manipulators.add(this.ringManipulator);const t=this.ringManipulator,e=this.tool.graphicState.graphic,a=M.createManipulatorDragEventPipeline(t,((t,a,i)=>{this._scaleRotateDragData=null,this.adapter.restart();const o={mode:"none",origin:u.clone(t.renderLocation),initialAngle:this.adapter.angle,angle:0,angleDir:0,scaleDir:0};this._scaleRotateDragData=o,this.updateDragState();const s=R.sv3d.get();this.tool.view.renderCoordsHelper.worldUpAtPosition(t.renderLocation,s),a.next(S.screenToRenderPlane(this.tool.view,g.fromPositionAndNormal(t.renderLocation,s,g.create()))).next((t=>{const a=g.normal(t.plane),i=D.calculateInputRotationTransform(t.renderStart,t.renderEnd,o.origin,a),s=T.cyclicalPI.shortestSignedDiff(o.angle,i);o.angleDir=n.clamp(o.angleDir+s,-_.ROTATE_INDICATOR_DIRECTION_BUFFER,_.ROTATE_INDICATOR_DIRECTION_BUFFER),o.angle=i;const l=O(o,t),c=l-this.adapter.scale;if(o.scaleDir=n.clamp(o.scaleDir+c,-_.SCALE_INDICATOR_DIRECTION_BUFFER,_.SCALE_INDICATOR_DIRECTION_BUFFER),this.onScaleChanged(),"none"===o.mode){const a=this.mode||C(t,t.plane,o.origin,this.tool.view.state.camera);if(r.isSome(a)){switch(a){case"rotate":this.tool.emit("graphic-rotate-start",{graphic:e,angle:0}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()});break;case"scale":this.tool.emit("graphic-scale-start",{graphic:e,xScale:1,yScale:1}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()})}o.mode=a}}switch(o.mode){case"rotate":this.adapter.angle=o.initialAngle+i;break;case"scale":this.adapter.scale=l,this.onScaleChanged()}switch(this.updateDragState(),this.updateManipulatorTransform(),t.action){case"start":case"update":switch(o.mode){case"rotate":this.tool.emit("graphic-rotate",{graphic:e,angle:n.rad2deg(o.angle)});break;case"scale":this.tool.emit("graphic-scale",{graphic:e,xScale:l,yScale:l})}break;case"end":switch(o.mode){case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:e,angle:n.rad2deg(o.angle)});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:e,xScale:l,yScale:l})}}"end"===t.action&&(this.startAnimation(v(this,(()=>this.onScaleChanged()))),this._scaleRotateDragData=null,this.updateDragState())})),i.next((()=>{if(this.adapter.cancel(),r.isSome(this._scaleRotateDragData)){switch(this._scaleRotateDragData.mode){case"none":break;case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:e,angle:0});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:e,xScale:1,yScale:1})}this.startAnimation(v(this,(()=>this.onScaleChanged()))),this._scaleRotateDragData=null,this.updateDragState()}}))}));this._handles.add(a),this._handles.add([this.ringManipulator.events.on("focus-changed",(t=>{"focus"===t.action?this.startAnimation(b(this,(()=>this.updateDelayedFocusedState()))):this.updateDelayedFocusedState()})),this.ringManipulator.events.on("immediate-click",(t=>{t.stopPropagation()})),l.init(this.tool.graphicState,"displaying",(t=>this.ringManipulator.available=t))])},s.onScaleChanged=function(){this.events.emit("scale-changed"),this.updateManipulatorTransform()},s.updateDelayedFocusedState=function(){this.ringManipulator.updateStateEnabled(f.DelayedFocused,this.getFocused())},s.updateDragState=function(){if(this.ringManipulator.updateStateEnabled(f.Unlocked,!(r.isSome(this._scaleRotateDragData)&&"none"!==this._scaleRotateDragData.mode)),r.isSome(this._scaleRotateDragData))switch(this._scaleRotateDragData.mode){case"rotate":this.ringManipulator.updateStateEnabled(f.ScaleIn|f.ScaleOut,!1),this.ringManipulator.updateStateEnabled(f.RotateLeft,this._scaleRotateDragData.angleDir<0),this.ringManipulator.updateStateEnabled(f.RotateRight,this._scaleRotateDragData.angleDir>=0);break;case"scale":this.ringManipulator.updateStateEnabled(f.RotateLeft|f.RotateRight,!1),this.ringManipulator.updateStateEnabled(f.ScaleIn,this._scaleRotateDragData.scaleDir<0),this.ringManipulator.updateStateEnabled(f.ScaleOut,this._scaleRotateDragData.scaleDir>=0)}else this.ringManipulator.updateStateEnabled(f.ScaleIn|f.ScaleOut|f.RotateLeft|f.RotateRight,!1)},s.updateManipulatorTransform=function(){const t=c.identity(R.sm4d.get()),e=this.adapter.angle;c.rotate(t,t,e,u.fromValues(0,0,1));const a=this.getScale(),i=c.fromScaling(R.sm4d.get(),d.set(R.sv3d.get(),a,a,a)),n=c.identity(R.sm4d.get());c.multiply(n,i,t),this.ringManipulator.modelTransform=n},s.createRingManipulator=function(){const t=(t,e,a)=>{const i=[],n=Math.ceil(_.GEOMETRY_SEGMENTS*(e-t)/(2*Math.PI));for(let r=0;r<n+1;r++){const o=t+r*(e-t)/n;i.push(u.fromValues(a*Math.cos(o),a*Math.sin(o),0))}return i},e=e=>t(0,2*Math.PI,e),a=t=>[[-t/2,0],[t/2,0],[t/2,_.RING_HEIGHT/2],[-t/2,_.RING_HEIGHT/2]],i=(t,e)=>A.createPathExtrusionGeometry(a(e),t,[],[],!1),n=e(_.RING_RADIUS),r=i(n,_.RING_THICKNESS),o={left:[],right:[]},s=[];for(let u=0;u<2;u++){const e=u*Math.PI-Math.PI/4,a=Math.PI/2-_.ROTATE_INDICATOR_ARC_LENGTH,n=e+a,r=e+Math.PI/2-a,l=t(n,r,_.INNER_INDICATOR_RADIUS),d=i(l,_.INDICATOR_THICKNESS);s.push(l),s.push(t(n,r,_.OUTER_INDICATOR_RADIUS-_.RING_THICKNESS/2)),o.left.push(d),o.right.push(d);for(let t=0;t<2;t++){const e=0===t,a=h.create();if(e){c.scale(a,a,[1,-1,1]),c.rotate(a,a,-n,[0,0,1]);const t=Math.round(_.ROTATE_INDICATOR_ARROW_PLACEMENT_PERCENTAGE*(l.length-1));a[12]=l[t][0],a[13]=l[t][1],a[14]=l[t][2]}else{c.rotate(a,a,r,[0,0,1]);const t=Math.round((1-_.ROTATE_INDICATOR_ARROW_PLACEMENT_PERCENTAGE)*(l.length-1));a[12]=l[t][0],a[13]=l[t][1],a[14]=l[t][2]}const i=A.createExtrudedTriangle(_.ROTATE_INDICATOR_ARROW_TIP_LENGTH,0,_.ROTATE_INDICATOR_ARROW_TIP_RADIUS,_.RING_HEIGHT);A.transformInPlace(i,a),(e?o.left:o.right).push(i)}}const l=[];for(let c=0;c<2;c++){const e=c*Math.PI-Math.PI/4,a=Math.PI/2-_.SCALE_INDICATOR_ARC_LENGTH,n=e+a,r=e+Math.PI/2-a,o=t(n,r,_.OUTER_INDICATOR_RADIUS);l.push(i(o,_.INDICATOR_THICKNESS))}const d=e(_.RING_RADIUS+_.SCALE_INDICATOR_OFFSET1),g=e(_.RING_RADIUS+_.SCALE_INDICATOR_OFFSET2),p=i(d,_.INDICATOR_THICKNESS),R=i(g,_.INDICATOR_THICKNESS),D=e(_.RING_RADIUS-_.SCALE_INDICATOR_OFFSET1),S=e(_.RING_RADIUS-_.SCALE_INDICATOR_OFFSET2),T=i(D,_.INDICATOR_THICKNESS),E=i(S,_.INDICATOR_THICKNESS),M=this.createMaterial(),N=this.createMaterial(.66),O=this.createMaterial(.5),C=this.createMaterial(.33);let y=[{geometry:r,material:M,stateMask:f.DelayedFocused},{geometry:r,material:O,stateMask:0}];this.mode&&"scale"!==this.mode||(y=y.concat([{geometry:l,material:M,stateMask:f.DelayedFocused|f.Unlocked},{geometry:p,material:N,stateMask:f.DelayedFocused|f.ScaleIn},{geometry:R,material:C,stateMask:f.DelayedFocused|f.ScaleIn},{geometry:T,material:N,stateMask:f.DelayedFocused|f.ScaleOut},{geometry:E,material:C,stateMask:f.DelayedFocused|f.ScaleOut}])),this.mode&&"rotate"!==this.mode||(y=y.concat([{geometry:o.right,material:M,stateMask:f.DelayedFocused|f.Unlocked},{geometry:o.left,material:M,stateMask:f.DelayedFocused|f.RotateLeft},{geometry:o.right,material:M,stateMask:f.DelayedFocused|f.RotateRight}]));const v=[n,...s];return new I.Manipulator3D({view:this.tool.view,renderObjects:y,autoScaleRenderObjects:!1,worldOriented:!0,radius:_.RING_THICKNESS,focusMultiplier:1,touchMultiplier:1.5,elevationInfo:m.getGraphicEffectiveElevationInfo(this.tool.graphicState.graphic),collisionType:{type:"ribbon",paths:v,direction:u.fromValues(0,0,1)}})},s.createMaterial=function(t=1){const e=[..._.HANDLE_COLOR,t];return new E.ColorMaterial({color:e,transparent:1!==t,cullFace:2,renderOccluded:2})},e._createClass(t,[{key:"angle",get:function(){return this.adapter.angle}},{key:"scale",get:function(){return this.adapter.scale}},{key:"location",set:function(t){this.ringManipulator.location=t}},{key:"elevationAlignedLocation",set:function(t){this.ringManipulator.elevationAlignedLocation=t}},{key:"grabbing",get:function(){return this.ringManipulator.grabbing}},{key:"interactive",set:function(t){this.ringManipulator.interactive=t}},{key:"test",get:function(){return{ringManipulator:this.ringManipulator}}}]),t}();function O(t,e){const a=d.subtract(R.sv3d.get(),e.renderStart,t.origin),i=d.subtract(R.sv3d.get(),e.renderEnd,t.origin),n=d.length(a),r=d.length(i);return 0===n?0:r/n}function C(t,e,a,i){const{renderStart:n,renderEnd:r}=t,o=y(n,i,R.sv3d.get()),s=y(r,i,R.sv3d.get());if(d.squaredDistance(o,s)<_.DRAG_THRESHOLD_PX*_.DRAG_THRESHOLD_PX)return null;const l=d.subtract(R.sv3d.get(),n,a),c=d.cross(R.sv3d.get(),l,g.normal(e)),h=n,u=d.add(R.sv3d.get(),h,c),m=y(a,i,R.sv3d.get()),I=o,D=y(u,i,R.sv3d.get()),S=d.subtract(R.sv3d.get(),D,I),T=d.subtract(R.sv3d.get(),o,m),A=p.wrap(I,S),E=p.wrap(m,T);return p.distance2(A,s)<p.distance2(E,s)?"rotate":"scale"}function y(t,e,a){return e.projectToScreen(t,k),d.set(a,k[0],k[1],0)}function v(t,e){let a=null,i=1;const n=()=>i;return{start:()=>{i=t.getScale(),a=t.getScale,t.getScale=n,e()},update:t=>(i+=((i+1)/2-i)*Math.min(t*_.RING_RESET_ANIMATION_SPEED_FACTOR,1),e(),Math.abs(i-1)<.01?1:0),destroy:()=>{t.getScale=a,e()}}}function b(t,e){let a=0,i=null;const n=()=>!1;return{start:()=>{i=t.getFocused,t.getFocused=n,a=0,e()},update:t=>(a+=t,!i()||a>_.RING_INDICATOR_DELAY_MS?1:0),destroy:()=>{t.getFocused=i,e()}}}const k=s.createScreenPointArray();t.GraphicScaleRotateTransform=N,Object.defineProperty(t,"__esModule",{value:!0})}));
