/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/Evented","../../../../../core/Handles","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/scheduling","../../../../../core/screenUtils","../../../../../core/watchUtils","../../../../../chunks/mat4","../../../../../chunks/mat4f64","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../geometry/support/plane","../../../../../geometry/support/ray","../../../../../geometry/support/vectorStacks","../../../../../support/elevationInfoUtils","../../Manipulator3D","../../manipulatorUtils","../dragEventPipeline3D","../ManipulatorType","../manipulations/config","../../../support/mathUtils","../../../webgl-engine/lib/basicInterfaces","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/lib/Material","../../../webgl-engine/materials/ColorMaterial","../../../../interactive/dragEventPipeline","../../../../interactive/interfaces"],(function(t,e,a,i,n,o,s,r,l,c,u,h,d,g,p,_,m,S,R,I,D,T,M,E,A,f,C,O,N){"use strict";var v;!function(t){t.ScaleIn=N.ManipulatorStateCustomFlags.Custom2,t.ScaleOut=N.ManipulatorStateCustomFlags.Custom3,t.RotateLeft=N.ManipulatorStateCustomFlags.Custom4,t.RotateRight=N.ManipulatorStateCustomFlags.Custom5,t.Unlocked=N.ManipulatorStateCustomFlags.Custom7,t.DelayedFocused=N.ManipulatorStateCustomFlags.Custom8,t.TouchInput=N.ManipulatorStateCustomFlags.Custom12}(v||(v={}));let y=function(){function t(t){this.mode=null,this._handles=new i,this._scaleRotateDragData=null,this._activeAnimation=null,this.events=new a,this.getFocused=()=>this.ringManipulator.focused,this.getScale=()=>o.isSome(this._scaleRotateDragData)&&"scale"===this._scaleRotateDragData.mode?this.adapter.scale:1,this.tool=t.tool,this.mode=t.mode,this.adapter=t.adapter,this._createManipulator(),this._updateDragState(),this._updateManipulatorTransform()}var r=t.prototype;return r.destroy=function(){o.isSome(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=null),this._handles=o.destroyMaybe(this._handles),this.tool.manipulators.remove(this.ringManipulator),this.ringManipulator=null},r.startAnimation=function(t){this.cancelActiveAnimation(),t.start();const e=s.addFrameTask({update:({deltaTime:e})=>{t.update(e)&&this.cancelActiveAnimation()}});this._activeAnimation={...t,frameTask:e}},r.cancelActiveAnimation=function(){o.isSome(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=o.destroyMaybe(this._activeAnimation))},r.forEachManipulator=function(t){t(this.ringManipulator,D.ManipulatorType.SCALE_ROTATE)},r._createManipulator=function(){this.ringManipulator=this._createRingManipulator(),this.tool.manipulators.add(this.ringManipulator);const t=this.ringManipulator,e=this.tool.graphicState.graphic,a=O.createManipulatorDragEventPipeline(t,((t,a,i)=>{this._scaleRotateDragData=null,this.adapter.restart();const s={mode:"none",origin:d.clone(t.renderLocation),initialAngle:this.adapter.angle,angle:0,angleDir:0,scaleDir:0};this._scaleRotateDragData=s,this._updateDragState();const r=_.sv3d.get();this.tool.view.renderCoordsHelper.worldUpAtPosition(t.renderLocation,r),a.next(I.screenToRenderPlane(this.tool.view,g.fromPositionAndNormal(t.renderLocation,r,g.create()))).next((t=>{const a=g.normal(t.plane),i=R.calculateInputRotationTransform(t.renderStart,t.renderEnd,s.origin,a),r=M.cyclicalPI.shortestSignedDiff(s.angle,i);s.angleDir=n.clamp(s.angleDir+r,-T.ROTATE_INDICATOR_DIRECTION_BUFFER,T.ROTATE_INDICATOR_DIRECTION_BUFFER),s.angle=i;const l=F(s,t),c=l-this.adapter.scale;if(s.scaleDir=n.clamp(s.scaleDir+c,-T.SCALE_INDICATOR_DIRECTION_BUFFER,T.SCALE_INDICATOR_DIRECTION_BUFFER),this._onScaleChanged(),"none"===s.mode){const a=this.mode||b(t,t.plane,s.origin,this.tool.view.state.camera);if(o.isSome(a)){switch(a){case"rotate":this.tool.emit("graphic-rotate-start",{graphic:e,angle:0}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()});break;case"scale":this.tool.emit("graphic-scale-start",{graphic:e,xScale:1,yScale:1}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()})}s.mode=a}}switch(s.mode){case"rotate":this.adapter.angle=s.initialAngle+i;break;case"scale":this.adapter.scale=l,this._onScaleChanged()}switch(this._updateDragState(),this._updateManipulatorTransform(),t.action){case"start":case"update":switch(s.mode){case"rotate":this.tool.emit("graphic-rotate",{graphic:e,angle:n.rad2deg(s.angle)});break;case"scale":this.tool.emit("graphic-scale",{graphic:e,xScale:l,yScale:l})}break;case"end":switch(s.mode){case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:e,angle:n.rad2deg(s.angle)});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:e,xScale:l,yScale:l})}}"end"===t.action&&(this.startAnimation(U(this,(()=>this._onScaleChanged()))),this._scaleRotateDragData=null,this._updateDragState())})),i.next((()=>{if(this.adapter.cancel(),o.isSome(this._scaleRotateDragData)){switch(this._scaleRotateDragData.mode){case"none":break;case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:e,angle:0});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:e,xScale:1,yScale:1})}this.startAnimation(U(this,(()=>this._onScaleChanged()))),this._scaleRotateDragData=null,this._updateDragState()}}))}));this._handles.add(a),this._handles.add([this.ringManipulator.events.on("focus-changed",(t=>{"focus"===t.action?this.startAnimation(G(this,(()=>this._updateDelayedFocusedState()))):this._updateDelayedFocusedState()})),this.ringManipulator.events.on("immediate-click",(t=>{t.stopPropagation()})),l.init(this.tool.graphicState,"displaying",(t=>this.ringManipulator.available=t))])},r._onScaleChanged=function(){this.events.emit("scale-changed"),this._updateManipulatorTransform()},r._updateDelayedFocusedState=function(){this.ringManipulator.updateStateEnabled(v.DelayedFocused,this.getFocused())},r._updateDragState=function(){if(this.ringManipulator.updateStateEnabled(v.Unlocked,!(o.isSome(this._scaleRotateDragData)&&"none"!==this._scaleRotateDragData.mode)),o.isSome(this._scaleRotateDragData))switch(this._scaleRotateDragData.mode){case"rotate":this.ringManipulator.updateStateEnabled(v.ScaleIn|v.ScaleOut,!1),this.ringManipulator.updateStateEnabled(v.RotateLeft,this._scaleRotateDragData.angleDir<0),this.ringManipulator.updateStateEnabled(v.RotateRight,this._scaleRotateDragData.angleDir>=0);break;case"scale":this.ringManipulator.updateStateEnabled(v.RotateLeft|v.RotateRight,!1),this.ringManipulator.updateStateEnabled(v.ScaleIn,this._scaleRotateDragData.scaleDir<0),this.ringManipulator.updateStateEnabled(v.ScaleOut,this._scaleRotateDragData.scaleDir>=0)}else this.ringManipulator.updateStateEnabled(v.ScaleIn|v.ScaleOut|v.RotateLeft|v.RotateRight,!1)},r._updateManipulatorTransform=function(){const t=c.fromRotation(_.sm4d.get(),this.adapter.angle,d.fromValues(0,0,1)),e=this.getScale(),a=c.fromScaling(_.sm4d.get(),h.set(_.sv3d.get(),e,e,e));this.ringManipulator.modelTransform=c.multiply(_.sm4d.get(),a,t)},r._createRingManipulator=function(){const t=(t,e,a)=>{const i=[],n=Math.ceil(T.GEOMETRY_SEGMENTS*(e-t)/(2*Math.PI));for(let o=0;o<n+1;o++){const s=t+o*(e-t)/n;i.push(d.fromValues(a*Math.cos(s),a*Math.sin(s),0))}return i},e=e=>t(0,2*Math.PI,e),a=t=>[[-t/2,0],[t/2,0],[t/2,T.RING_HEIGHT/2],[-t/2,T.RING_HEIGHT/2]],i=(t,e)=>A.createPathExtrusionGeometry(a(e),t,[],[],!1),n=e(T.RING_RADIUS),o=i(n,T.RING_THICKNESS),s={left:[],right:[]},r=[];for(let d=0;d<2;d++){const e=d*Math.PI-Math.PI/4,a=Math.PI/2-T.ROTATE_INDICATOR_ARC_LENGTH,n=e+a,o=e+Math.PI/2-a,l=t(n,o,T.INNER_INDICATOR_RADIUS),h=i(l,T.INDICATOR_THICKNESS);r.push(l),r.push(t(n,o,T.OUTER_INDICATOR_RADIUS-T.RING_THICKNESS/2)),s.left.push(h),s.right.push(h);for(let t=0;t<2;t++){const e=0===t,a=u.create();if(e){c.scale(a,a,[1,-1,1]),c.rotate(a,a,-n,[0,0,1]);const t=Math.round(T.ROTATE_INDICATOR_ARROW_PLACEMENT_PERCENTAGE*(l.length-1));a[12]=l[t][0],a[13]=l[t][1],a[14]=l[t][2]}else{c.rotate(a,a,o,[0,0,1]);const t=Math.round((1-T.ROTATE_INDICATOR_ARROW_PLACEMENT_PERCENTAGE)*(l.length-1));a[12]=l[t][0],a[13]=l[t][1],a[14]=l[t][2]}const i=A.createExtrudedTriangle(T.ROTATE_INDICATOR_ARROW_TIP_LENGTH,0,T.ROTATE_INDICATOR_ARROW_TIP_RADIUS,T.RING_HEIGHT);A.transformInPlace(i,a),(e?s.left:s.right).push(i)}}const l=[];for(let c=0;c<2;c++){const e=c*Math.PI-Math.PI/4,a=Math.PI/2-T.SCALE_INDICATOR_ARC_LENGTH,n=e+a,o=e+Math.PI/2-a,s=t(n,o,T.OUTER_INDICATOR_RADIUS);l.push(i(s,T.INDICATOR_THICKNESS))}const h=e(T.RING_RADIUS+T.SCALE_INDICATOR_OFFSET1),g=e(T.RING_RADIUS+T.SCALE_INDICATOR_OFFSET2),p=i(h,T.INDICATOR_THICKNESS),_=i(g,T.INDICATOR_THICKNESS),R=e(T.RING_RADIUS-T.SCALE_INDICATOR_OFFSET1),I=e(T.RING_RADIUS-T.SCALE_INDICATOR_OFFSET2),D=i(R,T.INDICATOR_THICKNESS),M=i(I,T.INDICATOR_THICKNESS),E=this._createMaterial(),f=this._createMaterial(.66),C=this._createMaterial(.5),O=this._createMaterial(.33);let y=[{geometry:o,material:E,stateMask:v.DelayedFocused},{geometry:o,material:C,stateMask:N.ManipulatorStateFlags.None}];this.mode&&"scale"!==this.mode||(y=y.concat([{geometry:l,material:E,stateMask:v.DelayedFocused|v.Unlocked},{geometry:p,material:f,stateMask:v.DelayedFocused|v.ScaleIn},{geometry:_,material:O,stateMask:v.DelayedFocused|v.ScaleIn},{geometry:D,material:f,stateMask:v.DelayedFocused|v.ScaleOut},{geometry:M,material:O,stateMask:v.DelayedFocused|v.ScaleOut}])),this.mode&&"rotate"!==this.mode||(y=y.concat([{geometry:s.right,material:E,stateMask:v.DelayedFocused|v.Unlocked},{geometry:s.left,material:E,stateMask:v.DelayedFocused|v.RotateLeft},{geometry:s.right,material:E,stateMask:v.DelayedFocused|v.RotateRight}]));const F=[n,...r];return new S.Manipulator3D({view:this.tool.view,renderObjects:y,autoScaleRenderObjects:!1,worldOriented:!0,radius:T.RING_THICKNESS,focusMultiplier:1,touchMultiplier:1.5,elevationInfo:m.getGraphicEffectiveElevationInfo(this.tool.graphicState.graphic),collisionType:{type:"ribbon",paths:F,direction:d.fromValues(0,0,1)}})},r._createMaterial=function(t=1){const e=[...T.HANDLE_COLOR,t];return new C.ColorMaterial({color:e,transparent:1!==t,cullFace:E.CullFaceOptions.Back,renderOccluded:f.RenderOccludedFlag.Transparent})},e._createClass(t,[{key:"angle",get:function(){return this.adapter.angle}},{key:"scale",get:function(){return this.adapter.scale}},{key:"location",set:function(t){this.ringManipulator.location=t}},{key:"elevationAlignedLocation",set:function(t){this.ringManipulator.elevationAlignedLocation=t}},{key:"grabbing",get:function(){return this.ringManipulator.grabbing}},{key:"interactive",set:function(t){this.ringManipulator.interactive=t}},{key:"test",get:function(){return{ringManipulator:this.ringManipulator}}}]),t}();function F(t,e){const a=h.subtract(_.sv3d.get(),e.renderStart,t.origin),i=h.subtract(_.sv3d.get(),e.renderEnd,t.origin),n=h.length(a),o=h.length(i);return 0===n?0:o/n}function b(t,e,a,i){const{renderStart:n,renderEnd:o}=t,s=k(n,i,_.sv3d.get()),r=k(o,i,_.sv3d.get());if(h.squaredDistance(s,r)<T.DRAG_THRESHOLD_PX*T.DRAG_THRESHOLD_PX)return null;const l=h.subtract(_.sv3d.get(),n,a),c=h.cross(_.sv3d.get(),l,g.normal(e)),u=n,d=h.add(_.sv3d.get(),u,c),m=k(a,i,_.sv3d.get()),S=s,R=k(d,i,_.sv3d.get()),I=h.subtract(_.sv3d.get(),R,S),D=h.subtract(_.sv3d.get(),s,m),M=p.wrap(S,I),E=p.wrap(m,D);return p.distance2(M,r)<p.distance2(E,r)?"rotate":"scale"}function k(t,e,a){return e.projectToScreen(t,L),h.set(a,L[0],L[1],0)}var P;function U(t,e){let a=null,i=1;const n=()=>i;return{start:()=>{i=t.getScale(),a=t.getScale,t.getScale=n,e()},update:t=>(i+=((i+1)/2-i)*Math.min(t*T.RING_RESET_ANIMATION_SPEED_FACTOR,1),e(),Math.abs(i-1)<.01?P.STOP:P.CONTINUE),destroy:()=>{t.getScale=a,e()}}}function G(t,e){let a=0,i=null;const n=()=>!1;return{start:()=>{i=t.getFocused,t.getFocused=n,a=0,e()},update:t=>(a+=t,!i()||a>T.RING_INDICATOR_DELAY_MS?P.STOP:P.CONTINUE),destroy:()=>{t.getFocused=i,e()}}}!function(t){t[t.CONTINUE=0]="CONTINUE",t[t.STOP=1]="STOP"}(P||(P={}));const L=r.createScreenPointArray();t.GraphicScaleRotateTransform=y,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
