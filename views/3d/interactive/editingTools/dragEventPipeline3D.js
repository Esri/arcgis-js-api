// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../../geometry","../../../../core/mathUtils","../../../../core/maybe","../../../../core/screenUtils","../../../../core/libs/gl-matrix-2/vec3","../../../../core/libs/gl-matrix-2/vec3f64","../../../../support/elevationInfoUtils","../../support/geometryUtils","../../support/geometryUtils","../../support/pointUtils","../../support/stack","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/intersectorUtils","../../../interactive/dragEventPipeline"],(function(e,r,n,t,o,a,c,i,s,l,u,d,p,v,f,m,g){"use strict";function S(e,r){var t=s.vec3f64.create(),o=s.vec3f64.create(),a=!1;return function(i){if("start"===i.action){var s=c.screenPointObjectToArray(i.screenStart,c.castScreenPointArray(v.sv2d.get())),l=d.ray.fromScreen(e.state.camera,s,A);a=d.plane.intersectRay(r,l,t)}if(!a)return null;var u=c.screenPointObjectToArray(i.screenEnd,c.castScreenPointArray(v.sv2d.get())),p=d.ray.fromScreen(e.state.camera,u,A);return d.plane.intersectRay(r,p,o)?n.__assign(n.__assign({},i),{renderStart:t,renderEnd:o,plane:r,ray:p}):null}}function y(e,r,t,o){void 0===o&&(o=null);var i=null;return function(s){if("start"===s.action&&(i=e.sceneIntersectionHelper.intersectElevationFromScreen(c.createScreenPointArray(s.screenStart.x,s.screenStart.y),r,t),a.isSome(i)&&a.isSome(o)&&!p.pointToPoint(i,i,o)))return null;if(a.isNone(i))return null;var l=e.sceneIntersectionHelper.intersectElevationFromScreen(c.createScreenPointArray(s.screenEnd.x,s.screenEnd.y),r,t);return a.isSome(l)?a.isSome(o)&&!p.pointToPoint(l,l,o)?null:n.__assign(n.__assign({},s),{mapStart:i,mapEnd:l}):null}}function T(e,r,n,t){return void 0===t&&(t=null),y(e,n,l.getZForElevationMode(r,e,n),t)}function P(e,r,n,t){return void 0===t&&(t=null),T(e,n,l.getGraphicEffectiveElevationInfo(r),t)}function E(e,r){var n=s.vec3f64.create(),t=i.vec3.length(r);e.renderCoordsHelper.worldUpAtPosition(r,n);var a=s.vec3f64.create(),c=s.vec3f64.create(),l=function(a){(i.vec3.subtract(a,a,r),u.vector.projectPoint(n,a,a),"global"===e.viewingMode)&&(i.vec3.length(a)*o.sign(i.vec3.dot(n,a))<.001-t&&i.vec3.subtract(a,i.vec3.scale(a,n,.001),r));return i.vec3.add(a,a,r),a};return function(e){return e.renderStart=l(i.vec3.copy(a,e.renderStart)),e.renderEnd=l(i.vec3.copy(c,e.renderEnd)),e}}function b(e,r){var o=e.renderCoordsHelper;return function(e){var c=o.fromRenderCoords(e.renderStart,new t.Point,r),i=o.fromRenderCoords(e.renderEnd,new t.Point,r);return a.isSome(c)&&a.isSome(i)?n.__assign(n.__assign({},e),{mapStart:c,mapEnd:i}):null}}Object.defineProperty(r,"__esModule",{value:!0}),r.screenToMap3D=r.hideManipulatorWhileDragging=r.convertToMapCoordinates=r.projectToWorldUp=r.screenToZConstrained=r.screenToMapXYForGraphic=r.screenToMapXYForGraphicAtLocation=r.screenToMapXYAtLocation=r.screenToMapXY=r.screenToRenderPlane=void 0,r.screenToRenderPlane=S,r.screenToMapXY=y,r.screenToMapXYAtLocation=T,r.screenToMapXYForGraphicAtLocation=P,r.screenToMapXYForGraphic=function(e,r,n,t){var o=r.toMap(e.screenStart,{include:[n]});return a.isSome(o)?P(r,n,o,t):null},r.screenToZConstrained=function(e,r,n){var t=null,o=new g.EventPipeline;return o.next(S(e,function(e,r){var n=_,t=M,o=d.plane.create();e.renderCoordsHelper.worldUpAtPosition(r,n);var a=i.vec3.cross(o,n,i.vec3.subtract(t,r,e.state.camera.eye));return i.vec3.cross(a,a,n),d.plane.fromPositionAndNormal(r,a,o)}(e,r))).next(E(e,r)).next(b(e,n)).next((function(e){e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,t=e})),function(e){return t=null,o.execute(e),t}},r.projectToWorldUp=E,r.convertToMapCoordinates=b,r.hideManipulatorWhileDragging=function(e){var r=null;return function(n){switch(n.action){case"start":r=e.disableDisplay();break;case"end":case"cancel":a.isSome(r)&&(r.remove(),r=null)}return n}},r.screenToMap3D=function(e,r){void 0===r&&(r=null);var o=null,i=new f.Intersector(e.state.mode);i.options.selectionMode=!0,i.options.store=0;var l=c.createScreenPointArray(),u={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},d=s.vec3f64.create(),p=a.unwrapOr(r,e.spatialReference),v=function(r){e.map.ground&&e.map.ground.opacity<1?u.exclude.add(m.TERRAIN_ID):u.exclude.delete(m.TERRAIN_ID),e.sceneIntersectionHelper.intersectIntersectorScreen(c.screenPointObjectToArray(r,l),i,u);var n,o=i.results.min;if(o.getIntersectionPoint(d))n="TerrainRenderer"===o.intersector?0:1;else{if(!i.results.ground.getIntersectionPoint(d))return null;n=0}var a=new t.Point({spatialReference:p});return e.renderCoordsHelper.fromRenderCoords(d,a),{location:a,surfaceType:n}};return function(e){if("start"===e.action){var r=v(e.screenStart);o=a.isSome(r)?r.location:null}if(a.isNone(o))return null;var t=v(e.screenEnd);return a.isSome(t)?n.__assign(n.__assign({},e),{mapStart:o,mapEnd:t.location,surfaceType:t.surfaceType}):null}};var _=s.vec3f64.create(),M=s.vec3f64.create(),A=d.ray.create()}));