/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/projection","../../../../geometry/support/plane","../../../../geometry/support/ray","../../../../geometry/support/vector","../../../../geometry/support/vectorStacks","../../../../support/elevationInfoUtils","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/verticalOffsetUtils","../../../interactive/dragEventPipeline"],(function(e,n,r,t,o,c,s,a,i,l,u,d,p,m,f){"use strict";function S(e,n){return g(e,(()=>n))}function y(e){return g(e,(e=>e.plane))}function g(e,t){const c=o.create(),a=o.create();let i=!1;return o=>{const u=t(o);if("start"===o.action){const t=r.screenPointObjectToArray(o.screenStart,r.castScreenPointArray(l.sv2d.get())),a=d.fromScreen(e.state.camera,t,j);n.isSome(a)&&(i=s.intersectRay(u,a,c))}if(!i)return null;const p=r.screenPointObjectToArray(o.screenEnd,r.castScreenPointArray(l.sv2d.get())),m=d.fromScreen(e.state.camera,p,j);return n.isNone(m)?null:s.intersectRay(u,m,a)?{...o,renderStart:c,renderEnd:a,plane:u,ray:m}:null}}function E(e,t,o,s=null,a=null){let i=null;return l=>{if("start"===l.action&&(i=e.sceneIntersectionHelper.intersectElevationFromScreen(r.createScreenPointArray(l.screenStart.x,l.screenStart.y),t,o,a),n.isSome(i)&&n.isSome(s)&&!c.projectPoint(i,i,s)))return null;if(n.isNone(i))return null;const u=e.sceneIntersectionHelper.intersectElevationFromScreen(r.createScreenPointArray(l.screenEnd.x,l.screenEnd.y),t,o,a);return n.isSome(u)?n.isSome(s)&&!c.projectPoint(u,u,s)?null:{...l,mapStart:i,mapEnd:u}:null}}function v(e,n,r,t=null,o=null){return E(e,r,u.getZForElevationMode(n,e,r),t,o)}function P(e,n,r,t=null,o=null){return v(e,r,u.getGraphicEffectiveElevationInfo(n),t,o)}function b(e,r,t,o){const c=r.toMap(e.screenStart,{include:[t]});return n.isSome(c)?P(r,t,c,o):null}function T(e,n){const r=R,o=w,c=s.create();e.renderCoordsHelper.worldUpAtPosition(n,r);const a=t.cross(c,r,t.subtract(o,n,e.state.camera.eye));return t.cross(a,a,r),s.fromPositionAndNormal(n,a,c)}function A(e,n,r){let t=null;const o=new f.EventPipeline;return o.next(S(e,T(e,n))).next(I(e,n)).next(x(e,r)).next((e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,t=e})),e=>(t=null,o.execute(e),t)}function I(e,n){const r=o.create(),c=t.length(n);e.renderCoordsHelper.worldUpAtPosition(n,r);const s=o.create(),a=o.create(),l=o=>{if(t.subtract(o,o,n),i.projectPoint(r,o,o),"global"===e.viewingMode){t.length(o)*Math.sign(t.dot(r,o))<.001-c&&t.subtract(o,t.scale(o,r,.001),n)}return t.add(o,o,n),o};return e=>(e.renderStart=l(t.copy(s,e.renderStart)),e.renderEnd=l(t.copy(a,e.renderEnd)),e)}function x(e,r){const t=e.renderCoordsHelper;return e=>{const o=t.fromRenderCoords(e.renderStart,r),c=t.fromRenderCoords(e.renderEnd,r);return n.isSome(o)&&n.isSome(c)?{...e,mapStart:o,mapEnd:c}:null}}function M(e){let r=null;return t=>{switch(t.action){case"start":r=e.disableDisplay();break;case"end":case"cancel":n.isSome(r)&&(r.remove(),r=null)}return t}}function h(e,t=null){const c=p.newIntersector(e.state.viewingMode);c.options.selectionMode=!0,c.options.store=0,c.options.hud=!1;const s=r.createScreenPointArray(),a={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},i=o.create(),l=n.unwrapOr(t,e.spatialReference),u=n=>{e.map.ground&&e.map.ground.opacity<1?a.exclude.add(m.TERRAIN_ID):a.exclude.delete(m.TERRAIN_ID),e.sceneIntersectionHelper.intersectIntersectorScreen(r.screenPointObjectToArray(n,s),c,a);const t=c.results.min;let o;if(t.getIntersectionPoint(i))o=2===t.intersector?0:1;else{if(!c.results.ground.getIntersectionPoint(i))return null;o=0}return{location:e.renderCoordsHelper.fromRenderCoords(i,l),surfaceType:o}};let d;return e=>{if("start"===e.action){const r=u(e.screenStart);d=n.isSome(r)?r.location:null}if(n.isNone(d))return null;const r=u(e.screenEnd);return n.isSome(r)&&n.isSome(r.location)?{...e,mapStart:d,mapEnd:r.location,surfaceType:r.surfaceType}:null}}const R=o.create(),w=o.create(),j=a.create();e.convertToMapCoordinates=x,e.hideManipulatorWhileDragging=M,e.projectToWorldUp=I,e.screenToMap3D=h,e.screenToMapXYAtLocation=v,e.screenToMapXYForGraphic=b,e.screenToMapXYForGraphicAtLocation=P,e.screenToRenderPlane=S,e.screenToRenderPlaneFromEvent=y,e.screenToZConstrained=A,Object.defineProperty(e,"__esModule",{value:!0})}));
