/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../Color","../../../../../core/Evented","../../../../../core/Handles","../../../../../core/handleUtils","../../../../../core/maybe","../../../../../chunks/mat4","../../../../../chunks/mat4f64","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../geometry/support/vectorStacks","../../../../../support/elevationInfoUtils","../../Manipulator3D","../dragEventPipeline3D","../settings","./config","./Manipulation","./moveUtils","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/materials/ColorMaterial","../../../../interactive/dragEventPipeline"],(function(t,a,e,r,i,n,o,s,l,u,p,c,d,h,_,f,g,M,m,v,w,y){"use strict";let A=function(t){function M(a){var e;return(e=t.call(this)||this)._handles=new i,e._arrowManipulatorInfos=new Array,e._opaqueMaterial=e.createMaterial(),e._transparentMaterial=e.createMaterial(.5),e._angle=0,e._scale=1,e._radius=g.DISC_RADIUS,e._updateAfterDrag=!1,e.events=new r,e._tool=a.tool,e._view=a.view,null!=a.radius&&(e._radius=a.radius),e._createManipulators(),e.forEachManipulator((t=>e._tool.manipulators.add(t))),e}a._inheritsLoose(M,t);var A=M.prototype;return A.destroy=function(){this.forEachManipulator((t=>{this._tool.manipulators.remove(t),t.destroy()})),this._handles.removeAll(),this._tool=null,this._view=null,this._arrowManipulatorInfos.length=0},A.forEachManipulator=function(t){this._arrowManipulatorInfos.map((({manipulator:a})=>t(a,1)))},A.createGraphicDragPipeline=function(t,a,e){const r=a.graphic,i=d.getGraphicEffectiveElevationInfo(r),n=o.unwrap(r.geometry).spatialReference;return m.createGraphicMoveDragPipeline(a,e,(a=>this.createDragPipeline(((e,r,i,n,o)=>a(e,t(e,r,i,n,o),i)),i,n,r)),this._view.state.viewingMode)},A.createDragPipeline=function(t,a,e,r){return n.handlesGroup(this._arrowManipulatorInfos.map((({manipulator:i},n)=>y.createManipulatorDragEventPipeline(i,((i,o,s,l,u)=>{const p=o.next((t=>({...t,manipulatorType:1}))).next(y.dragAtLocation(this._view,i.elevationAlignedLocation)).next(_.screenToMapXYAtLocation(this._view,i.elevationAlignedLocation,a,e,r)).next(y.constrainToMapAxis(i.location,this.angle+(n+1)*Math.PI*.5)).next(y.addScreenDelta());t(i,p,s,l,u)})))))},A._updateManipulators=function(){for(let t=0;t<this._arrowManipulatorInfos.length;t++)this._updateArrowManipulator(this._arrowManipulatorInfos[t],t);this._updateManipulatorTransform()},A._updateArrowManipulator=function({manipulator:t,transform:a},e){const r=this._radius/g.DISC_RADIUS,i=g.DISC_TRANSLATE_ARROW_SIZE*r,n=i*Math.sqrt(3)/2,o=v.createExtrudedTriangle(n,i/2,i/2,g.DISC_HEIGHT);v.transformInPlace(o,s.fromTranslation(c.sm4d.get(),u.set(c.sv3d.get(),0,-n/3,0))),t.renderObjects=[{geometry:o,material:this._opaqueMaterial,stateMask:2},{geometry:o,material:this._transparentMaterial,stateMask:1}],t.radius=n/3*2*1.2;const l=s.identity(c.sm4d.get());s.fromZRotation(l,e*Math.PI/2);const p=s.identity(c.sm4d.get());s.fromTranslation(p,u.set(c.sv3d.get(),0,g.DISC_TRANSLATE_ARROW_OFFSET*r,0)),s.multiply(a,l,p)},A._createManipulators=function(){for(let t=0;t<4;t++){const a=this._createArrowManipulator(t);this._arrowManipulatorInfos.push(a)}this._updateManipulatorTransform()},A._updateManipulatorTransform=function(){const t=this.angle,a=s.identity(c.sm4d.get());s.rotate(a,a,t,p.fromValues(0,0,1));const e=s.fromScaling(c.sm4d.get(),u.set(c.sv3d.get(),this.displayScale,this.displayScale,this.displayScale)),r=s.identity(c.sm4d.get());s.multiply(r,e,a);for(const i of this._arrowManipulatorInfos){const t=s.multiply(c.sm4d.get(),r,i.transform);i.manipulator.modelTransform=t}},A._createArrowManipulator=function(t){const a=new h.Manipulator3D({view:this._view,autoScaleRenderObjects:!1,worldOriented:!0,focusMultiplier:1,touchMultiplier:1,collisionType:{type:"disc",direction:p.fromValues(0,0,1)}}),e={manipulator:a,transform:l.create()};return this._updateArrowManipulator(e,t),this._handles.add(a.events.on("drag",(t=>{this._updateAfterDrag&&"end"===t.action&&!this.dragging&&(this._updateManipulatorTransform(),this._updateAfterDrag=!1)}))),e},A.createMaterial=function(t=1){const a=e.toUnitRGBA(f.colors.main);return a[3]*=t,new w.ColorMaterial({color:a,transparent:1!==t,cullFace:2,renderOccluded:2})},a._createClass(M,[{key:"orthogonalAvailable",set:function(t){this._arrowManipulatorInfos[1].manipulator.available=t,this._arrowManipulatorInfos[3].manipulator.available=t}},{key:"angle",get:function(){return this._angle},set:function(t){this._angle=t,this.dragging?this._updateAfterDrag=!0:this._updateManipulatorTransform()}},{key:"displayScale",get:function(){return this._scale},set:function(t){this._scale=t,this._updateManipulatorTransform()}},{key:"radius",get:function(){return this._radius},set:function(t){this._radius!==t&&(this._radius=t,this._updateManipulators())}},{key:"test",get:function(){return{arrowManipulators:this._arrowManipulatorInfos.map((({manipulator:t})=>t))}}}]),M}(M.Manipulation);t.MoveXYAxisManipulation=A,Object.defineProperty(t,"__esModule",{value:!0})}));
