/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/lang","../../../../../core/maybe","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../core/promiseUtils","../../../../../geometry/Point","../../../../../geometry","../../../../../core/Evented","../../../../../core/screenUtils","../../../../../core/Handles","../../../../support/Scheduler","../../../../../layers/graphics/dehydratedFeatureComparison","../../../../interactive/coordinateHelper","../../../../interactive/editGeometry/EditGeometry","../../../../interactive/editGeometry/EditGeometryHelper","../../../../interactive/snapping/SnappingContext","../../../../interactive/dragEventPipeline","../../SnappingDragPipelineStep","../../SnappingVisualizer3D","./DrawManipulator","../../../../draw/DrawingMode"],(function(e,t,n,i,a,r,o,s,p,c,l,d,g,h,u,m,_,y,v,x,f,S,w,T,M,V,D,b,k,P){"use strict";function C(e,t,n){const i=e.x-t.x,a=e.y-t.y;return i*i+a*a<=n}e.DrawOperation=function(e){function n(t){var n,i,a;(a=e.call(this)||this)._manipulator=null,a._stagedVertex=null,a.geometryType=null,a.elevationInfo=null,a.snapToSceneEnabled=null,a._handles=new v,a._defaultZ=0,a._elevationDrawSurface=null,a._snappingDrawSurface=null,a._snappingManager=null,a._snappingPipeline=new D.SnappingPipeline,a._createOperationCompleted=!1,a._pointerDownStates=new Set,a._snappingTask=null,a.view=t.view,a.drawingMode=r.unwrapOr(t.drawingMode,P.defaultDrawingMode),a.geometryType=t.geometryType,a.elevationInfo=t.elevationInfo,a.coordinateHelper=S.createCoordinateHelper(t.hasZ,t.hasM,a.view.spatialReference,a.view.viewingMode),a._defaultZ=t.defaultZ,a.snapToSceneEnabled=t.snapToSceneEnabled,a._snappingDrawSurface=r.unwrap(t.snappingDrawSurface),a._snappingManager=t.snappingManager;const o=null==(n=t.view)||null==(i=n.resourceController)?void 0:i.scheduler;a._frameTask=o?o.registerTask(x.Task.SNAPPING,(e=>a._frameTask.processQueue(e)),(()=>!1)):x.ImmediateTask,a._elevationDrawSurface=t.elevationDrawSurface,a._editGeometry=new T.EditGeometryHelper(new w.EditGeometry(a.coordinateHelper),"segment"===a.geometryType?"polyline":a.geometryType),a._activeComponent=new w.Component(a._editGeometry.editGeometry),a._editGeometry.editGeometry.components.push(a._activeComponent),a._editGeometry.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:a.coordinateHelper.toArray(e.pos)}))),n=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":a.emit(e.type,{...e,added:n,vertices:t});break;case"vertex-update":a.emit(e.type,{...e,updated:n,vertices:t});break;case"vertex-remove":a.emit(e.type,{...e,removed:n,vertices:t})}})),a._manipulator=new k.DrawManipulator({grabbableForEvent:e=>"click"!==a.drawingMode||"touch"===e.pointerType&&a._snappingEnabled&&1===a._pointerDownStates.size}),t.manipulators.add(a._manipulator),a._manipulator.grabbable="point"!==a.geometryType;const s=a.createManipulatorDragPipeline(a._manipulator),p=a._manipulator.events.on("immediate-double-click",(e=>{a._manipulator.dragging||"point"===a.geometryType||(a.complete(),e.stopPropagation())})),c=a._manipulator.events.on("immediate-click",(e=>{if(a._manipulator.dragging)return;const t=a._activeComponent,n=a._closeOnClickVertexIndex(e.screenPoint);if(r.isSome(n))a.discardStagedVertex(),a.complete();else{const n=a._screenToMap(e.screenPoint);if(r.isSome(n))switch(a.drawingMode){case"freehand":break;case"click":case"hybrid":a._snappingTask=r.abortMaybe(a._snappingTask),a.hasStagedVertex?a.commitStagedVertex():a._editGeometry.appendVertex(a.coordinateHelper.fromPoint(n)),("point"===a.geometryType||"segment"===a.geometryType&&2===t.vertices.length||"segment"===a.geometryType&&"hybrid"===a.drawingMode&&1===t.vertices.length)&&a.complete()}}e.stopPropagation()}));return a._handles.add([s,c,p]),a}t._inheritsLoose(n,e);var i=n.prototype;return i.createManipulatorDragPipeline=function(e){switch(this.drawingMode){case"click":return this.createManipulatorDragPipelineClick(e);case"freehand":return this.createManipulatorDragPipelineFreehand(e);case"hybrid":return this.createManipulatorDragPipelineHybrid(e)}},i.createManipulatorDragPipelineClick=function(e){return V.createManipulatorDragEventPipeline(e,((e,t,n,i)=>{const a="touch"===i&&this._snappingEnabled;!this.isCompleted&&a&&(t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||a&&0===this.vertices.length)&&this.commitStagedVertex()),e))).next(this._snappingPipeline.createSnapDragEventPipelineStep({predicate:()=>a,cancel:n,snappingManager:this._snappingManager,snappingContext:new M.SnappingContext({geometry:this._editGeometry,elevationInfo:this.elevationInfo,pointer:i,visualizer:new b.SnappingVisualizer3D})}),this._snappingPipeline.next).next((e=>(a&&(this.stagedVertex=e.mapEnd,"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e))),n.next((()=>{a&&r.isSome(this._snappingManager)&&this._snappingManager.doneSnapping()})))}))},i.createManipulatorDragPipelineFreehand=function(e){return V.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))},i.createManipulatorDragPipelineHybrid=function(e){return V.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))},i.destroy=function(){this._handles.destroy(),this._handles=null,this._editGeometry.destroy(),this._frameTask.remove()},i.onInputEvent=function(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}},i.redo=function(){this._editGeometry.redo()},i.undo=function(){r.isSome(this._snappingManager)&&this._snappingManager.doneSnapping(),this._editGeometry.undo()},i.complete=function(e=!1){r.abortMaybe(this._snappingTask),this.commitStagedVertex(),this._createOperationCompleted=!0,r.isSome(this._snappingManager)&&this._snappingManager.doneSnapping(),this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:e,type:"complete"})},i.cancel=function(){this.complete(!0)},i.commitStagedVertex=function(){if(this._snappingTask=r.abortMaybe(this._snappingTask),r.isSome(this._stagedVertex)){const e=this._stagedVertex;this._stagedVertex=null,this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(e))}},i.discardStagedVertex=function(){this._stagedVertex=null},i._onPointerMove=function(e){if(r.abortMaybe(this._snappingTask),this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return;const t=y.createScreenPoint(e.x,e.y),n=this._closeOnClickVertexIndex(t);if(r.isSome(n)){this.discardStagedVertex();const e={componentIndex:0,vertexIndex:n,coordinates:this.coordinateHelper.toArray(this._activeComponent.vertices[n].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}else{const n=this._screenToMap(t);if(this._manipulator.cursor=r.isSome(n)?"crosshair":null,r.isSome(n))if(r.isSome(this._snappingManager)){const t=this._snappingManager,i=new M.SnappingContext({geometry:this._editGeometry,elevationInfo:this.elevationInfo,pointer:e.pointerType,visualizer:new b.SnappingVisualizer3D});this.stagedVertex=t.update(n,i),this._snappingTask=h.createTask((async e=>{const a=await this._frameTask.schedule((()=>t.snap(n,i,e)),e);a.valid&&await this._frameTask.schedule((()=>{this.stagedVertex=a.apply()}),e)}))}else this.stagedVertex=n}e.stopPropagation()},i._onHold=function(e){r.abortMaybe(this._snappingTask),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()},i._screenToMapDragEventStep=function(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),r.isNone(e))return null;const n=this._screenToMap(t.screenEnd);return r.isSome(n)?{...t,mapStart:e,mapEnd:n}:null}},i._screenToMap=function(e){return this._getDrawSurface().screenToMap(e)},i._mapToScreen=function(e){return this._getDrawSurface().mapToScreen(e)},i._getDrawSurface=function(){let e=null;if(this.coordinateHelper.hasZ){let t=this._defaultZ,n=!1;r.isSome(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(n=!0),r.isSome(this.snapToSceneEnabled)&&(n=this.snapToSceneEnabled),r.isSome(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(n=!1);const i=this._activeComponent.vertices.length;("segment"===this.geometryType||"polygon"===this.geometryType)&&i>0&&(t=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),n=!1),n?e=this._snappingDrawSurface:(this._elevationDrawSurface.defaultZ=t,e=this._elevationDrawSurface)}else this._elevationDrawSurface.defaultZ=null,e=this._elevationDrawSurface;return e},i._vertexWithinPointerDistance=function(e,t){const n=25,i=this._mapToScreen(e);return!!r.isSome(i)&&C(i,t,n)},i._closeOnClickVertexIndex=function(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[0].pos,E),e))return 0;if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[t.vertices.length-1].pos,E),e))return t.vertices.length-1}return null},t._createClass(n,[{key:"isCompleted",get:function(){return this._createOperationCompleted}},{key:"_snappingEnabled",get:function(){return r.isSome(this._snappingManager)&&this._snappingManager.options.effectiveEnabled}},{key:"canRedo",get:function(){return this._editGeometry.canRedo}},{key:"canUndo",get:function(){return this._editGeometry.canUndo}},{key:"interactive",get:function(){return this._manipulator.interactive},set:function(e){this._manipulator.interactive=e}},{key:"numVertices",get:function(){return r.isSome(this._stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}},{key:"numCommittedVertices",get:function(){return this._activeComponent.vertices.length}},{key:"vertices",get:function(){const e=this._activeComponent.vertices.map((e=>this.coordinateHelper.toArray(e.pos)));return r.isSome(this._stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this._stagedVertex)),e}},{key:"spatialReference",get:function(){return this.view.spatialReference}},{key:"hasStagedVertex",get:function(){return r.isSome(this._stagedVertex)}},{key:"stagedVertex",get:function(){return this._stagedVertex},set:function(e){if(r.isNone(e))return void this.discardStagedVertex();if(r.isSome(this._stagedVertex)&&f.pointEquals(this._stagedVertex,e))return;r.isNone(this._stagedVertex)?this._stagedVertex=a.clone(e):(this._stagedVertex.x=e.x,this._stagedVertex.y=e.y,this._stagedVertex.z=e.z,this._stagedVertex.m=e.m,this._stagedVertex.hasZ=e.hasZ,this._stagedVertex.hasM=e.hasM,this._stagedVertex.spatialReference=e.spatialReference);const t={componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)};this.emit("cursor-update",{updated:null,vertices:[t],operation:"apply",type:"vertex-update"})}}]),n}(_),e.DrawOperation=n.__decorate([c.subclass("esri.views.3d.interactive.editingTools.draw3D.DrawOperation")],e.DrawOperation);const E=new u({x:0,y:0,z:0});Object.defineProperty(e,"__esModule",{value:!0})}));
