/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/maybe","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../geometry/Point","../../../../../geometry","../../../../../core/Evented","../../../../../core/screenUtils","../../../../../core/Handles","../../../../../core/watchUtils","../coordinateHelper","./DrawManipulator","./drawSurfaces","../editGeometry/EditGeometry","../editGeometry/EditGeometryHelper","../../../../draw/DrawingMode","../../../../interactive/dragEventPipeline","../../../../interactive/snapping/SnappingAlgorithm","../../../../interactive/snapping/SnappingEngine"],(function(e,t,n,i,r,a,o,s,p,c,d,l,u,h,g,m,y,_,v,f,x,S,w,T,D,E,b){"use strict";e.DrawOperation=function(e){function n(t){var n;(n=e.call(this)||this)._manipulator=null,n._stagedVertex=null,n.geometryType=null,n.elevationInfo=null,n.snapToSceneEnabled=null,n._handles=new y,n._defaultZ=0,n._elevationDrawSurface=null,n._snappingDrawSurface=null,n._snappingEnabled=!1,n._createOperationCompleted=!1,n._pointerDownStates=new Set,n.view=t.view,n.drawingMode=r.unwrapOr(t.drawingMode,T.defaultDrawingMode),n.geometryType=t.geometryType,n.elevationInfo=t.elevationInfo,n.coordinateHelper=v.createCoordinateHelper(t.hasZ,t.hasM,n.view.spatialReference,n.view.viewingMode),n._defaultZ=t.defaultZ,n.snapToSceneEnabled=t.snapToSceneEnabled,n.snappingEngine=new b.SnappingEngine(t.snappingOptions),n._snappingEnabled=t.snappingOptions.selfEnabled,n._handles.add(_.watch(t.snappingOptions,"selfEnabled",(()=>{n._snappingEnabled=t.snappingOptions.selfEnabled}))),n._snappingDrawSurface=r.unwrap(t.snappingDrawSurface),n._elevationDrawSurface=new x.ElevationDrawSurface(n.elevationInfo,n._defaultZ,n.view),n._editGeometry=new w.EditGeometryHelper(new S.EditGeometry(n.coordinateHelper),"segment"===n.geometryType?"polyline":n.geometryType),n._activeComponent=new S.Component(n._editGeometry.data),n._editGeometry.data.components.push(n._activeComponent),n._editGeometry.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:n.coordinateHelper.toArray(e.pos)}))),i=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":n.emit(e.type,{...e,added:i,vertices:t});break;case"vertex-update":n.emit(e.type,{...e,updated:i,vertices:t});break;case"vertex-remove":n.emit(e.type,{...e,removed:i,vertices:t})}})),n._manipulator=new f.DrawManipulator({grabbableForEvent:e=>"click"!==n.drawingMode||"touch"===e.pointerType&&n._snappingEnabled&&1===n._pointerDownStates.size}),t.manipulators.add(n._manipulator),n._manipulator.grabbable="point"!==n.geometryType;const i=n.createManipulatorDragPipeline(n._manipulator),a=n._manipulator.events.on("immediate-double-click",(e=>{n._manipulator.dragging||"point"!==n.geometryType&&(n.complete(),e.stopPropagation())})),o=n._manipulator.events.on("immediate-click",(e=>{if(n._manipulator.dragging)return;const t=n._activeComponent,i=n._closeOnClickVertexIndex(e.screenPoint);if(r.isSome(i))n.discardStagedVertex(),n.complete();else{const i=n._screenToMap(e.screenPoint);if(r.isSome(i))switch(n.drawingMode){case"freehand":break;case"click":case"hybrid":n.hasStagedVertex?n.commitStagedVertex():n._editGeometry.appendVertex(n.coordinateHelper.fromPoint(i)),("point"===n.geometryType||"segment"===n.geometryType&&2===t.vertices.length||"segment"===n.geometryType&&"hybrid"===n.drawingMode&&1===t.vertices.length)&&n.complete()}}e.stopPropagation()}));return n._handles.add([i,o,a]),n}t._inheritsLoose(n,e);var i=n.prototype;return i.createManipulatorDragPipeline=function(e){switch(this.drawingMode){case"click":return this.createManipulatorDragPipelineClick(e);case"freehand":return this.createManipulatorDragPipelineFreehand(e);case"hybrid":return this.createManipulatorDragPipelineHybrid(e)}},i.createManipulatorDragPipelineClick=function(e){return D.createManipulatorDragEventPipeline(e,((e,t,n,i)=>{const a="touch"===i&&this._snappingEnabled;if(this.isCompleted||!a)return;let o=null;t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||a&&0===this.vertices.length)&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":"start"===e.action&&a&&(o=new E.SnappingContext(this._editGeometry,this.view,this.elevationInfo,i)),a&&(this.stagedVertex=this.snappingEngine.snap(e.mapEnd,r.unwrap(o)));break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete(),a&&(this.commitStagedVertex(),this.snappingEngine.doneSnapping())}return e})),n.next((()=>{a&&this.snappingEngine.doneSnapping()}))}))},i.createManipulatorDragPipelineFreehand=function(e){return D.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))},i.createManipulatorDragPipelineHybrid=function(e){return D.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))},i.destroy=function(){this._handles.destroy(),this._handles=null},i.onInputEvent=function(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":{if(this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return;const t=m.createScreenPoint(e.x,e.y),n=this._closeOnClickVertexIndex(t);if(r.isSome(n)){this.discardStagedVertex();const e={componentIndex:0,vertexIndex:n,coordinates:this.coordinateHelper.toArray(this._activeComponent.vertices[n].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}else{const n=this._screenToMap(t);r.isSome(n)?(this.stagedVertex=this.snappingEngine.snap(n,new E.SnappingContext(this._editGeometry,this.view,this.elevationInfo,e.pointerType)),this._manipulator.cursor="crosshair"):this._manipulator.cursor=null}e.stopPropagation();break}case"hold":"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()}},i.redo=function(){this._editGeometry.redo()},i.undo=function(){this.snappingEngine.doneSnapping(),this._editGeometry.undo()},i.complete=function(e=!1){this.commitStagedVertex(),this._createOperationCompleted=!0,this.snappingEngine.doneSnapping(),this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:e,type:"complete"})},i.cancel=function(){this.complete(!0)},i.commitStagedVertex=function(){if(r.isSome(this._stagedVertex)){const e=this._stagedVertex;this._stagedVertex=null,this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(e))}},i.discardStagedVertex=function(){this._stagedVertex=null},i._screenToMapDragEventStep=function(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),r.isNone(e))return null;const n=this._screenToMap(t.screenEnd);return r.isSome(n)?{...t,mapStart:e,mapEnd:n}:null}},i._screenToMap=function(e){return this._getDrawSurface().screenToMap(e)},i._mapToScreen=function(e){return this._getDrawSurface().mapToScreen(e)},i._getDrawSurface=function(){let e=null;if(this.coordinateHelper.hasZ){let t=this._defaultZ,n=!1;r.isSome(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(n=!0),r.isSome(this.snapToSceneEnabled)&&(n=this.snapToSceneEnabled),r.isSome(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(n=!1);const i=this._activeComponent.vertices.length;("segment"===this.geometryType||"polygon"===this.geometryType)&&i>0&&(t=this.coordinateHelper.zFromArray(this._activeComponent.vertices[0].pos),n=!1),n?e=this._snappingDrawSurface:(this._elevationDrawSurface.defaultZ=t,e=this._elevationDrawSurface)}else this._elevationDrawSurface.defaultZ=null,e=this._elevationDrawSurface;return e},i._vertexWithinPointerDistance=function(e,t){const n=this._mapToScreen(e);return!!r.isSome(n)&&function(e,t,n){const i=e.x-t.x,r=e.y-t.y;return i*i+r*r<=n}(n,t,25)},i._closeOnClickVertexIndex=function(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[0].pos,V),e))return 0;if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[t.vertices.length-1].pos,V),e))return t.vertices.length-1}return null},t._createClass(n,[{key:"isCompleted",get:function(){return this._createOperationCompleted}},{key:"canRedo",get:function(){return this._editGeometry.canRedo}},{key:"canUndo",get:function(){return this._editGeometry.canUndo}},{key:"interactive",get:function(){return this._manipulator.interactive},set:function(e){this._manipulator.interactive=e}},{key:"numVertices",get:function(){return r.isSome(this._stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}},{key:"numCommittedVertices",get:function(){return this._activeComponent.vertices.length}},{key:"vertices",get:function(){const e=this._activeComponent.vertices.map((e=>this.coordinateHelper.toArray(e.pos)));return r.isSome(this._stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this._stagedVertex)),e}},{key:"spatialReference",get:function(){return this.view.spatialReference}},{key:"hasStagedVertex",get:function(){return r.isSome(this._stagedVertex)}},{key:"stagedVertex",get:function(){return this._stagedVertex},set:function(e){if(r.isNone(e))return void this.discardStagedVertex();this._stagedVertex=e;const t={componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)};this.emit("cursor-update",{updated:null,vertices:[t],operation:"apply",type:"vertex-update"})}}]),n}(g),e.DrawOperation=n.__decorate([p.subclass("esri.views.3d.interactive.editingTools.draw3D.DrawOperation")],e.DrawOperation);const V=new u({x:0,y:0,z:0});Object.defineProperty(e,"__esModule",{value:!0})}));
