/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{handlesGroup as t,makeHandle as i}from"../../../../../core/handleUtils.js";import{isSome as s,destroyMaybe as r,applySome as a}from"../../../../../core/maybe.js";import{watch as n,initial as o}from"../../../../../core/reactiveUtils.js";import{property as l}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../../../core/accessorSupport/decorators/subclass.js";import{getEffectiveElevationMode as c}from"../../../../../support/elevationInfoUtils.js";import h from"../../../../../symbols/support/ElevationInfo.js";import{SegmentLabels3D as u}from"../../SegmentLabels3D.js";import{SnappingVisualizer3D as m}from"../../SnappingVisualizer3D.js";import{settings as v}from"../settings.js";import{OutlineVisualElement as d}from"../../visualElements/OutlineVisualElement.js";import{VerticesVisualElement as f}from"../../visualElements/VerticesVisualElement.js";import{GraphicState as w}from"../../../layers/graphics/GraphicState.js";import{DrawGraphicTool as V,geometryTypeToDrawOperationGeometryType as y}from"../../../../draw/DrawGraphicTool.js";import{DrawOperation as E}from"../../../../draw/DrawOperation.js";import{SceneDrawSurface as _,ElevationDrawSurface as g}from"../../../../draw/drawSurfaces.js";import O from"../../../../interactive/sketch/SketchLabelOptions.js";import j from"../../../../interactive/sketch/SketchTooltipOptions.js";let S=class extends V{constructor(e){super(e),this._activeVertexVisualElement=null,this._createGraphicState=null,this._outlineVisualElement=null,this._verticesVisualElement=null,this.geometryType=null,this.labelOptions=new O,this.tooltipOptions=new j,this.type="draw-3d"}initialize(){const{mode:e,offset:t}=this.elevationInfo;this.internalGraphicsLayer.elevationInfo=new h({mode:e,offset:t})}normalizeCtorArgs(e){if(!e.elevationInfo){const t=e.hasZ??!0;return{...e,elevationInfo:{mode:t?"absolute-height":"on-the-ground",offset:0}}}return e}initializeGraphic(e){const i=this._createGraphicState=new w({graphic:e});return t([this.view.maskOccludee(e),this.view.trackGraphicState(i),n((()=>({element:this._outlineVisualElement,isDraped:i.isDraped})),(({element:e,isDraped:t})=>{a(e,(e=>e.isDraped=t))}),o)])}makeDrawOperation(){const{geometryType:e}=this,t="circle"!==e&&"rectangle"!==e;return new E({view:this.view,manipulators:this.manipulators,geometryType:y(e),drawingMode:this.mode,hasZ:this.hasZ,defaultZ:this.defaultZ,snapToSceneEnabled:this.snapToScene,drawSurface:new _(this.view,this.elevationInfo,[this.internalGraphicsLayer]),elevationDrawSurface:new g(this.elevationInfo,this.defaultZ,this.view,this.internalGraphicsLayer),hasM:!1,elevationInfo:this.elevationInfo,snappingManager:this.snappingManager,snappingVisualizer:new m,segmentLabels:t?new u:null,labelOptions:this.labelOptions,tooltipOptions:this.tooltipOptions,isDraped:s(this._createGraphicState)?this._createGraphicState.isDraped:"on-the-ground"===c(this.hasZ,this.elevationInfo)})}onActiveVertexChanged(e){return s(this._activeVertexVisualElement)?(this._activeVertexVisualElement.vertices=[e],null):(this._activeVertexVisualElement=new f({view:this.view,spatialReference:this.view.spatialReference,vertices:[e],elevationInfo:this.internalGraphicsLayer.elevationInfo,renderOccluded:v.reshapeManipulators.vertex.renderOccluded,attached:!1}),this._activeVertexVisualElement.color=v.colorToVec4(v.reshapeManipulators.selected.color),this._activeVertexVisualElement.attached=!0,i((()=>{this._activeVertexVisualElement=r(this._activeVertexVisualElement)})))}onOutlineChanged(e){if(s(this._outlineVisualElement))return this._outlineVisualElement.geometry=e,null;const t=this.internalGraphicsLayer.elevationInfo;return this._outlineVisualElement=new d({view:this.view,geometry:e,elevationInfo:t,isDraped:s(this._createGraphicState)?this._createGraphicState.isDraped:"on-the-ground"===c(this.hasZ,t),attached:!1}),v.visualElements.lineGraphics.outline.apply(this._outlineVisualElement),v.visualElements.lineGraphics.shadowStyle.apply(this._outlineVisualElement),this._outlineVisualElement.attached=!0,this._outlineVisualElement.laserlineEnabled=!0,i((()=>{this._outlineVisualElement=r(this._outlineVisualElement)}))}onRegularVerticesChanged(e){return s(this._verticesVisualElement)?(this._verticesVisualElement.vertices=e,null):(this._verticesVisualElement=new f({view:this.view,spatialReference:this.view.spatialReference,vertices:e,elevationInfo:this.internalGraphicsLayer.elevationInfo,renderOccluded:v.reshapeManipulators.vertex.renderOccluded,attached:!1}),this._verticesVisualElement.attached=!0,i((()=>{this._verticesVisualElement=r(this._verticesVisualElement)})))}};e([l({constructOnly:!0})],S.prototype,"elevationInfo",void 0),e([l({constructOnly:!0})],S.prototype,"geometryType",void 0),e([l({constructOnly:!0,type:O})],S.prototype,"labelOptions",void 0),e([l({constructOnly:!0,type:j})],S.prototype,"tooltipOptions",void 0),e([l()],S.prototype,"type",void 0),e([l({constructOnly:!0})],S.prototype,"view",void 0),S=e([p("esri.views.3d.interactive.editingTools.draw.DrawGraphicTool3D")],S);export{S as DrawGraphicTool3D};
