/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import"../../../core/has.js";import{destroyHandle as n}from"../../../core/handleUtils.js";import{unwrapOr as t}from"../../../core/maybe.js";import{h as i}from"../../../chunks/vec3.js";import{c as o}from"../../../chunks/vec3f64.js";import{ExtendedLineVisualElement as r,ExtensionType as a}from"./visualElements/ExtendedLineVisualElement.js";import{ParallelLineVisualElement as l}from"./visualElements/ParallelLineVisualElement.js";import{PointVisualElement as s}from"./visualElements/PointVisualElement.js";import{RightAngleQuadVisualElement as c}from"./visualElements/RightAngleQuadVisualElement.js";import{RenderOccludedFlag as d}from"../webgl-engine/lib/Material.js";import{defaults as p}from"../../interactive/snapping/Settings.js";import{LineSegmentHintType as m}from"../../interactive/snapping/snappingUtils.js";import{SnappingVisualizer as v}from"../../interactive/snapping/SnappingVisualizer.js";import{anyMapPointToRender as u,anyMapPointsToRenderWithEqualRelativeZ as f}from"../../interactive/support/viewUtils.js";class g extends v{visualizeIntersectionPoint(i,o){const{coordinateHelper:r,view:a}=o;return n(new s({view:a,primitive:"circle",geometry:r.vectorToPoint(i.intersectionPoint),elevationInfo:t(i.elevationInfo,o.elevationInfo),size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(p.orange),pixelSnappingEnabled:!1}))}visualizePoint(i,o){const{coordinateHelper:r,view:a}=o;return n(new s({view:a,primitive:"circle",geometry:r.vectorToPoint(i.point),elevationInfo:t(i.elevationInfo,o.elevationInfo),size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(p.orange),pixelSnappingEnabled:!1}))}visualizeLine(e,i){const{coordinateHelper:o,view:r}=i;return n(this._createLineSegmentHintFromMap(e.type,e.lineStart,e.lineEnd,o,t(e.elevationInfo,i.elevationInfo),r,e.fadeLeft,e.fadeRight))}visualizeParallelSign(o,r){const{coordinateHelper:a,view:s}=r,c=t(o.elevationInfo,r.elevationInfo),m=u(o.lineStart,a,c,r.view),v=u(o.lineEnd,a,c,r.view),f=i(v,m,v,.5),g=new l({view:s,attached:!1,offset:p.parallelLineHintOffset,length:p.parallelLineHintLength,width:p.parallelLineHintWidth,color:e.toUnitRGBA(p.orange),location:f,renderOccluded:d.Opaque});return g.setDirectionFromPoints(m,f),g.attached=!0,n(g)}visualizeRightAngleQuad(i,o){const{coordinateHelper:r,view:a}=o,l=t(i.elevationInfo,o.elevationInfo);return n(new c({view:a,attached:!0,color:e.toUnitRGBA(p.orange),renderOccluded:d.Transparent,outlineRenderOccluded:d.Opaque,outlineColor:e.toUnitRGBA(p.orange),outlineSize:p.rightAngleHintOutlineSize,size:p.rightAngleHintSize,geometry:{previous:u(i.previousVertex,r,l,a),center:u(i.centerVertex,r,l,a),next:u(i.nextVertex,r,l,a)}}))}_createLineSegmentHintFromMap(e,n,t,i,r,a,l=!0,s=!0){const c=o(),d=o();return f(n,t,i,r,a,c,d),this._createLineSegmentHint(e,a,c,d,l,s)}_createLineSegmentHint(n,t,i,o,l=!0,s=!0){const c=new r({view:t,extensionType:a.FADED,start:i,end:o,color:e.toUnitRGBA(p.orange),renderOccluded:d.Opaque});switch(n){case m.TARGET:c.width=p.lineHintWidthTarget,c.fadedExtensions={start:0,end:p.lineHintFadedExtensions};break;case m.REFERENCE_EXTENSION:c.width=p.lineHintWidthReference,c.fadedExtensions={start:0,end:0};break;case m.REFERENCE:c.width=p.lineHintWidthReference,c.fadedExtensions={start:l?p.lineHintFadedExtensions:0,end:s?p.lineHintFadedExtensions:0}}return c.attached=!0,c}}export{g as SnappingVisualizer3D};
