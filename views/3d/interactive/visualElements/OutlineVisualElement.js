/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Evented","../../../../core/maybe","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","../../../../geometry/projection","../../../../geometry/support/aaBoundingBox","../../../../layers/graphics/dehydratedFeatures","../../../../support/elevationInfoUtils","../../../../symbols/support/ElevationInfo","./DrapedVisualElementResources","./LaserlineVisualElement","./VisualElementResources","../../layers/graphics/ElevationContext","../../layers/graphics/lineUtils","../../webgl-engine/lib/geometryDataUtils","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,i,r,s,n,a,o,l,c,h,u,d,f,p,m,_,g,y,v,R){"use strict";let w=function(){function e(e){this.view=null,this._attachmentOrigin=h.makeDehydratedPoint(0,0,0,null),this._attachmentOriginDirty=!0,this.events=new i,this._isDraped=!1,this._geometry=null,this._width=1,this._color=o.fromValues(1,0,1,1),this._innerWidth=0,this._innerColor=o.fromValues(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._elevationInfo=null,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=8,this.resources=new m.VisualElementResources({view:e.view,createResources:e=>this.createResources(e),recreateGeometry:(e,t)=>(e.geometries.length=0,this.recreateGeometry(t,e.material,e.geometries),e.geometries)}),this._attachmentOrigin.spatialReference=e.view.spatialReference,this.drapedResources=new f.DrapedVisualElementResources({view:e.view,createResources:()=>this._createDrapedResources(),recreateGeometry:e=>{e.geometries=this._createRenderGeometriesDraped(e.material),this.attachmentOriginChanged()}});let t=!0;this._laserline=new p.LaserlineVisualElement({view:e.view});for(const i in e)i in this?"attached"===i?t=e[i]:this[i]=e[i]:console.error("Cannot set unknown property",i);this.attached=t}var n=e.prototype;return n.destroy=function(){this.resources.destroy(),this.drapedResources.destroy(),this._laserline.destroy()},n.updateAttached=function(e){this.resources.attached=!this.isDraped&&e,this.drapedResources.attached=this.isDraped&&e,this._laserline.attached=this.laserlineAttached,this.attached&&this.attachmentOriginChanged()},n.updateMaterial=function(){r.isSome(this.resources.resources)&&this.resources.resources.material.setParameters(this.materialParameters),r.isSome(this.drapedResources.resources)&&this.drapedResources.resources.material.setParameters(this.materialParameters)},n.recreateGeometry=function(e,t,i){const r=this.createRenderGeometries();for(const s of r)e.addGeometry(s,t),i.push(s);this.attachmentOriginChanged()},n.attachmentOriginChanged=function(){this._attachmentOriginDirty=!0,this.events.emit("attachment-origin-changed")},n.createResources=function(e){const t=new R.RibbonLineMaterial(this.materialParameters),i=[];return this.recreateGeometry(e,t,i),{material:t,geometries:i,forEach:e=>{e(t),i.forEach(e)}}},n._createDrapedResources=function(){const e=new R.RibbonLineMaterial(this.materialParameters);return{material:e,geometries:this._createRenderGeometriesDraped(e)}},n._createRenderGeometriesDraped=function(e){const t=this.geometry;if(r.isNone(t))return[];const i=g.geometryToRenderInfoDraped(t,this.view.basemapTerrain.spatialReference),s=[];for(const{position:r}of i.lines){const t={overlayInfo:{spatialReference:this.view.basemapTerrain.spatialReference,renderCoordsHelper:this.view.renderCoordsHelper},attributeData:{position:r},removeDuplicateStartEnd:this.isClosed?1:0},i=new v.RenderGeometry(g.createGeometry(t),e),n=c.empty(C);c.expandWithBuffer(n,r),a.set(i.boundingSphere,.5*(n[0]+n[3]),.5*(n[1]+n[4]),0,.5*Math.sqrt((n[3]-n[0])*(n[3]-n[0])+(n[4]-n[1])*(n[4]-n[1]))),s.push(i)}return s},n.calculateMapBounds=function(e){if(r.isNone(this.resources.resources))return!1;const t=this.view.renderCoordsHelper;for(const i of this.resources.resources.geometries){const r=i.vertexAttributes.get("position"),s=new Float64Array(r.data.length);l.projectBuffer(r.data,t.spatialReference,0,s,this.view.spatialReference,0,r.data.length/3),c.expandWithBuffer(e,s)}return!0},n.createRenderGeometries=function(){var e;const t=this.geometry;if(r.isNone(t))return[];const i=g.geometryToRenderInfo(t,this.view.elevationProvider,this.view.renderCoordsHelper,_.ElevationContext.fromElevationInfo(null!=(e=this.elevationInfo)?e:new d({mode:u.getGeometryEffectiveElevationMode(t,null)}))),s=[],n=[];for(const{position:r,mapPosition:a}of i.lines){const e={overlayInfo:null,attributeData:{position:r,mapPosition:a},removeDuplicateStartEnd:this.isClosed?1:0};s.push(g.createGeometry(e)),n.push(r)}return this._laserline.pathVerticalPlane=n,s},t._createClass(e,[{key:"isDraped",get:function(){return this._isDraped},set:function(e){e!==this._isDraped&&(this._isDraped=e,this.updateAttached(this.attached),this._laserline.attached=this.laserlineAttached)}},{key:"laserlineAttached",get:function(){return this.attached&&this.visible&&r.isSome(this._laserlineStyle)&&!this.isDraped&&this.laserlineEnabled}},{key:"visible",get:function(){return this.resources.visible},set:function(e){this.resources.visible=e,this.drapedResources.visible=e,this._laserline.attached=this.laserlineAttached}},{key:"attached",get:function(){return this.resources.attached||this.drapedResources.attached},set:function(e){this.updateAttached(e)}},{key:"geometry",get:function(){return this._geometry},set:function(e){this._geometry=e,this.resources.recreateGeometry(),this.drapedResources.recreateGeometry()}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this.updateMaterial())}},{key:"color",get:function(){return this._color},set:function(e){a.exactEquals(e,this._color)||(a.copy(this._color,e),this.updateMaterial())}},{key:"innerWidth",get:function(){return this._innerWidth},set:function(e){e!==this._innerWidth&&(this._innerWidth=e,this.updateMaterial())}},{key:"innerColor",get:function(){return this._innerColor},set:function(e){a.exactEquals(e,this._innerColor)||(a.copy(this._innerColor,e),this.updateMaterial())}},{key:"stipplePattern",get:function(){return this._stipplePattern},set:function(e){const t=r.isSome(e)!==r.isSome(this._stipplePattern);this._stipplePattern=e,t?this.resources.recreate():this.updateMaterial()}},{key:"stippleOffColor",get:function(){return this._stippleOffColor},set:function(e){e&&this._stippleOffColor&&a.exactEquals(e,this._stippleOffColor)||(this._stippleOffColor=e?o.clone(e):null,this.updateMaterial())}},{key:"falloff",get:function(){return this._falloff},set:function(e){e!==this._falloff&&(this._falloff=e,this.updateMaterial())}},{key:"elevationInfo",get:function(){return this._elevationInfo},set:function(e){this._elevationInfo=e,this.resources.recreateGeometry()}},{key:"laserlineStyle",get:function(){return this._laserlineStyle},set:function(e){this._laserlineStyle=e,this._laserline.attached=this.laserlineAttached,r.isSome(e)&&(this._laserline.style=e)}},{key:"laserlineEnabled",get:function(){return this._laserlineEnabled},set:function(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this.laserlineAttached)}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}},{key:"attachmentOrigin",get:function(){if(!this._attachmentOriginDirty)return this._attachmentOrigin;const e=r.isSome(this.resources.resources)?this.resources.resources.geometries:null;if(!e||0===e.length)return null;s.set(b,0,0,0);let t=0;for(const i of e){const e=i.vertexAttributes.get("position"),n=i.indices.get("position"),a=r.unwrap(this.resources.resources).material.isClosed(e.data,n);y.computeAttachmentOriginLines(e,n,a,O)&&(s.add(b,b,O),t++)}return 0===t?null:(s.scale(b,b,1/t),this.view.renderCoordsHelper.fromRenderCoords(b,this._attachmentOrigin),this._attachmentOriginDirty=!1,this._attachmentOrigin)}},{key:"isClosed",get:function(){return r.isSome(this.geometry)&&"polygon"===this.geometry.type}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:!1,isClosed:this.isClosed,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,join:"round",polygonOffset:!0,renderOccluded:this.normalizedRenderOccluded}}},{key:"normalizedRenderOccluded",get:function(){return this.isDraped&&8===this._renderOccluded?4:this._renderOccluded}}]),e}();const C=c.create(),O=n.create(),b=n.create();e.OutlineVisualElement=w,Object.defineProperty(e,"__esModule",{value:!0})}));
