/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Evented","../../../../core/maybe","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","../../../../geometry/projection","../../../../geometry/support/aaBoundingBox","../../../../layers/graphics/dehydratedFeatures","../../../../support/elevationInfoUtils","../../../../symbols/support/ElevationInfo","./DrapedVisualElementResources","./LaserlineVisualElement","./VisualElementResources","../../layers/graphics/ElevationContext","../../support/engineContent/line","../../support/renderInfoUtils/line","../../webgl-engine/lib/geometryDataUtils","../../webgl-engine/lib/Material","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,i,r,s,n,a,o,l,c,h,u,d,_,f,p,m,g,y,v,O,R,b,w){"use strict";let C=function(){function e(e){this.view=null,this._attachmentOrigin=h.makeDehydratedPoint(0,0,0,null),this._attachmentOriginDirty=!0,this.events=new i,this._isDraped=!1,this._geometry=null,this._width=1,this._color=o.fromValues(1,0,1,1),this._innerWidth=0,this._innerColor=o.fromValues(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._elevationInfo=null,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=O.RenderOccludedFlag.OccludeAndTransparentStencil,this._resources=new p.VisualElementResources({view:e.view,createResources:e=>this._createResources(e),recreateGeometry:(e,t)=>(e.geometries.length=0,this._recreateGeometry(t,e.material,e.geometries),e.geometries)}),this._attachmentOrigin.spatialReference=e.view.spatialReference,this._drapedResources=new _.DrapedVisualElementResources({view:e.view,createResources:()=>this._createDrapedResources(),recreateGeometry:e=>{e.geometries=this._createRenderGeometriesDraped(e.material),this._attachmentOriginChanged()}});let t=!0;this._laserline=new f.LaserlineVisualElement({view:e.view});for(const i in e)i in this?"attached"===i?t=e[i]:this[i]=e[i]:console.error("Cannot set unknown property",i);this.attached=t}var n=e.prototype;return n.destroy=function(){this._resources.destroy(),this._drapedResources.destroy(),this._laserline.destroy()},n._updateAttached=function(e){this._resources.attached=!this.isDraped&&e,this._drapedResources.attached=this.isDraped&&e,this._laserline.attached=this._laserlineAttached,this.attached&&this._attachmentOriginChanged()},n._updateMaterial=function(){r.isSome(this._resources.resources)&&this._resources.resources.material.setParameters(this._materialParameters),r.isSome(this._drapedResources.resources)&&this._drapedResources.resources.material.setParameters(this._materialParameters)},n._recreateGeometry=function(e,t,i){const r=this._createRenderGeometries();for(const s of r)e.addGeometry(s,t),i.push(s);this._attachmentOriginChanged()},n._attachmentOriginChanged=function(){this._attachmentOriginDirty=!0,this.events.emit("attachment-origin-changed")},n._createResources=function(e){const t=new w.RibbonLineMaterial(this._materialParameters),i=[];return this._recreateGeometry(e,t,i),{material:t,geometries:i,forEach:e=>{e(t),i.forEach(e)}}},n._createDrapedResources=function(){const e=new w.RibbonLineMaterial(this._materialParameters);return{material:e,geometries:this._createRenderGeometriesDraped(e)}},n._createRenderGeometriesDraped=function(e){const t=this.geometry;if(r.isNone(t)||r.isNone(this.view.basemapTerrain.spatialReference))return[];const i=y.geometryToRenderInfoDraped(t,this.view.basemapTerrain.spatialReference),s=[];for(const{position:r}of i.lines){const t={overlayInfo:{spatialReference:this.view.basemapTerrain.spatialReference,renderCoordsHelper:this.view.renderCoordsHelper},attributeData:{position:r},removeDuplicateStartEnd:this._isClosed},i=new R.RenderGeometry(g.createGeometry(t),e),n=c.empty(k);c.expandWithBuffer(n,r),a.set(i.boundingSphere,.5*(n[0]+n[3]),.5*(n[1]+n[4]),0,.5*Math.sqrt((n[3]-n[0])*(n[3]-n[0])+(n[4]-n[1])*(n[4]-n[1]))),s.push(i)}return s},n.calculateMapBounds=function(e){if(r.isNone(this._resources.resources))return!1;const t=this.view.renderCoordsHelper;for(const i of this._resources.resources.geometries){const r=i.vertexAttributes.get(b.VertexAttribute.POSITION),s=new Float64Array(r.data.length);l.projectBuffer(r.data,t.spatialReference,0,s,this.view.spatialReference,0,r.data.length/3),c.expandWithBuffer(e,s)}return!0},n._createRenderGeometries=function(){const e=this.geometry;if(r.isNone(e))return[];const t=y.geometryToRenderInfo(e,this.view.elevationProvider,this.view.renderCoordsHelper,m.ElevationContext.fromElevationInfo(this.elevationInfo??new d({mode:u.getGeometryEffectiveElevationMode(e,null)}))),i=[],s=[];for(const{position:r,mapPosition:n}of t.lines){const e={attributeData:{position:r,mapPosition:n},removeDuplicateStartEnd:this._isClosed};i.push(g.createGeometry(e)),s.push(r)}return this._laserline.pathVerticalPlane=s,i},t._createClass(e,[{key:"isDraped",get:function(){return this._isDraped},set:function(e){e!==this._isDraped&&(this._isDraped=e,this._updateAttached(this.attached),this._laserline.attached=this._laserlineAttached)}},{key:"_laserlineAttached",get:function(){return this.attached&&this.visible&&r.isSome(this._laserlineStyle)&&!this.isDraped&&this.laserlineEnabled}},{key:"visible",get:function(){return this._resources.visible},set:function(e){this._resources.visible=e,this._drapedResources.visible=e,this._laserline.attached=this._laserlineAttached}},{key:"attached",get:function(){return this._resources.attached||this._drapedResources.attached},set:function(e){this._updateAttached(e)}},{key:"geometry",get:function(){return this._geometry},set:function(e){this._geometry=e,this._resources.recreateGeometry(),this._drapedResources.recreateGeometry()}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this._updateMaterial())}},{key:"color",get:function(){return this._color},set:function(e){a.exactEquals(e,this._color)||(a.copy(this._color,e),this._updateMaterial())}},{key:"innerWidth",get:function(){return this._innerWidth},set:function(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}},{key:"innerColor",get:function(){return this._innerColor},set:function(e){a.exactEquals(e,this._innerColor)||(a.copy(this._innerColor,e),this._updateMaterial())}},{key:"stipplePattern",get:function(){return this._stipplePattern},set:function(e){const t=r.isSome(e)!==r.isSome(this._stipplePattern);this._stipplePattern=e,t?this._resources.recreate():this._updateMaterial()}},{key:"stippleOffColor",get:function(){return this._stippleOffColor},set:function(e){e&&this._stippleOffColor&&a.exactEquals(e,this._stippleOffColor)||(this._stippleOffColor=e?o.clone(e):null,this._updateMaterial())}},{key:"falloff",get:function(){return this._falloff},set:function(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}},{key:"elevationInfo",get:function(){return this._elevationInfo},set:function(e){this._elevationInfo=e,this._resources.recreateGeometry()}},{key:"laserlineStyle",get:function(){return this._laserlineStyle},set:function(e){this._laserlineStyle=e,this._laserline.attached=this._laserlineAttached,r.isSome(e)&&(this._laserline.style=e)}},{key:"laserlineEnabled",get:function(){return this._laserlineEnabled},set:function(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this._laserlineAttached)}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}},{key:"attachmentOrigin",get:function(){if(!this._attachmentOriginDirty)return this._attachmentOrigin;const e=r.isSome(this._resources.resources)?this._resources.resources.geometries:null;if(!e||0===e.length)return null;s.set(E,0,0,0);let t=0;for(const i of e){const e=i.vertexAttributes.get(b.VertexAttribute.POSITION),n=i.indices.get(b.VertexAttribute.POSITION),a=r.unwrap(this._resources.resources).material.isClosed(e.data,n);v.computeAttachmentOriginLines(e,n,a,D)&&(s.add(E,E,D),t++)}return 0===t?null:(s.scale(E,E,1/t),this.view.renderCoordsHelper.fromRenderCoords(E,this._attachmentOrigin),this._attachmentOriginDirty=!1,this._attachmentOrigin)}},{key:"_isClosed",get:function(){return r.isSome(this.geometry)&&"polygon"===this.geometry.type}},{key:"_materialParameters",get:function(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:!1,isClosed:this._isClosed,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,join:"round",hasPolygonOffset:!0,renderOccluded:this._normalizedRenderOccluded}}},{key:"_normalizedRenderOccluded",get:function(){return this.isDraped&&this._renderOccluded===O.RenderOccludedFlag.OccludeAndTransparentStencil?O.RenderOccludedFlag.OccludeAndTransparent:this._renderOccluded}}]),e}();const k=c.create(),D=n.create(),E=n.create();e.OutlineVisualElement=C,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
