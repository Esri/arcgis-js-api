/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{clamp as e,nextHighestPowerOfTwo as t}from"../../../../core/mathUtils.js";import{isSome as r,isNone as i}from"../../../../core/maybe.js";import{s}from"../../../../chunks/vec3.js";import{c as o}from"../../../../chunks/vec3f64.js";import{g as n,c as a}from"../../../../chunks/vec4.js";import{f as l}from"../../../../chunks/vec4f64.js";import{projectVectorToVector as u}from"../../../../geometry/projection.js";import{expandWithBuffer as c}from"../../../../geometry/support/aaBoundingBox.js";import{sv3d as h}from"../../../../geometry/support/vectorStacks.js";import{VisualElementResources as m}from"./VisualElementResources.js";import{evaluateElevationAlignmentAtPoint as p}from"../../layers/graphics/elevationAlignmentUtils.js";import{ElevationContext as g}from"../../layers/graphics/ElevationContext.js";import{createTexture as d,DEFAULT_SYMBOL_SIZE_RATIO as _}from"../../layers/graphics/sdfPrimitives.js";import f from"../../webgl-engine/lib/GeometryUtil.js";import{VertexAttribute as y}from"../../webgl-engine/lib/VertexAttribute.js";import{HUDMaterial as v}from"../../webgl-engine/materials/HUDMaterial.js";class S{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=l(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=l(1,1,1,1),this._elevationInfo=null,this.resources=new m({view:e.view,createResources:e=>this._createResources(e),recreateGeometry:(e,t)=>(e.geometry=this._recreateGeometry(t,e.material),r(e.geometry)?[e.geometry]:[])});let t=!0;for(const r in e)r in this?"attached"===r?t=e[r]:this[r]=e[r]:console.error("Cannot set unknown property",r);this.attached=t}destroy(){this.resources.destroy()}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e}get attached(){return this.resources.attached}set attached(e){this.resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this.preferredTextureSize;this._size=e,t<this.preferredTextureSize?r(this.resources)&&this.resources.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){n(e,this._color)||(a(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,r(this.resources)&&this.resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){n(e,this._outlineColor)||(a(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources&&this.resources.recreateGeometry()}_updateMaterial(){const e=this.resources.resources;i(e)||e.material.setParameters(this._materialParameters(e.texture.id))}_updateSizeAttribute(){const e=this.resources.resources,t=this.resources.object;if(i(e)||i(t))return;const r=e.geometry;if(i(r))return;const s=r.getMutableAttribute(y.SIZE).data,o=this.geometrySize;s[0]=o,s[1]=o,t.geometryVertexAttrsUpdated(t.geometryRecords[0])}_materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:z,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get geometrySize(){return this._size/b}_recreateGeometry(e,t){const i=this._createRenderGeometry();return r(i)&&e.addGeometry(i,t),i}_createResources(e){const t=d(this._primitive,this.preferredTextureSize),i=new v(this._materialParameters(t.id)),s=this._recreateGeometry(e,i);return{material:i,texture:t,geometry:s,forEach(e){e(t),e(i),r(this.geometry)&&e(this.geometry)}}}get preferredTextureSize(){return e(t(2*this.geometrySize),16,128)}calculateMapBounds(e){if(i(this.resources.resources)||i(this.resources.resources.geometry))return!1;const t=this.resources.resources.geometry.vertexAttributes.get(y.POSITION);return u(t.data,this.view.renderCoordsHelper.spatialReference,x,this.view.spatialReference),c(e,x),!0}_createRenderGeometry(){const e=this.geometry;if(i(e))return null;const{renderCoordsHelper:t,elevationProvider:r}=this.view,o=p(e,r,g.fromElevationInfo(this.elevationInfo),t),n=s(h.get(),e.x,e.y,o),a=h.get();u(n,e.spatialReference,a,t.spatialReference);const l=this.geometrySize;return f.createPointGeometry(null,a,null,[l,l],[0,0,0,1])}}const b=_,z=[b/2,b/2,1-b/2,1-b/2],x=o();export{S as PointVisualElement};
