/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as e,isNone as r}from"../../../../core/maybe.js";import{C as t}from"../../../../chunks/mat4.js";import{b as s}from"../../../../chunks/vec3.js";import{c as o}from"../../../../chunks/vec3f64.js";import{g as i,c}from"../../../../chunks/vec4.js";import{f as a}from"../../../../chunks/vec4f64.js";import{Object3DVisualElement as l}from"./Object3DVisualElement.js";import{Geometry as h}from"../../webgl-engine/lib/Geometry.js";import{RenderOccludedFlag as n}from"../../webgl-engine/lib/Material.js";import{VertexAttribute as d}from"../../webgl-engine/lib/VertexAttribute.js";import{CheckerBoardMaterial as _}from"../../webgl-engine/materials/CheckerBoardMaterial.js";class m extends l{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=n.OccludeAndTransparent,this._geometry=null,this._size=[1,1],this._color1=a(1,.5,0,.5),this._color2=a(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){this._size=e,this._updateMaterial()}get color1(){return this._color1}set color1(e){i(e,this._color1)||(c(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){i(e,this._color2)||(c(this._color2,e),this._updateMaterial())}_updateMaterial(){e(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new _({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:n.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(r){e(this._checkerBoardMaterial)&&r(this._checkerBoardMaterial)}createGeometries(e){if(r(this._geometry)||r(this._checkerBoardMaterial))return;const i=u;t(i,this.transform);const c=this._geometry,a=[],l=o();c.position.forEach((e=>{s(l,e,i),a.push(l[0],l[1],l[2])}));const n=[];c.uv.forEach((e=>{n.push(e[0],e[1])}));const _=new h([[d.POSITION,{size:3,data:a,exclusive:!0}],[d.UV0,{size:2,data:n,exclusive:!0}]],[[d.POSITION,c.triangleIndices],[d.UV0,c.triangleIndices]]);e.addGeometry(_,this._checkerBoardMaterial)}_geometryChanged(){this.recreateGeometry()}}const u=o();export{m as MeasurementAreaVisualElement};
