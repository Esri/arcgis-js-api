/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import e from"../../../../core/Handles.js";import{isSome as t,unwrap as s,isNone as i,unwrapOr as r}from"../../../../core/maybe.js";import{watch as n}from"../../../../core/reactiveUtils.js";import{c as a,b as l,k as o,o as h}from"../../../../chunks/vec3.js";import{c as _,f as d}from"../../../../chunks/vec3f64.js";import{g as p,c as u}from"../../../../chunks/vec4.js";import{f as c,a as f}from"../../../../chunks/vec4f32.js";import{create as m,fromRay as y,getStart as g,getEnd as x}from"../../../../geometry/support/clipRay.js";import{intersectClipRay as b}from"../../../../geometry/support/frustum.js";import{create as w,fromPoints as E,pointAt as R}from"../../../../geometry/support/lineSegment.js";import{create as O,fromPoints as D}from"../../../../geometry/support/ray.js";import{LaserlineVisualElement as A}from"./LaserlineVisualElement.js";import{Object3DVisualElement as C}from"./Object3DVisualElement.js";import P from"../../webgl-engine/lib/GeometryUtil.js";import{RenderOccludedFlag as j}from"../../webgl-engine/lib/Material.js";import{VertexAttribute as v}from"../../webgl-engine/lib/VertexAttribute.js";import{RibbonLineMaterial as M}from"../../webgl-engine/materials/RibbonLineMaterial.js";class G extends C{constructor(t){super(t),this._ray=O(),this._externalResources=null,this._handles=new e,this._isWorldDown=!1,this._start=_(),this._end=d(1,0,0),this._width=1,this._color=c(1,0,1,1),this._polygonOffset=!1,this._writeDepthEnabled=!0,this._innerWidth=0,this._innerColor=c(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._stipplePreferContinuous=!0,this._falloff=0,this._extensionType=V.LINE,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=j.OccludeAndTransparent,this._fadedExtensions=F,this.applyProps(t)}createExternalResources(){const e=new M(this.materialParameters);this._handles.add(n((()=>this.view.state.camera),(()=>{this._updateGeometry()})));const t=new A({view:this.view,attached:this._laserlineEnabled});this._externalResources={material:e,laserline:t}}destroyExternalResources(){t(this._externalResources)&&this._externalResources.laserline.destroy(),this._externalResources=null,this._handles.removeAll()}forEachExternalMaterial(e){t(this._externalResources)&&e(this._externalResources.material)}createGeometries(e){const t=[_(),_()],i=this.extensionType===V.FADED;i&&t.push(_(),_());const r=i?new Float32Array([1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]):null,n=P.createPolylineGeometry(t,null,r);e.addGeometry(n,s(this._externalResources).material),this._updateVertices(e)}updateVisibility(e){super.updateVisibility(e),t(this._externalResources)&&(this._externalResources.laserline.visible=e)}setStartEndFromWorldDownAtLocation(e){this._isWorldDown=!0,a(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),l(this._end,e,this._end),D(this._start,this._end,this._ray),this._updateGeometry()}get start(){return this._start}set start(e){this._isWorldDown=!1,o(this._start,e)||(a(this._start,e),D(this._start,this._end,this._ray),this._updateGeometry())}get end(){return this._end}set end(e){this._isWorldDown=!1,o(this._end,e)||(a(this._end,e),D(this._start,this._end,this._ray),this._updateGeometry())}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get color(){return this._color}set color(e){p(e,this._color)||(u(this._color,e),this._updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){p(e,this._innerColor)||(u(this._innerColor,e),this._updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const s=t(e)!==t(this._stipplePattern);this._stipplePattern=e,s?this.recreate():this._updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){(i(e)||i(this._stippleOffColor)||!p(e,this._stippleOffColor))&&(this._stippleOffColor=t(e)?f(e):null,this._updateMaterial())}get stipplePreferContinuous(){return this._stipplePreferContinuous}set stipplePreferContinuous(e){e!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=e,this._updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}get extensionType(){return this._extensionType}set extensionType(e){e!==this._extensionType&&(this._extensionType=e,this._updateGeometry())}get _laserlineAttached(){return this._laserlineEnabled&&t(this._laserlineStyle)}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(e){this._laserlineStyle=e,t(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached,t(e)&&(this._externalResources.laserline.style=e))}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,t(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached))}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get fadedExtensions(){return this._fadedExtensions}set fadedExtensions(e){this._fadedExtensions=r(e,F),this.recreateGeometry()}_updateMaterial(){if(i(this._externalResources))return;this._externalResources.material.setParameters(this.materialParameters)}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,hasPolygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}_updateGeometry(){t(this.object)&&this._updateVertices(this.object)}_updateVertices(e){const s=this._extensionType===V.FADED?this._updateLineSegmentFinite(T):this._updateLineSegmentInfinite(this._extensionType,T);this._updateVertexAttributes(e,s),t(this._externalResources)&&(this._externalResources.laserline.intersectsLine=s)}_updateLineSegmentFinite(e){return E(this._start,this._end,e)}_updateLineSegmentInfinite(e,t){const s=this.view.state.camera;switch(y(this._ray,W),e){case V.LINE:W.c0=-Number.MAX_VALUE;break;case V.RAY:case V.GROUND_RAY:{const e=this._ray.origin,t=r(this.view.elevationProvider.getElevation(e[0],e[1],e[2],this.view.renderCoordsHelper.spatialReference,"ground"),0),s=this.view.renderCoordsHelper.getAltitude(e);this._isWorldDown&&s<t&&h(W.ray.direction,W.ray.direction),this._extensionType===V.GROUND_RAY&&null!=t&&(W.c1=Math.abs(s-t));break}}if(!b(s.frustum,W))return E(this._start,this._end,t);const i=g(W,L),n=x(W,S);return E(i,n,t)}_updateVertexAttributes(e,t){const s=e.geometries[0].getMutableAttribute(v.POSITION).data;if(this.extensionType===V.FADED){const e=R(t,-this.fadedExtensions.start,L);s[0]=e[0],s[1]=e[1],s[2]=e[2];const i=R(t,0,L);s[3]=i[0],s[4]=i[1],s[5]=i[2];const r=R(t,1,L);s[6]=r[0],s[7]=r[1],s[8]=r[2];const n=R(t,1+this.fadedExtensions.end,L);s[9]=n[0],s[10]=n[1],s[11]=n[2]}else{const e=R(t,0,L);s[0]=e[0],s[1]=e[1],s[2]=e[2];const i=R(t,1,L);s[3]=i[0],s[4]=i[1],s[5]=i[2]}e.geometryVertexAttrsUpdated(e.geometryRecords[0])}}const W=m(),L=_(),S=_(),T=w();var V;!function(e){e[e.LINE=0]="LINE",e[e.RAY=1]="RAY",e[e.GROUND_RAY=2]="GROUND_RAY",e[e.FADED=3]="FADED"}(V||(V={}));const N=1/3,F={start:N,end:N};export{G as ExtendedLineVisualElement,V as ExtensionType};
