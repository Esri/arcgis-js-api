/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../core/Handles","../../../../core/maybe","../../../../core/reactiveUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","../../../../geometry/support/clipRay","../../../../geometry/support/frustum","../../../../geometry/support/lineSegment","../../../../geometry/support/ray","./LaserlineVisualElement","./Object3DVisualElement","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,i,n,s,r,o,a,l,u,h,c,_,d,p,f,y,m,x,g){"use strict";let E=function(i){function f(t){var s;return(s=i.call(this,t)||this)._ray=d.create(),s._externalResources=null,s._handles=new n,s._isWorldDown=!1,s._start=a.create(),s._end=a.fromValues(1,0,0),s._width=1,s._color=u.fromValues(1,0,1,1),s._polygonOffset=!1,s._writeDepthEnabled=!0,s._innerWidth=0,s._innerColor=u.fromValues(1,1,1,1),s._stipplePattern=null,s._stippleOffColor=null,s._stipplePreferContinuous=!0,s._falloff=0,s._extensionType=e.ExtensionType.LINE,s._laserlineStyle=null,s._laserlineEnabled=!1,s._renderOccluded=m.RenderOccludedFlag.OccludeAndTransparent,s._fadedExtensions=D,s.applyProps(t),s}t._inheritsLoose(f,i);var E=f.prototype;return E.createExternalResources=function(){const e=new g.RibbonLineMaterial(this.materialParameters);this._handles.add(r.watch((()=>this.view.state.camera),(()=>{this._updateGeometry()})));const t=new p.LaserlineVisualElement({view:this.view,attached:this._laserlineEnabled});this._externalResources={material:e,laserline:t}},E.destroyExternalResources=function(){s.isSome(this._externalResources)&&this._externalResources.laserline.destroy(),this._externalResources=null,this._handles.removeAll()},E.forEachExternalMaterial=function(e){s.isSome(this._externalResources)&&e(this._externalResources.material)},E.createGeometries=function(t){const i=[a.create(),a.create()],n=this.extensionType===e.ExtensionType.FADED;n&&i.push(a.create(),a.create());const r=n?new Float32Array([1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]):null,o=y.createPolylineGeometry(i,null,r);t.addGeometry(o,s.unwrap(this._externalResources).material),this._updateVertices(t)},E.updateVisibility=function(e){i.prototype.updateVisibility.call(this,e),s.isSome(this._externalResources)&&(this._externalResources.laserline.visible=e)},E.setStartEndFromWorldDownAtLocation=function(e){this._isWorldDown=!0,o.copy(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),o.subtract(this._end,e,this._end),d.fromPoints(this._start,this._end,this._ray),this._updateGeometry()},E._updateMaterial=function(){if(s.isNone(this._externalResources))return;this._externalResources.material.setParameters(this.materialParameters)},E._updateGeometry=function(){s.isSome(this.object)&&this._updateVertices(this.object)},E._updateVertices=function(t){const i=this._extensionType===e.ExtensionType.FADED?this._updateLineSegmentFinite(A):this._updateLineSegmentInfinite(this._extensionType,A);this._updateVertexAttributes(t,i),s.isSome(this._externalResources)&&(this._externalResources.laserline.intersectsLine=i)},E._updateLineSegmentFinite=function(e){return _.fromPoints(this._start,this._end,e)},E._updateLineSegmentInfinite=function(t,i){const n=this.view.state.camera;switch(h.fromRay(this._ray,b),t){case e.ExtensionType.LINE:b.c0=-Number.MAX_VALUE;break;case e.ExtensionType.RAY:case e.ExtensionType.GROUND_RAY:{const t=this._ray.origin,i=s.unwrapOr(this.view.elevationProvider.getElevation(t[0],t[1],t[2],this.view.renderCoordsHelper.spatialReference,"ground"),0),n=this.view.renderCoordsHelper.getAltitude(t);this._isWorldDown&&n<i&&o.negate(b.ray.direction,b.ray.direction),this._extensionType===e.ExtensionType.GROUND_RAY&&null!=i&&(b.c1=Math.abs(n-i));break}}if(!c.intersectClipRay(n.frustum,b))return _.fromPoints(this._start,this._end,i);const r=h.getStart(b,w),a=h.getEnd(b,R);return _.fromPoints(r,a,i)},E._updateVertexAttributes=function(t,i){const n=t.geometries[0].getMutableAttribute(x.VertexAttribute.POSITION).data;if(this.extensionType===e.ExtensionType.FADED){const e=_.pointAt(i,-this.fadedExtensions.start,w);n[0]=e[0],n[1]=e[1],n[2]=e[2];const t=_.pointAt(i,0,w);n[3]=t[0],n[4]=t[1],n[5]=t[2];const s=_.pointAt(i,1,w);n[6]=s[0],n[7]=s[1],n[8]=s[2];const r=_.pointAt(i,1+this.fadedExtensions.end,w);n[9]=r[0],n[10]=r[1],n[11]=r[2]}else{const e=_.pointAt(i,0,w);n[0]=e[0],n[1]=e[1],n[2]=e[2];const t=_.pointAt(i,1,w);n[3]=t[0],n[4]=t[1],n[5]=t[2]}t.geometryVertexAttrsUpdated(t.geometryRecords[0])},t._createClass(f,[{key:"start",get:function(){return this._start},set:function(e){this._isWorldDown=!1,o.exactEquals(this._start,e)||(o.copy(this._start,e),d.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"end",get:function(){return this._end},set:function(e){this._isWorldDown=!1,o.exactEquals(this._end,e)||(o.copy(this._end,e),d.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this._updateMaterial())}},{key:"color",get:function(){return this._color},set:function(e){l.exactEquals(e,this._color)||(l.copy(this._color,e),this._updateMaterial())}},{key:"polygonOffset",get:function(){return this._polygonOffset},set:function(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial())}},{key:"writeDepthEnabled",get:function(){return this._writeDepthEnabled},set:function(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial())}},{key:"innerWidth",get:function(){return this._innerWidth},set:function(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}},{key:"innerColor",get:function(){return this._innerColor},set:function(e){l.exactEquals(e,this._innerColor)||(l.copy(this._innerColor,e),this._updateMaterial())}},{key:"stipplePattern",get:function(){return this._stipplePattern},set:function(e){const t=s.isSome(e)!==s.isSome(this._stipplePattern);this._stipplePattern=e,t?this.recreate():this._updateMaterial()}},{key:"stippleOffColor",get:function(){return this._stippleOffColor},set:function(e){(s.isNone(e)||s.isNone(this._stippleOffColor)||!l.exactEquals(e,this._stippleOffColor))&&(this._stippleOffColor=s.isSome(e)?u.clone(e):null,this._updateMaterial())}},{key:"stipplePreferContinuous",get:function(){return this._stipplePreferContinuous},set:function(e){e!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=e,this._updateMaterial())}},{key:"falloff",get:function(){return this._falloff},set:function(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}},{key:"extensionType",get:function(){return this._extensionType},set:function(e){e!==this._extensionType&&(this._extensionType=e,this._updateGeometry())}},{key:"_laserlineAttached",get:function(){return this._laserlineEnabled&&s.isSome(this._laserlineStyle)}},{key:"laserlineStyle",get:function(){return this._laserlineStyle},set:function(e){this._laserlineStyle=e,s.isSome(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached,s.isSome(e)&&(this._externalResources.laserline.style=e))}},{key:"laserlineEnabled",get:function(){return this._laserlineEnabled},set:function(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,s.isSome(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached))}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}},{key:"fadedExtensions",get:function(){return this._fadedExtensions},set:function(e){this._fadedExtensions=s.unwrapOr(e,D),this.recreateGeometry()}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,hasPolygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}}]),f}(f.Object3DVisualElement);const b=h.create(),w=a.create(),R=a.create(),A=_.create();var O;e.ExtensionType=void 0,(O=e.ExtensionType||(e.ExtensionType={}))[O.LINE=0]="LINE",O[O.RAY=1]="RAY",O[O.GROUND_RAY=2]="GROUND_RAY",O[O.FADED=3]="FADED";const P=1/3,D={start:P,end:P};e.ExtendedLineVisualElement=E,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
