/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../core/Handles","../../../../core/maybe","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","../../../../geometry/support/clipRay","../../../../geometry/support/frustum","../../../../geometry/support/lineSegment","../../../../geometry/support/ray","./LaserlineVisualElement","./Object3DVisualElement","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,i,n,s,r,o,a,l,u,h,c,_,d,p,f,y,m,x){"use strict";let g=function(i){function p(t){var s;return(s=i.call(this,t)||this)._ray=_.create(),s._externalResources=null,s._handles=new n,s._isWorldDown=!1,s._start=o.create(),s._end=o.fromValues(1,0,0),s._width=1,s._color=l.fromValues(1,0,1,1),s._polygonOffset=!1,s._writeDepthEnabled=!0,s._innerWidth=0,s._innerColor=l.fromValues(1,1,1,1),s._stipplePattern=null,s._stippleOffColor=null,s._stipplePreferContinuous=!0,s._falloff=0,s._extensionType=e.ExtensionType.LINE,s._laserlineStyle=null,s._laserlineEnabled=!1,s._renderOccluded=y.RenderOccludedFlag.OccludeAndTransparent,s._fadedExtensions=P,s.applyProps(t),s}t._inheritsLoose(p,i);var g=p.prototype;return g.createExternalResources=function(){const e=new x.RibbonLineMaterial(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this._updateGeometry()})));const t=new d.LaserlineVisualElement({view:this.view,attached:this._laserlineEnabled});this._externalResources={material:e,laserline:t}},g.destroyExternalResources=function(){s.isSome(this._externalResources)&&this._externalResources.laserline.destroy(),this._externalResources=null,this._handles.removeAll()},g.forEachExternalMaterial=function(e){s.isSome(this._externalResources)&&e(this._externalResources.material)},g.createGeometries=function(t){const i=[o.create(),o.create()],n=this.extensionType===e.ExtensionType.FADED;n&&i.push(o.create(),o.create());const r=n?new Float32Array([1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]):null,a=f.createPolylineGeometry(i,null,r);t.addGeometry(a,s.unwrap(this._externalResources).material),this._updateVertices(t)},g.updateVisibility=function(e){i.prototype.updateVisibility.call(this,e),s.isSome(this._externalResources)&&(this._externalResources.laserline.visible=e)},g.setStartEndFromWorldDownAtLocation=function(e){this._isWorldDown=!0,r.copy(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),r.subtract(this._end,e,this._end),_.fromPoints(this._start,this._end,this._ray),this._updateGeometry()},g._updateMaterial=function(){if(s.isNone(this._externalResources))return;this._externalResources.material.setParameters(this.materialParameters)},g._updateGeometry=function(){s.isSome(this.object)&&this._updateVertices(this.object)},g._updateVertices=function(t){const i=this._extensionType===e.ExtensionType.FADED?this._updateLineSegmentFinite(R):this._updateLineSegmentInfinite(this._extensionType,R);this._updateVertexAttributes(t,i),s.isSome(this._externalResources)&&(this._externalResources.laserline.intersectsLine=i)},g._updateLineSegmentFinite=function(e){return c.fromPoints(this._start,this._end,e)},g._updateLineSegmentInfinite=function(t,i){const n=this.view.state.camera;switch(u.fromRay(this._ray,E),t){case e.ExtensionType.LINE:E.c0=-Number.MAX_VALUE;break;case e.ExtensionType.RAY:case e.ExtensionType.GROUND_RAY:{const t=this._ray.origin,i=s.unwrapOr(this.view.elevationProvider.getElevation(t[0],t[1],t[2],this.view.renderCoordsHelper.spatialReference,"ground"),0),n=this.view.renderCoordsHelper.getAltitude(t);this._isWorldDown&&n<i&&r.negate(E.ray.direction,E.ray.direction),this._extensionType===e.ExtensionType.GROUND_RAY&&null!=i&&(E.c1=Math.abs(n-i));break}}if(!h.intersectClipRay(n.frustum,E))return c.fromPoints(this._start,this._end,i);const o=u.getStart(E,b),a=u.getEnd(E,w);return c.fromPoints(o,a,i)},g._updateVertexAttributes=function(t,i){const n=t.geometries[0].getMutableAttribute(m.VertexAttribute.POSITION).data;if(this.extensionType===e.ExtensionType.FADED){const e=c.pointAt(i,-this.fadedExtensions.start,b);n[0]=e[0],n[1]=e[1],n[2]=e[2];const t=c.pointAt(i,0,b);n[3]=t[0],n[4]=t[1],n[5]=t[2];const s=c.pointAt(i,1,b);n[6]=s[0],n[7]=s[1],n[8]=s[2];const r=c.pointAt(i,1+this.fadedExtensions.end,b);n[9]=r[0],n[10]=r[1],n[11]=r[2]}else{const e=c.pointAt(i,0,b);n[0]=e[0],n[1]=e[1],n[2]=e[2];const t=c.pointAt(i,1,b);n[3]=t[0],n[4]=t[1],n[5]=t[2]}t.geometryVertexAttrsUpdated(t.geometryRecords[0])},t._createClass(p,[{key:"start",get:function(){return this._start},set:function(e){this._isWorldDown=!1,r.exactEquals(this._start,e)||(r.copy(this._start,e),_.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"end",get:function(){return this._end},set:function(e){this._isWorldDown=!1,r.exactEquals(this._end,e)||(r.copy(this._end,e),_.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this._updateMaterial())}},{key:"color",get:function(){return this._color},set:function(e){a.exactEquals(e,this._color)||(a.copy(this._color,e),this._updateMaterial())}},{key:"polygonOffset",get:function(){return this._polygonOffset},set:function(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial())}},{key:"writeDepthEnabled",get:function(){return this._writeDepthEnabled},set:function(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial())}},{key:"innerWidth",get:function(){return this._innerWidth},set:function(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}},{key:"innerColor",get:function(){return this._innerColor},set:function(e){a.exactEquals(e,this._innerColor)||(a.copy(this._innerColor,e),this._updateMaterial())}},{key:"stipplePattern",get:function(){return this._stipplePattern},set:function(e){const t=s.isSome(e)!==s.isSome(this._stipplePattern);this._stipplePattern=e,t?this.recreate():this._updateMaterial()}},{key:"stippleOffColor",get:function(){return this._stippleOffColor},set:function(e){(s.isNone(e)||s.isNone(this._stippleOffColor)||!a.exactEquals(e,this._stippleOffColor))&&(this._stippleOffColor=s.isSome(e)?l.clone(e):null,this._updateMaterial())}},{key:"stipplePreferContinuous",get:function(){return this._stipplePreferContinuous},set:function(e){e!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=e,this._updateMaterial())}},{key:"falloff",get:function(){return this._falloff},set:function(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}},{key:"extensionType",get:function(){return this._extensionType},set:function(e){e!==this._extensionType&&(this._extensionType=e,this._updateGeometry())}},{key:"_laserlineAttached",get:function(){return this._laserlineEnabled&&s.isSome(this._laserlineStyle)}},{key:"laserlineStyle",get:function(){return this._laserlineStyle},set:function(e){this._laserlineStyle=e,s.isSome(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached,s.isSome(e)&&(this._externalResources.laserline.style=e))}},{key:"laserlineEnabled",get:function(){return this._laserlineEnabled},set:function(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,s.isSome(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached))}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}},{key:"fadedExtensions",get:function(){return this._fadedExtensions},set:function(e){this._fadedExtensions=s.unwrapOr(e,P),this.recreateGeometry()}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,polygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}}]),p}(p.Object3DVisualElement);const E=u.create(),b=o.create(),w=o.create(),R=c.create();var A;e.ExtensionType=void 0,(A=e.ExtensionType||(e.ExtensionType={}))[A.LINE=0]="LINE",A[A.RAY=1]="RAY",A[A.GROUND_RAY=2]="GROUND_RAY",A[A.FADED=3]="FADED";const O=1/3,P={start:O,end:O};e.ExtendedLineVisualElement=g,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
