/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Handles","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/vec2","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","./Object3DVisualElement","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,r,i,n,s,o,c,a,l,u,h,d){"use strict";let _=function(e){function n(t){var i;return(i=e.call(this,t)||this)._handles=new r,i._location=c.create(),i._direction=c.fromValues(1,0,0),i._width=1,i._offset=1,i._length=18,i._color=l.fromValues(1,0,1,1),i._renderOccluded=4,i.applyProps(t),i}t._inheritsLoose(n,e);var u=n.prototype;return u.setDirectionFromPoints=function(e,t){o.normalize(this._direction,o.subtract(this._direction,t,e)),this.updateGeometry()},u.createExternalResources=function(){const e=new d.RibbonLineMaterial(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this.updateGeometry()}))),this._externalResources={material:e}},u.destroyExternalResources=function(){this._handles.removeAll(),this._externalResources=null},u.createGeometries=function(e){const t=h.createPolylineGeometry([c.create(),c.create()]),r=h.createPolylineGeometry([c.create(),c.create()]),n=i.unwrap(this._externalResources).material;e.addGeometry(t,n),e.addGeometry(r,n),this.updateVertices(e)},u.forEachExternalMaterial=function(e){i.isSome(this._externalResources)&&e(this._externalResources.material)},u.updateMaterial=function(){if(i.isNone(this._externalResources))return;this._externalResources.material.setParameters(this.materialParameters)},u.updateGeometry=function(){const e=this.object;i.isNone(e)||this.updateVertices(e)},u.updateVertices=function(e){const t=this.view.state.camera;t.projectToScreen(this.location,m),o.add(f,this.location,this.direction),t.projectToScreen(f,y),s.normalize(y,s.subtract(y,y,m)),this.updateVertexAttributes(t,e,0,m,y,1),this.updateVertexAttributes(t,e,1,m,y,-1)},u.updateVertexAttributes=function(e,t,r,i,n,o){const c=t.geometryRecords[r],a=c.geometry.getMutableAttribute("position").data,l=s.scale(p,s.set(p,n[1]*o,n[0]*-o),this.offset+this.width/2),u=s.add(g,s.add(g,s.add(g,i,s.scale(g,n,this.length/2)),l),l),h=s.add(b,u,s.scale(b,n,-this.length));e.unprojectFromScreen(u,f),a[0]=f[0],a[1]=f[1],a[2]=f[2],e.unprojectFromScreen(h,f),a[3]=f[0],a[4]=f[1],a[5]=f[2],t.geometryVertexAttrsUpdated(c)},t._createClass(n,[{key:"location",get:function(){return this._location},set:function(e){o.exactEquals(this._location,e)||(o.copy(this._location,e),this.updateGeometry())}},{key:"direction",get:function(){return this._direction},set:function(e){o.exactEquals(this._direction,e)||(o.copy(this._direction,e),this.updateGeometry())}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this.updateMaterial())}},{key:"offset",get:function(){return this._offset},set:function(e){e!==this._offset&&(this._offset=e,this.updateGeometry())}},{key:"length",get:function(){return this._length},set:function(e){e!==this._length&&(this._length=e,this.updateGeometry())}},{key:"color",get:function(){return this._color},set:function(e){a.exactEquals(e,this._color)||(a.copy(this._color,e),this.updateMaterial())}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}}]),n}(u.Object3DVisualElement);const f=c.create(),m=n.createScreenPointArray(),y=n.createScreenPointArray(),p=n.createScreenPointArray(),g=n.createScreenPointArray(),b=n.createScreenPointArray();e.ParallelLineVisualElement=_,Object.defineProperty(e,"__esModule",{value:!0})}));
