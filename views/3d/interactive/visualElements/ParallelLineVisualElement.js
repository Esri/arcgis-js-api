/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Handles","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/mat4f64","../../../../chunks/vec2","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","./Object3DVisualElement","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,r,i,n,s,c,o,a,l,u,h,d,f){"use strict";let _=function(e){function n(t){var i;return(i=e.call(this,t)||this)._handles=new r,i._location=a.create(),i._direction=a.fromValues(1,0,0),i._width=1,i._offset=1,i._length=18,i._color=u.fromValues(1,0,1,1),i._renderOccluded=4,i.applyProps(t),i}t._inheritsLoose(n,e);var h=n.prototype;return h.setDirectionFromPoints=function(e,t){o.normalize(this._direction,o.subtract(this._direction,t,e)),this.updateGeometry()},h.createExternalResources=function(){const e=new f.RibbonLineMaterial(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this.updateGeometry()}))),this._externalResources={material:e}},h.destroyExternalResources=function(){this._handles.removeAll(),this._externalResources=null},h.createGeometries=function(e){const t=d.createPolylineGeometry([a.create(),a.create()]),r=d.createPolylineGeometry([a.create(),a.create()]),n=i.unwrap(this._externalResources).material;e.addGeometry(t,n,s.IDENTITY),e.addGeometry(r,n,s.IDENTITY),this.updateVertices(e)},h.forEachExternalMaterial=function(e){i.isSome(this._externalResources)&&e(this._externalResources.material)},h.updateMaterial=function(){if(i.isNone(this._externalResources))return;this._externalResources.material.setParameterValues(this.materialParameters)},h.updateGeometry=function(){const e=this.object;i.isNone(e)||this.updateVertices(e)},h.updateVertices=function(e){const t=this.view.state.camera;t.projectToScreen(this.location,y),o.add(m,this.location,this.direction),t.projectToScreen(m,p),c.normalize(p,c.subtract(p,p,y)),this.updateVertexAttributes(t,e,0,y,p,1),this.updateVertexAttributes(t,e,1,y,p,-1)},h.updateVertexAttributes=function(e,t,r,i,n,s){const o=t.geometryRecords[r].geometry.getMutableAttribute("position").data,a=c.scale(g,c.set(g,n[1]*s,n[0]*-s),this.offset+this.width/2),l=c.add(b,c.add(b,c.add(b,i,c.scale(b,n,this.length/2)),a),a),u=c.add(x,l,c.scale(x,n,-this.length));e.unprojectFromScreen(l,m),o[0]=m[0],o[1]=m[1],o[2]=m[2],e.unprojectFromScreen(u,m),o[3]=m[0],o[4]=m[1],o[5]=m[2],t.geometryVertexAttrsUpdated(r)},t._createClass(n,[{key:"location",get:function(){return this._location},set:function(e){o.exactEquals(this._location,e)||(o.copy(this._location,e),this.updateGeometry())}},{key:"direction",get:function(){return this._direction},set:function(e){o.exactEquals(this._direction,e)||(o.copy(this._direction,e),this.updateGeometry())}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this.updateMaterial())}},{key:"offset",get:function(){return this._offset},set:function(e){e!==this._offset&&(this._offset=e,this.updateGeometry())}},{key:"length",get:function(){return this._length},set:function(e){e!==this._length&&(this._length=e,this.updateGeometry())}},{key:"color",get:function(){return this._color},set:function(e){l.exactEquals(e,this._color)||(l.copy(this._color,e),this.updateMaterial())}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}}]),n}(h.Object3DVisualElement);const m=a.create(),y=n.createScreenPointArray(),p=n.createScreenPointArray(),g=n.createScreenPointArray(),b=n.createScreenPointArray(),x=n.createScreenPointArray();e.ParallelLineVisualElement=_,Object.defineProperty(e,"__esModule",{value:!0})}));
