/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../core/Handles","../../../../chunks/mat4f64","../../../../chunks/vec2","../../../../chunks/vec4","../../../../chunks/vec4f32","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/materials/RibbonLineMaterial","./Object3DVisualElement"],(function(e,t,r,i,n,s,c,o,a,l,u,h,d,f){"use strict";let _=function(e){function i(t){var r;return(r=e.call(this,t)||this)._handles=new c,r._location=n.create(),r._direction=n.fromValues(1,0,0),r._width=1,r._offset=1,r._length=18,r._color=u.fromValues(1,0,1,1),r._renderOccluded=4,r.applyProps(t),r}t._inheritsLoose(i,e);var f=i.prototype;return f.setDirectionFromPoints=function(e,t){s.normalize(this._direction,s.subtract(this._direction,t,e)),this.updateGeometry()},f.createExternalResources=function(){const e=new d.RibbonLineMaterial(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this.updateGeometry()}))),this._externalResources={material:e}},f.destroyExternalResources=function(){this._handles.removeAll(),this._externalResources=null},f.createGeometries=function(e){const t=h.createPolylineGeometry([n.create(),n.create()]),i=h.createPolylineGeometry([n.create(),n.create()]),s=r.unwrap(this._externalResources).material;e.addGeometry(t,s,o.IDENTITY),e.addGeometry(i,s,o.IDENTITY),this.updateVertices(e)},f.forEachExternalMaterial=function(e){r.isSome(this._externalResources)&&e(this._externalResources.material)},f.updateMaterial=function(){if(r.isNone(this._externalResources))return;this._externalResources.material.setParameterValues(this.materialParameters)},f.updateGeometry=function(){const e=this.object;r.isNone(e)||this.updateVertices(e)},f.updateVertices=function(e){const t=this.view.state.camera;t.projectToScreen(this.location,y),s.add(m,this.location,this.direction),t.projectToScreen(m,p),a.normalize(p,a.subtract(p,p,y)),this.updateVertexAttributes(t,e,0,y,p,1),this.updateVertexAttributes(t,e,1,y,p,-1)},f.updateVertexAttributes=function(e,t,r,i,n,s){const c=t.geometryRecords[r].geometry.getMutableAttribute("position").data,o=a.scale(g,a.set(g,n[1]*s,n[0]*-s),this.offset+this.width/2),l=a.add(b,a.add(b,a.add(b,i,a.scale(b,n,this.length/2)),o),o),u=a.add(x,l,a.scale(x,n,-this.length));e.unprojectFromScreen(l,m),c[0]=m[0],c[1]=m[1],c[2]=m[2],e.unprojectFromScreen(u,m),c[3]=m[0],c[4]=m[1],c[5]=m[2],t.geometryVertexAttrsUpdated(r)},t._createClass(i,[{key:"location",get:function(){return this._location},set:function(e){s.exactEquals(this._location,e)||(s.copy(this._location,e),this.updateGeometry())}},{key:"direction",get:function(){return this._direction},set:function(e){s.exactEquals(this._direction,e)||(s.copy(this._direction,e),this.updateGeometry())}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this.updateMaterial())}},{key:"offset",get:function(){return this._offset},set:function(e){e!==this._offset&&(this._offset=e,this.updateGeometry())}},{key:"length",get:function(){return this._length},set:function(e){e!==this._length&&(this._length=e,this.updateGeometry())}},{key:"color",get:function(){return this._color},set:function(e){l.exactEquals(e,this._color)||(l.copy(this._color,e),this.updateMaterial())}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}}]),i}(f.Object3DVisualElement);const m=n.create(),y=i.createScreenPointArray(),p=i.createScreenPointArray(),g=i.createScreenPointArray(),b=i.createScreenPointArray(),x=i.createScreenPointArray();e.ParallelLineVisualElement=_,Object.defineProperty(e,"__esModule",{value:!0})}));
