/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../../../chunks/mat4","../../../chunks/vec3","../../../chunks/vec3f64","../../../chunks/vec4f64","../../../geometry/support/vectorStacks","../../../layers/graphics/hydratedFeatures","./Manipulator3D","../layers/graphics/graphicUtils","../webgl-engine/lib/basicInterfaces","../webgl-engine/lib/Geometry","../webgl-engine/lib/GeometryUtil","../webgl-engine/lib/Material","../webgl-engine/lib/VertexAttribute","../webgl-engine/materials/ColorMaterial","../webgl-engine/materials/ImageMaterial","../webgl-engine/materials/NativeLineMaterial","../webgl-engine/materials/RibbonLineMaterial","../webgl-engine/materials/ShadedColorMaterial","../../interactive/interfaces"],(function(e,t,a,r,n,l,i,o,c,s,u,d,g,m,p,M,f,b,h,O,w){"use strict";function y(e,t=m.RenderOccludedFlag.OccludeAndTransparent,a=!0){const r=l.fromValues(e[0],e[1],e[2],e.length>3?e[3]:1),n=e[3]<1;return a?new O.ShadedColorMaterial({color:r,transparent:n,writeDepth:!0,cullFace:u.CullFaceOptions.Back,renderOccluded:t}):new M.ColorMaterial({color:r,transparent:n,writeDepth:!0,cullFace:u.CullFaceOptions.Back,renderOccluded:t})}function S(e,t=m.RenderOccludedFlag.OccludeAndTransparent){const a=l.fromValues(e[0],e[1],e[2],4===e.length?e[3]:1);return new M.ColorMaterial({color:a,transparent:!0,writeDepth:!0,cullFace:u.CullFaceOptions.Front,renderOccluded:t})}const F=Object.freeze({calloutLength:40,calloutWidth:1,discRadius:27,focusMultiplier:1.1,calloutColor:n.fromValues(1,.5,0)});function v(e,t){const a=new c.Manipulator3D({view:e,autoScaleRenderObjects:!1,collisionPriority:1,metadata:t.metadata});return R(a,t),a}function R(e,t){const a=t.material??new f.ImageMaterial({transparent:!0,writeDepth:!1,textureId:t.texture?.id,renderOccluded:m.RenderOccludedFlag.Opaque}),r=t.focusMultiplier??F.focusMultiplier,n=t.calloutLength??F.calloutLength,i=F.discRadius*(t.discScale??1),o=i*r,c=e=>{const t=[0,1,2,2,3,0];return new d.Geometry([[p.VertexAttribute.POSITION,{size:3,data:[n-e,-e,0,n+e,-e,0,n+e,e,0,n-e,e,0],exclusive:!0}],[p.VertexAttribute.UV0,{size:2,data:[0,0,1,0,1,1,0,1]}]],[[p.VertexAttribute.POSITION,t],[p.VertexAttribute.UV0,t]])},s=g.createPolylineGeometry([[0,0,0],[n-i,0,0]]),u=g.createPolylineGeometry([[0,0,0],[n-o,0,0]]),M=F.calloutColor,O=t.calloutWidth??F.calloutWidth,y=new(O>1?h.RibbonLineMaterial:b.NativeLineMaterial)({width:O,color:l.fromValues(M[0],M[1],M[2],t.calloutOpacity??1),renderOccluded:m.RenderOccludedFlag.OccludeAndTransparent}),S=t.customStateMask??w.ManipulatorStateCustomFlags.None;e.collisionType={type:"disc",direction:[0,0,1],offset:[n,0,0]},e.focusMultiplier=r,e.metadata=t.metadata,e.radius=i,e.renderObjects=[{geometry:c(i),material:a,stateMask:w.ManipulatorStateFlags.Unfocused|S},{geometry:s,material:y,stateMask:w.ManipulatorStateFlags.Unfocused|S},{geometry:c(o),material:a,stateMask:w.ManipulatorStateFlags.Focused|S},{geometry:u,material:y,stateMask:w.ManipulatorStateFlags.Focused|S}]}function k(e,t,a,r=w.ManipulatorStateCustomFlags.None){return new c.Manipulator3D({view:e,renderObjects:[{geometry:g.createSphereGeometry(1,32,32),material:y(l.fromValues(t[0],t[1],t[2],null!=a?a:1)),stateMask:r}]})}const A=Object.freeze({autoScaleRenderObjects:!1,worldSized:!0});function C(e,t,n,l){const o=r.subtract(i.sv3d.get(),e,n),c=V(o,r.cross(i.sv3d.get(),l,o),n,i.sm4d.get());a.invert(c,c);const s=r.transformMat4(i.sv3d.get(),t,c);return Math.atan2(s[1],s[0])}function V(e,t,a,n){const l=r.normalize(i.sv3d.get(),e),o=r.normalize(i.sv3d.get(),t),c=r.cross(i.sv3d.get(),l,o);return n[0]=l[0],n[1]=l[1],n[2]=l[2],n[3]=0,n[4]=o[0],n[5]=o[1],n[6]=o[2],n[7]=0,n[8]=c[0],n[9]=c[1],n[10]=c[2],n[11]=0,n[12]=a[0],n[13]=a[1],n[14]=a[2],n[15]=1,n}function G(e,a){const r=e.getViewForGraphic(a);return t.isSome(r)&&"computeAttachmentOrigin"in r?r.computeAttachmentOrigin(a,e.spatialReference):null}function x(e,a,r){const n=G(e,r);t.isSome(n)?a.elevationAlignedLocation=n:I(a,r.geometry)}function I(e,a){if(t.isNone(a))return;const r="mesh"===a.type?a.anchor:s.computeCentroid(a);t.isNone(r)||(e.location=o.hydrateGeometry(r))}e.calculateInputRotationTransform=C,e.calculateTranslateRotateFromBases=V,e.createManipulatorMaterial=y,e.createManipulatorOutlineMaterial=S,e.createRotateManipulator=v,e.createSphereManipulator=k,e.getGraphicAttachmentOrigin=G,e.placeAtGraphic=x,e.updateRotateManipulator=R,e.worldScaledManipulatorSettings=A,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
