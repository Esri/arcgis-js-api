/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Error","../../../core/Logger","../../../core/watchUtils","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","./LayerView3D","./TiledLayerView3D","../../layers/LayerView","../../layers/RefreshableLayerView"],(function(e,t,i,r,s,o,a,n,l,h,c,p,d,u){"use strict";const f=r.getLogger("esri.views.3d.layers.WMTSLayerView3d");let y=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).type="wmts-3d",e}e._inheritsLoose(r,t);var o=r.prototype;return o.initialize=function(){const e=s.whenTrueOnce(this.view,"basemapTerrain.tilingSchemeDone").then((()=>{const e=()=>new i("layerview:no-compatible-tiling-scheme","None of the tiling schemes supported by the service are compatible with the scene.");if(!this.view.basemapTerrain.tilingSchemeLocked)throw e();const t=this.view.basemapTerrain.tilingScheme,r=this.layer.activeLayer;let s;if(r&&r.tileMatrixSet){s=r.tileMatrixSet;const e=s.tileInfo,i=this._getTileInfoSupportError(e,s.fullExtent)||this._getTileInfoCompatibilityError(e,t);if(i)throw i}else{if(s=this._getCompatibleTileMatrixSet(),!s)throw e();r.tileMatrixSetId=s.id}this._set("tileInfo",s.tileInfo),this._set("fullExtent",s.fullExtent),this.layer.fullExtent=s.fullExtent}));this.addResolvingPromise(e),this.when((()=>this._initialized()))},o.refresh=function(){this.emit("data-changed")},o.canResume=function(){if(!t.prototype.canResume.call(this))return!1;const e=this.layer.activeLayer.tileMatrixSet;return e&&!this._getTileInfoError(e.tileInfo,e.fullExtent)},o.doRefresh=function(){var t=e._asyncToGenerator((function*(){this.suspended||this.emit("data-changed")}));function i(){return t.apply(this,arguments)}return i}(),o._initialized=function(){this.updatingHandles.add(this,"layer.activeLayer.styleId",(()=>this.refresh())),this.updatingHandles.add(this,"tileMatrixSet",(()=>this.refresh())),this.updatingHandles.add(this.layer,"activeLayer",(e=>{let t=e.tileMatrixSet;if(t){const e=this._getTileInfoError(t.tileInfo,t.fullExtent);e&&(f.error("The selected tile matrix set is not compatible with the view",e),t=null)}else t=this._getCompatibleTileMatrixSet(),t?e.tileMatrixSetId=t.id:f.error("The layer does not provide a tiling scheme that is compatible with the view");this.notifyChange("suspended"),this.canResume()&&this.refresh()}))},o._getCompatibleTileMatrixSet=function(){return this.layer.activeLayer.tileMatrixSets.find((e=>{const t=e.tileInfo;return!this._getTileInfoError(t,e.fullExtent)}))},o._getTileInfoError=function(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)},e._createClass(r,[{key:"hasMixedImageFormats",get:function(){return!0}}]),r}(u.RefreshableLayerView(p.TiledLayerView3D(c.LayerView3D(d))));t.__decorate([o.property({readOnly:!0})],y.prototype,"hasMixedImageFormats",null),t.__decorate([o.property()],y.prototype,"fullExtent",void 0),t.__decorate([o.property()],y.prototype,"layer",void 0),t.__decorate([o.property()],y.prototype,"suspended",void 0),t.__decorate([o.property()],y.prototype,"tileInfo",void 0),y=t.__decorate([h.subclass("esri.views.3d.layers.WMTSLayerView3D")],y);return y}));
