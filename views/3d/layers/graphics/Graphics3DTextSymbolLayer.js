/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/Error","../../../../core/screenUtils","../../../../symbols/callouts/calloutUtils","../../../../chunks/vec2f64","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/materials/HUDMaterial","./graphicUtils","./elevationAlignmentUtils","./ElevationAligners","./ElevationContext","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./pointUtils","../../webgl-engine/lib/TextRenderParameters","../../webgl-engine/lib/TextTexture"],(function(e,t,n,i,r,o,s,a,l,c,d,h,u,f,p,y,m,g){"use strict";const v=[0,0,1];let x=function(e){function p(t,n,i,r){var o;return(o=e.call(this,t,n,i,r)||this)._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},o.ensureDrapedStatus(!1),o}t._inheritsLoose(p,e);var x=p.prototype;return x.doLoad=async function(){if(!this._drivenProperties.size){const e=c.validateSymbolLayerSize(this.symbolLayer.size);if(e)throw new i("graphics3dtextsymbollayer:invalid-size",e)}this._createTextRenderParameters()},x._createTextRenderParameters=function(){const e=this._context.layerView.view.pixelRatio;this._textRenderParameters=m.TextRenderParameters.fromSymbol(this.symbolLayer,e)},x.destroy=function(){e.prototype.destroy.call(this)},x.createGraphics3DGraphic=function(e){const t=e.graphic,i=y.placePointOnGeometry(t.geometry);if(n.isNone(i))return this.logger.warn(`unsupported geometry type for text symbol: ${t.geometry.type}`),null;const r=this.symbolLayer.text;if(!r)return null;const s=o.isCalloutSupport(this.symbol)&&this.symbol.hasVisibleVerticalOffset()?this.symbol:null;return this._createAs3DShape(t,i,r,s)},x.createLabel=function(e,t,i,r){const o=e.graphic,s=y.placePointOnGeometry(o.geometry);if(n.isNone(s))return this.logger.warn(`unsupported geometry type for label: ${o.geometry.type}`),null;const a=t.text;return!a||/^\s+$/.test(a)?null:this._createAs3DShape(o,s,a,t,t,i,r)},x.setGraphicElevationContext=function(t,n,i=0){const r=e.prototype.setGraphicElevationContext.call(this,t,n);return r.addOffsetRenderUnits(i),r},x.layerOpacityChanged=function(){return this.logger.warn("layer opacity change not yet implemented in Graphics3DTextSymbolLayer"),!1},x.layerElevationInfoChanged=function(e,t){return b(e,t,((e,t)=>{this.updateGraphicElevationContext(t,e)})),d.SymbolUpdateType.UPDATE},x.slicePlaneEnabledChanged=function(e,t){return b(e,t,(e=>{for(const t of e.stageObject.geometryRecords)t.material.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled})})),!0},x.physicalBasedRenderingChanged=function(){return!0},x.pixelRatioChanged=function(){return!1},x.updateGraphicElevationContext=function(e,t){this.setGraphicElevationContext(e,t.elevationContext,t.metadata.elevationOffset),t.needsElevationUpdates=d.needsElevationUpdates2D(t.elevationContext.mode)||"absolute-height"===t.elevationContext.mode},x._defaultElevationInfoNoZ=function(){return S},x._createAs3DShape=function(e,t,i,o,p=O,m,x){const b=this.setGraphicElevationContext(e,new u.ElevationContext,p.elevationOffset),S="polyline"===n.get(e.geometry,"type"),P=e.uid,E=this._context.stage.renderView.renderingContext,_=p.anchor in c.namedAnchorToHUDMaterialAnchorPos?p.anchor:"center",D=c.namedAnchorToHUDMaterialAnchorPos[_],U=n.isNone(x)?new g(E,i,this._textRenderParameters):null,w={occlusionTest:!0,screenOffset:p.screenOffset,anchorPos:D,polygonOffset:!0,color:[1,1,1,1],centerOffsetUnits:p.centerOffsetUnits,debugDrawBorder:p.debugDrawBorder,drawInSecondSlot:!0};if(n.isSome(U)&&(w.textureId=U.id,w.texCoordScale=U.texcoordScale),n.isSome(x)&&(w.textureId=x.id),n.isSome(o)&&n.isSome(o.verticalOffset)){const{screenLength:e,minWorldLength:t,maxWorldLength:n}=o.verticalOffset;w.verticalOffset={screenLength:r.pt2px(e),minWorldLength:t||0,maxWorldLength:null!=n?n:1/0}}if(this._context.screenSizePerspectiveEnabled){const{screenSizePerspectiveSettings:e,screenSizePerspectiveSettingsLabels:t}=this._context.sharedResources;w.screenSizePerspective=t.overridePadding(this._textRenderParameters.haloSize),w.screenSizePerspectiveAlignment=e}let C;if(S&&(w.shaderPolygonOffset=1e-4),w.slicePlaneEnabled=this._context.slicePlaneEnabled,n.isSome(m)){const e=JSON.stringify(w);C=m.get(e),n.isNone(C)&&(C=new l.HUDMaterial(w),m.add(e,C))}else C=new l.HUDMaterial(w);const G=[C],L=p.translation,T=n.isSome(U)?[U.displayWidth,U.displayHeight]:[0,0],A=p.centerOffset,R=v,z=[0,0],H=[a.createPointGeometry(R,L,null,T,A,z,null)],j=this._context.layer.uid,N=y.createStageObjectForHUD(this._context,t,H,G,null,null,b,j,P);if(null===N)return null;const W=h.perObjectElevationAligner,M=new f(this,N.object,H,n.isNone(m)?G:null,n.isSome(U)?[U]:null,W,b);M.alignedSampledElevation=N.sampledElevation,M.needsElevationUpdates=d.needsElevationUpdates2D(b.mode)||"absolute-height"===b.mode;const{displayWidth:B,displayHeight:I}=n.isSome(U)?U:p;M.getScreenSize=(e=s.create())=>(e[0]=B,e[1]=I,e);const V={labelText:i,elevationOffset:p.elevationOffset};return M.metadata=V,y.extendPointGraphicElevationContext(M,t,this._context.elevationProvider),M},p}(p.Graphics3DSymbolLayer);function b(e,t,i){e&&e.forEach((e=>{const r=t(e);n.isSome(r)&&i(r,e.graphic)}))}const S={mode:"relative-to-ground",offset:0},O={text:null,translation:[0,0,0],elevationOffset:0,centerOffset:[0,0,0,1],screenOffset:[0,0],anchor:"center",verticalOffset:null,centerOffsetUnits:null,debugDrawBorder:!1,displayWidth:0,displayHeight:0};e.Graphics3DTextSymbolLayer=x,e.default=x,Object.defineProperty(e,"__esModule",{value:!0})}));
