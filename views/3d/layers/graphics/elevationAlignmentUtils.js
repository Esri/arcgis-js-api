/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{neverReached as e}from"../../../../core/compilerUtils.js";import{unwrapOr as t}from"../../../../core/maybe.js";import{c as n}from"../../../../chunks/mat4.js";import{c as o}from"../../../../chunks/mat4f64.js";import{c as r}from"../../../../chunks/vec3f64.js";import{projectBuffer as i,computeTranslationToOriginAndRotation as s}from"../../../../geometry/projection.js";import{isDehydratedPoint as a}from"../../../../layers/graphics/dehydratedFeatureUtils.js";import{updateVertexAttributeAuxpos1w as l}from"./graphicUtils.js";import{isSamplePosition as c,getElevationAtPoint as u}from"../../support/ElevationProvider.js";function f(e,t,n,o,r,s,a,l,c,u,f){const d=O[f.mode];let m,p,g=0;if(i(e,t,n,o,c.spatialReference,r,l))return d.requiresAlignment(f)?(g=d.applyElevationAlignmentBuffer(o,r,s,a,l,c,u,f),m=s,p=a):(m=o,p=r),i(m,c.spatialReference,p,s,u.spatialReference,a,l)?g:void 0}function d(n,o,r,i,s){const l=(a(n)?n.z:c(n)?n.array[n.offset+2]:n[2])||0;switch(r.mode){case"on-the-ground":{const e=t(u(o,n,"ground"),0);return s.verticalDistanceToGround=0,s.sampledElevation=e,void(s.z=e)}case"relative-to-ground":{const e=t(u(o,n,"ground"),0),a=r.geometryZWithOffset(l,i);return s.verticalDistanceToGround=a,s.sampledElevation=e,void(s.z=a+e)}case"relative-to-scene":{const e=t(u(o,n,"scene"),0),a=r.geometryZWithOffset(l,i);return s.verticalDistanceToGround=a,s.sampledElevation=e,void(s.z=a+e)}case"absolute-height":{const e=r.geometryZWithOffset(l,i),a=t(u(o,n,"ground"),0);return s.verticalDistanceToGround=e-a,s.sampledElevation=a,void(s.z=e)}default:return e(r.mode),void(s.z=0)}}function m(e,t,n,o){return d(e,t,n,o,z),z.z}function p(e,t,n){return null==t||null==n?e.definedChanged:"on-the-ground"===t&&"on-the-ground"===n?e.staysOnTheGround:t===n||"on-the-ground"!==t&&"on-the-ground"!==n?x.UPDATE:e.onTheGroundChanged}function g(e){return"relative-to-ground"===e||"relative-to-scene"===e}function v(e){return"absolute-height"!==e}function h(e,t,o,r,i){d(t,o,i,r,z),l(e,z.verticalDistanceToGround);const a=z.sampledElevation,c=n(U,e.transformation);C[0]=t.x,C[1]=t.y,C[2]=z.z;return s(t.spatialReference,C,c,r.spatialReference)?e.transformation=c:console.warn("Could not locate symbol object properly, it might be misplaced"),a}function E(e,n,o,r,i,s){let a=0;const l=s.spatialReference;n*=3,r*=3;for(let c=0;c<i;++c){const i=e[n+0],c=e[n+1],u=e[n+2],f=t(s.getElevation(i,c,u,l,"ground"),0);a+=f,o[r+0]=i,o[r+1]=c,o[r+2]=f,n+=3,r+=3}return a/i}function y(e,n,o,r,i,s,a,l){let c=0;const u=l.calculateOffsetRenderUnits(a),f=l.featureExpressionInfoContext,d=s.spatialReference;n*=3,r*=3;for(let m=0;m<i;++m){const i=e[n+0],a=e[n+1],l=e[n+2],m=t(s.getElevation(i,a,l,d,"ground"),0);c+=m,o[r+0]=i,o[r+1]=a,o[r+2]=null==f?l+m+u:m+u,n+=3,r+=3}return c/i}function A(e,n,o,r,i,s,a,l){let c=0;const u=l.calculateOffsetRenderUnits(a),f=l.featureExpressionInfoContext,d=s.spatialReference;n*=3,r*=3;for(let m=0;m<i;++m){const i=e[n+0],a=e[n+1],l=e[n+2],m=t(s.getElevation(i,a,l,d,"scene"),0);c+=m,o[r+0]=i,o[r+1]=a,o[r+2]=null==f?l+m+u:m+u,n+=3,r+=3}return c/i}function R(e){const t=e.meterUnitOffset,n=e.featureExpressionInfoContext;return 0!==t||null!=n}function T(e,t,n,o,r,i,s,a){const l=a.calculateOffsetRenderUnits(s),c=a.featureExpressionInfoContext;t*=3,o*=3;for(let u=0;u<r;++u){const r=e[t+0],i=e[t+1],s=e[t+2];n[o+0]=r,n[o+1]=i,n[o+2]=null==c?s+l:l,t+=3,o+=3}return 0}class j{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}}var x;!function(e){e[e.NONE=0]="NONE",e[e.UPDATE=1]="UPDATE",e[e.RECREATE=2]="RECREATE"}(x||(x={}));const O={"absolute-height":{applyElevationAlignmentBuffer:T,requiresAlignment:R},"on-the-ground":{applyElevationAlignmentBuffer:E,requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:y,requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:A,requiresAlignment:()=>!0}},U=o(),z=new j,C=r();export{j as SampleElevationInfo,x as SymbolUpdateType,h as applyElevationAlignmentForHUD,f as applyPerVertexElevationAlignment,p as elevationModeChangeUpdateType,m as evaluateElevationAlignmentAtPoint,d as evaluateElevationInfoAtPoint,g as needsElevationUpdates2D,v as needsElevationUpdates3D};
