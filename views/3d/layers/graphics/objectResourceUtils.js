/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/devEnvironmentUtils","../../../../core/maybe","../../../../chunks/mat3","../../../../chunks/mat3f64","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/buffer/BufferView","../../../../chunks/vec32","../../../../chunks/vec42","../../../../geometry/support/buffer/utils","../../glTF/DefaultLoadingContext","../../glTF/loader","../../glTF/internal/indexUtils","../../glTF/internal/resourceUtils","../../glTF/internal/TextureTransformUtils","./ProcessedObjectResource","./wosrLoader","../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/Texture","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/materials/DefaultMaterial_COLOR_GAMMA","../../../webgl/enums","../../../../chunks/vec22","../../../../chunks/vec43","../../../../chunks/vec33"],(function(e,t,r,o,i,s,n,a,u,l,c,f,m,d,g,p,x,b,h,T,M,A,R,B,V,w,S,y,v,O,L,C,E,F){"use strict";function I(e,t){return N.apply(this,arguments)}function N(){return(N=t._asyncToGenerator((function*(e,t){const i=k(r.adjustStaticAGOUrl(e));if("wosr"===i.fileType){const e=yield t.cache?t.cache.loadWOSR(i.url,t):A.load(i.url,t),{engineResources:r,referenceBoundingBox:o}=A.processLoadResult(e,t);return{lods:r,referenceBoundingBox:o,isEsriSymbolResource:!1,isWosr:!0}}const s=yield t.cache?t.cache.loadGLTF(i.url,t,!!t.usePBR):x.loadGLTF(new p.DefaultLoadingContext(t.streamDataRequester),i.url,t,t.usePBR),n=o.get(s.model.meta,"ESRI_proxyEllipsoid"),a=s.meta.isEsriSymbolResource&&o.isSome(n)&&s.meta.uri.includes("/RealisticTrees/");a&&!s.customMeta.esriTreeRendering&&(s.customMeta.esriTreeRendering=!0,H(s,n));const u=!!t.usePBR,l=s.meta.isEsriSymbolResource?{usePBR:u,isSchematic:!1,treeRendering:a,mrrFactors:[0,1,.2]}:{usePBR:u,isSchematic:!1,treeRendering:!1,mrrFactors:[0,1,.5]},c={...t.materialParamsMixin,treeRendering:a},{engineResources:f,referenceBoundingBox:m}=G(s,l,c,t.skipHighLods&&null==i.specifiedLodIndex?{skipHighLods:!0}:{skipHighLods:!1,singleLodIndex:i.specifiedLodIndex});return{lods:f,referenceBoundingBox:m,isEsriSymbolResource:s.meta.isEsriSymbolResource,isWosr:!1}}))).apply(this,arguments)}function k(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);if(t)return{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null};return e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function G(e,t,r,i){const s=e.model,n=new Array,a=new Map,u=new Map,l=s.lods.length,f=c.empty();return s.lods.forEach(((e,m)=>{const d=!0===i.skipHighLods&&(l>1&&0===m||l>3&&1===m)||!1===i.skipHighLods&&null!=i.singleLodIndex&&m!==i.singleLodIndex;if(d&&0!==m)return;const g=new M.ProcessedObjectResource(e.name,e.lodThreshold,[0,0,0]);e.parts.forEach((e=>{const i=d?new v.DefaultMaterial({}):P(s,e,g,t,r,a,u),{geometry:n,vertexCount:l}=D(e,o.isSome(i)?i:new v.DefaultMaterial({})),p=n.boundingInfo;o.isSome(p)&&0===m&&(c.expandWithVec3(f,p.bbMin),c.expandWithVec3(f,p.bbMax)),o.isSome(i)&&(g.stageResources.geometries.push(n),g.numberOfVertices+=l)})),d||n.push(g)})),{engineResources:n,referenceBoundingBox:f}}function P(e,t,r,i,s,n,a){const u=t.material+(t.attributes.normal?"_normal":"")+(t.attributes.color?"_color":"")+(t.attributes.texCoord0?"_texCoord0":"")+(t.attributes.tangent?"_tangent":""),l=e.materials.get(t.material),c=o.isSome(t.attributes.texCoord0),f=o.isSome(t.attributes.normal);if(o.isNone(l))return null;const m=U(l.alphaMode);if(!n.has(u)){if(c){const t=(t,r=!1)=>{if(o.isSome(t)&&!a.has(t)){const i=e.textures.get(t);if(o.isSome(i)){const e=i.data;a.set(t,new S.Texture(h.isEncodedMeshTexture(e)?e.data:e,{...i.parameters,preMultiplyAlpha:!h.isEncodedMeshTexture(e)&&r,encoding:h.isEncodedMeshTexture(e)&&o.isSome(e.encoding)?e.encoding:void 0}))}}};t(l.textureColor,m!==V.AlphaDiscardMode.Opaque),t(l.textureNormal),t(l.textureOcclusion),t(l.textureEmissive),t(l.textureMetallicRoughness)}const r=l.color[0]**(1/O.COLOR_GAMMA),d=l.color[1]**(1/O.COLOR_GAMMA),g=l.color[2]**(1/O.COLOR_GAMMA),p=l.emissiveFactor[0]**(1/O.COLOR_GAMMA),x=l.emissiveFactor[1]**(1/O.COLOR_GAMMA),b=l.emissiveFactor[2]**(1/O.COLOR_GAMMA),M=o.isSome(l.textureColor)&&c?a.get(l.textureColor):null;n.set(u,new v.DefaultMaterial({...i,transparent:m===V.AlphaDiscardMode.Blend,customDepthTest:V.DepthTestFunction.Lequal,textureAlphaMode:m,textureAlphaCutoff:l.alphaCutoff,diffuse:[r,d,g],ambient:[r,d,g],opacity:l.opacity,doubleSided:l.doubleSided,doubleSidedType:"winding-order",cullFace:l.doubleSided?V.CullFaceOptions.None:V.CullFaceOptions.Back,hasVertexColors:!!t.attributes.color,hasVertexTangents:!!t.attributes.tangent,normalType:f?R.NormalAttributeType.Attribute:R.NormalAttributeType.ScreenDerivative,castShadows:!0,receiveSSAO:!0,textureId:o.isSome(M)?M.id:void 0,colorMixMode:l.colorMixMode,normalTextureId:o.isSome(l.textureNormal)&&c?a.get(l.textureNormal).id:void 0,textureAlphaPremultiplied:o.isSome(M)&&!!M.params.preMultiplyAlpha,occlusionTextureId:o.isSome(l.textureOcclusion)&&c?a.get(l.textureOcclusion).id:void 0,emissiveTextureId:o.isSome(l.textureEmissive)&&c?a.get(l.textureEmissive).id:void 0,metallicRoughnessTextureId:o.isSome(l.textureMetallicRoughness)&&c?a.get(l.textureMetallicRoughness).id:void 0,emissiveFactor:[p,x,b],mrrFactors:[l.metallicFactor,l.roughnessFactor,i.mrrFactors[2]],isSchematic:!1,colorTextureTransformMatrix:T.getTransformMatrix(l.colorTextureTransform),normalTextureTransformMatrix:T.getTransformMatrix(l.normalTextureTransform),occlusionTextureTransformMatrix:T.getTransformMatrix(l.occlusionTextureTransform),emissiveTextureTransformMatrix:T.getTransformMatrix(l.emissiveTextureTransform),metallicRoughnessTextureTransformMatrix:T.getTransformMatrix(l.metallicRoughnessTextureTransform),...s}))}const d=n.get(u);if(r.stageResources.materials.push(d),c){const e=e=>{o.isSome(e)&&r.stageResources.textures.push(a.get(e))};e(l.textureColor),e(l.textureNormal),e(l.textureOcclusion),e(l.textureEmissive),e(l.textureMetallicRoughness)}return d}function D(e,t){const r=e.attributes.position.count,s=j(e.indices||r,e.primitiveType),n=g.createBuffer(f.BufferViewVec3f,r);m.transformMat4(n,e.attributes.position,e.transform);const a=[[y.VertexAttribute.POSITION,new B.Attribute(n.typedBuffer,n.elementCount,!0)]],u=[[y.VertexAttribute.POSITION,s]];if(o.isSome(e.attributes.normal)){const t=g.createBuffer(f.BufferViewVec3f,r);i.normalFromMat4(_,e.transform),m.transformMat3(t,e.attributes.normal,_),a.push([y.VertexAttribute.NORMAL,new B.Attribute(t.typedBuffer,t.elementCount,!0)]),u.push([y.VertexAttribute.NORMAL,s])}if(o.isSome(e.attributes.tangent)){const t=g.createBuffer(f.BufferViewVec4f,r);i.normalFromMat4(_,e.transform),d.transformMat3(t,e.attributes.tangent,_),a.push([y.VertexAttribute.TANGENT,new B.Attribute(t.typedBuffer,t.elementCount,!0)]),u.push([y.VertexAttribute.TANGENT,s])}if(o.isSome(e.attributes.texCoord0)){const t=g.createBuffer(f.BufferViewVec2f,r);C.normalizeIntegerBuffer(t,e.attributes.texCoord0),a.push([y.VertexAttribute.UV0,new B.Attribute(t.typedBuffer,t.elementCount,!0)]),u.push([y.VertexAttribute.UV0,s])}if(o.isSome(e.attributes.color)){const t=g.createBuffer(f.BufferViewVec4u8,r);if(4===e.attributes.color.elementCount)e.attributes.color instanceof f.BufferViewVec4f?d.scale(t,e.attributes.color,255):e.attributes.color instanceof f.BufferViewVec4u8?E.copy(t,e.attributes.color):e.attributes.color instanceof f.BufferViewVec4u16&&d.scale(t,e.attributes.color,1/256);else{E.fill(t,255,255,255,255);const r=new f.BufferViewVec3u8(t.buffer,0,4);e.attributes.color instanceof f.BufferViewVec3f?m.scale(r,e.attributes.color,255):e.attributes.color instanceof f.BufferViewVec3u8?F.copy(r,e.attributes.color):e.attributes.color instanceof f.BufferViewVec3u16&&m.scale(r,e.attributes.color,1/256)}a.push([y.VertexAttribute.COLOR,new B.Attribute(t.typedBuffer,t.elementCount,!0)]),u.push([y.VertexAttribute.COLOR,s])}return{geometry:new w.Geometry(t,a,u),vertexCount:r}}const _=s.create();function U(e){switch(e){case"BLEND":return V.AlphaDiscardMode.Blend;case"MASK":return V.AlphaDiscardMode.Mask;case"OPAQUE":case null:case void 0:return V.AlphaDiscardMode.Opaque}}function j(e,t){switch(t){case L.PrimitiveType.TRIANGLES:return b.trianglesToTriangles(e);case L.PrimitiveType.TRIANGLE_STRIP:return b.triangleStripToTriangles(e);case L.PrimitiveType.TRIANGLE_FAN:return b.triangleFanToTriangles(e)}}function H(e,t){for(let r=0;r<e.model.lods.length;++r){const i=e.model.lods[r];for(const s of i.parts){const i=s.attributes.normal;if(o.isNone(i))return;const c=s.attributes.position,m=c.count,d=l.create(),p=l.create(),x=l.create(),b=g.createBuffer(f.BufferViewVec4u8,m),h=g.createBuffer(f.BufferViewVec3f,m),T=n.invert(a.create(),s.transform);for(let o=0;o<m;o++){c.getVec(o,p),i.getVec(o,d),u.transformMat4(p,p,s.transform),u.subtract(x,p,t.center),u.divide(x,x,t.radius);const n=x[2],a=u.length(x),l=Math.min(.45+.55*a*a,1);u.divide(x,x,t.radius),null!==T&&u.transformMat4(x,x,T),u.normalize(x,x),r+1!==e.model.lods.length&&e.model.lods.length>1&&(n>-1?u.lerp(x,x,d,.2):u.lerp(x,x,d,Math.min(-4*n-3.8,1))),h.setVec(o,x),b.set(o,0,255*l),b.set(o,1,255*l),b.set(o,2,255*l),b.set(o,3,255)}s.attributes.normal=h,s.attributes.color=b}}}e.fetch=I,e.gltfToEngineResources=G,e.parseUrl=k,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
