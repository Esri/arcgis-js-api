/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../chunks/mat4","../../../../core/devEnvironmentUtils","../../../../chunks/mat3f64","../../../../chunks/mat4f64","../../../../chunks/mat3","../../support/buffer/BufferView","../../../../chunks/vec32","../../../../geometry/support/aaBoundingBox","../../webgl-engine/lib/Geometry","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/lib/Texture","../../glTF/DefaultLoadingContext","../../../../chunks/vec22","../../../../chunks/vec33","../../../../chunks/vec43","../../support/buffer/utils","../../glTF/loader","../../glTF/internal/indexUtils","./wosrLoader","../../../../chunks/vec42"],(function(e,t,r,s,o,i,u,a,n,c,l,f,m,d,x,g,p,h,b,B,M,v,R,S){"use strict";async function w(e,r){const s=y(i.adjustStaticAGOUrl(e));if("wosr"===s.fileType){const e=await(r.cache?r.cache.loadWOSR(s.url,r):R.load(s.url,r)),t=R.processLoadResult(e,r);return{lods:[t],referenceBoundingBox:t.boundingBox,isEsriSymbolResource:!1,isWosr:!0,remove:e.remove}}const o=await(r.cache?r.cache.loadGLTF(s.url,r,r.usePBR):M.load(new g.DefaultLoadingContext(r.streamDataRequester),s.url,r,r.usePBR)),u=t.get(o.model.meta,"ESRI_proxyEllipsoid");o.meta.isEsriSymbolResource&&t.isSome(u)&&-1!==o.meta.uri.indexOf("/RealisticTrees/")&&O(o,u);const a=o.meta.isEsriSymbolResource?{usePBR:r.usePBR,isSchematic:!1,treeRendering:o.customMeta.esriTreeRendering,mrrFactors:[0,1,.2]}:{usePBR:r.usePBR,isSchematic:!1,mrrFactors:[0,1,.5]},n={...r.materialParamsMixin,treeRendering:o.customMeta.esriTreeRendering};if(null!=s.specifiedLodIndex){const e=V(o,a,n,s.specifiedLodIndex);let t=e[0].boundingBox;if(0!==s.specifiedLodIndex){t=V(o,a,n,0)[0].boundingBox}return{lods:e,referenceBoundingBox:t,isEsriSymbolResource:o.meta.isEsriSymbolResource,isWosr:!1,remove:o.remove}}const c=V(o,a,n);return{lods:c,referenceBoundingBox:c[0].boundingBox,isEsriSymbolResource:o.meta.isEsriSymbolResource,isWosr:!1,remove:o.remove}}function y(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);if(t)return{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null};return e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function V(e,r,s,o){const i=e.model,a=u.create(),g=new Array,M=new Map,v=new Map;return i.lods.forEach(((e,u)=>{if(void 0!==o&&u!==o)return;const R={name:e.name,stageResources:{textures:new Array,materials:new Array,geometries:new Array},lodThreshold:t.isSome(e.lodThreshold)?e.lodThreshold:null,pivotOffset:[0,0,0],numberOfVertices:0,boundingBox:f.empty()};g.push(R),e.parts.forEach((e=>{const o=e.material+(e.attributes.normal?"_normal":"")+(e.attributes.color?"_color":"")+(e.attributes.texCoord0?"_texCoord0":"")+(e.attributes.tangent?"_tangent":""),u=i.materials.get(e.material),g=t.isSome(e.attributes.texCoord0),w=t.isSome(e.attributes.normal);if(!M.has(o)){if(g){if(t.isSome(u.textureColor)&&!v.has(u.textureColor)){const e=i.textures.get(u.textureColor),t={...e.parameters,preMultiplyAlpha:!0};v.set(u.textureColor,new x.Texture(e.data,t))}if(t.isSome(u.textureNormal)&&!v.has(u.textureNormal)){const e=i.textures.get(u.textureNormal),t={...e.parameters,preMultiplyAlpha:!0};v.set(u.textureNormal,new x.Texture(e.data,t))}if(t.isSome(u.textureOcclusion)&&!v.has(u.textureOcclusion)){const e=i.textures.get(u.textureOcclusion),t={...e.parameters,preMultiplyAlpha:!0};v.set(u.textureOcclusion,new x.Texture(e.data,t))}if(t.isSome(u.textureEmissive)&&!v.has(u.textureEmissive)){const e=i.textures.get(u.textureEmissive),t={...e.parameters,preMultiplyAlpha:!0};v.set(u.textureEmissive,new x.Texture(e.data,t))}if(t.isSome(u.textureMetallicRoughness)&&!v.has(u.textureMetallicRoughness)){const e=i.textures.get(u.textureMetallicRoughness),t={...e.parameters,preMultiplyAlpha:!0};v.set(u.textureMetallicRoughness,new x.Texture(e.data,t))}}const a=u.color[0]**(1/d.COLOR_GAMMA),n=u.color[1]**(1/d.COLOR_GAMMA),c=u.color[2]**(1/d.COLOR_GAMMA),l=u.emissiveFactor[0]**(1/d.COLOR_GAMMA),f=u.emissiveFactor[1]**(1/d.COLOR_GAMMA),m=u.emissiveFactor[2]**(1/d.COLOR_GAMMA);M.set(o,new d.DefaultMaterial({...r,transparent:"BLEND"===u.alphaMode,textureAlphaMode:T(u.alphaMode),textureAlphaCutoff:u.alphaCutoff,diffuse:[a,n,c],ambient:[a,n,c],opacity:u.opacity,doubleSided:u.doubleSided,doubleSidedType:"winding-order",cullFace:u.doubleSided?0:2,vertexColors:!!e.attributes.color,vertexTangents:!!e.attributes.tangent,normals:w?"default":"screenDerivative",castShadows:!0,receiveSSAO:!0,textureId:t.isSome(u.textureColor)&&g?v.get(u.textureColor).id:void 0,colorMixMode:u.colorMixMode,normalTextureId:t.isSome(u.textureNormal)&&g?v.get(u.textureNormal).id:void 0,textureAlphaPremultiplied:!0,occlusionTextureId:t.isSome(u.textureOcclusion)&&g?v.get(u.textureOcclusion).id:void 0,emissiveTextureId:t.isSome(u.textureEmissive)&&g?v.get(u.textureEmissive).id:void 0,metallicRoughnessTextureId:t.isSome(u.textureMetallicRoughness)&&g?v.get(u.textureMetallicRoughness).id:void 0,emissiveFactor:[l,f,m],mrrFactors:[u.metallicFactor,u.roughnessFactor,r.mrrFactors[2]],isSchematic:!1,...s}))}const y=C(e.indices||e.attributes.position.count,e.primitiveType),V=e.attributes.position.count,O=B.createBuffer(c.BufferViewVec3f,V);l.transformMat4(O,e.attributes.position,e.transform);const A=[["position",{data:O.typedBuffer,size:O.elementCount,exclusive:!0}]],E=[["position",y]];if(t.isSome(e.attributes.normal)){const t=B.createBuffer(c.BufferViewVec3f,V);n.normalFromMat4(a,e.transform),l.transformMat3(t,e.attributes.normal,a),A.push(["normal",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),E.push(["normal",y])}if(t.isSome(e.attributes.tangent)){const t=B.createBuffer(c.BufferViewVec4f,V);n.normalFromMat4(a,e.transform),S.transformMat3(t,e.attributes.tangent,a),A.push(["tangent",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),E.push(["tangent",y])}if(t.isSome(e.attributes.texCoord0)){const t=B.createBuffer(c.BufferViewVec2f,V);p.normalizeIntegerBuffer(t,e.attributes.texCoord0),A.push(["uv0",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),E.push(["uv0",y])}if(t.isSome(e.attributes.color)){const t=B.createBuffer(c.BufferViewVec4u8,V);if(4===e.attributes.color.elementCount)e.attributes.color instanceof c.BufferViewVec4f?S.scale(t,e.attributes.color,255):e.attributes.color instanceof c.BufferViewVec4u8?b.copy(t,e.attributes.color):e.attributes.color instanceof c.BufferViewVec4u16&&S.scale(t,e.attributes.color,1/256);else{b.fill(t,255,255,255,255);const r=new c.BufferViewVec3u8(t.buffer,0,4);e.attributes.color instanceof c.BufferViewVec3f?l.scale(r,e.attributes.color,255):e.attributes.color instanceof c.BufferViewVec3u8?h.copy(r,e.attributes.color):e.attributes.color instanceof c.BufferViewVec3u16&&l.scale(r,e.attributes.color,1/256)}A.push(["color",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),E.push(["color",y])}const L=new m.Geometry(A,E);R.stageResources.geometries.push(L),R.stageResources.materials.push(M.get(o)),g&&(t.isSome(u.textureColor)&&R.stageResources.textures.push(v.get(u.textureColor)),t.isSome(u.textureNormal)&&R.stageResources.textures.push(v.get(u.textureNormal)),t.isSome(u.textureOcclusion)&&R.stageResources.textures.push(v.get(u.textureOcclusion)),t.isSome(u.textureEmissive)&&R.stageResources.textures.push(v.get(u.textureEmissive)),t.isSome(u.textureMetallicRoughness)&&R.stageResources.textures.push(v.get(u.textureMetallicRoughness))),R.numberOfVertices+=V;const F=L.boundingInfo;t.isSome(F)&&(f.expandWithVec3(R.boundingBox,F.getBBMin()),f.expandWithVec3(R.boundingBox,F.getBBMax()))}))})),g}function T(e){switch(e){case"BLEND":return 0;case"MASK":return 2;case"OPAQUE":return 1;default:return 0}}function C(e,t){switch(t){case 4:return v.trianglesToTriangles(e);case 5:return v.triangleStripToTriangles(e);case 6:return v.triangleFanToTriangles(e)}}function O(e,i){for(let u=0;u<e.model.lods.length;++u){const n=e.model.lods[u];e.customMeta.esriTreeRendering=!0;for(const l of n.parts){const n=l.attributes.normal;if(t.isNone(n))return;const f=l.attributes.position,m=f.count,d=r.create(),x=r.create(),g=r.create(),p=B.createBuffer(c.BufferViewVec4u8,m),h=B.createBuffer(c.BufferViewVec3f,m),b=o.invert(a.create(),l.transform);for(let t=0;t<m;t++){f.getVec(t,x),n.getVec(t,d),s.transformMat4(x,x,l.transform),s.subtract(g,x,i.center),s.divide(g,g,i.radius);const r=g[2],o=s.length(g),a=Math.min(.45+.55*o*o,1);s.divide(g,g,i.radius),s.transformMat4(g,g,b),s.normalize(g,g),u+1!==e.model.lods.length&&e.model.lods.length>1&&(r>-1?s.lerp(g,g,d,.2):s.lerp(g,g,d,Math.min(-4*r-3.8,1))),h.setVec(t,g),p.set(t,0,255*a),p.set(t,1,255*a),p.set(t,2,255*a),p.set(t,3,255)}l.attributes.normal=h,l.attributes.color=p}}}e.fetch=w,e.gltfToEngineResources=V,e.parseUrl=y,Object.defineProperty(e,"__esModule",{value:!0})}));
