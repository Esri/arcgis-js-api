/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/devEnvironmentUtils","../../../../core/maybe","../../../../chunks/mat3","../../../../chunks/mat3f64","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/buffer/BufferView","../../../../chunks/vec32","../../../../chunks/vec42","../../../../geometry/support/buffer/utils","../../glTF/DefaultLoadingContext","../../glTF/loader","../../glTF/internal/indexUtils","./wosrLoader","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/Texture","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/materials/DefaultMaterial_COLOR_GAMMA","../../../webgl/enums","../../../../chunks/vec22","../../../../chunks/vec43","../../../../chunks/vec33"],(function(e,t,r,s,o,i,u,a,n,l,c,m,f,d,x,g,p,b,h,M,B,R,v,S,T,A,V,w,y){"use strict";function O(e,t){return C.apply(this,arguments)}function C(){return(C=t._asyncToGenerator((function*(e,t){const o=E(r.adjustStaticAGOUrl(e));if("wosr"===o.fileType){const e=yield t.cache?t.cache.loadWOSR(o.url,t):h.load(o.url,t),r=h.processLoadResult(e,t);return{lods:[r],referenceBoundingBox:r.boundingBox,isEsriSymbolResource:!1,isWosr:!0,remove:e.remove}}const i=yield t.cache?t.cache.loadGLTF(o.url,t,t.usePBR):p.load(new g.DefaultLoadingContext(t.streamDataRequester),o.url,t,t.usePBR),u=s.get(i.model.meta,"ESRI_proxyEllipsoid");i.meta.isEsriSymbolResource&&s.isSome(u)&&-1!==i.meta.uri.indexOf("/RealisticTrees/")&&F(i,u);const a=i.meta.isEsriSymbolResource?{usePBR:t.usePBR,isSchematic:!1,treeRendering:i.customMeta.esriTreeRendering,mrrFactors:[0,1,.2]}:{usePBR:t.usePBR,isSchematic:!1,mrrFactors:[0,1,.5]},n={...t.materialParamsMixin,treeRendering:i.customMeta.esriTreeRendering};if(null!=o.specifiedLodIndex){const e=L(i,a,n,o.specifiedLodIndex);let t=e[0].boundingBox;if(0!==o.specifiedLodIndex){t=L(i,a,n,0)[0].boundingBox}return{lods:e,referenceBoundingBox:t,isEsriSymbolResource:i.meta.isEsriSymbolResource,isWosr:!1,remove:i.remove}}const l=L(i,a,n);return{lods:l,referenceBoundingBox:l[0].boundingBox,isEsriSymbolResource:i.meta.isEsriSymbolResource,isWosr:!1,remove:i.remove}}))).apply(this,arguments)}function E(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);if(t)return{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null};return e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function L(e,t,r,u){const a=e.model,n=i.create(),l=new Array,g=new Map,p=new Map;return a.lods.forEach(((e,i)=>{if(void 0!==u&&i!==u)return;const b={name:e.name,stageResources:{textures:new Array,materials:new Array,geometries:new Array},lodThreshold:s.isSome(e.lodThreshold)?e.lodThreshold:null,pivotOffset:[0,0,0],numberOfVertices:0,boundingBox:c.empty()};l.push(b),e.parts.forEach((e=>{const i=e.material+(e.attributes.normal?"_normal":"")+(e.attributes.color?"_color":"")+(e.attributes.texCoord0?"_texCoord0":"")+(e.attributes.tangent?"_tangent":""),u=a.materials.get(e.material),l=s.isSome(e.attributes.texCoord0),h=s.isSome(e.attributes.normal),A=N(u.alphaMode);if(!g.has(i)){if(l){if(s.isSome(u.textureColor)&&!p.has(u.textureColor)){const e=a.textures.get(u.textureColor),t={...e.parameters,preMultiplyAlpha:A!==M.AlphaDiscardMode.Opaque};p.set(u.textureColor,new R.Texture(e.data,t))}if(s.isSome(u.textureNormal)&&!p.has(u.textureNormal)){const e=a.textures.get(u.textureNormal);p.set(u.textureNormal,new R.Texture(e.data,e.parameters))}if(s.isSome(u.textureOcclusion)&&!p.has(u.textureOcclusion)){const e=a.textures.get(u.textureOcclusion);p.set(u.textureOcclusion,new R.Texture(e.data,e.parameters))}if(s.isSome(u.textureEmissive)&&!p.has(u.textureEmissive)){const e=a.textures.get(u.textureEmissive);p.set(u.textureEmissive,new R.Texture(e.data,e.parameters))}if(s.isSome(u.textureMetallicRoughness)&&!p.has(u.textureMetallicRoughness)){const e=a.textures.get(u.textureMetallicRoughness);p.set(u.textureMetallicRoughness,new R.Texture(e.data,e.parameters))}}const o=u.color[0]**(1/T.COLOR_GAMMA),n=u.color[1]**(1/T.COLOR_GAMMA),c=u.color[2]**(1/T.COLOR_GAMMA),m=u.emissiveFactor[0]**(1/T.COLOR_GAMMA),f=u.emissiveFactor[1]**(1/T.COLOR_GAMMA),d=u.emissiveFactor[2]**(1/T.COLOR_GAMMA),x=s.isSome(u.textureColor)&&l?p.get(u.textureColor):null;g.set(i,new S.DefaultMaterial({...t,transparent:A===M.AlphaDiscardMode.Blend,customDepthTest:M.DepthTestFunction.Lequal,textureAlphaMode:A,textureAlphaCutoff:u.alphaCutoff,diffuse:[o,n,c],ambient:[o,n,c],opacity:u.opacity,doubleSided:u.doubleSided,doubleSidedType:"winding-order",cullFace:u.doubleSided?M.CullFaceOptions.None:M.CullFaceOptions.Back,vertexColors:!!e.attributes.color,vertexTangents:!!e.attributes.tangent,normals:h?"default":"screenDerivative",castShadows:!0,receiveSSAO:!0,fillLightsEnabled:!0,textureId:s.isSome(x)?x.id:void 0,colorMixMode:u.colorMixMode,normalTextureId:s.isSome(u.textureNormal)&&l?p.get(u.textureNormal).id:void 0,textureAlphaPremultiplied:s.isSome(x)&&!!x.params.preMultiplyAlpha,occlusionTextureId:s.isSome(u.textureOcclusion)&&l?p.get(u.textureOcclusion).id:void 0,emissiveTextureId:s.isSome(u.textureEmissive)&&l?p.get(u.textureEmissive).id:void 0,metallicRoughnessTextureId:s.isSome(u.textureMetallicRoughness)&&l?p.get(u.textureMetallicRoughness).id:void 0,emissiveFactor:[m,f,d],mrrFactors:[u.metallicFactor,u.roughnessFactor,t.mrrFactors[2]],isSchematic:!1,...r}))}const O=I(e.indices||e.attributes.position.count,e.primitiveType),C=e.attributes.position.count,E=x.createBuffer(m.BufferViewVec3f,C);f.transformMat4(E,e.attributes.position,e.transform);const L=[[v.VertexAttribute.POSITION,{data:E.typedBuffer,size:E.elementCount,exclusive:!0}]],F=[[v.VertexAttribute.POSITION,O]];if(s.isSome(e.attributes.normal)){const t=x.createBuffer(m.BufferViewVec3f,C);o.normalFromMat4(n,e.transform),f.transformMat3(t,e.attributes.normal,n),L.push([v.VertexAttribute.NORMAL,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),F.push([v.VertexAttribute.NORMAL,O])}if(s.isSome(e.attributes.tangent)){const t=x.createBuffer(m.BufferViewVec4f,C);o.normalFromMat4(n,e.transform),d.transformMat3(t,e.attributes.tangent,n),L.push([v.VertexAttribute.TANGENT,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),F.push([v.VertexAttribute.TANGENT,O])}if(s.isSome(e.attributes.texCoord0)){const t=x.createBuffer(m.BufferViewVec2f,C);V.normalizeIntegerBuffer(t,e.attributes.texCoord0),L.push([v.VertexAttribute.UV0,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),F.push([v.VertexAttribute.UV0,O])}if(s.isSome(e.attributes.color)){const t=x.createBuffer(m.BufferViewVec4u8,C);if(4===e.attributes.color.elementCount)e.attributes.color instanceof m.BufferViewVec4f?d.scale(t,e.attributes.color,255):e.attributes.color instanceof m.BufferViewVec4u8?w.copy(t,e.attributes.color):e.attributes.color instanceof m.BufferViewVec4u16&&d.scale(t,e.attributes.color,1/256);else{w.fill(t,255,255,255,255);const r=new m.BufferViewVec3u8(t.buffer,0,4);e.attributes.color instanceof m.BufferViewVec3f?f.scale(r,e.attributes.color,255):e.attributes.color instanceof m.BufferViewVec3u8?y.copy(r,e.attributes.color):e.attributes.color instanceof m.BufferViewVec3u16&&f.scale(r,e.attributes.color,1/256)}L.push([v.VertexAttribute.COLOR,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),F.push([v.VertexAttribute.COLOR,O])}const _=new B.Geometry(L,F);b.stageResources.geometries.push(_),b.stageResources.materials.push(g.get(i)),l&&(s.isSome(u.textureColor)&&b.stageResources.textures.push(p.get(u.textureColor)),s.isSome(u.textureNormal)&&b.stageResources.textures.push(p.get(u.textureNormal)),s.isSome(u.textureOcclusion)&&b.stageResources.textures.push(p.get(u.textureOcclusion)),s.isSome(u.textureEmissive)&&b.stageResources.textures.push(p.get(u.textureEmissive)),s.isSome(u.textureMetallicRoughness)&&b.stageResources.textures.push(p.get(u.textureMetallicRoughness))),b.numberOfVertices+=C;const G=_.boundingInfo;s.isSome(G)&&(c.expandWithVec3(b.boundingBox,G.getBBMin()),c.expandWithVec3(b.boundingBox,G.getBBMax()))}))})),l}function N(e){switch(e){case"BLEND":return M.AlphaDiscardMode.Blend;case"MASK":return M.AlphaDiscardMode.Mask;case"OPAQUE":case null:case void 0:return M.AlphaDiscardMode.Opaque}}function I(e,t){switch(t){case A.PrimitiveType.TRIANGLES:return b.trianglesToTriangles(e);case A.PrimitiveType.TRIANGLE_STRIP:return b.triangleStripToTriangles(e);case A.PrimitiveType.TRIANGLE_FAN:return b.triangleFanToTriangles(e)}}function F(e,t){for(let r=0;r<e.model.lods.length;++r){const o=e.model.lods[r];e.customMeta.esriTreeRendering=!0;for(const i of o.parts){const o=i.attributes.normal;if(s.isNone(o))return;const c=i.attributes.position,f=c.count,d=l.create(),g=l.create(),p=l.create(),b=x.createBuffer(m.BufferViewVec4u8,f),h=x.createBuffer(m.BufferViewVec3f,f),M=u.invert(a.create(),i.transform);for(let s=0;s<f;s++){c.getVec(s,g),o.getVec(s,d),n.transformMat4(g,g,i.transform),n.subtract(p,g,t.center),n.divide(p,p,t.radius);const u=p[2],a=n.length(p),l=Math.min(.45+.55*a*a,1);n.divide(p,p,t.radius),n.transformMat4(p,p,M),n.normalize(p,p),r+1!==e.model.lods.length&&e.model.lods.length>1&&(u>-1?n.lerp(p,p,d,.2):n.lerp(p,p,d,Math.min(-4*u-3.8,1))),h.setVec(s,p),b.set(s,0,255*l),b.set(s,1,255*l),b.set(s,2,255*l),b.set(s,3,255)}i.attributes.normal=h,i.attributes.color=b}}}e.fetch=O,e.gltfToEngineResources=L,e.parseUrl=E,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
