/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/devEnvironmentUtils","../../../../core/maybe","../../../../chunks/mat3","../../../../chunks/mat3f64","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/buffer/BufferView","../../../../chunks/vec32","../../../../chunks/vec42","../../../../geometry/support/buffer/utils","../../glTF/DefaultLoadingContext","../../glTF/loader","../../glTF/internal/indexUtils","../../glTF/internal/TextureTransformUtils","./ProcessedObjectResource","./wosrLoader","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/Texture","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/materials/DefaultMaterial_COLOR_GAMMA","../../../webgl/enums","../../../../chunks/vec22","../../../../chunks/vec43","../../../../chunks/vec33"],(function(e,t,r,s,o,i,n,a,u,l,c,f,m,d,g,x,p,h,b,T,M,B,A,R,V,v,y,S,w,O,L){"use strict";function C(e,t){return I.apply(this,arguments)}function I(){return(I=t._asyncToGenerator((function*(e,t){const o=F(r.adjustStaticAGOUrl(e));if("wosr"===o.fileType){const e=yield t.cache?t.cache.loadWOSR(o.url,t):M.load(o.url,t),{engineResources:r,referenceBoundingBox:s}=M.processLoadResult(e,t);return{lods:r,referenceBoundingBox:s,isEsriSymbolResource:!1,isWosr:!0}}const i=yield t.cache?t.cache.loadGLTF(o.url,t,t.usePBR):p.loadGLTF(new x.DefaultLoadingContext(t.streamDataRequester),o.url,t,t.usePBR),n=s.get(i.model.meta,"ESRI_proxyEllipsoid"),a=i.meta.isEsriSymbolResource&&s.isSome(n)&&i.meta.uri.includes("/RealisticTrees/");a&&!i.customMeta.esriTreeRendering&&(i.customMeta.esriTreeRendering=!0,G(i,n));const u=i.meta.isEsriSymbolResource?{usePBR:t.usePBR,isSchematic:!1,treeRendering:a,mrrFactors:[0,1,.2]}:{usePBR:t.usePBR,isSchematic:!1,treeRendering:!1,mrrFactors:[0,1,.5]},l={...t.materialParamsMixin,treeRendering:a},{engineResources:c,referenceBoundingBox:f}=E(i,u,l,t.skipHighLods&&null==o.specifiedLodIndex?{skipHighLods:!0}:{skipHighLods:!1,singleLodIndex:o.specifiedLodIndex});return{lods:c,referenceBoundingBox:f,isEsriSymbolResource:i.meta.isEsriSymbolResource,isWosr:!1}}))).apply(this,arguments)}function F(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);if(t)return{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null};return e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function E(e,t,r,o){const i=e.model,n=new Array,a=new Map,u=new Map,l=i.lods.length,f=c.empty();return i.lods.forEach(((e,m)=>{const d=!0===o.skipHighLods&&(l>1&&0===m||l>3&&1===m)||!1===o.skipHighLods&&null!=o.singleLodIndex&&m!==o.singleLodIndex;if(d&&0!==m)return;const g=new Array;let x=0;if(e.parts.forEach((e=>{const{geometry:t,vertexCount:r}=N(e);g.push(t),x+=r;const o=t.boundingInfo;s.isSome(o)&&0===m&&(c.expandWithVec3(f,o.getBBMin()),c.expandWithVec3(f,o.getBBMax()))})),d)return;const p=new T.ProcessedObjectResource(e.name,{textures:new Array,materials:new Array,geometries:g},e.lodThreshold,[0,0,0],x);n.push(p),e.parts.forEach((e=>{const o=e.material+(e.attributes.normal?"_normal":"")+(e.attributes.color?"_color":"")+(e.attributes.texCoord0?"_texCoord0":"")+(e.attributes.tangent?"_tangent":""),n=i.materials.get(e.material),l=s.isSome(e.attributes.texCoord0),c=s.isSome(e.attributes.normal);if(s.isNone(n))return;const f=P(n.alphaMode);if(!a.has(o)){if(l){const e=(e,t=!1)=>{if(s.isSome(e)&&!u.has(e)){const r=i.textures.get(e);s.isSome(r)&&u.set(e,new R.Texture(r.data,t?{...r.parameters,preMultiplyAlpha:t}:r.parameters))}};e(n.textureColor,f!==B.AlphaDiscardMode.Opaque),e(n.textureNormal),e(n.textureOcclusion),e(n.textureEmissive),e(n.textureMetallicRoughness)}const m=n.color[0]**(1/y.COLOR_GAMMA),d=n.color[1]**(1/y.COLOR_GAMMA),g=n.color[2]**(1/y.COLOR_GAMMA),x=n.emissiveFactor[0]**(1/y.COLOR_GAMMA),p=n.emissiveFactor[1]**(1/y.COLOR_GAMMA),h=n.emissiveFactor[2]**(1/y.COLOR_GAMMA),T=s.isSome(n.textureColor)&&l?u.get(n.textureColor):null;a.set(o,new v.DefaultMaterial({...t,transparent:f===B.AlphaDiscardMode.Blend,customDepthTest:B.DepthTestFunction.Lequal,textureAlphaMode:f,textureAlphaCutoff:n.alphaCutoff,diffuse:[m,d,g],ambient:[m,d,g],opacity:n.opacity,doubleSided:n.doubleSided,doubleSidedType:"winding-order",cullFace:n.doubleSided?B.CullFaceOptions.None:B.CullFaceOptions.Back,hasVertexColors:!!e.attributes.color,hasVertexTangents:!!e.attributes.tangent,normals:c?"default":"screenDerivative",castShadows:!0,receiveSSAO:!0,textureId:s.isSome(T)?T.id:void 0,colorMixMode:n.colorMixMode,normalTextureId:s.isSome(n.textureNormal)&&l?u.get(n.textureNormal).id:void 0,textureAlphaPremultiplied:s.isSome(T)&&!!T.params.preMultiplyAlpha,occlusionTextureId:s.isSome(n.textureOcclusion)&&l?u.get(n.textureOcclusion).id:void 0,emissiveTextureId:s.isSome(n.textureEmissive)&&l?u.get(n.textureEmissive).id:void 0,metallicRoughnessTextureId:s.isSome(n.textureMetallicRoughness)&&l?u.get(n.textureMetallicRoughness).id:void 0,emissiveFactor:[x,p,h],mrrFactors:[n.metallicFactor,n.roughnessFactor,t.mrrFactors[2]],isSchematic:!1,colorTextureTransformMatrix:b.getTransformMatrix(n.colorTextureTransform),normalTextureTransformMatrix:b.getTransformMatrix(n.normalTextureTransform),occlusionTextureTransformMatrix:b.getTransformMatrix(n.occlusionTextureTransform),emissiveTextureTransformMatrix:b.getTransformMatrix(n.emissiveTextureTransform),metallicRoughnessTextureTransformMatrix:b.getTransformMatrix(n.metallicRoughnessTextureTransform),...r}))}if(p.stageResources.materials.push(a.get(o)),l){const e=e=>{s.isSome(e)&&p.stageResources.textures.push(u.get(e))};e(n.textureColor),e(n.textureNormal),e(n.textureOcclusion),e(n.textureEmissive),e(n.textureMetallicRoughness)}}))})),{engineResources:n,referenceBoundingBox:f}}function N(e){const t=_(e.indices||e.attributes.position.count,e.primitiveType),r=e.attributes.position.count,i=g.createBuffer(f.BufferViewVec3f,r);m.transformMat4(i,e.attributes.position,e.transform);const n=[[V.VertexAttribute.POSITION,{data:i.typedBuffer,size:i.elementCount,exclusive:!0}]],a=[[V.VertexAttribute.POSITION,t]];if(s.isSome(e.attributes.normal)){const s=g.createBuffer(f.BufferViewVec3f,r);o.normalFromMat4(k,e.transform),m.transformMat3(s,e.attributes.normal,k),n.push([V.VertexAttribute.NORMAL,{data:s.typedBuffer,size:s.elementCount,exclusive:!0}]),a.push([V.VertexAttribute.NORMAL,t])}if(s.isSome(e.attributes.tangent)){const s=g.createBuffer(f.BufferViewVec4f,r);o.normalFromMat4(k,e.transform),d.transformMat3(s,e.attributes.tangent,k),n.push([V.VertexAttribute.TANGENT,{data:s.typedBuffer,size:s.elementCount,exclusive:!0}]),a.push([V.VertexAttribute.TANGENT,t])}if(s.isSome(e.attributes.texCoord0)){const s=g.createBuffer(f.BufferViewVec2f,r);w.normalizeIntegerBuffer(s,e.attributes.texCoord0),n.push([V.VertexAttribute.UV0,{data:s.typedBuffer,size:s.elementCount,exclusive:!0}]),a.push([V.VertexAttribute.UV0,t])}if(s.isSome(e.attributes.color)){const s=g.createBuffer(f.BufferViewVec4u8,r);if(4===e.attributes.color.elementCount)e.attributes.color instanceof f.BufferViewVec4f?d.scale(s,e.attributes.color,255):e.attributes.color instanceof f.BufferViewVec4u8?O.copy(s,e.attributes.color):e.attributes.color instanceof f.BufferViewVec4u16&&d.scale(s,e.attributes.color,1/256);else{O.fill(s,255,255,255,255);const t=new f.BufferViewVec3u8(s.buffer,0,4);e.attributes.color instanceof f.BufferViewVec3f?m.scale(t,e.attributes.color,255):e.attributes.color instanceof f.BufferViewVec3u8?L.copy(t,e.attributes.color):e.attributes.color instanceof f.BufferViewVec3u16&&m.scale(t,e.attributes.color,1/256)}n.push([V.VertexAttribute.COLOR,{data:s.typedBuffer,size:s.elementCount,exclusive:!0}]),a.push([V.VertexAttribute.COLOR,t])}return{geometry:new A.Geometry(n,a),vertexCount:r}}const k=i.create();function P(e){switch(e){case"BLEND":return B.AlphaDiscardMode.Blend;case"MASK":return B.AlphaDiscardMode.Mask;case"OPAQUE":case null:case void 0:return B.AlphaDiscardMode.Opaque}}function _(e,t){switch(t){case S.PrimitiveType.TRIANGLES:return h.trianglesToTriangles(e);case S.PrimitiveType.TRIANGLE_STRIP:return h.triangleStripToTriangles(e);case S.PrimitiveType.TRIANGLE_FAN:return h.triangleFanToTriangles(e)}}function G(e,t){for(let r=0;r<e.model.lods.length;++r){const o=e.model.lods[r];for(const i of o.parts){const o=i.attributes.normal;if(s.isNone(o))return;const c=i.attributes.position,m=c.count,d=l.create(),x=l.create(),p=l.create(),h=g.createBuffer(f.BufferViewVec4u8,m),b=g.createBuffer(f.BufferViewVec3f,m),T=n.invert(a.create(),i.transform);for(let s=0;s<m;s++){c.getVec(s,x),o.getVec(s,d),u.transformMat4(x,x,i.transform),u.subtract(p,x,t.center),u.divide(p,p,t.radius);const n=p[2],a=u.length(p),l=Math.min(.45+.55*a*a,1);u.divide(p,p,t.radius),null!==T&&u.transformMat4(p,p,T),u.normalize(p,p),r+1!==e.model.lods.length&&e.model.lods.length>1&&(n>-1?u.lerp(p,p,d,.2):u.lerp(p,p,d,Math.min(-4*n-3.8,1))),b.setVec(s,p),h.set(s,0,255*l),h.set(s,1,255*l),h.set(s,2,255*l),h.set(s,3,255)}i.attributes.normal=b,i.attributes.color=h}}}e.fetch=C,e.gltfToEngineResources=E,e.parseUrl=F,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
