/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../core/arrayUtils","../../../../core/maybe","../../../../layers/graphics/dehydratedFeatures"],(function(t,i,e,s){"use strict";let a=function(){function t(t){this._graphicsCore=t,this._idToState=new Map,this._states=new Set;const i=t.owner.layer&&t.owner.layer.objectIdField;i?(this._getGraphicId=t=>s.getObjectId(t,i),this._getGraphics3DGraphicById=t=>this._graphicsCore.getGraphics3DGraphicByObjectId(t)):(this._getGraphicId=t=>t.uid,this._getGraphics3DGraphicById=t=>this._graphicsCore.getGraphics3DGraphicById(t))}var a=t.prototype;return a.destroy=function(){this._idToState.clear(),this._states.forEach(((t,i)=>this.remove(i)))},a.add=function(t){const i={remove:()=>this.remove(t)};if(this._states.has(t))return i;const s=this._getGraphicId(t.graphic),a=this._getGraphics3DGraphicById(s);this._states.has(t)||this._states.add(t);return this._ensureStateList(s).push(t),t.displaying=!!e.isSome(a)&&a.isVisible(),t.isDraped=!!e.isSome(a)&&a.isDraped,t.tracking=!0,e.isSome(a)&&t.emit("changed"),i},a.remove=function(t){if(this._states.has(t)){if(this._idToState.size){const e=this._getGraphicId(t.graphic),s=this._idToState.get(e);s&&(i.remove(s,t),0===s.length&&this._idToState.delete(e))}this._states.delete(t),t.tracking=!1,t.displaying=!1}},a.addGraphic=function(t){this._forEachState(t,(i=>{i.displaying=t.isVisible(),i.isDraped=t.isDraped,i.emit("changed")}))},a.removeGraphic=function(t){this._forEachState(t,(t=>{t.displaying=!1,t.isDraped=!1}))},a.updateGraphicGeometry=function(t){this._forEachState(t,(t=>t.emit("changed")))},a.updateGraphicVisibility=function(t){this._forEachState(t,(i=>i.displaying=t.isVisible()))},a.allGraphicsDeleted=function(){this._states.forEach((t=>{t.displaying=!1}))},a._ensureStateList=function(t){const i=this._idToState.get(t);if(i)return i;const e=new Array;return this._idToState.set(t,e),e},a._forEachState=function(t,i){if(0===this._states.size||0===this._idToState.size)return;const e=this._getGraphicId(t.graphic),s=this._idToState.get(e);null!=s&&s.forEach(i)},t}();t.GraphicStateTracking=a,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
