/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import e from"../../../../Graphic.js";import i from"../../../../core/Collection.js";import{HandleOwner as s}from"../../../../core/HandleOwner.js";import{makeHandle as r}from"../../../../core/handleUtils.js";import{isSome as n,destroyMaybe as o,isNone as a}from"../../../../core/maybe.js";import{isAbortError as l}from"../../../../core/promiseUtils.js";import{watch as p,sync as c,syncAndInitial as h}from"../../../../core/reactiveUtils.js";import{property as u}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as d}from"../../../../core/accessorSupport/decorators/subclass.js";import{diff as y}from"../../../../core/accessorSupport/diffUtils.js";import g from"../../../../layers/Layer.js";import{hydrateGraphic as m}from"../../../../layers/graphics/hydratedFeatures.js";import{getRenderingInfo as f,getRenderingInfoAsync as b}from"../../../../renderers/support/renderingInfoUtils.js";import j from"../../../../rest/support/Query.js";import{DrapeSourceType as C}from"../interfaces.js";import{SUSPEND_RESUME_EXTENT_OPTIMISM as S}from"./constants.js";import{Graphics3DCore as V}from"./Graphics3DCore.js";import v from"./Graphics3DElevationAlignment.js";import w from"./Graphics3DFrustumVisibility.js";import{Graphics3DObjectStates as G}from"./Graphics3DObjectStates.js";import E from"./Graphics3DScaleVisibility.js";import{enlargeExtent as x}from"./graphicUtils.js";import{UpdatePolicy as O,Object3DState as A}from"../../webgl-engine/lib/basicInterfaces.js";let _=class extends s{constructor(t){super(t),this.type="graphics-3d",this.graphicsCore=null,this.elevationAlignment=new v,this.drapeSourceType=C.Features,this._suspendResumeExtent=null}normalizeCtorArgs(t){const e={...t,scaleVisibility:null,frustumVisibility:null};return delete e.scaleVisibilityEnabled,delete e.frustumVisibilityEnabled,t.scaleVisibilityEnabled&&(e.scaleVisibility=new E),t.frustumVisibilityEnabled&&(e.frustumVisibility=new w),e}initialize(){const t=new V({owner:this,layer:this.owner.layer,preferredUpdatePolicy:O.SYNC,graphicSymbolSupported:!0});this._set("graphicsCore",t);const{layer:e,scaleVisibility:i}=this;if(n(i)&&"effectiveScaleRange"in e){const t=e;this.updatingHandles.add((()=>t.effectiveScaleRange),(()=>i.layerMinMaxScaleChangeHandler()))}if("fullOpacity"in this.owner){const t=this.owner;this.updatingHandles.add((()=>t.fullOpacity),(()=>this.graphicsCore.opacityChange()))}if("elevationInfo"in e){const t=e;this.updatingHandles.add((()=>t.elevationInfo),((t,e)=>{y(t,e)&&this.updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())}))}}async setup(){const t=(t,e,i)=>this.graphicsCore.spatialIndex.queryGraphicUIDsInExtent(t,e,i);if(this.elevationAlignment.setup(this,t,this.graphicsCore,this.view.elevationProvider),n(this.scaleVisibility)&&"effectiveScaleRange"in this.layer){const e=this.owner.view.basemapTerrain;this.scaleVisibility.setup(this,this.layer,t,this.graphicsCore,e)}n(this.frustumVisibility)&&this.frustumVisibility.setup(this),this._set("objectStates",new G(this.graphicsCore));try{await this.graphicsCore.setup({elevationAlignment:this.elevationAlignment,scaleVisibility:this.scaleVisibility,objectStates:this.objectStates})}catch(e){if(l(e))return;throw e}this.destroyed||(this.handles.add(p((()=>this.view.clippingArea),(()=>this._updateClippingExtent()),c)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this.handles.removeAll(),this.updatingHandles.removeAll(),this._set("elevationAlignment",o(this.elevationAlignment)),this._set("scaleVisibility",o(this.scaleVisibility)),this._set("frustumVisibility",o(this.frustumVisibility)),this._set("objectStates",o(this.objectStates)),this._set("graphicsCore",o(this.graphicsCore))}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibilitySuspended(){return!(!n(this.scaleVisibility)||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return!(!n(this.frustumVisibility)||!this.frustumVisibility.suspended)}get suspended(){return this.owner.suspended??!1}get updating(){return!!(this.graphicsCore?.updating||n(this.scaleVisibility)&&this.scaleVisibility.updating||n(this.frustumVisibility)&&this.frustumVisibility.updating||this.updatingHandles.updating)}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(t){this.graphicsCore.notifyGraphicGeometryChanged(t)}notifyGraphicVisibilityChanged(t){this.graphicsCore.notifyGraphicVisibilityChanged(t)}getRenderingInfo(t,e,i){const s=f(t,{renderer:e,arcade:i});if(n(s)&&s.color){const t=s.color;t[0]=t[0]/255,t[1]=t[1]/255,t[2]=t[2]/255}return s}getRenderingInfoAsync(t,e,i,s){return b(t,{renderer:e,arcade:i,...s})}getHit(t){if(this.owner.loadedGraphics){const e=this.owner.loadedGraphics.find((e=>e.uid===t));if(e){const t=this.layer instanceof g?this.layer:null,i=m(e,t);return{type:"graphic",graphic:i,layer:i.layer}}}return null}whenGraphicBounds(t,e){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(t,e):Promise.reject()}computeAttachmentOrigin(t,e){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(t,e):null}getSymbolLayerSize(t,e){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(t,e):null}maskOccludee(t){const{set:e,handle:i}=this.objectStates.acquireSet(A.MaskOccludee,null);return this.objectStates.setUid(e,t.uid),i}highlight(t){if(t instanceof j)return P;if("number"==typeof t)return this.highlight([t]);if(t instanceof e)return this.highlight([t]);if(t instanceof i&&(t=t.toArray()),Array.isArray(t)&&t.length>0){if(t[0]instanceof e){const e=t.map((t=>t.uid)),{set:i,handle:s}=this.objectStates.acquireSet(A.Highlight,null);return this.objectStates.setUids(i,e),s}if("number"==typeof t[0]){const e=t,{set:i,handle:s}=this.objectStates.acquireSet(A.Highlight,null);return this.objectStates.setObjectIds(i,e),s}}return P}_setupSuspendResumeExtent(){const{scaleVisibility:t,frustumVisibility:e}=this;if(a(t)&&a(e))return;const i=({computedExtent:i,extentPadding:s})=>{this._suspendResumeExtent=x(i,this._suspendResumeExtent,S,s),n(t)&&t.setExtent(this._suspendResumeExtent),n(e)&&e.setExtent(this._suspendResumeExtent)};this.handles.add(p((()=>({computedExtent:this.graphicsCore?.computedExtent,extentPadding:this.graphicsCore?.extentPadding})),(t=>i(t)),h))}_updateClippingExtent(){const t=this.view.clippingArea;this.graphicsCore.setClippingExtent(t,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};t([u()],_.prototype,"type",void 0),t([u({constructOnly:!0})],_.prototype,"owner",void 0),t([u()],_.prototype,"layer",null),t([u()],_.prototype,"view",null),t([u({constructOnly:!0})],_.prototype,"graphicsCore",void 0),t([u({constructOnly:!0})],_.prototype,"scaleVisibility",void 0),t([u({constructOnly:!0})],_.prototype,"frustumVisibility",void 0),t([u({readOnly:!0})],_.prototype,"elevationAlignment",void 0),t([u({readOnly:!0})],_.prototype,"objectStates",void 0),t([u({readOnly:!0})],_.prototype,"scaleVisibilitySuspended",null),t([u({readOnly:!0})],_.prototype,"frustumVisibilitySuspended",null),t([u()],_.prototype,"suspended",null),t([u({readOnly:!0})],_.prototype,"updating",null),t([u()],_.prototype,"loadedGraphics",null),t([u()],_.prototype,"fullOpacity",null),t([u()],_.prototype,"slicePlaneEnabled",null),t([u()],_.prototype,"drapeSourceType",void 0),t([u()],_.prototype,"updatePolicy",null),_=t([d("esri.views.3d.layers.graphics.GraphicsProcessor")],_);const P=r();export{_ as GraphicsProcessor};
