/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../Color","../../../../symbols","../../../../core/asyncUtils","../../../../core/Error","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../core/urlUtils","../../../../chunks/mat4f64","../../../../chunks/vec2f64","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f64","../../../../geometry/projection","../../../../geometry/support/aaBoundingBox","../../../../support/arcadeOnDemand","../../../../symbols/support/IconSymbol3DLayerResource","../../../../symbols/support/utils","../../../2d/arcade/callExpressionWithFeature","./constants","./ElevationAligners","./elevationAlignmentUtils","./ElevationContext","./Graphics3DDrapedGraphicLayer","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./graphicUtils","./interfaces","./placementUtils","./pointUtils","../support/FastSymbolUpdates","../../support/engineContent/sdfPrimitives","../../terrain/OverlayRenderer","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/Texture","../../webgl-engine/materials/HUDMaterial","../../../../symbols/CIMSymbol"],(function(e,t,i,r,s,n,a,o,l,c,h,u,d,m,_,p,y,f,g,S,x,b,v,P,R,z,T,M,I,C,O,E,U,D,A,w,L,G,F,V,N,H){"use strict";const j=u.create(),B=m.fromValues(0,0,1),k=16,q=1.5,Z=A.DEFAULT_TEX_SIZE,W=A.DEFAULT_SYMBOL_SIZE_RATIO,$=[W/2,W/2,1-W/2,1-W/2],J=[Z*W,Z*W];let X=function(t){i._inheritsLoose(u,t);var s=u.prototype;function u(e,i,r,s){var n;return(n=t.call(this,e,i,r,s)||this)._cimLayers=null,n._cimSymbolMaterials=new Map,n._cimSymbolTextures=new Map,n._cimMaterialParametersInfo=null,n._cimRequiredFields=null,n._cimScaleFactorOrFunction=null,n._size=null,n._symbolTextureRatio=1,n._outlineSize=0,n._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!0},n}return s.getCachedSize=function(){return{size:this._getIconSize()}},s.doLoad=function(){var e=i._asyncToGenerator((function*(e){this._validateOrThrow();const t=this._prepareMaterialParameters(),i=this._getPrimitive();if(o.isSome(i))this._prepareResourcesPrimitive(t,i);else{const i=x.getIconHref(this.symbolLayer),r=h.dataComponents(i);r&&"application/json"===r.mediaType?yield this._prepareResourcesCIM(t,JSON.parse(r.data),e):yield this._prepareResourcesHref(t,i,e)}}));function t(t){return e.apply(this,arguments)}return t}(),s._validateOrThrow=function(){if(this._drivenProperties.size)return;const e=C.validateSymbolLayerSize(this._getIconSize());if(e)throw new a("graphics3diconsymbollayer:invalid-size",e)},s._getIconSize=function(){const e=this.symbolLayer,t=Math.round(null!=e.size?c.pt2px(e.size):k);return this._drivenProperties.size?Math.max(t,64):t},s._generateTextureCIM=function(e){const t=this._getGraphicHash(e);let i=""===t?null:this._cimSymbolTextures.get(t);if(!i){const r={scaleFactor:this._cimScaleFactorOrFunction},s=this._context.sharedResources.cimSymbolRasterizer.rasterizeCIMSymbol3D(this._cimLayers,e,"esriGeometryPoint",r,void 0,void 0);this._cimMaterialParametersInfo.anchorPosition=this._getAnchorPos("relative",s.anchorPosition);const n={width:s.imageData.width,height:s.imageData.height,powerOfTwoResizeMode:L.PowerOfTwoResizeMode.PAD};i=new V.Texture(s.imageData,n),this._cimSymbolTextures.set(t,i),this._context.stage.add(i)}return i},s._computeSize=function(e,t){const i=e.width/e.height;return i>1?[t,Math.round(t/i)]:[Math.round(t*i),t]},s._prepareMaterialParameters=function(){const e={anchorPosition:this._getAnchorPos(this.symbolLayer.anchor,this.symbolLayer.anchorPosition)},t=this.symbol;if(Y(t)){const{screenLength:i,minWorldLength:r,maxWorldLength:s}=t.verticalOffset;e.verticalOffset={screenLength:c.pt2px(i),minWorldLength:r||0,maxWorldLength:o.isSome(s)?s:1/0}}return this._context.screenSizePerspectiveEnabled&&(e.screenSizePerspective=this._context.sharedResources.screenSizePerspectiveSettings),e.occlusionTest=!0,e.hasSlicePlane=this._context.slicePlaneEnabled,e},s._prepareResourcesPrimitive=function(e,t){const i=this._getOutlineSize();if(K(t)&&0===i)throw new Error("Nothing to render");if(this._outlineSize=i,e.color=this._getFillColor(),e.outlineColor=this._getOutlineColor(),e.outlineSize=this._outlineSize,o.isSome(this._context.sharedResources.textures)){const i=this._context.sharedResources.textures.fromData(`${t}-icon`,(()=>A.createTexture(t)));this._texture=i.texture,this._releaseTexture=i,e.textureId=this._texture.id}e.textureIsSignedDistanceField=!0,e.distanceFieldBoundingBox=$;const r=this._getIconSize();this._size=[r,r],this._symbolTextureRatio=1/W,this._createMaterialAndAddToStage(e,this._context.stage)},s._prepareResourcesHref=function(){var e=i._asyncToGenerator((function*(e,t,i){this._outlineSize=this._getOutlineSize(),e.color=this._getFillColor(),e.outlineColor=this._getOutlineColor(),e.outlineSize=this._outlineSize,e.textureIsSignedDistanceField=!1;const r=this._getIconSize(),s=r*this._context.graphicsCoreOwner.view.state.rasterPixelRatio;if(o.isSome(this._context.sharedResources.textures)){const o=yield n.result(this._context.sharedResources.textures.fromUrl(t,s,{signal:i}));if(!1===o.ok){l.throwIfAbortError(o.error);throw new a("graphics3diconsymbollayer:request-failed",`Failed to load (Request for icon resource failed: ${t})`)}this._releaseTexture=o.value;const c=o.value.texture,h=c.params;this._size=this._computeSize(h,r),e.textureId=c.id}this._createMaterialAndAddToStage(e,this._context.stage)}));function t(t,i,r){return e.apply(this,arguments)}return t}(),s._prepareResourcesCIM=function(){var t=i._asyncToGenerator((function*(t,i,r){const s=new H({data:i});if(!this._context.sharedResources.cimSymbolRasterizer){const t=(yield new Promise(((t,i)=>e(["../../../../symbols/cim/CIMSymbolRasterizer"],t,i)))).CIMSymbolRasterizer;l.throwIfAborted(r),this._context.sharedResources.cimSymbolRasterizer||(this._context.sharedResources.cimSymbolRasterizer=new t(this._context.renderCoordsHelper.spatialReference,!0))}const n=this._context.layer.fields?this._context.layer.fields.map((e=>e.toJSON())):null;let a,o;if(this._cimLayers=yield this._context.sharedResources.cimSymbolRasterizer.analyzeCIMSymbol(s,n,this._context.renderer&&"dictionary"===this._context.renderer.type?this._context.renderer.fieldMap:null,"esriGeometryPoint",{signal:r}),this._context.renderer&&"dictionary"===this._context.renderer.type&&this._context.renderer.scaleExpression){const e=this._context.renderer;if(isNaN(e.scaleExpression)){const t=e.scaleExpression,i=yield g.createRendererExpression(t,this._context.layer.spatialReference,n);o=(e,t,r)=>{const s=b(i,e,{$view:r},"esriGeometryPoint",t);return null!==s?s:1}}else a=Number(e.scaleExpression)}this._cimScaleFactorOrFunction=a||o||1;const c=this._context.renderer?yield this._context.renderer.getRequiredFields(this._context.layer.fieldsIndex):[];l.throwIfAborted(r);const h=this._context.layer.fieldsIndex;this._cimRequiredFields=c.map((e=>h.get(e).name)),this._cimMaterialParametersInfo=t,this._cimMaterialParametersInfo.color=this._getFillColor(),this._cimMaterialParametersInfo.outlineColor=[0,0,0,0],this._cimMaterialParametersInfo.outlineSize=0,this._cimMaterialParametersInfo.textureIsSignedDistanceField=!1}));function r(e,i,r){return t.apply(this,arguments)}return r}(),s._getPrimitive=function(){return this.symbolLayer.resource&&this.symbolLayer.resource.href?null:this.symbolLayer.resource&&this.symbolLayer.resource.primitive||S.defaultPrimitive},s._getOutlineSize=function(){let e=0;const t=this.symbolLayer;if(o.isSome(t.outline)&&null!=t.outline.size)return Math.max(c.pt2px(t.outline.size),0);return e=K(this._getPrimitive())?q:0,Math.max(e,0)},s._getOutlineColor=function(){const e=this._getLayerOpacity(),t=this.symbolLayer,i=o.get(t,"outline","color");if(o.isSome(i)){const t=r.toUnitRGB(i),s=i.a*e;return[t[0],t[1],t[2],s]}return[0,0,0,0]},s._getFillColor=function(){if(K(this._getPrimitive()))return v.TRANSPARENT_UNIT;const e=o.isNone(this._getPrimitive()),t=o.get(this.symbolLayer,"material","color");return this._getCombinedOpacityAndColor(t,{hasIntrinsicColor:e})},s._getAnchorPos=function(e,t){return"relative"===e?d.fromValues((t.x||0)+.5,.5-(t.y||0)):e in E.namedAnchorToHUDMaterialAnchorPos?E.namedAnchorToHUDMaterialAnchorPos[e]:E.namedAnchorToHUDMaterialAnchorPos.center},s._createMaterialAndAddToStage=function(e,t){if(this._cimLayers?this._fastUpdates={enabled:!1}:this._fastUpdates=D.initFastSymbolUpdatesState(this._context.renderer,this._fastVisualVariableConvertOptions()),this._fastUpdates.enabled&&Object.assign(e,this._fastUpdates.materialParameters),this._cimLayers){let i=o.isSome(e.textureId)?this._cimSymbolMaterials.get(e.textureId):null;return i||(i=new N.HUDMaterial(e),this._cimSymbolMaterials.set(o.unwrapOr(e.textureId,0),i),t.add(i)),i}return this._material=new N.HUDMaterial(e),t.add(this._material),this._material},s._setDrapingDependentMaterialParameters=function(){this.draped&&(this._forEachMaterial((e=>{e.setParameters({verticalOffset:null,screenSizePerspective:null,occlusionTest:!1,hasSlicePlane:!1,shaderPolygonOffset:0,isDraped:this.draped})})),this.layerOpacityChanged())},s.destroy=function(){t.prototype.destroy.call(this),this._forEachMaterial((e=>this._context.stage.remove(e))),this._material=null,this._cimSymbolMaterials.clear(),this._cimSymbolTextures.forEach((e=>this._context.stage.remove(e))),this._cimSymbolTextures.clear(),this._releaseTexture=o.releaseMaybe(this._releaseTexture)},s._getScaleFactor=function(e,t){if(this._drivenProperties.size&&e.size){for(let t=0;t<3;t++){const i=e.size[t];i&&"symbol-value"!==i&&"proportional"!==i&&(e.size[t]=c.pt2px(i))}if("symbol-value"===e.size[0])return 1;if(isFinite(+e.size[0]))return+e.size[0]/t;if(isFinite(+e.size[2]))return+e.size[2]/t}return 1},s.createGraphics3DGraphic=function(e){const t=e.graphic;if(!this._validateGeometry(t.geometry))return null;let i,r=[0,0];if(this._cimLayers){if(!this._cimLayers.length)return null;const e=this._generateTextureCIM(t),s={textureId:e.id,...this._cimMaterialParametersInfo};i=this._createMaterialAndAddToStage(s,this._context.stage),r=[e.params.width,e.params.height]}else r=this._size,i=o.unwrap(this._material);const s=U.placePointOnGeometry(t.geometry);if(o.isNone(s))return this.logger.warn(`unsupported geometry type for icon symbol: ${t.geometry.type}`),null;const n=e.renderingInfo,a=this._getVertexOpacityAndColor(n);let l=1;if(!this._fastUpdates.enabled||!this._fastUpdates.visualVariables.size){const e=r[0]>r[1]?r[0]:r[1];l=this._getScaleFactor(n,e)}l*=this._symbolTextureRatio;const c=d.fromValues(r[0]*l,r[1]*l),h=this.setGraphicElevationContext(t,new z.ElevationContext);return this.ensureDrapedStatus("on-the-ground"===h.mode)&&this._setDrapingDependentMaterialParameters(),this.draped?this._createAsOverlay(t,s,i,a,c,e.layer.uid):this._createAs3DShape(t,s,i,a,c,h,t.uid)},s.layerOpacityChanged=function(){const e=this._getFillColor(),t=this._getOutlineColor();this._forEachMaterial((i=>{i.setParameters({color:e}),i.setParameters({outlineColor:t})}))},s.layerElevationInfoChanged=function(e,t,i){const r=this._elevationContext.mode,s=R.elevationModeChangeUpdateType(u.elevationModeChangeTypes,i,r);if(s!==R.SymbolUpdateType.UPDATE)return s;const n=R.needsElevationUpdates2D(r)||"absolute-height"===r;return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>n))},s.slicePlaneEnabledChanged=function(){return this.draped||this._forEachMaterial((e=>{e.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})})),!0},s.physicalBasedRenderingChanged=function(){return!0},s.pixelRatioChanged=function(){return!!this._getPrimitive()},s.skipHighSymbolLodsChanged=function(){return!0},s.applyRendererDiff=function(e,t){for(const i in e.diff){if("visualVariables"!==i)return O.ApplyRendererDiffResult.Recreate_Symbol;if(!D.updateFastSymbolUpdatesState(this._fastUpdates,t,this._fastVisualVariableConvertOptions()))return O.ApplyRendererDiffResult.Recreate_Symbol;o.isSome(this._material)&&this._material.setParameters(this._fastUpdates.materialParameters)}return O.ApplyRendererDiffResult.Fast_Update},s._defaultElevationInfoNoZ=function(){return Q},s._createAs3DShape=function(e,t,i,r,s,n,a){const l=this.getFastUpdateAttrValues(e),c=l?e=>D.evaluateModelTransform(this._fastUpdates.materialParameters,l,e):void 0,h=this._context.layer.uid,u=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:a,layerUid:h}),d=G.createPointGeometry(i,B,null,r,s,ee,null,l,u),m=U.createStageObject(this._context,t,d,n,a,c);if(o.isNone(m))return null;const _=new M.Graphics3DObject3DGraphicLayer(this,m.object,[d],null,null,P.perObjectElevationAligner,n);return _.alignedSampledElevation=m.sampledElevation,_.needsElevationUpdates=R.needsElevationUpdates2D(n.mode)||"absolute-height"===n.mode,_.getScreenSize=this._createScreenSizeGetter(s,c),_.calculateRelativeScreenBounds=e=>i.calculateRelativeScreenBounds(_.getScreenSize(),1,e),U.extendPointGraphicElevationContext(_,t,this._context.elevationProvider),_},s._createAsOverlay=function(e,t,i,r,s,n){i.renderPriority=this._renderPriority;const a=p.create();y.projectPointToVector(t,a,this._context.overlaySR),a[2]=w.DRAPED_Z;const l=this._context.clippingExtent;if(o.isSome(l)&&!f.containsPoint(l,a))return null;const c=this.getFastUpdateAttrValues(e),h=c?e=>D.evaluateModelTransform(this._fastUpdates.materialParameters,c,e):void 0,u=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:e.uid,layerUid:this._context.layer.uid}),d=G.createPointGeometry(i,B,a,r,s,null,null,c,u),m=new F.RenderGeometry(d,{layerUid:n,graphicUid:e.uid,shaderTransformer:h});a[3]=0,_.copy(m.boundingSphere,a);const g=new T(this,[m],null,this._context.drapeSourceRenderer);return g.getScreenSize=this._createScreenSizeGetter(s,h),g.calculateRelativeScreenBounds=e=>i.calculateRelativeScreenBounds(g.getScreenSize(),1,e),g},s._createScreenSizeGetter=function(e,t){const i=this._outlineSize+2;if(this._fastUpdates.enabled){const r=e[0]/this._symbolTextureRatio,s=e[1]/this._symbolTextureRatio;return(e=d.create())=>{const n=t(j);return e[0]=n[0]*r+i,e[1]=n[5]*s+i,e}}{const t=e[0]/this._symbolTextureRatio+i,r=e[1]/this._symbolTextureRatio+i;return(e=d.create())=>(e[0]=t,e[1]=r,e)}},s._fastVisualVariableConvertOptions=function(){const e=this._size[0]>this._size[1]?this._size[0]:this._size[1],t=m.fromValues(e,e,e),i=c.px2pt(1),r=e*i;return{modelSize:t,symbolSize:m.fromValues(r,r,r),unitInMeters:i,transformation:{anchor:m.ZEROS,scale:m.ONES,rotation:m.ZEROS}}},s._getGraphicHash=function(e){let t="";for(const i of this._cimRequiredFields)t+=i+e.attributes[i];return t},s._forEachMaterial=function(e){o.isSome(this._material)&&e(this._material),this._cimSymbolMaterials.forEach(e)},s.test=function(){return{...t.prototype.test.call(this),material:this._material}},u}(I.Graphics3DSymbolLayer);function Y(e){return e&&"point-3d"===e.type&&e.hasVisibleVerticalOffset()}function K(e){return!o.isNone(e)&&("cross"===e||"x"===e)}X.PRIMITIVE_SIZE=J,X.elevationModeChangeTypes={definedChanged:R.SymbolUpdateType.UPDATE,staysOnTheGround:R.SymbolUpdateType.NONE,onTheGroundChanged:R.SymbolUpdateType.RECREATE};const Q={mode:"relative-to-ground",offset:0},ee=p.fromValues(0,0,0,1);t.Graphics3DIconSymbolLayer=X,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
