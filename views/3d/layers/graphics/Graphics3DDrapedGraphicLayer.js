/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{s as t}from"../../../../chunks/vec3.js";import{c as r}from"../../../../chunks/vec3f64.js";import{create as i,empty as s,expandWithRect as o,center as d,set as n,toRect as a}from"../../../../geometry/support/aaBoundingBox.js";import{create as h}from"../../../../geometry/support/aaBoundingRect.js";import{demResolutionForBoundingBox as c}from"./graphicUtils.js";import{Object3DState as m}from"../../webgl-engine/lib/basicInterfaces.js";import{ModelDirty as g}from"../../webgl-engine/lib/ModelDirtyTypes.js";class u{constructor(e,t,r,i){this.graphics3DSymbolLayer=e,this.renderGeometries=t,this.boundingBox=r,this._drapeSourceRenderer=i,this.type="draped",this.stage=null,this._visible=!1,this._addedToStage=!1,this.isElevationSource=!1}initialize(e){this.stage=e}setVisibility(e){if(null!=this.stage&&this._visible!==e){if(this._visible=e,e&&!this._addedToStage)return this._addedToStage=!0,void this._drapeSourceRenderer.addGeometries(this.renderGeometries,g.Geometry.ADD);if(e||this._addedToStage){for(const e of this.renderGeometries)e.instanceParameters.visible=this._visible;this._drapeSourceRenderer.modifyGeometries(this.renderGeometries,g.State.VISIBILITIES)}}}destroy(){this.stage&&this._addedToStage&&this._drapeSourceRenderer.removeGeometries(this.renderGeometries,g.Geometry.REMOVE),this._addedToStage=!1,this._visible=!1,this.stage=null}getCenterObjectSpace(e=r()){return t(e,0,0,0)}getBoundingBoxObjectSpace(e=i()){return s(e)}addObjectState(e,t){e===m.Highlight&&(this.renderGeometries.forEach((e=>{const r=e.addHighlight();t.addRenderGeometry(e,r,this)})),this._addedToStage&&this._drapeSourceRenderer.modifyGeometries(this.renderGeometries,g.State.HIGHLIGHTS))}removeObjectState(e){this.renderGeometries.forEach((t=>{e.removeRenderGeometry(t)}))}removeRenderGeometryObjectState(e,t){e.removeHighlight(t),this._addedToStage&&this._drapeSourceRenderer.modifyGeometries(this.renderGeometries,g.State.HIGHLIGHTS)}computeAttachmentOrigin(e){for(const t of this.renderGeometries)t.computeAttachmentOrigin(S)&&(e.draped.origin[0]+=S[0],e.draped.origin[1]+=S[1],e.draped.num++)}async getProjectedBoundingBox(t,r,i,n,a){s(a);for(let e=0;e<this.renderGeometries.length;e++){const r=this.renderGeometries[e];this._getRenderGeometryProjectedBoundingRect(r,t,l,i),o(a,l)}if(r){let t;d(a,S);const i=c(a,r);try{t=await r.service.queryElevation(S[0],S[1],n,i,"ground")}catch(h){}e(t)&&(a[2]=Math.min(a[2],t),a[5]=Math.max(a[5],t))}return a}_getRenderGeometryProjectedBoundingRect(e,t,r,i){if(this.boundingBox)n(p,this.boundingBox);else{const t=e.boundingSphere,r=t[3];p[0]=t[0]-r,p[1]=t[1]-r,p[2]=t[2]-r,p[3]=t[0]+r,p[4]=t[1]+r,p[5]=t[2]+r}return t(p,0,2),this.calculateRelativeScreenBounds&&i.push({location:d(p),screenSpaceBoundingRect:this.calculateRelativeScreenBounds()}),a(p,r)}}const l=h(),p=i(),S=r();export{u as default};
