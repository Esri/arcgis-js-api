/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../../core/Logger","../../../../core/Error","../../../../core/promiseUtils","../../../../request","../../../../core/asyncUtils","../../../../chunks/vec3f64","../../../../core/Version","../../../../geometry/support/aaBoundingBox","../../../../support/requestImageUtils","../../webgl-engine/lib/Geometry","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/lib/Texture"],(function(e,t,r,n,a,s,o,i,u,l,c,p,m,f){"use strict";const d=r.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");async function y(e,t){const r=await x(e,t);return{resource:r,textures:await A(r.textureDefinitions,t)}}async function x(e,r){const n=t.isSome(r)&&r.streamDataRequester;if(n)return g(e,n,r);const i=await o.result(s(e,t.unwrap(r)));if(!0===i.ok)return i.value.data;a.throwIfAbortError(i.error),h(i.error)}async function g(e,t,r){const n=await o.result(t.request(e,"json",r));if(!0===n.ok)return n.value;a.throwIfAbortError(n.error),h(n.error.details.url)}function h(e){throw new n("",`Request for object resource failed: ${e}`)}function w(e){const t=e.params,r=t.topology;let n=!0;switch(t.vertexAttributes||(d.warn("Geometry must specify vertex attributes"),n=!1),t.topology){case"PerAttributeArray":break;case"Indexed":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t&&t.values?(null!=t.valueType&&"UInt32"!==t.valueType&&(d.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),n=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(d.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),n=!1)):(d.warn(`Indexed geometry does not specify face indices for '${r}' attribute`),n=!1)}}else d.warn("Indexed geometries must specify faces"),n=!1;break}default:d.warn(`Unsupported topology '${r}'`),n=!1}e.params.material||(d.warn("Geometry requires material"),n=!1);const a=e.params.vertexAttributes;for(const s in a){a[s].values||(d.warn("Geometries with externally defined attributes are not yet supported"),n=!1)}return n}function b(e,r){const n=[],a=[],s=[],o=[],l=e.resource,c=u.Version.parse(l.version||"1.0","wosr");M.validate(c);const d=l.model.name,y=l.model.geometries,x=l.materialDefinitions,g=e.textures;let h=0;const b=new Map;for(let u=0;u<y.length;u++){const e=y[u];if(!w(e))continue;const l=I(e),c=e.params.vertexAttributes,d=[];for(const t in c){const e=c[t],r=e.values;d.push([t,{data:r,size:e.valuesPerElement,exclusive:!0}])}const v=[];if("PerAttributeArray"!==e.params.topology){const t=e.params.faces;for(const e in t)v.push([e,new Uint32Array(t[e].values)])}const A=g&&g[l.texture];if(A&&!b.has(l.texture)){const{image:e,params:t}=A,r=new f.Texture(e,t);o.push(r),b.set(l.texture,r)}const M=b.get(l.texture),P=M?M.id:void 0;let T=s[l.material]?s[l.material][l.texture]:null;if(!T){const e=x[l.material.substring(l.material.lastIndexOf("/")+1)].params;1===e.transparency&&(e.transparency=0);const n=A&&A.alphaChannelUsage,a=e.transparency>0||"transparency"===n||"maskAndTransparency"===n,o={ambient:i.fromArray(e.diffuse),diffuse:i.fromArray(e.diffuse),opacity:1-(e.transparency||0),transparent:a,textureAlphaMode:A?U(A.alphaChannelUsage):void 0,textureAlphaCutoff:.33,textureId:P,initTextureTransparent:!0,doubleSided:!0,cullFace:0,colorMixMode:e.externalColorMixMode||"tint",textureAlphaPremultiplied:!0};t.isSome(r)&&r.materialParamsMixin&&Object.assign(o,r.materialParamsMixin),T=new m.DefaultMaterial(o),s[l.material]||(s[l.material]={}),s[l.material][l.texture]=T}a.push(T);const k=new p.Geometry(d,v);h+=v.position?v.position.length:0,n.push(k)}return{name:d,stageResources:{textures:o,materials:a,geometries:n},pivotOffset:l.model.pivotOffset,boundingBox:v(n),numberOfVertices:h,lodThreshold:null}}function v(e){const r=l.empty();return e.forEach((e=>{const n=e.boundingInfo;t.isSome(n)&&(l.expandWithVec3(r,n.getBBMin()),l.expandWithVec3(r,n.getBBMax()))})),r}async function A(e,r){const n=[];for(const o in e){const a=e[o],s=a.images[0].data;if(!s){d.warn("Externally referenced texture data is not yet supported");continue}const i=a.encoding+";base64,"+s,u="/textureDefinitions/"+o,l={noUnpackFlip:!0,wrap:{s:10497,t:10497},preMultiplyAlpha:!0},p=t.isSome(r)&&r.disableTextures?Promise.resolve(null):c.requestImage(i,r);n.push(p.then((e=>({refId:u,image:e,params:l,alphaChannelUsage:"rgba"===a.channels?a.alphaChannelUsage||"transparency":"none"}))))}const a=await Promise.all(n),s={};for(const t of a)s[t.refId]=t;return s}function U(e){switch(e){case"mask":return 2;case"maskAndTransparency":return 3;case"none":return 1;case"transparency":default:return 0}}function I(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}const M=new u.Version(1,2,"wosr");e.createTextureResources=A,e.load=y,e.processLoadResult=b,Object.defineProperty(e,"__esModule",{value:!0})}));
