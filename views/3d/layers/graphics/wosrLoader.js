/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../core/lang","../../../../core/maybe","../../../../core/Logger","../../../../core/Error","../../../../core/promiseUtils","../../../../request","../../../../core/asyncUtils","../../../../chunks/vec3f64","../../../../core/Version","../../../../geometry/support/aaBoundingBox","../../../../support/requestImageUtils","../../webgl-engine/lib/GeometryData","../../webgl-engine/lib/Geometry","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/lib/Texture"],(function(e,t,r,n,a,s,o,i,u,l,c,p,f,d,m,y){"use strict";const g=n.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");function x(e){throw new a("",`Request for object resource failed: ${e}`)}function w(e){const t=e.params,r=t.topology;let n=!0;switch(t.vertexAttributes||(g.warn("Geometry must specify vertex attributes"),n=!1),t.topology){case"PerAttributeArray":break;case"Indexed":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t&&t.values?(null!=t.valueType&&"UInt32"!==t.valueType&&(g.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),n=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(g.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),n=!1)):(g.warn(`Indexed geometry does not specify face indices for '${r}' attribute`),n=!1)}}else g.warn("Indexed geometries must specify faces"),n=!1;break}default:g.warn(`Unsupported topology '${r}'`),n=!1}e.params.material||(g.warn("Geometry requires material"),n=!1);const a=e.params.vertexAttributes;for(const e in a){a[e].values||(g.warn("Geometries with externally defined attributes are not yet supported"),n=!1)}return n}function h(e){const t=c.empty();return e.forEach((e=>{const r=e.boundingInfo;c.expandWithVec3(t,r.getBBMin()),c.expandWithVec3(t,r.getBBMax())})),t}async function b(e,t){const n=[];for(const a in e){const o=e[a],i=o.images[0].data;if(!i){g.warn("Externally referenced texture data is not yet supported");continue}const u=o.encoding+";base64,"+i,l="/textureDefinitions/"+a,c={noUnpackFlip:!0,wrap:{s:10497,t:10497},preMultiplyAlpha:!0},f=r.isSome(t)&&t.disableTextures?s.resolve(null):p.requestImage(u,t);n.push(f.then((e=>({refId:l,image:e,params:c,alphaChannelUsage:"rgba"===o.channels?o.alphaChannelUsage||"transparency":"none"}))))}const a=await s.all(n),o={};for(const e of a)o[e.refId]=e;return o}function v(e){switch(e){case"mask":return 2;case"maskAndTransparency":return 3;case"none":return 1;case"transparency":default:return 0}}function A(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}function U(e){const t=new Uint32Array(e);for(let r=0;r<e;r++)t[r]=r;return t}const I=new l.Version(1,2,"wosr");e.createTextureResources=b,e.load=async function(e,t){const n=await async function(e,t){const n=r.isSome(t)&&t.streamDataRequester;if(n)return async function(e,t,r){const n=await i.result(t.request(e,"json",r));if(!0===n.ok)return n.value;return s.throwIfAbortError(n.error),void x(n.error.details.url)}(e,n,t);const a=await i.result(o(e,r.unwrap(t)));if(!0===a.ok)return a.value.data;return s.throwIfAbortError(a.error),void x(a.error)}(e,t);return{resource:n,textures:await b(n.textureDefinitions,t)}},e.processLoadResult=function(e,n){const a=[],s=[],o=[],i=[],c=e.resource,p=l.Version.parse(c.version||"1.0","wosr");I.validate(p);const g=c.model.name,x=c.model.geometries,b=c.materialDefinitions,M=e.textures;let T=0;const P=new Map;for(let e=0;e<x.length;e++){const l=x[e];if(!w(l))continue;const c=A(l),p=l.params.vertexAttributes,h={};for(const e in p){const t=p[e],r=t.values;h[e]={data:r,size:t.valuesPerElement}}const I={};if("PerAttributeArray"===l.params.topology){const e=U(h.position.data.length/h.position.size);for(const t in h)I[t]=e}else{const e=l.params.faces;for(const t in e)I[t]=new Uint32Array(e[t].values)}const k=M&&M[c.texture];if(k&&!P.has(c.texture)){const{image:e,params:t}=k,r=new y(e,g,t);i.push(r),P.set(c.texture,r)}const E=P.get(c.texture),D=E?E.id:void 0;let q=o[c.material]?o[c.material][c.texture]:null;if(!q){const e=b[c.material.substring(c.material.lastIndexOf("/")+1)].params;1===e.transparency&&(e.transparency=0);const a=k&&k.alphaChannelUsage,s=e.transparency>0||"transparency"===a||"maskAndTransparency"===a,i={ambient:u.fromArray(e.diffuse),diffuse:u.fromArray(e.diffuse),opacity:1-(e.transparency||0),transparent:s,textureAlphaMode:k?v(k.alphaChannelUsage):void 0,textureAlphaCutoff:.33,textureId:D,initTextureTransparent:!0,doubleSided:!0,cullFace:0,colorMixMode:e.externalColorMixMode||"tint",textureAlphaPremultiplied:!0};r.isSome(n)&&n.materialParamsMixin&&t.mixin(i,n.materialParamsMixin),q=new m.DefaultMaterial(i,g),o[c.material]||(o[c.material]={}),o[c.material][c.texture]=q}s.push(q);const B=new d(new f.GeometryData(h,I),g);T+=I.position?I.position.length:0,a.push(B)}return{name:g,stageResources:{textures:i,materials:s,geometries:a},pivotOffset:c.model.pivotOffset,boundingBox:h(a),numberOfVertices:T,lodThreshold:null}},Object.defineProperty(e,"__esModule",{value:!0})}));
