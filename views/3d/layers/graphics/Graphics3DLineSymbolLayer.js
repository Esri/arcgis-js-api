/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../Color","../../../../geometry","../../../../core/Error","../../../../core/maybe","../../../../core/screenUtils","../../../../chunks/mat4f64","../../../../chunks/vec4","../../../../chunks/vec4f64","../../../../geometry/support/aaBoundingBox","../../../../renderers/support/renderingInfoUtils","./ElevationAligners","./elevationAlignmentUtils","./ElevationContext","./Graphics3DDrapedGraphicLayer","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./lineUtils","../support/FastSymbolUpdates","../../webgl-engine/lib/Object3D","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/materials/lineStippleUtils","../../webgl-engine/materials/RibbonLineMaterial","../../../../geometry/Extent","../../../../geometry/Polygon"],(function(e,t,i,a,r,n,s,o,l,p,h,c,u,y,d,g,m,f,_,b,v,M,x,P,S,U){"use strict";const D=["polyline","polygon","extent"];let C=function(e){function a(t,i,a,r){var n;return(n=e.call(this,t,i,a,r)||this)._uniformSize=1,n}t._inheritsLoose(a,e);var C=a.prototype;return C.doLoad=function(){var e=t._asyncToGenerator((function*(){if(this._vvConvertOptions={modelSize:[1,1,1],symbolSize:[1,1,1],unitInMeters:1,transformation:{anchor:[0,0,0],scale:[1,1,1],rotation:[0,0,0]},supportedTypes:{size:!0,color:!0,opacity:!0,rotation:!1}},this._context.renderer&&this._context.renderer.visualVariables&&this._context.renderer.visualVariables.length>0?this._fastUpdates=b.initFastSymbolUpdatesState(this._context.renderer,this._vvConvertOptions):this._fastUpdates={enabled:!1},!this._drivenProperties.size){const e=null!=this.symbolLayer.size?this.symbolLayer.size:s.px2pt(1);if(e<0)throw new r("graphics3dlinesymbollayer:invalid-size","Symbol sizes may not be negative values");this._uniformSize=e}}));function i(){return e.apply(this,arguments)}return i}(),C.getMaterialParameters=function(e){const t=n.get(this.symbolLayer,"material","color"),a=this._getCombinedOpacityAndColor(t),r=a[3],o={width:1,color:a,polygonOffset:!0,join:this.symbolLayer.join||"miter",cap:this.symbolLayer.cap||"butt",transparent:r<1||this.needsDrivenTransparentPass,slicePlaneEnabled:this._context.slicePlaneEnabled,isClosed:e,stipplePattern:this.symbolLayer.stipplePattern?x.createStipplePattern(this.symbolLayer.stipplePattern.map(s.pt2px)):null,stippleOffColor:this.symbolLayer.stippleOffColor?i.toUnitRGBA(this.symbolLayer.stippleOffColor):null,stippleIntegerRepeats:!0};if(this._drivenProperties.size)this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size&&(o.width=s.pt2px(1));else{const e=null!=this.symbolLayer.size?this.symbolLayer.size:s.px2pt(1);o.width=s.pt2px(e)}return this._fastUpdates&&this._fastUpdates.visualVariables?{...o,...this._fastUpdates.materialParameters}:o},C.destroy=function(){e.prototype.destroy.call(this),this._context.stage.remove(this._lineMaterial),this._lineMaterial=null,this._context.stage.remove(this._ringMaterial),this._ringMaterial=null},C.getDrivenSize=function(e){return this._drivenProperties.size&&e.size?s.pt2px(c.getDriverAxisSizeValueAny(e.size)):1},C.getSizeFeatureAttributeData=function(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size?f.getAttributeValue(this._fastUpdates.visualVariables.size.field,e):null},C.getDrivenColor=function(e){const t=p.fromValues(1,1,1,1);return this._drivenProperties.color&&e.color&&(t[0]=e.color[0],t[1]=e.color[1],t[2]=e.color[2],e.color.length>0&&(t[3]=e.color[3])),this._drivenProperties.opacity&&e.opacity&&(t[3]=e.opacity),t},C.getColorFeatureAttributeData=function(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.color?f.getAttributeValue(this._fastUpdates.visualVariables.color.field,e):null},C.getOpacityFeatureAttributeData=function(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.opacity?f.getAttributeValue(this._fastUpdates.visualVariables.opacity.field,e):null},C.createGraphics3DGraphic=function(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,D,this.symbolLayer.type))return null;const i=this.setGraphicElevationContext(t,new d.ElevationContext);return this.ensureDrapedStatus("on-the-ground"===i.mode),this.draped?this._createAsOverlay(e,this._context.layer.uid):this._createAs3DShape(e,i,t.uid)},C.applyRendererDiff=function(e,t){for(const i in e.diff)switch(i){case"visualVariables":if(!b.updateFastSymbolUpdatesState(this._fastUpdates,t,this._vvConvertOptions))return!1;n.isSome(this._lineMaterial)&&this._lineMaterial.setParameterValues(this._fastUpdates.materialParameters),n.isSome(this._ringMaterial)&&this._ringMaterial.setParameterValues(this._fastUpdates.materialParameters);break;default:return!1}return!0},C.layerOpacityChanged=function(){return n.isSome(this._lineMaterial)&&this.updateMaterialLayerOpacity(this._lineMaterial),n.isSome(this._ringMaterial)&&this.updateMaterialLayerOpacity(this._ringMaterial),!0},C.updateMaterialLayerOpacity=function(e){const t=e.params.color,i=n.get(this.symbolLayer,"material","color"),a=this._getCombinedOpacity(i),r=a<1||this.needsDrivenTransparentPass,s=[t[0],t[1],t[2],a];e.setParameterValues({color:s,transparent:r})},C.layerElevationInfoChanged=function(e,t,i){const r=this._elevationContext.mode,n=y.elevationModeChangeUpdateType(a.elevationModeChangeTypes,i,r);if(n!==y.SymbolUpdateType.UPDATE)return n;const s=y.needsElevationUpdates2D(r);return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>s))},C.slicePlaneEnabledChanged=function(){return n.isSome(this._lineMaterial)&&this._lineMaterial.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),n.isSome(this._ringMaterial)&&this._ringMaterial.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),!0},C.physicalBasedRenderingChanged=function(){return!0},C.pixelRatioChanged=function(){return!0},C._getGeometryAsPolygonOrPolyline=function(e){switch(e.type){case"extent":if(e instanceof S)return U.fromExtent(e);break;case"polygon":case"polyline":return e}return null},C._createAs3DShape=function(e,t,i){const a=e.graphic,r=this._getGeometryAsPolygonOrPolyline(a.geometry),s="polygon"===r.type?r.rings:r.paths,l=new Array,p=new Array,c=new Array,d=h.create(),g=_.geometryToRenderInfo(r,this._context.elevationProvider,this._context.renderCoordsHelper,t),f="polygon"===r.type?"rings":"paths";this._logGeometryCreationWarnings(g,s,f,"LineSymbol3DLayer");for(let u=0;u<g.lines.length;u++){const{position:t,mapPosition:i}=g.lines[u];if(n.isSome(this._context.clippingExtent)&&(h.empty(d),h.expandWithBuffer(d,i),!h.intersectsClippingArea(d,this._context.clippingExtent)))continue;const a=this._createGeometry(e,t,i,r.type);l.push(a),p.push("polygon"===r.type?this.ringMaterial:this.lineMaterial),c.push(o.IDENTITY)}if(0===l.length)return null;const b=new v.Object3D({geometries:l,materials:p,transformations:c,castShadow:!1,metadata:{layerUid:this._context.layer.uid,graphicUid:i}}),M=u.perVertexElevationAligner,x=new m.Graphics3DObject3DGraphicLayer(this,b,l,null,null,M,t);return x.alignedSampledElevation=g.sampledElevation,x.needsElevationUpdates=y.needsElevationUpdates2D(t.mode),x},C._createGeometry=function(e,t,i,a){const r="polygon"===a?1:0,n=this._fastUpdates.enabled&&this._fastUpdates.visualVariables.color,s=this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size;return _.createGeometry({removeDuplicateStartEnd:r,uniformSize:this._uniformSize,attributeData:{position:t,mapPosition:i,size:s?null:this.getDrivenSize(e.renderingInfo),color:n?null:this.getDrivenColor(e.renderingInfo),sizeFeature:this.getSizeFeatureAttributeData(e.graphic),colorFeature:this.getColorFeatureAttributeData(e.graphic),opacityFeature:this.getOpacityFeatureAttributeData(e.graphic)}})},C._createAsOverlay=function(e,t){const i=e.graphic,a=this._getGeometryAsPolygonOrPolyline(i.geometry),r="polygon"===a.type?a.rings:a.paths,n="polygon"===a.type?this.ringMaterial:this.lineMaterial;n.renderPriority=this._renderPriority;const s=new Array,o=h.create(),p=h.empty(),c=_.geometryToRenderInfoDraped(a,this._context.overlaySR),u="polygon"===a.type?"rings":"paths";this._logGeometryCreationWarnings(c,r,u,"LineSymbol3DLayer");for(const y of c.lines){if(h.empty(o),h.expandWithBuffer(o,y.position),!h.intersectsClippingArea(o,this._context.clippingExtent))continue;h.expandWithAABB(p,o);const r=this._createGeometry(e,y.position,null,a.type),c=new M.RenderGeometry(r,n,t,i.uid);l.set(c.boundingSphere,.5*(o[0]+o[3]),.5*(o[1]+o[4]),0,.5*Math.sqrt((o[3]-o[0])*(o[3]-o[0])+(o[4]-o[1])*(o[4]-o[1]))),s.push(c)}return new g(this,s,p)},t._createClass(a,[{key:"lineMaterial",get:function(){return n.isNone(this._lineMaterial)&&(this._lineMaterial=new P.RibbonLineMaterial(this.getMaterialParameters(!1)),this._context.stage.add(this._lineMaterial)),this._lineMaterial}},{key:"ringMaterial",get:function(){return n.isNone(this._ringMaterial)&&(this._ringMaterial=new P.RibbonLineMaterial(this.getMaterialParameters(!0)),this._context.stage.add(this._ringMaterial)),this._ringMaterial}}]),a}(f.Graphics3DSymbolLayer);C.elevationModeChangeTypes={definedChanged:y.SymbolUpdateType.RECREATE,staysOnTheGround:y.SymbolUpdateType.NONE,onTheGroundChanged:y.SymbolUpdateType.RECREATE},e.Graphics3DLineSymbolLayer=C,e.default=C,Object.defineProperty(e,"__esModule",{value:!0})}));
