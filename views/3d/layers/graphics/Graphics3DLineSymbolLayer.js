/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/maybe","../../../../core/Error","../../../../geometry/Extent","../../../../geometry/Polygon","../../../../geometry","../../../../Color","../../../../core/screenUtils","../../../../chunks/mat4f64","../../../../chunks/vec4f64","../../../../chunks/vec4","../../../../geometry/support/aaBoundingBox","../../webgl-engine/lib/Object3D","./elevationAlignmentUtils","./ElevationAligners","./ElevationContext","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","../../../../renderers/support/renderingInfoUtils","../../webgl-engine/materials/RibbonLineMaterial","../../webgl-engine/materials/lineStippleUtils","./Graphics3DDrapedGraphicLayer","../support/FastSymbolUpdates","../../webgl-engine/lib/RenderGeometry","./lineUtils"],(function(e,t,i,a,r,n,s,o,l,p,h,c,u,y,d,g,m,f,_,b,v,M,x,P,S,U){"use strict";const C=["polyline","polygon","extent"];let D=function(e){function s(t,i,a,r){var n;return(n=e.call(this,t,i,a,r)||this)._uniformSize=1,n}t._inheritsLoose(s,e);var D=s.prototype;return D.doLoad=async function(){if(this._vvConvertOptions={modelSize:[1,1,1],symbolSize:[1,1,1],unitInMeters:1,transformation:{anchor:[0,0,0],scale:[1,1,1],rotation:[0,0,0]},supportedTypes:{size:!0,color:!0,opacity:!0,rotation:!1}},this._context.renderer&&this._context.renderer.visualVariables&&this._context.renderer.visualVariables.length>0?this._fastUpdates=P.initFastSymbolUpdatesState(this._context.renderer,this._vvConvertOptions):this._fastUpdates={enabled:!1},!this._drivenProperties.size){const e=null!=this.symbolLayer.size?this.symbolLayer.size:l.px2pt(1);if(e<0)throw new a("graphics3dlinesymbollayer:invalid-size","Symbol sizes may not be negative values");this._uniformSize=e}},D.getMaterialParameters=function(e){const t=i.get(this.symbolLayer,"material","color"),a=this._getCombinedOpacityAndColor(t),r=a[3],n={width:1,color:a,polygonOffset:!0,join:this.symbolLayer.join||"miter",cap:this.symbolLayer.cap||"butt",transparent:r<1||this.needsDrivenTransparentPass,slicePlaneEnabled:this._context.slicePlaneEnabled,isClosed:e,stipplePattern:this.symbolLayer.stipplePattern?M.createStipplePattern(this.symbolLayer.stipplePattern.map(l.pt2px)):null,stippleOffColor:this.symbolLayer.stippleOffColor?o.toUnitRGBA(this.symbolLayer.stippleOffColor):null,stippleIntegerRepeats:!0};if(this._drivenProperties.size)this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size&&(n.width=l.pt2px(1));else{const e=null!=this.symbolLayer.size?this.symbolLayer.size:l.px2pt(1);n.width=l.pt2px(e)}return this._fastUpdates&&this._fastUpdates.visualVariables?{...n,...this._fastUpdates.materialParameters}:n},D.destroy=function(){e.prototype.destroy.call(this),this._context.stage.remove(this._lineMaterial),this._lineMaterial=null,this._context.stage.remove(this._ringMaterial),this._ringMaterial=null},D.getDrivenSize=function(e){return this._drivenProperties.size&&e.size?l.pt2px(b.getDriverAxisSizeValueAny(e.size)):1},D.getSizeFeatureAttributeData=function(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size?_.getAttributeValue(this._fastUpdates.visualVariables.size.field,e):null},D.getDrivenColor=function(e){const t=h.fromValues(1,1,1,1);return this._drivenProperties.color&&e.color&&(t[0]=e.color[0],t[1]=e.color[1],t[2]=e.color[2],e.color.length>0&&(t[3]=e.color[3])),this._drivenProperties.opacity&&e.opacity&&(t[3]=e.opacity),t},D.getColorFeatureAttributeData=function(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.color?_.getAttributeValue(this._fastUpdates.visualVariables.color.field,e):null},D.getOpacityFeatureAttributeData=function(e){return this._fastUpdates.enabled&&this._fastUpdates.visualVariables.opacity?_.getAttributeValue(this._fastUpdates.visualVariables.opacity.field,e):null},D.createGraphics3DGraphic=function(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,C,this.symbolLayer.type))return null;const i=this.setGraphicElevationContext(t,new m.ElevationContext);return this.ensureDrapedStatus("on-the-ground"===i.mode),this.draped?this._createAsOverlay(e,this._context.layer.uid):this._createAs3DShape(e,i,t.uid)},D.applyRendererDiff=function(e,t){for(const a in e.diff)switch(a){case"visualVariables":if(!P.updateFastSymbolUpdatesState(this._fastUpdates,t,this._vvConvertOptions))return!1;i.isSome(this._lineMaterial)&&this._lineMaterial.setParameterValues(this._fastUpdates.materialParameters),i.isSome(this._ringMaterial)&&this._ringMaterial.setParameterValues(this._fastUpdates.materialParameters);break;default:return!1}return!0},D.layerOpacityChanged=function(){return i.isSome(this._lineMaterial)&&this.updateMaterialLayerOpacity(this._lineMaterial),i.isSome(this._ringMaterial)&&this.updateMaterialLayerOpacity(this._ringMaterial),!0},D.updateMaterialLayerOpacity=function(e){const t=e.params.color,a=i.get(this.symbolLayer,"material","color"),r=this._getCombinedOpacity(a),n=r<1||this.needsDrivenTransparentPass,s=[t[0],t[1],t[2],r];e.setParameterValues({color:s,transparent:n})},D.layerElevationInfoChanged=function(e,t,i){const a=this._elevationContext.mode,r=d.elevationModeChangeUpdateType(s.elevationModeChangeTypes,i,a);if(r!==d.SymbolUpdateType.UPDATE)return r;const n=d.needsElevationUpdates2D(a);return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>n))},D.slicePlaneEnabledChanged=function(){return i.isSome(this._lineMaterial)&&this._lineMaterial.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),i.isSome(this._ringMaterial)&&this._ringMaterial.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),!0},D.physicalBasedRenderingChanged=function(){return!0},D.pixelRatioChanged=function(){return!0},D._getGeometryAsPolygonOrPolyline=function(e){switch(e.type){case"extent":if(e instanceof r)return n.fromExtent(e);break;case"polygon":case"polyline":return e}return null},D._createAs3DShape=function(e,t,a){const r=e.graphic,n=this._getGeometryAsPolygonOrPolyline(r.geometry),s="polygon"===n.type?n.rings:n.paths,o=new Array,l=new Array,h=new Array,c=u.create(),m=U.geometryToRenderInfo(n,this._context.elevationProvider,this._context.renderCoordsHelper,t),_="polygon"===n.type?"rings":"paths";this._logGeometryCreationWarnings(m,s,_,"LineSymbol3DLayer");for(let y=0;y<m.lines.length;y++){const{position:t,mapPosition:a}=m.lines[y];if(i.isSome(this._context.clippingExtent)&&(u.empty(c),u.expandWithBuffer(c,a),!u.intersectsClippingArea(c,this._context.clippingExtent)))continue;const r=this._createGeometry(e,t,a,n.type);o.push(r),l.push("polygon"===n.type?this.ringMaterial:this.lineMaterial),h.push(p.IDENTITY)}if(0===o.length)return null;const b=new y.Object3D({geometries:o,materials:l,transformations:h,castShadow:!1,metadata:{layerUid:this._context.layer.uid,graphicUid:a}}),v=g.perVertexElevationAligner,M=new f(this,b,o,null,null,v,t);return M.alignedSampledElevation=m.sampledElevation,M.needsElevationUpdates=d.needsElevationUpdates2D(t.mode),M},D._createGeometry=function(e,t,i,a){const r="polygon"===a?1:0,n=this._fastUpdates.enabled&&this._fastUpdates.visualVariables.color,s=this._fastUpdates.enabled&&this._fastUpdates.visualVariables.size;return U.createGeometry({removeDuplicateStartEnd:r,uniformSize:this._uniformSize,attributeData:{position:t,mapPosition:i,size:s?null:this.getDrivenSize(e.renderingInfo),color:n?null:this.getDrivenColor(e.renderingInfo),sizeFeature:this.getSizeFeatureAttributeData(e.graphic),colorFeature:this.getColorFeatureAttributeData(e.graphic),opacityFeature:this.getOpacityFeatureAttributeData(e.graphic)}})},D._createAsOverlay=function(e,t){const i=e.graphic,a=this._getGeometryAsPolygonOrPolyline(i.geometry),r="polygon"===a.type?a.rings:a.paths,n="polygon"===a.type?this.ringMaterial:this.lineMaterial;n.renderPriority=this._renderPriority;const s=[],o=u.create(),l=u.empty(),p=U.geometryToRenderInfoDraped(a,this._context.overlaySR),h="polygon"===a.type?"rings":"paths";if(this._logGeometryCreationWarnings(p,r,h,"LineSymbol3DLayer"),r.length>0){const{lines:r}=p;for(let p=0;p<r.length;++p){const h=r[p];if(u.empty(o),u.expandWithBuffer(o,h.position),!u.intersectsClippingArea(o,this._context.clippingExtent))continue;u.expandWithAABB(l,o);const y=this._createGeometry(e,h.position,null,a.type),d=new S.RenderGeometry(y,n,t,i.uid);c.set(d.boundingSphere,.5*(o[0]+o[3]),.5*(o[1]+o[4]),0,.5*Math.sqrt((o[3]-o[0])*(o[3]-o[0])+(o[4]-o[1])*(o[4]-o[1]))),s.push(d)}return new x(this,s,l)}return null},t._createClass(s,[{key:"lineMaterial",get:function(){return i.isNone(this._lineMaterial)&&(this._lineMaterial=new v.RibbonLineMaterial(this.getMaterialParameters(!1)),this._context.stage.add(this._lineMaterial)),this._lineMaterial}},{key:"ringMaterial",get:function(){return i.isNone(this._ringMaterial)&&(this._ringMaterial=new v.RibbonLineMaterial(this.getMaterialParameters(!0)),this._context.stage.add(this._ringMaterial)),this._ringMaterial}}]),s}(_.Graphics3DSymbolLayer);D.elevationModeChangeTypes={definedChanged:d.SymbolUpdateType.RECREATE,staysOnTheGround:d.SymbolUpdateType.NONE,onTheGroundChanged:d.SymbolUpdateType.RECREATE},e.Graphics3DLineSymbolLayer=D,e.default=D,Object.defineProperty(e,"__esModule",{value:!0})}));
