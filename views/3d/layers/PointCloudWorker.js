/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../core/typedArrayUtil","../../../core/maybe","../../../core/promiseUtils","../../../geometry/SpatialReference","../../../chunks/vec3","../../../geometry/projection","../../../chunks/quat","../../../chunks/vec3f32","../../../chunks/quatf32","./i3s/PointCloudWorkerUtil"],(function(t,e,r,a,n,o,i,u,f,s){"use strict";let l=function(){function f(){}var l=f.prototype;return l.transform=function(a){const n=this._transform(a),o=[n.points.buffer,n.rgb.buffer];e.isSome(n.pointIdFilterMap)&&o.push(n.pointIdFilterMap.buffer);for(const e of n.attributes)"buffer"in e.values&&t.isArrayBuffer(e.values.buffer)&&e.values.buffer!==n.rgb.buffer&&o.push(e.values.buffer);return r.resolve({result:n,transferList:o})},l._transform=function(t){const r=s.readGeometry(t.schema,t.geometryBuffer);let n=r.length/3,o=null;const i=[],u=s.getAttributeValues(t.primaryAttributeData,r,n);e.isSome(t.primaryAttributeData)&&u&&i.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:u});const f=s.getAttributeValues(t.modulationAttributeData,r,n);e.isSome(t.modulationAttributeData)&&f&&i.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:f});let l=s.evaluateRenderer(t.rendererInfo,u,f,n);if(t.filterInfo&&t.filterInfo.length>0&&e.isSome(t.filterAttributesData)){const e=t.filterAttributesData.map((t=>{const e=s.getAttributeValues(t,r,n),a={attributeInfo:t.attributeInfo,values:e};return i.push(a),a}));o=new Uint32Array(n),n=s.filterInPlace(r,l,o,t.filterInfo,e)}for(const e of t.userAttributesData){const t=s.getAttributeValues(e,r,n);i.push({attributeInfo:e.attributeInfo,values:t})}3*n<l.length&&(l=new Uint8Array(l.buffer.slice(0,3*n))),this._applyElevationOffsetInPlace(r,n,t.elevationOffset);const c=this._transformCoordinates(r,n,t.obb,a.fromJSON(t.inSR),a.fromJSON(t.outSR));return{obb:t.obb,points:c,rgb:l,attributes:i,pointIdFilterMap:o}},l._transformCoordinates=function(t,e,r,a,f){if(!o.projectBuffer(t,a,0,t,f,0,e))throw Error("Can't reproject");const s=u.fromValues(r.center[0],r.center[1],r.center[2]),l=u.create(),b=u.create();i.conjugate(c,r.quaternion);const h=new Float32Array(3*e);for(let a=0;a<e;a++)l[0]=t[3*a]-s[0],l[1]=t[3*a+1]-s[1],l[2]=t[3*a+2]-s[2],n.transformQuat(b,l,c),r.halfSize[0]=Math.max(r.halfSize[0],Math.abs(b[0])),r.halfSize[1]=Math.max(r.halfSize[1],Math.abs(b[1])),r.halfSize[2]=Math.max(r.halfSize[2],Math.abs(b[2])),h[3*a]=l[0],h[3*a+1]=l[1],h[3*a+2]=l[2];return h},l._applyElevationOffsetInPlace=function(t,e,r){if(0!==r)for(let a=0;a<e;a++)t[3*a+2]+=r},f}();const c=f.create();return function(){return new l}}));
