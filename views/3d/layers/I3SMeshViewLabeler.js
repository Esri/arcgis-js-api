/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../Graphic","../../../symbols","../../../core/Accessor","../../../core/Handles","../../../core/maybe","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/diffUtils","../../../chunks/vec3f64","../../../layers/graphics/dehydratedFeatures","./graphics/Graphics3DCore","./graphics/Graphics3DScaleVisibility","./i3s/I3SGeometryUtil","../support/LimitGraphicsMap","../webgl-engine/lib/basicInterfaces","../../../symbols/PointSymbol3D"],(function(e,t,r,i,o,s,a,n,c,l,d,p,h,y,u,g,f,b,_,m,v){"use strict";let C=function(t){function i(e){var r;return(r=t.call(this,e)||this).loadedGraphics=new _.LimitGraphicsMap(5e4),r.slicePlaneEnabled=!1,r._renderingInfo={symbol:new v},r._handles=new s,r._graphicsByNode=new Map,r}e._inheritsLoose(i,t);var o=i.prototype;return o.initialize=function(){const e=this.view.basemapTerrain;this._graphicsCore=new g.Graphics3DCore({owner:this,layer:this.layer,preferredUpdatePolicy:m.UpdatePolicy.ASYNC,elevationFeatureExpressionEnabled:!1,graphicSymbolSupported:!1,getRenderingInfoWithoutRenderer:!0,hasZ:!0,hasM:!1,componentFactories:{deconflictor:e=>this.view.deconflictor.addGraphicsOwner(e),labeler:(e,t)=>this.view.labeler.addGraphicsOwner(e,t,{emptySymbolLabelSupported:!0,elevationInfoOverride:{mode:"absolute-height",offset:0},disablePlacement:{logEntityDescription:"3D Object Scene Layer features"}}),scaleVisibility:(t,r)=>new f({graphicsCoreOwner:this,layer:this.layer,queryGraphicUIDsInExtent:r,graphicsCore:t,basemapTerrain:e,layerScaleEnabled:!1})}}),this._graphicsCore.initializePromise.then((()=>this._graphicsCore.startCreateGraphics())).catch((()=>{})),this._handles.add(n.watch((()=>this.layer.labelingInfo),((e,t)=>{h.diff(e,t)&&this._graphicsCore.updateLabelingInfo()})))},o.destroy=function(){this._handles=a.destroyMaybe(this._handles),this._graphicsCore=a.destroyMaybe(this._graphicsCore),this.loadedGraphics=a.destroyMaybe(this.loadedGraphics),this.view=null},o.addNodeMeta=function(e,t){let i=0;const o=e.filteredIds,s=this.view.spatialReference,n=e.featureIds.map(((n,c)=>{b.boundingBoxTop(c,this.collection,e.objectHandle,I);const l=u.makeDehydratedPoint(0,0,0,s);this.view.renderCoordsHelper.fromRenderCoords(I,l);const d=t(c,e);let p=!1;return a.isNone(o)?p=!0:i<o.length&&n===o[i]&&(p=!0,i++),{objectId:n,uid:r.generateUID(),attributes:d,visible:p,geometry:l}}));this.loadedGraphics.addMany(n),this._graphicsByNode.set(e.node.index,n)},o.updateLabelPositions=function(e){const t=this._graphicsByNode.get(e.node.index);let r=0;const i=this.view.spatialReference,o=[];for(let s=0;s<e.featureIds.length;s++){const n=t[r];if(e.featureIds[s]===n.objectId){if(r++,b.boundingBoxTop(s,this.collection,e.objectHandle,I),this.view.renderCoordsHelper.fromRenderCoords(I,I,i),a.isSome(n.geometry)&&"point"===n.geometry.type&&n.geometry.x===I[0]&&n.geometry.y===I[1]&&n.geometry.z===I[2])continue;a.isSome(n.geometry)&&"point"===n.geometry.type?(n.geometry.x=I[0],n.geometry.y=I[1],n.geometry.z=I[2]):n.geometry=u.makeDehydratedPoint(I[0],I[1],I[2],i),o.push(n.uid)}}this._graphicsCore.updateLabelingInfo(o)},o.setNodeMetaAttributes=function(e,t){const r=this._graphicsByNode.get(e.node.index),i=new Array(r.length);for(let o=0;o<r.length;o++){const s=r[o];s.attributes=t(o,e),i[o]=s.uid}this._graphicsCore.updateLabelingInfo(i)},o.applyFilterChange=function(e){const t=this._graphicsByNode.get(e.node.index);if(t)if(a.isNone(e.filteredIds))for(const r of t)r.visible||(r.visible=!0,w.graphic=r,w.property="visible",w.oldValue=!1,w.newValue=!0,this._graphicsCore.graphicUpdateHandler(w));else{let r=0;for(const i of t){const t=i.visible;r<e.filteredIds.length&&i.objectId===e.filteredIds[r]?(i.visible=!0,r++):i.visible=!1,t!==i.visible&&(w.graphic=i,w.property="visible",w.oldValue=t,w.newValue=i.visible,this._graphicsCore.graphicUpdateHandler(w))}}},o.removeNodeMeta=function(e){this.loadedGraphics.removeManyByObjectId(e.featureIds)},o.getRenderingInfo=function(){return this._renderingInfo},o.notifyGraphicGeometryChanged=function(){},o.notifyGraphicVisibilityChanged=function(){},e._createClass(i,[{key:"updating",get:function(){return this._graphicsCore?.updating??!1}},{key:"updatePolicy",get:function(){return this._graphicsCore.effectiveUpdatePolicy}},{key:"usedMemory",get:function(){return this._graphicsCore.usedMemory}},{key:"unloadedMemoryEstimate",get:function(){return this._graphicsCore.unprocessedMemoryEstimate}},{key:"test",get:function(){return{graphicsCore:this._graphicsCore}}}]),i}(o);t.__decorate([c.property()],C.prototype,"view",void 0),t.__decorate([c.property()],C.prototype,"layer",void 0),t.__decorate([c.property()],C.prototype,"collection",void 0),t.__decorate([c.property()],C.prototype,"loadedGraphics",void 0),t.__decorate([c.property()],C.prototype,"updating",null),t.__decorate([c.property()],C.prototype,"slicePlaneEnabled",void 0),t.__decorate([c.property()],C.prototype,"_graphicsCore",void 0),C=t.__decorate([p.subclass("esri.views.3d.layers.I3SMeshViewLabeler")],C);const w={graphic:null,property:null,oldValue:null,newValue:null},I=y.create();return C}));
