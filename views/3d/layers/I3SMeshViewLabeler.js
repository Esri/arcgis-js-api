/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import i from"../../../Graphic.js";import"../../../symbols.js";import t from"../../../core/Accessor.js";import r from"../../../core/Handles.js";import{destroyMaybe as s,isNone as o,isSome as a}from"../../../core/maybe.js";import{watch as l}from"../../../core/reactiveUtils.js";import{property as p}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../../core/accessorSupport/decorators/subclass.js";import{diff as n}from"../../../core/accessorSupport/diffUtils.js";import{c as h}from"../../../chunks/vec3f64.js";import{makeDehydratedPoint as d}from"../../../layers/graphics/dehydratedFeatures.js";import{Graphics3DCore as y}from"./graphics/Graphics3DCore.js";import g from"./graphics/Graphics3DScaleVisibility.js";import{boundingBoxTop as m}from"./i3s/I3SGeometryUtil.js";import{LimitGraphicsMap as f}from"../support/LimitGraphicsMap.js";import{UpdatePolicy as u}from"../webgl-engine/lib/basicInterfaces.js";import b from"../../../symbols/PointSymbol3D.js";let _=class extends t{constructor(e){super(e),this.loadedGraphics=new f(5e4),this.slicePlaneEnabled=!1,this._renderingInfo={symbol:new b},this._handles=new r,this._graphicsByNode=new Map,this._scaleVisibility=new g({layerScaleEnabled:!1})}initialize(){this._graphicsCore=new y({owner:this,layer:this.layer,preferredUpdatePolicy:u.ASYNC,elevationFeatureExpressionEnabled:!1,graphicSymbolSupported:!1,getRenderingInfoWithoutRenderer:!0,hasZ:!0,hasM:!1});const e=this.view.basemapTerrain;this._scaleVisibility.setup(this,this.layer,((e,i,t)=>this._graphicsCore.spatialIndex.queryGraphicUIDsInExtent(e,i,t)),this._graphicsCore,e);const i=this.view.labeler.addGraphicsOwner(this._graphicsCore,this._scaleVisibility,{emptySymbolLabelSupported:!0,elevationInfoOverride:{mode:"absolute-height",offset:0},disablePlacement:{logEntityDescription:"3D Object Scene Layer features"}}),t=this.view.deconflictor.addGraphicsOwner(this._graphicsCore);this._graphicsCore.setup({labeler:i,deconflictor:t,scaleVisibility:this._scaleVisibility}).then((()=>this._graphicsCore.startCreateGraphics())).catch((()=>{})),this._handles.add(l((()=>this.layer.labelingInfo),((e,i)=>{n(e,i)&&this._graphicsCore.updateLabelingInfo()})))}destroy(){this._handles=s(this._handles),this._scaleVisibility=s(this._scaleVisibility),this._graphicsCore=s(this._graphicsCore),this.loadedGraphics=s(this.loadedGraphics),this.view=null}addNodeMeta(e,t){let r=0;const s=e.filteredIds,a=this.view.spatialReference,l=e.featureIds.map(((l,p)=>{m(p,this.collection,e.objectHandle,C);const c=d(0,0,0,a);this.view.renderCoordsHelper.fromRenderCoords(C,c);const n=t(p,e);let h=!1;return o(s)?h=!0:r<s.length&&l===s[r]&&(h=!0,r++),{objectId:l,uid:i.generateUID(),attributes:n,visible:h,geometry:c}}));this.loadedGraphics.addMany(l),this._graphicsByNode.set(e.node.index,l)}updateLabelPositions(e){const i=this._graphicsByNode.get(e.node.index);let t=0;const r=this.view.spatialReference,s=[];for(let o=0;o<e.featureIds.length;o++){const l=i[t];if(e.featureIds[o]===l.objectId){if(t++,m(o,this.collection,e.objectHandle,C),this.view.renderCoordsHelper.fromRenderCoords(C,C,r),a(l.geometry)&&"point"===l.geometry.type&&l.geometry.x===C[0]&&l.geometry.y===C[1]&&l.geometry.z===C[2])continue;a(l.geometry)&&"point"===l.geometry.type?(l.geometry.x=C[0],l.geometry.y=C[1],l.geometry.z=C[2]):l.geometry=d(C[0],C[1],C[2],r),s.push(l.uid)}}this._graphicsCore.updateLabelingInfo(s)}setNodeMetaAttributes(e,i){const t=this._graphicsByNode.get(e.node.index),r=new Array(t.length);for(let s=0;s<t.length;s++){const o=t[s];o.attributes=i(s,e),r[s]=o.uid}this._graphicsCore.updateLabelingInfo(r)}applyFilterChange(e){const i=this._graphicsByNode.get(e.node.index);if(i)if(o(e.filteredIds))for(const t of i)t.visible||(t.visible=!0,v.graphic=t,v.property="visible",v.oldValue=!1,v.newValue=!0,this._graphicsCore.graphicUpdateHandler(v));else{let t=0;for(const r of i){const i=r.visible;t<e.filteredIds.length&&r.objectId===e.filteredIds[t]?(r.visible=!0,t++):r.visible=!1,i!==r.visible&&(v.graphic=r,v.property="visible",v.oldValue=i,v.newValue=r.visible,this._graphicsCore.graphicUpdateHandler(v))}}}removeNodeMeta(e){this.loadedGraphics.removeManyByObjectId(e.featureIds)}getRenderingInfo(){return this._renderingInfo}notifyGraphicGeometryChanged(){}notifyGraphicVisibilityChanged(){}get updatePolicy(){return this._graphicsCore.effectiveUpdatePolicy}get usedMemory(){return this._graphicsCore.usedMemory}get unloadedMemoryEstimate(){return this._graphicsCore.unprocessedMemoryEstimate}get test(){return{graphicsCore:this._graphicsCore}}};e([p()],_.prototype,"view",void 0),e([p()],_.prototype,"layer",void 0),e([p()],_.prototype,"collection",void 0),e([p()],_.prototype,"loadedGraphics",void 0),e([p({aliasOf:"_graphicsCore.updating"})],_.prototype,"updating",void 0),e([p()],_.prototype,"slicePlaneEnabled",void 0),e([p()],_.prototype,"_graphicsCore",void 0),_=e([c("esri.views.3d.layers.I3SMeshViewLabeler")],_);const v={graphic:null,property:null,oldValue:null,newValue:null},C=h(),j=_;export{j as default};
