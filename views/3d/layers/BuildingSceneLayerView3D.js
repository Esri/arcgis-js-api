/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../Graphic.js";import s from"../../../core/Accessor.js";import t from"../../../core/Collection.js";import{handlesGroup as i}from"../../../core/handleUtils.js";import o from"../../../core/Logger.js";import{isNone as n}from"../../../core/maybe.js";import{isAbortError as l}from"../../../core/promiseUtils.js";import{watch as a,syncAndInitial as u}from"../../../core/reactiveUtils.js";import{property as p}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../layers/buildingSublayers/BuildingGroupSublayer.js";import y from"./BuildingComponentSublayerView3D.js";import{BuildingSublayerView3DMixin as h}from"./BuildingSublayerView3D.js";import{LayerView3D as d}from"./LayerView3D.js";import{parseFilterMode as g}from"./i3s/BuildingFilterUtil.js";import{checkSpatialReference as m}from"./i3s/I3SUtil.js";import{updatingProgress as f}from"../support/updatingProperties.js";import b from"../../layers/BuildingSceneLayerView.js";const w=o.getLogger("esri.views.3d.layers.BuildingSceneLayerView3D"),V=h(s);let j=class extends(d(b)){constructor(){super(...arguments),this.type="building-scene-3d",this.sublayerViews=new t,this._abortController=new AbortController,this._loadingComponents=0}get filterExpression(){const e=this.layer.activeFilterId,r=null!=e?this.layer.filters.find((r=>r.id===e)):null,s=null!=r?r.filterBlocks.find((e=>"solid"===e.filterMode.type)):null;return s?s.filterExpression:null}get filterExpressions(){const e=this.layer.activeFilterId,r=null!=e?this.layer.filters.find((r=>r.id===e)):null;return r&&r.filterBlocks?r.filterBlocks.toArray().map((e=>[e.filterExpression,g(e)])):[]}get updatingProgressValue(){const e=this.sublayerViews,r=this._loadingComponents+(e?e.length:0);return e.reduce(((e,r)=>e+r.updatingProgress),0)/r}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some((e=>e.updating))}initialize(){m(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach((e=>e.destroy())),this.sublayerViews=null),this._abortController.abort(),this._abortController=null}_initializeSubLayerViews(e,r){const s=this,t=this.view;e.forEach((e=>{if(!e.isEmpty)if("building-group"===e.type){const s=new V({sublayer:e,view:t,parent:r});this._initializeSubLayerViews(e.sublayers,s)}else"mesh"===e.geometryType&&(this._loadingComponents++,e.load({signal:this._abortController.signal}).then((()=>{const i=new y({sublayer:e,layerView:s,view:t,parent:r});this.sublayerViews.push(i),this.handles.add([a((()=>i.updating),(()=>this.notifyChange("updating")),u),a((()=>i.updatingProgress),(()=>this.notifyChange("updatingProgressValue")),u)])})).catch((r=>{l(r)||w.error(`Error while creating view for sublayer ${e.id}\nLayer: ${this.layer.url}\n`,r)})).then((()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")})))}))}getGraphicFromIntersectorTarget(e){for(const r of this.sublayerViews.items)if(r.sublayer.uid===e.sublayerUid)return r.getGraphicFromIntersectorTarget(e);return null}async fetchPopupFeatures(e,r){if(n(r)||!r.clientGraphics||0===r.clientGraphics.length)return;const s=this._findComponent(r.clientGraphics[0].sourceLayer);return n(s)?void 0:s.fetchPopupFeatures(e,r)}whenGraphicBounds(e){const r=this._findComponent(e.sourceLayer);return n(r)?Promise.reject():r.whenGraphicBounds(e)}getAABBFromIntersectorTarget(e){for(const r of this.sublayerViews.items)if(r.sublayer.uid===e.sublayerUid)return r.getAABBFromIntersectorTarget(e);return null}_findComponent(e){return this.sublayerViews.find((r=>e===r.sublayer))}highlight(e){e instanceof r?e=[e]:e instanceof t&&(e=e.toArray());const s=[];if(Array.isArray(e)&&e.length>0&&e[0]instanceof r){const r=e,t=new Map;for(const e of r){let r=t.get(e.sourceLayer);null==r&&(r=[],t.set(e.sourceLayer,r)),r.push(e)}this.sublayerViews.forEach((e=>{const r=t.get(e.sublayer);r&&s.push(e.highlight(r))}))}return i(s)}getUsedMemory(){return this.sublayerViews.reduce(((e,r)=>e+r.getUsedMemory()),0)}getUnloadedMemory(){return this.sublayerViews.reduce(((e,r)=>e+r.getUnloadedMemory()),0)}ignoresMemoryFactor(){return!1}};e([p()],j.prototype,"sublayerViews",void 0),e([p({readOnly:!0})],j.prototype,"filterExpression",null),e([p({readOnly:!0})],j.prototype,"filterExpressions",null),e([p(f)],j.prototype,"updatingProgress",void 0),e([p({readOnly:!0,dependsOn:[]})],j.prototype,"updatingProgressValue",null),j=e([c("esri.views.3d.layers.BuildingSceneLayerView3D")],j);const C=j;export{C as default};
