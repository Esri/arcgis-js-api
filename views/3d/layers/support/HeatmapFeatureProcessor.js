/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/byteSizeEstimations","../../../../core/HandleOwner","../../../../core/handleUtils","../../../../core/Logger","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/projection","../../../../geometry/support/scaleUtils","../../../../layers/graphics/dehydratedFeatures","../../../../layers/graphics/featureConversionUtils","../../../../layers/graphics/OptimizedFeature","../../../../layers/graphics/OptimizedGeometry","../../../../layers/graphics/data/FeatureStore","../../../../layers/support/fieldUtils","../../../../renderers/support/heatmapUtils","../interfaces","./FeatureVisibilityFilter","../../terrain/OverlayRenderer","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/ContentObjectType","../../webgl-engine/lib/DrapedHeatmapRenderer","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/ModelDirtyTypes","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/UpdatePolicy","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/HeatmapDensityMaterial","../../../support/layerViewUtils","../../../webgl/enums","../../../webgl/heatmapTextureUtils"],(function(e,t,r,a,i,o,s,n,l,p,u,d,c,m,y,h,_,f,F,g,P,b,R,S,v,H,w,T,k,x,V,M,A,G,O,N,I,D,C,U){"use strict";const E="esri.views.3d.layers.support.HeatmapFeatureProcessor",L=s.getLogger(E),j=112;e.HeatmapFeatureProcessor=function(e){function r(t){var r;return(r=e.call(this,t)||this).type="heatmap",r.preferredUpdatePolicy=O.UpdatePolicy.ASYNC,r.dataExtent=null,r.drapeSourceType=H.DrapeSourceType.Features,r._renderGeometries=new Map,r._fieldTotal=0,r._drapeSourceRenderer=null,r._dataType=C.PixelType.HALF_FLOAT,r._pixelFormat=C.PixelFormat.RGBA,r.initializePromise=Promise.resolve(),r}t._inheritsLoose(r,e);var i=r.prototype;return i.initialize=function(){this._featureStore=new R({geometryType:"esriGeometryPoint",hasZ:this.hasZ,hasM:this.hasM});const{dataType:e,samplingMode:t,pixelFormat:r,internalFormat:a}=U.loadHeatmapTextureConfiguration(this._renderView.renderingContext,L);this._dataType=e,this._pixelFormat=r;const i=e!==C.PixelType.FLOAT;this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerDrapeSource(this,V.DrapedHeatmapRenderer,{...this._rendererParameters,dataType:e,samplingMode:t,pixelFormat:r,internalFormat:a}),this._material=new I.HeatmapDensityMaterial({usesHalfFloats:i}),this._materialWithField=new I.HeatmapDensityMaterial({usesHalfFloats:i,isAttributeDriven:!0}),this._filterVisibility=new w.FeatureVisibilityFilter({context:{layerView:this.owner,featureStore:this.featureStore,getFeatureCount:()=>this._loadedPointGraphics.length,setAllFeaturesVisibility:e=>this._setAllFeaturesVisibility(e),clearFeaturesVisibility:()=>this._setAllFeaturesVisibility(!0),updateFeatureVisibilities:e=>this._updateFeatureVisibilities(e)}}),this.updatingHandles.addOnCollectionChange((()=>this._loadedPointGraphics),(e=>this._onLoadedFeaturesChange(e)),l.initial),this.updatingHandles.addWhen((()=>this._materialParameters),(e=>this._forEachMaterial((t=>t.setParameters(e)))),l.initial),this.updatingHandles.add((()=>this._rendererParameters),(e=>this._drapeSourceRenderer.set(e))),this.updatingHandles.add((()=>this._heatmapRendererField),(()=>{this._recreate()}),l.sync),this.updatingHandles.add((()=>({fieldName:this._heatmapRendererFieldName,numeric:this._heatmapRendererFieldIsNumeric})),(({fieldName:e,numeric:t})=>{if(n.isSome(e)&&t){let t=0;this._featureStore.forEach((r=>t+=r.attributes[e]??0)),this._fieldTotal=t}else this._fieldTotal=this._featureStore.numFeatures}),l.initial),this.handles.add([l.watch((()=>({fieldName:this._heatmapRendererFieldName,field:this._heatmapRendererField})),(({fieldName:e,field:t})=>{e&&!t&&L.warn(`Heatmap renderer field '${e}' for layer '${this.layer.title??this.layer.id}' not found`)})),l.watch((()=>({field:this._heatmapRendererField,numeric:this._heatmapRendererFieldIsNumeric})),(({field:e,numeric:t})=>{n.isSome(e)&&!t&&L.warn(`Heatmap renderer field '${e.name}' for layer '${this.layer.title??this.layer.id}' does not contain numeric values and cannot be used to drive the heatmap density`)})),o.makeHandle((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this)))])},i.destroy=function(){this._renderGeometries.clear(),this._material=n.disposeMaybe(this._material),this._materialWithField=n.disposeMaybe(this._materialWithField),this._featureStore.clear(),this._featureStore=null},i.whenGraphicBounds=function(){var e=t._asyncToGenerator((function*(){return null}));function r(){return e.apply(this,arguments)}return r}(),i.computeAttachmentOrigin=function(){return null},i.highlight=function(){return z},i.maskOccludee=function(){return z},i.setObjectIdVisibility=function(){},i.refreshFilter=function(){this.filterVisibility.reapply()},i._onLoadedFeaturesChange=function(e){if(!this._featuresArePoints)return;const{objectIdField:t}=this.layer;this._featureStore.removeManyById(e.removed.map((e=>F.getObjectId(e,t)))),this._featureStore.addMany(e.added.map((e=>{const r=new P.OptimizedFeature(g.convertFromPoint(new b,e.geometry),e.attributes,n.applySome(e.centroid,(e=>g.convertFromPoint(new b,e))),F.getObjectId(e,t));return r.displayId=e.uid,r})));const r=e.added,a=e.removed;this._fieldTotal+=this._computeFieldTotalChange(r,a);const i=n.mapSome(a,(({uid:e})=>{const t=this._renderGeometries.get(e);return this._renderGeometries.delete(e),t})),o=r.map((e=>{const t=this._pointGraphicToRenderGeometry(e);return this._renderGeometries.set(e.uid,t),t}));i.length>0&&this._drapeSourceRenderer.removeGeometries(i,A.DirtyOperation.REMOVE),o.length>0&&this._drapeSourceRenderer.addGeometries(o,A.DirtyOperation.ADD),(o.length>0||i.length>0)&&(this.filterVisibility.reapply(),this._renderView.requestRender())},i._recreate=function(){if(!this._loadedPointGraphics)return;const e=this._loadedPointGraphics.toArray();this._onLoadedFeaturesChange({added:e,removed:e})},i._pointGraphicToRenderGeometry=function(e){const t=this._heatmapRendererFieldName,r=n.isSome(t)?this._materialWithField:this._material,a=h.create();_.projectPointToVector(e.geometry,a,this._overlaySpatialReference),a[2]=T.DRAPED_Z;const i=[[N.VertexAttribute.POSITION,new k.Attribute(a,a.length)]],o=this._heatmapRendererFieldIsNumeric;n.isSome(t)&&i.push([N.VertexAttribute.FEATUREATTRIBUTE,new k.Attribute([o?e.attributes[t]??0:0],1)]);const s=new G.RenderGeometry(new M.Geometry(r,i,null,null,x.ContentObjectType.Point),{layerUid:this.layer.uid,graphicUid:e.uid});return y.copy(s.boundingSphere,a),s.visible=this.filterVisibility.defaultVisibility,s},i._forEachMaterial=function(e){e(this._material),e(this._materialWithField)},i._computeFieldTotalChange=function(e,t){if(n.isNone(this._heatmapRendererFieldName)||!this._heatmapRendererFieldIsNumeric)return e.length-t.length;const r=this._heatmapRendererFieldName,a=(e,t)=>e+(t.attributes[r]??0);return e.reduce(a,0)-t.reduce(a,0)},i._clampSearchRadius=function(e){return e>j&&L.warnOnce(`SceneView supports a maximum radius of ${j} pt for HeatmapRenderer.`),Math.min(e,j)},i._updateFeatureVisibilities=function(e){const t=[];this._featureStore.forEach((({objectId:r,displayId:a})=>{const i=e(r),o=this._renderGeometries.get(a);o&&o.visible!==i&&(t.push(o),o.visible=i)})),this._drapeSourceRenderer.modifyGeometries(t,A.DirtyState.VISIBILITY)},i._setAllFeaturesVisibility=function(e){const t=[];for(const r of this._renderGeometries.values())r.visible!==e&&(t.push(r),r.visible=e);this._drapeSourceRenderer.modifyGeometries(t,A.DirtyState.VISIBILITY)},t._createClass(r,[{key:"layer",get:function(){return this.owner.layer}},{key:"featureStore",get:function(){return this._featureStore}},{key:"updating",get:function(){return this.updatingHandles.updating||this.filterVisibility.updating}},{key:"updatingRemaining",get:function(){return 0}},{key:"suspendInfo",get:function(){return{}}},{key:"legendEnabled",get:function(){return!0}},{key:"filterVisibility",get:function(){return this._filterVisibility}},{key:"displayFeatureLimit",get:function(){const e=this.owner?.view?.resourceController?.memoryController?.memoryFactor??1,t=this.owner?.view?.qualitySettings,r=t?Math.ceil(t.heatmap.maxTotalNumberOfFeatures*e):0;return{minimumTotalNumberOfFeatures:0,maximumTotalNumberOfFeatures:r,maximumTotalNumberOfPrimitives:r*2,maximumNumberOfFeatures:r}}},{key:"hasZ",get:function(){return"hasZ"in this.layer&&this.layer.hasZ}},{key:"hasM",get:function(){return"hasM"in this.layer&&this.layer.hasM}},{key:"view",get:function(){return this.owner.view}},{key:"fullOpacity",get:function(){return this.owner.fullOpacity}},{key:"updatePolicy",get:function(){return this.owner.updatePolicy}},{key:"scaleVisibilitySuspended",get:function(){if(!this._isScaleRangeActive)return!1;const{minScale:e,maxScale:t}=this.layer.effectiveScaleRange,{scale:r}=this.view;return!D.scaleBoundsPredicate(r,e??0,t??0)}},{key:"usedMemory",get:function(){const e=this.usedMemoryPerFeature*this._featureStore.numFeatures,t=this._pixelFormat===C.PixelFormat.RED?1:4,r=this._dataType===C.PixelType.FLOAT?4:2,a=Math.ceil((this._overlayRenderer?.overlays[0]?.resolution??0)*this._densityMapPixelRatio)??0;return a*a*t*r+e}},{key:"usedMemoryPerFeature",get:function(){const e=this._loadedPointGraphics.find((()=>!0));if(n.isNone(e))return 0;const t=a.estimateAttributesObjectSize(e),r=a.estimateNumberByteSize(),i=6;return i*a.estimateFixedArraySize([0,0,0],r)+i*a.estimateFixedArraySize([0,0],r)+(this._heatmapRendererFieldIsNumeric?i*r:0)+t}},{key:"loadedFeatures",get:function(){return this._featureStore.numFeatures}},{key:"unprocessedMemoryEstimate",get:function(){return 0}},{key:"performanceInfo",get:function(){return{core:{visible:this._visibleFeatures,missing:0,pending:0},elevationUpdating:!1,visibilityFrustum:!0,visibilityScale:!0}}},{key:"renderer",get:function(){return this._heatmapRenderer}},{key:"_overlayRenderer",get:function(){return this.view.basemapTerrain.overlayManager.renderer}},{key:"_overlaySpatialReference",get:function(){return n.unwrap(this._overlayRenderer.spatialReference)}},{key:"_rendererParameters",get:function(){return{...this._radiusParameter,...this._densityParameters,...this._colorRampParameter,...this._pixelRatioParameter}}},{key:"_materialParameters",get:function(){return{...this._radiusParameter,...this._resolutionForScaleParameter}}},{key:"_densityParameters",get:function(){const e=this._heatmapRenderer;if(n.isNone(e))return null;const{minDensity:t,maxDensity:r}=e;return{minDensity:t,maxDensity:r,fieldTotal:this._fieldTotal}}},{key:"_radiusParameter",get:function(){return n.applySome(this._heatmapRenderer,(({radius:e})=>({searchRadius:p.pt2px(this._clampSearchRadius(e))})))}},{key:"_resolutionForScaleParameter",get:function(){return n.applySome(this._heatmapRenderer,(({referenceScale:e})=>({resolutionForScale:0===e?0:f.getResolutionForScale(e,this.view.spatialReference)})))}},{key:"_colorRampParameter",get:function(){return n.applySome(this._heatmapRenderer,(e=>({colorRampData:v.generateGradient(e.colorStops)})))}},{key:"_pixelRatioParameter",get:function(){return{pixelRatio:this._densityMapPixelRatio}}},{key:"_densityMapPixelRatio",get:function(){const e=this.owner?.view?.resourceController?.memoryController?.memoryFactor??1;return(this.owner?.view?.qualitySettings.heatmap.pixelRatio??1)*Math.sqrt(e)}},{key:"_renderView",get:function(){return this.view._stage.renderView}},{key:"_featuresArePoints",get:function(){return"point"===this.layer.geometryType}},{key:"_loadedPointGraphics",get:function(){return this.owner.loadedGraphics}},{key:"_heatmapRenderer",get:function(){const e=this.layer.renderer;return"heatmap"===e?.type?e:null}},{key:"_heatmapRendererFieldName",get:function(){return n.applySome(this._heatmapRenderer,(e=>e.field))}},{key:"_heatmapRendererField",get:function(){return n.applySome(this._heatmapRendererFieldName,(e=>this.layer.fieldsIndex.get(e)))}},{key:"_heatmapRendererFieldIsNumeric",get:function(){const e=this._heatmapRendererField;return!n.isNone(e)&&S.isNumericField(e)}},{key:"_isScaleRangeActive",get:function(){const{layer:e}=this;if(!("effectiveScaleRange"in e))return!1;const{minScale:t,maxScale:r}=e.effectiveScaleRange;return D.isScaleRangeActive(t,r)}},{key:"_visibleFeatures",get:function(){let e=0;return this._renderGeometries.forEach((t=>{t.visible&&++e})),e}},{key:"test",get:function(){return{visibleFeatureCount:this._visibleFeatures}}}]),r}(i.HandleOwner),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"type",void 0),r.__decorate([u.property({constructOnly:!0})],e.HeatmapFeatureProcessor.prototype,"owner",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"layer",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"featureStore",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"updating",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"updatingRemaining",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"suspendInfo",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"legendEnabled",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"filterVisibility",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"displayFeatureLimit",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"preferredUpdatePolicy",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"hasZ",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"hasM",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"dataExtent",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"view",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"fullOpacity",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"updatePolicy",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"drapeSourceType",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"scaleVisibilitySuspended",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"renderer",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_featureStore",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_filterVisibility",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_overlayRenderer",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_overlaySpatialReference",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_rendererParameters",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_materialParameters",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_densityParameters",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_radiusParameter",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_resolutionForScaleParameter",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_colorRampParameter",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_pixelRatioParameter",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_densityMapPixelRatio",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_renderGeometries",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_material",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_materialWithField",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_renderView",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_featuresArePoints",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_loadedPointGraphics",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRenderer",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRendererFieldName",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRendererField",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRendererFieldIsNumeric",null),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_fieldTotal",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_drapeSourceRenderer",void 0),r.__decorate([u.property()],e.HeatmapFeatureProcessor.prototype,"_isScaleRangeActive",null),e.HeatmapFeatureProcessor=r.__decorate([m.subclass(E)],e.HeatmapFeatureProcessor);const z=o.makeHandle();e.MAX_RADIUS_PT=j,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
