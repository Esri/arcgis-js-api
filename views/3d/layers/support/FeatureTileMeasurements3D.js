/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../core/screenUtils","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../geometry/support/aaBoundingRect","../../support/geometryUtils","../../webgl-engine/lib/Camera","./FeatureTileVisibility3D"],(function(e,t,i,r,n,s,a,c){"use strict";let o=function(){function e(e){this.camera=new a,this.focusOnMap=[0,0],this.screenRect=n.create(),this.tileSize=e.tileSize,this.maxVerticalScreenSize=e.maxVerticalScreenSize,this.renderCoordsHelper=e.renderCoordsHelper,this.tilingScheme=e.tilingScheme,this.visibility=new c(e.renderCoordsHelper)}var t=e.prototype;return t.begin=function(e,t,i){this.camera.copyFrom(e),this.surfaceElevation=i,this.focusOnMap[0]=t.x,this.focusOnMap[1]=t.y,n.fromValues(0,0,e.fullWidth,e.fullHeight,this.screenRect),this.visibility.begin(this.camera,i)},t.end=function(){this.visibility.end()},t.updateTile=function(e){e.measures.visibility=this.visibility.calculate(e),e.measures.distance=n.distance(e.extent,this.focusOnMap),0!==e.measures.visibility&&this.updateScreenMeasure(e)},t.updateScreenMeasure=function(e){const t=h,i=1<<t,r=e.measures.screenRect;n.empty(r);let s=0;const a=e.lij[0]+t,c=e.lij[1]<<t,o=e.lij[2]<<t,l=this.tileSizeWithBias(e),u=l*l;let d=!1;for(let h=0;h<i;h++){for(let t=0;t<i;t++){if(s+=this.computeScreenArea(e,a,c+h,o+t,r).area,d=s>u&&n.height(r)>this.maxVerticalScreenSize,d)break}if(d)break}e.measures.shouldSplit=s>u},t.tileSizeWithBias=function(e){return 1===e.measures.visibility?this.tileSize*d:this.tileSize},t.computeScreenArea=function(e,t,i,r,a){const c=1===e.measures.visibility,o=p.points;this.projectToScreen(t,i,r,c,o),n.empty(l);for(let s=0;s<4;s++)n.expandPointInPlace(l,o[s]);return n.expand(a,l),n.intersection(l,this.screenRect,u),p.screenOverlap=n.area(u)/n.area(l),p.area=s.triangle.areaPoints2d(o[0],o[1],o[2])+s.triangle.areaPoints2d(o[0],o[2],o[3]),p},t.projectToScreen=function(e,t,i,r,n){this.tilingScheme.ensureMaxLod(e),this.tilingScheme.getExtent(e,t,i,f),this.toRenderCoords(f,0,3,S[0]),this.toRenderCoords(f,2,3,S[1]),this.toRenderCoords(f,2,1,S[2]),this.toRenderCoords(f,0,1,S[3]),r&&(this.projectToPlane(S,this.camera.frustum[4]),this.projectToPlane(S,this.camera.frustum[3]),this.projectToPlane(S,this.camera.frustum[2]));for(let s=0;s<4;s++)this.camera.projectToRenderScreen(S[s],g),this.camera.renderToScreen(g,n[s])},t.projectToPlane=function(e,t){for(let r=0;r<4;r++)y[r]=s.plane.signedDistance(t,e[r]);const i=Math.max(y[0],y[1],y[2],y[3]);if(i>0){const n=r.scale(m,s.plane.normal(t),-i);for(let t=0;t<4;t++)r.add(e[t],e[t],n)}},t.toRenderCoords=function(e,t,i,r){return m[0]=e[t],m[1]=e[i],m[2]=this.surfaceElevation,this.renderCoordsHelper.toRenderCoords(m,this.tilingScheme.spatialReference,r),r},e}();const l=n.create(),u=n.create(),h=2,d=5,p={points:[t.createScreenPointArray(),t.createScreenPointArray(),t.createScreenPointArray(),t.createScreenPointArray()],area:0,screenOverlap:0},f=n.create(),m=i.create(),S=[i.create(),i.create(),i.create(),i.create()],y=[0,0,0,0],g=t.createRenderScreenPointArray3();e.FeatureTileMeasurements3D=o,e.default=o,Object.defineProperty(e,"__esModule",{value:!0})}));
