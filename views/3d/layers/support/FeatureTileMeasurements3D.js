/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../../core/screenUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/plane","../../../../geometry/support/triangle","./FeatureTileVisibility3D","../../webgl-engine/lib/Camera"],(function(e,t,i,r,s,n,o,c,a){"use strict";let l=function(){function e(e){this.camera=new a,this.focusOnMap=[0,0],this.screenRect=s.create(),this.tileSize=e.tileSize,this.renderCoordsHelper=e.renderCoordsHelper,this.tilingScheme=e.tilingScheme,this.visibility=new c.FeatureTileVisibility3D(e.renderCoordsHelper)}var t=e.prototype;return t.begin=function(e,t,i){this.camera.copyFrom(e),this.surfaceElevation=i,this.focusOnMap[0]=t.x,this.focusOnMap[1]=t.y,s.fromValues(0,0,e.fullWidth,e.fullHeight,this.screenRect),this.visibility.begin(this.camera,i)},t.end=function(){this.visibility.end()},t.updateTile=function(e){e.measures.visibility=this.visibility.calculate(e),e.measures.distance=s.distance(e.extent,this.focusOnMap),0!==e.measures.visibility&&this.updateScreenMeasure(e)},t.updateScreenMeasure=function(e){const t=d,i=1<<t,r=e.measures.screenRect;s.empty(r);let n=0;const o=e.lij[0]+t,c=e.lij[1]<<t,a=e.lij[2]<<t,l=this.tileSizeWithBias(e),u=l*l;for(let s=0;s<i;s++)for(let t=0;t<i;t++)if(n+=this.computeScreenArea(e,o,c+s,a+t,r),n>u)return void(e.measures.shouldSplit=!0);e.measures.shouldSplit=!1},t.tileSizeWithBias=function(e){return 1===e.measures.visibility?this.tileSize*p:this.tileSize},t.computeScreenArea=function(e,t,i,r,n){const c=1===e.measures.visibility;this.projectToScreen(t,i,r,c,f),s.empty(u);for(let o=0;o<4;o++)s.expandPointInPlace(u,f[o]);return s.expand(n,u),s.intersection(u,this.screenRect,h),o.areaPoints2d(f[0],f[1],f[2])+o.areaPoints2d(f[0],f[2],f[3])},t.projectToScreen=function(e,t,i,r,s){this.tilingScheme.ensureMaxLod(e),this.tilingScheme.getExtent(e,t,i,m),this.toRenderCoords(m,0,3,y[0]),this.toRenderCoords(m,2,3,y[1]),this.toRenderCoords(m,2,1,y[2]),this.toRenderCoords(m,0,1,y[3]),r&&(this.projectToPlane(y,this.camera.frustum[4]),this.projectToPlane(y,this.camera.frustum[3]),this.projectToPlane(y,this.camera.frustum[2]));for(let n=0;n<4;n++)this.camera.projectToRenderScreen(y[n],b),this.camera.renderToScreen(b,s[n])},t.projectToPlane=function(e,t){for(let i=0;i<4;i++)g[i]=n.signedDistance(t,e[i]);const r=Math.max(g[0],g[1],g[2],g[3]);if(r>0){const s=i.scale(S,n.normal(t),-r);for(let t=0;t<4;t++)i.add(e[t],e[t],s)}},t.toRenderCoords=function(e,t,i,r){return S[0]=e[t],S[1]=e[i],S[2]=this.surfaceElevation,this.renderCoordsHelper.toRenderCoords(S,this.tilingScheme.spatialReference,r),r},e}();const u=s.create(),h=s.create(),d=2,p=5,f=[t.createScreenPointArray(),t.createScreenPointArray(),t.createScreenPointArray(),t.createScreenPointArray()],m=s.create(),S=r.create(),y=[r.create(),r.create(),r.create(),r.create()],g=[0,0,0,0],b=t.createRenderScreenPointArray3();e.FeatureTileMeasurements3D=l,e.default=l,Object.defineProperty(e,"__esModule",{value:!0})}));
