/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{createScreenPointArray as e,createRenderScreenPointArray3 as t}from"../../../../core/screenUtils.js";import{g as i,a as r}from"../../../../chunks/vec3.js";import{c as s}from"../../../../chunks/vec3f64.js";import{create as o,fromValues as n,distance as a,empty as c,expandPointInPlace as l,expand as h}from"../../../../geometry/support/aaBoundingRect.js";import{PlaneIndex as m}from"../../../../geometry/support/frustum.js";import{signedDistance as u,normal as p}from"../../../../geometry/support/plane.js";import{areaPoints2d as d}from"../../../../geometry/support/triangle.js";import{Visibility as f}from"./FeatureTileDescriptor3D.js";import{FeatureTileVisibility3D as S}from"./FeatureTileVisibility3D.js";import{Camera as _}from"../../webgl-engine/lib/Camera.js";class j{constructor(e){this.camera=new _,this.focusOnMap=[0,0],this.screenRect=o(),this.tileSize=e.tileSize,this.renderCoordsHelper=e.renderCoordsHelper,this.tilingScheme=e.tilingScheme,this.visibility=new S(e.renderCoordsHelper)}begin(e,t,i){this.camera.copyFrom(e),this.surfaceElevation=i,this.focusOnMap[0]=t.x,this.focusOnMap[1]=t.y,n(0,0,e.fullWidth,e.fullHeight,this.screenRect),this.visibility.begin(this.camera,i)}end(){this.visibility.end()}updateTile(e){e.measures.visibility=this.visibility.calculate(e),e.measures.distance=a(e.extent,this.focusOnMap),e.measures.visibility!==f.INVISIBLE&&this._updateScreenMeasure(e)}_updateScreenMeasure(e){const t=T,i=1<<t,r=e.measures.screenRect;c(r);let s=0;const o=e.lij[0]+t,n=e.lij[1]<<t,a=e.lij[2]<<t,l=this._tileSizeWithBias(e),h=l*l;for(let c=0;c<i;c++)for(let t=0;t<i;t++)if(s+=this._computeScreenArea(e,o,n+c,a+t,r),s>h)return void(e.measures.shouldSplit=!0);e.measures.shouldSplit=!1}_tileSizeWithBias(e){return e.measures.visibility===f.VISIBLE_WHEN_EXTENDED?this.tileSize*y:this.tileSize}_computeScreenArea(e,t,i,r,s){const o=e.measures.visibility===f.VISIBLE_WHEN_EXTENDED;this._projectToScreen(t,i,r,o,E),c(g);for(let n=0;n<4;n++)l(g,E[n]);return h(s,g,s),d(E[0],E[1],E[2])+d(E[0],E[2],E[3])}_projectToScreen(e,t,i,r,s){this.tilingScheme.ensureMaxLod(e),this.tilingScheme.getExtent(e,t,i,b),this._toRenderCoords(b,0,3,R[0]),this._toRenderCoords(b,2,3,R[1]),this._toRenderCoords(b,2,1,R[2]),this._toRenderCoords(b,0,1,R[3]),r&&(this._projectToPlane(R,this.camera.frustum[m.NEAR]),this._projectToPlane(R,this.camera.frustum[m.TOP]),this._projectToPlane(R,this.camera.frustum[m.BOTTOM]));for(let o=0;o<4;o++)this.camera.projectToRenderScreen(R[o],M),this.camera.renderToScreen(M,s[o])}_projectToPlane(e,t){for(let i=0;i<4;i++)C[i]=u(t,e[i]);const s=Math.max(C[0],C[1],C[2],C[3]);if(s>0){const o=i(v,p(t),-s);for(let t=0;t<4;t++)r(e[t],e[t],o)}}_toRenderCoords(e,t,i,r){return v[0]=e[t],v[1]=e[i],v[2]=this.surfaceElevation,this.renderCoordsHelper.toRenderCoords(v,this.tilingScheme.spatialReference,r),r}}const g=o(),T=2,y=5,E=[e(),e(),e(),e()],b=o(),v=s(),R=[s(),s(),s(),s()],C=[0,0,0,0],M=t();export{j as FeatureTileMeasurements3D};
