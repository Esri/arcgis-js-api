/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/watchUtils","../../layers/RefreshableLayerView","../terrain/RasterTile","./LayerView3D","./TiledLayerView3D","../../layers/LayerView","../../support/drapedUtils","../../layers/ImageryTileLayerView"],(function(e,t,r,i,a,s,n,l,o,d,c,y,h,u,p,m,f,g,b){"use strict";let I=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).isAlignedMapTile=!0,e}e._inheritsLoose(r,t);var a=r.prototype;return a.initialize=function(){this.layer.increaseRasterJobHandlerUsage();const e=this.updateFullExtent();this.addResolvingPromise(e);const t=y.whenTrueOnce(this.view,"basemapTerrain.tilingSchemeLocked").then((()=>{const e=this.view.basemapTerrain.tilingScheme,{tileInfo:t}=this.layer,r=["png","png24","png32","jpg","mixed"].indexOf(t.format)>-1&&e.compatibleWith(t);this.isAlignedMapTile=r;const i=r?t:e.toTileInfo();this._set("tileInfo",i),this.updatingHandles.add(this,"layer.renderer",(()=>this.refresh())),this.updatingHandles.add(this,"layer.interpolation",(()=>this.refresh())),this.updatingHandles.add(this,"layer.bandIds",(()=>this.refresh())),this.updatingHandles.add(this,"layer.multidimensionalDefinition",(()=>this.refresh()))}));this.addResolvingPromise(t)},a.destroy=function(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null},a.fetchTile=async function(e,t,r,a){const s=this.tileInfo,n=this.layer.symbolizer.canRenderInWebGL,l={tileInfo:s,requestRawData:n,signal:i.unwrap(a.signal),requestAsImageElement:this.isAlignedMapTile},o=await this.layer.fetchTile(e,t,r,l);if(o instanceof HTMLImageElement)return o;let d=o&&o.pixelBlock;if(!d)return this._blankTile;if(!n&&(d=await this.layer.applyRenderer(o),null==d))return this._blankTile;const c=new u([e,t,r],d,s.size[0],s.size[1]);return n&&(c.symbolizerRenderer=this.layer.symbolizer.rendererJSON,c.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e)),c.transformGrid=o.transformGrid),c.bandIds=this.layer.bandIds,c},a._getSymbolizerOptions=function(e){const t=this.tileInfo.lodAt(e).resolution;return{pixelBlock:null,isGCS:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}},a.ensureSymbolizerParameters=function(e){JSON.stringify(e.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(e.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e.lij[0])))},a.createFetchPopupFeaturesQueryGeometry=function(e,t){return g.createQueryGeometry(e,t,this.view)},a.refresh=function(){this.emit("data-changed")},a.doRefresh=async function(e){this.suspended||this.emit("data-changed")},e._createClass(r,[{key:"_blankTile",get:function(){const e=document.createElement("canvas"),t=e.getContext("2d"),[r,i]=this.tileInfo.size;return e.width=r,e.height=i,t.clearRect(0,0,r,i),t.getImageData(0,0,r,i)}},{key:"imageFormatIsOpaque",get:function(){return"jpg"===this.layer.tileInfo.format}},{key:"hasMixedImageFormats",get:function(){return"mixed"===this.layer.tileInfo.format}},{key:"dataLevelRange",get:function(){const e=this.tileInfo.lods,t=this.layer.tileInfo.lods,r=e[0].scale,i=t[t.length-1].scale;return this.levelRangeFromScaleRange(r,i)}}]),r}(b.ImageryTileLayerView(h.RefreshableLayerView(m.TiledLayerView3D(p.LayerView3D(f)))));return t.__decorate([n.property({readOnly:!0,dependsOn:["tileInfo"]})],I.prototype,"_blankTile",null),t.__decorate([n.property({readOnly:!0,dependsOn:["layer.tileInfo.format"]})],I.prototype,"imageFormatIsOpaque",null),t.__decorate([n.property({readOnly:!0,dependsOn:["layer.tileInfo.format"]})],I.prototype,"hasMixedImageFormats",null),t.__decorate([n.property({readOnly:!0,dependsOn:["tileInfo","view.basemapTerrain.tilingScheme","layer.url"]})],I.prototype,"dataLevelRange",null),I=t.__decorate([l.subclass("esri.views.3d.layers.ImageryTileLayerView3D")],I),I}));
