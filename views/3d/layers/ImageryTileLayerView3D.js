// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../core/maybe","../../../core/watchUtils","../../../core/accessorSupport/decorators","./LayerView3D","./TiledLayerView3D","../terrain/RasterTile","../../layers/ImageryTileLayerView","../../layers/LayerView","../../layers/RefreshableLayerView","../../support/drapedUtils"],(function(e,r,t,i,a,n,o,l,s,d,u,p,y){"use strict";return function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.isAlignedMapTile=!0,r}return t.__extends(r,e),r.prototype.initialize=function(){var e=this;this.layer.increaseRasterJobHandlerUsage();var r=this.updateFullExtent();this.addResolvingPromise(r);var t=a.whenTrueOnce(this.view,"basemapTerrain.tilingSchemeLocked").then((function(){var r=e.view.basemapTerrain.tilingScheme,t=e.layer.tileInfo,i=["png","png24","png32","jpg","mixed"].indexOf(t.format)>-1&&r.compatibleWith(t);e.isAlignedMapTile=i;var a=i?t:r.toTileInfo();e._set("tileInfo",a),e.updatingHandles.add(e,"layer.renderer",(function(){return e.refresh()})),e.updatingHandles.add(e,"layer.interpolation",(function(){return e.refresh()})),e.updatingHandles.add(e,"layer.bandIds",(function(){return e.refresh()})),e.updatingHandles.add(e,"layer.multidimensionalDefinition",(function(){return e.refresh()}))}));this.addResolvingPromise(t)},r.prototype.destroy=function(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null},Object.defineProperty(r.prototype,"_blankTile",{get:function(){var e=document.createElement("canvas"),r=e.getContext("2d"),t=this.tileInfo.size,i=t[0],a=t[1];return e.width=i,e.height=a,r.clearRect(0,0,i,a),r.getImageData(0,0,i,a)},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"imageFormatIsOpaque",{get:function(){return"jpg"===this.layer.tileInfo.format},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"hasMixedImageFormats",{get:function(){return"mixed"===this.layer.tileInfo.format},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"dataLevelRange",{get:function(){var e=this.tileInfo.lods,r=this.layer.tileInfo.lods,t=e[0].scale,i=r[r.length-1].scale;return this.levelRangeFromScaleRange(t,i)},enumerable:!1,configurable:!0}),r.prototype.fetchTile=function(e,r,a,n){return t.__awaiter(this,void 0,void 0,(function(){var o,l,d,u,p,y;return t.__generator(this,(function(t){switch(t.label){case 0:return o=this.tileInfo,l=this.layer.symbolizer.canRenderInWebGL,d={tileInfo:o,requestRawData:l,signal:i.unwrap(n.signal),requestAsImageElement:this.isAlignedMapTile},[4,this.layer.fetchTile(e,r,a,d)];case 1:return(u=t.sent())instanceof HTMLImageElement?[2,u]:(p=u&&u.pixelBlock)?l?[3,3]:[4,this.layer.applyRenderer(u)]:[2,this._blankTile];case 2:if(null==(p=t.sent()))return[2,this._blankTile];t.label=3;case 3:return y=new s.default([e,r,a],p,o.size[0],o.size[1]),l&&(y.symbolizerRenderer=this.layer.symbolizer.renderer,y.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e)),y.transformGrid=u.transformGrid),y.bandIds=this.layer.bandIds,[2,y]}}))}))},r.prototype._getSymbolizerOptions=function(e){var r=this.tileInfo.lodAt(e).resolution;return{pixelBlock:null,isGCS:this.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:this.layer.bandIds}},r.prototype.ensureSymbolizerParameters=function(e){e.symbolizerRenderer!==this.layer.symbolizer.renderer&&(e.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e.lij[0])))},r.prototype.createFetchPopupFeaturesQueryGeometry=function(e,r){return y.createQueryGeometry(e,r,this.view)},r.prototype.refresh=function(){this.emit("data-changed")},r.prototype.doRefresh=function(e){return t.__awaiter(this,void 0,void 0,(function(){return t.__generator(this,(function(e){return this.suspended?[2]:(this.emit("data-changed"),[2])}))}))},t.__decorate([n.property({readOnly:!0,dependsOn:["tileInfo"]})],r.prototype,"_blankTile",null),t.__decorate([n.property({readOnly:!0,dependsOn:["layer.tileInfo.format"]})],r.prototype,"imageFormatIsOpaque",null),t.__decorate([n.property({readOnly:!0,dependsOn:["layer.tileInfo.format"]})],r.prototype,"hasMixedImageFormats",null),t.__decorate([n.property({readOnly:!0,dependsOn:["tileInfo","view.basemapTerrain.tilingScheme","layer.url"]})],r.prototype,"dataLevelRange",null),r=t.__decorate([n.subclass("esri.views.3d.layers.ImageryTileLayerView3D")],r)}(d.ImageryTileLayerView(p.RefreshableLayerView(l.TiledLayerView3D(o.LayerView3D(u)))))}));