/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/Accessor","../../../../../core/maybe","../../../../../core/screenUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/accessorSupport/ensureType","../../../../../core/Logger","../../../../../core/accessorSupport/decorators/subclass","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../geometry/support/ray","../../../../../geometry/support/vectorStacks","../../../../../layers/graphics/dehydratedFeatures","../../../support/geometryUtils/ray","../../../terrain/tileUtils","../../../webgl-engine/lib/Intersector","../../../webgl-engine/lib/intersectorUtilsConversions"],(function(e,t,r,i,n,o,s,c,a,l,p,d,u,h,y,g,f,m,v,I){"use strict";e.LineOfSightRayIntersector=function(e){function r(t){return e.call(this,t)||this}t._inheritsLoose(r,e);var i=r.prototype;return i.initialize=function(){this.intersector=new v.Intersector(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=0},i.getScreenPointIntersection=function(e){const t=o.screenPointObjectToArray(e,y.sv2d.get()),r=f.fromScreen(this.view.state.camera,t,S);return this._getRayIntersection(r)},i._getRayIntersection=function(e){if(n.isNone(e))return null;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,this.intersector);const t=this.intersector.results.min,r=w;if(!t||!t.getIntersectionPoint(r))return null;const i=this.view.renderCoordsHelper.fromRenderCoords(r,this.view.spatialReference),o=u.create();d.copy(o,t.normal);const s=d.dot(o,e.direction)>0?-1:1;d.scale(o,o,s);const c=I.toGraphic(t,this.view);if(n.isSome(c)){const r=c.layer,n=c.sourceLayer;let s;if(n)switch(n.type){case"scene":s=g.getObjectId(c,n.objectIdField);break;case"integrated-mesh":{const e=t.target;s=`${e.metadata.nodeIndex}/${e.metadata.componentIndex}`;break}default:s=c.uid}else s=c.uid;return{type:"Graphic",id:`${r.uid}/${s}`,ray:h.copy(e),normal:o,point:i}}if("TerrainRenderer"===t.intersector){return{type:"Terrain",id:t.target.metadata.tile.lij.slice(),ray:h.copy(e),normal:o,point:i}}return null},i._canUpdateFromIntersectionResult=function(e,t){if(n.isNone(e)||!t||e.type!==t.type)return!1;switch(e.type){case"Terrain":{const r=e.id,i=t.id;return r[0]===i[0]&&r[1]===i[1]&&r[2]===i[2]||m.tilesAreRelated(r,i)}case"Graphic":case"I3S":return e.id===t.id}},i.updateFromIntersectionResult=function(e){let t;if("Terrain"===e.type&&n.isSome(e.point)){const r=w,i=R,n=b;this.view.renderCoordsHelper.toRenderCoords(e.point,i),this.view.renderCoordsHelper.worldUpAtPosition(i,n);const o=this.view.basemapTerrain.elevationBounds,s=this.view.renderCoordsHelper.getAltitude(i),c=o?Math.abs(o.max-o.min)/Math.abs(s):100,a=s>0?1:-1;d.normalize(n,n),d.scale(n,n,a*c),d.add(r,i,n),h.fromPoints(r,i,S),t=this._getRayIntersection(S)}else t=this._getRayIntersection(e.ray);return this._canUpdateFromIntersectionResult(t,e)?t.point:null},r}(i),r.__decorate([s.property()],e.LineOfSightRayIntersector.prototype,"view",void 0),r.__decorate([s.property()],e.LineOfSightRayIntersector.prototype,"intersector",void 0),e.LineOfSightRayIntersector=r.__decorate([p.subclass("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightRayIntersector")],e.LineOfSightRayIntersector);const w=u.create(),R=u.create(),b=u.create(),S=h.create();Object.defineProperty(e,"__esModule",{value:!0})}));
