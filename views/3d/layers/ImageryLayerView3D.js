/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/promiseUtils","../../../core/watchUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","./DynamicLayerView3D","../../layers/ImageryLayerView"],(function(e,t,a,i,r,n,s,o,c,l,u){"use strict";let d=function(t){function r(){var i;return(i=t.apply(this,arguments)||this).type="imagery-3d",i.redrawDebounced=a.debounce(function(){var t=e._asyncToGenerator((function*(e){i.redraw(((e,t)=>i._redrawImage(e,t)),e)}));return function(e){return t.apply(this,arguments)}}(),2e3),i}e._inheritsLoose(r,t);var n=r.prototype;return n.initialize=function(){this.handles.add([i.whenOnce(this.view.basemapTerrain,"ready",(()=>this.initializeMaximumDataResolution())),this.layer.on("redraw",(()=>this.redrawDebounced()))]),this.updatingHandles.add(this.layer,"exportImageServiceParameters.version",(()=>{this.updatingHandles.addPromise(this.refreshDebounced())})),this.updatingHandles.add(this,"timeExtent",(()=>this.updatingHandles.addPromise(this.refreshDebounced())))},n.initializeMaximumDataResolution=function(){const e=this.view.basemapTerrain.spatialReference,t=this.layer.fullExtent;t&&e.equals(t.spatialReference)&&(this.maximumDataResolution={x:this.layer.pixelSizeX,y:this.layer.pixelSizeY})},n.getFetchOptions=function(){return{timeExtent:this.timeExtent}},n.processResult=function(){var t=e._asyncToGenerator((function*(e,t,a){t.imageElement?e.image=t.imageElement:(e.image=document.createElement("canvas"),e.pixelData=t.pixelData,yield this._redrawImage(e,a))}));function a(e,a,i){return t.apply(this,arguments)}return a}(),n._redrawImage=function(){var t=e._asyncToGenerator((function*(e,t){if(!(e.image instanceof HTMLCanvasElement&&e.pixelData))return Promise.reject();const a=e.image,i=a.getContext("2d"),r=yield this.layer.applyRenderer(e.pixelData,{signal:t}),n=this.layer.applyFilter(r),s=n.pixelBlock;a.width=s.width,a.height=s.height;const o=i.createImageData(s.width,s.height);o.data.set(n.pixelBlock.getAsRGBA()),i.putImageData(o,0,0)}));function a(e,a){return t.apply(this,arguments)}return a}(),r}(u.ImageryLayerView(l));return d=t.__decorate([c.subclass("esri.views.3d.layers.ImageryLayerView3D")],d),d}));
