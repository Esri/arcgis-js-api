/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import s from"../../../../core/Logger.js";import{isNone as i,isSome as o}from"../../../../core/maybe.js";import{property as n}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../../core/accessorSupport/decorators/subclass.js";import{k as c}from"../../../../chunks/mat4.js";import{c as l}from"../../../../chunks/mat4f64.js";import{m as p,c as h}from"../../../../chunks/vec3.js";import{c as d}from"../../../../chunks/vec3f64.js";import{empty as m,expand as f}from"../../../../geometry/support/aaBoundingRect.js";import{d as u,g as v}from"../../../../chunks/sphere.js";import{newIntersector as y}from"../../webgl-engine/lib/Intersector.js";import{StoreResults as x}from"../../webgl-engine/lib/IntersectorInterfaces.js";const E=m(),g=l(),j=d(),b=d(),R=d(),w=s.getLogger("esri.views.3d.layers.i3s.I3SElevationProvider");let S=class extends(r.EventedMixin(t)){constructor(e){super(e),this.tmpEvent={spatialReference:null,extent:E,context:"scene"}}initialize(){this.view=this.layerView.view,this.renderCoordsHelper=this.view.renderCoordsHelper,this.intersector=y(this.view.state.viewingMode),this.intersector.options.store=x.MIN;const e=this.layerView.i3slayer.fullExtent;i(e)?w.error("I3SElevationProvider expected fullExtent on I3SLayer."):(this.zmin=e.zmin,this.zmax=e.zmax),this.tmpEvent.context=this.intersectionHandler.isGround?"ground":"scene"}getElevation(e,t,r,s){if(j[0]=e,j[1]=t,j[2]=r,!this.renderCoordsHelper.toRenderCoords(j,s,j))return w.error("could not project point to compute elevation"),null;const i=this.layerView.elevationOffset,o=this.zmin+i,n=this.zmax+i;return this.renderCoordsHelper.setAltitude(b,n,j),this.renderCoordsHelper.setAltitude(R,o,j),this.intersector.reset(b,R,null),this.intersectionHandler.intersect(this.intersector,null,b,R),this.intersector.results.min.getIntersectionPoint(j)?this.renderCoordsHelper.getAltitude(j):null}layerChanged(){this.spatialReference&&(this.tmpEvent.extent=this._computeLayerExtent(),this.tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this.tmpEvent))}objectChanged(e){this.spatialReference&&(this.tmpEvent.extent=this._computeObjectExtent(e),this.tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this.tmpEvent))}_computeObjectExtent(e){return m(E),this._expandExtent(e,E),E}_computeLayerExtent(){m(E);for(const e of this.layerView.getVisibleNodes())this._expandExtent(e,E);return E}_expandExtent(e,t){const r=e.visibilityObb||e.serviceObbInRenderSR;if(o(r)){c(g,r.quaternion),g[12]=r.center[0],g[13]=r.center[1],g[14]=r.center[2];for(let e=0;e<8;++e)j[0]=1&e?r.halfSize[0]:-r.halfSize[0],j[1]=2&e?r.halfSize[1]:-r.halfSize[1],j[2]=4&e?r.halfSize[2]:-r.halfSize[2],p(j,j,g),this.renderCoordsHelper.fromRenderCoords(j,j,this.spatialReference),f(t,j,t)}else{const r=u(e.renderMbs),s=h(b,v(e.renderMbs));s[0]-=r,s[1]-=r,s[2]-=r;const i=h(R,v(e.renderMbs));i[0]+=r,i[1]+=r,i[2]+=r;for(let e=0;e<8;++e)j[0]=1&e?s[0]:i[0],j[1]=2&e?s[1]:i[1],j[2]=4&e?s[2]:i[2],this.renderCoordsHelper.fromRenderCoords(j,j,this.spatialReference),f(t,j,t)}}};e([n({constructOnly:!0})],S.prototype,"layerView",void 0),e([n({constructOnly:!0})],S.prototype,"intersectionHandler",void 0),e([n()],S.prototype,"view",void 0),e([n({readOnly:!0,aliasOf:"view.elevationProvider.spatialReference"})],S.prototype,"spatialReference",void 0),S=e([a("esri.views.3d.layers.i3s.I3SElevationProvider")],S);const z=S;export{z as default};
