/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../../core/has.js";import{clamp as a,isPowerOfTwo as o}from"../../../../core/mathUtils.js";import{isSome as r,isNone as s}from"../../../../core/maybe.js";import{TextureEncoding as t,TextureUsage as n}from"./enums.js";import{RenderTexture as l}from"../../webgl-engine/core/material/RenderTexture.js";import{PBRSchematicMRRValues as i}from"../../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{defaultMaskAlphaCutoff as u}from"../../webgl-engine/core/shaderLibrary/util/AlphaCutoff.js";import{getEllipsoidMode as c}from"../../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js";import{CullFaceOptions as m,AlphaDiscardMode as d}from"../../webgl-engine/lib/basicInterfaces.js";import{Texture as g}from"../../webgl-engine/lib/Texture.js";import{TextureWrapMode as p}from"../../../webgl/enums.js";function h(e,a){const o=new Map,t=(e,a)=>{if(s(e))return-1;if(o.has(e.id)){const r=o.get(e.id);return r.usage|=a,r.id}const r=o.size;return o.set(e.id,{id:r,usage:a}),r},l=a.pbrMetallicRoughness,u=l&&l.baseColorFactor,c=a.emissiveFactor,d=null==a.normalTexture&&null==a.emissiveTexture&&null==a.occlusionTexture&&(!l||null==l.metallicRoughnessTexture&&1===l.roughnessFactor&&(1===l.metallicFactor||0===l.metallicFactor)),g=d?i[0]:l?l.metallicFactor:1,p=d?i[1]:l?l.roughnessFactor:1,h="mask"===a.alphaMode?n.Color|n.AlphaMask:n.Color,x={baseColorFactor:u?[u[0],u[1],u[2],u[3]]:[1,1,1,1],baseColorTextureId:t(l&&l.baseColorTexture,h),metallicRoughnessTextureId:t(l&&l.metallicRoughnessTexture,n.MetallicRoughness),metallicFactor:g,roughnessFactor:p},b={alphaMode:a.alphaMode,alphaCutoff:a.alphaCutoff,doubleSided:a.doubleSided,cullFace:"none"===a.cullFace?m.None:"back"===a.cullFace?m.Back:"front"===a.cullFace?m.Front:void 0,normalTextureId:t(a.normalTexture,n.Normal),emissiveTextureId:t(a.emissiveTexture,n.Emissive),occlusionTextureId:t(a.occlusionTexture,n.Occlusion),emissiveFactor:c?[c[0],c[1],c[2]]:[0,0,0],metallicRoughness:x,wrapTextures:!1,hasParametersFromSource:d},F=[];return o.forEach((({usage:a},o)=>{const s=r(e)&&e[o]&&e[o].formats,t=s?f(s.map((({name:e,format:a})=>({name:e,encoding:T[a]})))):[];F.push({id:o,usage:a,encodings:t})})),{material:b,textures:F}}function f(e){return e.sort(((e,a)=>e.encoding-a.encoding))}const T={ktx2:t.KTX2,basis:t.Basis,dds:t.DDS_S3TC,png:t.PNG,jpg:t.JPG,"ktx-etc2":t.KTX_ETC2},x={[g.KTX2_ENCODING]:t.Basis,[g.BASIS_ENCODING]:t.Basis,[g.DDS_ENCODING]:t.DDS_S3TC,"image/png":t.PNG,"image/jpg":t.JPG,"image/jpeg":t.JPG,"image/ktx":t.KTX_ETC2};function b(e){const o=e&&e.materialDefinitions?Object.keys(e.materialDefinitions)[0]:null,r=e&&e.textureDefinitions?Object.keys(e.textureDefinitions)[0]:null,s=o&&e.materialDefinitions[o],t=r&&e.textureDefinitions[r],l=F();if(null!=s){const e=s.params;e.diffuse&&(l.metallicRoughness.baseColorFactor=[e.diffuse[0],e.diffuse[1],e.diffuse[2],1]),null!=e.doubleSided&&(l.doubleSided=e.doubleSided,l.cullFace=e.doubleSided?m.None:m.Back),"none"!==e.cullFace&&"front"!==e.cullFace&&"back"!==e.cullFace||(l.cullFace="none"===e.cullFace?m.None:"back"===e.cullFace?m.Back:m.Front),e.transparency&&(l.metallicRoughness.baseColorFactor[3]=a(1-e.transparency,0,1)),(e.useVertexColorAlpha||l.metallicRoughness.baseColorFactor[3]<1)&&(l.alphaMode="blend")}const i=[];if(null!=t){const e=0;!t.wrap||"repeat"!==t.wrap[0]&&"repeat"!==t.wrap[1]||(l.wrapTextures=!0);let a=n.Color;"rgba"===t.channels&&(l.alphaMode="blend",a|=n.AlphaMask);const o=t.images.length-1,r=t.images[o],s=e=>e&&e.split("/").pop(),u=Array.isArray(t.encoding)?f(t.encoding.map(((e,a)=>({name:s(r.href[a]),encoding:x[e]||0})))):[{name:s(r.href),encoding:x[t.encoding]||0}];i.push({id:e,usage:a,encodings:u}),l.metallicRoughness.baseColorTextureId=e}return{material:l,textures:i}}const F=()=>({alphaMode:"opaque",alphaCutoff:u,doubleSided:!0,cullFace:m.None,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[.8,.8,.8,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6},wrapTextures:!1,hasParametersFromSource:!0});function C(e,a,r,t){if(s(e)||null==e.data)return null;const l=e.data,i=!(l instanceof HTMLImageElement)||o(l.width)&&o(l.height),u=t.renderingContext.parameters.maxMaxAnisotropy,c=r&&!t.capabilities.shaderTextureLOD?1:u,m=i&&!e.downsampled&&c>1,d=r||!a.wrapTextures?P:M,p=E(e.encoding),h=e.usage&n.Color?"opaque"===a.alphaMode?3:4:3;return new g(l,{mipmap:m,maxAnisotropy:c,encoding:p,wrap:d,components:h,noUnpackFlip:!0})}const P={s:p.CLAMP_TO_EDGE,t:p.CLAMP_TO_EDGE},M={s:p.REPEAT,t:p.REPEAT};function S(e,o,s,t,i,m){const g=m.rendererTextureUsage,p=e=>R(t,s,e&g),h=o.metallicRoughness.baseColorFactor,f=a(o.metallicRoughness.baseColorFactor[3],0,1);e.baseColor=[h[0],h[1],h[2],f],e.hasParametersFromSource=!!o.hasParametersFromSource,e.usePBR=m.usePBR,e.mrrFactors=[o.metallicRoughness.metallicFactor,o.metallicRoughness.roughnessFactor,o.hasParametersFromSource?.2:.5],e.emissiveFactor=o.emissiveFactor,e.isIntegratedMesh=m.isIntegratedMesh,e.textureAlphaCutoff="mask"===o.alphaMode?o.alphaCutoff:u,e.alphaDiscardMode="opaque"===o.alphaMode?d.Opaque:"mask"===o.alphaMode?d.Mask:d.MaskBlend;const T=[],x=p(n.Color|n.AlphaMask);r(x)&&(e.baseColorTexture=new l(i,x),T.push(e.baseColorTexture.loadPromise));const b=p(n.MetallicRoughness);r(b)&&(e.metallicRoughnessTexture=new l(i,b),T.push(e.metallicRoughnessTexture.loadPromise));const F=p(n.Emissive);r(F)&&(e.emissionTexture=new l(i,F),T.push(e.emissionTexture.loadPromise));const C=p(n.Occlusion);r(C)&&(e.occlusionTexture=new l(i,C),T.push(e.occlusionTexture.loadPromise));const P=p(n.Normal);return r(P)&&(e.normalTexture=new l(i,P),T.push(e.normalTexture.loadPromise)),e.commonMaterialParameters.hasSlicePlane=m.slicePlaneEnabled,e.commonMaterialParameters.doubleSided=o.doubleSided,e.commonMaterialParameters.cullFace=o.cullFace,e.ellipsoidMode=c(m.viewSpatialReference),Promise.all(T)}function D(a){const o=!!a.compressedTextureS3TC,r=!!a.compressedTextureETC,s=e("disable-feature:i3s-basis")?0:t.Basis|t.KTX2,n=t.JPG|t.PNG,l=s|t.DDS_S3TC;return n|(o?l:0)|(r?s:0)}function w(e,a){return e.find((e=>0!=(e.encoding&a)))}function R(e,a,o){if(s(e)||o===n.None)return null;for(let s=0;s<e.length;s++){const t=e[s];if(r(t)&&0!=(t.usage&o)){const e=a[s];return r(e)?e.id:null}}return null}function E(e){switch(e){case t.KTX2:return g.KTX2_ENCODING;case t.Basis:return g.BASIS_ENCODING;case t.DDS_S3TC:return g.DDS_ENCODING;case t.PNG:return"image/png";case t.JPG:return"image/jpeg";case t.KTX_ETC2:return"image/ktx";default:return""}}export{S as configureMaterial,C as createTexture,F as defaultMaterial,h as getMaterialAndTextures,b as getMaterialAndTexturesFromShared,D as getSupportedEncodings,w as selectEncoding};
