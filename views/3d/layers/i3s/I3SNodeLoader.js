/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../core/has","../../../../core/lang","../../../../core/maybe","../../../../core/urlUtils","../../../../core/promiseUtils","../../../../core/asyncUtils","./I3SBinaryReader","./I3SUtil","./I3SMaterialUtil"],(function(e,t,r,i,n,o,s,a,u){"use strict";let l=function(){function l(e,t,r,i,n,o){if(this.streamDataController=t,this.logger=r,this.defaultGeometrySchema=i,this.requiredAttributes=n,this.options=o,this.logLayer=e,this.layerUrl=e.parsedUrl.path,this.geometryDefinitions=e.geometryDefinitions,e.materialDefinitions){const t=e.textureSetDefinitions;this.materialAndTextures=e.materialDefinitions.map((e=>u.getMaterialAndTextures(t,e)))}}var f=l.prototype;return f.load=function(e,t,r){return this.streamDataController.request(e,t,{signal:r})},f.loadAttribute=function(e,t,r){const i=`${this.layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;return this.load(i,"binary",r).then((e=>s.readBinaryAttribute(t,e)))},f.loadAttributes=function(e,t,r){return n.eachAlways(t.map((t=>this.loadAttribute(e,t.attributeStorageInfo,r)))).then((r=>{const i={};for(let o=0;o<t.length;++o)if(r[o].value)i[t[o].name]=r[o].value;else{if(n.isAbortError(r[o].error))throw r[o].error;this.logger.error("#loadAttributes",this.logLayer,`Failed to load attributeData for '${t[o].name}' on node '${e.id}'`,r[o].error)}return i}))},f.loadNodeData=async function(i,a){const l=null!=this.requiredAttributes&&i.resources.attributes?o.result(this.loadAttributes(i,this.requiredAttributes,a)):null,{bufferDefinition:f,bufferIndex:d}=function(t,r){const i={bufferDefinition:null,bufferIndex:0};if(null==t||r.resources.geometryDefinition<0)return i;const n=r.resources.geometryDefinition>=0?t[r.resources.geometryDefinition].geometryBuffers:null;if(null==n)return i;for(let t=0;t<n.length;t++){const r=n[t];if(null==r.compressedAttributes)i.bufferIndex=t,i.bufferDefinition=n[t];else if("draco"===r.compressedAttributes.encoding&&!e("disable-feature:i3s-draco"))return i.bufferIndex=t,i.bufferDefinition=r,i}return i}(this.geometryDefinitions,i),c=!!i.resources.geometry,h=c?o.result(this.loadGeometry(i.resources.geometry,d,a)):null,m=i.resources.hasSharedResource?await this.loadShared(i,a):null,g=this.materialAndTextures&&i.resources.materialDefinition>=0?this.materialAndTextures[i.resources.materialDefinition]:null!=m?u.getMaterialAndTexturesFromShared(m):null,y=g&&g.material,D=g&&g.textures,b=`${i.id}`,x=!c&&this.options.loadFeatureData,p=x?await this.loadFeatureData(b,a):null,A=x?function(e){for(const t of e.featureData){const e=t.geometries;if(null!=e)for(const r of e)return{featureIds:[t.id],featureDataPosition:t.position,geometries:[r]}}return null}(p):function(e){return{featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:e}}],featureDataPosition:[0,0,0]}}(y),T=r.isNone(A)&&function(e){const t=new Array;for(const r of e.featureData)null!=r.position&&t.push({featureIds:[r.id],featureDataPosition:r.position,geometries:null});return t}(p),w=null!=D&&D.length>0?o.result(this.loadTextures(i,D,a)):null;let $=null,I=null;if(h){$=o.assertResult(await h);const e=function(e,r){if(!e||!r||!r.materialDefinitions)return e;const i=Object.keys(r.materialDefinitions)[0];!r.materialDefinitions[i].params.vertexRegions&&e.vertexAttributes.region&&delete(e=t.clone(e)).vertexAttributes.region;return e}(this.defaultGeometrySchema,m);I=s.createGeometryDescriptor(f,e)}const S=w?o.assertResult(await w):null,U=l?o.assertResult(await l):{},F=U?{attributeData:U,loadedAttributes:this.requiredAttributes}:null;return r.isSome(A)?{geometryData:A,attributeDataInfo:F,geometryBuffer:$,geometryDescriptor:I,requiredTextures:D,textureData:S}:r.isSome(T)?{pointData:T,attributeDataInfo:F,geometryBuffer:$,geometryDescriptor:I,requiredTextures:D,textureData:S}:n.reject()},l.addAbsoluteHrefTexture=function(e,t){const r=e.textureDefinitions;if(null!=r)for(const e of Object.keys(r))for(const n of r[e].images)Array.isArray(n.href)?n.hrefConcat=n.href.map((e=>i.makeAbsolute(e,t))):n.hrefConcat=i.makeAbsolute(n.href,t)},l.fixTextureEncodings=function(e){const t=e.textureDefinitions;if(null!=t)for(const e in t){const r=t[e];if(Array.isArray(r.encoding))for(let e=0;e<r.encoding.length;e++){const t=r.encoding[e];"data:"===t.substring(0,5)&&(r.encoding[e]=t.substring(5))}else{const e=r.encoding;"data:"===e.substring(0,5)&&(r.encoding=e.substring(5))}}},f.loadShared=function(e,t){const r=`${this.layerUrl}/nodes/${e.resources.geometry}/shared`;return this.load(r,"json",t).then((e=>(l.fixTextureEncodings(e),l.addAbsoluteHrefTexture(e,r),e)))},f.loadTexture=function(e,t,r,i,n,o){return n===a.DDS_ENCODING_STRING?this.load(e,"binary",o).then((e=>({id:t,usage:r,data:e,encoding:n}))):this.load(e,"image",o).then((e=>{let o=e;if(i&&e.width*e.height>=4096){const t=Math.ceil(e.width/2),r=Math.ceil(e.height/2),i=document.createElement("canvas");i.width=t,i.height=r;i.getContext("2d").drawImage(e,0,0,t,r),o=i}return{id:t,usage:r,data:o,encoding:n}}))},f.loadTextures=function(e,t,r){const i=this.options.textureFormat===l.TextureFormat.Compressed,o=this.options.textureFormat===l.TextureFormat.Downsampled,s=this.options.textureUsageMask;return n.all(t.map((t=>{if(0==(t.usage&s))return null;const u=a.selectEncoding(t.encodings,i);if(null==u)return this.logger.error("#loadTextures",this.logLayer,`No known encoding for texture found on node ${e.id}`),n.reject();const l=e.resources.texture||e.id,f=`${this.layerUrl}/nodes/${l}/textures/${u.name}`;return this.loadTexture(f,t.id,t.usage,o,u.encoding,r)})))},f.loadFeatureData=function(e,t){const r=`${this.layerUrl}/nodes/${e}/features/0`;return this.load(r,"json",t)},f.loadGeometry=function(e,t,r){const i=`${this.layerUrl}/nodes/${e}/geometries/${t}`;return this.load(i,"binary",r)},l}();return function(e){let t;!function(e){e[e.Compressed=0]="Compressed",e[e.Normal=1]="Normal",e[e.Downsampled=2]="Downsampled"}(t=e.TextureFormat||(e.TextureFormat={}))}(l||(l={})),l}));
