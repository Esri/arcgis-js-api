/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../core/has","../../../../core/lang","../../../../core/maybe","../../../../core/urlUtils","../../../../core/promiseUtils","../../../../core/asyncUtils","./I3SBinaryReader","./I3SUtil","./I3SMaterialUtil"],(function(e,t,r,i,n,o,s,a,u){"use strict";function l(e){return{featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:e}}],featureDataPosition:[0,0,0]}}function f(e){for(const t of e.featureData){const e=t.geometries;if(null!=e)for(const r of e)return{featureIds:[t.id],featureDataPosition:t.position,geometries:[r]}}return null}function d(e){const t=new Array;for(const r of e.featureData)null!=r.position&&t.push({featureIds:[r.id],featureDataPosition:r.position,geometries:null});return t}function c(e,r){if(!e||!r||!r.materialDefinitions)return e;const i=Object.keys(r.materialDefinitions)[0];return!r.materialDefinitions[i].params.vertexRegions&&e.vertexAttributes.region&&delete(e=t.clone(e)).vertexAttributes.region,e}function h(t,r){const i={bufferDefinition:null,bufferIndex:0};if(null==t||r.resources.geometryDefinition<0)return i;const n=r.resources.geometryDefinition>=0?t[r.resources.geometryDefinition].geometryBuffers:null;if(null==n)return i;for(let o=0;o<n.length;o++){const t=n[o];if(null==t.compressedAttributes)i.bufferIndex=o,i.bufferDefinition=n[o];else if("draco"===t.compressedAttributes.encoding&&!e("disable-feature:i3s-draco"))return i.bufferIndex=o,i.bufferDefinition=t,i}return i}return function(){function e(e,t,r,i,n,o){if(this.streamDataController=t,this.logger=r,this.defaultGeometrySchema=i,this.requiredAttributes=n,this.options=o,this.logLayer=e,this.layerUrl=e.parsedUrl.path,this.geometryDefinitions=e.geometryDefinitions,e.materialDefinitions){const t=e.textureSetDefinitions;this.materialAndTextures=e.materialDefinitions.map((e=>u.getMaterialAndTextures(t,e)))}}var t=e.prototype;return t.load=function(e,t,r){return this.streamDataController.request(e,t,{signal:r})},t.loadAttribute=function(e,t,r){const i=`${this.layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;return this.load(i,"binary",r).then((e=>s.readBinaryAttribute(t,e)))},t.loadAttributes=function(e,t,r){return n.eachAlways(t.map((t=>this.loadAttribute(e,t.attributeStorageInfo,r)))).then((r=>{const i={};for(let o=0;o<t.length;++o)if(r[o].value)i[t[o].name]=r[o].value;else{if(n.isAbortError(r[o].error))throw r[o].error;this.logger.error("#loadAttributes",this.logLayer,`Failed to load attributeData for '${t[o].name}' on node '${e.id}'`,r[o].error)}return i}))},t.loadNodeData=async function(e,t){const i=null!=this.requiredAttributes&&e.resources.attributes?o.result(this.loadAttributes(e,this.requiredAttributes,t)):null,{bufferDefinition:n,bufferIndex:a}=h(this.geometryDefinitions,e),g=!!e.resources.geometry,m=g?o.result(this.loadGeometry(e.resources.geometry,a,t)):null,y=e.resources.hasSharedResource?await this.loadShared(e,t):null,b=this.materialAndTextures&&e.resources.materialDefinition>=0?this.materialAndTextures[e.resources.materialDefinition]:null!=y?u.getMaterialAndTexturesFromShared(y):null,D=b&&b.material,x=b&&b.textures,A=`${e.id}`,p=!g&&this.options.loadFeatureData,T=p?await this.loadFeatureData(A,t):null,$=p?f(T):l(D),w=r.isNone($)&&d(T),I=null!=x&&x.length>0?o.result(this.loadTextures(e,x,t)):null;let S=null,U=null;if(m){S=o.assertResult(await m);const e=c(this.defaultGeometrySchema,y);U=s.createGeometryDescriptor(n,e)}const k=I?o.assertResult(await I):null,q=i?o.assertResult(await i):{},v=q?{attributeData:q,loadedAttributes:this.requiredAttributes}:null;return r.isSome($)?{geometryData:$,attributeDataInfo:v,geometryBuffer:S,geometryDescriptor:U,requiredTextures:x,textureData:k}:r.isSome(w)?{pointData:w,attributeDataInfo:v,geometryBuffer:S,geometryDescriptor:U,requiredTextures:x,textureData:k}:Promise.reject()},e.addAbsoluteHrefTexture=function(e,t){const r=e.textureDefinitions;if(null!=r)for(const n of Object.keys(r))for(const e of r[n].images)Array.isArray(e.href)?e.hrefConcat=e.href.map((e=>i.makeAbsolute(e,t))):e.hrefConcat=i.makeAbsolute(e.href,t)},e.fixTextureEncodings=function(e){const t=e.textureDefinitions;if(null!=t)for(const r in t){const e=t[r];if(Array.isArray(e.encoding))for(let t=0;t<e.encoding.length;t++){const r=e.encoding[t];"data:"===r.substring(0,5)&&(e.encoding[t]=r.substring(5))}else{const t=e.encoding;"data:"===t.substring(0,5)&&(e.encoding=t.substring(5))}}},t.loadShared=function(t,r){const i=`${this.layerUrl}/nodes/${t.resources.geometry}/shared`;return this.load(i,"json",r).then((t=>(e.fixTextureEncodings(t),e.addAbsoluteHrefTexture(t,i),t)))},t.loadTexture=function(e,t,r,i,n,o){return 2===n||1===n?this.load(e,"binary",o).then((e=>({id:t,usage:r,data:e,encoding:n}))):this.load(e,"image",o).then((e=>{let o=e;const s=4096,a=2;if(i&&e.width*e.height>=s){const t=Math.ceil(e.width/a),r=Math.ceil(e.height/a),i=document.createElement("canvas");i.width=t,i.height=r;i.getContext("2d").drawImage(e,0,0,t,r),o=i}return{id:t,usage:r,data:o,encoding:n}}))},t.loadTextures=function(e,t,r){const i=this.options.uncompressedTextureDownsamplingEnabled,n=this.options.textureUsageMask;return Promise.all(t.map((t=>{if(0==(t.usage&n))return null;const o=a.selectEncoding(t.encodings,this.options.textureEncodings);if(null==o)return this.logger.error("#loadTextures",this.logLayer,`No known encoding for texture found on node ${e.id}`),Promise.reject();const s=e.resources.texture||e.id,u=`${this.layerUrl}/nodes/${s}/textures/${o.name}`;return this.loadTexture(u,t.id,t.usage,i,o.encoding,r)})))},t.loadFeatureData=function(e,t){const r=`${this.layerUrl}/nodes/${e}/features/0`;return this.load(r,"json",t)},t.loadGeometry=function(e,t,r){const i=`${this.layerUrl}/nodes/${e}/geometries/${t}`;return this.load(i,"binary",r)},e}()}));
