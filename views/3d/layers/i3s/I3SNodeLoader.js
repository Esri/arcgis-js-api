/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/asyncUtils","../../../../core/has","../../../../core/lang","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/urlUtils","./I3SBinaryReader","./I3SMaterialUtil"],(function(e,t,r,i,n,o,s,a,u){"use strict";let l=function(){function r(e,t,r,i,n,o){if(this.streamDataController=t,this.logger=r,this.defaultGeometrySchema=i,this.requiredAttributes=n,this.options=o,this.logLayer=e,this.layerUrl=e.parsedUrl.path,this.geometryDefinitions=e.geometryDefinitions,e.materialDefinitions){const t=e.textureSetDefinitions;this.materialAndTextures=e.materialDefinitions.map((e=>u.getMaterialAndTextures(t,e)))}}var i=r.prototype;return i.load=function(e,t,r){return this.streamDataController.request(e,t,r)},i.loadAttribute=function(e,t,r){const i=`${this.layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;return this.load(i,"binary",r).then((e=>a.readBinaryAttribute(t,e)))},i.loadAttributes=function(e,t,r){return o.eachAlways(t.map((t=>this.loadAttribute(e,t.attributeStorageInfo,r)))).then((r=>{const i={};for(let n=0;n<t.length;++n)if(r[n].value)i[t[n].name]=r[n].value;else{if(o.isAbortError(r[n].error))throw r[n].error;this.logger.error("#loadAttributes",this.logLayer,`Failed to load attributeData for '${t[n].name}' on node '${e.id}'`,r[n].error)}return i}))},i.loadNodeData=function(){var r=e._asyncToGenerator((function*(e,r){const i=null!=this.requiredAttributes&&e.resources.attributes?t.result(this.loadAttributes(e,this.requiredAttributes,r)):null,{bufferDefinition:o,bufferIndex:s}=g(this.geometryDefinitions,e),l=!!e.resources.geometry,m=l?t.result(this.loadGeometry(e.resources.geometry,s,r)):null,y=e.resources.hasSharedResource?yield this.loadShared(e,r):null,b=this.materialAndTextures&&e.resources.materialDefinition>=0?this.materialAndTextures[e.resources.materialDefinition]:null!=y?u.getMaterialAndTexturesFromShared(y):null,D=b&&b.material,x=b&&b.textures,p=`${e.id}`,A=!l&&this.options.loadFeatureData,T=A?yield this.loadFeatureData(p,r):null,$=A?f(T):d(D),I=n.isNone($)&&c(T),w=null!=x&&x.length>0?t.result(this.loadTextures(e,x,r)):null;let S=null,U=null;if(m){S=t.assertResult(yield m);const e=h(this.defaultGeometrySchema,y);U=a.createGeometryDescriptor(o,e)}const k=w?t.assertResult(yield w):null,v=i?t.assertResult(yield i):{},q=v?{attributeData:v,loadedAttributes:this.requiredAttributes}:null;return n.isSome($)?{geometryData:$,attributeDataInfo:q,geometryBuffer:S,geometryDescriptor:U,requiredTextures:x,textureData:k}:n.isSome(I)?{pointData:I,attributeDataInfo:q,geometryBuffer:S,geometryDescriptor:U,requiredTextures:x,textureData:k}:Promise.reject()}));function i(e,t){return r.apply(this,arguments)}return i}(),r.addAbsoluteHrefTexture=function(e,t){const r=e.textureDefinitions;if(null!=r)for(const i of Object.keys(r))for(const e of r[i].images)Array.isArray(e.href)?e.hrefConcat=e.href.map((e=>s.makeAbsolute(e,t))):e.hrefConcat=s.makeAbsolute(e.href,t)},r.fixTextureEncodings=function(e){const t=e.textureDefinitions;if(null!=t)for(const r in t){const e=t[r];if(Array.isArray(e.encoding))for(let t=0;t<e.encoding.length;t++){const r=e.encoding[t];"data:"===r.substring(0,5)&&(e.encoding[t]=r.substring(5))}else{const t=e.encoding;"data:"===t.substring(0,5)&&(e.encoding=t.substring(5))}}},i.loadShared=function(e,t){const i=`${this.layerUrl}/nodes/${e.resources.geometry}/shared`;return this.load(i,"json",t).then((e=>(r.fixTextureEncodings(e),r.addAbsoluteHrefTexture(e,i),e)))},i.loadTexture=function(e,t,r,i,n,o){let s=!1;return 4===n||1===n||2===n?this.load(e,"binary",o).then((e=>({id:t,usage:r,data:e,encoding:n,downsampled:s}))):this.load(e,"image",o).then((e=>{let o=e;const a=4096,u=2;if(i&&e.width*e.height>=a){const t=Math.ceil(e.width/u),r=Math.ceil(e.height/u),i=document.createElement("canvas");i.width=t,i.height=r;i.getContext("2d").drawImage(e,0,0,t,r),o=i,s=!0}return{id:t,usage:r,data:o,encoding:n,downsampled:s}}))},i.loadTextures=function(e,t,r){const i=this.options.uncompressedTextureDownsamplingEnabled,n=this.options.textureUsageMask;return Promise.all(t.map((t=>{if(0==(t.usage&n))return null;const o=u.selectEncoding(t.encodings,this.options.textureEncodings);if(null==o)return this.logger.error("#loadTextures",this.logLayer,`No known encoding for texture found on node ${e.id}`),Promise.reject();const s=e.resources.texture||e.id,a=`${this.layerUrl}/nodes/${s}/textures/${o.name}`;return this.loadTexture(a,t.id,t.usage,i,o.encoding,r)})))},i.loadFeatureData=function(e,t){const r=`${this.layerUrl}/nodes/${e}/features/0`;return this.load(r,"json",t)},i.loadGeometry=function(e,t,r){const i=`${this.layerUrl}/nodes/${e}/geometries/${t}`;return this.load(i,"binary",r)},r}();function d(e){return{featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:e}}],featureDataPosition:[0,0,0]}}function f(e){for(const t of e.featureData){const e=t.geometries;if(null!=e)for(const r of e)return{featureIds:[t.id],featureDataPosition:t.position,geometries:[r]}}return null}function c(e){const t=new Array;for(const r of e.featureData)null!=r.position&&t.push({featureIds:[r.id],featureDataPosition:r.position,geometries:null});return t}function h(e,t){if(!e||!t||!t.materialDefinitions)return e;const r=Object.keys(t.materialDefinitions)[0];return!t.materialDefinitions[r].params.vertexRegions&&e.vertexAttributes.region&&delete(e=i.clone(e)).vertexAttributes.region,e}function g(e,t){const i={bufferDefinition:null,bufferIndex:0};if(null==e||t.resources.geometryDefinition<0)return i;const n=t.resources.geometryDefinition>=0?e[t.resources.geometryDefinition].geometryBuffers:null;if(null==n)return i;for(let o=0;o<n.length;o++){const e=n[o];if(null==e.compressedAttributes)i.bufferIndex=o,i.bufferDefinition=n[o];else if("draco"===e.compressedAttributes.encoding&&!r("disable-feature:i3s-draco"))return i.bufferIndex=o,i.bufferDefinition=e,i}return i}return l}));
