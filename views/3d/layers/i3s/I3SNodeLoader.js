/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/asyncUtils","../../../../core/has","../../../../core/lang","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/urlUtils","./enums","./I3SBinaryReader","./I3SMaterialUtil"],(function(e,t,r,n,i,o,s,a,u,l){"use strict";let d=function(){function r(e,t,r,n,i,o){if(this._streamDataController=t,this._logger=r,this._defaultGeometrySchema=n,this._requiredAttributes=i,this._options=o,this._logLayer=e,this._layerUrl=e.parsedUrl.path,this._geometryDefinitions=e.geometryDefinitions,e.materialDefinitions){const t=e.textureSetDefinitions;this._materialAndTextures=e.materialDefinitions.map((e=>l.getMaterialAndTextures(t,e)))}}var n=r.prototype;return n._load=function(e,t,r){return this._streamDataController.request(e,t,r)},n._loadAttribute=function(e,t,r){const n=`${this._layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;return this._load(n,"binary",r).then((e=>u.readBinaryAttribute(t,e)))},n.loadAttributes=function(e,t,r){return o.eachAlways(t.map((t=>this._loadAttribute(e,t.attributeStorageInfo,r)))).then((r=>{const n={};for(let i=0;i<t.length;++i){const s=r[i].value;if(s)n[t[i].name]=s;else{if(o.isAbortError(r[i].error))throw r[i].error;this._logger.error("#loadAttributes",this._logLayer,`Failed to load attributeData for '${t[i].name}' on node '${e.id}'`,r[i].error)}}return n}))},n.loadNodeData=function(){var r=e._asyncToGenerator((function*(e,r){const n=null!=this._requiredAttributes&&e.resources.attributes?t.result(this.loadAttributes(e,this._requiredAttributes,r)):null,{bufferDefinition:o,bufferIndex:s}=m(this._geometryDefinitions,e),a=!!e.resources.geometry,d=a?t.result(this._loadGeometry(e.resources.geometry,s,r)):null,y=e.resources.hasSharedResource?yield this._loadShared(e,r):null,_=this._materialAndTextures&&e.resources.materialDefinition>=0?this._materialAndTextures[e.resources.materialDefinition]:null!=y?l.getMaterialAndTexturesFromShared(y):null,b=_&&_.material,D=_&&_.textures,x=`${e.id}`,p=!a&&this._options.loadFeatureData,A=p?yield this._loadFeatureData(x,r):null,T=p?c(A):f(b),$=i.isNone(T)&&h(A),w=null!=D&&D.length>0?t.result(this.loadTextures(e,D,r)):null;let S=null,I=null;if(d){S=t.assertResult(yield d);const e=g(this._defaultGeometrySchema,y);I=u.createGeometryDescriptor(o,e)}const U=w?t.assertResult(yield w):null,E=n?t.assertResult(yield n):{},k=E?{attributeData:E,loadedAttributes:this._requiredAttributes}:null;if(i.isSome(T))return{geometryData:T,attributeDataInfo:k,geometryBuffer:S,geometryDescriptor:I,requiredTextures:D,textureData:U};if(i.isSome($))return{pointData:$,attributeDataInfo:k,geometryBuffer:S,geometryDescriptor:I,requiredTextures:D,textureData:U};throw new Error}));function n(e,t){return r.apply(this,arguments)}return n}(),r._addAbsoluteHrefTexture=function(e,t){const r=e.textureDefinitions;if(null!=r)for(const n of Object.keys(r))for(const e of r[n].images)Array.isArray(e.href)?e.hrefConcat=e.href.map((e=>s.makeAbsolute(e,t))):e.hrefConcat=s.makeAbsolute(e.href,t)},r._fixTextureEncodings=function(e){const t=e.textureDefinitions;if(null!=t)for(const r in t){const e=t[r];if(Array.isArray(e.encoding))for(let t=0;t<e.encoding.length;t++){const r=e.encoding[t];"data:"===r.substring(0,5)&&(e.encoding[t]=r.substring(5))}else{const t=e.encoding;"data:"===t.substring(0,5)&&(e.encoding=t.substring(5))}}},n._loadShared=function(e,t){const n=`${this._layerUrl}/nodes/${e.resources.geometry}/shared`;return this._load(n,"json",t).then((e=>(r._fixTextureEncodings(e),r._addAbsoluteHrefTexture(e,n),e)))},n._loadTexture=function(e,t,r,n,i,o){let s=!1;return i===a.TextureEncoding.DDS_S3TC||i===a.TextureEncoding.KTX2||i===a.TextureEncoding.Basis?this._load(e,"binary",o).then((e=>({id:t,usage:r,data:e,encoding:i,downsampled:s}))):this._load(e,"image",o).then((e=>{let o=e;const a=4096,u=2;if(n&&e.width*e.height>=a){const t=Math.ceil(e.width/u),r=Math.ceil(e.height/u),n=document.createElement("canvas");n.width=t,n.height=r;n.getContext("2d").drawImage(e,0,0,t,r),o=n,s=!0}return{id:t,usage:r,data:o,encoding:i,downsampled:s}}))},n.loadTextures=function(e,t,r){const n=this._options.uncompressedTextureDownsamplingEnabled,i=this._options.textureUsageMask;return Promise.all(t.map((t=>{if(0==(t.usage&i))return null;const o=l.selectEncoding(t.encodings,this._options.textureEncodings);if(null==o)return this._logger.error("#loadTextures",this._logLayer,`No known encoding for texture found on node ${e.id}`),Promise.reject();const s=e.resources.texture||e.id,a=`${this._layerUrl}/nodes/${s}/textures/${o.name}`;return this._loadTexture(a,t.id,t.usage,n,o.encoding,r)})))},n._loadFeatureData=function(e,t){const r=`${this._layerUrl}/nodes/${e}/features/0`;return this._load(r,"json",t)},n._loadGeometry=function(e,t,r){const n=`${this._layerUrl}/nodes/${e}/geometries/${t}`;return this._load(n,"binary",r)},r}();function f(e){return{featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:e}}],featureDataPosition:[0,0,0]}}function c(e){for(const t of e.featureData){const e=t.geometries;if(null!=e)for(const r of e)return{featureIds:[t.id],featureDataPosition:t.position,geometries:[r]}}return null}function h(e){const t=new Array;for(const r of e.featureData)null!=r.position&&t.push({featureIds:[r.id],featureDataPosition:r.position,geometries:null});return t}function g(e,t){if(!e||!t||!t.materialDefinitions)return e;const r=Object.keys(t.materialDefinitions)[0];return!t.materialDefinitions[r].params.vertexRegions&&e.vertexAttributes.region&&delete(e=n.clone(e)).vertexAttributes.region,e}function m(e,t){const n={bufferDefinition:null,bufferIndex:0};if(null==e||t.resources.geometryDefinition<0)return n;const i=t.resources.geometryDefinition>=0?e[t.resources.geometryDefinition].geometryBuffers:null;if(null==i)return n;for(let o=0;o<i.length;o++){const e=i[o];if(null==e.compressedAttributes)n.bufferIndex=o,n.bufferDefinition=i[o];else if("draco"===e.compressedAttributes.encoding&&!r("disable-feature:i3s-draco"))return n.bufferIndex=o,n.bufferDefinition=e,n}return n}return d}));
