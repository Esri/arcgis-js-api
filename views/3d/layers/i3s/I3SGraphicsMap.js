/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Evented","../../../../core/MapUtils","../../../../core/maybe"],(function(e,t,n,o,s){"use strict";let i=function(e){function n(t,n){var o;return(o=e.call(this)||this)._updateAndCompare=t,o._notifyUpdated=n,o._nodes=new Map,o._graphics=new Map,o._duplicates=new Map,o}t._inheritsLoose(n,e);var i=n.prototype;return i.clear=function(){if(this._graphics.size>0){const e=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:e})}this._nodes.clear()},i.get=function(e){return this._graphics.get(e)},i.getNode=function(e){return this._nodes.get(e)},i.hasNode=function(e){return this._nodes.has(e)},i.nodes=function(){return this._nodes.values()},i.addNode=function(e,t){this._nodes.set(e,t);const n=t.graphics;if(0===n.length)return;const o=new Set;for(let i=0;i<n.length;i++){const t=n[i],s=t.objectId,r=this._graphics.get(s);if(r){o.add(s),t!==r&&(n[i]=r);const c=this._duplicates.get(s);c?c.push(e):this._duplicates.set(s,[r.nodeIndex,e])}else t.nodeIndex=e,this._graphics.set(s,t)}o.size&&this._updateForeignGraphics(t);const s=o.size>0?n.filter((e=>!o.has(e.objectId))):n;s.length>0&&this.emit("change",{added:s,removed:[]})},i.removeNode=function(e){const t=this._nodes.get(e);if(!t)return void console.error("Removing unknown node");this._nodes.delete(e);const n=new Set,o=[];for(const i of t.graphics){const t=i.objectId,r=this._graphics.get(t);if(!r)continue;const c=this._duplicates.get(t);if(c){const o=c.indexOf(e);if(-1===o){console.error("error: removing graphic from node that should not reference it.");continue}if(c.splice(o,1),r.nodeIndex===e){let e=this.getNode(c[0]);for(let t=1;t<c.length;t++){const n=this.getNode(c[t]);(s.isNone(e)||s.isSome(n)&&n.node.level>e.node.level)&&(e=n)}s.isSome(e)&&n.add(e)}1===c.length&&this._duplicates.delete(t)}else this._graphics.delete(t),o.push(i)}o.length>0&&this.emit("change",{added:[],removed:o}),n.forEach((e=>this._updateForeignGraphics(e)))},i._updateForeignGraphics=function(e){const t=[],n=e.node.index,o=e.node.level;let i=0;for(;i<e.graphics.length;){const r=e.graphics[i].nodeIndex;if(r===n){i++;continue}let c=1;for(;i+c<e.graphics.length&&e.graphics[i+c].nodeIndex===r;)c++;const d=this.getNode(r);if(s.isSome(d)&&d.node.level>o)i+=c;else{for(let o=i;o<i+c;o++){const s=e.graphics[o];s.nodeIndex=n,this._updateAndCompare(s,e,o)&&t.push(s)}i+=c}}this._notifyUpdated(t)},i.toArray=function(){return Array.from(this._graphics.values())},i.find=function(e){let t;return o.someMap(this._graphics,(n=>!!e(n)&&(t=n,!0))),t},i.forEach=function(e){this._graphics.forEach((t=>e(t)))},i.forEachNode=function(e){this._nodes.forEach(((t,n)=>e(t,n)))},i._checkInvariants=function(){const e=new Map;this._nodes.forEach(((t,n)=>{n!==t.node.index&&console.error("Mismatched node index"),t.graphics.forEach((t=>{e.set(t.objectId,1+(e.get(t.objectId)??0));const o=this._duplicates.get(t.objectId);o&&!o.includes(n)&&console.error("Node not listed in duplicate list"),o||t.nodeIndex===n||console.error("Unique graphic does not reference owning node index")}))})),this._graphics.size!==e.size&&console.error("Mismatch between actual and expected number of graphics");let t=0;e.forEach(((e,n)=>{t+=e>1?1:0;const o=this._graphics.get(n);if(!o)return void console.error("Missing graphic entry");const s=this._nodes.get(o.nodeIndex);if(!s)return void console.error("Graphic references unkown node");const i=this._duplicates.get(n);i?(i.length!==e&&console.error("Wrong number of entries in duplicate list"),i.forEach((e=>{const t=this._nodes.get(e);t?t.node.level>s.node.level&&console.error("Duplicated graphic does not reference highest level node"):console.error("Unknown node in duplicate list")}))):e>1&&console.error("Missing duplicates entry")})),this._duplicates.size!==t&&console.error("Mismatch between expected and actual number of duplicate entries")},t._createClass(n,[{key:"length",get:function(){return this._graphics.size}},{key:"nodeCount",get:function(){return this._nodes.size}}]),n}(n);e.I3SGraphicsMap=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
