/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../core/maybe","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../geometry/projectionEllipsoid","../../../../geometry/projection","../../../../chunks/vec4","../../../../layers/graphics/dehydratedFeatures","../../support/geometryUtils","../graphics/elevationAlignmentUtils","../graphics/featureExpressionInfoUtils","../graphics/ElevationContext","../../support/orientedBoundingBox","./I3SUtil"],(function(t,e,i,s,n,r,a,o,c,h,u,m,p){"use strict";const d=1e5;return function(){function l(t,i,s,n,r,c,h,u,m={}){this.indexSR=t,this._renderCoordsHelper=i,this.extent=c,this.elevationProvider=h,this.options=m,this._frustum=o.frustum.create(),this._fixedCOI=!1,this._poi=e.create(),this.minDistance=1/0,this.maxDistance=0,this.maxLodLevel=2,this._tmp1=e.create(),this._tmp2=e.create(),this._tmp3=e.create(),this._tmp0=e.create(),this.screenspaceErrorBias=m.screenspaceErrorBias||1,this.progressiveLoadFactor=m.progressiveLoadFactor||1,this.updateCamera(s,n,r),this.engineSR=this._renderCoordsHelper.spatialReference,this.updateElevationInfo(u),this.tmpPoint=a.makeDehydratedPoint(0,0,0,t)}var f=l.prototype;return f.updateElevationInfo=function(t){null!=t?(this._elevationContext=u.ElevationContext.fromElevationInfo(t),this._elevationContext.updateFeatureExpressionInfoContext(h.createContextWithoutExpressionSupport(h.extractExpressionInfo(t,!1)))):this._elevationContext=null},f.updateCamera=function(t,e,i){this._fixedCOI=i,i||o.frustum.fromMatrix(t.viewMatrix,t.projectionMatrix,this._frustum),this._screenSizeFactor=1/(e.perScreenPixelRatio/2),this._camPos=e.eye,this.minDistance=1/0,this.maxDistance=0},f.setPointOfInterest=function(t){this._poi=t},f.updateScreenSpaceErrorBias=function(t){const e=this.screenspaceErrorBias;return this.screenspaceErrorBias=t,e},f.updateExtent=function(t){this.extent=t},f.getRenderMbs=function(t){const e=t.renderMbs;return e[3]<0&&(r.copy(e,t.mbs),this._elevationContext&&e[3]<d&&(this.tmpPoint.x=e[0],this.tmpPoint.y=e[1],this.tmpPoint.z=e[2],e[2]=c.evaluateElevationAlignmentAtPoint(this.tmpPoint,this.elevationProvider,this._elevationContext,this._renderCoordsHelper)),n.projectBoundingSphere(e,this.indexSR,e,this.engineSR)),e},f.getVisibilityObb=function(e){if(t.isSome(e.visibilityObb))return e.visibilityObb;const i=e.serviceObb;return t.isNone(i)||i.halfSize[0]<0?void 0:(e.serviceObbInRenderSR=this._computeRenderObb(i,e.serviceObbInRenderSR,e.mbs[3]),e.serviceObbInRenderSR)},f._computeRenderObb=function(e,i,s){if(t.isNone(i)&&(i=m.create()),i.halfSize[0]<0){let t=0;this._elevationContext&&s<d&&(this.tmpPoint.x=e.center[0],this.tmpPoint.y=e.center[1],this.tmpPoint.z=e.center[2],t=c.evaluateElevationAlignmentAtPoint(this.tmpPoint,this.elevationProvider,this._elevationContext,this._renderCoordsHelper)-e.center[2]),p.transformObb(e,this.indexSR,i,this.engineSR,t)}return i},f.isNodeVisible=function(e){const i=this.getRenderMbs(e);if(!this.isMBSinExtent(i))return!1;if(this._fixedCOI)return!0;const s=this.getVisibilityObb(e);return t.isSome(s)?m.isVisible(s,this._frustum):o.frustum.intersectsSphere(this._frustum,o.sphere.wrap(i))},f.isGeometryVisible=function(e){if(this._fixedCOI)return!0;const i=e.geometryObb;return t.isSome(i)?m.isVisible(i,this._frustum):this.isNodeVisible(e)},f.isMBSinExtent=function(t){return!this.extent||0!==p.intersectBoundingBoxWithMbs(this.extent,t)},f.screenSpaceDiameterMbs=function(t,e){const s=this.getRenderMbs(t),n=Math.sqrt(i.squaredDistance(s,this._camPos)),r=n-s[3];return this._updateMinMaxDistance(n),r<0?.5*Number.MAX_VALUE:e/r*this._screenSizeFactor},f.calcCameraDistance=function(t){return this.calcCameraDistanceToCenter(t)-this.getRenderMbs(t)[3]},f.calcCameraDistanceToCenter=function(t){const e=this.getRenderMbs(t),s=i.distance(e,this._camPos);return this._updateMinMaxDistance(s),s},f.calcAngleDependentLoD=function(t){const e=this.getRenderMbs(t),s=e[3],n=(Math.abs(e[0]*(e[0]-this._camPos[0])+e[1]*(e[1]-this._camPos[1])+e[2]*(e[2]-this._camPos[2]))/i.length(e)+s)/i.distance(e,this._camPos);return Math.min(1,n)},f.hasLOD=function(t){return 0!==t.lodMetric},f.getDistancePlanarMode=function(t,e){const i=t[0]-e[0],s=t[1]-e[1],n=t[2]-e[2],r=i*i+s*s,a=e[3];if(r<=a*a)return Math.abs(n);const o=Math.sqrt(r)-a;return Math.sqrt(n*n+o*o)},f.getDistanceGlobeMode=function(t,e){const s=i.length(e),n=i.length(t)-s;i.scale(this._tmp0,t,i.dot(t,e)/i.squaredLength(t));const r=i.squaredDistance(e,this._tmp0),a=e[3];if(r<=a*a)return Math.abs(n);{const r=i.scale(this._tmp0,e,1/s),o=s,c=a*a/2/o,h=i.scale(this._tmp1,r,o-c),u=t,m=i.subtract(this._tmp2,u,h),p=i.subtract(this._tmp2,m,i.scale(this._tmp3,r,i.dot(r,m))),d=i.add(this._tmp2,h,i.scale(this._tmp2,p,a/i.length(p)));let l=i.distance(u,d);if(n>=2e5){const t=i.subtract(this._tmp1,u,d);let e=i.dot(t,r)/i.length(t);e<.08&&(e=1e-4),l/=e}return l}},f.getDistance=function(t,e){return this.engineSR===s.getSphericalPCPF(this.engineSR)?this.getDistanceGlobeMode(t,e):this.getDistancePlanarMode(t,e)},f._updateMinMaxDistance=function(t){t>0?(this.minDistance=Math.min(this.minDistance,t),this.maxDistance=Math.max(this.maxDistance,t)):(this.minDistance=0,this.maxDistance=Math.max(this.maxDistance,-t))},f.getLodLevel=function(t){if(0===t.lodMetric||!t.resources.hasFeatureData)return 0;if(0===t.childCount)return this.maxLodLevel;if(!this._fixedCOI&&this.progressiveLoadFactor<1){const e=this.progressiveLoadFactor*this.screenspaceErrorBias,i=this.screenspaceErrorBias;return this.evaluateLODmetric(t,e)?this.evaluateLODmetric(t,i)?2:1:0}return this.evaluateLODmetric(t,this.screenspaceErrorBias)?this.maxLodLevel:0},f.evaluateLODmetric=function(t,e){switch(t.lodMetric){case 2:{const i=this.getRenderMbs(t),s=this.getDistance(this._camPos,i),n=2*s/this._screenSizeFactor,r=s+i[3];return this._updateMinMaxDistance(r),t.maxError*e<=n}case 1:{let i=this.screenSpaceDiameterMbs(t,t.mbs[3]*e);return this.options.angleDependentLoD&&(i*=this.calcAngleDependentLoD(t)),i<t.maxError}case 3:return this.screenSpaceDiameterMbs(t,t.maxError)*e<10;case 4:return this.calcCameraDistance(t)>t.maxError*e}return!1},f.distToPOI=function(t){const e=this.getRenderMbs(t);return i.distance(e,this._poi)-e[3]},f.distCameraToPOI=function(){return i.distance(this._camPos,this._poi)},l}()}));
