/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as r}from"../../../chunks/tslib.es6.js";import e from"../../../Graphic.js";import{isNone as t}from"../../../core/maybe.js";import{initial as o}from"../../../core/reactiveUtils.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{I3SMeshView3D as a}from"./I3SMeshView3D.js";import{DrapeTargetType as n}from"./interfaces.js";import{LayerView3D as p}from"./LayerView3D.js";import{updatingProgress as c}from"../support/updatingProperties.js";import d from"../../layers/LayerView.js";const l=.2;let m=class extends(a(p(d))){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get progressiveLoadFactor(){return this.lodFactor>=1?l:1}initialize(){this.updatingHandles.add((()=>this.layer.modifications),(()=>this._loadModifications()),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const r=new e;return r.layer=this.layer,r.sourceLayer=this.layer,r}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),t(this.layer.modifications))return void(this._modifications=[]);const r=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange((()=>r),(()=>this._modifications=r.toArray()),o),"modifications")}};r([i()],m.prototype,"layer",void 0),r([i({aliasOf:"layer"})],m.prototype,"i3slayer",void 0),r([i(c)],m.prototype,"updatingProgress",void 0),r([i({readOnly:!0,aliasOf:"_controller.updatingProgress"})],m.prototype,"updatingProgressValue",void 0),r([i({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],m.prototype,"lodFactor",void 0),r([i({readOnly:!0})],m.prototype,"progressiveLoadFactor",null),m=r([s("esri.views.3d.layers.SceneLayerView3D")],m);const h=m;export{h as default};
