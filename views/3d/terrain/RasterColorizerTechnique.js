/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{RasterColorizerType as r,RasterColorizerStretchType as o}from"../../2d/engine/imagery/enums.js";import{BlendModeTechniqueConfiguration as i}from"./BlendModeTechniqueConfiguration.js";import{R as t}from"../../../chunks/RasterColorizer.glsl.js";import{TileBlendInput as n}from"../webgl-engine/core/shaderLibrary/terrain/TileBlendInput.js";import{a as s}from"../../../chunks/BlendLayers.glsl.js";import{ReloadableShaderModule as l}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as a}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{parameter as p}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as c}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as m}from"../webgl-engine/lib/Program.js";import{BlendFactor as d}from"../../webgl/enums.js";import{makePipelineState as u,simpleBlendingParams as g,defaultColorWriteParams as h}from"../../webgl/renderState.js";class b extends a{initializeProgram(e){const r=b.shader.get().build(this.configuration);return new m(e.rctx,r,c)}initializePipeline(){return u({blending:g(d.ONE,d.ONE_MINUS_SRC_ALPHA),colorWrite:h})}}b.shader=new l(t,(()=>import("../webgl-engine/core/shaderLibrary/raster/RasterColorizer.glsl.js")));class y extends i{constructor(){super(...arguments),this.colorizerType=r.Stretch,this.stretchType=o.Noop,this.tileBlendInput=n.LayerOnly,this.baseOpacityMode=s.One,this.applyColormap=!0}}e([p({count:r.COUNT})],y.prototype,"colorizerType",void 0),e([p({count:o.COUNT})],y.prototype,"stretchType",void 0),e([p({count:n.COUNT})],y.prototype,"tileBlendInput",void 0),e([p({count:s.COUNT})],y.prototype,"baseOpacityMode",void 0),e([p()],y.prototype,"applyColormap",void 0);export{b as RasterColorizerTechnique,y as RasterColorizerTechniqueConfiguration};
