/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/mathUtils","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/projection","../../../geometry/projectionEllipsoid","../../../geometry/support/frustum","../../../geometry/support/plane","./PatchGeometryFactory","./Tile"],(function(t,e,i,s,n,r,a,o,l,h,c){"use strict";let d=function(t){function l(e,i,s){var r;(r=t.call(this,u)||this).obb=new Array(8),r.isWebMercator=!1;for(let t=0;t<8;t++)r.obb[t]=n.create();return void 0!==e&&r.init(e,i,s),r}e._inheritsLoose(l,t);var c=l.prototype;return c.init=function(e,a,o){t.prototype.init.call(this,e,a,o),this.isWebMercator=o.tilingScheme.spatialReference.isWebMercator;const l=this.ellipsoid.radius,h=this.extentInRadians[0],c=this.extentInRadians[1],d=this.extentInRadians[2],u=this.extentInRadians[3],p=e[0],f=i.lerp(c,u,.5),_=i.lerp(h,d,.5),b=0===p?0:Math.min(Math.abs(c),Math.abs(u));this._edgeLen=(d-h)*Math.cos(b)*l,this._edgeLen2=this._edgeLen*this._edgeLen,this._curvatureHeight=l-Math.sqrt(l*l-this._edgeLen2/4),r.lonLatToSphericalPCPF(this.centerAtSeaLevel,_,f,this.ellipsoid.radius,0);const P=n.fromArray(this.centerAtSeaLevel);s.normalize(P,P),this.up=P,this._updateOBB(),this.updateRadiusAndCenter()},c.updateRadiusAndCenter=function(){if(0===this.lij[0])s.set(this._center[1],0,0,0),s.set(this._center[0],0,0,0),s.set(this._center[2],0,0,0),this.ellipsoid||(this.ellipsoid=a.getReferenceEllipsoid(this.surface.spatialReference)),this._center[1][3]=this.ellipsoid.radius+this.elevationBounds[1];else{this._updateCenter();const t=Math.max(s.squaredDistance(this._center[1],this.obb[0]),s.squaredDistance(this._center[1],this.obb[1]));this._center[1][3]=Math.sqrt(t)}},c._isVisible=function(t){if(!this.intersectsClippingArea)return!1;if(!o.intersectsSphere(t,this._center[1]))return!1;if(this.lij[0]<10)return!0;const e=this.obb;for(let i=0;i<6;i++){const s=4===i,n=t[i];s&&(p[0]=n[0],p[1]=n[1],p[2]=n[2],p[3]=n[3]-this.surface.view.state.camera.near);const r=s?p:n;let a;for(a=0;a<8;a++){const t=e[a];if(r[0]*t[0]+r[1]*t[1]+r[2]*t[2]+r[3]<0)break}if(8===a)return!1}return!0},c.computeElevationBounds=function(){t.prototype.computeElevationBounds.call(this),this._updateOBB()},c.createGeometry=function(t,e){const i=this._isPole(this.lij[1],this.lij[0]);h.createSphericalGlobePatch(t,this.extent,e,this.renderData,this.extentInRadians,this.isWebMercator,this.ellipsoid,i),this.setMemoryDirty()},c._updateOBB=function(){const t=this.extentInRadians,e=this.obb;for(let i=0;i<2;i++){const s=this.elevationBounds[i];let n=4*i;r.lonLatToSphericalPCPF(e[n++],t[0],t[1],this.ellipsoid.radius,s),r.lonLatToSphericalPCPF(e[n++],t[0],t[3],this.ellipsoid.radius,s),r.lonLatToSphericalPCPF(e[n++],t[2],t[3],this.ellipsoid.radius,s),r.lonLatToSphericalPCPF(e[n++],t[2],t[1],this.ellipsoid.radius,s)}if(this.isWebMercator){const t=this._isPole(this.lij[1],this.lij[0]);2===t?(s.set(e[1],0,0,this.ellipsoid.radius),s.set(e[2],0,0,this.ellipsoid.radius),s.set(e[5],0,0,this.ellipsoid.radius),s.set(e[6],0,0,this.ellipsoid.radius)):1===t&&(s.set(e[0],0,0,-this.ellipsoid.radius),s.set(e[3],0,0,-this.ellipsoid.radius),s.set(e[4],0,0,-this.ellipsoid.radius),s.set(e[7],0,0,-this.ellipsoid.radius))}},c._isPole=function(t,e){let i=0;return t===(1<<e)-1&&(i+=1),0===t&&(i+=2),i},c.intersectsRay=function(t,e,i,s,n){const r=this._center[1],a=r[3],o=r[0],l=r[1],h=r[2],c=a+i+.2*this.ellipsoid.radius*Math.abs(n*(this.extentInRadians[3]-this.extentInRadians[1])),d=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],u=o-t[0],p=l-t[1],f=h-t[2],_=(u*e[0]+p*e[1]+f*e[2])/d,b=e[0]*_-u,P=e[1]*_-p,m=e[2]*_-f;return b*b+P*P+m*m<c*c},l}(c.default);const u=[128,64,32,16,16,8,8,4],p=l.create();t.SphericalPatch=d,Object.defineProperty(t,"__esModule",{value:!0})}));
