/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/mathUtils","../../../chunks/vec3f64","../../../chunks/vec3","../../../geometry/projectionEllipsoid","../../../geometry/projection","../../../chunks/plane","../support/geometryUtils","./PatchGeometryFactory","./Tile"],(function(t,e,i,s,r,n,a,o,l,h,c){"use strict";let u=function(t){function c(e,i,r){var n;(n=t.call(this,d)||this).obb=new Array(8),n.isWebMercator=!1;for(let t=0;t<8;t++)n.obb[t]=s.create();return void 0!==e&&n.init(e,i,r),n}e._inheritsLoose(c,t);var u=c.prototype;return u.init=function(e,n,o){t.prototype.init.call(this,e,n,o),this.isWebMercator=o.tilingScheme.spatialReference.isWebMercator;const l=this.ellipsoid.radius,h=this.extentInRadians[0],c=this.extentInRadians[1],u=this.extentInRadians[2],d=this.extentInRadians[3],p=e[0],f=i.lerp(c,d,.5),_=i.lerp(h,u,.5),b=0===p?0:Math.min(Math.abs(c),Math.abs(d));this._edgeLen=(u-h)*Math.cos(b)*l,this._edgeLen2=this._edgeLen*this._edgeLen,this._curvatureHeight=l-Math.sqrt(l*l-this._edgeLen2/4),a.lonLatToSphericalPCPF(this.centerAtSeaLevel,_,f,this.ellipsoid.radius,0);const P=s.fromArray(this.centerAtSeaLevel);r.normalize(P,P),this.up=P,this._updateOBB(),this.updateRadiusAndCenter()},u.updateRadiusAndCenter=function(){if(0===this.lij[0])r.set(this._center[0],0,0,0),r.set(this._center[1],0,0,0),r.set(this._center[2],0,0,0),this.ellipsoid||(this.ellipsoid=n.getReferenceEllipsoid(this.surface.tilingScheme.spatialReference)),this._radius=this.ellipsoid.radius+this.elevationBounds[1];else{this._updateCenter();const t=Math.max(r.squaredDistance(this._center[0],this.obb[0]),r.squaredDistance(this._center[0],this.obb[1]));this._radius=Math.sqrt(t)}},u._isVisible=function(){if(!this.intersectsClippingArea)return!1;const t=this.lij[0],e=this.surface.frustum.planes;if(t<10)return l.frustum.intersectsSphere(e,l.sphere.wrap(this._radius,this._center[0]));const i=this.obb;for(let t=0;t<6;t++){let s,r=e[t];for(4===t&&(r=o.copy(r,p),p[3]-=this.surface.view.state.camera.near),s=0;s<8&&!o.isPointOutside(r,i[s]);s++);if(8===s)return!1}return!0},u.computeElevationBounds=function(){t.prototype.computeElevationBounds.call(this),this._updateOBB()},u.createGeometry=function(t,e){const i=this._isPole(this.lij[1],this.lij[0]);h.createSphericalGlobePatch(t,this.extent,e,this.renderData,this.extentInRadians,this.isWebMercator,this.ellipsoid,i),this.setMemoryDirty()},u._updateOBB=function(){const t=this.extentInRadians,e=this.obb;for(let i=0;i<2;i++){const s=this.elevationBounds[i];let r=4*i;a.lonLatToSphericalPCPF(e[r++],t[0],t[1],this.ellipsoid.radius,s),a.lonLatToSphericalPCPF(e[r++],t[0],t[3],this.ellipsoid.radius,s),a.lonLatToSphericalPCPF(e[r++],t[2],t[3],this.ellipsoid.radius,s),a.lonLatToSphericalPCPF(e[r++],t[2],t[1],this.ellipsoid.radius,s)}if(this.isWebMercator){const t=this._isPole(this.lij[1],this.lij[0]);2===t?(r.set(e[1],0,0,this.ellipsoid.radius),r.set(e[2],0,0,this.ellipsoid.radius),r.set(e[5],0,0,this.ellipsoid.radius),r.set(e[6],0,0,this.ellipsoid.radius)):1===t&&(r.set(e[0],0,0,-this.ellipsoid.radius),r.set(e[3],0,0,-this.ellipsoid.radius),r.set(e[4],0,0,-this.ellipsoid.radius),r.set(e[7],0,0,-this.ellipsoid.radius))}},u._isPole=function(t,e){let i=0;return t===(1<<e)-1&&(i+=1),0===t&&(i+=2),i},c}(c.default);const d=[128,64,32,16,16,8,8,4],p=o.create();t.SphericalPatch=u,Object.defineProperty(t,"__esModule",{value:!0})}));
