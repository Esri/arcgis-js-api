/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/mathUtils","../../../chunks/vec3f64","../../../chunks/vec3","../../../geometry/projectionEllipsoid","../../../geometry/projection","../../../chunks/plane","../../../chunks/frustum","./PatchGeometryFactory","./Tile"],(function(e,t,i,s,n,r,a,o,l,h,c){"use strict";let d=function(e){function c(t,i,n){var r;(r=e.call(this,u)||this).obb=new Array(8),r.isWebMercator=!1;for(let e=0;e<8;e++)r.obb[e]=s.create();return void 0!==t&&r.init(t,i,n),r}t._inheritsLoose(c,e);var d=c.prototype;return d.init=function(t,r,o){e.prototype.init.call(this,t,r,o),this.isWebMercator=o.tilingScheme.spatialReference.isWebMercator;const l=this.ellipsoid.radius,h=this.extentInRadians[0],c=this.extentInRadians[1],d=this.extentInRadians[2],u=this.extentInRadians[3],p=t[0],f=i.lerp(c,u,.5),_=i.lerp(h,d,.5),b=0===p?0:Math.min(Math.abs(c),Math.abs(u));this._edgeLen=(d-h)*Math.cos(b)*l,this._edgeLen2=this._edgeLen*this._edgeLen,this._curvatureHeight=l-Math.sqrt(l*l-this._edgeLen2/4),a.lonLatToSphericalPCPF(this.centerAtSeaLevel,_,f,this.ellipsoid.radius,0);const P=s.fromArray(this.centerAtSeaLevel);n.normalize(P,P),this.up=P,this._updateOBB(),this.updateRadiusAndCenter()},d.updateRadiusAndCenter=function(){if(0===this.lij[0])n.set(this._center[1],0,0,0),n.set(this._center[0],0,0,0),n.set(this._center[2],0,0,0),this.ellipsoid||(this.ellipsoid=r.getReferenceEllipsoid(this.surface.tilingScheme.spatialReference)),this._center[1][3]=this.ellipsoid.radius+this.elevationBounds[1];else{this._updateCenter();const e=Math.max(n.squaredDistance(this._center[1],this.obb[0]),n.squaredDistance(this._center[1],this.obb[1]));this._center[1][3]=Math.sqrt(e)}},d._isVisible=function(e){if(!this.intersectsClippingArea)return!1;if(this.lij[0]<10)return l.intersectsSphere(e,this._center[1]);const t=this.obb;for(let i=0;i<6;i++){let s,n=e[i];for(4===i&&(n=o.copy(n,p),p[3]-=this.surface.view.state.camera.near),s=0;s<8&&!o.isPointOutside(n,t[s]);s++);if(8===s)return!1}return!0},d.computeElevationBounds=function(){e.prototype.computeElevationBounds.call(this),this._updateOBB()},d.createGeometry=function(e,t){const i=this._isPole(this.lij[1],this.lij[0]);h.createSphericalGlobePatch(e,this.extent,t,this.renderData,this.extentInRadians,this.isWebMercator,this.ellipsoid,i),this.setMemoryDirty()},d._updateOBB=function(){const e=this.extentInRadians,t=this.obb;for(let i=0;i<2;i++){const s=this.elevationBounds[i];let n=4*i;a.lonLatToSphericalPCPF(t[n++],e[0],e[1],this.ellipsoid.radius,s),a.lonLatToSphericalPCPF(t[n++],e[0],e[3],this.ellipsoid.radius,s),a.lonLatToSphericalPCPF(t[n++],e[2],e[3],this.ellipsoid.radius,s),a.lonLatToSphericalPCPF(t[n++],e[2],e[1],this.ellipsoid.radius,s)}if(this.isWebMercator){const e=this._isPole(this.lij[1],this.lij[0]);2===e?(n.set(t[1],0,0,this.ellipsoid.radius),n.set(t[2],0,0,this.ellipsoid.radius),n.set(t[5],0,0,this.ellipsoid.radius),n.set(t[6],0,0,this.ellipsoid.radius)):1===e&&(n.set(t[0],0,0,-this.ellipsoid.radius),n.set(t[3],0,0,-this.ellipsoid.radius),n.set(t[4],0,0,-this.ellipsoid.radius),n.set(t[7],0,0,-this.ellipsoid.radius))}},d._isPole=function(e,t){let i=0;return e===(1<<t)-1&&(i+=1),0===e&&(i+=2),i},c}(c.default);const u=[128,64,32,16,16,8,8,4],p=o.create();e.SphericalPatch=d,Object.defineProperty(e,"__esModule",{value:!0})}));
