/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/mathUtils","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/projection","../../../geometry/projectionEllipsoid","../../../geometry/support/frustum","./interfaces","./PatchGeometryFactory","./Tile"],(function(e,t,i,s,n,r,o,a,l,h,c){"use strict";let u=function(c){function u(e,t,i){var s;(s=c.call(this)||this)._obb=new Array(8);for(let r=0;r<8;r++)s._obb[r]=n.create();return void 0!==e&&s.init(e,t,i),s}t._inheritsLoose(u,c);var p=u.prototype;return p.init=function(e,t,o){c.prototype.init.call(this,e,t,o);const a=this.ellipsoid.radius,l=this.extentInRadians[0],h=this.extentInRadians[1],u=this.extentInRadians[2],d=this.extentInRadians[3],p=e[0],P=i.lerp(h,d,.5),_=i.lerp(l,u,.5),T=0===p?0:Math.min(Math.abs(h),Math.abs(d));this._edgeLen=(u-l)*Math.cos(T)*a,this._edgeLen2=this._edgeLen*this._edgeLen,this._curvatureHeight=a-Math.sqrt(a*a-this._edgeLen2/4),r.lonLatToSphericalPCPF(this.centerAtSeaLevel,_,P,this.ellipsoid.radius);const f=n.fromArray(this.centerAtSeaLevel);s.normalize(f,f),this.up=f,this._updateOBB(),this.updateRadiusAndCenter()},p.updateRadiusAndCenter=function(){if(0===this.lij[0])s.set(this._center[e.CenterPosition.MIDDLE],0,0,0),s.set(this._center[e.CenterPosition.TOP],0,0,0),s.set(this._center[e.CenterPosition.BOTTOM],0,0,0),this.ellipsoid||(this.ellipsoid=o.getReferenceEllipsoid(this.surface.spatialReference)),this._center[e.CenterPosition.MIDDLE][3]=this.ellipsoid.radius+this.elevationBounds[1];else{this._updateCenter();const t=Math.max(s.squaredDistance(this._center[e.CenterPosition.MIDDLE],this._obb[0]),s.squaredDistance(this._center[e.CenterPosition.MIDDLE],this._obb[1]));this._center[e.CenterPosition.MIDDLE][3]=Math.sqrt(t)}},p._calculateFrustumVisibilityStatus=function(t){if(!a.intersectsSphere(t,this._center[e.CenterPosition.MIDDLE]))return l.TileFrustumVisibility.OUTSIDE;if(this.lij[0]<10)return l.TileFrustumVisibility.INTERSECTS;const i=this._obb,s=this.surface.view.state.camera.near;let n=!0;for(let e=0;e<a.NumPlanes.NUM;e++){const r=e===a.PlaneIndex.NEAR,o=t[e],h=o[0],c=o[1],u=o[2],d=o[3]-(r?s:0);let p=!1;for(let e=0;e<8;++e){const t=i[e];if(h*t[0]+c*t[1]+u*t[2]+d<0){if(p=!0,!n)break}else n=!1}if(!p)return l.TileFrustumVisibility.OUTSIDE}return n?l.TileFrustumVisibility.INSIDE:l.TileFrustumVisibility.INTERSECTS},p.computeElevationBounds=function(){c.prototype.computeElevationBounds.call(this),this._updateOBB()},p.createGeometry=function(){const e=this._getPatchType(this.lij[1],this.lij[0]);h.createSphericalGlobePatch(this.renderData,e),this.setMemoryDirty()},p._updateOBB=function(){const e=this.extentInRadians,t=this._obb;for(let i=0;i<2;i++){const s=this.elevationBounds[i];let n=4*i;r.lonLatToSphericalPCPF(t[n++],e[0],e[1],this.ellipsoid.radius+s),r.lonLatToSphericalPCPF(t[n++],e[0],e[3],this.ellipsoid.radius+s),r.lonLatToSphericalPCPF(t[n++],e[2],e[3],this.ellipsoid.radius+s),r.lonLatToSphericalPCPF(t[n++],e[2],e[1],this.ellipsoid.radius+s)}if(this.surface.isWebMercator)switch(this._getPatchType(this.lij[1],this.lij[0])){case l.PatchType.HAS_NORTH_POLE:s.set(t[1],0,0,this.ellipsoid.radius),s.set(t[2],0,0,this.ellipsoid.radius),s.set(t[5],0,0,this.ellipsoid.radius),s.set(t[6],0,0,this.ellipsoid.radius);break;case l.PatchType.HAS_SOUTH_POLE:s.set(t[0],0,0,-this.ellipsoid.radius),s.set(t[3],0,0,-this.ellipsoid.radius),s.set(t[4],0,0,-this.ellipsoid.radius),s.set(t[7],0,0,-this.ellipsoid.radius)}},p._getPatchType=function(e,t){return e===(1<<t)-1?0===e?l.PatchType.HAS_BOTH_POLES:l.PatchType.HAS_SOUTH_POLE:0===e?l.PatchType.HAS_NORTH_POLE:l.PatchType.REGULAR},p.intersectsRay=function(t,i,s,n){const r=this._center[e.CenterPosition.MIDDLE],o=r[3]+s,a=i[0]*i[0]+i[1]*i[1]+i[2]*i[2],l=r[0]-t[0],h=r[1]-t[1],c=r[2]-t[2],u=(l*i[0]+h*i[1]+c*i[2])/a,d=i[0]*u-l,p=i[1]*u-h,P=i[2]*u-c;return d*d+p*p+P*P<o*o},p.getDefaultVerticesPerRowOnLevel=function(){return this.level<d.length?d[this.level]+1:2},p.updateCornerElevations=function(){h.updateCornerSpherical(this.renderData)},p.updateEdgeElevations=function(){h.updateEdgesAndCornersSpherical(this.renderData)},u}(c.Tile);const d=[128,64,32,16,16,8,8,4];var p;e.CenterPosition=void 0,(p=e.CenterPosition||(e.CenterPosition={}))[p.TOP=0]="TOP",p[p.MIDDLE=1]="MIDDLE",p[p.BOTTOM=2]="BOTTOM",e.SphericalPatch=u,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
