/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/arrayUtils","../../../core/maybe","../../../geometry/support/aaBoundingBox","../support/buffer/glUtil","./GeometryState","./LayerClass","./PatchGeometryFactory","./TextureFader","./TileOverlayData","./tileUtils","../webgl-engine/lib/DefaultVertexAttributeLocations","../../webgl/BufferObject","../../webgl/VertexArrayObject"],(function(e,t,r,i,s,n,a,o,l,u,c,h,m,y,f){"use strict";let g=function(){function e(){this.geometryInfo=new l.PatchGeometry,this.intersectionData=null,this.skirtIntersectionData=null,this.geometryState=new a.GeometryState,this._textureRef=new u.default((()=>this.tile.surface.textureFadeDuration)),this.overlay=new c}var g=e.prototype;return g.init=function(e){this.tile=e,this.clear();const t=this.geometryInfo;t.indices=null,t.vertexAttributes=null,s.empty(t.boundingBox),t.numSurfaceIndices=0,t.numSkirtIndices=0,t.numWithoutSkirtIndices=0,t.numVertsPerRow=0,this.intersectionData=null,this.skirtIntersectionData=null,this.geometryState=new a.GeometryState,this.localOrigin=null,this.overlay.clear()},g.clear=function(){this.releaseGeometry(),this.releaseTexture(),this._textureRef.clear()},g.updateGeometry=function(e,t){return!!this._updateGeometryState(t)&&(this._releaseGeometry(),this._createGeometry(e),!0)},g.releaseGeometry=function(){return!!this._releaseGeometry()&&(this.geometryState=new a.GeometryState,!0)},g.ensureTexture=function(e,t){return i.isSome(this._texture)&&this._texture.descriptor.width!==e&&this.releaseTexture(),i.isNone(this._texture)&&(this._texture=t(),this.tile.setMemoryDirty()),this._texture},g.releaseTexture=function(){i.isSome(this._texture)&&(this._texture.release(),this._texture=null,this.tile.setMemoryDirty())},g._updateGeometryState=function(e){const t=this._getElevationInfo(),i=t.samplerData?this.tile.getElevationBasedVerticesPerRow(t.maxTileLevel):this.tile.getDefaultVerticesPerRowOnLevel();let s=this.tile.clippingArea;this.tile.intersectsClippingArea&&!this.tile.isWithinClippingArea||(s=null);const n=this.geometryState;let a=!1;return n.numVertsPerSide!==i&&(n.numVertsPerSide=i,a=!0),t.changed&&(n.samplerData=t.samplerData,a=!0),r.equals(n.clippingArea,s)||(n.clippingArea=s,a=!0),n.wireframe!==e&&(n.wireframe=e,a=!0),a},g._createGeometry=function(e){this.tile.createGeometry(this.geometryState,this.localOrigin);const t=this.geometryInfo.vertexAttributes,r=this.geometryInfo.indices,i=e.gl;this._vao=new f.VertexArrayObject(e,m.Default3D,{geometry:n.glLayout(t.layout)},{geometry:y.BufferObject.createVertex(e,i.STATIC_DRAW,t.buffer)},y.BufferObject.createIndex(e,i.STATIC_DRAW,r))},g._releaseGeometry=function(){return!!this._vao&&(this._vao.dispose(),this._vao=null,l.releaseGeometry(this.geometryInfo),!0)},g.setTextureReference=function(e,t=u.ActivationTime.Immediate){i.isSome(e)&&e.texture!==this._texture&&this.releaseTexture(),this._textureRef.push(e,t)},g._getElevationInfo=function(){const e=this.geometryState.samplerData,t=this.tile.layerInfo[o.LayerClass.ELEVATION],r=t.length;let s=new Array(r),n=0,a=0,l=!1;for(let i=0;i<r;i++){const r=t[i];if(r.upsampleInfo){const t=r.upsampleInfo.tile,u=t.layerInfo[o.LayerClass.ELEVATION][i].data,c=u&&u.samplerData;e&&e[n]===c||(l=!0),s[n++]=c,a=Math.max(a,t.lij[0])}else if(r.data){const t=this.tile.surface.layerViewByIndex(i,o.LayerClass.ELEVATION);if(h.fallsWithinLayer(this.tile,t.layer,!1)){const t=r.data;e&&e[n]===t.samplerData||(l=!0),s[n++]=t.samplerData,a=this.tile.level}}}return i.isSome(e)&&e.length!==n&&(l=!0),n>0?s.length=n:s=null,{changed:l,samplerData:s,maxTileLevel:a}},t._createClass(e,[{key:"vao",get:function(){return this._vao}},{key:"textureReference",get:function(){return this._textureRef.current}},{key:"nextTextureReference",get:function(){return this._textureRef.next}},{key:"textureFadeFactor",get:function(){return this._textureRef.fadeFactor}},{key:"textureIsFading",get:function(){return this._textureRef.isFading}},{key:"estimatedGeometryMemoryUsage",get:function(){const e=i.mapOr(this.intersectionData,0,(e=>e.estimatedMemoryUsage))+i.mapOr(this.skirtIntersectionData,0,(e=>e.estimatedMemoryUsage+e.vertexPositionBuffer.byteLength));return this.geometryInfo.indices.byteLength+this.geometryInfo.vertexAttributes.byteLength+e}},{key:"textureDescriptor",get:function(){return i.isSome(this._texture)?this._texture.descriptor:null}},{key:"test",get:function(){return{hasTexture:null!=this._texture}}}]),e}();Object.defineProperty(e,"ActivationTime",{enumerable:!0,get:()=>u.ActivationTime}),e.PatchRenderData=g,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
