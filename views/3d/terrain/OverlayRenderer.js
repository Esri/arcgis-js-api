/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Accessor.js";import t from"../../../core/Evented.js";import s from"../../../core/Handles.js";import{someMap as i}from"../../../core/MapUtils.js";import{releaseMaybe as o,disposeMaybe as a,isSome as n,isNone as d,unwrapOr as h}from"../../../core/maybe.js";import c from"../../../core/PooledArray.js";import{watch as l,syncAndInitial as u,on as p}from"../../../core/reactiveUtils.js";import{someSet as _}from"../../../core/SetUtils.js";import{property as g}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as m}from"../../../core/accessorSupport/decorators/subclass.js";import{q as y,f as R}from"../../../chunks/mat4.js";import{f as T}from"../../../chunks/vec3f64.js";import{ViewingMode as f}from"../../ViewingMode.js";import{DrapeTargetType as b,DrapeSourceType as S}from"../layers/interfaces.js";import w from"../support/debugFlags.js";import{OverlayIndex as v,RenderTargetType as x}from"./interfaces.js";import{Overlay as O}from"./Overlay.js";import{OverlayFramebufferObject as D}from"./OverlayFramebufferObject.js";import{OverlayRenderTarget as j}from"./OverlayRenderTarget.js";import{ShaderTechniqueRepository as E}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueRepository.js";import{autoDispose as A,AutoDisposableMixin as P}from"../webgl-engine/lib/AutoDisposable.js";import{TransparencyPassType as C,UpdatePolicy as F}from"../webgl-engine/lib/basicInterfaces.js";import{Camera as M}from"../webgl-engine/lib/Camera.js";import{GLMaterialRepository as q}from"../webgl-engine/lib/GLMaterialRepository.js";import{createEmptyDepthTexture as I,createQuadVAO as U}from"../webgl-engine/lib/glUtil3D.js";import{GridLocalOriginFactory as W}from"../webgl-engine/lib/GridLocalOriginFactory.js";import{RenderOccludedFlag as L}from"../webgl-engine/lib/Material.js";import{OverlayRenderContext as V}from"../webgl-engine/lib/RenderContext.js";import{RenderPass as H}from"../webgl-engine/lib/RenderPass.js";import{RenderSlot as B}from"../webgl-engine/lib/RenderSlot.js";import{ShadowMap as N}from"../webgl-engine/lib/ShadowMap.js";import{SortedRenderGeometryRenderer as k}from"../webgl-engine/lib/SortedRenderGeometryRenderer.js";import{SSAOHelper as G}from"../webgl-engine/lib/SSAOHelper.js";import{TextureTechnique as z}from"../webgl-engine/lib/TextureTechnique.js";import{TextureTechniqueConfiguration as Y}from"../webgl-engine/lib/TextureTechniqueConfiguration.js";import{AmbientLight as X}from"../webgl-engine/lighting/Lightsources.js";import{StippleTextureRepository as Q}from"../webgl-engine/materials/StippleTextureRepository.js";import{AlphaMode as J,CompositingFunction as K}from"../webgl-engine/shaders/CompositingTechniqueConfiguration.js";import{ImmediateTask as Z,TaskPriority as $,noBudget as ee}from"../../support/Scheduler.js";import{ClearBufferBit as re,PrimitiveType as te,TextureType as se,PixelFormat as ie,PixelType as oe,TextureSamplingMode as ae}from"../../webgl/enums.js";import{Texture as ne}from"../../webgl/Texture.js";import{vertexCount as de}from"../../webgl/Util.js";let he=class extends(P(r)){constructor(e){super(e),this._overlays=null,this._overlayRenderTarget=null,this._hasHighlights=!1,this._rendersOccluded=!1,this._hasWater=!1,this._handles=new s,this._frameTask=Z,this._drapeSourceRenderers=new Map,this._sortedDrapeSourceRenderersDirty=!1,this._sortedDrapeSourceRenderers=new c,this._rctx=null,this._materialRepository=null,this._screenToWorldRatio=1,this._localOriginFactory=null,this.worldToPCSRatio=1,this.events=new t,this.longitudeCyclical=null}get _bindParameters(){return this._renderContext.bindParameters}get rctx(){return this._rctx}get materialRepository(){return this._materialRepository}get screenToWorldRatio(){return this._screenToWorldRatio}get localOriginFactory(){return this._localOriginFactory}initialize(){const e=this.view._stage.renderView;this._rctx=e.renderingContext;const r=e.waterTextureRepository;this._stippleTextureRepository=new Q(e.renderingContext),this._shaderTechniqueRepository=new E({rctx:this._rctx,viewingMode:f.Local,stippleTextureRepository:this._stippleTextureRepository,waterTextureRepository:r}),this._renderContext=new V(this._rctx,new N(this._rctx,this.view.state.viewingMode),new G(this._shaderTechniqueRepository,this._rctx,(()=>{}))),this._handles.add([l((()=>r.updating),(()=>this.events.emit("content-changed")),u),l((()=>this.spatialReference),(e=>this._localOriginFactory=new W(e)),u),p((()=>this.view.allLayerViews),"after-changes",(()=>this._sortedDrapeSourceRenderersDirty=!0))]),this._materialRepository=new q(e.textureRepository,this._shaderTechniqueRepository,(e=>{(e.renderOccluded&ge)>0!==this._rendersOccluded&&this._updateRendersOccluded(),this.events.emit("content-changed"),this.notifyChange("updating")}),(()=>this.events.emit("content-changed"))),this._bindParameters.slot=B.DRAPED_MATERIAL,this._bindParameters.highlightDepthTexture=I(this._rctx),this._bindParameters.camera=pe,this._bindParameters.transparencyPassType=C.NONE,this._bindParameters.lighting.groundLightingFactor=1,this._bindParameters.lighting.globalFactor=0,this._bindParameters.lighting.set([new X(T(1,1,1))]),this._frameTask=this.view.resourceController.scheduler.registerTask($.STAGE,this),this._handles.add(this._frameTask)}dispose(){this._handles.destroy(),this._drapeSourceRenderers.forEach((e=>e.destroy())),this._drapeSourceRenderers.clear(),this._debugTextureTechnique=o(this._debugTextureTechnique),this._debugPatternTexture=a(this._debugPatternTexture),this._bindParameters.highlightDepthTexture=a(this._bindParameters.highlightDepthTexture),this._shaderTechniqueRepository=a(this._shaderTechniqueRepository),this._temporaryFBO=a(this._temporaryFBO),this._quadVAO=a(this._quadVAO),this.disposeOverlays()}get updating(){return this._sortedDrapeSourceRenderersDirty||this._frameTask.updating||i(this._drapeSourceRenderers,(e=>e.updating))}get hasOverlays(){return n(this._overlays)&&n(this._overlayRenderTarget)}get gpuMemoryUsage(){return n(this._overlayRenderTarget)?this._overlayRenderTarget.gpuMemoryUsage:0}createGeometryDrapeSourceRenderer(e){return this.createDrapeSourceRenderer(e,k)}createDrapeSourceRenderer(e,r,t){const s=this._drapeSourceRenderers.get(e);n(s)&&s.destroy();const i=new r({...t,rendererContext:this,drapeSource:e});return this._drapeSourceRenderers.set(e,i),this._sortedDrapeSourceRenderersDirty=!0,"fullOpacity"in e&&this._handles.add(l((()=>e.fullOpacity),(()=>this.events.emit("content-changed"))),e),i}removeDrapeSourceRenderer(e){if(d(e))return;const r=this._drapeSourceRenderers.get(e);d(r)||(this._sortedDrapeSourceRenderersDirty=!0,this._drapeSourceRenderers.delete(e),this._handles.remove(e),r.destroy())}collectUnusedRenderTargetMemory(e){let r=!1;if(n(this._overlayRenderTarget))for(const t of this._overlayRenderTarget.renderTargets){const s=this.overlays[0].validTargets[t.type]||!this.overlays[1].validTargets[t.type];r=this._overlayRenderTarget.validateUsageForTarget(s,t,e)||r}return r}get overlays(){return h(this._overlays,[])}ensureDrapeTargets(e){n(this._overlays)&&this._overlays.forEach((r=>{r.hasTargetWithoutRasterImage=_(e,(e=>e.drapeTargetType===b.WithoutRasterImage))}))}ensureDrapeSources(e){n(this._overlays)&&this._overlays.forEach((r=>{r.hasDrapedFeatureSource=_(e,(e=>e.drapeSourceType===S.Features)),r.hasDrapedRasterSource=_(e,(e=>e.drapeSourceType===S.RasterImage))}))}ensureOverlays(e,r){d(this._overlays)&&(this._overlayRenderTarget=new j(this._rctx),this._overlays=[new O(v.INNER,this._overlayRenderTarget),new O(v.OUTER,this._overlayRenderTarget)]),this.ensureDrapeTargets(e),this.ensureDrapeSources(r)}disposeOverlays(){this._overlays=null,this._overlayRenderTarget=a(this._overlayRenderTarget),this.events.emit("textures-disposed")}get running(){return this.updating}runTask(e,r=(()=>!0)){this._frameTask.processQueue(e),e.done||this._processDrapeSources(e,r)}_processDrapeSources(e,r){let t=!1;for(const[s,i]of this._drapeSourceRenderers){if(e.done)break;(s.destroyed||r(s))&&(i.commitChanges()&&(t=!0,e.madeProgress()))}this._updateSortedDrapeSourceRenderers(),t&&(n(this._overlays)&&0===this._drapeSourceRenderers.size&&this.disposeOverlays(),this.notifyChange("updating"),this.events.emit("content-changed"),this._updateHasHighlights(),this._updateRendersOccluded(),this._updateHasWater())}processSyncDrapeSources(){this._processDrapeSources(ee,(e=>e.updatePolicy===F.SYNC))}isEmpty(){if(w.OVERLAY_DRAW_DEBUG_TEXTURE)return!1;for(const e of this._drapeSourceRenderers.values())if(!e.isEmpty)return!1;return!0}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}updateAnimation(e){let r=!1;return this._drapeSourceRenderers.forEach((t=>r=t.updateAnimation(e)||r)),r}updateDrapeSourceOrder(){this._sortedDrapeSourceRenderersDirty=!0}drawTarget(e,r,t){const s=e.canvasGeometries;if(0===s.numViews)return!1;this._screenToWorldRatio=t*e.mapUnitsPerPixel;const i=r.renderPass;if(this.isEmpty()||i===H.MATERIAL_HIGHLIGHT&&!this.hasHighlights||i===H.MATERIAL_NORMAL&&!this.hasWater||!e.hasSomeSizedView())return!1;const o=r.fbo;if(!o.isValid())return!1;const a=2*e.resolution,d=e.resolution;o.resize(a,d);const h=this._rctx;pe.pixelRatio=e.pixelRatio*t,this._renderContext.pass=i,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToPCSRatio=this._screenToWorldRatio*this.worldToPCSRatio,this._bindParameters.slot=i===H.MATERIAL_NORMAL?B.DRAPED_WATER:B.DRAPED_MATERIAL,e.applyViewport(this._rctx),o.bind(h),e.index===v.INNER&&(h.setClearColor(0,0,0,0),h.clearSafe(re.COLOR_BUFFER_BIT));const c=r.type===x.ColorNoRasterImage?ce.ExcludeRasterImage:r.type===x.Occluded?ce.OccludedOnly:ce.Normal;if(c===ce.OccludedOnly&&(this._renderContext.renderOccludedMask=ge),w.OVERLAY_DRAW_DEBUG_TEXTURE&&c!==ce.OccludedOnly)for(let n=0;n<s.numViews;n++)this._setViewParameters(s.extents[n],e,pe),this._drawDebugTexture(e.resolution,ue[e.index]);return this._drapeSourceRenderers.size>0&&this._sortedDrapeSourceRenderers.forAll((({drapeSource:r,renderer:t})=>{if(c===ce.ExcludeRasterImage&&r.drapeSourceType===S.RasterImage)return;const{fullOpacity:l}=r,u=n(l)&&l<1&&i===H.MATERIAL;u&&(this.bindTemporaryFramebuffer(this._rctx,a,d),h.clearSafe(re.COLOR_BUFFER_BIT));for(let i=0;i<s.numViews;i++)this._setViewParameters(s.extents[i],e,pe),t.render(this._renderContext,this._bindParameters);u&&n(this._temporaryFBO)&&(o.bind(h),this.view._stage.renderView.compositingHelper.composite(this._renderContext.bindParameters,this._temporaryFBO.getTexture(),J.PremultipliedAlpha,l,K.OverlayWithTransparency,e.index))})),h.bindFramebuffer(null),o.generateMipMap(),this._renderContext.resetRenderOccludedMask(),!0}bindTemporaryFramebuffer(e,r,t){d(this._temporaryFBO)&&(this._temporaryFBO=new D(e,!1)),this._temporaryFBO.resize(r,t),this._temporaryFBO.bind(e)}async reloadShaders(){await this._shaderTechniqueRepository.reloadAll()}notifyContentChanged(){this.events.emit("content-changed")}intersect(e,r,t,s){let i=0;for(const o of this._drapeSourceRenderers.values())i=o.intersect?.(e,r,t,s,i)??i}_updateSortedDrapeSourceRenderers(){if(!this._sortedDrapeSourceRenderersDirty)return;if(this._sortedDrapeSourceRenderersDirty=!1,this._sortedDrapeSourceRenderers.clear(),0===this._drapeSourceRenderers.size)return;const e=this.view.map.allLayers;this._drapeSourceRenderers.forEach(((r,t)=>{const s=e.indexOf(t.layer);this._sortedDrapeSourceRenderers.push(new le(t,r,s<0?1/0:s))})),this._sortedDrapeSourceRenderers.sort(((e,r)=>e.index-r.index))}_setViewParameters(e,r,t){t.viewport[0]=t.viewport[1]=0,t.viewport[2]=t.viewport[3]=r.resolution,y(t.projectionMatrix,0,e[2]-e[0],0,e[3]-e[1],t.near,t.far),R(t.viewMatrix,[-e[0],-e[1],0]),this._bindParameters.camera=t}_updateHasWater(){const e=i(this._drapeSourceRenderers,(e=>e.hasWater));e!==this._hasWater&&(this._hasWater=e,this.events.emit("has-water",e))}_updateHasHighlights(){const e=i(this._drapeSourceRenderers,(e=>e.hasHighlights));e!==this._hasHighlights&&(this._hasHighlights=e,this.events.emit("has-highlights",e))}_updateRendersOccluded(){const e=i(this._drapeSourceRenderers,(e=>e.rendersOccluded));e!==this._rendersOccluded&&(this._rendersOccluded=e,this.events.emit("renders-occluded",e))}_drawDebugTexture(e,r){this._ensureDebugPatternResources(e,e);const t=this._rctx,s=t.bindTechnique(this._debugTextureTechnique);s.setUniform4f("uColor",r[0],r[1],r[2],1),s.bindTexture("tex",this._debugPatternTexture),t.bindVAO(this._quadVAO),t.drawArrays(te.TRIANGLE_STRIP,0,de(this._quadVAO,"geometry"))}_ensureDebugPatternResources(e,r){if(this._debugPatternTexture)return;const t=new Uint8Array(e*r*4);let s=0;for(let o=0;o<r;o++)for(let i=0;i<e;i++){const a=Math.floor(i/10),n=Math.floor(o/10);a<2||n<2||10*a>e-20||10*n>r-20?(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=255):(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=1&a&&1&n?1&i^1&o?0:255:1&a^1&n?0:128)}this._debugPatternTexture=new ne(this._rctx,{target:se.TEXTURE_2D,pixelFormat:ie.RGBA,dataType:oe.UNSIGNED_BYTE,samplingMode:ae.NEAREST,width:e,height:r},t);const i=new Y;i.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniqueRepository.acquire(z,i),this._quadVAO=U(this._rctx)}get test(){return{drapeSourceRenderers:this._drapeSourceRenderers,getDrapeSourceRenderer:e=>this._drapeSourceRenderers.get(e)}}};var ce;e([g()],he.prototype,"_frameTask",void 0),e([g()],he.prototype,"_sortedDrapeSourceRenderersDirty",void 0),e([A()],he.prototype,"_shaderTechniqueRepository",void 0),e([A()],he.prototype,"_stippleTextureRepository",void 0),e([g({constructOnly:!0})],he.prototype,"view",void 0),e([g()],he.prototype,"worldToPCSRatio",void 0),e([g()],he.prototype,"spatialReference",void 0),e([g({type:Boolean,readOnly:!0})],he.prototype,"updating",null),he=e([m("esri.views.3d.terrain.OverlayRenderer")],he),function(e){e[e.Normal=0]="Normal",e[e.OccludedOnly=1]="OccludedOnly",e[e.ExcludeRasterImage=2]="ExcludeRasterImage"}(ce||(ce={}));class le{constructor(e,r,t){this.drapeSource=e,this.renderer=r,this.index=t}}const ue=[[1,.5,.5],[.5,.5,1]],pe=new M;pe.near=1,pe.far=1e4,pe.relativeElevation=null;const _e=-2,ge=L.OccludeAndTransparent;export{_e as DRAPED_Z,ce as DrawPassOption,he as OverlayRenderer,ge as overlayRenderOccludedFlag};
