/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../core/Logger.js";import{disposeMaybe as r,releaseMaybe as t,isNone as i,isSome as o}from"../../../core/maybe.js";import{Z as s}from"../../../chunks/vec2f64.js";import{RasterColorizerStretchType as n}from"../../2d/engine/imagery/enums.js";import{VectorTileRendererHelper3D as l}from"../../2d/engine/vectorTiles/VectorTileRendererHelper3D.js";import{BlendLayersTechniqueConfiguration as a,BlendLayersTechnique as h}from"./BlendLayersTechnique.js";import{LayerClass as c}from"./LayerClass.js";import{RasterColorizerTechniqueConfiguration as u,RasterColorizerTechnique as _}from"./RasterColorizerTechnique.js";import{FBOPool as d}from"./support/FBOPool.js";import{LayerBlendMode as b}from"../webgl-engine/core/shaderLibrary/output/BlendOptions.js";import{TileBlendInput as f}from"../webgl-engine/core/shaderLibrary/terrain/TileBlendInput.js";import{B as p,a as T}from"../../../chunks/BlendLayers.glsl.js";import{BindParameters as m}from"../webgl-engine/lib/BindParameters.js";import{Pos2Tex as y}from"../webgl-engine/lib/DefaultVertexBufferLayouts.js";import{createQuadVAO as g}from"../webgl-engine/lib/glUtil3D.js";import{PrimitiveType as B,ClearBufferBit as C,TextureType as x}from"../../webgl/enums.js";import{Texture as O}from"../../webgl/Texture.js";import{vertexCount as F}from"../../webgl/Util.js";const q=e.getLogger("esri.views.3d.terrain");class L{constructor(e,r){this._rctx=e,this._techniqueRepository=r,this._fboPools=[],this._doubleBufferFbo=[],this._vectorTileHelper=new l,this._bindParameters=new m(null,null,null),this._blendLayersTechniqueConfig=new a,this._poolToWrite=0,this._vaoQuad=g(this._rctx,y),this._fboPools.push(new d(this._rctx)),this._fboPools.push(new d(this._rctx))}dispose(){this._fboPools.forEach((e=>{e.clear(),e=null})),this._fboPools=null,this._doubleBufferFbo.forEach((e=>r(e))),this._vaoQuad=r(this._vaoQuad),this._vectorTileHelper=r(this._vectorTileHelper),this._backgroundTechnique=t(this._backgroundTechnique),this._applyOpacityTechnique=t(this._applyOpacityTechnique),this._blendLayersTechnique=t(this._blendLayersTechnique)}_getBlendLayersTechnique(e,r,t,i=!1){return this._blendLayersTechniqueConfig.output=r,this._blendLayersTechniqueConfig.blendMode=e,this._blendLayersTechniqueConfig.baseOpacityMode=t?r===p.Composite?T.OnBaseLayer:T.OnBackground:T.One,this._blendLayersTechniqueConfig.premultipliedSource=i,this._blendLayersTechnique=this._techniqueRepository.releaseAndAcquire(h,this._blendLayersTechniqueConfig,this._blendLayersTechnique),this._blendLayersTechnique}drawBackground(e,r){const t=this._getBlendLayersTechnique(b.Normal,r,!1),i=this._rctx.bindTechnique(t,e,this._bindParameters);this._render(i)}_render(e){this._rctx.bindVAO(this._vaoQuad),e.assertCompatibleVertexAttributeLocations(this._vaoQuad),this._rctx.drawArrays(B.TRIANGLE_STRIP,0,F(this._vaoQuad,"geometry"))}drawRasterData(e,r,t=!1){if(i(r.texture))return;const o=r.baseOpacity<1;r.blendMode!==b.Normal||o||t?(r.fboTexture=this._currentFBO.colorTexture,this._switchPool(this._currentFBO.width)):r.fboTexture=null;const s=this._getBlendLayersTechnique(r.blendMode,e,o,t),n=this._rctx.bindTechnique(s,r,this._bindParameters);this._render(n)}drawImageryTileData(e,r,t){const i=e.sourceLayerInfo.data;if(!i.source)return;e.tile.surface.layerViewByIndex(e.layerIndex,c.MAP).ensureSymbolizerParameters(i);const o=t.baseOpacity<1;t.blendMode!==b.Normal||o?(t.fboTexture=this._currentFBO.colorTexture,this._switchPool(this._currentFBO.width)):t.fboTexture=null;const s=this._getRasterColorizerTechnique(i,r,t.blendMode,o),n=this._rctx.bindTechnique(s);if(!i.bind(this._rctx))return;i.opacity=t.opacity;const l=i.getUniforms();l.scale=e.scale,l.offset=e.offset,l.backgroundColor=t.backgroundColor,l.fboTexture=t.fboTexture,l.baseOpacity=t.baseOpacity,s.bindPass(l,null),this._render(n)}_getRasterColorizerTechnique(e,r,t,o){const s=e.symbolizerParameters,l=["stretch","lut","hillshade"].indexOf(s.type);return i(this._rasterColorizerConfig)&&(this._rasterColorizerConfig=new u,this._rctx.gl.getExtension("WEBGL_color_buffer_float"),this._rctx.gl.getExtension("OES_texture_float")),this._rasterColorizerConfig.tileBlendInput=r===p.ColorComposite?f.ColorComposite:r===p.GridComposite?f.GridComposite:f.LayerOnly,this._rasterColorizerConfig.blendMode=t,this._rasterColorizerConfig.baseOpacityMode=o?r===p.Composite?T.OnBaseLayer:T.OnBackground:T.One,this._rasterColorizerConfig.colorizerType=l,this._rasterColorizerConfig.applyColormap=!!s.colormap,this._rasterColorizerConfig.stretchType=e.hasStretchTypeNone()?n.Noop:n.PerBand,this._rasterColorizerTechnique=this._techniqueRepository.releaseAndAcquire(_,this._rasterColorizerConfig,this._rasterColorizerTechnique),this._rasterColorizerTechnique}drawVectorData(e,r,t,i,n,l,a){const h=this._rctx,u=r.sourceLayerInfo.data,_=r.tile.surface.layerViewByIndex(r.layerIndex,c.MAP),d=e.baseOpacity<1||e.opacity<1||e.blendMode!==b.Normal||a!==p.Composite;let f;this._getBlendLayersTechnique(e.blendMode,a,e.baseOpacity<1,d).bindPipelineState(h),d?(f=this._acquire(n),h.bindFramebuffer(f),h.setClearColor(0,0,0,0),h.clearSafe(C.COLOR_BUFFER_BIT|C.DEPTH_BUFFER_BIT)):l&&h.clearSafe(C.DEPTH_BUFFER_BIT);try{this._vectorTileHelper.render(h,r.sourceLod,u,_.painter,_.layer.styleRepository,_.schemaHelper,Math.round(1/r.scale),r.offset,i,t)}catch(T){q.warnOnce("A render call containing vector tiles did not resolve correctly.",T)}return!o(f)||(h.bindFramebuffer(this._currentFBO),e.texture=f.colorTexture,e.offset=s,e.scale=1,this.drawRasterData(a,e,d),f.release(),l)}copyFBOToTexture(e){const r=this._rctx,t=r.bindTexture(e.texture,O.TEXTURE_UNIT_FOR_UPDATES),i=e.descriptor;r.gl.copyTexImage2D(x.TEXTURE_2D,0,i.pixelFormat,0,0,i.width,i.height,0),e.generateMipmap(),r.bindTexture(t,O.TEXTURE_UNIT_FOR_UPDATES)}_initFBO(e,r){this._rctx.bindFramebuffer(e),this._rctx.setViewport(0,0,r,r),this._rctx.setClearColor(0,0,0,0),this._rctx.setClearDepth(1),this._rctx.clearSafe(C.COLOR_BUFFER_BIT|C.DEPTH_BUFFER_BIT)}_acquire(e){return this._fboPools[this._poolToWrite].acquire(e)}bindPool(e,r){this._poolToWrite=e,null==this._doubleBufferFbo[e]&&(this._doubleBufferFbo[e]=this._acquire(r),this._initFBO(this._doubleBufferFbo[e],r))}_switchPool(e){this._releaseCurrentFBO(),this._doubleBufferFbo[this._poolToWrite]=null,this._poolToWrite=0===this._poolToWrite?1:0,this.bindPool(this._poolToWrite,e)}get _currentFBO(){return this._doubleBufferFbo[this._poolToWrite]}_releaseCurrentFBO(){this._doubleBufferFbo[this._poolToWrite].release(),this._doubleBufferFbo[this._poolToWrite]=null}releasePool(){this._rctx.bindFramebuffer(null),this._releaseCurrentFBO()}cleanupFBOPool(e,r){e===this._lastPixelRatio&&r===this._lastNumLayers||(this._fboPools.forEach((e=>e.clear())),this._lastPixelRatio=e,this._lastNumLayers=r)}}export{L as TileCompositor};
