/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../geometry","../../../../core/Accessor","../../../../core/Evented","../../../../core/Handles","../../../../core/handleUtils","../../../../core/Logger","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/ensureType","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/projection","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/ray","../LineOfSightAnalysisResult","./LineOfSightComputation","./LineOfSightRayIntersector","../support/projectionUtils","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtilsConversions","../../../support/Scheduler","../../../support/WatchUpdatingTracking","../../../../geometry/Point"],(function(e,t,n,i,o,r,s,a,c,l,u,p,d,h,g,m,_,v,y,f,C,b,S,T,O,P,I,w,L,A,E){"use strict";const R=c.getLogger("esri.views.3d.analysis.LineOfSight.LineOfSightController");function k(e,t){return l.isNone(t)||l.isSome(e)&&e.equals(t.point)}e.LineOfSightController=function(e){function n(t){var n;return(n=e.call(this,t)||this).updateOnCameraChange=!0,n._updatingHandles=new A.WatchUpdatingTracking,n._frameTask=L.ImmediateTask,n._handles=new s,n._computationHandles=new s,n._externalObserverUpdate=!0,n}t._inheritsLoose(n,e);var i=n.prototype;return i.initialize=function(){var e;const t=null==(e=this.view.resourceController)?void 0:e.scheduler;this._frameTask=t?t.registerTask(L.TaskPriority.LINE_OF_SIGHT_TOOL):L.ImmediateTask,this._intersector=new O.LineOfSightRayIntersector({view:this.view}),this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])},i.destroy=function(){this._handles.destroy(),this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()},i.getLineOfSightComputationDependencies=function(e){const{inputPoints:t}=e;return{inputPoints:t}},i._computeResult=function(e){const t=e.computation,{inputPoints:n,computationResult:i}=t,{observerAdjusted:o,targetAdjusted:r}=n,{start:s,end:a}=i;v.copy(s,o),v.copy(a,r);this._canCompute(t)?this._computeIntersection(e):this._interpolateIntersection(e),t.notifyResultChanged(),this.emit("result-changed",{target:e.computation.target,result:t.result})},i._adjustStartEndPositions=function(e){const t=this._screenPixelSize,n=this.view,{inputPoints:i}=e,{observer:o,observerSurfaceNormal:r,target:s,targetSurfaceNormal:a,observerAdjusted:c,targetAdjusted:u}=i,p=N;l.isSome(r)?v.copy(p,r):v.subtract(p,s,o);const d=t;v.normalize(p,p),v.scale(p,p,Math.min(d,1)),v.add(c,o,p),l.isSome(a)?v.copy(p,a):v.subtract(p,o,s);const h=n.state.camera.computeScreenPixelSizeAt(s);v.normalize(p,p),v.scale(p,p,Math.min(h,1)),v.add(u,s,p)},i._computeIntersection=function({computation:e,interpolationInfo:t}){const{view:n}=this,{sceneIntersectionHelper:i,renderCoordsHelper:o}=n;if(l.isNone(i))return;const r=this._intersector.intersector,{computationResult:s,inputPoints:a}=e,{observer:c,target:u}=a,{start:p,end:d}=s,h=b.fromPoints(p,d,V);i.intersectToolIntersectorRay(h,r);const g=s.intersection,m=N;let _=!0;if(r.results.min.getIntersectionPoint(g)){v.copy(t.originalIntersection,g),v.copy(t.originalObserver,p),v.copy(t.originalTarget,d),o.fromRenderCoords(g,m,n.spatialReference);const e=1-v.dist(d,u)/v.dist(p,u);_=v.dist(c,g)>=e*v.dist(c,u)}const y=new E(m,n.spatialReference);{const{result:t,target:i}=e;l.isSome(t)?(t.target=i,t.intersectedGraphic=_?null:w.toGraphic(r.results.min,n),t.intersectedLocation=_?null:y,t.visible=_):e.result=new S.LineOfSightAnalysisResult({target:i,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:_?null:w.toGraphic(r.results.min,n),intersectedLocation:_?null:y,visible:_})}s.isValid=a.isValid=!0,s.isTargetVisible=_},i._interpolateIntersection=function({computation:e,interpolationInfo:t}){const{computationResult:n,inputPoints:i}=e,{start:o,end:r,intersection:s}=n,{originalIntersection:a,originalObserver:c,originalTarget:l}=t;if(v.copy(s,a),i.isValid){const e=N,t=v.dist(c,a)/v.dist(c,l);v.sub(e,o,c),v.scale(e,e,1-t),v.add(s,s,e),v.sub(e,r,l),v.scale(e,e,t),v.add(s,s,e),n.isValid=!0}else e.result=null,n.isValid=!1,n.isTargetVisible=!1},i._canCompute=function(e){const t=this.analysisViewData.elevationAlignedObserver,n=this.view.frustum;if(l.isNone(t)||l.isNone(e.elevationAlignedTargetLocation)||l.isNone(n))return!1;const{observerAdjusted:i,targetAdjusted:o}=e.inputPoints,r=n.intersectsPoint(i),s=n.intersectsPoint(o);return r&&s},i._onObserverPositionChange=function(e,t,n){if(this._externalObserverUpdate=n,l.isNone(e))return void(this.analysisViewData.elevationAlignedObserver=null);const i=this._applyProjectionAndElevationAlignment(e,t);if(l.isNone(i))return P.logFailedGeometryProjectionError(this.analysis,e.spatialReference,R),void(this.analysisViewData.elevationAlignedObserver=null);const o=y.create();this.analysisViewData.elevationAlignedObserver=i,this.view.renderCoordsHelper.toRenderCoords(this.analysisViewData.elevationAlignedObserver,o),this._observerEngineLocation=o,this.priority=L.TaskPriority.LINE_OF_SIGHT_TOOL_INTERACTIVE},i._applyProjectionAndElevationAlignment=function(e,t){const n=l.isSome(t)&&t.type!==I.IntersectorType.OBJECT;return P.applyProjectionAndElevationAlignment(e,this.view.spatialReference,this.view.elevationProvider,n)},i._onObserverRenderSpacePositionChangeForComputation=function(e,t,n){const{inputPoints:i}=e;if(v.copy(i.observer,t),l.isSome(n)){const e=this._intersector.updateFromIntersectionResult(n);l.isSome(e)&&this.view.renderCoordsHelper.toRenderCoords(e,i.observer),i.observerSurfaceNormal=y.clone(n.normal)}else i.observerSurfaceNormal=null;this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=L.TaskPriority.LINE_OF_SIGHT_TOOL_INTERACTIVE},i._onTargetPositionChange=function(e,t,n,i=!0){const o=e.inputPoints;if(i&&(o.isValid=!1),e.elevationAlignedTargetLocation=this._applyProjectionAndElevationAlignment(t,n),l.isNone(e.elevationAlignedTargetLocation))P.logFailedGeometryProjectionError(this.analysis,t.spatialReference,R);else{if(this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,o.target),l.isSome(n)){const e=this._intersector.updateFromIntersectionResult(n);l.isSome(e)&&this.view.renderCoordsHelper.toRenderCoords(e,o.target),o.targetSurfaceNormal=y.clone(n.normal)}else o.targetSurfaceNormal=null;this._adjustStartEndPositions(e)}e.notifyInputPointsChanged(),this.priority=L.TaskPriority.LINE_OF_SIGHT_TOOL_INTERACTIVE},i._connectComputationToTarget=function(e){return a.handlesGroup([p.watch((()=>e.target.position),(t=>{k(t,e.target.intersection)||(e.target.intersection=null)}),p.initial),p.watch((()=>({computation:e,targetPosition:e.target.position,targetIntersection:e.target.intersection})),(({computation:e,targetPosition:t,targetIntersection:n})=>{l.isSome(t)&&this._onTargetPositionChange(e,t,n)}),p.syncAndInitial)])},i._connectComputationToObserver=function(e){return p.watch((()=>({computation:e,observer:this.analysisViewData.elevationAlignedObserver})),(({computation:e})=>{this._externalObserverUpdate&&(e.inputPoints.isValid=!1,e.notifyInputPointsChanged())}),p.syncAndInitial)},i._connectComputationToRenderSpaceObserver=function(e){return p.watch((()=>({computation:e,observer:this._observerEngineLocation,observerIntersection:l.isSome(this.analysis.observer)?this.analysis.observer.intersection:null})),(({computation:e,observer:t,observerIntersection:n})=>{this._onObserverRenderSpacePositionChangeForComputation(e,t,n)}),p.syncAndInitial)},i._connectComputationToCamera=function(e){return p.watch((()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty})),(({isDirty:t})=>{!this.updateOnCameraChange||e.inputPoints.isValid&&!t||e.notifyInputPointsChanged()}),p.sync)},i._connectComputationToSlicePlane=function(e){return p.watch((()=>this.view.slicePlane),(()=>e.notifyInputPointsChanged()))},i._connectComputationToElevation=function(e){return this.view.elevationProvider.on("elevation-change",(t=>{const n=this.analysis.observer,i=e.target;let o=null,r=null,s=null,a=null;const c=l.isSome(n)&&l.isSome(n.position)?n.position.spatialReference:l.isSome(i.position)?i.position.spatialReference:t.spatialReference;l.isSome(n)&&l.isSome(n.position)&&(o=D,r=n.intersection,f.projectPoint(n.position,o,c)),l.isSome(i.position)&&(s=G,a=i.intersection,f.projectPoint(i.position,s,c)),l.isNone(o)&&l.isNone(s)||(f.projectBoundingRect(t.extent,t.spatialReference,j,c),l.isSome(o)&&C.containsPointObject(j,o)&&this._onObserverPositionChange(o,r,!1),l.isSome(s)&&C.containsPointObject(j,s)&&this._onTargetPositionChange(e,s,a,!1),l.isSome(o)&&l.isSome(s)&&C.intersectsSegment(j,o,s)&&e.notifyInputPointsChanged())}))},i._connectComputationToTask=function(e){var n=this;let i=l.none;const o={computation:e,interpolationInfo:{originalIntersection:y.create(),originalObserver:y.create(),originalTarget:y.create()}};return a.handlesGroup([p.watch((()=>this.getLineOfSightComputationDependencies(e)),(()=>{i=l.abortMaybe(i),i=u.createTask(function(){var e=t._asyncToGenerator((function*(e){yield u.ignoreAbortErrors(n._frameTask.schedule((()=>n._computeResult(o)),e))}));return function(t){return e.apply(this,arguments)}}())}),p.syncAndInitial),a.makeHandle((()=>i=l.abortMaybe(i)))])},i._connectComputation=function(e){const t=this._computationHandles;t.has(e)||t.add([this._connectComputationToTarget(e),this._connectComputationToObserver(e),this._connectComputationToRenderSpaceObserver(e),this._connectComputationToCamera(e),this._connectComputationToSlicePlane(e),this._connectComputationToElevation(e),this._connectComputationToTask(e)],e)},i._disconnectAnalysis=function(e){this._computationHandles.remove(e)},i._onComputationCollectionChange=function(e){e.added.forEach((e=>this._connectComputation(e))),e.removed.forEach((e=>this._disconnectAnalysis(e)))},i._onTargetsChange=function(){return this._computations.removeAll(),this.analysis.targets.forEach((e=>this._addTarget(e))),this._updatingHandles.addOnCollectionChange((()=>this.analysis.targets),(e=>this._onTargetCollectionChange(e)))},i._onTargetCollectionChange=function(e){e.added.forEach((e=>this._addTarget(e))),e.removed.forEach((e=>this._removeTarget(e)))},i._onCursorTargetChange=function(e,t){l.isSome(t)&&this._removeTarget(t),l.isSome(e)&&this._addTarget(e)},i._addTarget=function(e){this._computations.some((t=>t.target===e))||this._computations.add(new T.LineOfSightComputation({target:e}))},i._removeTarget=function(e){const t=this._computations.find((t=>t.target===e));this._computations.remove(t)},i._connectObserver=function(){return a.handlesGroup([p.watch((()=>({observer:this.analysis.observer,observerPosition:l.isSome(this.analysis.observer)?this.analysis.observer.position:null,observerIntersection:l.isSome(this.analysis.observer)?this.analysis.observer.intersection:null})),(({observer:e,observerPosition:t,observerIntersection:n})=>{l.isSome(e)&&!k(t,n)&&(e.intersection=null)}),p.initial),p.watch((()=>({observerPosition:l.isSome(this.analysis.observer)?this.analysis.observer.position:null,observerIntersection:l.isSome(this.analysis.observer)?this.analysis.observer.intersection:null})),(({observerPosition:e,observerIntersection:t})=>this._onObserverPositionChange(e,t,!0)),p.syncAndInitial)])},i._connectComputations=function(){let e=null;return a.handlesGroup([p.watch((()=>this._computations),(()=>{l.removeMaybe(e),e=this._updatingHandles.addOnCollectionChange((()=>this._computations),(e=>this._onComputationCollectionChange(e))),this._computations.forEach((e=>this._connectComputation(e)))}),p.syncAndInitial),a.makeHandle((()=>e=l.removeMaybe(e)))])},i._connectTargets=function(){let e=null;return a.handlesGroup([p.watch((()=>this.analysis.targets),(()=>{e=l.removeMaybe(e),e=this._onTargetsChange()}),p.syncAndInitial),p.watch((()=>this.analysisViewData.cursorTarget),((e,t)=>{this._onCursorTargetChange(e,t)})),a.makeHandle((()=>{e=l.removeMaybe(e)}))])},t._createClass(n,[{key:"updating",get:function(){return this._frameTask.updating||this._updatingHandles.updating}},{key:"priority",get:function(){return this._frameTask.priority},set:function(e){this._frameTask.priority=e}},{key:"_computations",get:function(){return this.analysisViewData.computations}},{key:"_observerEngineLocation",get:function(){return this.analysisViewData.observerEngineLocation},set:function(e){this.analysisViewData.observerEngineLocation=e}},{key:"_screenPixelSize",get:function(){return this.view.state.camera.computeScreenPixelSizeAt(this._observerEngineLocation)}},{key:"_isCameraDirty",get:function(){const e=this.analysisViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:n}=t;if(l.isNone(e)||l.isNone(n))return!1;const i=N;n.toRenderCoords(e,i);const o=t.state.camera.computeScreenPixelSizeAt(i);return Math.abs((o-this._screenPixelSize)/this._screenPixelSize)>H}}]),n}(r.EventedMixin(o)),n.__decorate([d.property({constructOnly:!0})],e.LineOfSightController.prototype,"analysis",void 0),n.__decorate([d.property({constructOnly:!0})],e.LineOfSightController.prototype,"analysisViewData",void 0),n.__decorate([d.property({constructOnly:!0})],e.LineOfSightController.prototype,"view",void 0),n.__decorate([d.property()],e.LineOfSightController.prototype,"updating",null),n.__decorate([d.property()],e.LineOfSightController.prototype,"priority",null),n.__decorate([d.property()],e.LineOfSightController.prototype,"updateOnCameraChange",void 0),n.__decorate([d.property()],e.LineOfSightController.prototype,"_computations",null),n.__decorate([d.property()],e.LineOfSightController.prototype,"_observerEngineLocation",null),n.__decorate([d.property()],e.LineOfSightController.prototype,"_screenPixelSize",null),n.__decorate([d.property({readOnly:!0})],e.LineOfSightController.prototype,"_updatingHandles",void 0),n.__decorate([d.property()],e.LineOfSightController.prototype,"_frameTask",void 0),n.__decorate([d.property()],e.LineOfSightController.prototype,"_isCameraDirty",null),e.LineOfSightController=n.__decorate([_.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightController")],e.LineOfSightController);const H=.1,N=y.create(),V=b.create(),j=C.empty(),D=new E,G=new E;Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
