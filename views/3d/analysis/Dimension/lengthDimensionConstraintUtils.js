/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../geometry","../../../../analysis/dimensionUtils","../../../../core/has","../../../../core/maybe","../../../../chunks/vec3","../../../../geometry/support/vectorStacks","./lengthDimensionManipulatorUtils","./lengthDimensionUtils","./settings","../../../../geometry/Point"],(function(e,n,t,i,o,r,s,a,d,c,l){"use strict";var m;function g(e,n){return{enabled:n.effectiveFeatureEnabled,elevationAlignedStartPoint:e.elevationAlignedStartPoint,elevationAlignedEndPoint:e.elevationAlignedEndPoint,geometry:e.geometry}}function u(n,t){if(d.isGeodesicDimension(n))return e.LengthDimensionConstraint.Direct;if(!n.enabled)return null;const{geometry:i}=n;if(o.isNone(i)||r.exactEquals(i.directSegment.startRenderSpace,i.directSegment.endRenderSpace))return null;const{constraintThresholdPx:a}=c.settings,{camera:l}=t.state,m=d.directUp(s.sv3d.get(),i,t.renderCoordsHelper),g=d.directStartToEnd(s.sv3d.get(),i),u=r.scale(s.sv3d.get(),m,r.dot(g,m)),P=r.subtract(s.sv3d.get(),g,u),p=r.squaredLength(P),S=r.squaredLength(u),{startRenderSpace:v,endRenderSpace:y}=i.directSegment,f=Math.max(l.computeRenderPixelSizeAt(v)*a,l.computeRenderPixelSizeAt(y)*a)**2;return p<f?e.LengthDimensionConstraint.Vertical:S<f?e.LengthDimensionConstraint.Horizontal:null}function P(e,n,{constraint:t,view:i}){const{unconstrainedGeometry:r}=e;if(o.isNone(r))return;const{renderCoordsHelper:s,spatialReference:a}=i,{startRenderSpace:d,endRenderSpace:c}=r.directSegment,m=s.fromRenderCoords(d,new l,a),g=s.fromRenderCoords(c,new l,a);let u;u="start"===n?{startPoint:m}:{endPoint:g},p(e,u,{constraint:t,elevationAlignedStartPoint:e.elevationAlignedStartPoint,elevationAlignedEndPoint:e.elevationAlignedEndPoint,unconstrainedGeometry:r,view:i})}function p(n,i,r){const{constraint:s,elevationAlignedStartPoint:d,elevationAlignedEndPoint:c,unconstrainedGeometry:l,view:m}=r,{dimension:g,previousConstraint:u,preConstraintProperties:P}=n;if(o.isNone(d)||o.isNone(c))return;const p=()=>{"startPoint"in i?g.startPoint=i.startPoint:"endPoint"in i&&(g.endPoint=i.endPoint)};if(o.isNone(s))p(),o.isSome(u)&&o.isSome(P)&&(g.measureType=P.measureType,g.orientation=P.orientation);else switch(g.measureType=t.LengthDimensionMeasureType.Direct,s){case e.LengthDimensionConstraint.Horizontal:if(s!==u&&(g.orientation=0),"startPoint"in i){const e=i.startPoint;o.isSome(e)&&(e.z=c.z),g.startPoint=e}else if("endPoint"in i){const e=i.endPoint;o.isSome(e)&&(e.z=d.z),g.endPoint=e}break;case e.LengthDimensionConstraint.Vertical:if(s!==u&&(g.orientation=a.automaticHeadingFromCamera(l,m)),"startPoint"in i){const e=i.startPoint;o.isSome(e)&&(e.x=c.x,e.y=c.y),g.startPoint=e}else if("endPoint"in i){const e=i.endPoint;o.isSome(e)&&(e.x=d.x,e.y=d.y),g.endPoint=e}break;case e.LengthDimensionConstraint.Direct:s!==u&&o.isSome(P)&&(g.orientation=P.orientation),p()}n.previousConstraint=s,n.unconstrainedGeometry=l}e.LengthDimensionConstraint=void 0,(m=e.LengthDimensionConstraint||(e.LengthDimensionConstraint={}))[m.Horizontal=0]="Horizontal",m[m.Vertical=1]="Vertical",m[m.Direct=2]="Direct",e.applyConstraint=p,e.computeConstraint=u,e.constraintDependencies=g,e.reapplyConstraint=P,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
