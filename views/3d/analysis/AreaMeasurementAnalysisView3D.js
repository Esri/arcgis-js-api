/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{destroyMaybe as s,isNone as a,unwrapOr as r}from"../../../core/maybe.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{defaultUnitPropertyMetadata as n}from"../../../properties/defaultUnit.js";import{AnalysisView3D as l}from"./AnalysisView3D.js";import{MeasurementMode as p}from"./interfaces.js";import{AreaMeasurementController as u}from"./AreaMeasurement/support/AreaMeasurementController.js";import{AreaMeasurement3DPathHelper as m}from"./AreaMeasurement/support/AreaMeasurementPathHelper.js";import{AreaMeasurementVisualization as y}from"./AreaMeasurement/support/AreaMeasurementVisualization.js";let d=class extends(l(t)){constructor(e){super(e),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=p.Auto}initialize(){const{analysis:e,view:t}=this;this.path=new m({view:t,areaMeasurement:e}),this.analysisVisualization=new y({view:t,analysis:e,analysisViewData:this}),this.analysisController=new u({view:t,analysis:e,analysisViewData:this})}destroy(){this.analysisController=s(this.analysisController),this.analysisVisualization=s(this.analysisVisualization),this.path.destroy()}get updating(){return!!this.analysisVisualization?.loadingMessages}get result(){const{measurementData:e}=this;return a(e)?{area:null,mode:null,perimeter:null}:"euclidean"===e.actualMeasurementMode?{area:e.area,perimeter:e.perimeterLength,mode:"euclidean"}:{area:e.geodesicArea,perimeter:e.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return r(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};e([i({readOnly:!0})],d.prototype,"type",void 0),e([i({constructOnly:!0,nonNullable:!0})],d.prototype,"analysis",void 0),e([i()],d.prototype,"updating",null),e([i()],d.prototype,"analysisVisualization",void 0),e([i()],d.prototype,"analysisController",void 0),e([i()],d.prototype,"result",null),e([i()],d.prototype,"measurementData",void 0),e([i()],d.prototype,"viewData",null),e([i()],d.prototype,"validMeasurement",null),e([i()],d.prototype,"path",void 0),e([i()],d.prototype,"lastDraggedVertex",void 0),e([i()],d.prototype,"cursorPoint",void 0),e([i()],d.prototype,"mode",void 0),e([i()],d.prototype,"unit",null),e([i(n)],d.prototype,"_defaultUnit",void 0),d=e([o("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],d);const c=d;export{c as default};
