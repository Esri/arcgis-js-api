/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Handles","../../../../core/mathUtils","../../../../core/maybe","../../../../core/Quantity","../../../../core/reactiveUtils","../../../../core/watchUtils","../../../../core/accessorSupport/decorators/property","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/ensureType","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/geometryEngine","../../../../geometry/Polyline","../../../../geometry/projection","../../../../geometry/projectionEllipsoid","../../../../geometry/support/geodesicUtils","../support/UnitNormalizer","../../support/ElevationProvider"],(function(e,t,i,n,a,r,o,s,c,l,d,u,p,h,g,v,m,_,y,P,D,f,w,A){"use strict";const M=1e5;e.DirectLineMeasurementController=function(e){function i(t){var i;return(i=e.call(this,t)||this)._unitNormalizer=new w.UnitNormalizer,i._handles=new a,i._tempStartPosition=m.create(),i._tempEndPosition=m.create(),i._tempCornerPosition=m.create(),i}t._inheritsLoose(i,e);var n=i.prototype;return n.initialize=function(){this._handles.add(l.whenOnce(this.view,"ready",(()=>this._initialize()),!0))},n.destroy=function(){this._handles=o.destroyMaybe(this._handles)},n._initialize=function(){const e=this.view.spatialReference,t=D.getSphericalPCPF(e),i=t===D.SphericalECEFSpatialReference?D.WGS84ECEFSpatialReference:t;this._sphericalPCPF=i;const n=P.canProjectWithoutEngine(e,i);this._unitNormalizer.spatialReference=n?i:e,this._handles.add([c.react((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyElevationAlignment(t)}),c.syncAndInitial),c.react((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyElevationAlignment(t)}),c.syncAndInitial),c.react((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e}),c.syncAndInitial)])},n._applyElevationAlignment=function(e){if(o.isNone(e)||e.hasZ)return e;const t=e.clone();return t.z=o.unwrapOr(A.getElevationAtPoint(this.view.elevationProvider,t),0),t},n._euclideanDistances=function(e,t){const i=e.clone();i.z=t.z;const n=this._tempStartPosition,a=this._tempEndPosition,r=this._tempCornerPosition,o=this.view.spatialReference,c=this._sphericalPCPF,l=P.canProjectWithoutEngine(o,c)?c:o;P.projectPointToVector(e,n,l),P.projectPointToVector(t,a,l),P.projectPointToVector(i,r,l);const d=v.distance(n,a),u=v.distance(r,a),p=Math.abs(t.z-e.z),h=e=>this._unitNormalizer.normalizeDistance(e),g=h(d),m=h(u),_=h(p);return{direct:new s(g,"meters"),horizontal:new s(m,"meters"),vertical:new s(_,"meters")}},n._exactGeodesicDistanceAndAngle=function(e,t,i){const n=e.spatialReference,a=new y({spatialReference:n});a.addPath([e,t]);const r=n.isGeographic&&f.isSupported(n)?f.geodesicLengths([a],"meters")[0]:n.isWebMercator?_.geodesicLength(a,"meters"):void 0,{distance:o,angle:c}=r?{distance:r,angle:this._fallbackGeodesicAngle(r,n)}:this._fallbackGeodesicDistance(e,t,i);return{distance:new s(o,"meters"),angle:new s(c,"degrees")}},n._fallbackGeodesicAngle=function(e,t){return e/D.getReferenceEllipsoid(t).metersPerDegree},n._fallbackGeodesicDistance=function(e,t,i){if(P.projectPointToWGS84ComparableLonLat(e,b)){P.projectPointToWGS84ComparableLonLat(t,z);const e=r.deg2rad(b[0]),i=r.deg2rad(b[1]),n=r.deg2rad(z[0]),a=r.deg2rad(z[1]),o=Math.abs(n-e),s=r.acosClamped(Math.sin(i)*Math.sin(a)+Math.cos(i)*Math.cos(a)*Math.cos(o)),c=r.rad2deg(s),l={distance:0};return f.inverseGeodeticSolver(l,[b[0],b[1]],[z[0],z[1]]),{distance:l.distance,angle:c}}const n=e.spatialReference,a=i;return{distance:a,angle:this._fallbackGeodesicAngle(a,n)}},t._createClass(i,[{key:"_computedResult",get:function(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.viewData;if(o.isNone(e)||o.isNone(t))return null;const i=this._euclideanDistances(e,t),n=this._exactGeodesicDistanceAndAngle(e,t,i.horizontal.value);let a=null;switch(this.viewData.measurementMode){case 0:{var r;a="euclidean";const e=this.viewData.unit,t=(null==(r=i.horizontal)?void 0:r.value)>M;("degrees"===e||"degrees-minutes-seconds"===e||t)&&(a="geodesic");break}case 1:a="euclidean";break;case 2:a="geodesic"}return{distance:"euclidean"===a?i.direct:n.distance,mode:a,directDistance:i.direct,horizontalDistance:i.horizontal,verticalDistance:i.vertical,geodesicDistance:n.distance,geodesicAngle:n.angle}}}]),i}(n),i.__decorate([d.property()],e.DirectLineMeasurementController.prototype,"view",void 0),i.__decorate([d.property()],e.DirectLineMeasurementController.prototype,"analysis",void 0),i.__decorate([d.property()],e.DirectLineMeasurementController.prototype,"viewData",void 0),i.__decorate([d.property()],e.DirectLineMeasurementController.prototype,"_computedResult",null),e.DirectLineMeasurementController=i.__decorate([g.subclass("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],e.DirectLineMeasurementController);const b=m.create(),z=m.create();Object.defineProperty(e,"__esModule",{value:!0})}));
