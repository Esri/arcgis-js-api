/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Handles","../../../../core/Logger","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/watchUtils","../../../../core/accessorSupport/decorators/property","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/ensureType","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/boundedPlane","../../../../layers/Layer","../../../../layers/buildingSublayers/BuildingComponentSublayer","../support/loggerUtils","../../interactive/analysisTools/slice/sliceToolUtils","../../../../widgets/Slice/SlicePlane"],(function(e,i,t,a,s,l,n,r,o,c,d,h,u,y,p,w,_,v,S,f){"use strict";const g=l.getLogger("esri.views.3d.analysis.Slice.SliceController");e.SliceController=function(e){function t(i){var t;return(t=e.call(this,i)||this)._handles=new s,t._internalChange=!1,t._currentSlicePlane=null,t.state="pending",t}i._inheritsLoose(t,e);var a=t.prototype;return a.initialize=function(){this._handles.add(this.analysis.excludedLayers.on("before-add",(e=>{const i=e.item;null!=i&&(i instanceof w||i instanceof _)?i instanceof w&&S.isAlwaysDrapedLayer(i)?(g.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.analysis.excludedLayers.includes(i)&&e.preventDefault():(g.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault())}))),this._handles.add(r.reactTruthy((()=>this.view.ready&&n.isSome(this.view.renderCoordsHelper)),(()=>this._initialize()),{sync:!0,initial:!0,once:!0}))},a._initialize=function(){"destroyed"!==this.state&&"ready"!==this.state&&(P(this.view,this),this._handles.add([r.react((()=>this.analysisView.analysisViewData.plane),(()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()}),{sync:!0}),r.react((()=>this.analysis.excludeGroundSurface),(()=>this._updateLayerViews()),{sync:!0}),this.analysis.excludedLayers.on("change",(()=>this._updateLayerViews())),r.react((()=>[this.analysisView.active,this.analysisView.visible]),(()=>{this._updateActiveController(),this._updateViewSlicePlane()}),{sync:!0}),r.react((()=>this._allLayerAndSubLayerViews),(()=>this._updateLayerViews()))]),this._handles.add([r.react((()=>this.analysis.shape),(()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())}),{sync:!0})],"analysis"),this._set("state","ready"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())},a.destroy=function(){"destroyed"!==this.state&&"pending"!==this.state&&(this.analysisView.active=!1,L(this.view,this),this._handles.destroy(),this.view.slicePlane=null,this.set("view",null),this._set("state","destroyed"))},a.whenReady=function(){var e=i._asyncToGenerator((function*(){return yield o.whenOnce(this,"ready"),this}));function t(){return e.apply(this,arguments)}return t}(),a._updateBoundedPlaneFromSlicePlane=function(){const e=this.analysis.shape,i=this._currentSlicePlane;if(n.isNone(i)&&n.isNone(e)||n.isSome(i)&&n.isSome(e)&&e.equals(i))return;let t=null,a=null;if(n.isSome(e)&&n.isSome(e.position)){const i=e.position.spatialReference,s=S.projectShape(e,this.view.spatialReference);n.isNone(s)&&v.logFailedGeometryProjectionError(this.analysis,i,g),t=S.projectedShapeToPlane(s,this.view,{tiltEnabled:this.analysis.tiltEnabled},p.create()),n.isSome(t)&&(a={heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height})}this._currentSlicePlane=a,this._internalChange=!0,this.analysisView.analysisViewData.plane=t,this._internalChange=!1},a._updateSlicePlaneFromBoundedPlane=function(){const e=this.analysisView.analysisViewData.plane,i=S.planeToShape(e,this.view,this.view.spatialReference,new f);let t=null;n.isSome(i)&&(t={heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height}),this._currentSlicePlane=t,this._internalChange=!0,this.analysis.shape=i,this._internalChange=!1,this._updateViewSlicePlane()},a._updateActiveController=function(){if(C)return;const e=m(this.view);if(this.analysisView.active)n.isSome(e.activeController)&&e.activeController!==this?(C=!0,e.activeController.analysisView.active=!1,C=!1):n.isSome(e.activeController)&&e.activeController,this._updateLayerViews(),e.activeController=this;else{if(n.isSome(e.activeController)&&e.activeController!==this)return;n.isSome(e.activeController)&&e.activeController===this&&(e.activeController=null,this._updateLayerViews())}},a._updateViewSlicePlane=function(){"ready"===this.state&&b(this.view)},a._updateLayerViews=function(){const e=n.isSome(this.analysisView.analysisViewData.plane)&&this.analysisView.visible&&this.analysisView.active,i=[],t=e=>{"layers"in e?e.layers.forEach(t):i.push(e)};this.analysis.excludedLayers.forEach(t),this.view.allLayerViews.forEach((t=>{t.destroyed||("slicePlaneEnabled"in t&&(t.slicePlaneEnabled=e&&i.indexOf(t.layer)<0),"sublayerViews"in t&&t.sublayerViews.forEach((t=>{t.slicePlaneEnabled=e&&i.indexOf(t.sublayer)<0})))})),null!=this.view.basemapTerrain&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.analysis.excludeGroundSurface)},i._createClass(t,[{key:"ready",get:function(){return"ready"===this.state}},{key:"_allLayerAndSubLayerViews",get:function(){const e=this.view.allLayerViews.items;return e.concat(e.filter(S.isIBuildingSceneLayerView3D).flatMap((({sublayerViews:e})=>e.items)))}}]),t}(a),t.__decorate([c.property({readOnly:!0})],e.SliceController.prototype,"state",void 0),t.__decorate([c.property()],e.SliceController.prototype,"view",void 0),t.__decorate([c.property()],e.SliceController.prototype,"analysis",void 0),t.__decorate([c.property()],e.SliceController.prototype,"analysisView",void 0),t.__decorate([c.property()],e.SliceController.prototype,"ready",null),t.__decorate([c.property()],e.SliceController.prototype,"_allLayerAndSubLayerViews",null),e.SliceController=t.__decorate([y.subclass("esri.views.3d.analysis.Slice.SliceController")],e.SliceController);const V=new Map;let C=!1;function b(e){const i=m(e).activeController;n.isSome(i)&&n.isSome(i.analysisView.analysisViewData.plane)&&i.analysisView.visible?e.slicePlane=i.analysisView.analysisViewData.plane:e.slicePlane=null}function P(e,i){V.has(e)||V.set(e,{all:[],activeController:null}),V.get(e).all.push(i)}function m(e){return V.get(e)}function L(e,i){if(!V.has(e))throw new Error("view expected in global slice register");const t=V.get(e),a=t.all.lastIndexOf(i);if(-1===a)throw new Error("controller expected in global slice register");t.all.splice(a,1),0===t.all.length&&V.delete(e)}Object.defineProperty(e,"__esModule",{value:!0})}));
