/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import i from"../../../../analysis/SlicePlane.js";import t from"../../../../core/Accessor.js";import a from"../../../../core/Handles.js";import s from"../../../../core/Logger.js";import{isNone as l,isSome as r}from"../../../../core/maybe.js";import{watch as n,whenOnce as o}from"../../../../core/reactiveUtils.js";import{property as c}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as h}from"../../../../core/accessorSupport/decorators/subclass.js";import{c as d}from"../../../../chunks/boundedPlane.js";import u from"../../../../layers/Layer.js";import y from"../../../../layers/buildingSublayers/BuildingComponentSublayer.js";import{isIBuildingSceneLayerView3D as p,projectAndElevationAlignShape as w,projectedShapeToPlane as v,planeToShape as m}from"./sliceToolUtils.js";import{logFailedGeometryProjectionError as f}from"../support/projectionUtils.js";import{isTerrainSurfaceLayer as _}from"../../terrain/terrainUtils.js";const V=s.getLogger("esri.views.3d.analysis.Slice.SliceController");let g=class extends t{constructor(e){super(e),this._handles=new a,this._internalChange=!1,this._currentSlicePlane=null,this.state="ready"}get ready(){return"ready"===this.state}initialize(){this._handles.add(this.analysis.excludedLayers.on("before-add",(e=>{const i=e.item;null!=i&&(i instanceof u||i instanceof y)?i instanceof u&&_(i)?(V.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.analysis.excludedLayers.includes(i)&&e.preventDefault():(V.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault())}))),C(this.view,this),this._handles.add([n((()=>this.analysisViewData.plane),(()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()}),{sync:!0}),n((()=>this.analysis.excludeGroundSurface),(()=>this._updateLayerViews()),{sync:!0}),this.analysis.excludedLayers.on("change",(()=>this._updateLayerViews())),n((()=>[this.analysisViewData.active,this.analysisViewData.visible]),(()=>{this._updateActiveController(),this._updateViewSlicePlane()}),{sync:!0}),n((()=>this._allLayerAndSubLayerViews),(()=>this._updateLayerViews()))]),this._handles.add([n((()=>this.analysis.shape),(()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())}),{sync:!0})],"analysis"),this._set("state","ready"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane()}destroy(){"destroyed"!==this.state&&(this.analysisViewData.active&&(this.analysisViewData.active=!1,this.view.slicePlane=null),j(this.view,this),this._handles.destroy(),this.set("view",null),this._set("state","destroyed"))}async whenReady(){return await o((()=>this.ready)),this}get _allLayerAndSubLayerViews(){const e=this.view.allLayerViews.items;return e.concat(e.filter(p).flatMap((({sublayerViews:e})=>e.items)))}_updateBoundedPlaneFromSlicePlane(){const e=this.analysis.shape,i=this._currentSlicePlane;if(l(i)&&l(e)||r(i)&&r(e)&&e.equals(i))return;let t=null,a=null;if(r(e)&&r(e.position)){const i=e.position.spatialReference,s=w(e,this.view);l(s)&&f(this.analysis,i,V),t=v(s,this.view,{tiltEnabled:this.analysis.tiltEnabled},d()),r(t)&&(a={heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height})}this._currentSlicePlane=a,this._internalChange=!0,this.analysisViewData.plane=t,this._internalChange=!1}_updateSlicePlaneFromBoundedPlane(){const e=this.analysisViewData.plane,t=m(e,this.view,this.view.spatialReference,new i);let a=null;r(t)&&(a={heading:t.heading,tilt:t.tilt,position:t.position,width:t.width,height:t.height}),this._currentSlicePlane=a,this._internalChange=!0,this.analysis.shape=t,this._internalChange=!1,this._updateViewSlicePlane()}_updateActiveController(){if(b)return;const e=L(this.view);if(this.analysisViewData.active)r(e.activeController)&&e.activeController!==this?(b=!0,e.activeController.analysisViewData.active=!1,b=!1):r(e.activeController)&&e.activeController,this._updateLayerViews(),e.activeController=this;else{if(r(e.activeController)&&e.activeController!==this)return;r(e.activeController)&&e.activeController===this&&(e.activeController=null,this._updateLayerViews())}}_updateViewSlicePlane(){"ready"===this.state&&P(this.view)}_updateLayerViews(){const e=r(this.analysisViewData.plane)&&this.analysisViewData.visible&&this.analysisViewData.active,i=[],t=e=>{"layers"in e?e.layers.forEach(t):i.push(e)};this.analysis.excludedLayers.forEach(t),this.view.allLayerViews.forEach((t=>{t.destroyed||("slicePlaneEnabled"in t&&(t.slicePlaneEnabled=e&&!i.includes(t.layer)),"sublayerViews"in t&&t.sublayerViews.forEach((t=>{t.slicePlaneEnabled=e&&!i.includes(t.sublayer)})))})),null!=this.view.basemapTerrain&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.analysis.excludeGroundSurface)}};e([c({readOnly:!0})],g.prototype,"state",void 0),e([c()],g.prototype,"view",void 0),e([c()],g.prototype,"analysis",void 0),e([c()],g.prototype,"analysisViewData",void 0),e([c()],g.prototype,"ready",null),e([c()],g.prototype,"_allLayerAndSubLayerViews",null),g=e([h("esri.views.3d.analysis.Slice.SliceController")],g);const S=new Map;let b=!1;function P(e){const i=L(e).activeController;r(i)&&r(i.analysisViewData.plane)&&i.analysisViewData.visible?e.slicePlane=i.analysisViewData.plane:e.slicePlane=null}function C(e,i){S.has(e)||S.set(e,{all:[],activeController:null}),S.get(e).all.push(i)}function L(e){return S.get(e)}function j(e,i){if(!S.has(e))throw new Error("view expected in global slice register");const t=S.get(e),a=t.all.lastIndexOf(i);if(-1===a)throw new Error("controller expected in global slice register");t.all.splice(a,1),0===t.all.length&&S.delete(e)}export{g as SliceController};
