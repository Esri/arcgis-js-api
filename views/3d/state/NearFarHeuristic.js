/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../core/mathUtils","../../../core/maybe","../../../core/unitUtils","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/Extent","../../../geometry/projectionEllipsoid","../../ViewingMode"],(function(e,t,i,n,r,a,s,o,m){"use strict";function c(e,t,i){return e===m.ViewingMode.Global?new u(i):new l(t,i)}let l=function(){function e(e,t){this._elevationProvider=e,this._referenceEllipsoid=o.getReferenceEllipsoid(t),this._unitInMeters=n.getMetersPerUnitForSR(t,this._referenceEllipsoid.metersPerDegree)}return e.prototype.compute=function(e,n,a,o,m){m||(m={near:0,far:0});let c=e[2]*this._unitInMeters;const l=c,u=c-o,M=this._elevationProvider?.visibleElevationBounds;M&&(c=u>=0?l-this._unitInMeters*M.min:this._unitInMeters*M.max-l);const y={x:(a=i.isSome(a)?a:new s({xmin:0,ymin:0,zmin:0,xmax:0,ymax:0,zmax:0})).xmax-a.xmin,y:a.ymax-a.ymin,z:4*Math.max(a.xmax-a.xmin,a.ymax-a.ymin)},g=Math.max(y.x,y.y,y.z);r.subtract(_,n,e),p[0]=_[0]>0?a.xmax:a.xmin,p[1]=_[1]>0?a.ymax:a.ymin,p[2]=_[2]>0?g/2:-g/2,r.subtract(p,p,e),r.normalize(_,_);const E=1.1*r.dot(p,_)*this._unitInMeters,b=Math.sqrt(c*(c+2*this._referenceEllipsoid.radius)),v=Math.max(a.xmax-a.xmin,a.ymax-a.ymin),I=v*f*this._unitInMeters,w=v*d*this._unitInMeters;let z=t.clamp((c-w)/(I-w),0,1);z*=z*z;let P=Math.min(t.lerp(b,E,z),b);return P*=Math.max(Math.log(Math.abs(u)),1),P=Math.min(P,Math.max(34064e4,g)),P/=this._unitInMeters,h(P,x,this._unitInMeters,m)},e}(),u=function(){function e(e){this._referenceEllipsoid=o.getReferenceEllipsoid(e)}return e.prototype.compute=function(e,i,n,a,s){s||(s={near:0,far:0});const o=r.length(e)-this._referenceEllipsoid.radius,m=this._referenceEllipsoid.radius+Math.min(0,a),c=Math.abs(o-a),l=Math.max(c,Math.abs(o));return h(1.2*Math.sqrt(l*(l+2*m)),t.clamp(2e4-(Math.log(l)-7.983)/9.011*19e3,1e3,2e4),1,s)},e}();function h(e,t,i,n){const r=M/i;return e/t>r?(n.far=e,n.near=n.far/t):(n.near=r,n.far=n.near*t),n}const x=2e4,M=2,f=.001,d=1e-4,p=a.create(),_=a.create();e.createNearFarHeuristic=c,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
