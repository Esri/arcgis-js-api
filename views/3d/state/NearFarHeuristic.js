/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../core/mathUtils","../../../core/maybe","../../../core/unitUtils","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/ellipsoidUtils","../../../geometry/Extent","../../ViewingMode","../environment/atmosphereUtils"],(function(e,t,i,n,r,a,s,o,m,c){"use strict";function l(e,t,i){return e===m.ViewingMode.Global?new h(i):new u(t,i)}let u=function(){function e(e,t){this._elevationProvider=e,this._referenceEllipsoid=s.getReferenceEllipsoid(t),this._unitInMeters=n.getMetersPerUnitForSR(t,this._referenceEllipsoid.metersPerDegree)}return e.prototype.compute=function(e,n,a,s,m){m||(m={near:0,far:0});let c=e[2]*this._unitInMeters;const l=c,u=c-s,h=this._elevationProvider?.visibleElevationBounds;h&&(c=u>=0?l-this._unitInMeters*h.min:this._unitInMeters*h.max-l);const f={x:(a=i.isSome(a)?a:new o({xmin:0,ymin:0,zmin:0,xmax:0,ymax:0,zmax:0})).xmax-a.xmin,y:a.ymax-a.ymin,z:4*Math.max(a.xmax-a.xmin,a.ymax-a.ymin)},g=Math.max(f.x,f.y,f.z);r.subtract(_,n,e),y[0]=_[0]>0?a.xmax:a.xmin,y[1]=_[1]>0?a.ymax:a.ymin,y[2]=_[2]>0?g/2:-g/2,r.subtract(y,y,e),r.normalize(_,_);const E=1.1*r.dot(y,_)*this._unitInMeters,b=Math.sqrt(c*(c+2*this._referenceEllipsoid.radius)),v=Math.max(a.xmax-a.xmin,a.ymax-a.ymin),I=v*d*this._unitInMeters,w=v*p*this._unitInMeters,z=t.clamp((c-w)/(I-w),0,1)**3,P=Math.min(t.lerp(b,E,z),b)*Math.max(Math.log(Math.abs(u)),1);return x(Math.min(P,Math.max(34064e4,g))/this._unitInMeters,M,this._unitInMeters,m)},e}(),h=function(){function e(e){this._referenceEllipsoid=s.getReferenceEllipsoid(e)}return e.prototype.compute=function(e,i,n,a,s){s||(s={near:0,far:0});const o=r.length(e),m=o-this._referenceEllipsoid.radius,l=this._referenceEllipsoid.radius+Math.min(0,a),u=Math.abs(m-a),h=Math.max(u,Math.abs(m)),M=Math.sqrt(h*(h+2*l)),f=o+this._referenceEllipsoid.radius;return x(1.2*t.lerp(M,f,c.computeInnerAltitudeFade(h)),t.clamp(2e4-(Math.log(h)-7.983)/9.011*19e3,1e3,2e4),1,s)},e}();function x(e,t,i,n){const r=f/i;return e/t>r?(n.far=e,n.near=n.far/t):(n.near=r,n.far=n.near*t),n}const M=2e4,f=2,d=.001,p=1e-4,y=a.create(),_=a.create();e.createNearFarHeuristic=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
