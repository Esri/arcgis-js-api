/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import i from"../../../core/Logger.js";import{clamp as o,deg2rad as r}from"../../../core/mathUtils.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{earth as n}from"../../../geometry/support/Ellipsoid.js";import{ViewingMode as l}from"../../ViewingMode.js";import{makePiecewiseLinearFunction as m}from"../support/mathUtils.js";const c=i.getLogger("esri.views.3d.state.Constraints");let p=class extends e{constructor(t){super(t),this.collision=new f,this.distance=1/0,this.minimumPoiDistance=4}get altitude(){return this.mode===l.Local?null:this._get("altitude")||null}set altitude(t){this.mode!==l.Local?this._set("altitude",t):c.warn("Altitude constraint is ignored in local scenes")}clampAltitude(t){return this.altitude?o(t,this.altitude.min,this.altitude.max):t}clampTilt(t,e){if(!this.tilt)return e;const i=this.tilt(t);return o(e,i.min,i.max)}clampDistance(t){return Math.min(t,this.distance)}createDefaultTilt(){return this.mode===l.Local?this._createDefaultTiltLocal():this._createDefaultTiltGlobal()}createConstantMaxTilt(t){return(e,i=y)=>(i.min=h.min,i.max=t,i)}_createDefaultTiltLocal(){const t=this.collision.enabled?m([[4e3,h.max],[1e4,r(88)],[6e6,r(88)]]):()=>h.max;return(e,i=y)=>(i.min=h.min,i.max=t(e),i)}_createDefaultTiltGlobal(){const t=this.collision.enabled?m([[4e3,h.max],[5e4,r(88)],[6e6,r(88)],[2e7,h.min]]):m([[3e5,h.max],[3e6,r(88)],[6e6,r(88)],[2e7,h.min]]);return(e,i=y)=>(i.min=h.min,i.max=t(e),i)}};function u(t){return{min:-2e5,max:4*t.radius}}t([s()],p.prototype,"altitude",null),t([s({readOnly:!0})],p.prototype,"collision",void 0),t([s()],p.prototype,"distance",void 0),t([s({readOnly:!0})],p.prototype,"minimumPoiDistance",void 0),t([s()],p.prototype,"tilt",void 0),t([s({constructOnly:!0})],p.prototype,"mode",void 0),p=t([a("esri.views.3d.state.Constraints")],p);const d=u(n),h={min:r(.5),max:r(179.5)},y={min:0,max:0};let f=class extends e{constructor(){super(...arguments),this.enabled=!0,this.elevationMargin=5}};t([s({type:Boolean})],f.prototype,"enabled",void 0),t([s({type:Number})],f.prototype,"elevationMargin",void 0),f=t([a("esri.views.3d.state.Constraints.CollisionConstraint")],f);export{p as Constraints,h as TiltDefault,d as earthAltitudeConstraint};
