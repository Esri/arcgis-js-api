/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{clamp as i}from"../../../../../core/mathUtils.js";import{createScreenPointArray as s}from"../../../../../core/screenUtils.js";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as e}from"../../../../../core/accessorSupport/decorators/subclass.js";import{c as a}from"../../../../../chunks/vec2.js";import{a as o}from"../../../../../chunks/vec2f64.js";import{b as n,l as m,n as h,g as c,a as p,o as l,c as u,h as P}from"../../../../../chunks/vec3.js";import{c as v}from"../../../../../chunks/vec3f64.js";import{create as C,fromPositionAndNormal as f}from"../../../../../geometry/support/plane.js";import{pixelDistanceToInteractionFactor as y,applyAll as D}from"../../../camera/constraintUtils.js";import{ConstraintTypes as d,InteractionType as g,TiltMode as j}from"../../../camera/constraintUtils/common.js";import{InteractiveController as w}from"../InteractiveController.js";import{normalizeCoordinate as M,DISTANCE_CLAMP_VALUES as O,PIVOT_DISTANCE_MODIFIER as b,SCREEN_PIXEL_AREA as N,intersectPlaneFromScreenPoint as U}from"../../utils/navigationUtils.js";import{TERRAIN_ID as R}from"../../../webgl-engine/lib/verticalOffsetUtils.js";let S=class extends w{constructor(t){super(t),this.view=null,this.tmpP=v(),this.tmpDir=v(),this.tmpN=v(),this.tmpP0=o(),this.tmpPoi=v(),this.tmpRayDir=v(),this.dragBeginPoint=s(),this.normalizedAnchorPoint=o(),this.constraintOptions={selection:d.ALL,interactionType:g.ZOOM,interactionFactor:0,interactionStartCamera:null,interactionDirection:v(),tiltMode:j.TUMBLE},this.plane=C()}get intersectionHelper(){return this.view.sceneIntersectionHelper}begin(t){if(!this.active)return;a(this.dragBeginPoint,t),M(this.startCamera,t,this.normalizedAnchorPoint);const s=this.intersectionHelper.intersectScreenFreePointFallback(t,this.tmpP,0===this.view.map.ground.opacity?A:{});n(this.tmpDir,this.tmpP,this.startCamera.eye);const r=m(this.tmpDir);let e;h(this.tmpDir,this.tmpDir),this.view.camera.position.hasZ&&(e=Math.abs(this.view.camera.position.z));let o=i(b*e,O[0],O[1]);const u=this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm,t[0],t[1],this.view.state.camera,N);o=u?Math.min(o,u):o,o=s?Math.min(o,r):o,c(this.tmpDir,this.tmpDir,o),p(this.tmpP,this.startCamera.eye,this.tmpDir),n(this.tmpN,this.startCamera.eye,this.startCamera.center),h(this.tmpN,this.tmpN),this.tmpN[1]<0&&l(this.tmpN,this.tmpN),f(this.tmpP,this.tmpN,this.plane),this.constraintOptions.interactionStartCamera=this.startCamera}update(t){if(!this.active)return;U(this.plane,this.currentCamera,this.dragBeginPoint,this.tmpPoi)||u(this.tmpPoi,this.currentCamera.center),M(this.currentCamera,t,this.tmpP0);let i=4*(this.tmpP0[1]-this.normalizedAnchorPoint[1]);a(this.normalizedAnchorPoint,this.tmpP0),n(this.tmpRayDir,this.tmpPoi,this.currentCamera.eye);const s=m(this.tmpRayDir);let r=s*(1-i);u(this.constraintOptions.interactionDirection,this.tmpRayDir),c(this.constraintOptions.interactionDirection,this.constraintOptions.interactionDirection,Math.sign(i)/s);const e=this.view.state.constraints.minimumPoiDistance;i>=0&&r<e&&(r=e,i=-(r-s)/s),Math.abs(s-r)<1e-6||(c(this.tmpRayDir,this.tmpRayDir,i),this.currentCamera.eye=p(k,this.currentCamera.eye,this.tmpRayDir),P(k,this.currentCamera.center,this.tmpPoi,i),this.tmpPoi[2]>this.startCamera.center[2]?k[2]=Math.max(this.startCamera.center[2],k[2]):k[2]=Math.min(this.startCamera.center[2],k[2]),this.currentCamera.center=k,this.constraintOptions.interactionFactor=y(this.dragBeginPoint,t),D(this.view,this.currentCamera,this.constraintOptions))}end(){this.active&&this.finishController()}};t([r({constructOnly:!0})],S.prototype,"view",void 0),S=t([e("esri.views.3d.state.controllers.local.ZoomController")],S);const k=v(),A={exclude:new Set([R])};export{S as ZoomController};
