/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{Milliseconds as e}from"../../../../../core/time.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/set.js";import{subclass as i}from"../../../../../core/accessorSupport/decorators/subclass.js";import{c as o,b as s,n as a,e as r,l as n,a as m,g as c,h as p}from"../../../../../chunks/vec3.js";import{c as h,f as l}from"../../../../../chunks/vec3f64.js";import{applyAll as C}from"../../../camera/constraintUtils.js";import{ConstraintTypes as y,InteractionType as u,TiltMode as f}from"../../../camera/constraintUtils/common.js";import{PointToPointAnimationController as g}from"../PointToPointAnimationController.js";import{Camera as j}from"../../../webgl-engine/lib/Camera.js";import{newIntersector as w}from"../../../webgl-engine/lib/Intersector.js";import{TERRAIN_ID as b}from"../../../webgl-engine/lib/verticalOffsetUtils.js";import{outExpo as v}from"../../../../animation/easing.js";const L=.6,d=4,z=60,M=14,S=200;let F=class extends g{constructor(){super(...arguments),this.zoomLocation=h(),this.tmpCamera=new j,this.tmpRayDir=h(),this.tmpCenter=h(),this.constraintOptions={selection:y.ALL,interactionType:u.ZOOM,interactionFactor:null,interactionStartCamera:new j,interactionDirection:null,tiltMode:f.TUMBLE}}zoomStep(t,e){if(!this.active)return;const i=this.view.state,{interactionStartCamera:p}=this.constraintOptions;this.animation.finished?p.copyFrom(i.camera):this.animation.cameraAt(1,p),this.tmpCamera.copyFrom(i.camera);const l=w(this.view.state.viewingMode);t>0?(0===this.view.map.ground.opacity?this.intersectionHelper.intersectScreenFreePointFallback(e,this.zoomLocation,O):this.intersectionHelper.intersectScreenFreePointFallback(e,this.zoomLocation),this.intersectionHelper.intersectRay(this.tmpCamera.ray,l,this.tmpCenter)&&(this.tmpCamera.center=this.tmpCenter)):this.intersectionHelper.intersectRay(this.tmpCamera.ray,l,this.zoomLocation)?this.tmpCamera.center=this.zoomLocation:o(this.zoomLocation,this.tmpCamera.center);const C=L**t;let y=this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm,e[0],e[1],this.view.state.camera,z);s(x,this.tmpCamera.eye,this.zoomLocation),a(x,x);const u=Math.max(Math.min(M,1/Math.abs(r(R,x)))*Math.abs(this.view.camera.position.z),S);if(y=y?Math.min(y,u):u,y){const t=h();s(t,this.zoomLocation,this.tmpCamera.eye),y<n(t)&&(a(t,t),m(this.zoomLocation,this.tmpCamera.eye,c(t,t,y)))}this._updateCamera(this.tmpCamera,C,this.zoomLocation),this.begin(this.tmpCamera)}animationSettings(){return{apex:null,duration:e(600),easing:v}}_updateCamera(t,e,i){s(this.tmpRayDir,i,t.eye);const o=n(this.tmpRayDir);let a=o*e;const r=e<=1,m=Math.max(d,1.01*t.nearFar[0]);r&&a<m&&(a=m,e=a/o),Math.abs(o-a)<1e-6||(c(this.tmpRayDir,this.tmpRayDir,e),t.eye=s(D,i,this.tmpRayDir),t.center=p(D,t.center,i,1-e),C(this.view,t,this.constraintOptions))}};F=t([i("esri.views.3d.state.controllers.local.ZoomStepController")],F);const D=h(),R=l(0,0,1),x=h(),O={exclude:new Set([b])};export{F as ZoomStepController};
