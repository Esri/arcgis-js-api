// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../../../core/mathUtils","../../../../../core/screenUtils","../../../../../core/accessorSupport/decorators","../../../../../core/libs/gl-matrix-2/vec3","../../../../../core/libs/gl-matrix-2/vec3f64","../../../camera/constraintUtils","../../../input/util","../InteractiveController","../momentum/PanPlanarMomentumController","../momentum/RotationMomentumController","../momentum/ZoomPlanarMomentumController","../../utils/navigationUtils","../../../support/geometryUtils","../../../webgl-engine/lib/Camera","../../../../navigation/PanPlanarMomentumEstimator","../../../../navigation/RotationMomentumEstimator","../../../../navigation/ZoomMomentumEstimator"],(function(t,e,n,i,o,a,r,s,l,m,c,h,p,u,d,v,C,g,P,b){"use strict";var f;Object.defineProperty(e,"__esModule",{value:!0}),e.PinchAndPanController=e.PanMode=void 0,function(t){t[t.Vertical=0]="Vertical",t[t.Horizontal=1]="Horizontal"}(f=e.PanMode||(e.PanMode={}));var M=s.vec3f64.fromValues(0,0,1),y=16/180*Math.PI,w=function(t){function e(e){var n=t.call(this,e)||this;return n.view=null,n.rotationValueSmooth=new m.ExponentialFalloff(.05),n.scalingValueSmooth=new m.ExponentialFalloff(.05),n.planeHorizontal=v.plane.create(),n.planeVertical=v.plane.create(),n.rotationMomentumEstimator=new P.RotationMomentumEstimator,n.panMomentumEstimator=new g.PanPlanarMomentumEstimator(300,12,.9),n.zoomMomentumEstimator=new b.ZoomMomentumEstimator,n.beginCenter=s.vec3f64.create(),n.tmpPoints=[],n.beginCenterScreen=o.createScreenPointArray(),n.tmpCentroid3d=s.vec3f64.create(),n.tmpCentroid2d=o.createScreenPointArray(),n.tmp2d=o.createScreenPointArray(),n.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new C.default,interactionDirection:null,tiltMode:0},n}return n.__extends(e,t),Object.defineProperty(e.prototype,"intersectionHelper",{get:function(){return this.view.sceneIntersectionHelper},enumerable:!1,configurable:!0}),e.prototype.begin=function(t){if(this.active){var e=this.view.navigation.momentumEnabled;this.zoomMomentumEstimator.enabled=e,this.rotationMomentumEstimator.enabled=e,this.panMomentumEstimator.enabled=e,this.beginRadius=t.radius,this.pointerCount=t.pointers.size,this.beginAngle=t.angle,this.rotationValueSmooth.reset(),this.scalingValueSmooth.reset(),o.screenPointObjectToArray(t.center,this.beginCenterScreen),v.plane.fromNormalAndOffset(M,0,this.planeHorizontal);var n=s.vec3f64.create();this.intersectionHelper.intersectScreenFreePointFallback(this.beginCenterScreen,n);var a=s.vec3f64.create();r.vec3.negate(a,this.beginCamera.viewForward);var l=s.vec3f64.create();r.vec3.copy(l,M);var m=r.vec3.dot(a,l),c=m<0,h=i.asinClamped(c?-m:m);this.panMode=h>=y?f.Horizontal:f.Vertical,v.plane.setOffsetFromPoint(this.planeHorizontal,n,this.planeHorizontal),this.beginCamera.aboveGround||v.plane.negate(this.planeHorizontal,this.planeHorizontal),this.panMode===f.Vertical?(r.vec3.scale(l,l,m),r.vec3.subtract(this.planeVertical,a,l),r.vec3.normalize(this.planeVertical,this.planeVertical),v.plane.setOffsetFromPoint(this.planeVertical,n,this.planeVertical),this.computePlanePoints(t.pointers,this.planeVertical,this.beginCamera,this.tmpPoints),d.centroid(this.tmpPoints,this.beginCenter)):(this.computePlanePoints(t.pointers,this.planeHorizontal,this.beginCamera,this.tmpPoints),d.centroid(this.tmpPoints,this.beginCenter)),this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},e.prototype.update=function(t){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var e=t.pointers.size>1,n=this.panMode===f.Horizontal?this.planeHorizontal:this.planeVertical,i=this.beginCenter;if(e){var a=this.beginRadius/t.radius,r=.001875*Math.min(Math.max(t.radius,40),120);this.scalingValueSmooth.gain=r,this.scalingValueSmooth.update(a),d.applyZoomToPoint(this.currentCamera,i,this.scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance),this.zoomMomentumEstimator.add(this.scalingValueSmooth.value,.001*t.timestamp),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(Math.abs(t.radius-this.beginRadius)),l.applyAll(this.view,this.currentCamera,this.constraintOptions)}if(this.computePlanePoints(t.pointers,n,this.currentCamera,this.tmpPoints),d.centroid(this.tmpPoints,this.tmpCentroid3d),o.screenPointObjectToArray(t.center,this.tmpCentroid2d),d.applyPanPlanar(this.currentCamera,i,this.tmpCentroid3d),this.panMomentumEstimator.add(this.tmpCentroid2d,this.tmpCentroid3d,.001*t.timestamp),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(this.beginCenterScreen,this.tmpCentroid2d),l.applyAll(this.view,this.currentCamera,this.constraintOptions),e){var s=this.planeHorizontal,m=i,c=this.rotationValueSmooth.value,h=c+d.normalizeRotationDelta(t.angle-c);r=.00125*Math.min(Math.max(t.radius,40),120);this.rotationValueSmooth.gain=r,this.rotationValueSmooth.update(h);var p=this.rotationValueSmooth.value-this.beginAngle;this.rotationMomentumEstimator.add(p,.001*t.timestamp),d.applyRotation(this.currentCamera,m,v.axisAngle.wrapAxisAngle(s,p)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(Math.abs(t.radius*p)),l.applyAll(this.view,this.currentCamera,this.constraintOptions)}this.currentCamera.markViewDirty()}},e.prototype.end=function(t){t.pointers.size===this.pointerCount&&this.update(t),this.finishController();var e=this.zoomMomentumEstimator.evaluateMomentum();if(e)return new u.ZoomPlanarMomentumController({view:this.view,momentum:e,zoomCenter:this.beginCenter});var n=this.rotationMomentumEstimator.evaluateMomentum();if(n)return new p.RotationMomentumController({view:this.view,momentum:n,center:this.beginCenter,axis:v.plane.normal(this.planeHorizontal)});var i=this.panMomentumEstimator.evaluateMomentum();return i?new h.PanPlanarMomentumController({view:this.view,momentum:i}):null},e.prototype.computePlanePoints=function(t,e,n,i){i.length=t.size;var o=this.tmp2d,a=0;return t.forEach((function(t){o[0]=t.x,o[1]=t.y,void 0===i[a]&&(i[a]=s.vec3f64.create()),d.intersectPlaneFromScreenPoint(e,n,o,i[a]),a+=1})),i},n.__decorate([a.property({constructOnly:!0})],e.prototype,"view",void 0),e=n.__decorate([a.subclass("esri.views.3d.state.controllers.local.PinchAndPanController")],e)}(c.InteractiveController);e.PinchAndPanController=w}));