// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../../../core/mathUtils","../../../../../core/screenUtils","../../../../../core/accessorSupport/decorators","../../../../../core/libs/gl-matrix-2/mat4","../../../../../core/libs/gl-matrix-2/mat4f64","../../../../../core/libs/gl-matrix-2/vec2","../../../../../core/libs/gl-matrix-2/vec3","../../../../../core/libs/gl-matrix-2/vec3f64","../../../camera/constraintUtils","../../../input/util","../InteractiveController","../momentum/PanPlanarMomentumController","../momentum/PanSphericalMomentumController","../momentum/RotationMomentumController","../momentum/ZoomPlanarMomentumController","../momentum/ZoomSphericalMomentumController","../../utils/navigationUtils","../../utils/navigationUtils","../../../support/geometryUtils","../../../support/mathUtils","../../../webgl-engine/lib/Camera","../../../../navigation/PanPlanarMomentumEstimator","../../../../navigation/PanSphericalMomentumEstimator","../../../../navigation/RotationMomentumEstimator","../../../../navigation/ZoomMomentumEstimator"],(function(t,e,i,n,a,r,o,s,c,h,m,l,p,u,P,d,g,v,b,M,S,y,C,A,w,f,x,O){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PinchAndPanController=void 0;var E=.25,k=.025,R=function(t){function e(e){var i=t.call(this,e)||this;return i.view=null,i.smoothRotation=new p.ExponentialFalloff(.05),i.rotationAxis=m.vec3f64.create(),i.panningPlane=y.plane.create(),i.smoothScaling=new p.ExponentialFalloff(.05),i.zoomCenterScreen=a.createScreenPointArray(),i.zoomMomentumEstimator=new O.ZoomMomentumEstimator,i.rotationMomentumEstimator=new x.RotationMomentumEstimator,i.panSphericalMomentumEstimator=new f.PanSphericalMomentumEstimator,i.panPlanarMomentumEstimator=new w.PanPlanarMomentumEstimator,i.adjustedSphere=y.sphere.create(),i.tmp3d=m.vec3f64.create(),i.tmpMat=s.mat4f64.create(),i.tmpAxisAngle=y.axisAngle.create(),i.tmpScreenPointArray=a.createScreenPointArray(),i.beginScreenPoint=a.createScreenPointArray(),i.beginScenePoint=m.vec3f64.create(),i.screenPickPoint=a.createScreenPointArray(),i.panMode=S.PanMode.Horizontal,i.tmpInteractionDirection=m.vec3f64.create(),i.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new A.default,interactionDirection:null,tiltMode:0},i}return i.__extends(e,t),Object.defineProperty(e.prototype,"intersectionHelper",{get:function(){return this.view.sceneIntersectionHelper},enumerable:!1,configurable:!0}),e.prototype.begin=function(t){if(this.active){var e=this.view.navigation.momentumEnabled;this.zoomMomentumEstimator.enabled=e,this.rotationMomentumEstimator.enabled=e,this.panPlanarMomentumEstimator.enabled=e,this.panSphericalMomentumEstimator.enabled=e,this.beginHeading=-C.cyclicalPI.normalize(n.deg2rad(this.view.camera.heading)),this.beginRadius=t.radius,this.pointerCount=t.pointers.size,this.beginAngle=t.angle,this.smoothRotation.reset(),a.screenPointObjectToArray(t.center,this.screenPickPoint),c.vec2.copy(this.beginScreenPoint,this.screenPickPoint);var i=M.pickPointAndInitSphere(this.intersectionHelper,this.beginCamera,this.screenPickPoint,!0);this.scenePickPoint=i.scenePickPoint,this.sphere=i.sphere,h.vec3.copy(this.beginScenePoint,this.scenePickPoint),this.panMode=M.decidePanMode(this.beginCamera,this.sphere,this.scenePickPoint),this.panMode===S.PanMode.Vertical&&(this.beginCamera.aboveGround?this.preparePlanarPanModeOverground(t):this.preparePlanarPanMode(t)),this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},e.prototype.preparePlanarPanModeOverground=function(t){var e=h.vec3.negate(this.tmp3d,this.beginCamera.viewForward);y.plane.fromPositionAndNormal(this.scenePickPoint,e,this.panningPlane);var i=a.createScreenPointArray(this.screenPickPoint[0],0),n=m.vec3f64.create(),r=h.vec3.length(this.beginCamera.eye);this.adjustedSphere.radius=r<this.sphere.radius?r-100:this.sphere.radius,M.sphereOrPlanePointFromScreenPoint(this.adjustedSphere,this.beginCamera,i,n);var o=a.createRenderScreenPointArray3();this.beginCamera.projectPoint(n,o);var s=.9*o[1];this.screenPickPoint[1]=Math.min(this.screenPickPoint[1],s),this.intersectionHelper.intersectScreen(this.screenPickPoint,this.scenePickPoint)&&y.plane.fromPositionAndNormal(this.scenePickPoint,y.plane.normal(this.panningPlane),this.panningPlane);var c=a.screenPointObjectToArray(t.center,this.tmpScreenPointArray);M.intersectPlaneFromScreenPoint(this.panningPlane,this.beginCamera,c,this.beginScenePoint)},e.prototype.preparePlanarPanMode=function(t){var e=h.vec3.negate(this.tmp3d,this.beginCamera.viewForward);y.plane.fromPositionAndNormal(this.scenePickPoint,e,this.panningPlane);var i=y.sphere.angleToSilhouette(this.sphere,this.currentCamera.eye),n=y.axisAngle.fromPoints(this.currentCamera.eye,this.scenePickPoint,this.tmpAxisAngle),r=this.currentCamera.aboveGround?E:k,s=-n[3]-r*i;if(s>0){var c=o.mat4.identity(this.tmpMat);o.mat4.rotate(c,c,-s,n),h.vec3.subtract(this.scenePickPoint,this.scenePickPoint,this.sphere.center),h.vec3.transformMat4(this.scenePickPoint,this.scenePickPoint,c),h.vec3.add(this.scenePickPoint,this.scenePickPoint,this.sphere.center),y.plane.setOffsetFromPoint(this.panningPlane,this.scenePickPoint,this.panningPlane);var m=a.screenPointObjectToArray(t.center,this.tmpScreenPointArray);M.intersectPlaneFromScreenPoint(this.panningPlane,this.beginCamera,m,this.beginScenePoint)}},e.prototype.update=function(t){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var e=t.pointers.size>1;this.panMode===S.PanMode.Horizontal?(e&&this.zoomSpherical(t),this.panningSpherical(t),e&&this.rotateSpherical(t)):(e&&this.zoomPlanar(t),this.panningPlanar(t),e&&this.rotatePlanar(t)),this.currentCamera.markViewDirty()}},e.prototype.end=function(t){t.pointers.size===this.pointerCount&&this.update(t),this.finishController();var e=this.zoomMomentumEstimator.evaluateMomentum();if(e)return this.panMode===S.PanMode.Horizontal?new b.ZoomSphericalMomentumController({view:this.view,momentum:e,screenCenter:this.zoomCenterScreen,sceneCenter:this.beginScenePoint,radius:this.sphere.radius}):new v.ZoomPlanarMomentumController({view:this.view,momentum:e,zoomCenter:this.beginScenePoint});var i,n=this.rotationMomentumEstimator.evaluateMomentum();if(n)return new g.RotationMomentumController({view:this.view,momentum:n,center:this.sphere.center,axis:this.rotationAxis});if(this.panMode===S.PanMode.Horizontal){if(i=this.panSphericalMomentumEstimator.evaluateMomentum())return new d.PanSphericalMomentumController({view:this.view,momentum:i})}else if(i=this.panPlanarMomentumEstimator.evaluateMomentum())return new P.PanPlanarMomentumController({view:this.view,momentum:i});return null},e.prototype.zoomSpherical=function(t){var e=this.beginRadius/t.radius,i=.001875*Math.min(Math.max(t.radius,40),120);this.smoothScaling.gain=i,this.smoothScaling.update(e),M.applyZoomOnSphere(this.sphere,this.currentCamera,this.smoothScaling.value),a.screenPointObjectToArray(t.center,this.zoomCenterScreen),this.zoomMomentumEstimator.add(this.smoothScaling.value,.001*t.timestamp),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(t.radius-this.beginRadius),l.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.panningSpherical=function(t){var e=a.screenPointObjectToArray(t.center,this.tmpScreenPointArray);M.sphereOrPlanePointFromScreenPoint(this.sphere,this.currentCamera,e,this.tmp3d),M.preserveHeadingThreshold(this.beginScenePoint,h.vec3.dot(this.currentCamera.up,this.beginScenePoint),this.sphere.radius,this.beginHeading,this.view.camera.tilt,this.beginCamera)?(M.applyPanSphericalPreserveHeading(this.sphere,this.currentCamera,this.beginScenePoint,this.tmp3d,this.beginHeading,this.view.camera.tilt,!1),this.panSphericalMomentumEstimator.addMomentumPreserveHeading(e,this.tmp3d,.001*t.timestamp,this.beginCamera,this.sphere,this.beginHeading,this.view.camera.tilt)):(M.applyPanSphericalDirectRotation(this.sphere,this.currentCamera,this.beginScenePoint,this.tmp3d,this.view.camera.tilt,!1),this.panSphericalMomentumEstimator.addMomentumDirectRotation(e,this.tmp3d,.001*t.timestamp,this.beginCamera,this.sphere.radius,this.view.camera.tilt)),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(this.screenPickPoint,e),l.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.rotateSpherical=function(t){h.vec3.normalize(this.rotationAxis,this.scenePickPoint),this.currentCamera.aboveGround||h.vec3.negate(this.rotationAxis,this.rotationAxis);var e=this.smoothRotation.value,i=e+M.normalizeRotationDelta(t.angle-e),n=.00125*Math.min(Math.max(t.radius,40),120);this.smoothRotation.gain=n,this.smoothRotation.update(i);var a=this.smoothRotation.value-this.beginAngle;this.rotationMomentumEstimator.add(a,.001*t.timestamp),M.applyRotation(this.currentCamera,this.sphere.center,y.axisAngle.wrapAxisAngle(this.rotationAxis,a)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(t.radius*i),l.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.panningPlanar=function(t){var e=a.screenPointObjectToArray(t.center,this.tmpScreenPointArray);M.intersectPlaneFromScreenPoint(this.panningPlane,this.currentCamera,e,this.tmp3d)&&(M.applyPanPlanar(this.currentCamera,this.beginScenePoint,this.tmp3d),this.panPlanarMomentumEstimator.add(e,this.tmp3d,.001*t.timestamp),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(this.beginScreenPoint,e),this.constraintOptions.interactionDirection=this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye,this.tmpInteractionDirection),l.applyAll(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null)},e.prototype.zoomPlanar=function(t){var e=this.beginRadius/t.radius,i=.001875*Math.min(Math.max(t.radius,40),120);this.smoothScaling.gain=i,this.smoothScaling.update(e),this.zoomMomentumEstimator.add(this.smoothScaling.value,.001*t.timestamp),M.applyZoomToPoint(this.currentCamera,this.beginScenePoint,this.smoothScaling.value,this.view.state.constraints.minimumPoiDistance),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(t.radius-this.beginRadius),l.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.rotatePlanar=function(t){h.vec3.copy(this.rotationAxis,this.beginScenePoint),this.currentCamera.aboveGround||h.vec3.negate(this.rotationAxis,this.rotationAxis);var e=this.smoothRotation.value,i=t.angle-e,n=e+(i=M.normalizeRotationDelta(i)),a=.00125*Math.min(Math.max(t.radius,40),120);this.smoothRotation.gain=a,this.smoothRotation.update(n);var r=this.smoothRotation.value-this.beginAngle;this.rotationMomentumEstimator.add(r,.001*t.timestamp),M.applyRotation(this.currentCamera,this.sphere.center,y.axisAngle.wrapAxisAngle(this.rotationAxis,r)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=l.pixelDistanceToInteractionFactor(t.radius*r),l.applyAll(this.view,this.currentCamera,this.constraintOptions)},i.__decorate([r.property({constructOnly:!0})],e.prototype,"view",void 0),e=i.__decorate([r.subclass("esri.views.3d.state.controllers.global.PinchAndPanController")],e)}(u.InteractiveController);e.PinchAndPanController=R}));