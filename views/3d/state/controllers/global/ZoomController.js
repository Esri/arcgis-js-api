/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/urlUtils","../../../../../core/uuid","../../../../../portal/support/resourceExtension","../../../../../core/screenUtils","../../../../../chunks/vec3f64","../../../../../chunks/vec3","../../../../../geometry/projectionEllipsoid","../../../../../chunks/vec2f64","../../../../../chunks/vec2","../../../support/geometryUtils","../../../camera/constraintUtils/surfaceCollision","../../../camera/constraintUtils","../../utils/navigationUtils","../InteractiveController"],(function(t,e,i,r,n,a,s,o,c,h,l,p,m,u,d,g,C,y,P,v,f,R){"use strict";const b=30,k=70;t.ZoomController=function(t){function i(e){var i;return(i=t.call(this,e)||this).view=null,i.pickPoint=m.create(),i.tmpP0=g.create(),i.panAxisAngle=y.axisAngle.create(),i.tmpRayDir=m.create(),i.targetOnSphere=m.create(),i.tmpRay={origin:m.create(),direction:m.create()},i.dragBeginPoint=p.createScreenPointArray(),i.normalizedAnchorPoint=g.create(),i.constraintOptions={selection:7,interactionType:1,interactionFactor:0,interactionStartCamera:null,interactionDirection:null,tiltMode:0},i.sphere=y.sphere.create(),i.hasPickPoint=!1,i}e._inheritsLoose(i,t);var n=i.prototype;return n.begin=function(t){if(!this.active)return;C.copy(this.dragBeginPoint,t),f.normalizeCoordinate(this.beginCamera,t,this.normalizedAnchorPoint);const e=d.getReferenceEllipsoid(this.view.spatialReference),i=f.pickPointAndInitSphere(this.intersectionHelper,this.beginCamera,t,!1,e);if(this.navMode=f.decideNavigationMode(this.beginCamera,t,i.hasGeometryIntersection,e),this.navMode===f.NavigationMode.Horizontal||r("disable-feature:context-navigation"))this.hasPickPoint=!!i.scenePickPoint,this.pickPoint=i.scenePickPoint,this.sphere=i.sphere;else{let e;y.ray.fromScreenAtEye(this.beginCamera,t,this.tmpRay),u.normalize(this.tmpRay.direction,this.tmpRay.direction),this.view.camera.position.hasZ&&(e=Math.abs(this.view.camera.position.z));let i=b*e;const r=this.view._stage.renderView.getMinimalDepthForArea(t[0],t[1],this.view._stage.camera,k);i=i>r?r:i,this.hasPickPoint=!0,u.scale(this.tmpRay.direction,this.tmpRay.direction,i),u.add(this.pickPoint,this.tmpRay.origin,this.tmpRay.direction)}this.constraintOptions.interactionStartCamera=this.beginCamera},n.update=function(t){if(this.active){if(this.currentCamera.eye=this.beginCamera.eye,this.currentCamera.center=this.beginCamera.center,this.currentCamera.up=this.beginCamera.up,this.navMode===f.NavigationMode.Horizontal||r("disable-feature:context-navigation")){u.subtract(this.tmpRayDir,this.currentCamera.center,this.currentCamera.eye);const e=u.length(this.tmpRayDir);f.normalizeCoordinate(this.currentCamera,t,this.tmpP0);const i=12*(this.normalizedAnchorPoint[1]-this.tmpP0[1]);let r=e*2**i;const n=this.view.state.constraints.minimumPoiDistance;if(i<0&&r<n&&(r=n),Math.abs(e-r)<1e-6)return;if(this.hasPickPoint&&r<e){const t=1-(1-r/e)*(1-this.sphere[3]/u.length(this.currentCamera.center));u.scale(this.currentCamera.center,this.currentCamera.center,t)}u.scale(this.tmpRayDir,this.tmpRayDir,-r/e),u.add(this.currentCamera.eye,this.currentCamera.center,this.tmpRayDir),this.constraintOptions.interactionFactor=v.pixelDistanceToInteractionFactor(this.dragBeginPoint,t),v.applyAll(this.view,this.currentCamera,this.constraintOptions),this.hasPickPoint&&(f.sphereOrPlanePointFromScreenPoint(this.sphere,this.currentCamera,this.dragBeginPoint,this.targetOnSphere),y.axisAngle.fromPoints(this.pickPoint,this.targetOnSphere,this.panAxisAngle),f.applyRotation(this.currentCamera,this.sphere,this.panAxisAngle))}else{const e=u.length(this.tmpRay.direction);f.normalizeCoordinate(this.currentCamera,t,this.tmpP0);const i=12*(this.normalizedAnchorPoint[1]-this.tmpP0[1]);let r=e*2**i;const n=this.view.state.constraints.minimumPoiDistance;if(i<0&&r<n&&(r=n),Math.abs(e-r)<1e-6)return;u.scale(this.tmpRayDir,this.tmpRay.direction,1-r/e),u.add(this.currentCamera.eye,this.currentCamera.eye,this.tmpRayDir),u.add(this.currentCamera.center,this.currentCamera.center,this.tmpRayDir)}P.applySurfaceCollisionConstraint(this.view,this.currentCamera)}},n.end=function(){this.active&&this.finishController()},e._createClass(i,[{key:"intersectionHelper",get:function(){return this.view.sceneIntersectionHelper}}]),i}(R.InteractiveController),i.__decorate([s.property({constructOnly:!0})],t.ZoomController.prototype,"view",void 0),t.ZoomController=i.__decorate([o.subclass("esri.views.3d.state.controllers.global.ZoomController")],t.ZoomController),Object.defineProperty(t,"__esModule",{value:!0})}));
