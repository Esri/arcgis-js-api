/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Handles","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../camera/intersectionUtils","../camera/constraintUtils/surfaceCollision"],(function(e,t,s,i,n,o,r,a,l,c,u,p){"use strict";e.SurfaceCollisionConstraint=function(e){function s(t){var s;return(s=e.call(this,t)||this)._handles=new n,s}t._inheritsLoose(s,e);var i=s.prototype;return i.initialize=function(){this._handles.add(this.view.basemapTerrain.on("elevation-change",(e=>this._handleElevationChangeEvent(e))))},i.destroy=function(){this._handles&&(this._handles.destroy(),this._handles=null)},i._handleElevationChangeEvent=function(e){if(this.view.state.cameraController)return;const t=this.view.state.camera;o.isSome(e.spatialReference)&&u.eyeWithinExtent(this.view,t,e.extent,e.spatialReference)&&this._applyToCurrentCamera()},i._applyToCurrentCamera=function(){this.view.state.updateCamera((e=>p.applySurfaceCollisionConstraint(this.view,e,p.Mode.EYE_AND_CENTER)))},s}(i),s.__decorate([r.property({constructOnly:!0})],e.SurfaceCollisionConstraint.prototype,"view",void 0),e.SurfaceCollisionConstraint=s.__decorate([c.subclass("esri.views.3d.state.ElevationCollisionConstraint")],e.SurfaceCollisionConstraint),Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
