/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../Camera","../../../Viewpoint","../../../core/Error","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../camera/constraintUtils","../camera/constraintUtils/surfaceCollision","./controllers/CameraController","./controllers/PointToPointAnimationController","./controllers/SurfaceCollisionCorrectionController","../support/cameraUtils","../support/viewpointUtils"],(function(t,i,e,n,o,a,r,s,l,c,h,m,w,f,p){"use strict";let u=function(){function t(t,i,e){this.target=t,this.options=i,this.view=e,this.state="pending",this._animationController=null,this._promise=new Promise(((t,i)=>{this._resolveCallback=t,this._rejectCallback=i;const e=new AbortController;a.isSome(this.options.signal)&&r.onAbort(this.options.signal,(()=>{this.abort()})),this._abortController=e,this.waitForReady()}))}var u=t.prototype;return u.then=function(t,i){return this._promise.then(t,i)},u.catch=function(t){return this._promise.catch(t)},u.resolve=function(t){if("finished"!==this.state)return this.state="finished",this._resolveCallback(t)},u.reject=function(t){if("finished"!==this.state)return this.state="finished",this._rejectCallback(t)},u.abort=function(t=!1){if(this._abortController.abort(),"wait-for-animation-finish"===this.state)!t&&a.isSome(this._animationController)&&this.view.state.cameraController===this._animationController&&this._animationController.active&&this._animationController.stopController();this.reject(r.createAbortError())},u.waitForReady=function(){var t=i._asyncToGenerator((function*(){if(this.state="wait-for-ready",!this.view.ready)try{yield s.whenOnce((()=>this.view.ready),this._abortController.signal)}catch(t){return this.reject(t)}this.createViewPoint()}));function e(){return t.apply(this,arguments)}return e}(),u.createViewPoint=function(){"finished"!==this.state&&(this.state="wait-for-viewpoint",this._animationController=this.options.animate?this._getAnimationController():null,p.create(this.view,this.target,this._abortController.signal).then((t=>{if("finished"===this.state)return;const i=t?this._getCameraFromViewpoint(t):null;if(!a.isNone(i))if(this.options.animate){if(a.isNone(this._animationController))return;this.startAnimation(i,this._animationController)}else this.view.stateManager.setStateCamera(i.camera,{applyConstraints:!i.isFullySpecified,positionAndOrientationOnly:!0,doNotCancelGoToOperation:!0}),this.resolve()}),(t=>{this.reject(t)})))},u._getCameraFromViewpoint=function(t){const i=!!(this.target instanceof n&&this.target.camera||this.target instanceof e),r=t.camera;if(a.isNone(r))return null;if(!this.view.stateManager.isCompatible(r)){const t=r.position,i=t&&t.spatialReference,e=i?i.wkid:"none",n=this.view.spatialReference?.wkid;return this.reject(new o("GotoAnimation:incompatible-spatialreference",`Resulting camera has an incompatible spatial reference (camera: ${e}, view: ${n})`,{camera:r})),null}const s=f.externalToInternal(this.view,r);return a.isNone(s)?(this.reject(new o("GotoAnimation:invalid-camera","Resulting camera is invalid")),null):{viewpoint:t,camera:s,isFullySpecified:i}},u.startAnimation=function(t,i){this.state="wait-for-animation-finish";const e=i.viewAnimation;if(a.isNone(e))return void this.reject(new o("GotoAnimation:missing-animation","Unreachable code in view.stateManager"));if(e.update(t.viewpoint,"running"),!i.active||a.isNone(i.viewAnimation)||i.viewAnimation.target!==t.viewpoint||this.view.state.cameraController!==i)return this.abort();let n;t.isFullySpecified?(n=new w.SurfaceCollisionCorrectionController({view:this.view,desiredCamera:t.camera}),c.applySurfaceCollisionConstraint(this.view,t.camera,c.Mode.EYE_AND_CENTER)):l.applyAll(this.view,t.camera),i.begin(t.camera,this.options);const r=()=>{const e=this.view.state.cameraController;n&&(e&&e.active?e instanceof m.PointToPointAnimationController&&a.isSome(e.viewAnimation)&&e.viewAnimation.target===t.viewpoint&&(this.view.state.cameraController=n):a.isSome(i.viewAnimation)&&i.viewAnimation.target===t.viewpoint&&"finished"===i.state&&(this.view.state.cameraController=n))},s=t=>{if(!a.isNone(this.view.state))switch(i.state){case h.State.Finished:switch(this.state){case"pending":case"wait-for-ready":case"wait-for-viewpoint":case"wait-for-animation-finish":this.resolve()}break;case h.State.Ready:case h.State.Rejected:case h.State.Running:case h.State.Stopped:switch(this.state){case"pending":case"wait-for-ready":case"wait-for-viewpoint":case"wait-for-animation-finish":this.reject(t)}}};e.when(r,(t=>s(t))),i.asyncResult={resolve:()=>s(),reject:t=>s(t)}},u._getAnimationController=function(){let t=null,i=null;const e=this.view.state.cameraController;return e instanceof m.PointToPointAnimationController&&(e.updateStateFromViewAnimation(),e.active&&(t=e,i=t.viewAnimation)),null!=t||(t=new m.PointToPointAnimationController({view:this.view,mode:"animation"}),i=t.viewAnimation,this.view.state.switchCameraController(t))?t:(a.isSome(i)&&i.stop(),this.reject(new o("GotoAnimation:goto-cannot-interrupt","Cannot start an animation while interacting")),null)},t}();t.GoToOperation=u,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
