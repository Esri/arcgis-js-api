/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../../core/PooledArray","../../../../core/screenUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/intersectorUtils"],(function(e,t,n,r,i,s,o,a,c,l,d){"use strict";let u,h=function(){function e(e,t,r){this.viewingMode=e,this.layerProvider=t,this.view=r,this.externalIntersectionHandlers=new n,this.tolerance=l.Intersector.DEFAULT_TOLERANCE,this.tmpRay=o.create(),this.validateHUDIntersector=new l.Intersector(this.viewingMode),this.validateHUDIntersector.options.hud=!1}var s=e.prototype;return s.intersectScreen=function(e,t){return this.intersectRay(this.getPickRay(e,this.tmpRay),p(this.viewingMode),t)},s.intersectScreenFreePointFallback=function(e,t){return this.intersectRayFreePointFallback(this.getPickRay(e,this.tmpRay),t)},s.intersectRayFreePointFallback=function(e,t){return this.intersectRay(e,p(this.viewingMode),t)||this.intersectRayFreePointLocal(e,t)},s.intersectRay=function(e,t,n,r){return t.options.selectionMode=!1,t.options.store=0,this.computeIntersection(e,t,r),!!t.results.min&&t.results.min.getIntersectionPoint(n)},s.getCenterRayWithSubpixelOffset=function(e,t,n=.5,r=.5){return e.getRenderCenter(g,n,r),g[0]+=.0466,g[1]-=.0123,c.fromRenderAtEye(e,g,t)},s.intersectIntersectorScreen=function(e,t,n){this.computeIntersection(this.getPickRay(e,this.tmpRay),t,n)},s.intersectToolIntersectorScreen=function(e,t,n){const r=this.getPickRay(e,this.tmpRay);this.intersectToolIntersectorRay(r,t,n)},s.intersectToolIntersectorRay=function(e,t,n){t.options.selectionMode=!0,this.computeIntersection(e,t,n);const r=t.results.min;!!this.view.basemapTerrain&&this.view.basemapTerrain.opaque||r.hasIntersectionPoint&&"TerrainRenderer"!==r.intersector||(t.options.selectionMode=!1,this.computeIntersection(e,t,n))},s.setTolerance=function(e=l.Intersector.DEFAULT_TOLERANCE){this.tolerance=e},s.addIntersectionHandler=function(e){this.externalIntersectionHandlers.push(e),this.externalIntersectionHandlers.sort(((e,t)=>"Terrain"===e.type?1:"Terrain"===t.type?-1:0))},s.removeIntersectionHandler=function(e){this.externalIntersectionHandlers.removeUnordered(e),this.externalIntersectionHandlers.sort(((e,t)=>"Terrain"===e.type?1:"Terrain"===t.type?-1:0))},s.getPickRay=function(e,t=o.create()){const n=this.view.state.camera;return c.fromScreen(n,e,t)},s.intersectRayFreePointLocal=function(e,n){if(2!==this.viewingMode||t.isNone(e))return!1;const r=this.view.renderDataExtent;if(t.isNone(r))return i.add(n,e.origin,i.normalize(a.sv3d.get(),e.direction)),!0;const s={x:r.xmax-r.xmin,y:r.ymax-r.ymin,z:8*Math.max(r.xmax-r.xmin,r.ymax-r.ymin)},o=Math.max(s.x,s.y,s.z);if(0===o)return i.add(n,e.origin,i.normalize(a.sv3d.get(),e.direction)),!0;const c=this.view.state.camera,l=Math.max(0,r.xmin-c.eye[0],c.eye[0]-r.xmax),d=Math.max(0,r.ymin-c.eye[1],c.eye[1]-r.ymax),u=Math.sqrt(l*l+d*d),h=Math.abs(c.relativeElevation)+Number.MIN_VALUE,y=Math.max(0,Math.log(o/h))**2;let p=o/Math.max(1,y);p=Math.max(p,Math.min(u,o));const m=i.scale(a.sv3d.get(),e.direction,p/i.length(e.direction));return i.add(n,e.origin,m),!0},s.intersectElevationFromScreen=function(e,t,n=0,r=null){return this.intersectElevation(this.getPickRay(e,this.tmpRay),t,n,r)},s.intersectElevation=function(e,n,s=0,o=null){if(t.isNone(e))return null;const c=t.isSome(n)?n.mode:"absolute-height",u=t.isSome(n)?t.unwrapOr(n.offset,0):0,h="on-the-ground"!==c?u+s:0,y=h/this.view.renderCoordsHelper.unitInMeters;if("absolute-height"===c){if(this.view.renderCoordsHelper.intersectInfiniteManifold(e,h,v)){const e=this.view.computeMapPointFromVec3d(v);return e.z-=u,e}return null}const p=this.view.state.camera,f=r.castRenderScreenPointArray3(a.sv3d.get());p.projectToRenderScreen(e.origin,f);const g=this.prepareFilters(null,m),R=this.view.slicePlane,I=t.isSome(R)?d.sliceFilterPredicate(R):null,P=new l.Intersector(this.viewingMode);P.options.store=0,P.options.verticalOffset=y;const x=e.origin,w=i.add(a.sv3d.get(),x,e.direction);P.reset(x,w),P.point=f,P.camera=p,P.filterPredicate=null;const b=t.isSome(o)?"type"in o&&"graphics"===o.type?e=>e.metadata.layerUid!==o.uid:e=>e.metadata.graphicUid!==o.uid:null;switch(c){case"relative-to-scene":{const e=e=>(t.isNone(b)||b(e))&&e.metadata&&e.metadata.isElevationSource;P.intersect(g.layers,f,p,this.tolerance,null,e),this.externalIntersectionHandlers.forAll((e=>{if("I3S"===e.type||"Terrain"===e.type){const t=e.slicePlane?I:null;e.intersect(P,t,P.rayBeginPoint,P.rayEndPoint,f)}}))}break;case"on-the-ground":case"relative-to-ground":this.externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlane?I:null;e.intersect(P,t,P.rayBeginPoint,P.rayEndPoint,f)}}))}if(P.results.min.getIntersectionPoint(v)){const e=this.view.computeMapPointFromVec3d(v);return e.z=s,e}return null},s.computeIntersection=function(e,n,s){if(t.isNone(e))return;const o=this.view.state.camera,c=r.castRenderScreenPointArray3(a.sv3d.get());o.projectToRenderScreen(e.origin,c);const l=this.prepareFilters(s,m);n.options.selectOpaqueTerrainOnly=!s||!("include"in s||"exclude"in s);const u=e.origin,h=i.add(a.sv3d.get(),e.origin,e.direction);n.reset(u,h),n.intersect(l.layers,c,o,this.tolerance);const y=this.view.slicePlane,p=t.isSome(y)?d.sliceFilterPredicate(y):null;n.intersect(l.sliceableLayers,c,o,this.tolerance,p);const f=s&&(s.requiresGroundFeedback||s.enableDraped);this.externalIntersectionHandlers.forAll((e=>{if(n.options.isFiltered=!l.filterLayerUid(e.intersectionHandlerId),e.isGround&&f||!n.options.isFiltered){const t=e.slicePlane?p:null;e.intersect(n,t,u,h,c)}}));const v=a.sv3d.get();if(s&&s.enableDraped&&n.results.ground.getIntersectionPoint(v)){const e=this.view.basemapTerrain.overlayManager.renderer,r=this.view.renderCoordsHelper.spatialReference,i=a.sv3d.get();this.view.renderCoordsHelper.fromRenderCoords(v,i,this.view.spatialReference),i[2]=t.unwrapOr(this.view.elevationProvider.getElevation(v[0],v[1],v[2],r,"ground"),0),e.intersect(n,i,l.filterRenderGeometry)}n.sortResults();const g=n.results.hud;if(g.hasIntersectionPoint){const e=r.castRenderScreenPointArray3(a.sv3d.get()),t=a.sv3d.get(),s=a.sv3d.get();this.unprojectHUDResultRay(g.center,e,t,s);const c=i.distance(g.center,t)/i.distance(t,s)*.99;this.validateHUDIntersector.reset(t,s),this.validateHUDIntersector.intersect(l.layers,e,o,this.tolerance),this.validateHUDIntersector.intersect(l.sliceableLayers,e,o,this.tolerance,p),this.externalIntersectionHandlers.forAll((n=>{if(!l.filterLayerUid(n.intersectionHandlerId))return;const r=n.slicePlane?p:null;n.intersect(this.validateHUDIntersector,r,t,s,e)}));const d=this.validateHUDIntersector.results.min;(null==d.dist||c<=d.dist)&&(n.results.min.copyFrom(g),n.results.all.splice(0,0,g))}},s.prepareFilters=function(e,t){const n=[],r=[];return this.layerProvider.forEachLayer((e=>{e.isPickable&&(e.isSliceable?r:n).push(e)})),t.include=e&&e.include,t.exclude=e&&e.exclude,t.layers.length=0,t.sliceableLayers.length=0,y(n,t.filterLayer,t.layers),y(r,t.filterLayer,t.sliceableLayers),t},s.unprojectHUDResultRay=function(e,t,n,i){const s=this.view.state.camera;s.projectToRenderScreen(e,t);const o=r.castRenderScreenPointArray3(a.sv3d.get());o[0]=t[0],o[1]=t[1],o[2]=0,s.unprojectFromRenderScreen(o,n),o[2]=1,s.unprojectFromRenderScreen(o,i)},e}();function y(e,t,n){for(const r of e)t&&!t(r)||n.push(r);return n}function p(e){return u||(u=new l.Intersector(e)),u.viewingMode=e,u}const m={include:null,exclude:null,layers:[],sliceableLayers:[],filterLayer:e=>m.filterLayerUid(e.apiLayerUid),filterLayerUid(e){const{include:n,exclude:r}=m;return t.isNone(e)?null==n&&null==r:(null==n||n.has(e))&&(null==r||!r.has(e))},filterRenderGeometry:e=>m.filterLayerUid(e.layerUid)};function f(e){return"object"==typeof e&&"intersect"in e}const v=s.create(),g=r.createRenderScreenPointArray3();e.SceneIntersectionHelper=h,e.isIntersectionHandler=f,Object.defineProperty(e,"__esModule",{value:!0})}));
