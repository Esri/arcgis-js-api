/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../../core/PooledArray","../../../../core/screenUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../ViewingMode","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtils"],(function(e,t,n,r,i,s,o,c,a,l,u,d,h,p){"use strict";let y=function(){function e(e,t,r){this.viewingMode=e,this._forEachLayer=t,this._view=r,this._externalIntersectionHandlers=new n,this._tolerance=d.DEFAULT_TOLERANCE,this._tmpRay=c.create(),this._tmpRegion=o.create(),this._validateHUDIntersector=d.newIntersector(this.viewingMode),this._validateHUDIntersector.options.hud=!1}var s=e.prototype;return s.intersectScreen=function(e,t,n){return this.intersectRay(this._getPickRay(e,this._tmpRay),_(this.viewingMode),t,n)},s.intersectScreenFreePointFallback=function(e,t,n){return this.intersectRayFreePointFallback(this._getPickRay(e,this._tmpRay),t,n)},s.intersectRayFreePointFallback=function(e,t,n){return this.intersectRay(e,_(this.viewingMode),t,n)||this._intersectRayFreePointLocal(e,t)},s.intersectRay=function(e,t,n,r){return t.options.selectionMode=!1,t.options.store=h.StoreResults.MIN,this.computeIntersection(e,t,r),!!t.results.min&&t.results.min.getIntersectionPoint(n)},s.getCenterRayWithSubpixelOffset=function(e,t,n=.5,r=.5){return e.getRenderCenter(P,n,r),P[0]+=.0466,P[1]-=.0123,u.fromRenderAtEye(e,P,t)},s.intersectIntersectorScreen=function(e,t,n){this.computeIntersection(this._getPickRay(e,this._tmpRay),t,n)},s.intersectToolIntersectorScreen=function(e,t,n){const r=this._getPickRay(e,this._tmpRay);this.intersectToolIntersectorRay(r,t,n)},s.intersectToolIntersectorRay=function(e,t,n){t.options.selectionMode=!0,this.computeIntersection(e,t,n);const r=t.results.min;!!this._view.basemapTerrain&&this._view.basemapTerrain.opaque||p.isValidIntersectorResult(r)&&r.intersector!==h.IntersectorType.TERRAIN||(t.options.selectionMode=!1,this.computeIntersection(e,t,n))},s.setTolerance=function(e=d.DEFAULT_TOLERANCE){this._tolerance=e},s.addIntersectionHandler=function(e){this._externalIntersectionHandlers.push(e),this._externalIntersectionHandlers.sort(((e,t)=>e.type===h.IntersectorType.TERRAIN?1:t.type===h.IntersectorType.TERRAIN?-1:0))},s.removeIntersectionHandler=function(e){null!=this._externalIntersectionHandlers.removeUnordered(e)&&this._externalIntersectionHandlers.sort(((e,t)=>e.type===h.IntersectorType.TERRAIN?1:t.type===h.IntersectorType.TERRAIN?-1:0))},s._getPickRay=function(e,t){const n=this._view.state.camera;return u.fromScreen(n,e,t)},s._intersectRayFreePointLocal=function(e,n){return this.viewingMode!==l.ViewingMode.Local||t.isNone(e)||i.add(n,e.origin,i.normalize(a.sv3d.get(),e.direction)),!1},s.intersectElevationFromScreen=function(e,t,n=0,r=null){return this._intersectElevation(this._getPickRay(e,this._tmpRay),t,n,r)},s._intersectElevation=function(e,n,s=0,o=null){if(t.isNone(e))return null;const c=t.isSome(n)?n.mode:"absolute-height",l=t.isSome(n)?t.unwrapOr(n.offset,0):0,u="on-the-ground"!==c?l+s:0,y=u/this._view.renderCoordsHelper.unitInMeters;if("absolute-height"===c){if(this._view.renderCoordsHelper.intersectInfiniteManifold(e,u,w)){const e=this._view.computeMapPointFromVec3d(w);return e.z??(e.z=0),e.z-=l,e}return null}const f=this._view.state.camera,g=r.castRenderScreenPointArray3(a.sv3d.get());f.projectToRenderScreen(e.origin,g);const m=new I(null,this._forEachLayer),R=this._view.slicePlane,_=t.isSome(R)?p.sliceFilterPredicate(R):null,v=d.newIntersector(this.viewingMode);v.options.store=h.StoreResults.MIN,v.options.verticalOffset=y;const P=e.origin,b=i.add(a.sv3d.get(),P,e.direction);v.reset(P,b,f),v.point=g;const S=t.isSome(o)?"type"in o&&"graphics"===o.type?e=>e.metadata?.layerUid!==o.uid:e=>e.metadata?.graphicUid!==o.uid:null;switch(c){case"relative-to-scene":{const e=e=>(t.isNone(S)||S(e))&&!!e.metadata?.isElevationSource;v.intersect(m.layers,g,this._tolerance,null,e),this._externalIntersectionHandlers.forAll((e=>{if(e.type===h.IntersectorType.I3S||e.type===h.IntersectorType.TERRAIN){const t=e.slicePlaneEnabled?_:null;e.intersect(v,t,v.rayBegin,v.rayEnd,g)}}));break}case"on-the-ground":case"relative-to-ground":this._externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlaneEnabled?_:null;e.intersect(v,t,v.rayBegin,v.rayEnd,g)}}))}if(v.results.min.getIntersectionPoint(w)){const e=this._view.computeMapPointFromVec3d(w);return e.z=s,e}return null},s.computeIntersection=function(e,n,s){if(t.isNone(e))return;const o=this._view.state.camera,c=r.castRenderScreenPointArray3(a.sv3d.get());o.projectToRenderScreen(e.origin,c);const l=new I(s,this._forEachLayer);n.options.selectOpaqueTerrainOnly=!s||!("include"in s||"exclude"in s);const u=e.origin,d=i.add(a.sv3d.get(),e.origin,e.direction);n.reset(u,d,o),n.intersect(l.layers,c,this._tolerance);const h=this._view.slicePlane,y=t.isSome(h)?p.sliceFilterPredicate(h):null;n.intersect(l.sliceableLayers,c,this._tolerance,y);const f=s&&(s.requiresGroundFeedback||s.enableDraped);this._externalIntersectionHandlers.forAll((e=>{const t=e.layerUid,r=Array.isArray(t),i=r?t:[t];r&&(n.options.filteredLayerUids=[]);let s=!1;for(const o of i){!l.filterLayerUid(o)?r&&n.options.filteredLayerUids.push(o):s=!0}if(n.options.isFiltered=!s,e.isGround&&f||!n.options.isFiltered){const t=e.slicePlaneEnabled?y:null;e.intersect(n,t,u,d,c)}}));const g=a.sv3d.get(),m=this._view.basemapTerrain;if(s&&s.enableDraped&&t.isSome(m.spatialReference)&&n.results.ground.getIntersectionPoint(g)){const e=m.overlayManager.renderer,r=this._view.renderCoordsHelper.spatialReference,i=a.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(g,i,m.spatialReference),i[2]=t.unwrapOr(this._view.elevationProvider?.getElevation(g[0],g[1],g[2],r,"ground"),0),e.intersect(n,i,n.results.ground,(e=>l.filterRenderGeometry(e)))}n.sortResults(),this._processHUDResults(n)},s._processHUDResults=function(e){const n=e.results.hud;o.copy(this._tmpRegion,o.NEGATIVE_INFINITY);const r=this._view.state.camera,i=[],s=this._tmpRegion,c=e=>{const t=new R(e);r.projectToRenderScreen(e.target.center,t.screenPoint),t.screenPoint[0]=Math.floor(t.screenPoint[0]),t.screenPoint[1]=Math.floor(t.screenPoint[1]),i.push(t),o.expandPointInPlace(s,t.screenPoint)};e.sortResults(n.all),t.isSome(n.min.dist)&&c(n.min);for(const t of n.all)n.min.target.object!==t.target.object&&n.max.target.object!==t.target.object&&c(t);if(t.isSome(n.max.dist)&&n.max.target.object!==n.min.target.object&&c(n.max),!i.length)return;s[0]===s[2]&&(s[2]+=1),s[1]===s[3]&&(s[3]+=1);const a=r.fullWidth,l=r.fullHeight,u=Math.max(0,s[0]-f),d=Math.max(0,s[1]-f),p=Math.min(o.width(s)+2*f,a-u),y=Math.min(o.height(s)+2*f,l-d),m=new Uint8Array(p*y*4);this._view._stage.renderer.readHUDVisibility(u,d,p,y,m);let _=!0;const I=t.isNone(e.results.max.dist);let v=0;for(const t of i)for(const n of g){if(m[4*(Math.min(t.screenPoint[0]+n[0],a)-s[0]+(Math.min(t.screenPoint[1]+n[1],l)-s[1])*p)]){_&&(e.results.min.copy(t.result),_=!1),I&&e.results.max.copy(t.result),e.options.store===h.StoreResults.ALL&&e.results.all.splice(v++,0,t.result);break}}},e}();const f=1,g=(()=>{const e=[],t=f;for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++)e.push([r+t,n+t]);return e})();let m,R=function(e){this.result=e,this.screenPoint=r.createRenderScreenPointArray3()};function _(e){return m&&m.viewingMode===e||(m=d.newIntersector(e)),m}let I=function(){function e(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=e?.include,this.exclude=e?.exclude,t((e=>{e.pickable&&this.filterLayerUid(e.apiLayerUid)&&(e.sliceable?this.sliceableLayers:this.layers).push(e)}))}var n=e.prototype;return n.filterLayerUid=function(e){const{include:n,exclude:r}=this;return t.isNone(e)?null==n&&null==r:(null==n||n.has(e))&&(null==r||!r.has(e))},n.filterRenderGeometry=function(e){return this.filterLayerUid(e.layerUid)},e}();function v(e){return"object"==typeof e&&"intersect"in e}const w=s.create(),P=r.createRenderScreenPointArray3();e.SceneIntersectionHelper=y,e.isIntersectionHandler=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
