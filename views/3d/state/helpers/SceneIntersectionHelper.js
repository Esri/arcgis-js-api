/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../../core/PooledArray","../../../../core/screenUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../ViewingMode","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtils"],(function(e,t,n,r,i,s,o,a,c,l,u,d,h,y){"use strict";let m=function(){function e(e,t,r){this.viewingMode=e,this._forEachLayer=t,this._view=r,this._externalIntersectionHandlers=new n,this._tolerance=d.DEFAULT_TOLERANCE,this._tmpRay=a.create(),this._tmpRegion=o.create(),this._validateHUDIntersector=d.newIntersector(this.viewingMode),this._validateHUDIntersector.options.hud=!1}var s=e.prototype;return s.intersectScreen=function(e,t,n){return this.intersectRay(this._getPickRay(e,this._tmpRay),R(this.viewingMode),t,n)},s.intersectScreenFreePointFallback=function(e,t,n){return this.intersectRayFreePointFallback(this._getPickRay(e,this._tmpRay),t,n)},s.intersectRayFreePointFallback=function(e,t,n){return this.intersectRay(e,R(this.viewingMode),t,n)||this._intersectRayFreePointLocal(e,t)},s.intersectRay=function(e,t,n,r){return t.options.selectionMode=!1,t.options.store=h.StoreResults.MIN,this.computeIntersection(e,t,r),!!t.results.min&&t.results.min.getIntersectionPoint(n)},s.getCenterRayWithSubpixelOffset=function(e,t,n=.5,r=.5){return e.getRenderCenter(x,n,r),x[0]+=.0466,x[1]-=.0123,u.fromRenderAtEye(e,x,t)},s.intersectIntersectorScreen=function(e,t,n){this.computeIntersection(this._getPickRay(e,this._tmpRay),t,n)},s.intersectToolIntersectorScreen=function(e,t,n){const r=this._getPickRay(e,this._tmpRay);this.intersectToolIntersectorRay(r,t,n)},s.intersectToolIntersectorRay=function(e,t,n){t.options.selectionMode=!0,this.computeIntersection(e,t,n);const r=t.results.min;!!this._view.basemapTerrain&&this._view.basemapTerrain.opaque||y.isValidIntersectorResult(r)&&r.intersector!==h.IntersectorType.TERRAIN||(t.options.selectionMode=!1,this.computeIntersection(e,t,n))},s.setTolerance=function(e=d.DEFAULT_TOLERANCE){this._tolerance=e},s.addIntersectionHandler=function(e){this._externalIntersectionHandlers.push(e),this._externalIntersectionHandlers.sort(((e,t)=>e.type===h.IntersectorType.TERRAIN?1:t.type===h.IntersectorType.TERRAIN?-1:0))},s.removeIntersectionHandler=function(e){null!=this._externalIntersectionHandlers.removeUnordered(e)&&this._externalIntersectionHandlers.sort(((e,t)=>e.type===h.IntersectorType.TERRAIN?1:t.type===h.IntersectorType.TERRAIN?-1:0))},s._getPickRay=function(e,t){const n=this._view.state.camera;return u.fromScreen(n,e,t)},s._intersectRayFreePointLocal=function(e,n){if(this.viewingMode!==l.ViewingMode.Local||t.isNone(e))return!1;const r=this._view.renderDataExtent;if(t.isNone(r))return i.add(n,e.origin,i.normalize(c.sv3d.get(),e.direction)),!0;const s={x:r.xmax-r.xmin,y:r.ymax-r.ymin,z:8*Math.max(r.xmax-r.xmin,r.ymax-r.ymin)},o=Math.max(s.x,s.y,s.z);if(0===o)return i.add(n,e.origin,i.normalize(c.sv3d.get(),e.direction)),!0;const a=this._view.state.camera,u=Math.max(0,r.xmin-a.eye[0],a.eye[0]-r.xmax),d=Math.max(0,r.ymin-a.eye[1],a.eye[1]-r.ymax),h=Math.sqrt(u*u+d*d),y=Math.abs(a.relativeElevation)+Number.MIN_VALUE,m=Math.max(0,Math.log(o/y))**2;let p=o/Math.max(1,m);p=Math.max(p,Math.min(h,o));const f=i.length(e.direction),g=i.scale(c.sv3d.get(),e.direction,0===f?p:p/f);return i.add(n,e.origin,g),!0},s.intersectElevationFromScreen=function(e,t,n=0,r=null){return this._intersectElevation(this._getPickRay(e,this._tmpRay),t,n,r)},s._intersectElevation=function(e,n,s=0,o=null){if(t.isNone(e))return null;const a=t.isSome(n)?n.mode:"absolute-height",l=t.isSome(n)?t.unwrapOr(n.offset,0):0,u="on-the-ground"!==a?l+s:0,m=u/this._view.renderCoordsHelper.unitInMeters;if("absolute-height"===a){if(this._view.renderCoordsHelper.intersectInfiniteManifold(e,u,w)){const e=this._view.computeMapPointFromVec3d(w);return e.z-=l,e}return null}const p=this._view.state.camera,f=r.castRenderScreenPointArray3(c.sv3d.get());p.projectToRenderScreen(e.origin,f);const g=new v(null,this._forEachLayer),_=this._view.slicePlane,R=t.isSome(_)?y.sliceFilterPredicate(_):null,I=d.newIntersector(this.viewingMode);I.options.store=h.StoreResults.MIN,I.options.verticalOffset=m;const x=e.origin,P=i.add(c.sv3d.get(),x,e.direction);I.reset(x,P,p),I.point=f;const b=t.isSome(o)?"type"in o&&"graphics"===o.type?e=>e.metadata.layerUid!==o.uid:e=>e.metadata.graphicUid!==o.uid:null;switch(a){case"relative-to-scene":{const e=e=>(t.isNone(b)||b(e))&&e.metadata&&e.metadata.isElevationSource;I.intersect(g.layers,f,this._tolerance,null,e),this._externalIntersectionHandlers.forAll((e=>{if(e.type===h.IntersectorType.I3S||e.type===h.IntersectorType.TERRAIN){const t=e.slicePlaneEnabled?R:null;e.intersect(I,t,I.rayBegin,I.rayEnd,f)}}))}break;case"on-the-ground":case"relative-to-ground":this._externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlaneEnabled?R:null;e.intersect(I,t,I.rayBegin,I.rayEnd,f)}}))}if(I.results.min.getIntersectionPoint(w)){const e=this._view.computeMapPointFromVec3d(w);return e.z=s,e}return null},s.computeIntersection=function(e,n,s){if(t.isNone(e))return;const o=this._view.state.camera,a=r.castRenderScreenPointArray3(c.sv3d.get());o.projectToRenderScreen(e.origin,a);const l=new v(s,this._forEachLayer);n.options.selectOpaqueTerrainOnly=!s||!("include"in s||"exclude"in s);const u=e.origin,d=i.add(c.sv3d.get(),e.origin,e.direction);n.reset(u,d,o),n.intersect(l.layers,a,this._tolerance);const h=this._view.slicePlane,m=t.isSome(h)?y.sliceFilterPredicate(h):null;n.intersect(l.sliceableLayers,a,this._tolerance,m);const p=s&&(s.requiresGroundFeedback||s.enableDraped);this._externalIntersectionHandlers.forAll((e=>{if(n.options.isFiltered=!l.filterLayerUid(e.layerUid),e.isGround&&p||!n.options.isFiltered){const t=e.slicePlaneEnabled?m:null;e.intersect(n,t,u,d,a)}}));const f=c.sv3d.get(),g=this._view.basemapTerrain;if(s&&s.enableDraped&&t.isSome(g.spatialReference)&&n.results.ground.getIntersectionPoint(f)){const e=g.overlayManager.renderer,r=this._view.renderCoordsHelper.spatialReference,i=c.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(f,i,g.spatialReference),i[2]=t.unwrapOr(this._view.elevationProvider.getElevation(f[0],f[1],f[2],r,"ground"),0),e.intersect(n,i,n.results.ground,(e=>l.filterRenderGeometry(e)))}n.sortResults(),this._processHUDResults(n)},s._processHUDResults=function(e){const n=e.results.hud;o.copy(this._tmpRegion,o.NEGATIVE_INFINITY);const r=this._view.state.camera,i=[],s=this._tmpRegion,a=e=>{const t=new _(e);r.projectToRenderScreen(e.target.center,t.screenPoint),t.screenPoint[0]=Math.floor(t.screenPoint[0]),t.screenPoint[1]=Math.floor(t.screenPoint[1]),i.push(t),o.expandPointInPlace(s,t.screenPoint)};e.sortResults(n.all),t.isSome(n.min.dist)&&a(n.min);for(const t of n.all)n.min.target.object!==t.target.object&&n.max.target.object!==t.target.object&&a(t);if(t.isSome(n.max.dist)&&n.max.target.object!==n.min.target.object&&a(n.max),!i.length)return;s[0]===s[2]&&(s[2]+=1),s[1]===s[3]&&(s[3]+=1);const c=r.fullWidth,l=r.fullHeight,u=Math.max(0,s[0]-p),d=Math.max(0,s[1]-p),y=Math.min(o.width(s)+2*p,c-u),m=Math.min(o.height(s)+2*p,l-d),g=new Uint8Array(y*m*4);this._view._stage.renderView.readHUDVisibility(u,d,y,m,g);let R=!0;const v=t.isNone(e.results.max.dist);let I=0;for(const t of i)for(const n of f){if(g[4*(Math.min(t.screenPoint[0]+n[0],c)-s[0]+(Math.min(t.screenPoint[1]+n[1],l)-s[1])*y)]){R&&(e.results.min.copy(t.result),R=!1),v&&e.results.max.copy(t.result),e.options.store===h.StoreResults.ALL&&e.results.all.splice(I++,0,t.result);break}}},e}();const p=1,f=(()=>{const e=[],t=p;for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++)e.push([r+t,n+t]);return e})();let g,_=function(e){this.result=e,this.screenPoint=r.createRenderScreenPointArray3()};function R(e){return g&&g.viewingMode===e||(g=d.newIntersector(e)),g}let v=function(){function e(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=e?.include,this.exclude=e?.exclude,t((e=>{e.isPickable&&this.filterLayerUid(e.apiLayerUid)&&(e.isSliceable?this.sliceableLayers:this.layers).push(e)}))}var n=e.prototype;return n.filterLayerUid=function(e){const{include:n,exclude:r}=this;return t.isNone(e)?null==n&&null==r:(null==n||n.has(e))&&(null==r||!r.has(e))},n.filterRenderGeometry=function(e){return this.filterLayerUid(e.layerUid)},e}();function I(e){return"object"==typeof e&&"intersect"in e}const w=s.create(),x=r.createRenderScreenPointArray3();e.SceneIntersectionHelper=m,e.isIntersectionHandler=I,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
