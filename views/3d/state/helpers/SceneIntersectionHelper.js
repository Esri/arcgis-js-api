/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","../../../../core/PooledArray","../../../../core/screenUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../ViewingMode","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtils"],(function(e,t,n,r,i,s,o,c,a,l,d,u,h){"use strict";let y,p=function(){function e(e,t,r){this.viewingMode=e,this._forEachLayer=t,this.view=r,this.externalIntersectionHandlers=new n,this.tolerance=d.DEFAULT_TOLERANCE,this.tmpRay=o.create(),this.validateHUDIntersector=d.newIntersector(this.viewingMode),this.validateHUDIntersector.options.hud=!1}var s=e.prototype;return s.intersectScreen=function(e,t){return this.intersectRay(this._getPickRay(e,this.tmpRay),m(this.viewingMode),t)},s.intersectScreenFreePointFallback=function(e,t){return this.intersectRayFreePointFallback(this._getPickRay(e,this.tmpRay),t)},s.intersectRayFreePointFallback=function(e,t){return this.intersectRay(e,m(this.viewingMode),t)||this._intersectRayFreePointLocal(e,t)},s.intersectRay=function(e,t,n,r){return t.options.selectionMode=!1,t.options.store=u.StoreResults.MIN,this.computeIntersection(e,t,r),!!t.results.min&&t.results.min.getIntersectionPoint(n)},s.getCenterRayWithSubpixelOffset=function(e,t,n=.5,r=.5){return e.getRenderCenter(R,n,r),R[0]+=.0466,R[1]-=.0123,l.fromRenderAtEye(e,R,t)},s.intersectIntersectorScreen=function(e,t,n){this.computeIntersection(this._getPickRay(e,this.tmpRay),t,n)},s.intersectToolIntersectorScreen=function(e,t,n){const r=this._getPickRay(e,this.tmpRay);this.intersectToolIntersectorRay(r,t,n)},s.intersectToolIntersectorRay=function(e,t,n){t.options.selectionMode=!0,this.computeIntersection(e,t,n);const r=t.results.min;!!this.view.basemapTerrain&&this.view.basemapTerrain.opaque||h.isValidIntersectorResult(r)&&r.intersector!==u.IntersectorType.TERRAIN||(t.options.selectionMode=!1,this.computeIntersection(e,t,n))},s.setTolerance=function(e=d.DEFAULT_TOLERANCE){this.tolerance=e},s.addIntersectionHandler=function(e){this.externalIntersectionHandlers.push(e),this.externalIntersectionHandlers.sort(((e,t)=>e.type===u.IntersectorType.TERRAIN?1:t.type===u.IntersectorType.TERRAIN?-1:0))},s.removeIntersectionHandler=function(e){this.externalIntersectionHandlers.removeUnordered(e),this.externalIntersectionHandlers.sort(((e,t)=>e.type===u.IntersectorType.TERRAIN?1:t.type===u.IntersectorType.TERRAIN?-1:0))},s._getPickRay=function(e,t){const n=this.view.state.camera;return l.fromScreen(n,e,t)},s._intersectRayFreePointLocal=function(e,n){if(this.viewingMode!==a.ViewingMode.Local||t.isNone(e))return!1;const r=this.view.renderDataExtent;if(t.isNone(r))return i.add(n,e.origin,i.normalize(c.sv3d.get(),e.direction)),!0;const s={x:r.xmax-r.xmin,y:r.ymax-r.ymin,z:8*Math.max(r.xmax-r.xmin,r.ymax-r.ymin)},o=Math.max(s.x,s.y,s.z);if(0===o)return i.add(n,e.origin,i.normalize(c.sv3d.get(),e.direction)),!0;const l=this.view.state.camera,d=Math.max(0,r.xmin-l.eye[0],l.eye[0]-r.xmax),u=Math.max(0,r.ymin-l.eye[1],l.eye[1]-r.ymax),h=Math.sqrt(d*d+u*u),y=Math.abs(l.relativeElevation)+Number.MIN_VALUE,p=Math.max(0,Math.log(o/y))**2;let m=o/Math.max(1,p);m=Math.max(m,Math.min(h,o));const f=i.scale(c.sv3d.get(),e.direction,m/i.length(e.direction));return i.add(n,e.origin,f),!0},s.intersectElevationFromScreen=function(e,t,n=0,r=null){return this._intersectElevation(this._getPickRay(e,this.tmpRay),t,n,r)},s._intersectElevation=function(e,n,s=0,o=null){if(t.isNone(e))return null;const a=t.isSome(n)?n.mode:"absolute-height",l=t.isSome(n)?t.unwrapOr(n.offset,0):0,y="on-the-ground"!==a?l+s:0,p=y/this.view.renderCoordsHelper.unitInMeters;if("absolute-height"===a){if(this.view.renderCoordsHelper.intersectInfiniteManifold(e,y,g)){const e=this.view.computeMapPointFromVec3d(g);return e.z-=l,e}return null}const m=this.view.state.camera,v=r.castRenderScreenPointArray3(c.sv3d.get());m.projectToRenderScreen(e.origin,v);const R=new f(null,this._forEachLayer),I=this.view.slicePlane,w=t.isSome(I)?h.sliceFilterPredicate(I):null,x=d.newIntersector(this.viewingMode);x.options.store=u.StoreResults.MIN,x.options.verticalOffset=p;const b=e.origin,M=i.add(c.sv3d.get(),b,e.direction);x.reset(b,M,m),x.point=v;const P=t.isSome(o)?"type"in o&&"graphics"===o.type?e=>e.metadata.layerUid!==o.uid:e=>e.metadata.graphicUid!==o.uid:null;switch(a){case"relative-to-scene":{const e=e=>(t.isNone(P)||P(e))&&e.metadata&&e.metadata.isElevationSource;x.intersect(R.layers,v,this.tolerance,null,e),this.externalIntersectionHandlers.forAll((e=>{if(e.type===u.IntersectorType.I3S||e.type===u.IntersectorType.TERRAIN){const t=e.slicePlaneEnabled?w:null;e.intersect(x,t,x.rayBegin,x.rayEnd,v)}}))}break;case"on-the-ground":case"relative-to-ground":this.externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlaneEnabled?w:null;e.intersect(x,t,x.rayBegin,x.rayEnd,v)}}))}if(x.results.min.getIntersectionPoint(g)){const e=this.view.computeMapPointFromVec3d(g);return e.z=s,e}return null},s.computeIntersection=function(e,n,s){if(t.isNone(e))return;const o=this.view.state.camera,a=r.castRenderScreenPointArray3(c.sv3d.get());o.projectToRenderScreen(e.origin,a);const l=new f(s,this._forEachLayer);n.options.selectOpaqueTerrainOnly=!s||!("include"in s||"exclude"in s);const d=e.origin,u=i.add(c.sv3d.get(),e.origin,e.direction);n.reset(d,u,o),n.intersect(l.layers,a,this.tolerance);const y=this.view.slicePlane,p=t.isSome(y)?h.sliceFilterPredicate(y):null;n.intersect(l.sliceableLayers,a,this.tolerance,p);const m=s&&(s.requiresGroundFeedback||s.enableDraped);this.externalIntersectionHandlers.forAll((e=>{if(n.options.isFiltered=!l.filterLayerUid(e.layerUid),e.isGround&&m||!n.options.isFiltered){const t=e.slicePlaneEnabled?p:null;e.intersect(n,t,d,u,a)}}));const v=c.sv3d.get();if(s&&s.enableDraped&&n.results.ground.getIntersectionPoint(v)){const e=this.view.basemapTerrain.overlayManager.renderer,r=this.view.renderCoordsHelper.spatialReference,i=c.sv3d.get();this.view.renderCoordsHelper.fromRenderCoords(v,i,this.view.spatialReference),i[2]=t.unwrapOr(this.view.elevationProvider.getElevation(v[0],v[1],v[2],r,"ground"),0),e.intersect(n,i,n.results.ground,(e=>l.filterRenderGeometry(e)))}n.sortResults();const g=n.results.hud;if(h.isHudIntersectorResult(g)){const e=r.castRenderScreenPointArray3(c.sv3d.get()),t=c.sv3d.get(),s=c.sv3d.get();this._unprojectHUDResultRay(g.target.center,e,t,s);const a=i.distance(g.target.center,t)/i.distance(t,s)*.99;this.validateHUDIntersector.reset(t,s,o),this.validateHUDIntersector.intersect(l.layers,e,this.tolerance),this.validateHUDIntersector.intersect(l.sliceableLayers,e,this.tolerance,p),this.externalIntersectionHandlers.forAll((n=>{if(!l.filterLayerUid(n.layerUid))return;const r=n.slicePlaneEnabled?p:null;n.intersect(this.validateHUDIntersector,r,t,s,e)}));const d=this.validateHUDIntersector.results.min;(null==d.dist||a<=d.dist)&&(n.results.min.copy(g),n.results.all.splice(0,0,g))}},s._unprojectHUDResultRay=function(e,t,n,i){const s=this.view.state.camera;s.projectToRenderScreen(e,t);const o=r.castRenderScreenPointArray3(c.sv3d.get());o[0]=t[0],o[1]=t[1],o[2]=0,s.unprojectFromRenderScreen(o,n),o[2]=1,s.unprojectFromRenderScreen(o,i)},e}();function m(e){return y&&y.viewingMode===e||(y=d.newIntersector(e)),y}let f=function(){function e(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=null==e?void 0:e.include,this.exclude=null==e?void 0:e.exclude,t((e=>{e.isPickable&&this.filterLayerUid(e.apiLayerUid)&&(e.isSliceable?this.sliceableLayers:this.layers).push(e)}))}var n=e.prototype;return n.filterLayerUid=function(e){const{include:n,exclude:r}=this;return t.isNone(e)?null==n&&null==r:(null==n||n.has(e))&&(null==r||!r.has(e))},n.filterRenderGeometry=function(e){return this.filterLayerUid(e.layerUid)},e}();function v(e){return"object"==typeof e&&"intersect"in e}const g=s.create(),R=r.createRenderScreenPointArray3();e.SceneIntersectionHelper=p,e.isIntersectionHandler=v,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
