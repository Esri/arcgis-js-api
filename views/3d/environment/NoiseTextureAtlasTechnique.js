/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/NoiseTextureAtlas.glsl","../webgl-engine/core/shaderTechnique/ReloadableShaderModule","../webgl-engine/core/shaderTechnique/ShaderTechnique","../webgl-engine/lib/DefaultVertexAttributeLocations","../webgl-engine/lib/Program","../../webgl/enums","../../webgl/renderState"],(function(e,r,n,t,i,l,a,o,u,s){"use strict";let d=function(e){function r(r){var n;return n=e.call(this,r,null,(()=>n.destroy()))||this}n._inheritsLoose(r,e);var t=r.prototype;return t.initializeProgram=function(e){const n=r.shader.get().build();return new o.Program(e.rctx,n,a.Default3D)},t.initializePipeline=function(){return s.makePipelineState({blending:s.simpleBlendingParams(u.BlendFactor.ONE,u.BlendFactor.ZERO),depthTest:{func:u.CompareFunction.LEQUAL},colorWrite:s.defaultColorWriteParams})},r}(l.ShaderTechnique);d.shader=new i.ReloadableShaderModule(t.NoiseTextureAtlasShader,(()=>new Promise(((r,n)=>e(["./NoiseTextureAtlas.glsl"],r,n))))),r.NoiseTextureAtlasTechnique=d,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
