// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../core/Accessor","../../../core/compilerUtils","../../../core/Handles","../../../core/watchUtils","../../../core/accessorSupport/decorators","./PanoramicAtmosphere","./RealisticAtmosphere","./SimpleAtmosphere","./Stars"],(function(e,t,s,i,r,n,o,p,h,a,d,_){"use strict";var l=[14,15];return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._handles=new n,t._initContext=null,t._pendingAtmosphere=null,t._atmosphere=null,t._stars=null,t}return s.__extends(t,e),Object.defineProperty(t.prototype,"canRender",{get:function(){return!(!this.view.basemapTerrain||!this.view.basemapTerrain.renderer.canRender)||"global"!==this.view.viewingMode},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"updating",{get:function(){return null!=this._pendingAtmosphere},enumerable:!1,configurable:!0}),t.prototype.initialize=function(){this.view._stage.addRenderPlugin(l,this)},t.prototype.destroy=function(){this._pendingAtmosphere&&(this._pendingAtmosphere.destroy(),this._pendingAtmosphere=null),this._atmosphere&&(this._atmosphere.destroy(),this._atmosphere=null),this._stars&&(this._stars.destroy(),this._stars=null),this._handles&&this._handles.removeAll(),this.view&&(this.view._stage.removeRenderPlugin(this),this._set("view",null))},t.prototype.initializeRenderContext=function(e){this._initContext=e,this._techniqueRepository=this._initContext.shaderTechniqueRep,this.setup()},t.prototype.setup=function(){var e=this;this._handles.add(o.when(this.view,"basemapTerrain",(function(){return e._updateBasemapTerrain()}),!0)),this._handles.add([o.init(this.view,["viewingMode","environment.atmosphereEnabled","environment.atmosphere.quality"],(function(){return e._updateAtmosphere()}),!0),o.init(this.view,"environment.starsEnabled",(function(){return e._updateStars()}),!0)])},t.prototype.uninitializeRenderContext=function(){this._stars&&(this._stars.uninitializeRenderContext(),this._stars.destroy(),this._stars=null),this._atmosphere&&(this._atmosphere.uninitializeRenderContext(),this._atmosphere.destroy(),this._atmosphere=null)},t.prototype.render=function(e){var t=!0;return this._stars&&this._stars.canRender&&(t=this._stars.render(e)&&t),this._atmosphere&&this._atmosphere.canRender&&(t=this._atmosphere.render(e)&&t),t},t.prototype._setNeedsRender=function(){this._initContext&&this._initContext.requestRender()},t.prototype._updateStars=function(){var e=this.view.get("environment.starsEnabled")||!1;e&&!this._stars?(this._stars=new _(this.view),this._stars.initializeRenderContext(this._initContext),this._setNeedsRender()):!e&&this._stars&&(this._stars.destroy(),this._stars=null,this._setNeedsRender())},t.prototype._updateAtmosphere=function(){var e=this,t=this._getAtmosphereType();if(this.atmosphereType!==t){this.atmosphereType=t,this._pendingAtmosphere&&(this._pendingAtmosphere!==this._atmosphere&&this._pendingAtmosphere.destroy(),this._pendingAtmosphere=null);var s=this._getAtmosphereClass();if(!s)return this._atmosphere&&(this._atmosphere.destroy(),this._atmosphere=null,this._setNeedsRender()),void this._updateBasemapTerrain();var i=new s(this.view,this._techniqueRepository);i.initializeRenderContext(this._initContext),null==this._atmosphere&&(this._atmosphere=i,this._setNeedsRender()),this._pendingAtmosphere=i,i.when().then((function(){e._pendingAtmosphere!==e._atmosphere&&(e._atmosphere.destroy(),e._atmosphere=e._pendingAtmosphere),e._pendingAtmosphere=null,e._setNeedsRender(),e._updateBasemapTerrain()})).catch((function(){e._pendingAtmosphere===i&&(e._pendingAtmosphere=null)}))}},t.prototype._getAtmosphereClass=function(){var e=this._getAtmosphereType();if(this.atmosphereClassFromType)return this.atmosphereClassFromType(e);switch(e){case"none":return null;case"realistic":return a.RealisticAtmosphere;case"panoramic":return h;case"simple":return d;default:return void r.neverReached(e)}},t.prototype._getAtmosphereType=function(){var e=this.view.get("environment.atmosphereEnabled"),t=this.view.get("environment.atmosphere.quality"),s=this.view.viewingMode;return e&&null!=t?"local"===s?"panoramic":"high"===t&&a.RealisticAtmosphere.isSupported(this._initContext)?"realistic":"simple":"none"},t.prototype._updateBasemapTerrain=function(){var e=this.view.basemapTerrain;e&&(e.velvetOverground=null!=this._atmosphere&&"simple"===this.atmosphereType)},Object.defineProperty(t.prototype,"test",{get:function(){return{atmosphere:this._atmosphere}},enumerable:!1,configurable:!0}),s.__decorate([p.property({constructOnly:!0})],t.prototype,"view",void 0),s.__decorate([p.property({constructOnly:!0})],t.prototype,"atmosphereClassFromType",void 0),s.__decorate([p.property({dependsOn:["_pendingAtmosphere"]})],t.prototype,"updating",null),s.__decorate([p.property()],t.prototype,"_pendingAtmosphere",void 0),t=s.__decorate([p.subclass("esri.views.3d.environment.EnvironmentRenderer")],t)}(i)}));