/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{smoothstep as o}from"../../../core/mathUtils.js";import{releaseMaybe as r,disposeMaybe as s,isNone as i}from"../../../core/maybe.js";import{property as h}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{s as n,g as c,n as g,e as m,h as u,l as p}from"../../../chunks/vec3.js";import{c as _}from"../../../chunks/vec3f32.js";import{getReferenceEllipsoid as f}from"../../../geometry/projectionEllipsoid.js";import{atmosphereHeight as d}from"./atmosphereUtils.js";import{FogTechniqueConfiguration as l,FogTechnique as T}from"./FogTechnique.js";import{weatherHeightLimit as F}from"./weather.js";import{NoParameters as y}from"../webgl-engine/core/shaderModules/interfaces.js";import{Pos2Tex as b}from"../webgl-engine/lib/DefaultVertexBufferLayouts.js";import{createQuadVAO as q}from"../webgl-engine/lib/glUtil3D.js";import{PrimitiveType as j}from"../../webgl/enums.js";let v=class extends t{constructor(e){super(e),this._fogColor=_(),this._fogColorAtNight=_(),this._cameraDirection=_(),this._foggyFadeStart=.95,this._foggyFadeEnd=1,this._hazeFadeStart=.7,this._hazeFadeEnd=1,this._strength=4e-6;const t=e.context.renderContext.rctx;this._vao=q(t,b);const o=f(e.view.spatialReference);this._planetRadius=o.radius,this._atmosphereRadius=o.radius+d}destroy(){this._hazeFogTechnique=r(this._hazeFogTechnique),this._thickFogTechnique=r(this._thickFogTechnique),this._vao=s(this._vao)}get _shaderTechniqueRepository(){return this.context.shaderTechniqueRepository}set strength(e){this._strength=e}get strength(){return this._strength}get thickFogTechnique(){if(i(this._thickFogTechnique)){const e=new l;e.haze=!1,this._thickFogTechnique=this._shaderTechniqueRepository.acquire(T,e)}return this._thickFogTechnique}get hazeFogTechnique(){if(i(this._hazeFogTechnique)){const e=new l;e.haze=!0,this._hazeFogTechnique=this._shaderTechniqueRepository.acquire(T,e)}return this._hazeFogTechnique}when(){return Promise.resolve()}render(e,t,o){if(0===this.view.basemapTerrain.baseOpacity&&!t)return;if(this._update(e,t,o),this._fogAmount<=0)return;const r=t?this.thickFogTechnique:this.hazeFogTechnique;if(!r.compiled)return void this.context.requestRender();const s=e.offscreenRenderingHelper,i=e.rctx.bindTechnique(r,x,e.bindParameters);s.renderDepthDetached((()=>{i.bindTexture("depthTex",s.depthTexture),this._renderFog(r.program,e)}))}_renderFog(e,t){if(i(this._vao))return!1;const o=t.rctx,r=t.bindParameters.camera;return e.setUniform3fv("cameraPosition",r.eye),e.setUniform1f("atmosphereC",this._atmosphereC),e.setUniform1f("fogStrength",this._strength),e.setUniform1f("fogAmount",this._fogAmount),e.setUniform3fv("fogColor",this._fogColor),o.bindVAO(this._vao),e.assertCompatibleVertexAttributeLocations(this._vao),o.drawArrays(j.TRIANGLE_STRIP,0,4),!0}_update(e,t,r){const s=e.bindParameters.camera,i=t?.1:0;r?n(this._fogColor,.5,.5,.5):t?n(this._fogColor,1.5,1.5,1.5):n(this._fogColor,.24,.44,.8),c(this._fogColorAtNight,this._fogColor,i),g(this._cameraDirection,s.eye);const h=Math.max(0,m(this._cameraDirection,e.bindParameters.lighting.lightingMainDirection));u(this._fogColor,this._fogColorAtNight,this._fogColor,h);const a=p(s.eye),_=a*a;this._atmosphereC=_-this._atmosphereRadius*this._atmosphereRadius,this._fogAmount=t?1-o(this._foggyFadeStart*F,this._foggyFadeEnd*F,Math.abs(a-this._planetRadius)):1-o(this._hazeFadeStart*F,this._hazeFadeEnd*F,Math.abs(a-this._planetRadius))}static isSupported(e){return e.capabilities.depthTexture}};e([h({constructOnly:!0})],v.prototype,"context",void 0),e([h({constructOnly:!0})],v.prototype,"view",void 0),v=e([a("esri.views.3d.environment.Fog")],v);const x=new y;export{v as Fog};
