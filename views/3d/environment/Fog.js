/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/mathUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/ellipsoidUtils","./atmosphereUtils","../../../chunks/FogHaze.glsl","./FogTechnique","./weather","../webgl-engine/lib/DefaultVertexBufferLayouts","../webgl-engine/lib/glUtil3D","../../webgl/enums"],(function(e,t,r,s,o,a,i,n,c,h,u,p,l,g,d,m,_,f,y){"use strict";const P=.95,b=1;e.Fog=function(e){function r(t){var r;(r=e.call(this,t)||this)._passParameters=new g.FogHazePassParameters;const s=t.context.renderContext.rctx;r._vao=f.createQuadVAO(s,_.Pos2Tex),r._technique=t.context.techniqueRepository.acquire(d.FogTechnique,new d.FogHazeTechniqueConfiguration);const o=p.getReferenceEllipsoid(t.view.spatialReference);return r._planetRadius=o.radius,r._atmosphereRadius=o.radius+l.atmosphereHeight,r}t._inheritsLoose(r,e);var s=r.prototype;return s.destroy=function(){this._technique.release(),this._vao.dispose()},s.render=function(e,t){if(this._update(e,t),this._passParameters.fogAmount<=0)return;const r=this._technique;if(!r.compiled)return void this.context.requestRender();const s=e.offscreenRenderingHelper;s.renderDepthDetached((()=>{this._passParameters.depthTexture=s.depthTexture;const t=e.rctx.bindTechnique(r,this._passParameters,e.bindParameters);this._renderFog(t,e)}))},s._renderFog=function(e,t){const r=t.rctx;r.bindVAO(this._vao),e.assertCompatibleVertexAttributeLocations(this._vao),r.drawArrays(y.PrimitiveType.TRIANGLE_STRIP,0,4)},s._update=function(e,t){const r=e.bindParameters.camera;h.normalize(x,r.eye);const s=Math.max(0,h.dot(x,e.bindParameters.lighting.mainLight.direction)),a=t.color,i=.1;h.scale(F,a,i),h.lerp(this._passParameters.fogColor,F,a,s);const n=h.length(r.eye),c=n*n;this._passParameters.atmosphereC=c-this._atmosphereRadius*this._atmosphereRadius,this._passParameters.fogAmount=(1-o.smoothstep(P*m.weatherHeightLimit,b*m.weatherHeightLimit,Math.abs(n-this._planetRadius)))*t.amount,this._passParameters.fogStrength=t.strength},r.isSupported=function(e){return e.capabilities.depthTexture},t._createClass(r,[{key:"strength",get:function(){return this._passParameters.fogStrength},set:function(e){this._passParameters.fogStrength=e}}]),r}(s),r.__decorate([a.property({constructOnly:!0})],e.Fog.prototype,"context",void 0),r.__decorate([a.property({constructOnly:!0})],e.Fog.prototype,"view",void 0),e.Fog=r.__decorate([c.subclass("esri.views.3d.environment.Fog")],e.Fog);let v=function(){this.color=u.create(),this.strength=0,this.amount=0};const x=u.create(),F=u.create();e.FogParameters=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
