/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../core/Handles","../../../core/mathUtils","../../../core/maybe","../../../core/watchUtils","../../../chunks/mat4","../../../chunks/mat4f64","../../../chunks/vec2","../../../chunks/vec2f64","../../../chunks/vec3","../../../chunks/vec3f64","../../../chunks/vec4f64","../../../geometry/support/Ellipsoid","./atmosphereUtils","./ChapmanAtmosphereTechnique","../webgl-engine/lib/DefaultVertexBufferLayouts","../webgl-engine/lib/glUtil3D","../../webgl/enums"],(function(e,t,i,a,s,r,n,h,o,u,c,d,_,l,m,p,f,v){"use strict";let g=function(){function e(e){this._view=e,this.type="realistic",this.canRender=!0,this._cameraPosition=c.create(),this._projectionInverse=n.create(),this._viewInverse=n.create(),this._heightParameters=d.create(),this._betasRayleigh=c.create(),this._betasCombined=c.create(),this._scaleHeight=0,this._radii=o.create(),this._nearFar=o.create(),this._cameraHeight=0,this._cameraHeightSq=0,this._cAtmosphere=0,this._innerFadeDistance=0,this._altitudeFade=0,this._lowerElevationBoundRadius=0,this._lowerBoundEarthRadius=_.earth.radius,this._hazeStrength=1,this._darkenHaze=!1,this._updateRadius(_.earth.radius)}var g=e.prototype;return g.destroy=function(){this._atmosphereTechnique=a.releaseMaybe(this._atmosphereTechnique),this._atmosphereHazeTechnique=a.releaseMaybe(this._atmosphereHazeTechnique),this._vao=a.disposeMaybe(this._vao),this._handles=a.destroyMaybe(this._handles)},g.when=function(){return Promise.resolve()},g.initializeRenderContext=function(e){const i=e.renderContext.rctx;this._handles=new t,a.isSome(this._view.basemapTerrain.rootTiles)&&this._updateElevation({spatialReference:this._view.basemapTerrain.spatialReference,tile:this._view.basemapTerrain.rootTiles[0],extent:this._view.basemapTerrain.rootTiles[0].extent,context:"ground"}),this._handles.add(s.on(this._view,"basemapTerrain","elevation-change",(e=>this._updateElevation(e)),(()=>this._updateElevation()))),this._handles.add(s.on(this._view,"basemapTerrain","elevation-bounds-change",(()=>this._updateVisibleElevationBounds())));const r=new m.ChapmanAtmosphereTechniqueConfiguration;r.haze=!1,this._atmosphereTechnique=e.shaderTechniqueRepository.acquire(m.ChapmanAtmosphereTechnique,r),r.haze=!0,this._atmosphereHazeTechnique=e.shaderTechniqueRepository.acquire(m.ChapmanAtmosphereTechnique,r),this._vao=f.createQuadVAO(i,p.Pos2Tex),this._scaleHeight=l.rayLeighScaleHeight*l.atmosphereHeight,u.set(this._betasRayleigh,l.betaRayleigh[0],l.betaRayleigh[1],l.betaRayleigh[2]),u.set(this._betasCombined,l.betaRayleigh[0]+l.betaOzone[0],l.betaRayleigh[1]+l.betaOzone[1],l.betaRayleigh[2]+l.betaOzone[2])},g.render=function(e){this._render(e,this._atmosphereTechnique,e.offscreenRenderingHelper.depthTexture)},g.renderHaze=function(e,t){this._darkenHaze=t,this._render(e,this._atmosphereHazeTechnique,e.offscreenRenderingHelper.linearDepthTexture)},g._render=function(e,t,i){this._update(e.camera);const a=e.rctx.useTechnique(t);e.offscreenRenderingHelper.renderDepthDetached((()=>{a.bindTexture(i,"depthTex"),this._renderCommon(t.program,e)}))},g._renderCommon=function(e,t){if(a.isNone(this._vao))return;const i=t.rctx;t.scenelightingData.setLightDirectionUniform(e),e.setUniform4fv("heightParameters",this._heightParameters),e.setUniform3fv("cameraPosition",this._cameraPosition),e.setUniformMatrix4fv("inverseProjectionMatrix",this._projectionInverse),e.setUniformMatrix4fv("inverseViewMatrix",this._viewInverse),e.setUniform2fv("nearFar",this._nearFar),e.setUniform2fv("radii",this._radii),e.setUniform1f("scaleHeight",this._scaleHeight),e.setUniform1f("betaMie",l.betaMie),e.setUniform3fv("betaRayleigh",this._betasRayleigh),e.setUniform3fv("betaCombined",this._betasCombined),e.setUniform1f("innerFadeDistance",this._innerFadeDistance),e.setUniform1f("altitudeFade",this._altitudeFade),e.setUniform1f("hazeStrength",this._hazeStrength),i.bindVAO(this._vao),e.assertCompatibleVertexAttributeLocations(this._vao),i.drawArrays(v.PrimitiveType.TRIANGLE_STRIP,0,4)},g._adjustRadiusForTesselation=function(e){return e*Math.cos(Math.PI/16/16)},g._updateElevation=function(e){const t=e?e.tile:a.unwrapOr(this._view.basemapTerrain.rootTiles,[null])[0];if(a.isNone(t)||0!==t.level)return;const i=this._adjustRadiusForTesselation(_.earth.radius+t.elevationBounds[0]);i!==this._lowerElevationBoundRadius&&(this._lowerElevationBoundRadius=i,this._lowerBoundEarthRadius=-1,this._updateVisibleElevationBounds())},g._updateVisibleElevationBounds=function(){const e=this._adjustRadiusForTesselation(_.earth.radius+this._view.basemapTerrain.elevationBounds.min);(this._lowerBoundEarthRadius<0||e<this._lowerBoundEarthRadius)&&this._updateRadius(e)},g._updateRadius=function(e){this._lowerBoundEarthRadius=e,h.set(this._radii,e,e+l.atmosphereHeight),this._innerFadeDistance=2*Math.sqrt((2*e-l.innerAtmosphereDepth)*l.innerAtmosphereDepth)},g._update=function(e){if(a.isNone(e))return;this._cameraHeight=u.length(e.eye),this._cameraHeightSq=this._cameraHeight*this._cameraHeight,this._cAtmosphere=this._cameraHeightSq-this._radii[1]*this._radii[1];const t=Math.min(1,Math.max(0,(this._cameraHeight-this._radii[0])/l.atmosphereHeight));this._heightParameters=d.fromValues(this._cameraHeight,this._cameraHeightSq,this._cAtmosphere,t),u.copy(this._cameraPosition,e.eye),r.invert(this._projectionInverse,e.projectionMatrix),r.invert(this._viewInverse,e.viewMatrix),h.set(this._nearFar,e.near,e.far),this._altitudeFade=l.computeInnerAltitudeFade(this._cameraHeight-this._lowerBoundEarthRadius),this._hazeStrength=this._darkenHaze?i.lerp(.6,1,i.smoothstep(9500,10500,this._cameraHeight-_.earth.radius)):1},e.isSupported=function(e){return e.renderContext.rctx.capabilities.depthTexture},e}();e.ChapmanAtmosphere=g,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
