/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../core/Handles","../../../core/mathUtils","../../../core/maybe","../../../core/reactiveUtils","../../../chunks/vec2","../../../chunks/vec3","../../../chunks/vec4","../../../geometry/support/Ellipsoid","./AtmosphereType","./atmosphereUtils","./ChapmanAtmosphereTechnique","./ChapmanAtmosphereTechniqueConfiguration","../webgl-engine/lib/DefaultVertexBufferLayouts","../webgl-engine/lib/glUtil3D","../../webgl/enums"],(function(e,t,i,s,a,r,n,o,h,u,d,p,c,l,m,_){"use strict";let T=function(){function e(e,i){this._view=e,this.type=u.AtmosphereType.Realistic,this._handles=new t,this._passParameters=new p.ChapmanAtmospherePassParameters,this._rootTileElevationMin=NaN,this._lowerBoundEarthRadius=h.earth.radius,this._fadeHaze=0,this._updateRadius(h.earth.radius);const s=i.renderContext.rctx;this._updateRootTileElevationBounds(),this._handles.add([a.watch((()=>this._view.basemapTerrain.rootTileElevationBounds),(()=>this._updateRootTileElevationBounds())),a.watch((()=>this._view.basemapTerrain.visibleElevationBounds),(()=>this._updateVisibleElevationBounds()))]);const r=new c.ChapmanAtmosphereTechniqueConfiguration;r.haze=!1,this._atmosphereTechnique=i.techniqueRepository.acquire(p.ChapmanAtmosphereTechnique,r),r.haze=!0,this._atmosphereHazeTechnique=i.techniqueRepository.acquire(p.ChapmanAtmosphereTechnique,r),this._vao=m.createQuadVAO(s,l.Pos2Tex)}var T=e.prototype;return T.destroy=function(){this._atmosphereTechnique.release(),this._atmosphereHazeTechnique.release(),this._vao.dispose(),this._handles.destroy()},T.render=function(e){this._render(e,this._atmosphereTechnique,e.offscreenRenderingHelper.depthTexture)},T.renderHaze=function(e,t){this._fadeHaze=t,this._render(e,this._atmosphereHazeTechnique,e.offscreenRenderingHelper.linearDepthTexture)},T._render=function(e,t,i){if(s.isNone(i))return;this._update(e.bindParameters.camera),this._passParameters.depthTex=i;const a=e.rctx.bindTechnique(t,this._passParameters,e.bindParameters);e.offscreenRenderingHelper.renderDepthDetached((()=>this._renderCommon(a,e)))},T._renderCommon=function(e,t){s.isNone(this._vao)||(t.rctx.bindVAO(this._vao),e.assertCompatibleVertexAttributeLocations(this._vao),t.rctx.drawArrays(_.PrimitiveType.TRIANGLE_STRIP,0,4))},T._adjustRadiusForTesselation=function(e){return e*Math.cos(Math.PI/16/16)},T._updateRootTileElevationBounds=function(){const e=this._view.basemapTerrain.rootTileElevationBounds.min;e!==this._rootTileElevationMin&&(this._rootTileElevationMin=e,this._lowerBoundEarthRadius=h.earth.radius,this._updateVisibleElevationBounds())},T._updateVisibleElevationBounds=function(){const e=this._adjustRadiusForTesselation(h.earth.radius+this._view.basemapTerrain.visibleElevationBounds.min);e<this._lowerBoundEarthRadius&&this._updateRadius(e)},T._updateRadius=function(e){this._lowerBoundEarthRadius=e,r.set(this._passParameters.radii,e,e+d.atmosphereHeight),this._passParameters.innerFadeDistance=2*Math.sqrt((2*e-d.innerAtmosphereDepth)*d.innerAtmosphereDepth)},T._update=function(e){if(s.isNone(e))return;const t=n.squaredLength(e.eye),a=Math.sqrt(t),r=t-this._passParameters.radii[1]*this._passParameters.radii[1],u=i.clamp((a-this._passParameters.radii[0])/d.atmosphereHeight,0,1);o.set(this._passParameters.heightParameters,a,t,r,u),this._passParameters.altitudeFade=d.computeInnerAltitudeFade(a-this._lowerBoundEarthRadius),this._passParameters.hazeStrength=i.lerp(i.lerp(.6,1,i.smoothstep(9500,10500,a-h.earth.radius)),1,this._fadeHaze)},e.isSupported=function(e){return e.renderContext.rctx.capabilities.depthTexture},e}();e.ChapmanAtmosphere=T,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
