/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../chunks/mat4","../../../chunks/mat4f64","../../../support/requestImageUtils","./SimpleAtmosphereTechnique","./resources/SimpleAtmosphereTexture","../support/buffer/glUtil","../support/buffer/InterleavedLayout","../webgl-engine/core/shaderLibrary/util/View.glsl","../webgl-engine/lib/DefaultVertexAttributeLocations","../webgl-engine/lib/GeometryUtil","../../webgl/BufferObject","../../webgl/Texture","../../webgl/Util","../../webgl/VertexArrayObject"],(function(e,t,r,i,o,n,s,a,l,u,c,h,p,g,m,f,d,y){"use strict";const b=t.getLogger("esri.views.3d.environment.PanoramicAtmosphere");let _=function(){function t(){this.slot=14,this._atmosphereTechniqueConfig=new a.SimpleAtmosphereTechniqueConfiguration,this._readyResolver=i.createResolver(),this._readyController=i.createAbortController()}var o=t.prototype;return o.destroy=function(){this._readyResolver.reject(),this._texture=r.disposeMaybe(this._texture),this._vao=r.disposeMaybe(this._vao),this._readyController=r.abortMaybe(this._readyController)},o.when=function(){return this._readyResolver.promise},o.initializeRenderContext=function(e){this._atmosphereTechniqueConfig.geometry=1,this._atmosphereTechnique=e.shaderTechniqueRep.acquire(a.SimpleAtmosphereTechnique,this._atmosphereTechniqueConfig);const t=e.renderContext.rctx;this._vao=this._createVertexArrayObject(t),this._vaoCount=d.vertexCount(this._vao,"geometry"),s.requestImage(l,{signal:this._readyController.signal}).then((r=>{this._texture=new f(t,{pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0},r),e.requestRender(),this._readyController=null,this._readyResolver.resolve()})).catch((e=>{i.isAbortError(e)||b.error("Unable to initialize atmosphere: image request failed",e),this._readyResolver.reject()}))},o.uninitializeRenderContext=function(){this.destroy()},o.render=function(e){if(e.slot!==this.slot||0!==e.pass)return!1;const t=e.rctx,r=this._atmosphereTechnique.program;return t.useProgram(r),this._atmosphereTechnique.bindPipelineState(t),r.bindTexture(this._texture,"tex"),h.bindProjectionMatrix(r,e.camera.projectionMatrix),x(v,e.camera.viewMatrix),r.setUniformMatrix4fv("view",v),r.setUniform4f("color",1,1,1,1),e.scenelightingData.setLightDirectionUniform(r),t.bindVAO(this._vao),r.assertCompatibleVertexAttributeLocations(this._vao),t.drawArrays(4,0,this._vaoCount),!0},o._createVertexArrayObject=function(e){const t=g.createPolySphereGeometry(1,2,!1),r=t.indices.get("position");for(let s=0;s<r.length;s+=3){const e=r[s];r[s]=r[s+2],r[s+2]=e}const i=t.vertexAttributes.get("position").data,o=w.createBuffer(r.length),n=o.position;for(let s=0;s<r.length;++s){const e=3*r[s];n.set(s,0,i[e]),n.set(s,1,i[e+1]),n.set(s,2,i[e+2])}return new y(e,p.Default3D,{geometry:u.glLayout(w)},{geometry:m.createVertex(e,35044,o.buffer)})},e._createClass(t,[{key:"canRender",get:function(){return null!=this._texture}}]),t}();function x(e,t){o.copy(e,t),e[12]=0,e[13]=0,e[14]=0,e[15]=1}const v=n.create(),w=c.newLayout().vec3f("position");return _}));
