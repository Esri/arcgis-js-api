/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../../../chunks/mat4","../../../chunks/mat4f64","./AtmosphereType","../../../chunks/SimpleAtmosphere.glsl","./SimpleAtmosphereTechnique","./SimpleAtmosphereTechniqueConfiguration","./resources/SimpleAtmosphereTexture","../support/buffer/glUtil","../support/buffer/InterleavedLayout","../webgl-engine/lib/DefaultVertexAttributeLocations","../webgl-engine/lib/GeometryUtil","../webgl-engine/lib/VertexArrayObject","../webgl-engine/lib/VertexAttribute","../../webgl/BufferObject","../../webgl/enums","../../webgl/Texture","../../webgl/Util"],(function(e,t,r,i,s,o,n,a,u,c,p,h,l,m,b,f,g,x,y){"use strict";let A=function(){function e(){this.type=s.AtmosphereType.Panoramic,this._configuration=new a.SimpleAtmosphereTechniqueConfiguration,this._passParameters=new o.SimpleAtmospherePassParameters}var r=e.prototype;return r.destroy=function(){this._passParameters.texture=t.disposeMaybe(this._passParameters.texture),this._vao=t.disposeMaybe(this._vao)},r.initializeRenderContext=function(e){this._configuration.geometry=a.SimpleAtmosphereGeometry.Cylinder,this._technique=e.shaderTechniqueRepository.acquire(n.SimpleAtmosphereTechnique,this._configuration);const t=e.renderContext.rctx;this._vao=this._createVertexArrayObject(t),this._vaoCount=y.vertexCount(this._vao,"geometry"),this._passParameters.texture=new x.Texture(t,{pixelFormat:g.PixelFormat.RGBA,dataType:g.PixelType.UNSIGNED_BYTE,wrapMode:g.TextureWrapMode.CLAMP_TO_EDGE,samplingMode:g.TextureSamplingMode.LINEAR,flipped:!0,width:1,height:512},u.earthAtmosphereTextureSimple),e.requestRender()},r.render=function(e){if(t.isNone(this._vao)||t.isNone(this._passParameters.texture))return;const r=e.rctx,i=r.bindTechnique(this._technique,this._passParameters,e.bindParameters);d(_,e.bindParameters.camera.viewMatrix),i.setUniformMatrix4fv("view",_),r.bindVAO(this._vao),i.assertCompatibleVertexAttributeLocations(this._vao),r.drawArrays(g.PrimitiveType.TRIANGLES,0,this._vaoCount)},r.renderHaze=function(){return!1},r._createVertexArrayObject=function(e){const t=l.createPolySphereGeometry(1,2,!1),r=t.indices.get(b.VertexAttribute.POSITION);for(let n=0;n<r.length;n+=3){const e=r[n];r[n]=r[n+2],r[n+2]=e}const i=t.vertexAttributes.get(b.VertexAttribute.POSITION).data,s=T.createBuffer(r.length),o=s.position;for(let n=0;n<r.length;++n){const e=3*r[n];o.set(n,0,i[e]),o.set(n,1,i[e+1]),o.set(n,2,i[e+2])}return new m.VertexArrayObject(e,h.Default3D,{geometry:c.glLayout(T)},{geometry:f.BufferObject.createVertex(e,g.Usage.STATIC_DRAW,s.buffer)})},e}();function d(e,t){r.copy(e,t),e[12]=0,e[13]=0,e[14]=0,e[15]=1}const _=i.create(),T=p.newLayout().vec3f(b.VertexAttribute.POSITION);e.PanoramicAtmosphere=A,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
