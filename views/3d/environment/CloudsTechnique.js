/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{a as e}from"../../../chunks/Clouds.glsl.js";import{ReloadableShaderModule as r}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{Default3D as o}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as t}from"../webgl-engine/lib/Program.js";import{BlendFactor as n,CompareFunction as s}from"../../webgl/enums.js";import{makePipelineState as l,separateBlendingParams as a,defaultColorWriteParams as m}from"../../webgl/renderState.js";class g extends i{constructor(e,r){super(e,r,(()=>this.destroy()))}initializeProgram(e){const r=g.shader.get().build(this.configuration);return new t(e.rctx,r,o)}initializePipeline(){return l({blending:a(n.ONE,n.ONE,n.ZERO,n.ZERO),depthTest:{func:s.LEQUAL},colorWrite:m})}}g.shader=new r(e,(()=>import("./Clouds.glsl.js")));export{g as CloudsTechnique};
