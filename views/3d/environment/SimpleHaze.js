/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/mathUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/ellipsoidUtils","./atmosphereUtils","../../../chunks/FogHaze.glsl","./FogTechnique","./SimpleHazeTechnique","./weather","../webgl-engine/lib/DefaultVertexBufferLayouts","../webgl-engine/lib/glUtil3D","../../webgl/enums"],(function(e,t,r,s,a,i,n,o,c,h,p,u,l,m,d,_,g,f,z,b){"use strict";const y=.7,P=1;e.SimpleHaze=function(e){function r(t){var r;(r=e.call(this,t)||this)._passParameters=new m.FogHazePassParameters;const s=t.context.renderContext.rctx;r._vao=z.createQuadVAO(s,f.Pos2Tex);const a=u.getReferenceEllipsoid(t.view.spatialReference);r._planetRadius=a.radius,r._atmosphereRadius=a.radius+l.atmosphereHeight;const i=new d.FogHazeTechniqueConfiguration;return i.haze=!0,r._hazeTechnique=t.context.techniqueRepository.acquire(_.SimpleHazeTechnique,i),r}t._inheritsLoose(r,e);var s=r.prototype;return s.destroy=function(){this._hazeTechnique.release(),this._vao.dispose()},s.render=function(e,t){if(0===this.view.basemapTerrain.baseOpacity)return;if(this._update(e,t),this._passParameters.hazeAmount<=0)return;const r=this._hazeTechnique;if(!r.compiled)return void this.context.requestRender();const s=e.offscreenRenderingHelper;s.renderDepthDetached((()=>{this._passParameters.depthTexture=s.depthTexture;const t=e.rctx.bindTechnique(r,this._passParameters,e.bindParameters);this._renderSimpleHaze(t,e)}))},s._renderSimpleHaze=function(e,t){const r=t.rctx;r.bindVAO(this._vao),e.assertCompatibleVertexAttributeLocations(this._vao),r.drawArrays(b.PrimitiveType.TRIANGLE_STRIP,0,4)},s._update=function(e,t){const r=e.bindParameters.camera;h.normalize(v,r.eye);const s=Math.max(0,h.dot(v,e.bindParameters.lighting.mainLight.direction)),i=H,n=0;h.scale(T,i,n),h.lerp(this._passParameters.hazeColor,T,i,s);const o=h.length(r.eye),c=o*o;this._passParameters.atmosphereC=c-this._atmosphereRadius*this._atmosphereRadius,this._passParameters.hazeAmount=(1-a.smoothstep(y*g.weatherHeightLimit,P*g.weatherHeightLimit,Math.abs(o-this._planetRadius)))*t.amount,this._passParameters.fogStrength=t.strength},r.isSupported=function(e){return e.capabilities.depthTexture},t._createClass(r,[{key:"strength",get:function(){return this._passParameters.hazeStrength},set:function(e){this._passParameters.hazeStrength=e}}]),r}(s),r.__decorate([i.property({constructOnly:!0})],e.SimpleHaze.prototype,"context",void 0),r.__decorate([i.property({constructOnly:!0})],e.SimpleHaze.prototype,"view",void 0),e.SimpleHaze=r.__decorate([c.subclass("esri.views.3d.environment.SimpleHaze")],e.SimpleHaze);let S=function(){this.strength=0,this.amount=0};const H=p.fromValues(.24,.44,.8),v=p.create(),T=p.create();e.HazeParameters=S,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
