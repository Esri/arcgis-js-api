/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/mathUtils","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/projectionEllipsoid","./atmosphereUtils","../../../chunks/FogHaze.glsl","./FogTechnique","./SimpleHazeTechnique","./weather","../webgl-engine/lib/DefaultVertexBufferLayouts","../webgl-engine/lib/glUtil3D","../../webgl/enums"],(function(e,t,s,r,a,i,n,o,c,h,u,p,l,d,m,_,g,f,y,z,b){"use strict";const T=.7,v=1;e.SimpleHaze=function(e){function s(t){var s;(s=e.call(this,t)||this)._passParameters=new m.FogHazePassParameters;const r=t.context.renderContext.rctx;s._vao=z.createQuadVAO(r,y.Pos2Tex);const a=l.getReferenceEllipsoid(t.view.spatialReference);return s._planetRadius=a.radius,s._atmosphereRadius=a.radius+d.atmosphereHeight,s}t._inheritsLoose(s,e);var r=s.prototype;return r.destroy=function(){this._hazeTechniqueCached=i.releaseMaybe(this._hazeTechniqueCached),this._vao=i.disposeMaybe(this._vao)},r.render=function(e,t){if(0===this.view.basemapTerrain.baseOpacity)return;if(this._update(e,t),this._passParameters.hazeAmount<=0)return;const s=this._hazeTechnique;if(!s.compiled)return void this.context.requestRender();const r=e.offscreenRenderingHelper;r.renderDepthDetached((()=>{this._passParameters.depthTexture=r.depthTexture;const t=e.rctx.bindTechnique(s,this._passParameters,e.bindParameters);this._renderSimpleHaze(t,e)}))},r._renderSimpleHaze=function(e,t){if(i.isNone(this._vao))return;const s=t.rctx;s.bindVAO(this._vao),e.assertCompatibleVertexAttributeLocations(this._vao),s.drawArrays(b.PrimitiveType.TRIANGLE_STRIP,0,4)},r._update=function(e,t){const s=e.bindParameters.camera;u.normalize(H,s.eye);const r=Math.max(0,u.dot(H,e.bindParameters.lighting.mainLight.direction)),i=S,n=0;u.scale(q,i,n),u.lerp(this._passParameters.hazeColor,q,i,r);const o=u.length(s.eye),c=o*o;this._passParameters.atmosphereC=c-this._atmosphereRadius*this._atmosphereRadius,this._passParameters.hazeAmount=(1-a.smoothstep(T*f.weatherHeightLimit,v*f.weatherHeightLimit,Math.abs(o-this._planetRadius)))*t.amount,this._passParameters.fogStrength=t.strength},s.isSupported=function(e){return e.capabilities.depthTexture},t._createClass(s,[{key:"_shaderTechniqueRepository",get:function(){return this.context.shaderTechniqueRepository}},{key:"strength",get:function(){return this._passParameters.hazeStrength},set:function(e){this._passParameters.hazeStrength=e}},{key:"_hazeTechnique",get:function(){if(i.isNone(this._hazeTechniqueCached)){const e=new _.FogHazeTechniqueConfiguration;e.haze=!0,this._hazeTechniqueCached=this._shaderTechniqueRepository.acquire(g.SimpleHazeTechnique,e)}return this._hazeTechniqueCached}}]),s}(r),s.__decorate([n.property({constructOnly:!0})],e.SimpleHaze.prototype,"context",void 0),s.__decorate([n.property({constructOnly:!0})],e.SimpleHaze.prototype,"view",void 0),e.SimpleHaze=s.__decorate([h.subclass("esri.views.3d.environment.SimpleHaze")],e.SimpleHaze);let P=function(){this.strength=0,this.amount=0};const S=p.fromValues(.24,.44,.8),H=p.create(),q=p.create();e.HazeParameters=P,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
