/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../core/mathUtils","../../../core/maybe","../../../core/reactiveUtils","../../../chunks/mat4","../../../chunks/mat4f64","../../../chunks/vec2","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/ellipsoidUtils","../../../geometry/support/spatialReferenceUtils","./AtmosphereType","./atmosphereUtils","../../../chunks/SimpleAtmosphere.glsl","./SimpleAtmosphereTechnique","./SimpleAtmosphereTechniqueConfiguration","./resources/MarsAtmosphereTexture","./resources/SimpleAtmosphereTexture","../support/mathUtils","../support/buffer/glUtil","../support/buffer/InterleavedLayout","../webgl-engine/lib/DefaultVertexAttributeLocations","../webgl-engine/lib/FloatArray","../webgl-engine/lib/glUtil3D","../webgl-engine/lib/Util","../webgl-engine/lib/VertexArrayObject","../webgl-engine/lib/VertexAttribute","../../webgl/BufferObject","../../webgl/enums","../../webgl/Texture","../../webgl/Util"],(function(e,t,s,i,r,a,n,o,h,c,u,p,l,m,d,_,g,f,A,x,y,b,R,T,P,V,S,w,v,q){"use strict";const F=128,M=-p.innerAtmosphereDepth,C=0,U=50,I=()=>1-511/512,L=f.makePiecewiseLinearFunction([[50,.1015625],[500,.21875],[5e3,1-250/512],[5e4,.4140625]]);let O=function(){function r(e,t){this.view=e,this.type=u.AtmosphereType.Simple,this._passParameters=new l.SimpleAtmospherePassParameters,this._vaoCount=0,this._texV1=1,this._isMars=c.isMars(e.spatialReference);const i=h.getReferenceEllipsoid(e.spatialReference);this._planetRadius=i.radius,this._outerRimWidth=i.outerAtmosphereRimWidth,this._innerRimFactor=(this._planetRadius+M)/this._planetRadius,this._middleRimFactor=(this._planetRadius+C)/this._planetRadius,this._outerRimFactor=(this._planetRadius+this._outerRimWidth)/this._planetRadius,this._texV0=C/this._outerRimWidth,this._texVScale=this._texV1-this._texV0,this._techniqueRepository=t.techniqueRepository;const r=t.renderContext.rctx;this._cameraChangeHandle=s.watch((()=>this.view.state?.camera),(()=>t.requestRender()),s.syncAndInitial),this._vao=this._createRibbon(r),this._vaoCount=q.vertexCount(this._vao,"geometry"),this._fadeVao=R.createQuadVAO(r),this._fadeVaoCount=q.vertexCount(this._fadeVao,"geometry");const a=this._isMars?_.marsAtmosphereTextureSimple:g.earthAtmosphereTextureSimple;this._passParameters.texture=new v.Texture(r,{pixelFormat:w.PixelFormat.RGBA,dataType:w.PixelType.UNSIGNED_BYTE,wrapMode:w.TextureWrapMode.CLAMP_TO_EDGE,samplingMode:w.TextureSamplingMode.LINEAR,flipped:!0,width:1,height:512},a);const n=new d.SimpleAtmosphereTechniqueConfiguration;n.geometry=d.SimpleAtmosphereGeometry.Cone,this._coneTechnique=this._techniqueRepository.acquire(m.SimpleAtmosphereTechnique,n),n.geometry=d.SimpleAtmosphereGeometry.Underground,this._undergroundTechnique=this._techniqueRepository.acquire(m.SimpleAtmosphereTechnique,n)}var f=r.prototype;return f.destroy=function(){this._coneTechnique.release(),this._undergroundTechnique.release(),this._cameraChangeHandle.remove(),this._passParameters.texture=t.disposeMaybe(this._passParameters.texture),this._fadeVao.dispose(),this._vao.dispose()},f.render=function(e){const t=e.bindParameters.camera;this._update(t);const s=e.rctx;this._passParameters.undergroundFadeAlpha<1&&(s.bindTechnique(this._coneTechnique,this._passParameters,e.bindParameters),s.bindVAO(this._vao),s.drawArrays(w.PrimitiveType.TRIANGLES,0,this._vaoCount)),this._passParameters.undergroundFadeAlpha>0&&(s.bindTechnique(this._undergroundTechnique,this._passParameters,e.bindParameters),s.bindVAO(this._fadeVao),s.drawArrays(w.PrimitiveType.TRIANGLE_STRIP,0,this._fadeVaoCount))},f.renderHaze=function(){},f._update=function(t){const s=o.create(),i=this._planetRadius,r=n.length(t.eye),h=r-i;if(h<0){const e=Math.min(-h/5e3,1);this._passParameters.undergroundFadeAlpha=e}else this._passParameters.undergroundFadeAlpha=0;const c=Math.max(U,h),u=i+M;this._passParameters.innerScale=E(i+c,i,u)-1,this._passParameters.altitudeFade=p.computeInnerAltitudeFade(h),n.scale(s,t.eye,(i+U)/r),W(s,t.center,t.up,i,this._passParameters.silhouette);const l=this._computeScreenRimWidth(t,s,t.up,this._passParameters.silhouette),m=I(),d=L(h);let _=this._texV0+m*this._texVScale,g=this._texV0+l*d*this._texVScale;if(h>U){W(t.eye,t.center,t.up,i,this._passParameters.silhouette);const s=this._computeScreenRimWidth(t,t.eye,t.up,this._passParameters.silhouette),r=e.clamp((s-1.5)/(l-1.5),0,1);_=this._texV0+r*m*this._texVScale,g=this._texV0+e.lerp(this._texV1,l*d,r)*this._texVScale}a.set(this._passParameters.texV,_,g)},f._createRibbon=function(e){const t=b.newFloatArray(3+3*F*3),s=new Uint32Array(3*F*5);t[0]=0,t[1]=0,t[2]=-1;for(let a=0;a<F;a++){const e=9*a+3;t[e+0]=a,t[e+1]=this._innerRimFactor,t[e+2]=-1,t[e+3]=a,t[e+4]=this._middleRimFactor,t[e+5]=0,t[e+6]=a,t[e+7]=this._outerRimFactor,t[e+8]=1;const i=3*a+1,r=a===F-1?1:i+3,n=15*a;s[n+0]=i,s[n+1]=i+1,s[n+2]=r+1,s[n+3]=r+1,s[n+4]=r,s[n+5]=i,s[n+6]=i+1,s[n+7]=i+2,s[n+8]=r+2,s[n+9]=r+2,s[n+10]=r+1,s[n+11]=i+1,s[n+12]=i,s[n+13]=r,s[n+14]=0}const i=G.createBuffer(s.length),r=i.position;for(let a=0;a<s.length;++a){const e=3*s[a];r.set(a,0,t[e]),r.set(a,1,t[e+1]),r.set(a,2,t[e+2])}return new P.VertexArrayObject(e,y.Default3D,{geometry:A.glLayout(G)},{geometry:S.BufferObject.createVertex(e,w.Usage.STATIC_DRAW,i.buffer)})},f._computeScreenRimWidth=function(e,t,s,r){return n.add(k,r.center,r.v2),n.scale(D,k,this._outerRimFactor),i.lookAt(j,t,k,s),T.project(k,j,e.projectionMatrix,e.viewport,k),T.project(D,j,e.projectionMatrix,e.viewport,D),n.distance(k,D)/e.height},r}();function W(e,t,s,i,r){const a=n.length(e),o=i*Math.sqrt(a*a-i*i)/a,h=Math.sqrt(i*i-o*o),c=r.v1,u=r.v2;return n.scale(r.center,e,h/a),n.cross(c,e,t),n.squaredLength(c)<1&&n.cross(c,e,s),n.scale(c,c,o/n.length(c)),n.cross(u,c,e),n.scale(u,u,o/n.length(u)),o}const j=r.create(),k=o.create(),D=o.create();function E(e,t,s){return e*e/(Math.sqrt(e*e-t*t)*Math.sqrt(e*e-s*s)+t*s)}const G=x.newLayout().vec3f(V.VertexAttribute.POSITION);return O}));
