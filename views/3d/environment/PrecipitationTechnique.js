/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{P as e}from"../../../chunks/Precipitation.glsl.js";import{NoParameters as r}from"../webgl-engine/core/shaderModules/interfaces.js";import{ReloadableShaderModule as i}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{Program as o}from"../webgl-engine/lib/Program.js";import{VertexAttribute as n}from"../webgl-engine/lib/VertexAttribute.js";import{BlendFactor as s,CompareFunction as a}from"../../webgl/enums.js";import{makePipelineState as l,separateBlendingParams as c,defaultColorWriteParams as m}from"../../webgl/renderState.js";class g extends r{constructor(){super(...arguments),this.time=0,this.radius=1}}class u extends t{initializeProgram(e){const r=u.shader.get().build(this.configuration);return new o(e.rctx,r,u.attributeLocation)}initializePipeline(){return l({blending:c(s.ONE,s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA),depthTest:{func:a.LEQUAL},colorWrite:m})}}u.shader=new i(e,(()=>import("./Precipitation.glsl.js"))),u.attributeLocation=new Map([[n.POSITION,0],[n.INSTANCEFEATUREATTRIBUTE,1]]);export{g as PrecipitationPassParameters,u as PrecipitationTechnique};
