/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../core/compilerUtils","../../../../core/urlUtils","../../../../core/promiseUtils","../../../../core/Version","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/quatf64","../../support/buffer/BufferView","../../../../chunks/quat","./BinaryStreamReader","./fillDefaults","./pathUtils","../../../../chunks/scalar"],(function(e,t,r,n,o,s,i,a,u,c,f,d,p,l){"use strict";const h=1179937895,m=1313821514,y=5130562;let b=function(){function e(e,t,r,n,o){this.context=e,this.errorContext=t,this.uri=r,this.json=n,this.glbBuffer=o,this.bufferCache=new Map,this.textureCache=new Map,this.materialCache=new Map,this.nodeParentMap=new Map,this.nodeTransformCache=new Map,this.baseUri=p.splitURI(this.uri).dirPart,this.checkVersionSupported(),this.checkRequiredExtensionsSupported(),t.errorUnsupportedIf(null==n.scenes,"Scenes must be defined."),t.errorUnsupportedIf(null==n.meshes,"Meshes must be defined"),t.errorUnsupportedIf(null==n.nodes,"Nodes must be defined."),this.computeNodeParents()}e.load=async function(t,n,o,s){if(r.isDataProtocol(o)){const s=r.dataComponents(o);if("model/gltf-binary"!==s.mediaType)try{return new e(t,n,o,JSON.parse(s.isBase64?atob(s.data):s.data))}catch{}const i=r.dataToArrayBuffer(o);if(e.isGLBData(i))return this.fromGLBData(t,n,o,i)}if(o.endsWith(".gltf")){const r=await t.loadJSON(o,s);return new e(t,n,o,r)}const i=await t.loadBinary(o,s);if(e.isGLBData(i))return this.fromGLBData(t,n,o,i);const a=await t.loadJSON(o,s);return new e(t,n,o,a)},e.isGLBData=function(e){const t=new f.BinaryStreamReader(e);return t.remainingBytes()>=4&&t.readUint32()===h},e.fromGLBData=async function(t,r,n,o){const s=await e.parseGLBData(r,o);return new e(t,r,n,s.json,s.binaryData)},e.parseGLBData=async function(e,t){const r=new f.BinaryStreamReader(t);e.assert(r.remainingBytes()>=12,"GLB binary data is insufficiently large.");const n=r.readUint32(),o=r.readUint32(),s=r.readUint32();e.assert(n===h,"Magic first 4 bytes do not fit to expected GLB value."),e.assert(t.byteLength>=s,"GLB binary data is smaller than header specifies."),e.errorUnsupportedIf(2!==o,"An unsupported GLB container version was detected. Only version 2 is supported.");let i,a,u=0;for(;r.remainingBytes()>=8;){const t=r.readUint32(),n=r.readUint32();0===u?(e.assert(n===m,"First GLB chunk must be JSON."),e.assert(t>=0,"No JSON data found."),i=await g(r.readUint8Array(t))):1===u?(e.errorUnsupportedIf(n!==y,"Second GLB chunk expected to be BIN."),a=r.readUint8Array(t)):e.warnUnsupported("More than 2 GLB chunks detected. Skipping."),u+=1}return i||e.error("No GLB JSON chunk detected."),{json:i,binaryData:a}};var a=e.prototype;return a.getBuffer=async function(e,t){const r=this.json.buffers[e],n=this.errorContext;if(null==r.uri)return n.assert(null!=this.glbBuffer,"GLB buffer not present"),this.glbBuffer;let o=this.bufferCache.get(e);if(!o){const s=await this.context.loadBinary(this.resolveUri(r.uri),t);o=new Uint8Array(s),this.bufferCache.set(e,o),n.assert(o.byteLength===r.byteLength,"Buffer byte lengths should match.")}return o},a.getAccessor=async function(e,t){const r=this.json.accessors[e],n=this.errorContext;n.errorUnsupportedIf(null==r.bufferView,"Some accessor does not specify a bufferView."),n.errorUnsupportedIf(r.type in["MAT2","MAT3","MAT4"],`AttributeType ${r.type} is not supported`);const o=this.json.bufferViews[r.bufferView],s=await this.getBuffer(o.buffer,t),i=O[r.type],a=C[r.componentType],u=i*a,c=o.byteStride||u;return{raw:s.buffer,byteStride:c,byteOffset:s.byteOffset+(o.byteOffset||0)+(r.byteOffset||0),entryCount:r.count,isDenselyPacked:c===u,componentCount:i,componentByteSize:a,componentType:r.componentType,min:r.min,max:r.max,normalized:!!r.normalized}},a.getIndexData=async function(e,t){if(null==e.indices)return null;const r=await this.getAccessor(e.indices,t);if(r.isDenselyPacked)switch(r.componentType){case 5121:return new Uint8Array(r.raw,r.byteOffset,r.entryCount);case 5123:return new Uint16Array(r.raw,r.byteOffset,r.entryCount);case 5125:return new Uint32Array(r.raw,r.byteOffset,r.entryCount)}else switch(r.componentType){case 5121:return l.makeDense(this.wrapAccessor(u.BufferViewUint8,r));case 5123:return l.makeDense(this.wrapAccessor(u.BufferViewUint16,r));case 5125:return l.makeDense(this.wrapAccessor(u.BufferViewUint32,r))}},a.getPositionData=async function(e,t){const r=this.errorContext;r.errorUnsupportedIf(null==e.attributes.POSITION,"No POSITION vertex data found.");const n=await this.getAccessor(e.attributes.POSITION,t);return r.errorUnsupportedIf(5126!==n.componentType,"Expected type FLOAT for POSITION vertex attribute, but found "+U[n.componentType]),r.errorUnsupportedIf(3!==n.componentCount,"POSITION vertex attribute must have 3 components, but found "+n.componentCount.toFixed()),this.wrapAccessor(u.BufferViewVec3f,n)},a.getNormalData=async function(e,t){const r=this.errorContext;r.assert(null!=e.attributes.NORMAL,"No NORMAL vertex data found.");const n=await this.getAccessor(e.attributes.NORMAL,t);return r.errorUnsupportedIf(5126!==n.componentType,"Expected type FLOAT for NORMAL vertex attribute, but found "+U[n.componentType]),r.errorUnsupportedIf(3!==n.componentCount,"NORMAL vertex attribute must have 3 components, but found "+n.componentCount.toFixed()),this.wrapAccessor(u.BufferViewVec3f,n)},a.getTangentData=async function(e,t){const r=this.errorContext;r.assert(null!=e.attributes.TANGENT,"No TANGENT vertex data found.");const n=await this.getAccessor(e.attributes.TANGENT,t);return r.errorUnsupportedIf(5126!==n.componentType,"Expected type FLOAT for TANGENT vertex attribute, but found "+U[n.componentType]),r.errorUnsupportedIf(4!==n.componentCount,"TANGENT vertex attribute must have 4 components, but found "+n.componentCount.toFixed()),new u.BufferViewVec4f(n.raw,n.byteOffset,n.byteStride,n.byteOffset+n.byteStride*n.entryCount)},a.getTextureCoordinates=async function(e,r){const n=this.errorContext;n.assert(null!=e.attributes.TEXCOORD_0,"No TEXCOORD_0 vertex data found.");const o=await this.getAccessor(e.attributes.TEXCOORD_0,r);return n.errorUnsupportedIf(2!==o.componentCount,"TEXCOORD_0 vertex attribute must have 2 components, but found "+o.componentCount.toFixed()),5126===o.componentType?this.wrapAccessor(u.BufferViewVec2f,o):(n.errorUnsupportedIf(!o.normalized,"Integer component types are only supported for a normalized accessor for TEXCOORD_0."),function(e){switch(e.componentType){case 5120:return new u.BufferViewVec2i8(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5121:return new u.BufferViewVec2u8(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5122:return new u.BufferViewVec2i16(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5123:return new u.BufferViewVec2u16(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5125:return new u.BufferViewVec2u32(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5126:return new u.BufferViewVec2f(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);default:return void t.neverReached(e.componentType)}}(o))},a.getVertexColors=async function(e,t){const r=this.errorContext;r.assert(null!=e.attributes.COLOR_0,"No COLOR_0 vertex data found.");const n=await this.getAccessor(e.attributes.COLOR_0,t);if(r.errorUnsupportedIf(4!==n.componentCount&&3!==n.componentCount,"COLOR_0 attribute must have 3 or 4 components, but found "+n.componentCount.toFixed()),4===n.componentCount){if(5126===n.componentType)return this.wrapAccessor(u.BufferViewVec4f,n);if(5121===n.componentType)return this.wrapAccessor(u.BufferViewVec4u8,n);if(5123===n.componentType)return this.wrapAccessor(u.BufferViewVec4u16,n)}else if(3===n.componentCount){if(5126===n.componentType)return this.wrapAccessor(u.BufferViewVec3f,n);if(5121===n.componentType)return this.wrapAccessor(u.BufferViewVec3u8,n);if(5123===n.componentType)return this.wrapAccessor(u.BufferViewVec3u16,n)}r.errorUnsupported("Unsupported component type for COLOR_0 attribute: "+U[n.componentType])},a.hasPositions=function(e){return void 0!==e.attributes.POSITION},a.hasNormals=function(e){return void 0!==e.attributes.NORMAL},a.hasVertexColors=function(e){return void 0!==e.attributes.COLOR_0},a.hasTextureCoordinates=function(e){return void 0!==e.attributes.TEXCOORD_0},a.hasTangents=function(e){return void 0!==e.attributes.TANGENT},a.getMaterial=async function(e,t){const r=this.errorContext;let n=this.materialCache.get(e.material);if(!n){const o=null!=e.material?d.material(this.json.materials[e.material]):d.material(),s=o.pbrMetallicRoughness,i=this.hasVertexColors(e);let a,u,c,f,p;s.baseColorTexture&&(r.errorUnsupportedIf(0!==(s.baseColorTexture.texCoord||0),"Only TEXCOORD with index 0 is supported."),a=await this.getTexture(s.baseColorTexture.index,t)),o.normalTexture&&(0!==(o.normalTexture.texCoord||0)?r.warnUnsupported("Only TEXCOORD with index 0 is supported for the normal map texture."):u=await this.getTexture(o.normalTexture.index,t)),o.occlusionTexture&&(0!==(o.occlusionTexture.texCoord||0)?r.warnUnsupported("Only TEXCOORD with index 0 is supported for the occlusion texture."):c=await this.getTexture(o.occlusionTexture.index,t)),o.emissiveTexture&&(0!==(o.emissiveTexture.texCoord||0)?r.warnUnsupported("Only TEXCOORD with index 0 is supported for the emissive texture."):f=await this.getTexture(o.emissiveTexture.index,t)),s.metallicRoughnessTexture&&(0!==(s.metallicRoughnessTexture.texCoord||0)?r.warnUnsupported("Only TEXCOORD with index 0 is supported for the metallicRoughness texture."):p=await this.getTexture(s.metallicRoughnessTexture.index,t));const l=null!=e.material?e.material:-1;n={alphaMode:o.alphaMode,alphaCutoff:o.alphaCutoff,color:s.baseColorFactor,doubleSided:!!o.doubleSided,colorTexture:a,normalTexture:u,name:o.name,id:l,occlusionTexture:c,emissiveTexture:f,emissiveFactor:o.emissiveFactor,metallicFactor:s.metallicFactor,roughnessFactor:s.roughnessFactor,metallicRoughnessTexture:p,vertexColors:i,ESRI_externalColorMixMode:o.extras.ESRI_externalColorMixMode}}return n},a.getTexture=async function(e,t){const r=this.errorContext,o=this.json.textures[e],s=d.textureSampler(null!=o.sampler?this.json.samplers[o.sampler]:{});r.errorUnsupportedIf(null==o.source,"Source is expected to be defined for a texture.");const i=this.json.images[o.source];let a=this.textureCache.get(e);if(!a){let o;if(i.uri)o=await this.context.loadImage(this.resolveUri(i.uri),t);else{r.errorUnsupportedIf(null==i.bufferView,"Image bufferView must be defined."),r.errorUnsupportedIf(null==i.mimeType,"Image mimeType must be defined.");const e=this.json.bufferViews[i.bufferView],s=await this.getBuffer(e.buffer,t);r.errorUnsupportedIf(null!=e.byteStride,"byteStride not supported for image buffer"),o=await async function(e,t){return n.create(((r,n)=>{const o=new Blob([e],{type:t}),s=URL.createObjectURL(o),i=new Image;i.addEventListener("load",(()=>{URL.revokeObjectURL(s),"decode"in i?i.decode().then((()=>r(i)),(()=>r(i))):r(i)})),i.addEventListener("error",(e=>{URL.revokeObjectURL(s),n(e)})),i.src=s}))}(new Uint8Array(s.buffer,s.byteOffset+(e.byteOffset||0),e.byteLength),i.mimeType)}a={data:o,wrapS:s.wrapS,wrapT:s.wrapT,minFilter:s.minFilter,name:i.name,id:e},this.textureCache.set(e,a)}return a},a.getNodeTransform=function(e){if(void 0===e)return x;let t=this.nodeTransformCache.get(e);if(!t){const r=this.getNodeTransform(this.getNodeParent(e)),n=this.json.nodes[e];n.matrix?t=s.multiply(i.create(),r,n.matrix):n.translation||n.rotation||n.scale?(t=i.clone(r),n.translation&&s.translate(t,t,n.translation),n.rotation&&(T[3]=c.getAxisAngle(T,n.rotation),s.rotate(t,t,T[3],T)),n.scale&&s.scale(t,t,n.scale)):t=r,this.nodeTransformCache.set(e,t)}return t},a.wrapAccessor=function(e,t){return new e(t.raw,t.byteOffset,t.byteStride,t.byteOffset+t.byteStride*(t.entryCount-1)+t.componentByteSize*t.componentCount)},a.resolveUri=function(e){return r.makeAbsolute(e,this.baseUri)},a.getNodeParent=function(e){return this.nodeParentMap.get(e)},a.checkVersionSupported=function(){const e=o.Version.parse(this.json.asset.version,"glTF");w.validate(e)},a.checkRequiredExtensionsSupported=function(){const e=this.json,t=this.errorContext;e.extensionsRequired&&0!==e.extensionsRequired.length&&t.errorUnsupported("gltf loader was not able to load unsupported feature. Required extensions: "+e.extensionsRequired.join(", "))},a.computeNodeParents=function(){this.json.nodes.forEach(((e,t)=>{e.children&&e.children.forEach((e=>{this.nodeParentMap.set(e,t)}))}))},e}();const w=new o.Version(2,0,"glTF"),x=s.fromXRotation(i.create(),Math.PI/2),T=a.create(),O={SCALAR:1,VEC2:2,VEC3:3,VEC4:4},C={5120:1,5121:1,5122:2,5123:2,5126:4,5125:4};async function g(e){return n.create(((t,r)=>{const n=new Blob([e]),o=new FileReader;o.onload=()=>{const e=o.result;t(JSON.parse(e))},o.onerror=e=>{r(e)},o.readAsText(n)}))}const U={5120:"BYTE",5121:"UNSIGNED_BYTE",5122:"SHORT",5123:"UNSIGNED_SHORT",5125:"UNSIGNED_INT",5126:"FLOAT"};e.Resource=b,Object.defineProperty(e,"__esModule",{value:!0})}));
