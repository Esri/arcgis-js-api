/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../webgl-engine/lib/basicInterfaces"],(function(e,n,t){"use strict";let r=function(e){this.data=e,this.type="encoded-mesh-texture",this.encoding=t.TextureEncodingMimeType.KTX2_ENCODING};function o(e){return"encoded-mesh-texture"===e?.type}function i(e){return s.apply(this,arguments)}function s(){return(s=n._asyncToGenerator((function*(e){return new Promise(((n,t)=>{const r=new Blob([e]),o=new FileReader;o.onload=()=>{const e=o.result;n(JSON.parse(e))},o.onerror=e=>{t(e)},o.readAsText(r)}))}))).apply(this,arguments)}function c(e,n){return a.apply(this,arguments)}function a(){return(a=n._asyncToGenerator((function*(e,n){return n===t.TextureEncodingMimeType.KTX2_ENCODING?new r(e):new Promise(((t,r)=>{const o=new Blob([e],{type:n}),i=URL.createObjectURL(o),s=new Image,c=()=>{URL.revokeObjectURL(i),"decode"in s?s.decode().then((()=>t(s)),(()=>t(s))).then(u):(t(s),u())},a=e=>{URL.revokeObjectURL(i),r(e),u()},u=()=>{s.removeEventListener("load",c),s.removeEventListener("error",a)};s.addEventListener("load",c),s.addEventListener("error",a),s.src=i}))}))).apply(this,arguments)}e.EncodedMeshTexture=r,e.imageFromBinaryData=c,e.isEncodedMeshTexture=o,e.jsonFromBinaryData=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
