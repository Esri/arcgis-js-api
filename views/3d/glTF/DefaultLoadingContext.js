/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import r from"../../../request.js";import{result as e}from"../../../core/asyncUtils.js";import o from"../../../core/Error.js";import{isNone as s}from"../../../core/maybe.js";import{throwIfAborted as t,throwIfAbortError as a}from"../../../core/promiseUtils.js";import{isDataProtocol as i,dataToArrayBuffer as m}from"../../../core/urlUtils.js";class n{constructor(r){this.streamDataRequester=r}async loadJSON(r,e){return this._load("json",r,e)}async loadBinary(r,e){return i(r)?(t(e),m(r)):this._load("binary",r,e)}async loadImage(r,e){return this._load("image",r,e)}async _load(t,i,m){if(s(this.streamDataRequester))return(await r(i,{responseType:c[t]})).data;const n=await e(this.streamDataRequester.request(i,t,m));if(!0===n.ok)return n.value;throw a(n.error),new o("",`Request for resource failed: ${n.error}`)}}const c={image:"image",binary:"array-buffer",json:"json"};export{n as DefaultLoadingContext};
