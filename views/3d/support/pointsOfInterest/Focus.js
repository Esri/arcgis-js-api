/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/has","../../../../core/Logger","../../../../core/accessorSupport/ensureType","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/decorators/subclass","../../../../core/urlUtils","../../../../core/uuid","../../../../portal/support/resourceExtension","../../../../geometry/Point","../../../../core/mathUtils","../../../../core/screenUtils","../../../../chunks/vec3f64","../../../../chunks/vec3","../geometryUtils","../PropertiesPool","./PointOfInterest"],(function(e,r,t,o,n,s,c,i,a,u,p,d,l,f,h,y,_,P,g){"use strict";const O=Array;e.Focus=function(e){function t(t){var o;return(o=e.call(this,t)||this)._propertiesPool=new P.PropertiesPool({location:d,renderLocation:O},r._assertThisInitialized(o)),o}r._inheritsLoose(t,e);var o=t.prototype;return o.destroy=function(){this._propertiesPool.destroy(),this._propertiesPool=null},o.calculateScreenHorizontalEdgeOnSurface=function(e){const r=this.state.camera,t=r.getRenderCenter(f.createRenderScreenPointArray3());if(t[1]=r.aboveGround?r.padding[2]:r.fullHeight-r.padding[0],this.estimateSurfaceIntersectionAtRenderPoint(t,e))return e;const o=this.renderCoordsHelper.getAltitude(this.centerOnSurface.renderLocation);if(r.unprojectFromRenderScreen(t,m)){y.subtract(m,m,r.eye);const t=y.normalize(m,m);if(this.renderCoordsHelper.intersectManifold(_.ray.wrap(r.eye,t),o,e))return e}return y.copy(e,r.eye),this.renderCoordsHelper.setAltitude(o,e),e},o.update=function(){},o.updateRenderLocation=function(){},r._createClass(t,[{key:"location",get:function(){const e=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,e,this.state.spatialReference),e}},{key:"renderLocation",get:function(){const e=this.centerOnSurface.renderLocation,r=this.renderCoordsHelper,t=this.calculateScreenHorizontalEdgeOnSurface(v),o=this.state.camera;r.worldUpAtPosition(e,S);const n=Math.max(0,(Math.acos(y.dot(S,o.viewForward))-.5*Math.PI)*(o.aboveGround?1:-1)),s=this._propertiesPool.get("renderLocation");if(Number.isNaN(n))y.copy(s,e);else{const r=1-l.clamp(n/(.5*Math.PI),0,1),o=r*r*r;y.lerp(s,e,t,o)}const c=this._get("renderLocation");return c&&y.equals(c,s)?c:s}}]),t}(g.PointOfInterest),t.__decorate([c.property({constructOnly:!0})],e.Focus.prototype,"centerOnSurface",void 0),t.__decorate([c.property({constructOnly:!0})],e.Focus.prototype,"estimateSurfaceIntersectionAtRenderPoint",void 0),t.__decorate([c.property({readOnly:!0})],e.Focus.prototype,"location",null),t.__decorate([c.property({readOnly:!0})],e.Focus.prototype,"renderLocation",null),t.__decorate([c.property({readOnly:!0,aliasOf:"centerOnSurface.updating"})],e.Focus.prototype,"updating",void 0),e.Focus=t.__decorate([i.subclass("esri.views.3d.support.CenterOnSurface")],e.Focus);const S=h.create(),m=h.create(),v=h.create();var F=e.Focus;e.default=F,Object.defineProperty(e,"__esModule",{value:!0})}));
