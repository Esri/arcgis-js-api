/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import s from"../../../../core/Handles.js";import{destroyMaybe as o}from"../../../../core/maybe.js";import{property as n}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import{c}from"../../../../chunks/vec3f64.js";import{empty as a,expand as p,intersects as d}from"../../../../geometry/support/aaBoundingRect.js";import{TaskPriority as h}from"../../../support/Scheduler.js";let u=class extends t{constructor(){super(...arguments),this.handles=new s,this._tileGeometryUpdateExtent=a(),this._tileGeometryUpdateSpatialReference=null,this.events=new r,this.updating=!1}initialize(){this.handles.add([this.surface.on("elevation-change",(e=>this._tileGeometryChanged(e))),this.scheduler.registerTask(h.SURFACE_GEOMETRY_UPDATES,this)])}destroy(){this.handles=o(this.handles)}get running(){return this.updating}runTask(){this.updating&&(this._centerIntersectsExtent(this._tileGeometryUpdateExtent,this._tileGeometryUpdateSpatialReference)&&this.events.emit("request-update",l),a(this._tileGeometryUpdateExtent),this._set("updating",!1))}_tileGeometryChanged(e){this._tileGeometryUpdateSpatialReference=e.spatialReference,p(this._tileGeometryUpdateExtent,e.tile.extent,this._tileGeometryUpdateExtent),this._set("updating",!0)}_furthestCenterOnSurface(){let e=this.centerOnSurfaces[0];for(let t=1;t<this.centerOnSurfaces.length;t++){const r=this.centerOnSurfaces[t];r.distance>e.distance&&(e=r)}return e}_centerIntersectsExtent(e,t){const r=this.state.camera.eye,s=f,o=this._furthestCenterOnSurface();return this.renderCoordsHelper.fromRenderCoords(r,m,t),this.renderCoordsHelper.fromRenderCoords(o.renderLocation,y,t),m[0]<y[0]?(s[0]=m[0],s[2]=y[0]):(s[0]=y[0],s[2]=m[0]),m[1]<y[1]?(s[1]=m[1],s[3]=y[1]):(s[1]=y[1],s[3]=m[1]),d(s,e)}};e([n({constructOnly:!0})],u.prototype,"state",void 0),e([n({constructOnly:!0})],u.prototype,"centerOnSurfaces",void 0),e([n({constructOnly:!0})],u.prototype,"renderCoordsHelper",void 0),e([n({constructOnly:!0})],u.prototype,"scheduler",void 0),e([n({constructOnly:!0})],u.prototype,"surface",void 0),e([n({readOnly:!0})],u.prototype,"updating",void 0),u=e([i("esri.views.3d.support.SurfaceGeometryUpdates")],u);const l={},m=c(),y=c(),f=a();export{u as SurfaceGeometryUpdates};
