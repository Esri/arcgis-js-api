/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/Point","../../../ViewingMode","../cameraUtils","../PropertiesPool","./PointOfInterest","../../../support/Scheduler"],(function(e,t,r,o,n,i,a,s,c,d,u,l,p,h,y,_,f,g){"use strict";const m=Array;e.CameraOnSurface=function(e){function r(r){var o;return(o=e.call(this,r)||this)._dirty=!1,o._propertiesPool=new _.PropertiesPool({location:p,renderLocation:m},t._assertThisInitialized(o)),o._estimatedSurfaceAltitude=0,o._pendingElevationQueryController=null,o.renderLocation=l.create(),o._tmpPoint=new p,o}t._inheritsLoose(r,e);var a=r.prototype;return a.initialize=function(){if(this.scheduler&&this.handles.add(this.scheduler.registerTask(this.task,this)),this.runTask(),this.map){const e=()=>this._setDirty();this.handles.add(i.on((()=>this.map?.ground?.layers),"change",e,{onListenerAdd:e,onListenerRemove:e}))}this._updateRenderLocation()},a.destroy=function(){this._cancelPendingRequest(),this._propertiesPool=o.destroyMaybe(this._propertiesPool)},a.updateRenderLocation=function(){this._setDirty(),this._updateRenderLocation()},a._setDirty=function(){this._dirty||(this._dirty=!0,this.notifyChange("updating"))},a._cancelPendingRequest=function(){const e=this._pendingElevationQueryController;e&&(this._pendingElevationQueryController=null,e.abort(),this.notifyChange("updating"))},a.runTask=function(){if(this._cancelPendingRequest(),this._dirty=!1,this.notifyChange("updating"),!this.map||!this.map.ground)return this._updateSurfaceAltitude(0),g.Task.YIELD;const e=this.state.spatialReference;this.renderCoordsHelper.fromRenderCoords(this._camera.eye,this._tmpPoint,e);const t=(this._tmpPoint.z??0)>S&&this.renderCoordsHelper.viewingMode===h.ViewingMode.Global&&(e.isWGS84||e.isWebMercator);let r=new AbortController;return this.map.ground.queryElevation(this._tmpPoint,{signal:r.signal,cache:this.cache,minDemResolution:t?v:0}).then((e=>this._updateSurfaceAltitude(e.geometry.z??0))).catch((e=>{n.isAbortError(e)||this._updateSurfaceAltitude(0)})).catch((()=>{})).then((()=>{this._pendingElevationQueryController===r&&(this._pendingElevationQueryController=null,this.notifyChange("updating")),r=null})),this._pendingElevationQueryController=r,g.Task.YIELD},a._updateSurfaceAltitude=function(e){this._estimatedSurfaceAltitude!==e&&(this._estimatedSurfaceAltitude=e,this._updateRenderLocation())},a._updateRenderLocation=function(){this.renderCoordsHelper.setAltitude(C,this._estimatedSurfaceAltitude,this._camera.eye),u.exactEquals(this._get("renderLocation"),C)||(this._set("renderLocation",u.copy(this._propertiesPool.get("renderLocation"),C)),this.notifyChange("renderLocation"))},t._createClass(r,[{key:"_camera",get:function(){return this.state.contentCamera}},{key:"location",get:function(){const e=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,e,this.state.spatialReference),e}},{key:"scale",get:function(){const e=this._camera,t=u.distance(e.eye,this.renderLocation),r={renderCoordsHelper:this.renderCoordsHelper,state:{camera:e}};return y.distanceToScale(r,t,0)}},{key:"updating",get:function(){return this._dirty||null!=this._pendingElevationQueryController}},{key:"running",get:function(){return!this._pendingElevationQueryController&&this._dirty}}]),r}(f.PointOfInterest),r.__decorate([a.property({constructOnly:!0})],e.CameraOnSurface.prototype,"scheduler",void 0),r.__decorate([a.property({constructOnly:!0})],e.CameraOnSurface.prototype,"cache",void 0),r.__decorate([a.property({constructOnly:!0})],e.CameraOnSurface.prototype,"task",void 0),r.__decorate([a.property({readOnly:!0})],e.CameraOnSurface.prototype,"location",null),r.__decorate([a.property({constructOnly:!0})],e.CameraOnSurface.prototype,"map",void 0),r.__decorate([a.property({readOnly:!0})],e.CameraOnSurface.prototype,"renderLocation",void 0),r.__decorate([a.property({readOnly:!0})],e.CameraOnSurface.prototype,"scale",null),r.__decorate([a.property({readOnly:!0})],e.CameraOnSurface.prototype,"updating",null),e.CameraOnSurface=r.__decorate([d.subclass("esri.views.3d.support.CameraOnSurface")],e.CameraOnSurface);const C=l.create(),S=1e5,v=1e6;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
