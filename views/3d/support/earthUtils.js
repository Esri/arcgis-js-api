/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{rad2deg as t,asinClamped as n,deg2rad as o}from"../../../core/mathUtils.js";import r from"../../../geometry/Point.js";import{getReferenceEllipsoid as e}from"../../../geometry/projectionEllipsoid.js";function s(t,n,o){return u(t,n.longitude,n.latitude,o.longitude,o.latitude)}function u(t,r,e,s,u){const i=o(e),c=o(u),a=i-c,h=o(r)-o(s),d=Math.sin(a/2),f=Math.sin(h/2),m=2*n(Math.sqrt(d*d+Math.cos(i)*Math.cos(c)*f*f))*t;return Math.round(1e4*m)/1e4}function i(t,n,o){const u=n.spatialReference,i=e(u),c=new r(n.x,t.y,u),a=new r(o.x,t.y,u),h=new r(t.x,n.y,u),d=new r(t.x,o.y,u);return{lon:s(i.radius,c,a),lat:s(i.radius,h,d)}}function c(r,e,s){const u=e/s,i=o(r),c=Math.sin(u/2),a=Math.cos(i),h=2*n(Math.sqrt(c*c/(a*a)));return t(h)}function a(n,o){return t(n/o)}function h(t,n){const r=o(t/2);return(1-Math.sin(r))*n/Math.sin(r)}function d(t,n){let o=t/15;return n||(o=Math.round(o)),o}function f(t,n){return d(t.longitude,n)}function m(t,n){n||(n={hours:0,minutes:0,seconds:0}),n.hours=d(t[0],!0);const o=n.hours%1;n.hours-=o,n.minutes=60*o;const r=n.minutes%1;return n.minutes-=r,n.seconds=Math.round(60*r),n}export{u as getGreatCircleDistance,s as getGreatCircleDistanceFromPoints,i as getGreatCircleSpanAt,a as getLatDeltaForDistance,c as getLonDeltaForDistance,h as getMaxCameraAltitude,d as longitudeToTimezone,f as pointToTimezone,m as positionToTimezoneInfo};
