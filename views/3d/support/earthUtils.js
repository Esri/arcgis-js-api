/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../core/mathUtils","../../../core/maybe","../../../geometry/ellipsoidUtils","../../../geometry/Point"],(function(e,t,n,o,i){"use strict";function r(e,t,o){if(n.isNone(t.longitude)||n.isNone(t.latitude)||n.isNone(o.longitude)||n.isNone(o.latitude))throw new Error("Invalid points: no lon/lat");return s(e,t.longitude,t.latitude,o.longitude,o.latitude)}function s(e,n,o,i,r){const s=t.deg2rad(o),a=t.deg2rad(r),u=s-a,d=t.deg2rad(n)-t.deg2rad(i),l=Math.sin(u/2),c=Math.sin(d/2),g=2*t.asinClamped(Math.sqrt(l*l+Math.cos(s)*Math.cos(a)*c*c))*e;return Math.round(1e4*g)/1e4}function a(e,t,n){const s=t.spatialReference,a=o.getReferenceEllipsoid(s),u=new i(t.x,e.y,s),d=new i(n.x,e.y,s),l=new i(e.x,t.y,s),c=new i(e.x,n.y,s);return{lon:r(a.radius,u,d),lat:r(a.radius,l,c)}}function u(e,n,o){const i=n/o,r=t.deg2rad(e),s=Math.sin(i/2),a=Math.cos(r),u=2*t.asinClamped(Math.sqrt(s*s/(a*a)));return t.rad2deg(u)}function d(e,t){let n=e/15;return t||(n=Math.round(n)),n}function l(e,t){const n=e?.[0];if(null==n)return null;t||(t={hours:0,minutes:0,seconds:0}),t.hours=d(n,!0);const o=t.hours%1;t.hours-=o,t.minutes=60*o;const i=t.minutes%1;return t.minutes-=i,t.seconds=Math.round(60*i),t}e.getGreatCircleDistance=s,e.getGreatCircleDistanceFromPoints=r,e.getGreatCircleSpanAt=a,e.getLonDeltaForDistance=u,e.longitudeToTimezone=d,e.positionToTimezoneInfo=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
