/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../geometry/Point","../../../core/mathUtils","../../../geometry/projectionEllipsoid"],(function(e,t,n,r){"use strict";function o(e,t,n){return i(e,t.longitude,t.latitude,n.longitude,n.latitude)}function i(e,t,r,o,i){const a=n.deg2rad(r),s=n.deg2rad(i),u=a-s,d=n.deg2rad(t)-n.deg2rad(o),c=Math.sin(u/2),l=Math.sin(d/2),g=2*n.asinClamped(Math.sqrt(c*c+Math.cos(a)*Math.cos(s)*l*l))*e;return Math.round(1e4*g)/1e4}function a(e,n,i){const a=n.spatialReference,s=r.getReferenceEllipsoid(a),u=new t(n.x,e.y,a),d=new t(i.x,e.y,a),c=new t(e.x,n.y,a),l=new t(e.x,i.y,a);return{lon:o(s.radius,u,d),lat:o(s.radius,c,l)}}function s(e,t,r){const o=t/r,i=n.deg2rad(e),a=Math.sin(o/2),s=Math.cos(i),u=2*n.asinClamped(Math.sqrt(a*a/(s*s)));return n.rad2deg(u)}function u(e,t){return n.rad2deg(e/t)}function d(e,t){const r=e/2,o=n.deg2rad(r);return(1-Math.sin(o))*t/Math.sin(o)}function c(e,t){let n=e/15;return t||(n=Math.round(n)),n}function l(e,t){t||(t={hours:0,minutes:0,seconds:0}),t.hours=c(e[0],!0);const n=t.hours%1;t.hours-=n,t.minutes=60*n;const r=t.minutes%1;return t.minutes-=r,t.seconds=Math.round(60*r),t}e.getGreatCircleDistance=i,e.getGreatCircleDistanceFromPoints=o,e.getGreatCircleSpanAt=a,e.getLatDeltaForDistance=u,e.getLonDeltaForDistance=s,e.getMaxCameraAltitude=d,e.longitudeToTimezone=c,e.positionToTimezone=l,Object.defineProperty(e,"__esModule",{value:!0})}));
