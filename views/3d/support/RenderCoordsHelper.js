/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as t}from"../../../core/maybe.js";import{getMetersPerUnitForSR as e}from"../../../core/unitUtils.js";import{s as r}from"../../../chunks/mat4.js";import{c as o}from"../../../chunks/vec3.js";import{projectPointToVector as s,projectVectorToVector as i,projectVectorToDehydratedPoint as n,projectVectorToPoint as a}from"../../../geometry/projection.js";import c from"../../../geometry/SpatialReference.js";import{Axis as m}from"../../../geometry/support/Axis.js";import{create as l,setExtent as d,altitudeAt as p,setAltitudeAt as u,setAltitudeOfTransformation as h,normalAt as f,axisAt as y,elevate as S,intersectRayClosestSilhouette as g,intersectRay as j,createGlobal as R,createLocal as w,renderSRFromViewSR as A}from"../../../geometry/support/coordinateSystem.js";import{intersectRay as M}from"../../../geometry/support/plane.js";import{sv3d as _}from"../../../geometry/support/vectorStacks.js";import{isDehydratedPoint as b}from"../../../layers/graphics/dehydratedFeatureUtils.js";import{ViewingMode as P}from"../../ViewingMode.js";import{isSpatialReferenceSupported as v}from"../../support/spatialReferenceSupport.js";class x{constructor(t,e,r,o){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=r,this.coordinateSystem=o,this._coordinateSystem=l(o)}set extent(t){t&&d(this.coordinateSystem,t,this.coordinateSystem)}getAltitude(t){return p(this.coordinateSystem,t)}setAltitude(t,e,r=t){return u(this.coordinateSystem,r,e,t)}setAltitudeOfTransformation(t,e){h(this.coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return f(this.coordinateSystem,t,e)}worldBasisAtPosition(t,e,r){return y(this.coordinateSystem,t,e,r)}basisMatrixAtPosition(t,e){const o=this.worldBasisAtPosition(t,m.X,_.get()),s=this.worldBasisAtPosition(t,m.Y,_.get()),i=this.worldBasisAtPosition(t,m.Z,_.get());return r(e,o[0],o[1],o[2],0,s[0],s[1],s[2],0,i[0],i[1],i[2],0,0,0,0,1),e}intersectManifoldClosestSilhouette(t,e,r){return S(this.coordinateSystem,e,this._coordinateSystem),g(this._coordinateSystem,t,r),r}intersectManifold(t,e,r){S(this.coordinateSystem,e,this._coordinateSystem);const s=_.get();return j(this._coordinateSystem,t,s)?o(r,s):null}intersectInfiniteManifold(t,e,r){if(this.viewingMode===P.Global)return this.intersectManifold(t,e,r);S(this.coordinateSystem,e,this._coordinateSystem);const s=this._coordinateSystem.value,i=_.get();return M(s.plane,t,i)?o(r,i):null}toRenderCoords(t,e,r){return b(t)?s(t,e,this.spatialReference):i(t,e,r,this.spatialReference)}fromRenderCoords(e,r,o=null){return b(r)?(t(o)&&(r.spatialReference=o),n(e,this.spatialReference,r)):r instanceof c?a(e,this.spatialReference,r):i(e,this.spatialReference,r,o)?r:null}static create(t,r){switch(t){case P.Local:return new x(P.Local,r,e(r),w());case P.Global:return new x(P.Global,r,1,R(r))}}static renderUnitScaleFactor(t,e){return B(t)/B(e)}}function B(t){if(v(t,P.Global))return 1;const r=A(!1,t);return e(r)}export{x as RenderCoordsHelper};
