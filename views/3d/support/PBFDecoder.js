/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../Graphic.js";import{isSome as r}from"../../../core/maybe.js";import{WorkerHandle as o}from"../../../core/workers/WorkerHandle.js";import t from"../../../geometry/SpatialReference.js";import s from"../../../layers/support/Field.js";class i{constructor(e){this._schedule=e,this._handle=new n(e)}destroy(){this._handle.destroy()}invoke(o,i){return o.buffer&&0!==o.buffer.byteLength?(o.options.sourceSpatialReference&&o.options.sourceSpatialReference instanceof t&&(o.options={...o.options,sourceSpatialReference:o.options.sourceSpatialReference.toJSON()}),this._handle.invoke(o,i).then((o=>this._schedule((()=>{if(o.spatialReference=t.fromJSON(o.spatialReference),o.fields)for(let e=0;e<o.fields.length;e++)o.fields[e]=s.fromJSON(o.fields[e]);const i=o.spatialReference;for(const t of o.features)t.uid=e.generateUID(),r(t.geometry)&&(t.geometry.spatialReference=i);return o}))))):Promise.resolve(null)}}class n extends o{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",{_parseFeatureQuery:e=>[e.buffer]},e)}}export{i as PBFDecoder};
