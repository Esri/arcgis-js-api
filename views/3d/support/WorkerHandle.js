/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/Logger","../../../core/promiseUtils","../../../core/workers/workers"],(function(e,t,r,i,s){"use strict";const o=r.getLogger("esri.views.3d.support.WorkerHandle");let n=function(){function e(e,t,r,i={}){this._methodName=t,this._promise=s.open(e,{...i,scheduler:r}).then((e=>{void 0===this._thread?(this._thread=e,this._promise=null,i.hasInitialize&&this.broadcast({},"initialize")):e.close()})),this._promise.catch((t=>o.error(`Failed to initialize ${e} worker: ${t}`)))}var r=e.prototype;return r.destroy=function(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null},r.invoke=function(e,t){if(this._thread){const r=this.getTransferList(e);return this._thread.invoke(this._methodName,e,{transferList:r,signal:t})}return this._promise?this._promise.then((()=>(i.throwIfAborted(t),this.invoke(e,t)))):i.reject(null)},r.broadcast=function(e,t){return this._thread?i.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):i.reject()},t._createClass(e,[{key:"promise",get:function(){return this._promise}}]),e}();e.WorkerHandle=n,Object.defineProperty(e,"__esModule",{value:!0})}));
