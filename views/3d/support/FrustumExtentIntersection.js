/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{neverReached as t}from"../../../core/compilerUtils.js";import{lerp as e}from"../../../core/mathUtils.js";import{a as i}from"../../../chunks/mat4.js";import{c as r}from"../../../chunks/mat4f64.js";import{a as n,g as o,r as s,m as a,s as c,e as p}from"../../../chunks/vec3.js";import{c as l}from"../../../chunks/vec3f64.js";import{computeTranslationToOriginAndRotation as h,projectVectorToVector as d,projectBoundingRect as m}from"../../../geometry/projection.js";import{getReferenceEllipsoid as g}from"../../../geometry/projectionEllipsoid.js";import{create as u,empty as x,expandWithVec3 as f}from"../../../geometry/support/aaBoundingBox.js";import{create as R,center as y}from"../../../geometry/support/aaBoundingRect.js";import{PlaneIndex as j}from"../../../geometry/support/frustum.js";import{create as A,fromPoints as b}from"../../../geometry/support/lineSegment.js";import{create as E,fromVectorsAndPoint as S,copy as C,negate as H,signedDistance as w}from"../../../geometry/support/plane.js";import{wrap as B}from"../../../geometry/support/ray.js";import{ViewingMode as G}from"../../ViewingMode.js";import{frustumLineSegment as M}from"./intersectionUtils.js";const F=.5*Math.PI,N=F/Math.PI*180;class _{constructor(t){this.renderCoordsHelper=t.renderCoordsHelper,this.extent=new Array(4),this.planes=new Array(6),this.maxSpan=0,this.center={origin:l(),direction:l()};for(let e=0;e<4;e++)this.extent[e]={origin:l(),direction:l(),cap:{next:null,direction:l()}},this.planes[e]=E();this.planes[j.NEAR]=E(),this.planes[j.FAR]=E(),this.planesWithoutFar=this.planes.slice(0,5)}update(t,e,i,r=!0){const a=this.extent;this._toRenderBoundingExtent(t,e,i),n(this.center.origin,a[0].origin,a[2].origin),o(this.center.origin,this.center.origin,.5),this.renderCoordsHelper.worldUpAtPosition(this.center.origin,this.center.direction),r||o(this.center.direction,this.center.direction,-1);for(let n=0;n<4;n++){const t=a[n];this.renderCoordsHelper.worldUpAtPosition(t.origin,t.direction);const e=a[3===n?0:n+1];t.cap.next=e.origin,s(t.cap.direction,t.origin,e.origin),S(t.direction,t.cap.direction,t.origin,this.planes[n]),r||o(t.direction,t.direction,-1)}S(a[0].cap.direction,a[1].cap.direction,a[0].origin,this.planes[j.NEAR]),r?H(this.planes[j.NEAR],this.planes[j.FAR]):(C(this.planes[j.FAR],this.planes[j.NEAR]),H(this.planes[j.NEAR],this.planes[j.NEAR])),this.maxSpan=Math.max(Math.abs(t[0]-t[2]),Math.abs(t[1]-t[3])),this.maxSpanSpatialReference=e,this.minGlobalAltitude=.9*g(this.maxSpanSpatialReference).radius}isVisibleInFrustum(t,e,i=!1){if(null==t)return!1;if(this.renderCoordsHelper.viewingMode===G.Global){const i=this.maxSpanSpatialReference.isGeographic?N:F*e;if(this.maxSpan>i)return!0;if(t.altitude>=this.minGlobalAltitude)return this._isVisibleInFrustumGlobal(t)}if(0===this.maxSpan){const e=this.extent[0];return!(i||!t.intersectsRay(B(e.origin,e.direction)))}for(let n=0;n<this.extent.length;n++){const e=this.extent[n];if(!i&&t.intersectsRay(B(e.origin,e.direction)))return!0;if(t.intersectsLineSegment(b(e.origin,e.cap.next,V),e.cap.direction))return!0}const r=i?this.planes:this.planesWithoutFar;for(let n=0;n<t.lines.length;n++){const e=t.lines[n];if(M(r,e.origin,e.endpoint,e.direction))return!0}return!1}_toRenderBoundingExtentGlobal(t,r,n){const o=5;y(t,v),v[2]=n,h(r,v,I,this.renderCoordsHelper.spatialReference),i(U,I),x(L);for(const{x0:i,x1:s,y0:c,y1:p}of k)for(let l=0;l<o;l++){const h=l/(o-1);v[0]=e(t[i],t[s],h),v[1]=e(t[c],t[p],h),v[2]=n,d(v,r,v,this.renderCoordsHelper.spatialReference),a(v,v,U),f(L,v)}c(this.extent[0].origin,L[0],L[1],L[2]),c(this.extent[1].origin,L[3],L[1],L[2]),c(this.extent[2].origin,L[3],L[4],L[2]),c(this.extent[3].origin,L[0],L[4],L[2]);for(let e=0;e<4;++e)a(this.extent[e].origin,this.extent[e].origin,I)}_toRenderBoundingExtentLocal(t,e,i){m(t,e,P,this.renderCoordsHelper.spatialReference),c(this.extent[0].origin,P[0],P[1],i),c(this.extent[1].origin,P[2],P[1],i),c(this.extent[2].origin,P[2],P[3],i),c(this.extent[3].origin,P[0],P[3],i)}_toRenderBoundingExtent(e,i,r){switch(this.renderCoordsHelper.viewingMode){case G.Global:this._toRenderBoundingExtentGlobal(e,i,r);break;case G.Local:this._toRenderBoundingExtentLocal(e,i,r);break;default:t(this.renderCoordsHelper.viewingMode)}}_isVisibleInFrustumGlobal(t){if(w(t.planes[j.NEAR],this.center.origin)<0&&p(this.center.direction,t.direction)<0)return!0;for(let e=0;e<4;e++){const i=this.extent[e];if(w(t.planes[j.NEAR],i.origin)<0&&p(i.direction,t.direction)<0)return!0}return!1}}const k=[{x0:0,y0:1,x1:2,y1:1},{x0:0,y0:3,x1:2,y1:3},{x0:0,y0:1,x1:0,y1:3},{x0:2,y0:1,x1:2,y1:3}],v=l(),I=r(),U=r(),L=u(),P=R(),V=A();export{_ as FrustumExtentIntersection};
