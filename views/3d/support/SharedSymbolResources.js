/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{removeUnordered as e}from"../../../core/arrayUtils.js";import t from"../../../core/Handles.js";import{makeHandle as s}from"../../../core/handleUtils.js";import{watch as i,sync as r}from"../../../core/reactiveUtils.js";import{getReferenceEllipsoid as n}from"../../../geometry/projectionEllipsoid.js";import{ClientType as c}from"./index.js";import{StreamTextureCollection as a}from"./StreamTextureCollection.js";import{getSettings as o,getLabelSettings as p}from"../webgl-engine/lib/screenSizePerspectiveUtils.js";import{TextureWrapMode as l}from"../../webgl/enums.js";class h{constructor(e){this.textures=null,this.streamDataRequester=null,this.graphicsOwners=[],this.screenSizePerspectiveHandles=null,this.cimSymbolRasterizer=null,this.viewState=e.viewState,this.view=e.view,this.pointsOfInterest=e.pointsOfInterest,this.objectResourceCache=e.objectResourceCache,this.streamDataRequester=e.resourceController.createStreamDataRequester(c.SYMBOLOGY),this.textures=new a(this.streamDataRequester,e.view._stage,{preMultiplyAlpha:!0,wrap:{s:l.CLAMP_TO_EDGE,t:l.CLAMP_TO_EDGE}},e.resourceController.scheduler);const t=n(this.view.spatialReference).radius;this.screenSizePerspectiveSettings=o(e.viewingMode,t),this.screenSizePerspectiveSettingsLabels=p(e.viewingMode,t)}destroy(){this.textures.destroy(),this.textures=null,this.streamDataRequester=null}addGraphicsOwner(t){if(!t)return s();this.graphicsOwners.push(t);const r=i((()=>t.layer?.screenSizePerspectiveEnabled),(()=>this._updateScreenSizePerspectiveEnabled()));return this._updateScreenSizePerspectiveEnabled(),s((()=>{r.remove(),e(this.graphicsOwners,t),this._updateScreenSizePerspectiveEnabled()}))}_updateScreenSizePerspectiveEnabled(){const e=this.graphicsOwners.some((e=>!0===e.layer?.screenSizePerspectiveEnabled));if(e&&!this.screenSizePerspectiveHandles){this.screenSizePerspectiveHandles=new t;const e=()=>this._updateScreenSizePerspectiveSettings();this.screenSizePerspectiveHandles.add([i((()=>this.pointsOfInterest.centerOnSurfaceInfrequent.distance),e,r),this.viewState.events.on("camera-projection-changed",e)]),this._updateScreenSizePerspectiveSettings()}else!e&&this.screenSizePerspectiveHandles&&(this.screenSizePerspectiveHandles.destroy(),this.screenSizePerspectiveHandles=null)}_updateScreenSizePerspectiveSettings(){const e=this.pointsOfInterest;S.distance=e.centerOnSurfaceInfrequent.distance,S.fovY=this.viewState.camera.fovY,this.screenSizePerspectiveSettings.update(S),this.screenSizePerspectiveSettingsLabels.update(S),this.view._stage.renderView.requestRender()}get test(){return{screenSizePerspectiveHandles:this.screenSizePerspectiveHandles}}}const S={distance:0,fovY:0};export{h as SharedSymbolResources};
