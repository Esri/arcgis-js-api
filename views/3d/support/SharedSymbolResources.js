/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../core/arrayUtils","../../../core/Handles","../../../geometry/projectionEllipsoid","./index","./StreamTextureCollection","../webgl-engine/lib/screenSizePerspectiveUtils","../../webgl/enums"],(function(e,t,s,i,r,n,c,a){"use strict";let l=function(){function e(e){this.textures=null,this.streamDataRequester=null,this.graphicsOwners=[],this.screenSizePerspectiveHandles=null,this.cimSymbolRasterizer=null,this.viewState=e.viewState,this.view=e.view,this.pointsOfInterest=e.pointsOfInterest,this.objectResourceCache=e.objectResourceCache,this.streamDataRequester=e.resourceController.createStreamDataRequester(r.ClientType.SYMBOLOGY),this.textures=new n.StreamTextureCollection(this.streamDataRequester,e.view._stage,{preMultiplyAlpha:!0,wrap:{s:a.TextureWrapMode.CLAMP_TO_EDGE,t:a.TextureWrapMode.CLAMP_TO_EDGE}},e.resourceController.scheduler);const t=i.getReferenceEllipsoid(this.view.spatialReference).radius;this.screenSizePerspectiveSettings=c.getSettings(e.viewingMode,t),this.screenSizePerspectiveSettingsLabels=c.getLabelSettings(e.viewingMode,t)}var l=e.prototype;return l.destroy=function(){this.textures.destroy(),this.textures=null,this.streamDataRequester=null},l.addGraphicsOwner=function(e){if(!e)return{remove(){}};this.graphicsOwners.push(e);const s="layer"in e?e.watch("layer.screenSizePerspectiveEnabled",(()=>this._updateScreenSizePerspectiveEnabled())):null;return this._updateScreenSizePerspectiveEnabled(),{remove:()=>{s&&(s.remove(),t.removeUnordered(this.graphicsOwners,e),this._updateScreenSizePerspectiveEnabled())}}},l._updateScreenSizePerspectiveEnabled=function(){const e=this.graphicsOwners.some((e=>!0===e.get("layer.screenSizePerspectiveEnabled")));if(e&&!this.screenSizePerspectiveHandles){this.screenSizePerspectiveHandles=new s;const e=()=>this._updateScreenSizePerspectiveSettings();this.screenSizePerspectiveHandles.add([this.pointsOfInterest.centerOnSurfaceInfrequent.watch("distance",e,!0),this.viewState.events.on("camera-projection-changed",e)]),this._updateScreenSizePerspectiveSettings()}else!e&&this.screenSizePerspectiveHandles&&(this.screenSizePerspectiveHandles.destroy(),this.screenSizePerspectiveHandles=null)},l._updateScreenSizePerspectiveSettings=function(){const e=this.pointsOfInterest;o.distance=e.centerOnSurfaceInfrequent.distance,o.fovY=this.viewState.camera.fovY,this.screenSizePerspectiveSettings.update(o),this.screenSizePerspectiveSettingsLabels.update(o),this.view._stage.renderView.requestRender()},e}();const o={distance:0,fovY:0};e.SharedSymbolResources=l,e.default=l,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
