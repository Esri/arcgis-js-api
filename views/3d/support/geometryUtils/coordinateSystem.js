/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/vec3f64","../../../../chunks/vec3","../../../../geometry/projectionEllipsoid","../../../../chunks/mat4","../geometryUtils"],(function(e,t,n,o,r,u){"use strict";function i(e){const{value:t,operations:n}=e;return{operations:n,value:n.create(t)}}function a(e,t,n){return e.operations.setExtent(e.value,t,n.value),n}function s(e){return{operations:e,value:e.create()}}function c(e,t,n=s(e)){return n.operations=e,e.copy(t,n.value),n}function l(e){return c(u.sphere,u.sphere.fromValues(0,0,0,o.getReferenceEllipsoid(e).radius))}const f=2**50;function p(){return c(u.boundedPlane,u.boundedPlane.fromValues([0,0,0],[f,0,0],[0,f,0]))}function v(e,t){return g.operations=e,g.value=t,g}function d(e,t,n){return e.operations.axisAt(e.value,t,2,n)}function y(e,t,n,o){return e.operations.axisAt(e.value,t,n,o)}function m(e,t,n){return e.operations.intersectRay(e.value,t,n)}function A(e,t){return e.operations.intersectRay(e.value,t,null)}function h(e,t,n){return e.operations.closestPoint(e.value,t,n)}function x(e,t,n){return e.operations.intersectRayClosestSilhouette(e.value,t,n)}function P(e,t,n){return e.operations.closestPointOnSilhouette(e.value,t,n)}function R(e,t){return e.operations.distanceToSilhouette(e.value,t)}function S(e,t){return e.operations.altitudeAt(e.value,t)}function O(e,t,n,o){return e.operations.setAltitudeAt(e.value,t,n,o)}function b(e,t,o,u){return t!==u&&r.copy(u,t),n.set(V,u[12],u[13],u[14]),O(e,V,o,V),u[12]=V[0],u[13]=V[1],u[14]=V[2],u}function E(e,t,n){return e.operations.elevate(e.value,t,n.value)}const V=t.create(),g={operations:null,value:null};function k(e,t,o,r,u){return u[0]=n.dot(e,t),u[1]=n.dot(e,o),u[2]=n.dot(e,r),u}function C(e,t,o,r,u){n.copy(o,e),n.copy(T,t),n.normalize(T,T),n.cross(r,T,o),n.cross(u,r,o)}const T=t.create();e.altitudeAt=S,e.axisAt=y,e.closestPoint=h,e.closestPointOnSilhouette=P,e.coordinateSystemFromOneAxisAndNormalVector=C,e.create=i,e.createFromOperations=s,e.createGlobal=l,e.createLocal=p,e.distanceToSilhouette=R,e.elevate=E,e.fromValues=c,e.intersectRay=m,e.intersectRayClosestSilhouette=x,e.intersectsRay=A,e.normalAt=d,e.setAltitudeAt=O,e.setAltitudeOfTransformation=b,e.setExtent=a,e.vectorCoordinates=k,e.wrap=v,Object.defineProperty(e,"__esModule",{value:!0})}));
