/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../core/Evented.js";import{someMap as t}from"../../../core/MapUtils.js";class s extends e{constructor(){super(...arguments),this._map=new Map}clear(){if(this._map.size>0){const e=this.toArray();this._map.clear(),this.emit("change",{added:[],removed:e})}}get length(){return this._map.size}get(e){return this._map.get(e)}addMany(e){if(0===e.length)return;const t=new Set;for(let r=0;r<e.length;r++){const s=e[r],o=s.objectId,n=this._map.get(o);n?(t.add(o),s!==n&&(e[r]=n),++n.refCount):(s.refCount=1,this._map.set(o,s))}const s=t.size>0?e.filter((e=>!t.has(e.objectId))):e;s.length>0&&this.emit("change",{added:s,removed:[]})}removeMany(e){const t=[];for(const s of e){const e=s.objectId,r=this._map.get(e);null!=r&&--r.refCount<=0&&(this._map.delete(e),t.push(s))}t.length>0&&this.emit("change",{added:[],removed:t})}removeManyByObjectId(e){const t=[];for(const s of e){const e=this._map.get(s);null!=e&&--e.refCount<=0&&(this._map.delete(s),t.push(e))}t.length>0&&this.emit("change",{added:[],removed:t})}toArray(){return[...this._map.values()]}find(e){let s;return t(this._map,(t=>!!e(t)&&(s=t,!0))),s}forEach(e){this._map.forEach((t=>e(t)))}}export{s as GraphicsMap};
