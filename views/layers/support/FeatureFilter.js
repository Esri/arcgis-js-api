/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/lang","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/jsonMap","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/decorators/writer","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/JSONSupport","../../../geometry/support/jsonUtils","../../../geometry","../../../TimeExtent","../../../tasks/support/Query"],(function(e,t,r,i,o,s,n,a,p,l,c,d,u,y,h,S,w,_){"use strict";var m;const R=new a.JSONMap({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),v=new a.JSONMap({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let b=m=function(t){function r(e){var r;return(r=t.call(this,e)||this).where=null,r.geometry=null,r.spatialRelationship="intersects",r.hiddenIds=new Set,r.distance=void 0,r.objectIds=null,r.units=null,r.timeExtent=null,r.enabled=!1,r}e._inheritsLoose(r,t);var o=r.prototype;return o.writeWhere=function(e,t){t.where=e||"1=1"},o.enable=function(){this._set("enabled",!0)},o.createQuery=function(e={}){const{where:t,geometry:r,spatialRelationship:o,timeExtent:s,objectIds:n,units:a,distance:p}=this;return new _({geometry:i.clone(r),objectIds:i.clone(n),spatialRelationship:o,timeExtent:i.clone(s),where:t,units:a,distance:p,...e})},o.clone=function(){const{where:e,geometry:t,spatialRelationship:r,hiddenIds:o,timeExtent:s,objectIds:n,units:a,distance:p}=this,l=new Set;return o.forEach((e=>l.add(e))),new m({geometry:i.clone(t),hiddenIds:l,objectIds:i.clone(n),spatialRelationship:r,timeExtent:i.clone(s),where:e,units:a,distance:p})},r}(y.JSONSupport);return t.__decorate([n.property({type:String})],b.prototype,"where",void 0),t.__decorate([l.writer("where")],b.prototype,"writeWhere",null),t.__decorate([n.property({types:S.geometryTypes,json:{read:h.fromJSON,write:!0}})],b.prototype,"geometry",void 0),t.__decorate([n.property({type:String,json:{read:{source:"spatialRel",reader:R.read},write:{target:"spatialRel",writer:R.write}}})],b.prototype,"spatialRelationship",void 0),t.__decorate([n.property({json:{write:(e,t,r)=>t[r]=Array.from(e),read:e=>new Set(e)}})],b.prototype,"hiddenIds",void 0),t.__decorate([n.property({type:Number,json:{write:{overridePolicy:e=>({enabled:e>0})}}})],b.prototype,"distance",void 0),t.__decorate([n.property({type:[Number],json:{write:!0}})],b.prototype,"objectIds",void 0),t.__decorate([n.property({type:String,json:{read:v.read,write:{writer:v.write,overridePolicy(e){return{enabled:e&&this.distance>0}}}}})],b.prototype,"units",void 0),t.__decorate([n.property({type:w,json:{write:!0}})],b.prototype,"timeExtent",void 0),t.__decorate([n.property({readOnly:!0})],b.prototype,"enabled",void 0),b=m=t.__decorate([p.subclass("esri.views.layers.support.FeatureFilter")],b),b}));
