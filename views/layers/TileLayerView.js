/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/Error","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/promiseUtils","../../renderers/support/clickToleranceUtils"],(function(e,r,t,o,a,s,c,l,u,i,p,n,y,h,d){"use strict";e.TileLayerView=e=>{let o=function(e){function t(){return e.apply(this,arguments)||this}return r._inheritsLoose(t,e),t.prototype.fetchPopupFeatures=async function(e,r){const{layer:t}=this;if(!e)return h.reject(new i("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));if("tile"!==t.type)return h.reject(new i("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:t.type}));const o=this.get("view.scale"),s=t.allSublayers.toArray().filter((e=>{const r=0===e.minScale||o<=e.minScale,t=0===e.maxScale||o>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&r&&t}));return h.eachAlways(s.map((async t=>{const o=t.createQuery(),s=a.isSome(r)?r.event:null,c=d.calculateTolerance({renderer:t.renderer,event:s});o.geometry=this.createFetchPopupFeaturesQueryGeometry(e,c),o.outFields=await t.popupTemplate.getRequiredFields();return(await t.queryFeatures(o)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))},t}(e);return t.__decorate([l.property()],o.prototype,"layer",void 0),o=t.__decorate([u.subclass("esri.layers.mixins.TileLayerView")],o),o},Object.defineProperty(e,"__esModule",{value:!0})}));
