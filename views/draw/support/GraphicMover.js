/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/lang","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/Evented","../../../core/Handles","../../../core/watchUtils","../../input/InputManager","../../support/screenUtils","./drawUtils","../../interactive/GraphicManipulator","./input/GraphicMoverEvents"],(function(i,t,e,r,a,n,o,c,s,h,p,l,v,d,u,_,G,g,y,w){"use strict";let f=function(t){function e(i){var e;return(e=t.call(this,i)||this)._activeGraphic=null,e._dragEvent=null,e._handles=new d,e._hoverGraphic=null,e._initialDragGeometry=null,e._viewHandles=new d,e._manipulators=[],e.type="graphic-mover",e.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},e.enableMoveAllGraphics=!1,e.graphics=[],e.view=null,e}i._inheritsLoose(e,t);var n=e.prototype;return n.initialize=function(){this._setUpManipulators(),this._handles.add([u.watch(this,["graphics","graphics.length"],(()=>{this._setUpManipulators()})),u.whenOnce(this,"view.ready",(()=>{this._viewHandles.add([this.view.on("immediate-click",(i=>this._clickHandler(i)),_.ViewEventPriorities.TOOL),this.view.on("double-click",(i=>this._doubleClickHandler(i)),_.ViewEventPriorities.TOOL),this.view.on("pointer-down",(i=>this._pointerDownHandler(i)),_.ViewEventPriorities.TOOL),this.view.on("pointer-move",(i=>this._pointerMoveHandler(i)),_.ViewEventPriorities.TOOL),this.view.on("pointer-up",(i=>this._pointerUpHandler(i)),_.ViewEventPriorities.TOOL),this.view.on("drag",(i=>this._dragHandler(i)),_.ViewEventPriorities.TOOL),this.view.on("key-down",(i=>this._keyDownHandler(i)),_.ViewEventPriorities.TOOL)])}))])},n.destroy=function(){this.reset(),this._manipulators.forEach((i=>i.destroy())),this._manipulators=null,this._viewHandles.removeAll(),this._handles.removeAll()},n.reset=function(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null},n.updateGeometry=function(i,t){const e=this.graphics[i];e&&e.set("geometry",t)},n._clickHandler=function(i){const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){const e=new w.GraphicClickEvent(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e)}},n._doubleClickHandler=function(i){const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){const e=new w.GraphicDoubleClickEvent(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-double-click",e),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(e)}},n._pointerDownHandler=function(i){const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){this._activeGraphic=t;const{x:e,y:r}=i,a=new w.GraphicPointerDownEvent(t,this.graphics.indexOf(t),e,r,i);this.emit("graphic-pointer-down",a),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(a)}else this._activeGraphic=null},n._pointerUpHandler=function(i){if(this._activeGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._activeGraphic),a=new w.GraphicPointerUpEvent(this._activeGraphic,r,t,e,i);this.emit("graphic-pointer-up",a),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(a)}},n._pointerMoveHandler=function(i){if(this._dragEvent)return;const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){const{x:e,y:r}=i;if(this._hoverGraphic){if(this._hoverGraphic===t)return;const a=this.graphics.indexOf(this._hoverGraphic),n=new w.GraphicPointerOutEvent(this.graphics[a],a,e,r,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",n),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(n)}const a=this.graphics.indexOf(t),n=new w.GraphicPointerOverEvent(t,a,e,r,i);return this._hoverGraphic=t,this.emit("graphic-pointer-over",n),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(n))}if(this._hoverGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._hoverGraphic),a=new w.GraphicPointerOutEvent(this.graphics[r],r,t,e,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",a),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(a)}},n._dragHandler=function(i){if("start"!==i.action&&!this._dragEvent||!this._activeGraphic||!this._activeGraphic.geometry)return;i.stopPropagation();const{action:t,x:e,y:a}=i,n=this.graphics.indexOf(this._activeGraphic),o=this._activeGraphic.geometry,c=this._dragEvent?e-this._dragEvent.x:0,s=this._dragEvent?a-this._dragEvent.y:0,h=e-i.origin.x,p=a-i.origin.y;if(this._activeGraphic.geometry=g.cloneMove(o,c,s,this.view),this.enableMoveAllGraphics&&this.graphics.forEach((i=>{i!==this._activeGraphic&&(i.geometry=g.cloneMove(i.geometry,c,s,this.view))})),this._dragEvent=i,"start"===t){this._initialDragGeometry=r.clone(o);const t=new w.GraphicMoveStartEvent(this._activeGraphic,this.graphics,n,e,a,c,s,h,p,i);this.emit("graphic-move-start",t),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(t),t.defaultPrevented&&this._activeGraphic.set("geometry",o)}else if("update"===t){const t=new w.GraphicMoveEvent(this._activeGraphic,this.graphics,n,e,a,c,s,h,p,i);this.emit("graphic-move",t),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(t),t.defaultPrevented&&this._activeGraphic.set("geometry",o)}else{const t=new w.GraphicMoveStopEvent(this._activeGraphic,this.graphics,n,e,a,c,s,h,p,i);this._dragEvent=null,this._activeGraphic=null,this.emit("graphic-move-stop",t),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(t),t.defaultPrevented&&this.graphics[n].set("geometry",this._initialDragGeometry),this._initialDragGeometry=null}},n._keyDownHandler=function(i){"a"!==i.key&&"d"!==i.key&&"n"!==i.key||"moving"!==this.state||i.stopPropagation()},n._findTargetGraphic=function(i){let t=null,e=Number.MAX_VALUE;return this._manipulators.forEach((r=>{const n=r.intersectionDistance(i);a.isSome(n)&&n<e&&(e=n,t=r.graphic)})),t},n._setUpManipulators=function(){const{graphics:i,view:t}=this;this._manipulators.forEach((i=>i.destroy())),this._manipulators=null!=i&&i.length?i.map((i=>new y.GraphicManipulator({graphic:i,view:t}))):[]},i._createClass(e,[{key:"state",get:function(){const i=!!this.get("view.ready"),t=!!this.get("graphics.length"),e=this._activeGraphic;return i&&t?e?"moving":"active":i?"ready":"disabled"}}]),e}(v.EventedAccessor);return t.__decorate([c.property()],f.prototype,"_activeGraphic",void 0),t.__decorate([c.property({readOnly:!0})],f.prototype,"type",void 0),t.__decorate([c.property()],f.prototype,"callbacks",void 0),t.__decorate([c.property()],f.prototype,"enableMoveAllGraphics",void 0),t.__decorate([c.property()],f.prototype,"graphics",void 0),t.__decorate([c.property({readOnly:!0})],f.prototype,"state",null),t.__decorate([c.property()],f.prototype,"view",void 0),f=t.__decorate([s.subclass("esri.views.draw.support.GraphicMover")],f),f}));
