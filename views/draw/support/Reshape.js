/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../geometry/Point","../../../geometry/support/coordsUtils","../../../geometry","../../../core/Evented","../../../symbols/SimpleMarkerSymbol","../../../Graphic","../../../core/Handles","../../../core/watchUtils","../../input/InputManager","./drawUtils","./layerUtils","./GraphicMover","./settings"],(function(e,t,i,s,o,n,r,c,a,h,l,p,d,u,v,y,_,m,f,g,b,x,G,w){"use strict";let S=function(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-start"},M=function(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape"},k=function(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-stop"},H=function(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-start"},E=function(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move"},I=function(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-stop"},R=function(e){this.added=e,this.type="vertex-select"},C=function(e){this.removed=e,this.type="vertex-deselect"},V=function(e,t,i,s){this.added=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"},O=function(e,t,i,s){this.removed=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"};const D={removeVertex:["Backspace","Delete"]},A=w.settings.reshapeGraphics,z={vertices:{default:new y({style:"circle",size:A.vertex.size,color:A.vertex.color,outline:{color:A.vertex.outlineColor,width:1}}),hover:new y({style:"circle",size:A.vertex.hoverSize,color:A.vertex.hoverColor,outline:{color:A.vertex.hoverOutlineColor,width:1}}),selected:new y({style:"circle",size:A.selected.size,color:A.selected.color,outline:{color:A.selected.outlineColor,width:1}})},midpoints:{default:new y({style:"circle",size:A.midpoint.size,color:A.midpoint.color,outline:{color:A.midpoint.outlineColor,width:1}}),hover:new y({style:"circle",size:A.midpoint.size,color:A.midpoint.color,outline:{color:A.midpoint.outlineColor,width:1}})}};let P=function(t){function i(e){var i;return(i=t.call(this,e)||this)._handles=new m,i._graphicAttributes={esriSketchTool:"box"},i._mover=null,i._viewHandles=new m,i._totalDx=0,i._totalDy=0,i.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},i.enableMidpoints=!0,i.graphic=null,i.handleGraphics=[],i.layer=null,i.midpointGraphics=[],i.midpointSymbol=new y({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),i.selectedHandles=[],i.type="reshape",i.view=null,i}e._inheritsLoose(i,t);var o=i.prototype;return o.initialize=function(){this._setup(),this._handles.add([f.whenOnce(this,"view.ready",(()=>{const{layer:e,view:t}=this;x.addUniqueLayer(t,e),this._viewHandles.add([t.on("key-down",(e=>this._keyDownHandler(e)),g.ViewEventPriorities.TOOL)])})),f.pausable(this,"graphic",(()=>this.refresh())),f.pausable(this,"layer",((e,t)=>{t&&(this._clearSelection(),this._resetGraphics(t)),this.refresh()})),f.pausable(this,"enableMidpoints",(()=>{this.refresh()}))])},o.destroy=function(){this._reset(),this._mover&&this._mover.destroy(),this._mover=null,this._handles.removeAll(),this._handles=null,this._viewHandles.removeAll(),this._viewHandles=null},o.isUIGraphic=function(e){const t=[];return this.graphic&&t.push(this.graphic),t.concat(this.handleGraphics,this.midpointGraphics),t.length&&t.includes(e)},o.refresh=function(){this._reset(),this._setup()},o.reset=function(){this.graphic=null},o.clearSelection=function(){this._clearSelection()},o.removeSelectedHandles=function(){this.selectedHandles.length&&this._removeVertex(this.selectedHandles)},o._setup=function(){this.graphic&&this.layer&&(this._setupGraphics(),this._setupMover())},o._reset=function(){this._clearSelection(),this._resetGraphicStateVars(),this._resetGraphics(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"},o._resetGraphicStateVars=function(){this._totalDx=0,this._totalDy=0},o._resetGraphics=function(e){const t=e||this.layer;t&&(t.removeMany(this.handleGraphics),t.removeMany(this.midpointGraphics)),this.handleGraphics.forEach((e=>e.destroy())),this.midpointGraphics.forEach((e=>e.destroy())),this._set("handleGraphics",[]),this._set("midpointGraphics",[]),this._set("selectedHandles",[])},o._setupGraphics=function(){const e=s.unwrap(this.graphic.geometry),t=d.geometryToCoordinates(e.clone());if("polygon"===e.type)for(const e of t){const t=e[e.length-1];e[0][0]===t[0]&&e[0][1]===t[1]&&e.length>2&&e.pop()}this._set("handleGraphics",this._createHandleGraphics(t)),this.enableMidpoints&&this._set("midpointGraphics",this._createMidpointGraphics(t)),this._saveRelatedIndices(this.handleGraphics),this.layer.addMany(this.midpointGraphics),this.layer.addMany(this.handleGraphics)},o._createHandleGraphics=function(e){const{_graphicAttributes:t,symbols:i,view:{spatialReference:s}}=this,o=[];return null==e||e.forEach(((e,n)=>{e.forEach(((e,r)=>{var c;const[a,h]=e;o.push(new _({geometry:new p({x:a,y:h,spatialReference:s}),symbol:null==i||null==(c=i.vertices)?void 0:c.default,attributes:{...t,pathIndex:n,pointIndex:r}}))}))})),o},o._createMidpointGraphics=function(e){const{_graphicAttributes:t,symbols:i,view:{spatialReference:o}}=this,n=[];return null==e||e.forEach(((e,r)=>{e.forEach(((c,a)=>{const[h,l]=c,u=e[a+1]?a+1:0;if("polygon"===s.get(this.graphic.geometry,"type")||0!==u){const[s,c]=e[u],[v,y]=d.getMidpoint([h,l],[s,c]);n.push(new _({geometry:new p({x:v,y:y,spatialReference:o}),symbol:i.midpoints.default,attributes:{...t,pathIndex:r,pointIndexStart:a,pointIndexEnd:u}}))}}))})),n},o._saveRelatedIndices=function(e){if(!e)return;const t=e.map((({geometry:e})=>({x:e.x,y:e.y})));for(let i=0;i<t.length;i++){const s=[];for(let e=0;e<t.length;e++){if(i===e)continue;const o=t[i],n=t[e];o.x===n.x&&o.y===n.y&&s.push(e)}e[i].attributes.relatedGraphicIndices=s}},o._setupMover=function(){this._mover=new G({enableMoveAllGraphics:!1,graphics:[].concat(this.handleGraphics,this.midpointGraphics,this.graphic),view:this.view,callbacks:{onGraphicClick:e=>this._onGraphicClickCallback(e),onGraphicMoveStart:e=>this._onGraphicMoveStartCallback(e),onGraphicMove:e=>this._onGraphicMoveCallback(e),onGraphicMoveStop:e=>this._onGraphicMoveStopCallback(e),onGraphicPointerOver:e=>this._onGraphicPointerOverCallback(e),onGraphicPointerOut:e=>this._onGraphicPointerOutCallback(e)}})},o._onGraphicClickCallback=function(e){e.viewEvent.stopPropagation();const t=e.graphic;if(t===this.graphic)this.clearSelection(),this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e);else if(this._isMidpoint(t)){if(2===e.viewEvent.button)return;const i=this.graphic.clone(),s=this._createHandleFromMidpoint(t);this.refresh(),this._emitVertexAddEvent([t],i,s)}else if(this._isHandle(t))if(e.viewEvent.stopPropagation(),2===e.viewEvent.button)this._removeVertex(t);else{e.viewEvent.native.shiftKey||this._clearSelection(),this.selectedHandles.includes(t)?this._removeFromSelection(t,!0):this._addToSelection(t)}},o._onGraphicMoveStartCallback=function(e){const t=e.graphic;if(this._resetGraphicStateVars(),t===this.graphic){const{dx:t,dy:i}=e;return this.handleGraphics.forEach((e=>e.visible=!1)),this.midpointGraphics.forEach((e=>e.visible=!1)),this._clearSelection(),void this._emitMoveStartEvent(t,i)}if(this._isMidpoint(t)){this._clearSelection();const e=this.graphic.clone(),i=this._createHandleFromMidpoint(t);this._emitVertexAddEvent([t],e,i),this._addToSelection(t)}else this.selectedHandles.includes(t)||(this._clearSelection(),this._addToSelection(t));this._emitReshapeStartEvent(t)},o._onGraphicMoveCallback=function(e){const{graphic:t,dx:i,dy:s}=e;this._totalDx+=i,this._totalDy+=s,t===this.graphic?this._emitMoveEvent(i,s):(this._syncGeometryAfterHandleMove(t,i,s),this._emitReshapeEvent(t))},o._onGraphicMoveStopCallback=function(e){const{graphic:t,dx:i,dy:s}=e;if(this._totalDx+=i,this._totalDy+=s,t===this.graphic){for(const e of[].concat(this.handleGraphics,this.midpointGraphics))e.visible=!0;this._syncGraphicsWithGeometry(),this._emitMoveStopEvent()}else this._syncGeometryAfterHandleMove(t,i,s),this._isMidpoint(t)&&this.refresh(),this._emitReshapeStopEvent(t);this._resetGraphicStateVars()},o._syncGraphicsWithGeometry=function(){const e=this.graphic.geometry,t="polyline"===e.type?e.paths:e.rings;this._updateHandleGraphicLocations(t),this._updateMidpointGraphicLocations(t)},o._updateHandleGraphicLocations=function(e){for(const t of this.handleGraphics){const{pathIndex:i,pointIndex:s}=t.attributes,[o,n]=e[i][s];t.set("geometry",new p(o,n,this.view.spatialReference))}},o._updateMidpointGraphicLocations=function(e){for(const t of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:o}=t.attributes,[n,r]=e[i][s],[c,a]=e[i][o],[h,l]=d.getMidpoint([n,r],[c,a]);t.geometry=new p({x:h,y:l,spatialReference:this.view.spatialReference})}},o._syncGeometryAfterHandleMove=function(e,t,i){const o=s.unwrap(this.graphic.geometry).clone(),n="polyline"===o.type?o.paths:o.rings,{pathIndex:r,pointIndex:c}=e.attributes,{x:a,y:h}=e.geometry,l=n[r].length-1;if(n[r][c]=[a,h],"polygon"===o.type&&(0===c?n[r][l]=[a,h]:c===l&&(n[r][0]=[a,h])),this._isHandle(e)){const{relatedGraphicIndices:s}=e.attributes;for(const t of s){const i=this.handleGraphics[t],{pathIndex:s,pointIndex:o}=i.attributes;n[s][o]=[a,h],i.geometry=e.geometry}for(const s of this.selectedHandles)if(s!==e){const{pathIndex:e,pointIndex:r,relatedGraphicIndices:c}=s.attributes,a=b.cloneMove(s.geometry,t,i,this.view),h=n[e].length-1;n[e][r]=[a.x,a.y],s.geometry=a,"polygon"===o.type&&(0===r?n[e][h]=[a.x,a.y]:r===h&&(n[e][0]=[a.x,a.y]));for(const e of c){const t=this.handleGraphics[e],{pathIndex:i,pointIndex:s}=t.attributes;n[i][s]=[a.x,a.y],t.geometry=a}}this._updateMidpointGraphicLocations(n)}this.graphic.geometry=o},o._onGraphicPointerOverCallback=function(e){const t=e.graphic;this._isHandle(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.hover),this._updateHoverCursor(t)},o._onGraphicPointerOutCallback=function(e){const t=e.graphic;this._isHandle(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.default),this.view.cursor="default"},o._createHandleFromMidpoint=function(e){const{_graphicAttributes:t}=this,i=[],o=s.unwrap(this.graphic.geometry).clone(),{pathIndex:n,pointIndexStart:r,pointIndexEnd:c}=e.attributes,{x:a,y:h}=e.geometry,l=0===c?r+1:c,p="polyline"===o.type?o.paths:o.rings;return p[n].splice(l,0,[a,h]),e.attributes={...t,pathIndex:n,pointIndex:l,relatedGraphicIndices:[]},i.push({coordinates:p[n][l],componentIndex:n,vertexIndex:l}),this.graphic.geometry=o,i},o._removeHandles=function(e){const t=s.unwrap(this.graphic.geometry).clone(),i="polygon"===t.type?t.rings:t.paths,o=[];e instanceof _&&(e=[e]);for(const t of e){const{x:e,y:s}=t.geometry;for(let t=0;t<i.length;t++){const n=i[t];for(let r=0;r<n.length;r++){const[c,a]=n[r];e===c&&s===a&&(o.push({coordinates:i[t][r],componentIndex:t,vertexIndex:r}),i[t].splice(Number(r),1))}}}if("polygon"===t.type)for(const e of i){const[t,s]=e[0],[o,n]=e[e.length-1];(1===e.length||e.length<3&&t===o&&s===n)&&i.splice(i.indexOf(e),1),e.length>2&&(t!==o||s!==n)&&e.push(e[0])}else for(const e of i)1===e.length&&i.splice(i.indexOf(e),1);return this.graphic.geometry=t,o},o._addToSelection=function(e){e instanceof _&&(e=[e]);for(const t of e)t.symbol=this.symbols.vertices.selected;this._set("selectedHandles",this.selectedHandles.concat(e)),this._emitSelectEvent(e)},o._removeFromSelection=function(e,t){const{vertices:i}=this.symbols,s=t?i.hover:i.default;e instanceof _&&(e=[e]);for(const t of e)this.selectedHandles.splice(this.selectedHandles.indexOf(t),1),this._set("selectedHandles",this.selectedHandles),t.set("symbol",s);this._emitDeselectEvent(e)},o._clearSelection=function(){if(this.selectedHandles.length){const e=this.selectedHandles;for(const e of this.selectedHandles)e.set("symbol",this.symbols.vertices.default);this._set("selectedHandles",[]),this._emitDeselectEvent(e)}},o._keyDownHandler=function(e){D.removeVertex.includes(e.key)&&!e.repeat&&this.selectedHandles.length&&this._removeVertex(this.selectedHandles)},o._removeVertex=function(e){if("polygon"===this.graphic.geometry.type&&this.handleGraphics.length<4||this.handleGraphics.length<3)return;const t=this.graphic.clone();e instanceof _&&(e=[e]);const i=this._removeHandles(e);this.refresh(),this._emitVertexRemoveEvent(e,t,i)},o._isHandle=function(e){return this.handleGraphics.includes(e)},o._isSelected=function(e){return this._isHandle(e)&&this.selectedHandles.includes(e)},o._isMidpoint=function(e){return this.midpointGraphics.includes(e)},o._updateHoverCursor=function(e){this.view.cursor=this._isMidpoint(e)?"copy":"move"},o._emitMoveStartEvent=function(e,t){const i=new H(this.graphic,e,t);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)},o._emitMoveEvent=function(e,t){const i=new E(this.graphic,e,t);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)},o._emitMoveStopEvent=function(){const e=new I(this.graphic,this._totalDx,this._totalDy);this.emit("move-stop",e),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(e)},o._emitReshapeStartEvent=function(e){const t=new S(this.graphic,e,this.selectedHandles);this.emit("reshape-start",t),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(t)},o._emitReshapeEvent=function(e){const t=new M(this.graphic,e,this.selectedHandles);this.emit("reshape",t),this.callbacks.onReshape&&this.callbacks.onReshape(t)},o._emitReshapeStopEvent=function(e){const t=new k(this.graphic,e,this.selectedHandles);this.emit("reshape-stop",t),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(t)},o._emitSelectEvent=function(e){const t=new R(e);this.emit("select",t),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(t)},o._emitDeselectEvent=function(e){const t=new C(e);this.emit("deselect",t),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(t)},o._emitVertexAddEvent=function(e,t,i){const s=new V(e,this.graphic,t,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(s)},o._emitVertexRemoveEvent=function(e,t,i){const s=new O(e,this.graphic,t,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(s)},e._createClass(i,[{key:"state",get:function(){const e=!!this.get("view.ready"),t=!(!this.get("graphic")||!this.get("layer"));return e&&t?"active":e?"ready":"disabled"}},{key:"symbols",set:function(e){const{midpoints:t=z.midpoints,vertices:i=z.vertices}=e||{};this._set("symbols",{midpoints:t,vertices:i})}}]),i}(v.EventedAccessor);return t.__decorate([r.property()],P.prototype,"callbacks",void 0),t.__decorate([r.property()],P.prototype,"enableMidpoints",void 0),t.__decorate([r.property()],P.prototype,"graphic",void 0),t.__decorate([r.property({readOnly:!0})],P.prototype,"handleGraphics",void 0),t.__decorate([r.property()],P.prototype,"layer",void 0),t.__decorate([r.property({readOnly:!0})],P.prototype,"midpointGraphics",void 0),t.__decorate([r.property()],P.prototype,"midpointSymbol",void 0),t.__decorate([r.property({readOnly:!0})],P.prototype,"selectedHandles",void 0),t.__decorate([r.property({dependsOn:["view.ready","graphic","layer"],readOnly:!0})],P.prototype,"state",null),t.__decorate([r.property({value:z})],P.prototype,"symbols",null),t.__decorate([r.property({readOnly:!0})],P.prototype,"type",void 0),t.__decorate([r.property()],P.prototype,"view",void 0),P=t.__decorate([c.subclass("esri.views.draw.support.Reshape")],P),P}));
