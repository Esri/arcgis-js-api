/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../geometry/support/coordsUtils","../../../geometry/support/boundsUtils","../../../geometry/support/aaBoundingRect"],(function(t,n,e,o){"use strict";function s(t,e,o,s){if(null==s||t.hasZ||(s=void 0),"point"===t.type)return t.x+=e,t.y+=o,t.hasZ&&null!=s&&(t.z+=s),t;if("multipoint"===t.type){const n=t.points;for(let t=0;t<n.length;t++)n[t]=r(n[t],e,o,s);return t}if("extent"===t.type)return t.xmin+=e,t.xmax+=e,t.ymin+=o,t.ymax+=o,null!=s&&(t.zmin+=s,t.zmax+=s),t;const i=n.geometryToCoordinates(t),a="polyline"===t.type?t.paths:t.rings;for(let t=0;t<i.length;t++){const n=i[t];for(let t=0;t<n.length;t++)n[t]=r(n[t],e,o,s)}return"paths"in t?t.paths=a:t.rings=a,t}function r(t,n,e,o){return i(t,t[0]+n,t[1]+e,null!=t[2]&&null!=o?t[2]+o:void 0)}function i(t,n,e,o){const s=[n,e];return t.length>2&&s.push(null!=o?o:t[2]),t.length>3&&s.push(t[3]),s}t.cloneMove=function(t,e,o,r,a){const l=t.clone(),m=r.resolution;if("point"===l.type){if(a)s(l,e*m,-o*m);else{const t=r.state.transform,n=r.state.inverseTransform,s=t[0]*l.x+t[2]*l.y+t[4],i=t[1]*l.x+t[3]*l.y+t[5];l.x=n[0]*(s+e)+n[2]*(i+o)+n[4],l.y=n[1]*(s+e)+n[3]*(i+o)+n[5]}return l}if("multipoint"===l.type){if(a)s(l,e*m,-o*m);else{const t=l.points,n=r.state.transform,s=r.state.inverseTransform;for(let r=0;r<t.length;r++){const a=t[r],l=n[0]*a[0]+n[2]*a[1]+n[4],m=n[1]*a[0]+n[3]*a[1]+n[5],x=s[0]*(l+e)+s[2]*(m+o)+s[4],y=s[1]*(l+e)+s[3]*(m+o)+s[5];t[r]=i(a,x,y,void 0)}}return l}if("extent"===l.type){if(a)s(l,e*m,-o*m);else{const t=r.state.transform,n=r.state.inverseTransform,s=t[0]*l.xmin+t[2]*l.ymin+t[4],i=t[1]*l.xmin+t[3]*l.ymin+t[5],a=t[0]*l.xmax+t[2]*l.ymax+t[4],m=t[1]*l.xmax+t[3]*l.ymax+t[5];l.xmin=n[0]*(s+e)+n[2]*(i+o)+n[4],l.ymin=n[1]*(s+e)+n[3]*(i+o)+n[5],l.xmax=n[0]*(a+e)+n[2]*(m+o)+n[4],l.ymax=n[1]*(a+e)+n[3]*(m+o)+n[5]}return l}if(a)s(l,e*m,-o*m);else{const t=n.geometryToCoordinates(l),s="polyline"===l.type?l.paths:l.rings,a=r.state.transform,m=r.state.inverseTransform;for(let n=0;n<t.length;n++){const s=t[n];for(let t=0;t<s.length;t++){const n=s[t],r=a[0]*n[0]+a[2]*n[1]+a[4],l=a[1]*n[0]+a[3]*n[1]+a[5],x=m[0]*(r+e)+m[2]*(l+o)+m[4],y=m[1]*(r+e)+m[3]*(l+o)+m[5];s[t]=i(n,x,y,void 0)}}"paths"in l?l.paths=s:l.rings=s}return l},t.getRotationAngle=function(t,n,e,o,s,r){const i=180*Math.atan2(n-o,t-e)/Math.PI;return 180*Math.atan2(n-r,t-s)/Math.PI-i},t.getScaleRatio=function(t,n,e,o,s,r){const i=Math.sqrt((e-t)*(e-t)+(o-n)*(o-n));return Math.sqrt((s-t)*(s-t)+(r-n)*(r-n))/i},t.move=s,t.scale=function(t,s,r,a){if("point"===t.type){const{x:n,y:e}=t,o=a?a[0]:n,i=a?a[1]:e,l=t.clone(),m=(n-o)*s+o,x=(e-i)*r+i;return l.x=m,l.y=x,l}if("multipoint"===t.type){const l=n.geometryToCoordinates(t),m=o.create(),[x,y,u,c]=e.getRingsOrPathsBounds(m,[l]),p=a?a[0]:(x+u)/2,f=a?a[1]:(c+y)/2,g=t.clone(),h=g.points;for(let t=0;t<h.length;t++){const n=h[t],[e,o]=n,a=(e-p)*s+p,l=(o-f)*r+f;h[t]=i(n,a,l,void 0)}return g}if("extent"===t.type){const{xmin:n,xmax:e,ymin:o,ymax:i}=t,l=a?a[0]:(n+e)/2,m=a?a[1]:(i+o)/2,x=t.clone();if(x.xmin=(n-l)*s+l,x.ymax=(i-m)*r+m,x.xmax=(e-l)*s+l,x.ymin=(o-m)*r+m,x.xmin>x.xmax){const t=x.xmin,n=x.xmax;x.xmin=n,x.xmax=t}if(x.ymin>x.ymax){const t=x.ymin,n=x.ymax;x.ymin=n,x.ymax=t}return x}const l=n.geometryToCoordinates(t),m=o.create(),[x,y,u,c]=e.getRingsOrPathsBounds(m,l),p=a?a[0]:(x+u)/2,f=a?a[1]:(c+y)/2,g=t.clone(),h="polyline"===g.type?g.paths:g.rings;for(let t=0;t<l.length;t++){const n=l[t];for(let e=0;e<n.length;e++){const o=n[e],[a,l]=o,m=(a-p)*s+p,x=(l-f)*r+f;h[t][e]=i(o,m,x,void 0)}}return"paths"in g?g.paths=h:g.rings=h,g},Object.defineProperty(t,"__esModule",{value:!0})}));
