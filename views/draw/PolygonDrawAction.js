/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/Handles","../input/InputManager","../support/screenUtils","./DrawAction","./input/DrawEvents","./input/Keys","./DrawingMode","../3d/interactive/editingTools/draw/DrawTool"],(function(e,t,i,r,o,s,n,d,h,a,c,l,v,p,u,_,w,x,m,V){"use strict";e.PolygonDrawAction=function(e){function i(t){var i;return(i=e.call(this,t)||this)._cursorScreenPoint=null,i._panEnabled=!1,i._cursorVertexAdded=!1,i._popVertexOnPointerMove=!1,i._addVertexOnPointerUp=!1,i._activePointerId=null,i._viewHandles=new v,i.mode=m.defaultDrawingMode,i.vertices=[],i}t._inheritsLoose(i,e);var r=i.prototype;return r.initialize=function(){"2d"===this.view.type?this._addViewHandles():this._addDrawTool(this.view)},r.destroy=function(){"2d"===this.view.type?(this._removeViewHandles(),this._viewHandles.destroy()):this._removeDrawTool(),this.emit("destroy")},r.addVertex=function(e,t){this.vertices.splice(t,0,e);const i={vertex:e,vertexIndex:t,undo:()=>this._undoVertexAdd(null,t),redo:()=>this._redoVertexAdd(null,e,t)};this.history.push(i),this._set("redoHistory",[]);const r=new w.VertexAddEvent(this.view,null,t,this.vertices);this.emit("vertex-add",r),r.defaultPrevented&&(this._popVertexOnPointerMove=!0,this.history.pop())},r.removeVertex=function(e){const t=this.vertices.splice(e,1)[0],i={vertex:t,vertexIndex:e,undo:()=>this._undoVertexRemove(null,t,e),redo:()=>this._redoVertexRemove(null,e)};this.history.push(i),this._set("redoHistory",[]),this.emit("vertex-remove",new w.VertexRemoveEvent(this.view,null,e,this.vertices))},r.updateVertex=function(e,t){const i=this.vertices[t];this.vertices[t]=e;const r={vertex:e,vertexIndex:t,undo:()=>this._undoVertexUpdate(null,i,t),redo:()=>this._redoVertexUpdate(null,e,t)};this.history.push(r),this._set("redoHistory",[]),this.emit("vertex-update",new w.VertexUpdateEvent(this.view,null,t,this.vertices))},r.complete=function(){"2d"===this.view.type?this._completeDrawing():this._drawTool.completeCreateOperation()},r.getGeometryZValue=function(){return this.vertices.length>0&&this.vertices[0].length>2?this.vertices[0][2]:this._get("defaultZ")},r._addViewHandles=function(){this._removeViewHandles(),this._viewHandles.add([this.view.on("click",(e=>{e.stopPropagation()}),p.ViewEventPriorities.TOOL),this.view.on("pointer-down",(e=>{this._shouldHandlePointerEvent(e)&&(this._panEnabled||(this._activePointerId=e.pointerId,this._addVertexOnPointerUp=!0,this._cursorScreenPoint=u.createScreenPointFromEvent(e),"touch"===e.pointerType&&this._updateCursor(e.native)))}),p.ViewEventPriorities.TOOL),this.view.on("pointer-move",(e=>{this._popVertexOnPointerMove&&(this.vertices.pop(),this._popVertexOnPointerMove=!1),this._cursorScreenPoint=u.createScreenPointFromEvent(e),"touch"!==e.pointerType&&this._updateCursor(e.native)}),p.ViewEventPriorities.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._cursorScreenPoint=u.createScreenPointFromEvent(e),this._dragEnabled&&!this._panEnabled?this._vertexAddHandler(e):this._addVertexOnPointerUp=!1)}),p.ViewEventPriorities.TOOL),this.view.on("pointer-up",(e=>{if(this._shouldHandlePointerEvent(e))if(this._activePointerId=null,this._addVertexOnPointerUp){if(!this._clickEnabled)return 1===this.vertices.length&&this.vertices.pop(),void this._drawCompleteHandler(e);this._vertexAddHandler(e)}else{const t="touch"===e.pointerType;this._updateCursor(e.native,t)}}),p.ViewEventPriorities.TOOL),this.view.on("drag",(e=>{this._dragEnabled&&o.isSome(this._activePointerId)&&!this._panEnabled&&e.stopPropagation()}),p.ViewEventPriorities.TOOL),this.view.on("drag",["Shift"],(e=>{e.stopPropagation()}),p.ViewEventPriorities.TOOL),this.view.on("double-click",(e=>{e.stopPropagation(),this._drawCompleteHandler(e)}),p.ViewEventPriorities.TOOL),this.view.on("double-click",["Control"],(e=>{e.stopPropagation(),this._drawCompleteHandler(e)}),p.ViewEventPriorities.TOOL),this.view.on("key-down",(e=>{const{key:t,repeat:i}=e;t===x.KEYS.vertexAddKey&&!i&&this._cursorScreenPoint?(e.stopPropagation(),this._vertexAddHandler(e)):t===x.KEYS.drawCompleteKey&&!i&&this._cursorScreenPoint&&this.vertices.length>2?(e.stopPropagation(),this._vertexAddHandler(e),this._drawCompleteHandler(e)):t!==x.KEYS.undoKey||this.interactiveUndoDisabled||i?t!==x.KEYS.redoKey||this.interactiveUndoDisabled||i?t!==x.KEYS.panKey||i||(e.stopPropagation(),this._panEnabled=!0):(e.stopPropagation(),this.redo()):(e.stopPropagation(),this.undo())}),p.ViewEventPriorities.TOOL),this.view.on("key-up",(e=>{e.key===x.KEYS.panKey&&(e.stopPropagation(),this._panEnabled=!1)}),p.ViewEventPriorities.TOOL)])},r._removeViewHandles=function(){this._viewHandles.removeAll()},r._addDrawTool=function(e){this._drawTool=new V.DrawTool({view:e,elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"polygon",mode:this.mode}),this.view.toolViewManager.tools.push(this._drawTool),this.view.activeTool=this._drawTool,this._drawTool.on("vertex-add",(e=>{1===e.vertices.length&&this.emit("vertex-add",new w.VertexAddEvent(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("cursor-update",(e=>{1===e.vertices.length&&this.emit("cursor-update",new w.CursorUpdateEvent(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("complete",(e=>{this.emit("draw-complete",new w.DrawCompleteEvent(null,this._drawTool.getVertexCoords())),this._removeDrawTool()}))},r._removeDrawTool=function(){o.isSome(this._drawTool)&&(this.view.tools.remove(this._drawTool),this._drawTool.destroy(),this._drawTool=null)},r._addVertex=function(e,t){if(this._popCursorVertex(),this.isDuplicateVertex(this.vertices,e))return;const i=this.vertices.length;this.vertices.push(e);const r={vertex:e,vertexIndex:i,undo:()=>this._undoVertexAdd(t,i),redo:()=>this._redoVertexAdd(t,e,i)};this.history.push(r),this._set("redoHistory",[]);const o=new w.VertexAddEvent(this.view,t,i,this.vertices);this.emit("vertex-add",o),o.defaultPrevented&&(this._popVertexOnPointerMove=!0,this.history.pop())},r._updateCursor=function(e,t=!1){if(this._popCursorVertex(),!this._cursorScreenPoint)return;let i=null,r=null;const s=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);o.isSome(s)&&(i=s.mapPoint,t||(r=this._pushCursorVertex(s.vertex)));const n=new w.CursorUpdateEvent(this.view,e,r,this.vertices,i);this.emit("cursor-update",n)},r._completeDrawing=function(e){if(this._activePointerId=null,this._popCursorVertex(),this.vertices.length<3)return;const t=new w.DrawCompleteEvent(e,this.vertices);this.emit("draw-complete",t),t.defaultPrevented||this._removeViewHandles()},r._undoVertexAdd=function(e,t){this.vertices.splice(t,1),this.emit("undo",new w.VertexRemoveEvent(this.view,e,t,this.vertices))},r._redoVertexAdd=function(e,t,i){this.vertices.splice(i,0,t),this.emit("redo",new w.VertexAddEvent(this.view,e,i,this.vertices))},r._undoVertexRemove=function(e,t,i){this.vertices.splice(i,0,t),this.emit("undo",new w.VertexAddEvent(this.view,e,i,this.vertices))},r._redoVertexRemove=function(e,t){this.vertices.splice(t,1),this.emit("redo",new w.VertexRemoveEvent(this.view,e,t,this.vertices))},r._undoVertexUpdate=function(e,t,i){this.vertices[i]=t,this.emit("undo",new w.VertexUpdateEvent(this.view,e,i,this.vertices))},r._redoVertexUpdate=function(e,t,i){this.vertices[i]=t,this.emit("redo",new w.VertexUpdateEvent(this.view,e,i,this.vertices))},r._pushCursorVertex=function(e){return this._popCursorVertex(),this.vertices.push(e),this._cursorVertexAdded=!0,this.vertices.length-1},r._popCursorVertex=function(){this._cursorVertexAdded&&(this.vertices.pop(),this._cursorVertexAdded=!1)},r._shouldHandlePointerEvent=function(e){return function(e){return"mouse"!==e.pointerType||0===e.button}(e)&&(o.isNone(this._activePointerId)||this._activePointerId===e.pointerId)},r._vertexAddHandler=function(e){if(this._cursorVertexAdded){const t=this.vertices[this.vertices.length-1];this._addVertex(t,e.native)}else{const t=this.getCoordsFromScreenPoint(this._cursorScreenPoint);o.isSome(t)&&this._addVertex(t,e.native)}},r._drawCompleteHandler=function(e){this._completeDrawing(e.native)},t._createClass(i,[{key:"_clickEnabled",get:function(){return"click"===this.mode||"hybrid"===this.mode}},{key:"_dragEnabled",get:function(){return"freehand"===this.mode||"hybrid"===this.mode}}]),i}(_),i.__decorate([d.property({dependsOn:["mode"]})],e.PolygonDrawAction.prototype,"_clickEnabled",null),i.__decorate([d.property({dependsOn:["mode"]})],e.PolygonDrawAction.prototype,"_dragEnabled",null),i.__decorate([d.property({type:m.drawingModes})],e.PolygonDrawAction.prototype,"mode",void 0),i.__decorate([d.property({readOnly:!0})],e.PolygonDrawAction.prototype,"vertices",void 0),e.PolygonDrawAction=i.__decorate([h.subclass("esri.views.draw.PolygonDrawAction")],e.PolygonDrawAction),Object.defineProperty(e,"__esModule",{value:!0})}));
