/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/Evented","../../core/HandleOwner","../../core/lang","../../core/maybe","../../core/promiseUtils","../../core/reactiveUtils","../../core/screenUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/subclass","../../layers/graphics/dehydratedFeatureComparison","../../support/elevationInfoUtils","../ViewingMode","./DrawingMode","./DrawManipulator","../interactive/coordinateHelper","../interactive/dragEventPipeline","../interactive/editGeometry/EditGeometry","../interactive/editGeometry/EditGeometryOperations","../interactive/sketch/SketchLabelOptions","../interactive/sketch/SketchTooltipOptions","../interactive/snapping/SnappingContext","../interactive/snapping/SnappingDragPipelineStep","../interactive/snapping/SnappingOperation","../interactive/snapping/snappingUtils"],(function(e,t,i,n,o,r,a,s,p,c,d,l,h,u,g,m,y,v,_,f,x,S,w,O,D,b,V,M){"use strict";function T(e,t,i){const n=e.x-t.x,o=e.y-t.y;return n*n+o*o<=i}e.DrawOperation=function(e){function i(t){var i;return(i=e.call(this,t)||this)._createOperationCompleted=!1,i._pointerDownStates=new Set,i.isDraped=!0,i.labelOptions=new w,i.tooltipOptions=new O,i.snapToSceneEnabled=null,i.lastVertex=null,a.isNone(t.elevationInfo)&&(i.elevationInfo=g.getEffectiveElevationInfo(!!t.hasZ)),i}t._inheritsLoose(i,e);var n=i.prototype;return n.initialize=function(){const{geometryType:e,view:t}=this,i=t.spatialReference,n="viewingMode"in t.state?t.state.viewingMode:m.ViewingMode.Local,o="segment"===e||"multipoint"===e?"polyline":e;this.coordinateHelper=_.createCoordinateHelper(this.hasZ,this.hasM,i),this._editGeometryOperations=new S.EditGeometryOperations(new x.EditGeometry(o,this.coordinateHelper)),this._snappingOperation=new V.SnappingOperation({view:t,constrainResult:e=>a.isNone(e)?e:this._getEffectiveDrawSurface()?.constrainZ(e)}),this.handles.add(p.watch((()=>this.stagedVertex),(e=>{a.isNone(e)||this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)}],operation:"apply",type:"vertex-update"})}),{sync:!0,equals:(e,t)=>a.equalsMaybe(e,t,u.pointEquals)})),this._activeComponent=new x.Component(i,n),this._editGeometryOperations.data.components.push(this._activeComponent);const r=this.segmentLabels;a.isSome(r)&&(r.context={view:t,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions},this.handles.add([p.watch((()=>this.labelOptions.enabled),(e=>{r.visible=e}),p.syncAndInitial),this.on("cursor-update",(()=>{const e=this.stagedVertex;r.stagedVertex=a.isSome(e)?this.coordinateHelper.pointToVector(e):null}))])),this.handles.add(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.vectorToArray(e.pos)}))),i=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":this.emit(e.type,{...e,added:i,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:i,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:i,vertices:t})}const n=this._activeComponent.getLastVertex(),o=a.isSome(n)?this.coordinateHelper.vectorToDehydratedPoint(n.pos):null;(a.isNone(o)||a.isNone(this.lastVertex)||!u.pointEquals(this.lastVertex,o))&&(this.lastVertex=o)}))),this._manipulator=new v.DrawManipulator({grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size}),this.manipulators.add(this._manipulator),this._manipulator.grabbable="point"!==e,this.handles.add([this._createManipulatorDragPipeline(this._manipulator),this._manipulator.events.on("immediate-click",(e=>this._onImmediateClick(e))),this._manipulator.events.on("immediate-double-click",(e=>this._onImmediateDoubleClick(e)))]),M.setupSnappingToggleHandles(this,(()=>{const e=a.unwrapOr(this.view.inputManager.latestPointerType,"mouse"),t=this._getSnappingContext(e);a.isSome(this.snappingManager)&&this.updatingHandles.addPromise(s.ignoreAbortErrors(this._snappingOperation.resnap(this.snappingManager,t)))}))},n.destroy=function(){a.destroyMaybe(this.segmentLabels),a.destroyMaybe(this._snappingOperation),this._editGeometryOperations=a.destroyMaybe(this._editGeometryOperations)},n.cancel=function(){this.complete({aborted:!0})},n.commitStagedVertex=function(){if(this._snappingOperation.abort(),a.isSome(this.stagedVertex)){const{stagedVertex:e}=this;this.stagedVertex=null,this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}},n.complete=function(e){const t=e&&e.aborted||!1;this._snappingOperation.abort(),a.isSome(this.snappingManager)&&this.snappingManager.doneSnapping(),"segment"===this.geometryType||"point"===this.geometryType?this.commitStagedVertex():this.stagedVertex=null;const i="multipoint"===this.geometryType&&0===this.numVertices||"polyline"===this.geometryType&&this.numVertices<2||"polygon"===this.geometryType&&this.numVertices<3;this._createOperationCompleted=!i,(this.isCompleted||t)&&this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:t,type:"complete"})},n.onInputEvent=function(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}},n.redo=function(){this._editGeometryOperations.redo()},n.undo=function(){a.isSome(this.snappingManager)&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()},n._closeOnClickVertexIndex=function(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(t.vertices[0].pos,e))return 0;if(this._vertexWithinPointerDistance(t.vertices[t.vertices.length-1].pos,e))return t.vertices.length-1}return null},n._createManipulatorDragPipeline=function(e){switch(a.unwrap(this.drawingMode)){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}},n._createManipulatorDragPipelineClick=function(e){return f.createManipulatorDragEventPipeline(e,((e,t,i,n)=>{const o="touch"===n&&this._snappingEnabled;if(this.isCompleted||!o)return;const{snappingStep:r,cancelSnapping:s}=b.createSnapDragEventPipelineStep({predicate:()=>o,snappingManager:this.snappingManager,snappingContext:new D.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:n,visualizer:this.snappingVisualizer}),updatingHandles:this.updatingHandles,useZ:!this._requiresScenePoint});i=i.next((e=>(o&&a.isSome(this.snappingManager)&&this.snappingManager.doneSnapping(),e))).next(s),t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||o&&0===this.numVertices)&&this.commitStagedVertex()),e))).next(f.sceneSnappingAtLocation(this.view,this.elevationInfo)).next(...r).next((e=>(o&&(this.stagedVertex=e.mapEnd,"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e)))}))},n._createManipulatorDragPipelineFreehand=function(e){return f.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(a.isNone(this.stagedVertex)&&(this.stagedVertex=e.mapStart),"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))},n._createManipulatorDragPipelineHybrid=function(e){return f.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(a.isNone(this.stagedVertex)&&(this.stagedVertex=e.mapStart),this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))},n._getEffectiveDrawSurface=function(){if(a.isNone(this.elevationDrawSurface))return this.drawSurface;if(!this.coordinateHelper.hasZ())return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let e=this.defaultZ,t=!1;return a.isSome(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(t=!0),a.isSome(this.snapToSceneEnabled)&&(t=this.snapToSceneEnabled),a.isSome(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(t=!1),this._drawAtFixedElevation&&(e=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),t=!1),t?this.drawSurface:(this.elevationDrawSurface.defaultZ=e,this.elevationDrawSurface)},n._mapToScreen=function(e){return this._getEffectiveDrawSurface()?.mapToScreen(e)},n._onHold=function(e){this._snappingOperation.abort(),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()},n._onImmediateClick=function(e){if("mouse"===e.pointerType&&2===e.button||this._manipulator.dragging)return;const t=this._activeComponent,i=this._closeOnClickVertexIndex(e.screenPoint);if(a.isSome(i))return e.stopPropagation(),void this.complete();const n=this._screenToMap(e.screenPoint);if(a.isSome(n))switch(this.drawingMode){case"freehand":"point"===this.geometryType&&(a.isSome(this.stagedVertex)?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),this.complete());break;case"click":case"hybrid":this._snappingOperation.abort(),a.isSome(this.stagedVertex)?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),("point"===this.geometryType||"segment"===this.geometryType&&2===t.vertices.length||"segment"===this.geometryType&&"hybrid"===this.drawingMode&&1===t.vertices.length)&&this.complete()}e.stopPropagation()},n._onImmediateDoubleClick=function(e){this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())},n._onPointerMove=function(e){const t=c.createScreenPoint(e.x,e.y),i=this._snappingOperation;if(this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return void i.abort();e.stopPropagation();const n=this._closeOnClickVertexIndex(t);if(a.isSome(n))return this._closeOnVertex(n),void i.abort();const o=this._screenToMap(t),r=this._requiresScenePoint?this.drawSurface?.screenToMap(t):null;if(this._manipulator.cursor=a.isSome(o)?"crosshair":null,a.isNone(o))return void i.abort();const p=this.snappingManager;if(a.isNone(p))return this.stagedVertex=o,void i.abort();const d=this._getSnappingContext(e.pointerType);this.updatingHandles.addPromise(s.ignoreAbortErrors(i.snap({point:o,scenePoint:r},p,d)))},n._closeOnVertex=function(e){this.stagedVertex=null;const t={componentIndex:0,vertexIndex:e,coordinates:this.coordinateHelper.vectorToArray(this._activeComponent.vertices[e].pos)};this.emit("cursor-update",{updated:null,vertices:[t],operation:"apply",type:"vertex-update"})},n._screenToMap=function(e){return this._getEffectiveDrawSurface()?.screenToMap(e)},n._screenToMapDragEventStep=function(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),a.isNone(e))return null;const i=this._screenToMap(t.screenEnd);return a.isSome(i)?{...t,mapStart:e,mapEnd:i}:null}},n._vertexWithinPointerDistance=function(e,t){const i=25,n=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return!!a.isSome(n)&&T(n,t,i)},n._getSnappingContext=function(e){const t=this._drawAtFixedElevation?a.applySome(this.elevationDrawSurface,(({defaultZ:e})=>e)):null;return new D.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e,visualizer:this.snappingVisualizer,selfSnappingZ:a.isSome(t)?{value:t,elevationInfo:this.elevationInfo}:null})},t._createClass(i,[{key:"_snappingEnabled",get:function(){return a.isSome(this.snappingManager)&&this.snappingManager.options.effectiveEnabled}},{key:"_requiresScenePoint",get:function(){const e=this._getEffectiveDrawSurface();return"3d"===this.view.type&&this.drawSurface!==e}},{key:"canRedo",get:function(){return this._editGeometryOperations.canRedo}},{key:"canUndo",get:function(){return this._editGeometryOperations.canUndo}},{key:"committedVertices",get:function(){return this._activeComponent.vertices.map((e=>this.coordinateHelper.vectorToArray(e.pos)))}},{key:"drawingMode",set:function(e){this._set("drawingMode",e??y.defaultDrawingMode)}},{key:"interactive",get:function(){return this._manipulator.interactive},set:function(e){this._manipulator.interactive=e}},{key:"isCompleted",get:function(){return this._createOperationCompleted}},{key:"numCommittedVertices",get:function(){return this._activeComponent.vertices.length}},{key:"numVertices",get:function(){return a.isSome(this.stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}},{key:"snappingOptions",get:function(){return a.isSome(this.snappingManager)?this.snappingManager.options:null}},{key:"stagedVertex",get:function(){return this._snappingOperation.stagedPoint},set:function(e){this._snappingOperation.stagedPoint=r.clone(e)}},{key:"updating",get:function(){return this.updatingHandles.updating}},{key:"vertices",get:function(){const e=this.committedVertices;return a.isSome(this.stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this.stagedVertex)),e}},{key:"_drawAtFixedElevation",get:function(){return("segment"===this.geometryType||"polygon"===this.geometryType)&&this.numCommittedVertices>0}}]),i}(n.EventedMixin(o.HandleOwner)),i.__decorate([d.property()],e.DrawOperation.prototype,"_snappingEnabled",null),i.__decorate([d.property()],e.DrawOperation.prototype,"defaultZ",void 0),i.__decorate([d.property()],e.DrawOperation.prototype,"isDraped",void 0),i.__decorate([d.property({value:y.defaultDrawingMode})],e.DrawOperation.prototype,"drawingMode",null),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationDrawSurface",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationInfo",void 0),i.__decorate([d.property({constructOnly:!0,type:w})],e.DrawOperation.prototype,"labelOptions",void 0),i.__decorate([d.property({constructOnly:!0,type:O})],e.DrawOperation.prototype,"tooltipOptions",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"geometryType",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"hasM",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"hasZ",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"manipulators",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"drawSurface",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"segmentLabels",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingManager",void 0),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingVisualizer",void 0),i.__decorate([d.property()],e.DrawOperation.prototype,"snapToSceneEnabled",void 0),i.__decorate([d.property()],e.DrawOperation.prototype,"_snappingOperation",void 0),i.__decorate([d.property()],e.DrawOperation.prototype,"stagedVertex",null),i.__decorate([d.property()],e.DrawOperation.prototype,"lastVertex",void 0),i.__decorate([d.property()],e.DrawOperation.prototype,"updating",null),i.__decorate([d.property({constructOnly:!0})],e.DrawOperation.prototype,"view",void 0),e.DrawOperation=i.__decorate([h.subclass("esri.views.draw.DrawOperation")],e.DrawOperation),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
