/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/Evented","../../core/HandleOwner","../../core/lang","../../core/maybe","../../core/promiseUtils","../../core/screenUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/subclass","../../layers/graphics/dehydratedFeatureComparison","../ViewingMode","./DrawManipulator","./DrawingMode","../interactive/coordinateHelper","../interactive/dragEventPipeline","../interactive/editGeometry/EditGeometry","../interactive/editGeometry/EditGeometryOperations","../interactive/snapping/SnappingContext","../interactive/snapping/SnappingDragPipelineStep","../support/Scheduler"],(function(e,t,i,n,r,o,a,s,p,c,d,h,l,g,u,m,y,_,v,f,x,S,T){"use strict";function w(e,t,i){const n=e.x-t.x,r=e.y-t.y;return n*n+r*r<=i}e.DrawOperation=function(e){function i(t){var i;return(i=e.call(this,t)||this)._createOperationCompleted=!1,i._pointerDownStates=new Set,i._snappingPipeline=new S.SnappingPipeline,i._snappingTask=null,i._stagedVertex=null,i.snapToSceneEnabled=null,a.isNone(t.elevationInfo)&&(i.elevationInfo={mode:t.hasZ?"absolute-height":"on-the-ground",offset:0}),i}t._inheritsLoose(i,e);var n=i.prototype;return n.initialize=function(){var e,t;this.coordinateHelper=y.createCoordinateHelper(this.hasZ,this.hasM,this.view.spatialReference);const i="3d"===this.view.type?null==(e=this.view)||null==(t=e.resourceController)?void 0:t.scheduler:null;this._frameTask=i?i.registerTask(T.TaskPriority.SNAPPING):T.ImmediateTask;const n="viewingMode"in this.view.state?this.view.state.viewingMode:g.ViewingMode.Local,r="segment"===this.geometryType||"multipoint"===this.geometryType?"polyline":this.geometryType;this._editGeometryOperations=new f.EditGeometryOperations(new v.EditGeometry(r,this.coordinateHelper,n)),this._activeComponent=new v.Component(this.spatialReference,n),this._editGeometryOperations.data.components.push(this._activeComponent),this.handles.add(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.vectorToArray(e.pos)}))),i=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":this.emit(e.type,{...e,added:i,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:i,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:i,vertices:t})}}))),this._manipulator=new u.DrawManipulator({grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size}),this.manipulators.add(this._manipulator),this._manipulator.grabbable="point"!==this.geometryType,this.handles.add([this._createManipulatorDragPipeline(this._manipulator),this._manipulator.events.on("immediate-click",(e=>this._onImmediateClick(e))),this._manipulator.events.on("immediate-double-click",(e=>this._onImmediateDoubleClick(e)))])},n.destroy=function(){this._editGeometryOperations=a.destroyMaybe(this._editGeometryOperations),this._frameTask=a.removeMaybe(this._frameTask)},n.cancel=function(){this.complete({aborted:!0})},n.commitStagedVertex=function(){if(this._snappingTask=a.abortMaybe(this._snappingTask),a.isSome(this._stagedVertex)){const e=this._stagedVertex;this._stagedVertex=null,this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}},n.complete=function(e){const t=e&&e.aborted||!1;a.abortMaybe(this._snappingTask),a.isSome(this.snappingManager)&&this.snappingManager.doneSnapping(),"segment"===this.geometryType||"point"===this.geometryType?this.commitStagedVertex():this.discardStagedVertex();const i="multipoint"===this.geometryType&&0===this.numVertices||"polyline"===this.geometryType&&this.numVertices<2||"polygon"===this.geometryType&&this.numVertices<3;this._createOperationCompleted=!i,(this.isCompleted||t)&&this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:t,type:"complete"})},n.discardStagedVertex=function(){this._stagedVertex=null},n.onInputEvent=function(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}},n.redo=function(){this._editGeometryOperations.redo()},n.undo=function(){a.isSome(this.snappingManager)&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()},n._closeOnClickVertexIndex=function(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(t.vertices[0].pos,e))return 0;if(this._vertexWithinPointerDistance(t.vertices[t.vertices.length-1].pos,e))return t.vertices.length-1}return null},n._createManipulatorDragPipeline=function(e){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}},n._createManipulatorDragPipelineClick=function(e){return _.createManipulatorDragEventPipeline(e,((e,t,i,n)=>{const r="touch"===n&&this._snappingEnabled;!this.isCompleted&&r&&(t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||r&&0===this.numVertices)&&this.commitStagedVertex()),e))).next(this._snappingPipeline.createSnapDragEventPipelineStep({predicate:()=>r,cancel:i,snappingManager:this.snappingManager,snappingContext:new x.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:n,visualizer:this.snappingVisualizer}),updatingHandles:this.updatingHandles}),this._snappingPipeline.next).next((e=>(r&&(this.stagedVertex=e.mapEnd,"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e))),i.next((()=>{r&&a.isSome(this.snappingManager)&&this.snappingManager.doneSnapping()})))}))},n._createManipulatorDragPipelineFreehand=function(e){return _.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(a.isNone(this.stagedVertex)&&(this.stagedVertex=e.mapStart),"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))},n._createManipulatorDragPipelineHybrid=function(e){return _.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(a.isNone(this.stagedVertex)&&(this.stagedVertex=e.mapStart),this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))},n._getDrawSurface=function(){if(a.isNone(this.elevationDrawSurface))return this.drawSurface;if(!this.coordinateHelper.hasZ)return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let e=this.defaultZ,t=!1;a.isSome(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(t=!0),a.isSome(this.snapToSceneEnabled)&&(t=this.snapToSceneEnabled),a.isSome(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(t=!1);const i=this._activeComponent.vertices.length;return("segment"===this.geometryType||"polygon"===this.geometryType)&&i>0&&(e=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),t=!1),t?this.drawSurface:(this.elevationDrawSurface.defaultZ=e,this.elevationDrawSurface)},n._mapToScreen=function(e){return this._getDrawSurface().mapToScreen(e)},n._onHold=function(e){a.abortMaybe(this._snappingTask),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()},n._onImmediateClick=function(e){if("mouse"===e.pointerType&&2===e.button||this._manipulator.dragging)return;const t=this._activeComponent,i=this._closeOnClickVertexIndex(e.screenPoint);if(a.isSome(i))return e.stopPropagation(),this.discardStagedVertex(),void this.complete();const n=this._screenToMap(e.screenPoint);if(a.isSome(n))switch(this.drawingMode){case"freehand":"point"===this.geometryType&&(this.hasStagedVertex?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),this.complete());break;case"click":case"hybrid":this._snappingTask=a.abortMaybe(this._snappingTask),this.hasStagedVertex?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),("point"===this.geometryType||"segment"===this.geometryType&&2===t.vertices.length||"segment"===this.geometryType&&"hybrid"===this.drawingMode&&1===t.vertices.length)&&this.complete()}e.stopPropagation()},n._onImmediateDoubleClick=function(e){this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())},n._onPointerMove=function(e){var i=this;if(a.abortMaybe(this._snappingTask),this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return;const n=p.createScreenPoint(e.x,e.y),r=this._closeOnClickVertexIndex(n);if(a.isSome(r)){this.discardStagedVertex();const e={componentIndex:0,vertexIndex:r,coordinates:this.coordinateHelper.vectorToArray(this._activeComponent.vertices[r].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}else{const r=this._screenToMap(n);if(this._manipulator.cursor=a.isSome(r)?"crosshair":null,a.isSome(r))if(a.isSome(this.snappingManager)){const n=this.snappingManager,o=new x.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e.pointerType,visualizer:this.snappingVisualizer});this.stagedVertex=n.update(r,o),this._snappingTask=s.createTask(function(){var e=t._asyncToGenerator((function*(e){const t=yield i._frameTask.schedule((()=>n.snap(r,o,e)),e);t.valid&&(yield i._frameTask.schedule((()=>{i.stagedVertex=t.apply()}),e))}));return function(t){return e.apply(this,arguments)}}()),this.updatingHandles.addPromise(this._snappingTask.promise)}else this.stagedVertex=r}e.stopPropagation()},n._screenToMap=function(e){return this._getDrawSurface().screenToMap(e)},n._screenToMapDragEventStep=function(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),a.isNone(e))return null;const i=this._screenToMap(t.screenEnd);return a.isSome(i)?{...t,mapStart:e,mapEnd:i}:null}},n._vertexWithinPointerDistance=function(e,t){const i=25,n=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return!!a.isSome(n)&&w(n,t,i)},t._createClass(i,[{key:"_snappingEnabled",get:function(){return a.isSome(this.snappingManager)&&this.snappingManager.options.effectiveEnabled}},{key:"canRedo",get:function(){return this._editGeometryOperations.canRedo}},{key:"canUndo",get:function(){return this._editGeometryOperations.canUndo}},{key:"committedVertices",get:function(){return this._activeComponent.vertices.map((e=>this.coordinateHelper.vectorToArray(e.pos)))}},{key:"drawingMode",set:function(e){this._set("drawingMode",null!=e?e:m.defaultDrawingMode)}},{key:"hasStagedVertex",get:function(){return a.isSome(this._stagedVertex)}},{key:"interactive",get:function(){return this._manipulator.interactive},set:function(e){this._manipulator.interactive=e}},{key:"isCompleted",get:function(){return this._createOperationCompleted}},{key:"numCommittedVertices",get:function(){return this._activeComponent.vertices.length}},{key:"numVertices",get:function(){return a.isSome(this._stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}},{key:"spatialReference",get:function(){return this.view.spatialReference}},{key:"stagedVertex",get:function(){return this._stagedVertex},set:function(e){if(a.isNone(e))this.discardStagedVertex();else if(!a.isSome(this._stagedVertex)||!l.pointEquals(this._stagedVertex,e)){if(a.isNone(this._stagedVertex))this._stagedVertex=o.clone(e);else{if(l.pointEquals(this._stagedVertex,e))return;this._stagedVertex.x=e.x,this._stagedVertex.y=e.y,this._stagedVertex.z=e.z,this._stagedVertex.m=e.m,this._stagedVertex.hasZ=e.hasZ,this._stagedVertex.hasM=e.hasM,this._stagedVertex.spatialReference=e.spatialReference}this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)}],operation:"apply",type:"vertex-update"})}}},{key:"updating",get:function(){return this.updatingHandles.updating}},{key:"vertices",get:function(){const e=this.committedVertices;return a.isSome(this._stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this._stagedVertex)),e}}]),i}(n.EventedMixin(r.HandleOwner)),i.__decorate([c.property()],e.DrawOperation.prototype,"defaultZ",void 0),i.__decorate([c.property({value:m.defaultDrawingMode})],e.DrawOperation.prototype,"drawingMode",null),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationDrawSurface",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationInfo",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"geometryType",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"hasM",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"hasZ",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"manipulators",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"drawSurface",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingManager",void 0),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingVisualizer",void 0),i.__decorate([c.property()],e.DrawOperation.prototype,"snapToSceneEnabled",void 0),i.__decorate([c.property({readOnly:!0})],e.DrawOperation.prototype,"updating",null),i.__decorate([c.property({constructOnly:!0})],e.DrawOperation.prototype,"view",void 0),e.DrawOperation=i.__decorate([h.subclass("esri.views.draw.DrawOperation")],e.DrawOperation),Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
