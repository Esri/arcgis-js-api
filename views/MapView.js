/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/maybe","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/subclass","../core/Error","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../core/promiseUtils","../core/Collection","../Graphic","../core/CollectionFlattener","../core/watchUtils","../webmap/background/ColorBackground","../core/workers/workers","./support/screenshotUtils","./DOMContainer","./support/screenUtils","./BreakpointsOwner","./MapViewBase","./2d/input/MapViewInputManager","./2d/support/HighlightOptions","./support/WebGLRequirements","./ui/2d/DefaultUI2D"],(function(e,t,i,r,n,s,a,o,p,h,c,l,d,u,g,y,w,_,f,v,m,V,b,M,S,O,k,C,E){"use strict";const L=s.getLogger("esri.views.MapView");let x,N,P,R,W;function U(e,t,i){if(e)if(Array.isArray(e)||g.isCollection(e)){if(0===e.length)return;e.forEach((e=>U(e,t,i)))}else!function(e){return e instanceof y}(e)?i.add(e):t.add(e)}let z=function(i){function s(e){var r;return(r=i.call(this,e)||this)._magnifierView=null,r._stage=null,r._resolveWhenReady=[],r.rootLayerViews=new w({root:t._assertThisInitialized(r),rootCollectionNames:["basemapView.baseLayerViews","layerViews","basemapView.referenceLayerViews"],getChildrenFunction:e=>null}),r.graphicsView=null,r.highlightOptions=new k,r.inputManager=new O({view:t._assertThisInitialized(r)}),r.mapViewNavigation=null,r.supersampleScreenhotsEnabled=!0,r.ui=new E,r.rendering=!1,v.initialize(),r}t._inheritsLoose(s,i);var a=s.prototype;return a.destroy=function(){this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)},a.toMap=function(e){if(b.isSupportedScreenPointEvent(e)){const t=b.createScreenPointFromSupportedEvent(this,e);return i.prototype.toMap.call(this,t)}return i.prototype.toMap.call(this,e)},a.hitTest=function(e,t){const i=b.isSupportedScreenPointEvent(e)?b.createScreenPointFromSupportedEvent(this,e):e;if(!this.ready||isNaN(i.x)||isNaN(i.y))return u.resolve({screenPoint:i,results:[]});const r=this.toMap(i),n=[this.graphicsView];n.push.apply(n,this.allLayerViews.toArray().reverse());const s=new Set,a=new Set,o=new Set,p=new Set;return t&&(U(t&&t.include,s,o),U(t&&t.exclude,a,p)),u.all(n.map((e=>!e||!e.hitTest||o.size>0&&!e.layer||o.size>0&&e.layer&&!o.has(e.layer)||p.size>0&&e.layer&&p.has(e.layer)?null:e.hitTest(i.x,i.y)))).then((e=>({screenPoint:i,results:e.filter((e=>null!=e&&(!(s.size>0)||s.has(e))&&(!(a.size>0)||!a.has(e)))).map((e=>({mapPoint:r,graphic:e})))})))},a.takeScreenshot=function(e){return this.ready?this._stage.takeScreenshot(m.toRenderSettings(e,this),this.allLayerViews):u.reject("Map view cannot be used before it is ready")},a.on=function(e,t,r,n){const s=this.inputManager&&this.viewEvents.on(e,t,r,n);return s||i.prototype.on.call(this,e,t)},a.hasEventListener=function(e){return i.prototype.hasEventListener.call(this,e)||this.viewEvents.hasHandler(e)},a.whenLayerView=function(e){return i.prototype.whenLayerView.call(this,e)},a.graphicChanged=function(e){if(this.graphicsView){this.graphicsView.graphicUpdateHandler(e)}},a.whenReady=function(){return u.create((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))},a.forceDOMReadyCycle=function(){this.forceReadyCycle()},a.validate=function(){let t=C.check({checkMajorWebPerformanceCaveat:!1});return r("safari")&&r("safari")<9&&(t=new h("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:r("safari")})),n.isSome(t)?(L.warn("#validate()",t.message),u.reject(t)):async function(){const[,{GraphicsView2D:t,LabelManager:i,MapViewNavigation:r,MagnifierView2D:n,Stage:s}]=await Promise.all([new Promise((function(t,i){e(["./webgl"],t,i)})),new Promise((function(t,i){e(["./2d/mapViewDeps"],t,i)}))]);N=t,P=i,R=r,W=n,x=s}()},a._startup=function(){this.timeline.begin("MapView Startup"),i.prototype._startup.call(this),this.graphics.owner=this;const e={disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},t=new x(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenhotsEnabled,contextOptions:e,renderingOptions:this.renderingOptions,timeline:this.timeline}),r=new N({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate()}),n=new R({view:this,animationManager:this.animationManager}),s=new P({view:this});this._magnifierView=new W,this._magnifierView.magnifier=this.magnifier,this._stage=t,this.frameTask.graphicsView=r,this._set("graphicsView",r),this._set("mapViewNavigation",n),this._set("labelManager",s),this.handles.add([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),t.on("post-render",(()=>this._set("rendering",t.renderRequested))),t.on("will-render",(()=>this._set("rendering",t.renderRequested))),t.on("webgl-error",(e=>this.fatalError=e.error)),_.init(this,"stationary",(e=>t.stationary=e),!0),_.init(this,"state.id",(()=>t.state=this.state),!0),_.init(this,"background",(e=>{t.background=e,this._magnifierView.background=e}),!0),_.init(this,"magnifier",(e=>this._magnifierView.magnifier=e),!0),_.init(this,"renderingOptions",(e=>t.renderingOptions=e),!0),_.init(this,"highlightOptions",(()=>t.highlightOptions=this.highlightOptions),!0)],"map-view"),t.state=this.state,this._updateStageChildren();const a=this._resolveWhenReady;this._resolveWhenReady=[],a.forEach((e=>e(this))),this.timeline.end("MapView Startup")},a._teardown=function(){this.handles.remove("map-view"),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy();this.graphicsView.destroy(),this.mapViewNavigation.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,i.prototype._teardown.call(this)},a._updateStageChildren=function(){this._stage.removeAllChildren(),this.rootLayerViews.forEach((e=>{this._stage.addChild(e.container)}));const e=this.graphicsView;this._stage.addChild(e.container),this._stage.addChild(this._magnifierView)},t._createClass(s,[{key:"background",get:function(){return this.get("map.initialViewProperties.background")||null},set:function(e){void 0===e?this._clearOverride("background"):this._override("background",e)}},{key:"textureManager",get:function(){return this._stage.painter.textureManager}},{key:"navigating",get:function(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)}}]),s}(M.BreakpointsOwner(V.DOMContainer(S)));return i.__decorate([o.property({type:f,dependsOn:["map.initialViewProperties?.background"]})],z.prototype,"background",null),i.__decorate([o.property()],z.prototype,"graphicsView",void 0),i.__decorate([o.property({type:k})],z.prototype,"highlightOptions",void 0),i.__decorate([o.property({readOnly:!0})],z.prototype,"inputManager",void 0),i.__decorate([o.property({readOnly:!0})],z.prototype,"textureManager",null),i.__decorate([o.property({readOnly:!0})],z.prototype,"mapViewNavigation",void 0),i.__decorate([o.property({dependsOn:["mapViewNavigation.interacting"],type:Boolean})],z.prototype,"navigating",null),i.__decorate([o.property({type:Boolean,constructOnly:!0})],z.prototype,"supersampleScreenhotsEnabled",void 0),i.__decorate([o.property({type:E})],z.prototype,"ui",void 0),i.__decorate([o.property({readOnly:!0})],z.prototype,"rendering",void 0),i.__decorate([o.property({constructOnly:!0})],z.prototype,"renderCanvas",void 0),i.__decorate([o.property({constructOnly:!0})],z.prototype,"deactivatedWebGLExtensions",void 0),i.__decorate([o.property({constructOnly:!0})],z.prototype,"debugWebGLExtensions",void 0),z=i.__decorate([p.subclass("esri.views.MapView")],z),z}));
