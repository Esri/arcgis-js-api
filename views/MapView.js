/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/maybe","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/subclass","../core/Error","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../core/Collection","../Graphic","../core/CollectionFlattener","../core/watchUtils","../webmap/background/ColorBackground","../core/workers/workers","./support/screenshotUtils","./BreakpointsOwner","./DOMContainer","./support/screenUtils","./MapViewBase","./2d/input/MapViewInputManager","./2d/support/HighlightOptions","./support/WebGLRequirements","./ui/2d/DefaultUI2D"],(function(e,t,i,r,n,s,a,o,p,h,c,l,d,u,g,y,w,_,f,v,m,V,b,M,S,k,O,C){"use strict";const E=s.getLogger("esri.views.MapView");let L,P,x,N,R,W;async function G(){const[,{GraphicsView2D:t,GraphicContainer:i,LabelManager:r,MapViewNavigation:n,MagnifierView2D:s,Stage:a}]=await Promise.all([new Promise((function(t,i){e(["./webgl"],t,i)})),new Promise((function(t,i){e(["./2d/mapViewDeps"],t,i)}))]);P=t,x=i,N=r,R=n,W=s,L=a}function T(e){return e instanceof g}function z(e,t,i){if(e)if(Array.isArray(e)||u.isCollection(e)){if(0===e.length)return;e.forEach((e=>z(e,t,i)))}else T(e)?t.add(e):i.add(e)}let D=function(e){function i(i){var r;return(r=e.call(this,i)||this)._magnifierView=null,r._stage=null,r._resolveWhenReady=[],r.rootLayerViews=new y({root:t._assertThisInitialized(r),rootCollectionNames:["basemapView.baseLayerViews","layerViews","basemapView.referenceLayerViews"],getChildrenFunction:e=>null}),r.floors=new u,r.graphicsView=null,r.highlightOptions=new k,r.inputManager=new S({view:t._assertThisInitialized(r)}),r.mapViewNavigation=null,r.supersampleScreenhotsEnabled=!0,r.ui=new C,r.rendering=!1,f.initialize(),r}t._inheritsLoose(i,e);var s=i.prototype;return s.destroy=function(){this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)},s.toMap=function(t){if(b.isSupportedScreenPointEvent(t)){const i=b.createScreenPointFromSupportedEvent(this,t);return e.prototype.toMap.call(this,i)}return e.prototype.toMap.call(this,t)},s.hitTest=function(e,t){const i=b.isSupportedScreenPointEvent(e)?b.createScreenPointFromSupportedEvent(this,e):e;if(!this.ready||isNaN(i.x)||isNaN(i.y))return Promise.resolve({screenPoint:i,results:[]});const r=this.toMap(i),n=[this.graphicsView];n.push.apply(n,this.allLayerViews.toArray().reverse());const s=new Set,a=new Set,o=new Set,p=new Set;return t&&(z(t&&t.include,s,o),z(t&&t.exclude,a,p)),Promise.all(n.map((e=>!e||!e.hitTest||o.size>0&&!e.layer||o.size>0&&e.layer&&!o.has(e.layer)||p.size>0&&e.layer&&p.has(e.layer)?null:e.hitTest(i.x,i.y)))).then((e=>({screenPoint:i,results:e.filter((e=>null!=e&&(!(s.size>0)||s.has(e))&&(!(a.size>0)||!a.has(e)))).map((e=>({mapPoint:r,graphic:e})))})))},s.takeScreenshot=function(e){return this.ready?this._stage.takeScreenshot(v.toRenderSettings(e,this),this.allLayerViews):Promise.reject("Map view cannot be used before it is ready")},s.on=function(t,i,r,n){const s=this.inputManager&&this.viewEvents.on(t,i,r,n);return s||e.prototype.on.call(this,t,i)},s.hasEventListener=function(t){return e.prototype.hasEventListener.call(this,t)||this.viewEvents.hasHandler(t)},s.whenLayerView=function(t){return e.prototype.whenLayerView.call(this,t)},s.graphicChanged=function(e){if(this.graphicsView){this.graphicsView.graphicUpdateHandler(e)}},s.whenReady=function(){return new Promise((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))},s.forceDOMReadyCycle=function(){this.forceReadyCycle()},s.validate=function(){let e=O.check({checkMajorWebPerformanceCaveat:!1});return r("safari")&&r("safari")<9&&(e=new h("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:r("safari")})),n.isSome(e)?(E.warn("#validate()",e.message),Promise.reject(e)):G()},s._startup=function(){this.timeline.begin("MapView Startup"),e.prototype._startup.call(this),this.graphics.owner=this;const t={disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},i=new L(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenhotsEnabled,contextOptions:t,renderingOptions:this.renderingOptions,timeline:this.timeline}),r=new P({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new x(this.featuresTilingScheme)}),n=new R({view:this,animationManager:this.animationManager}),s=new N({view:this});this._magnifierView=new W,this._magnifierView.magnifier=this.magnifier,this._stage=i,this.frameTask.graphicsView=r,this._set("graphicsView",r),this._set("mapViewNavigation",n),this._set("labelManager",s),this.handles.add([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),i.on("post-render",(()=>this._set("rendering",i.renderRequested))),i.on("will-render",(()=>this._set("rendering",i.renderRequested))),i.on("webgl-error",(e=>this.fatalError=e.error)),w.init(this,"stationary",(e=>i.stationary=e),!0),w.init(this,"state.id",(()=>i.state=this.state),!0),w.init(this,"background",(e=>{i.background=e,this._magnifierView.background=e}),!0),w.init(this,"magnifier",(e=>this._magnifierView.magnifier=e),!0),w.init(this,"renderingOptions",(e=>i.renderingOptions=e),!0),w.init(this,"highlightOptions",(()=>i.highlightOptions=this.highlightOptions),!0)],"map-view"),i.state=this.state,this._updateStageChildren();const a=this._resolveWhenReady;this._resolveWhenReady=[],a.forEach((e=>e(this))),this.timeline.end("MapView Startup")},s._teardown=function(){this.handles.remove("map-view"),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy();this.graphicsView.destroy(),this.mapViewNavigation.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,e.prototype._teardown.call(this)},s._updateStageChildren=function(){this._stage.removeAllChildren(),this.rootLayerViews.forEach((e=>{this._stage.addChild(e.container)}));const e=this.graphicsView;this._stage.addChild(e.container),this._stage.addChild(this._magnifierView)},t._createClass(i,[{key:"background",get:function(){return this.get("map.initialViewProperties.background")||null},set:function(e){void 0===e?this._clearOverride("background"):this._override("background",e)}},{key:"textureManager",get:function(){return this._stage.painter.textureManager}},{key:"navigating",get:function(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)}}]),i}(m.BreakpointsOwner(V.DOMContainer(M)));return i.__decorate([o.property({type:_})],D.prototype,"background",null),i.__decorate([o.property()],D.prototype,"floors",void 0),i.__decorate([o.property()],D.prototype,"graphicsView",void 0),i.__decorate([o.property({type:k})],D.prototype,"highlightOptions",void 0),i.__decorate([o.property({readOnly:!0})],D.prototype,"inputManager",void 0),i.__decorate([o.property({readOnly:!0})],D.prototype,"textureManager",null),i.__decorate([o.property({readOnly:!0})],D.prototype,"mapViewNavigation",void 0),i.__decorate([o.property({type:Boolean})],D.prototype,"navigating",null),i.__decorate([o.property({type:Boolean,constructOnly:!0})],D.prototype,"supersampleScreenhotsEnabled",void 0),i.__decorate([o.property({type:C})],D.prototype,"ui",void 0),i.__decorate([o.property({readOnly:!0})],D.prototype,"rendering",void 0),i.__decorate([o.property({constructOnly:!0})],D.prototype,"renderCanvas",void 0),i.__decorate([o.property({constructOnly:!0})],D.prototype,"deactivatedWebGLExtensions",void 0),i.__decorate([o.property({constructOnly:!0})],D.prototype,"debugWebGLExtensions",void 0),D=i.__decorate([p.subclass("esri.views.MapView")],D),D}));
