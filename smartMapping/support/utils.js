/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{loadArcade as e}from"../../support/arcadeOnDemand.js";import{getWellKnownBasemapId as t}from"../../support/basemapUtils.js";const r={light:["streets","gray","topo","terrain","national-geographic","oceans","osm","gray-vector","streets-vector","topo-vector","streets-relief-vector","streets-navigation-vector","arcgis-light-gray","arcgis-navigation","arcgis-streets","arcgis-streets-relief","arcgis-topographic","arcgis-oceans","osm-standard","osm-standard-relief","osm-streets","osm-streets-relief","osm-light-gray","arcgis-terrain","arcgis-charted-territory","arcgis-community","arcgis-colored-pencil","arcgis-modern-antique","arcgis-midcentury","arcgis-newspaper","arcgis-hillshade-light"],dark:["satellite","hybrid","dark-gray","dark-gray-vector","streets-night-vector","arcgis-imagery","arcgis-imagery-standard","arcgis-dark-gray","arcgis-navigation-night","arcgis-streets-night","osm-dark-gray","arcgis-nova","arcgis-hillshade-dark"]},i="percent-of-total",n="field",s={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},a=["integer","small-integer"];let o=null;async function c(t){const r=t.field,i=t.normalizationField,n=t.valueExpression;let s=[];if(n){if(!o){const{arcadeUtils:t}=await e();o=t}s=o.extractFieldNames(n)}return r&&s.push(r),i&&s.push(i),s}function l(e){let t=e.normalizationType;return t||(e.normalizationField?t=n:null!=e.normalizationTotal&&(t=i)),t}function g(e){return String(e).padStart(2,"0")}function u(e,t,r){let i;if("date"===t||"number"===t){"number"===t&&(e=new Date(e));i=`TIMESTAMP'${r?e.getFullYear():e.getUTCFullYear()}-${g((r?e.getMonth():e.getUTCMonth())+1)}-${g(r?e.getDate():e.getUTCDate())} ${g(r?e.getHours():e.getUTCHours())}:${g(r?e.getMinutes():e.getUTCMinutes())}:${g(r?e.getSeconds():e.getUTCSeconds())}'`}else i=e;return i}function d(e,t,r,i){const{hasQueryEngine:n}=e;let a=`(${u(r,f(e,r),n)} - ${u(t,f(e,t),n)})`;n&&(a=`(${a} * ${s.milliseconds})`);let o=s[i],c="/";o<1&&(o=1/o,c="*");return{sqlExpression:1===o?a:`(${a} ${c} ${o})`,sqlWhere:null}}function f(e,t){if(t instanceof Date)return"date";if("number"==typeof t)return"number";if("string"==typeof t){const r=e.getField(t);if("<now>"===t.toLowerCase())return;if(r&&"date"===r.type)return"field"}}function m(e,t=r){for(const r in t)if(t[r].includes(e))return r}function p(e,r,i=!0){let n=null;return e&&("string"==typeof e?r.includes(e)&&(n=e):n=t(e)),i?n||"gray":n}function y(e,t){const r=t&&e.getField(t);return r&&a.includes(r.type)}function h(e){return`cast(${e} as float)`}export{h as castIntegerFieldToFloat,r as defaultBasemapGroups,m as getBasemapGroup,p as getBasemapId,d as getDateDiffSQL,f as getDateType,c as getFieldsList,l as getNormalizationType,y as isIntegerField,s as unitValueInDays};
