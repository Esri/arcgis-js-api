/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/arrayUtils","../../../core/Error","../../../core/maybe","../../../core/promiseUtils","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../layers/support/fieldType","../../../layers/support/fieldUtils","../../statistics/support/predominanceUtils","../../statistics/support/statsWorker","../../statistics/support/utils","../../statistics/support/WorkerClient","../utils","./FeatureLayerAdapter","./support/utils"],(function(e,t,r,i,a,n,s,o,l,u,y,p,c,f,d,g,m,h,w){"use strict";let F=function(t){function s(e){return t.call(this,e)||this}e._inheritsLoose(s,t);var o=s.prototype;return o._getNormalizationTotalFromMemory=function(){var t=e._asyncToGenerator((function*(e,t,r){const{featuresJSON:a,graphics:n,layerView:s,query:o}=t,l=(!a&&!n&&s&&"queryAggregateSummaryStatistics"in s?yield s.queryAggregateSummaryStatistics(o,{field:e},{signal:r}):a?yield this.workerClient.summaryStatistics({field:e},a):yield f.summaryStatistics({attribute:{field:e},features:n})).sum;if(null==l)throw new i("feature-layer-binning-adapter:invalid","invalid normalizationTotal");return l}));function r(e,r,i){return t.apply(this,arguments)}return r}(),o._processStatsFromMemoryParams=function(){var t=e._asyncToGenerator((function*(e){const{features:t,filter:r}=e;if(t?.length)return this._getFilteredFeatures(t,r);const{view:a,field:n,field2:s,field3:o,normalizationField:l,valueExpression:u,returnGeometry:y,layerViewFunc:p,signal:c}=e;let f=null,d=null,g=null,h=null,F=null;if(a)try{if(f=yield a.whenLayerView(this.layer),d=p in f&&"function"==typeof f[p],d){yield this._waitForLayerViewUpdate(f);const e=yield m.getFieldsList({field:n,field2:s,field3:o,normalizationField:l,valueExpression:u});w.getMissingFieldsForBinning(this,e).length?d=!1:(g="createAggregateQuery"in f&&f.createAggregateQuery(),g?(g.outFields=e,g.returnGeometry=!1,this._updateQueryWithFeatureFilter(g,r)):d=!1),f.suspended&&(d=!1)}}catch{d=!1}if(!d&&(F=w.getFeatureReductionFields(this.layer).map((e=>e.toJSON())),h=yield this._fetchFeaturesForStats({field:n,field2:s,field3:o,valueExpression:u,normalizationField:l,returnGeometry:y,filter:r,view:a,signal:c},"json"),!h?.length))throw new i("feature-layer-binning-adapter:insufficient-data","No features are available to calculate statistics");return{layerView:f,query:g,featuresJSON:h,fieldInfos:F}}));function r(e){return t.apply(this,arguments)}return r}(),o._summaryStatsFromMemory=function(){var t=e._asyncToGenerator((function*(e,t){const{view:r,field:i,valueExpression:a,normalizationType:n,signal:s}=e,o={field:i,valueExpression:a,normalizationType:n,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue},{featuresJSON:l,graphics:u,layerView:p,query:c,fieldInfos:d}=yield this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return a&&r&&(l||u)&&(o.fieldType=t?.type?y.kebabDict.toJSON(t.type):null,o.viewInfoParams=w.getViewInfoParams(r),o.fieldInfos=d),"percent-of-total"===n&&null==e.normalizationTotal&&(o.normalizationTotal=yield this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:p,query:c},s)),!l&&!u&&p&&"queryAggregateSummaryStatistics"in p?p.queryAggregateSummaryStatistics(c,o,{signal:s}):l?this.workerClient.summaryStatistics(o,l):f.summaryStatistics({attribute:o,features:u})}));function r(e,r){return t.apply(this,arguments)}return r}(),o._uvFromMemory=function(){var t=e._asyncToGenerator((function*(e,t){const{view:r,field:i,valueExpression:a,returnAllCodedValues:n,signal:s}=e,{featuresJSON:o,graphics:l,layerView:u,query:y,fieldInfos:p}=yield this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),c={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:m.FIELD_DELIMITER,valueExpression:a,domains:t,returnAllCodedValues:n};return a&&r&&(o||l)&&(c.viewInfoParams=w.getViewInfoParams(r),c.fieldInfos=p),!o&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(y,c,{signal:s}):o?this.workerClient.uniqueValues(c,o):f.uniqueValues({attribute:c,features:l})}));function r(e,r){return t.apply(this,arguments)}return r}(),o._histogramFromMemory=function(){var t=e._asyncToGenerator((function*(e){const{view:t,field:r,valueExpression:i,signal:a}=e,{featuresJSON:n,graphics:s,layerView:o,query:l,fieldInfos:u}=yield this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),y={field:r,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&t&&(n||s)&&(y.viewInfoParams=w.getViewInfoParams(t),y.fieldInfos=u),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(y.normalizationTotal=yield this._getNormalizationTotalFromMemory(r,{featuresJSON:n,graphics:s,layerView:o,query:l},a)),!n&&!s&&o&&"queryAggregateHistogram"in o?o.queryAggregateHistogram(l,y,{signal:a}):n?this.workerClient.histogram(y,n):f.histogram({attribute:y,features:s})}));function r(e){return t.apply(this,arguments)}return r}(),o._classBreaksFromMemory=function(){var t=e._asyncToGenerator((function*(e){const{view:t,field:r,valueExpression:i,signal:a}=e,{featuresJSON:n,graphics:s,layerView:o,query:l,fieldInfos:u}=yield this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),y={field:r,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(n||s)&&(y.viewInfoParams=w.getViewInfoParams(t),y.fieldInfos=u),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(y.normalizationTotal=yield this._getNormalizationTotalFromMemory(r,{featuresJSON:n,graphics:s,layerView:o,query:l},a)),!n&&!s&&o&&"queryAggregateClassBreaks"in o?o.queryAggregateClassBreaks(l,y,{signal:a}):n?this.workerClient.classBreaks(y,n):f.classBreaks({attribute:y,features:s})}));function r(e){return t.apply(this,arguments)}return r}(),o.getField=function(e=""){return w.getFeatureReductionFields(this.layer)?.find((t=>t.name.toLowerCase()===e?.toLowerCase()))},o.getFieldUsageInfo=function(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null},o.getFieldDomain=function(e,t){return null},o.summaryStatistics=function(){var t=e._asyncToGenerator((function*(e){const{field:t}=e,r=t?this.getField(t):null,a=p.isDateField(r),n=e.sqlExpression&&!e.valueExpression&&!t;if(a||n)throw new i("feature-layer-binning-adapter:not-supported","Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,r)}));function r(e){return t.apply(this,arguments)}return r}(),o.uniqueValues=function(){var t=e._asyncToGenerator((function*(e){const t=yield w.getDomainsForFields(e,this);return this._uvFromMemory(e,t)}));function r(e){return t.apply(this,arguments)}return r}(),o.histogram=function(){var t=e._asyncToGenerator((function*(e){const{field:t}=e,r=t?this.getField(t):null,a=p.isDateField(r),n=e.sqlExpression&&!e.valueExpression&&!t;if(a||n)throw new i("feature-layer-binning-adapter:not-supported","Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}));function r(e){return t.apply(this,arguments)}return r}(),o.classBreaks=function(){var t=e._asyncToGenerator((function*(e){return(!1!==e.analyzeData?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch((()=>(n.throwIfAborted(e.signal),this._classBreaksFromMemory(e))))}));function r(e){return t.apply(this,arguments)}return r}(),o.queryFeatureCount=function(){var t=e._asyncToGenerator((function*(e){const t=yield e.view.whenLayerView(this.layer);if(!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new i("feature-layer-binning-adapter:not-supported","LayerView is not supported.");yield this._waitForLayerViewUpdate(t);const r=t.createAggregateQuery();return r.where=d.mergeWhereClauses(r.where,e.whereClause),this._updateQueryWithFeatureFilter(r,e.filter),t.queryAggregateCount(r,{signal:e.signal})}));function r(e){return t.apply(this,arguments)}return r}(),o.generateRenderer=function(e,t){throw new i("feature-layer-binning-adapter:not-supported","'generateRenderer' is not supported.")},o.heatmapStatistics=function(e){throw new i("feature-layer-binning-adapter:not-supported","'heatmapStatistics' is not supported.")},o.predominantCategories=function(){var t=e._asyncToGenerator((function*(e){const{fields:t,view:r,signal:i}=e,a=c.getArcadeForPredominantCategory(t),n=yield this._uvFromMemory({valueExpression:a,view:r,signal:i});return w.getPredominantCategoriesFromUVInfos(n.uniqueValueInfos,t)}));function r(e){return t.apply(this,arguments)}return r}(),o.getSampleFeatures=function(){var t=e._asyncToGenerator((function*(e,t){const{view:a,sampleSize:n,requiredFields:s,returnGeometry:o,filter:l,signal:u}=e;if(!a)throw new i("feature-layer-binning-adapter:not-supported","'view' is required to get sample features for binning.");if("3d"===a.type)throw new i("feature-layer-binning-adapter:not-supported","3d 'view' is not supported to get sample features for binning.");const y=yield a.whenLayerView(this.layer);if(!("queryAggregateJSON"in y&&y.queryAggregateJSON&&"queryAggregates"in y&&y.queryAggregates))throw new i("feature-layer-binning-adapter:not-supported","LayerView is not supported.");yield this._waitForLayerViewUpdate(y);if(w.getMissingFieldsForBinning(this,s).length)throw new i("feature-layer-binning-adapter:insufficient-data","Layer does not have required fields");const p=1,c="json"===t,f=y.createAggregateQuery();f.outSpatialReference=e.spatialReference||a&&a.spatialReference,f.returnGeometry=!!o,f.outFields=s,this._updateQueryWithFeatureFilter(f,l);const{features:d}=c?yield y.queryAggregateJSON(f,{signal:u}):yield y.queryAggregates(f,{signal:u});return d.length&&n>0&&n<=d.length?r.pickRandom(d,n,p):d}));function a(e,r){return t.apply(this,arguments)}return a}(),o.load=function(t){var r=this;const n=this.layer.load(t).then(function(){var n=e._asyncToGenerator((function*(e){if(r.geometryType="polygon",r.objectIdField=null,r.supportsSQLExpression=!1,r._hasLocalSource=!1,r.hasQueryEngine=!0,r.minScale=e.minScale,r.maxScale=e.maxScale,r.fullExtent=e.fullExtent,"geometryType"in e&&"point"!==e.geometryType)throw new i("feature-layer-binning-adapter:invalid-parameters","Only 'point' geometry type is supported");const n="featureReduction"in e&&e.featureReduction;if("binning"!==n?.type&&"cluster"!==n?.type)throw new i("feature-layer-binning-adapter:invalid-parameters",`Feature reduction type ${n?.type} is not supported`);r.workerClient=g.WorkerClient.getInstance(),yield r.workerClient.open(a.unwrap(a.unwrap(t).signal))}));return function(e){return n.apply(this,arguments)}}());return this.addResolvingPromise(n),Promise.resolve(this)},s}(h);F=t.__decorate([u.subclass("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],F);return F}));
