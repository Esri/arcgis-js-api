/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../Graphic","../../../core/arrayUtils","../../../core/Error","../../../core/maybe","../../../core/promiseUtils","../../../core/watchUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../layers/support/fieldType","../../../layers/support/fieldUtils","../../../rest/support/FeatureSet","../../statistics/support/statsWorker","../../statistics/support/WorkerClient","../utils","./FeatureLayerAdapter","./LayerAdapter","./support/utils","../../../statistics/utils"],(function(e,t,r,a,i,s,n,o,l,u,c,p,d,m,h,y,f,g,F,_,v,S){"use strict";let w=function(t){function l(e){return t.call(this,e)||this}e._inheritsLoose(l,t);var u=l.prototype;return u.destroy=function(){var e;this._featureLayerAdapter=null,null==(e=this.workerClient)||e.destroy()},u._hasCachedStatistics=function(e){return this.layer.hasCachedStatistics(e)},u._updateQuery=function(e,t=[],r=[]){if(!r.length)return e;const a=this.layer.objectIdField,i=e.clone(),s=t.filter((e=>{const t=this.layer.getField(e);return-1===r.indexOf(t.name)})),n=s.some((e=>this.layer.getField(e).name===a));return i.outFields=n?s:[...s,a],i},u._fetchFeaturesFromMemory=function(){var t=e._asyncToGenerator((function*(e,t,r){if(!e)throw new i("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const a=yield e.whenLayerView(this.layer),s=new AbortController,l=o.whenFalseOnce(a,"updating",s.signal);yield n.timeout(l,5e3,s);const u=yield v.getMissingFields(this,r,a),c=this._updateQuery(t,r,u),p=(yield a.queryFeatures(c)).features;return u.length?a.whenGraphicAttributes(p,u):p}));function r(e,r,a){return t.apply(this,arguments)}return r}(),u._fetchFeaturesJSONFromMemory=function(){var t=e._asyncToGenerator((function*(e,t,r){return this._fetchFeaturesFromMemory(e,t,r).then(v.ensureFeaturesJSON)}));function r(e,r,a){return t.apply(this,arguments)}return r}(),u._fetchFeaturesForStats=function(e,t){return g.getFieldsList({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((r=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:r,signal:e.signal},t)))},u._processStatsFromMemoryParams=function(){var t=e._asyncToGenerator((function*(e){const t=e.features;if(null!=t&&t.length){return t.length&&"declaredClass"in t[0]&&"esri.Graphic"===t[0].declaredClass?{graphics:t}:{featuresJSON:t}}const{view:r,field:a,normalizationField:s,valueExpression:n,signal:o}=e,l=yield this._fetchFeaturesForStats({field:a,valueExpression:n,normalizationField:s,view:r,signal:o});if(null==l||!l.length)throw new i("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:l}}));function r(e){return t.apply(this,arguments)}return r}(),u._generateFeatureSetForCachedHistogram=function(e,t=e.minimum,a=e.maximum,i){const s=[];for(let r=0;r<i;r++)s[r]=0;const n=e.counts.length,o=e.minimum,l=e.maximum;for(let r=0;r<n;r++){const u=(r+.5)/n,c=((1-u)*o+u*l-t)/(a-t)*i;c>=0&&c<=i&&(s[c===i?i-1:Math.floor(c)]+=e.counts[r])}const u=[];s.forEach(((e,t)=>{const a=new r({attributes:{}});a.attributes.EXPR_1=t+1,a.attributes.countOFExpr=e,u.push(a)}));const c=new h;return c.features=u,c},u._getCachedStatistics=function(e,t){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new i("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):r.queryCachedStatistics(t&&t.name,{signal:e.signal}).then((e=>{const t=e.stats,{min:r,max:a,totalValuesCount:i}=t;let{avg:s,stddev:n,sum:o,variance:l,count:u}=t;return 0===r&&0===a||(s=0===s?null:s,o=0===o?null:o,n=0===n?null:n,l=0===l?null:l,u=0===u?null:u),null==u&&(null!=o&&null!=s?u=Math.round(o/s):null!=i&&(u=i)),{avg:s,count:u,max:a,min:r,stddev:n,sum:o,variance:l}}))},u._getNormalizationTotal=function(){var t=e._asyncToGenerator((function*(e,t,r){const a=(t?yield this.workerClient.summaryStatistics({field:e},t):yield y.summaryStatistics({attribute:{field:e},features:r})).sum;if(null==a)throw new i("scene-layer-adapter:invalid","invalid normalizationTotal");return a}));function r(e,r,a){return t.apply(this,arguments)}return r}(),u._getSummaryStatisticsFromMemory=function(){var t=e._asyncToGenerator((function*(e,t){const{view:r,field:a,normalizationField:i,valueExpression:s}=e,{featuresJSON:n,graphics:o}=yield this._processStatsFromMemoryParams(e),l={field:a,valueExpression:s,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue};return e.valueExpression&&r&&n&&(l.fieldType=null!=t&&t.type?d.kebabDict.toJSON(t.type):null,l.viewInfoParams=v.getViewInfoParams(r)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(l.normalizationTotal=yield this._getNormalizationTotal(a,n,o)),n?this.workerClient.summaryStatistics(l,n):y.summaryStatistics({attribute:l,features:o})}));function r(e,r){return t.apply(this,arguments)}return r}(),u._getCachedStatisticsForUniqueValues=function(e,t){const a=this.layer,s=t&&t.name,n=t&&this.getFieldDomain(e.field);return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new i("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(s,{signal:e.signal}).then((i=>{const n=i.stats;if(!n.mostFrequentValues)return Promise.reject();const o=i.labels&&i.labels.labels,l={},u=[],c="countOF"+s;n.mostFrequentValues.forEach((e=>{const i=new r({attributes:{}});i.attributes[s]=t&&t.name!==a.objectIdField&&(m.isNumericField(t)||m.isDateField(t))?Number(e.value):e.value,i.attributes[c]=e.count,u.push(i)})),o&&o.forEach((e=>{l[e.value]=e.label}));const p=new h;return p.features=u,v.getUniqueValuesFromFeatureSet(p,this,e.field,e.view,l,e.signal)})).then((t=>S.createUVResult(t,n,e.returnAllCodedValues)))},u._getUniqueValuesFromMemory=function(){var t=e._asyncToGenerator((function*(e,t){const r=t&&this.getFieldDomain(e.field),{view:a,field:i,valueExpression:s,returnAllCodedValues:n}=e,o={field:i,valueExpression:s,domain:r,returnAllCodedValues:n},{featuresJSON:l,graphics:u}=yield this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&l&&(o.viewInfoParams=v.getViewInfoParams(a)),l?this.workerClient.uniqueValues(o,l):y.uniqueValues({attribute:o,features:u})}));function r(e,r){return t.apply(this,arguments)}return r}(),u._getCachedStatisticsForHistogram=function(e,t){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new i("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):r.queryCachedStatistics(t&&t.name,{signal:e.signal}).then((t=>{const r=t.stats,{minValue:a,maxValue:i}=e,s=null!=a?a:r.min,n=null!=i?i:r.max,o=e.numBins||10,l=this._generateFeatureSetForCachedHistogram(r.histogram,s,n,o);return v.getHistogramFromFeatureSet(l,s,n,o)}))},u._getClassBreaksFromMemory=function(){var t=e._asyncToGenerator((function*(e){const{view:t,field:r,normalizationField:a,valueExpression:i}=e,{featuresJSON:s,graphics:n}=yield this._processStatsFromMemoryParams(e),o={field:r,valueExpression:i,normalizationType:e.normalizationType,normalizationField:a,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(o.viewInfoParams=v.getViewInfoParams(t)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(o.normalizationTotal=yield this._getNormalizationTotal(r,s,n)),s?this.workerClient.classBreaks(o,s):y.classBreaks({attribute:o,features:n})}));function r(e){return t.apply(this,arguments)}return r}(),u._getHistogramFromMemory=function(){var t=e._asyncToGenerator((function*(e){const{view:t,field:r}=e,{featuresJSON:a,graphics:i}=yield this._processStatsFromMemoryParams(e),s={field:r,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&a&&(s.viewInfoParams=v.getViewInfoParams(t)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(s.normalizationTotal=yield this._getNormalizationTotal(r,a,i)),a?this.workerClient.histogram(s,a):y.histogram({attribute:s,features:i})}));function r(e){return t.apply(this,arguments)}return r}(),u.getField=function(e=""){return this.layer.getField(e)},u.getFieldUsageInfo=function(e){const t=this.getField(e);if(!t)return null;const r=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:r.supportsLabelingInfo,supportsPopupTemplate:r.supportsPopupTemplate,supportsRenderer:r.supportsRenderer,supportsLayerQuery:r.supportsLayerQuery,supportsStatistics:!0}},u.getFieldDomain=function(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null},u.summaryStatistics=function(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.summaryStatistics(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatistics(e,t).catch((()=>(n.throwIfAborted(e.signal),this._getSummaryStatisticsFromMemory(e,t)))):this._getSummaryStatisticsFromMemory(e,t)},u.uniqueValues=function(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.uniqueValues(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatisticsForUniqueValues(e,t).catch((()=>(n.throwIfAborted(e.signal),this._getUniqueValuesFromMemory(e,t)))):this._getUniqueValuesFromMemory(e,t)},u.histogram=function(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.histogram(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatisticsForHistogram(e,t).catch((()=>(n.throwIfAborted(e.signal),this._getHistogramFromMemory(e)))):this._getHistogramFromMemory(e)},u.classBreaks=function(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.classBreaks(e):this._hasCachedStatistics(t&&t.name)?Promise.reject(new i("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)},u.queryFeatureCount=function(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new i("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))},u.generateRenderer=function(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new i("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))},u.heatmapStatistics=function(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new i("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))},u.predominantCategories=function(){var t=e._asyncToGenerator((function*(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new i("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}));function r(e){return t.apply(this,arguments)}return r}(),u.getSampleFeatures=function(){var t=e._asyncToGenerator((function*(e,t){const{view:r,sampleSize:i,requiredFields:s,returnGeometry:o,signal:l}=e,u=1,c="json"===t,p=this.layer.createQuery();p.outFields=s,p.returnGeometry=!!o,p.where=null,p.num=i;let d=[];try{if(d=c?yield this._fetchFeaturesJSONFromMemory(r,p,s):yield this._fetchFeaturesFromMemory(r,p,s),d.length&&i>0&&i<=d.length)return a.pickRandom(d,i,u)}catch(h){n.throwIfAborted(l)}let m=null;if(this._featureLayerAdapter){const r={...e};delete r.view,m=yield this._featureLayerAdapter.getSampleFeatures(r,t)}return m&&m.length?m:a.pickRandom(d,d.length,u)}));function r(e,r){return t.apply(this,arguments)}return r}(),u.load=function(t){var r=this;const a=this.layer.load(t).then(function(){var a=e._asyncToGenerator((function*(e){r.workerClient=f.WorkerClient.getInstance(),yield r.workerClient.open(s.unwrap(s.unwrap(t).signal));const a=e.associatedLayer;if(r.geometryType=e.geometryType,s.isSome(a)){r._featureLayerAdapter=new F({layer:a});return r._featureLayerAdapter.load(t).then((()=>{r.objectIdField=r._featureLayerAdapter.objectIdField,r.supportsSQLExpression=r._featureLayerAdapter.supportsSQLExpression,r.minScale=r._featureLayerAdapter.minScale,r.maxScale=r._featureLayerAdapter.maxScale,r.fullExtent=r._featureLayerAdapter.fullExtent}))}r.objectIdField=e.objectIdField,r.supportsSQLExpression=!1,r.hasQueryEngine=!1,r.fullExtent=e.fullExtent}));return function(e){return a.apply(this,arguments)}}());return this.addResolvingPromise(a),Promise.resolve(this)},l}(_);t.__decorate([l.property({constructOnly:!0})],w.prototype,"layer",void 0),w=t.__decorate([p.subclass("esri.smartMapping.support.adapters.SceneLayerAdapter")],w);return w}));
