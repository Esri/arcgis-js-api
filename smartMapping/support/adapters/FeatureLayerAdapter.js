/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/Error","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/arrayUtils","../../../core/promiseUtils","../../../geometry/support/spatialReferenceUtils","../../../geometry/Point","../../../geometry","../../../layers/support/fieldUtils","../../../core/watchUtils","../../../layers/support/arcgisLayerUrl","../../../tasks/support/QuantizationParameters","../../../tasks/support/StatisticDefinition","../../../tasks/GenerateRendererTask","../../../geometry/support/quantizationUtils","../utils","../../statistics/support/utils","../../statistics/support/predominanceUtils","./LayerAdapter","./support/utils","../../../tasks/support/GenerateRendererParameters","../../../tasks/support/UniqueValueDefinition"],(function(e,t,a,r,i,s,n,o,l,u,c,m,d,h,p,f,y,g,F,S,v,x,w,_,z,E,q,T,V,L,Q){"use strict";const B=i.getLogger("esri.smartMapping.support.adapters.FeatureLayerAdapter"),C=5,b=10,R=2e4,M=4e5;let P=function(t){function a(e){return t.call(this,e)||this}e._inheritsLoose(a,t);var i=a.prototype;return i.destroy=function(){this._hasLocalSource=null},i._isStatsSupportedOnService=function(){const e=this.layer;return!e.get("capabilities.query.supportsStatistics")||"multipatch"===this.geometryType&&!S.isHostedAgolService(e.url)&&e.version<10.5?Promise.reject(new l("feature-layer-adapter:not-supported","Layer does not support statistics query")):Promise.resolve()},i._fetchFeaturesFromMemory=async function(e,t,a){const r=this.layer;if(this._hasLocalSource){return(await r.queryFeatures(t)).features}if(!e)throw new l("feature-layer-adapter:insufficient-data","layerView is required to fetch the features");const i=h.createAbortController(),s=F.whenFalseOnce(e,"updating",i.signal);await h.timeout(s,5e3,i).catch((e=>{throw B.warn("LayerView is taking too long to update. Aborting fetch from layerView."),e}));return(await e.queryFeatures(t,{signal:a})).features},i._fetchFeaturesFromService=function(e,t){return this.layer.queryFeatures(e,{signal:t}).then((e=>e&&e.features))},i._fetchFeaturesForStats=function(e){return z.getFieldsList({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((t=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:t,signal:e.signal})))},i._summaryStatsFromGenRend=function(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:C,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:"field"===t?a:void 0,minValue:e.minValue,maxValue:e.maxValue,signal:e.signal}).then((e=>{let t,a,r;if(e.classBreakInfos.some((e=>(e.hasAvg&&(t=e),!!t))),t){const e=t.maxValue-t.minValue;a=t.minValue+e/2,r=4*e}const i={min:e.minValue,max:e.maxValue,avg:a,stddev:r};return V.processSummaryStatisticsResult(i)}))},i._getSummaryStatsQuery=function(e,t){const{field:a,normalizationType:r,normalizationField:i,normalizationTotal:s}=e,n=this.supportsSQLExpression&&t?V.msSinceUnixEpochSQL(this,a):e.sqlExpression,o=V.getFieldExpr({field:a,normalizationType:r,normalizationField:i,normalizationTotal:s,layer:this}),l=n||o,u=l?E.getRangeExpr(l,e.minValue,e.maxValue):null,c=E.getSQLFilterForNormalization({field:a,normalizationField:i,normalizationType:r}),m=E.mergeWhereClauses(e.sqlWhere,c),d=E.mergeWhereClauses(m,u),h=this.layer.createQuery();return h.where=E.mergeWhereClauses(h.where,d),h.sqlFormat=n?"standard":null,h.outStatistics=V.statisticTypes.map((e=>{const t=new x;return t.statisticType="variance"===e?"var":e,t.onStatisticField=l,t.outStatisticFieldName=e+"_value",t})),h},i._summaryStatsFromServiceQuery=async function(e,t){await this._isStatsSupportedOnService(),"percent-of-total"===e.normalizationType&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType));const a=this._getSummaryStatsQuery(e,t),r=await this.layer.queryFeatures(a,{signal:e.signal}),i=V.getSummaryStatisticsFromFeatureSet(r,t);return V.processSummaryStatisticsResult(i)},i._summaryStatsFromClientQuery=async function(e,t){const a=this._getSummaryStatsQuery(e,t),r=await this.layer.queryFeatures(a,{signal:e.signal}),i=V.getSummaryStatisticsFromFeatureSet(r,t);return V.processSummaryStatisticsResult(i)},i._summaryStatsFromMemory=async function(e,t){const a=e.field,r=e.valueExpression,i=e.view,s={field:a,valueExpression:r,normalizationField:e.normalizationField,view:i,signal:e.signal},n=e.features||await this._fetchFeaturesForStats(s);if(!(n&&n.length))throw new l("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");const o={...e};if("percent-of-total"===o.normalizationType){const e=(await V.calculateStatsFromMemory({field:a},n)).sum;if(null==e)throw new l("feature-layer-adapter:invalid","invalid normalizationTotal");o.normalizationTotal=e}const u=await V.calculateStatsFromMemory(o,n,t);return V.processSummaryStatisticsResult(u)},i._uvFromGenRenderer=function(e,t){const a=e.field,r=new Q;r.attributeField=a;const i=new L;return i.classificationDefinition=r,this.generateRenderer(i,e.signal).then((e=>{const t={},r=this.getField(a);return e.uniqueValues.forEach((e=>{let a=e.value;null!=a&&""!==a&&("string"!=typeof a||""!==a.trim()&&"<null>"!==a.toLowerCase())||(a=null),null==t[a]?t[a]={count:e.count,data:g.isNumericField(r)&&a?Number(a):a}:t[a].count=t[a].count+e.count})),{count:t}})).then((a=>V.createUVResult(a,t,e.returnAllCodedValues)))},i._getUVQuery=function(e){const t=e.field,a=e.sqlExpression,r="countOF"+(t||"Expr"),i=new x;i.statisticType="count",i.onStatisticField=a?"1":t,i.outStatisticFieldName=r;const s=this.layer.createQuery();return s.where=E.mergeWhereClauses(s.where,e.sqlWhere),s.sqlFormat=a?"standard":null,s.outStatistics=[i],s.groupByFieldsForStatistics=[t||a],s},i._uvFromServiceQuery=function(e,t){return this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(this._getUVQuery(e),{signal:e.signal}))).then((t=>V.getUniqueValuesFromFeatureSet(t,this,e.field,null,e.signal))).then((a=>V.createUVResult(a,t,e.returnAllCodedValues)))},i._uvFromClientQuery=async function(e,t){const{signal:a}=e,r=this._getUVQuery(e),i=await this.layer.queryFeatures(r,{signal:a}),s=await V.getUniqueValuesFromFeatureSet(i,this,e.field,null,a);return V.createUVResult(s,t,e.returnAllCodedValues)},i._uvFromMemory=async function(e,t){const{field:a,valueExpression:r,view:i,signal:s}=e,n={field:a,valueExpression:r,view:i,signal:s},o=e.features?e.features:await this._fetchFeaturesForStats(n);return V.calculateUniqueValuesFromMemory(e,o,t)},i._calcBinsSQL=function(e,t,a){const r=[],i=t.length;return t.forEach(((t,s)=>{const[n,o]=t;let l=null;l=0!==s||a?s!==i-1||a?E.mergeWhereClauses(`${e} >= ${n}`,`${e} ${s===i-1?" <= ":" < "} ${o}`):`${e} >= ${n}`:`${e} < ${o}`,r.push("WHEN ("+l+") THEN "+(s+1))})),["CASE",r.join(" "),"ELSE 0","END"].join(" ")},i._getNormalizationTotal=function(e,t,a){return e&&"percent-of-total"===t?this.summaryStatistics({field:e,signal:a}).then((e=>e.sum)):Promise.resolve(null)},i._getQueryParamsForExpr=function(e,t){const a=e.valueExpression||e.sqlExpression,r=e.signal;if(!a){const{field:a,normalizationType:i,normalizationField:s}=e,n=a?this.getField(a):null,o=g.isDateField(n),l={field:a,normalizationType:i,normalizationField:s,normalizationTotal:t,layer:this};return{sqlExpression:o?V.msSinceUnixEpochSQL(this,a):V.getFieldExpr(l),sqlWhere:o?null:e.sqlWhere||E.getSQLFilterForNormalization({field:a,normalizationType:i,normalizationField:s}),signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,signal:r}},i._getDataRange=function(e,t,a){return null!=t&&null!=a?Promise.resolve({min:t,max:a}):this.summaryStatistics(e).then((e=>({min:e.min,max:e.max})))},i._histogramForExpr=function(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.signal).then((t=>{const a=this._getQueryParamsForExpr(e,t);return this._getDataRange(a,e.minValue,e.maxValue).then((r=>{const{min:i,max:s}=r,n=e.numBins||b,o=V.getEqualIntervalBins(i,s,n),l=this._calcBinsSQL(a.sqlExpression,o,null!=e.minValue&&null!=e.maxValue),u=new x({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),c=this.layer.createQuery();return c.where=E.mergeWhereClauses(c.where,a.sqlWhere),c.sqlFormat="standard",c.outStatistics=[u],c.groupByFieldsForStatistics=[l],c.orderByFields=[l],this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(c,{signal:a.signal}))).then((e=>V.getHistogramFromFeatureSet(e,i,s,n,t)))}))}))},i._histogramForField=function(e){let t=null;return t=null!=e.minValue&&null!=e.maxValue?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics(e).then((e=>{if(!e.count)throw new l("feature-layer-adapter:insufficient-data","Either the layer has no features or none of the features have data for the field");return{min:e.min,max:e.max}})),t.then((t=>this._getBins({min:t.min,max:t.max},e.field,e.numBins,e.signal)))},i._getBins=function(e,t,a=b,r){const{min:i,max:s,normTotal:n,excludeZerosExpr:o}=e,l=e.intervals||V.getEqualIntervalBins(i,s,a),u=e.sqlExpr||t;return this._queryBins(l,u,o,r).then((e=>({bins:e.map(((e,t)=>({minValue:l[t][0],maxValue:l[t][1],count:e.value}))),minValue:i,maxValue:s,normalizationTotal:n})))},i._queryBins=function(e,t,a,r){const i=[],s=e.length;for(let n=0;n<s;n++){const r=E.mergeWhereClauses(a,E.mergeWhereClauses(t+" >= "+e[n][0],null!==e[n][1]?t+(n===s-1?" <= ":" < ")+e[n][1]:""));i.push(r)}return h.eachAlways(i.map((e=>this.queryFeatureCount(e,r))))},i._binParamsFromGenRend=function(e,t){const{field:a,normalizationType:r,normalizationField:i,signal:s}=e,n=E.getSQLFilterForNormalization({field:a,normalizationType:r,normalizationField:i}),o=new L({classificationDefinition:V.createCBDefn({field:a,normalizationType:r,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numBins||b}),where:E.mergeWhereClauses(n,t)});return this.generateRenderer(o,s).then((e=>{const{normalizationTotal:t,classBreaks:s}=e;return V.generateBinParams({field:a,normalizationType:r,normalizationField:i,normalizationTotal:t,classBreaks:s,where:n,layer:this})}))},i._histogramFromMemory=function(e){const{field:t,normalizationField:a,normalizationType:r,valueExpression:i,classificationMethod:s,minValue:n,maxValue:o,view:u,signal:c}=e,m={field:t,valueExpression:i,normalizationField:a,view:u,signal:c};return(e.features?Promise.resolve(e.features):this._fetchFeaturesForStats(m)).then((a=>{if(!(a&&a.length))throw new l("feature-layer-adapter:insufficient-data","No features are available to calculate histogram");let m=null;if((!s||"equal-interval"===s)&&!r)m=null!=n&&null!=o?Promise.resolve({min:n,max:o,source:"parameters"}):this.summaryStatistics({field:t,valueExpression:i,features:a,view:u,signal:c}).then((e=>e.count?{min:e.min,max:e.max}:Promise.reject(new l("feature-layer-adapter:insufficient-data","No features are available to calculate histogram"))));else{const t={...e};t.features=a,m=this._getBinParamsFromMemory(t)}return m.then((t=>V.calculateHistogramFromMemory(e,t,a)))}))},i._getBinParamsFromMemory=async function(e){const{field:t,valueExpression:a,classificationMethod:r,standardDeviationInterval:i,normalizationType:s,normalizationField:n,minValue:o,maxValue:l,features:u,view:c,signal:m}=e;return this._classBreaksFromMemory({field:t,valueExpression:a,normalizationType:s,normalizationField:n,classificationMethod:r,standardDeviationInterval:i,minValue:o,maxValue:l,numClasses:e.numBins,features:u,view:c,signal:m}).then((e=>{const a=e.normalizationTotal,r=e.classBreakInfos,i=E.getSQLFilterForNormalization({field:t,normalizationType:s,normalizationField:n});return V.generateBinParams({field:t,normalizationType:s,normalizationField:n,normalizationTotal:a,classBreaks:r,where:i,layer:this})}))},i._classBreaksFromGenRend=function(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:s}=e,n=E.getSQLFilterForNormalization({field:t,normalizationType:a,normalizationField:r}),o=V.getFieldExpr({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),l=E.getRangeExpr(o,e.minValue,e.maxValue),u=V.createCBDefn({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||C}),c=new L;return c.classificationDefinition=u,c.where=E.mergeWhereClauses(n,l),this.generateRenderer(c,s).then((t=>V.resolveCBResult(e,t)))},i._classBreaksFromInterpolation=function(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||C,i=[],s=(a-t)/r;for(let l=0;l<r;l++){const e=t+l*s;i.push({minValue:e,maxValue:e+s})}i[r-1].maxValue=a;const n={classBreaks:i,normalizationTotal:e.normalizationTotal},o=V.resolveCBResult(e,n);return Promise.resolve(o)},i._classBreaksFromMemory=async function(e){const{field:t,normalizationField:a,valueExpression:r,view:i,signal:s}=e,n={field:t,valueExpression:r,normalizationField:a,view:i,signal:s},o=e.features||await this._fetchFeaturesForStats(n);if(!(o&&o.length))throw new l("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");const u={...e};if("percent-of-total"===u.normalizationType){const e=(await V.calculateStatsFromMemory({field:t},o)).sum;if(null==e)throw new l("feature-layer-adapter:invalid","invalid normalizationTotal");u.normalizationTotal=e}return V.calculateClassBreaksFromMemory(u,o)},i._heatmapStatsFromMemory=async function(e,t){const{blurRadius:a,field:r,view:i,signal:s}=e,{resolution:n,size:o}=i.state,u=new v({extent:i.extent,tolerance:n}),c=this._quantizeFeatures(e.features||await this._fetchFeaturesForStats({field:r,view:i,returnGeometry:!0,signal:s}),u,i);if(!c||!c.length)return{count:0,min:null,max:null,avg:null,stddev:null};const m=V.calculateHeatmapStats(c,a,t,r,o[0],o[1]);if(m)return{count:m.count,min:m.min,max:m.max,avg:m.mean,stddev:m.stdDev};throw new l("feature-layer-adapter:invalid","unable to calculate heatmap statistics")},i._quantizeFeatures=function(e,t,a){const i=_.toQuantizationTransform(t),{spatialReference:s,size:n}=a,o=p.isWrappable(s)?p.getInfo(s):null,l=o?Math.round((o.valid[1]-o.valid[0])/i.scale[0]):null;return e.map((e=>{const t=new f(r.unwrap(e.geometry));return _.quantizePoint(i,t,t,t.hasZ,t.hasM),e.geometry=o?this._wrapPoint(t,l,n[0]):t,e}))},i._wrapPoint=function(e,t,a){return e.x<0?e.x+=t:e.x>a&&(e.x-=t),e},i.getField=function(e=""){return this.layer.getField(e)},i.getFieldUsageInfo=function(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null},i.getFieldDomain=function(e,t){return this.layer.getFieldDomain(e,t)},i.summaryStatistics=function(e){const{field:t,normalizationType:a,sqlExpression:r,view:i,features:s}=e,n=t?this.getField(t):null,o=g.isDateField(n),u=e.valueExpression||r,c=u&&!r,m=this._hasLocalSource||s,d=i&&"3d"===i.type;if(m||c)return c||s||d?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o);if(!this.supportsSQLExpression&&(o||u||"natural-log"===a||"square-root"===a))return Promise.reject(new l("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries"));return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,o)).catch((()=>(h.throwIfAborted(e.signal),this._summaryStatsFromMemory(e,o))))},i.uniqueValues=function(e){const{field:t,valueExpression:a,sqlExpression:r,signal:i}=e,s=(t?this.getField(t):null)&&this.getFieldDomain(t),n=a&&(!r||!this.supportsSQLExpression),o=this._hasLocalSource||e.features||n,l=e.view,u=l&&"3d"===l.type;return o?n||e.features||u?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s):this._uvFromServiceQuery(e,s).catch((t=>(h.throwIfAborted(i),e.field?this._uvFromGenRenderer(e,s):t))).catch((()=>(h.throwIfAborted(i),n||e.features||u?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s))))},i.histogram=function(e){const{field:t,normalizationType:a,normalizationField:r,classificationMethod:i,signal:s}=e,n=t?this.getField(t):null,o=g.isDateField(n),u=e.valueExpression||e.sqlExpression,c=u&&!e.sqlExpression,m=this._hasLocalSource||e.features||c,d=this.supportsSQLExpression,h=!i||"equal-interval"===i,p=e.minValue,f=e.maxValue,y=null!=p&&null!=f,F=e.numBins||b;return m?this._histogramFromMemory(e):(u||d)&&h?d||!u&&"natural-log"!==a&&"square-root"!==a?this._histogramForExpr(e):Promise.reject(new l("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries")):o&&h?Promise.reject(new l("feature-layer-adapter:not-supported","Normalization and date field are not allowed when layer does not support standardized SQL expression for queries")):a||!h?this._binParamsFromGenRend(e).then((i=>{if(!y)return this._getBins(i,t,F,s);if(p>i.max||f<i.min)throw new l("histogram:insufficient-data","Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(h)return this._getBins({min:p,max:f,sqlExpr:i.sqlExpr,excludeZerosExpr:i.excludeZerosExpr},t,F,s);{const n={field:t,normalizationType:a,normalizationField:r,normalizationTotal:i.normTotal,layer:this},o=V.getFieldExpr(n),l=E.getRangeExpr(o,p,f);return this._binParamsFromGenRend(e,l).then((e=>this._getBins(e,t,F,s)))}})):this._histogramForField(e)},i.classBreaks=function(e){const t=!1!==e.analyzeData,a=this._hasLocalSource||e.features||e.valueExpression;if(t&&a)return this._classBreaksFromMemory(e);return(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch((()=>(h.throwIfAborted(e.signal),this._classBreaksFromMemory(e))))},i.queryFeatureCount=function(e,t){if(this._hasLocalSource)return Promise.reject(new l("feature-layer-adapter:not-supported","Layer does not support count query"));const a=this.layer,r=a.createQuery();return r.where=E.mergeWhereClauses(r.where,e),a.queryFeatureCount(r,{signal:t})},i.generateRenderer=function(e,t){const a=this.layer;if(this._hasLocalSource||a.version<10.1)return Promise.reject(new l("feature-layer-adapter:not-supported","Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)"));const r=new w({url:a.parsedUrl.path,source:a.dynamicDataSource,gdbVersion:a.gdbVersion}),i=a.createQuery();return e.where=E.mergeWhereClauses(e.where,i.where),r.execute(e,{signal:t})},i.heatmapStatistics=function(e){const{field:t,fieldOffset:a,signal:r}=e;return(t&&null==a?this.summaryStatistics({field:t,signal:r}):Promise.resolve(null)).then((t=>{let r=a||0;if(t){const{count:e,min:a,max:i}=t;e?a===i&&0===a?r=1:i<=0?r="abs":a<0&&(r=-1.01*a):r=1}return this._heatmapStatsFromMemory(e,r).then((e=>({...e,summaryStatistics:t,fieldOffset:r})))}))},i.predominantCategories=async function(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new l("feature-layer-adapter:not-supported","Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:r}=e,i=q.getArcadeForPredominantCategory(t),s=q.getSQLForPredominantCategoryName(t),n=(a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:i,view:a,signal:r}):await this._uvFromServiceQuery({sqlExpression:s.expression,valueExpression:i,signal:r})).uniqueValueInfos,o=n.map((e=>e.value)),u=t.filter((e=>-1===o.indexOf(e)));for(const l of u)n.push({value:l,count:0});n.sort(((e,a)=>t.indexOf(e.value)-t.indexOf(a.value)));for(const l of n)l.value===q.noDominantCategoryField&&(l.value=null);return{predominantCategoryInfos:n}},i.getSampleFeatures=async function(e){const{view:t,sampleSize:a,requiredFields:r,returnGeometry:i,signal:s}=e,n=this.layer.createQuery(),o=1;n.outSpatialReference=e.spatialReference||t&&t.spatialReference,n.returnGeometry=!!i,n.outFields=r;let l=[],u=!1;if(t)try{const e=await t.whenLayerView(this.layer);if(u=!(await V.getMissingFields(this,r,e)).length,u&&(l=await this._fetchFeaturesFromMemory(e,n,s),l.length&&a>0&&a<=l.length))return d.pickRandom(l,a,o)}catch(c){h.throwIfAborted(s)}try{if(this._hasLocalSource)return u?l:this._fetchFeaturesFromService(n,s);const r=await this.queryFeatureCount(null,s),i=this.layer.capabilities.query.maxRecordCount;let c=-1===a?r:a;if(c=i&&c>i?i:c,r<=l.length||l.length>=i)return l;const m=t.extent.width/t.width/t.scale*M;if(n.maxAllowableOffset=e.resolution||m,r<=c)return this._fetchFeaturesFromService(n,s);if(r<=R){const e=await this.layer.queryObjectIds();return n.objectIds=d.pickRandom(e,c,o),this._fetchFeaturesFromService(n,s)}return this.layer.get("capabilities.query.supportsPagination")&&(n.num=Math.min(c,R)),this._fetchFeaturesFromService(n,s)}catch(c){return h.throwIfAborted(s),l}},i.load=function(e){const t=this.layer.load(e).then((e=>{this.geometryType=e.geometryType,this.objectIdField=e.objectIdField,this.supportsSQLExpression=e.get("capabilities.query.supportsSqlExpression"),this._hasLocalSource=!e.url&&!!e.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=e.minScale,this.maxScale=e.maxScale,this.fullExtent=e.fullExtent}));return this.addResolvingPromise(t),Promise.resolve(this)},a}(T);return t.__decorate([n.property({constructOnly:!0})],P.prototype,"layer",void 0),P=t.__decorate([o.subclass("esri.smartMapping.support.adapters.FeatureLayerAdapter")],P),P}));
