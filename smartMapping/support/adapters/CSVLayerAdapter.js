/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Error","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../../../rest/support/generateRendererUtils","../../statistics/support/utils","../utils","./FeatureLayerAdapter","./support/utils"],(function(e,t,r,i,s,n,a,o,l,u,c,d,p){"use strict";function f(e){return"esri.rest.support.ClassBreaksDefinition"===e.declaredClass}function h(e){return"esri.rest.support.UniqueValueDefinition"===e.declaredClass}let y=function(t){function i(e){return t.call(this,e)||this}e._inheritsLoose(i,t);var s=i.prototype;return s._createGenerateRendererResult=function(){var t=e._asyncToGenerator((function*(e,t,i,s,n){const a=e&&e.features;if(!(a&&a.length))throw new r("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");let o=null;if("percent-of-total"===s){if(o=(yield p.calculateStatsFromMemory({field:t},a)).sum,null==o)throw new r("csv-layer-adapter:invalid","invalid normalizationTotal")}if(f(n)){const e=(yield p.getDataValues({field:t,normalizationType:s,normalizationField:i,normalizationTotal:o},a)).filter((e=>Number.isFinite(e)));return l.createGenerateRendererClassBreaks({definition:n,values:e,normalizationTotal:o})}if(h(n)){const e=(yield p.getDataValues({field:t},a)).filter((e=>null!=e&&"string"==typeof e&&""!==e.trim()));return l.createGenerateRendererUniqueValues(e)}}));function i(e,r,i,s,n){return t.apply(this,arguments)}return i}(),s.generateRenderer=function(e,t){const r=e.classificationDefinition;let i=null,s=null,n=null;f(r)?(i=r.classificationField,s=r.normalizationField,n=r.normalizationType):h(r)&&(i=r.attributeField);const a=this.layer;return c.getFieldsList({field:i,normalizationField:s}).then((o=>{const l=a.createQuery();return l.returnGeometry=!1,l.outFields=o,l.where=u.mergeWhereClauses(l.where,e.where),a.queryFeatures(l,{signal:t}).then((e=>this._createGenerateRendererResult(e,i,s,n,r)))}))},s.load=function(e){const t=this.layer.load(e).then((e=>{this.geometryType=e.geometryType,this.objectIdField=e.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0}));return this.addResolvingPromise(t),Promise.resolve(this)},i}(d);return y=t.__decorate([o.subclass("esri.smartMapping.support.adapters.CSVLayerAdapter")],y),y}));
