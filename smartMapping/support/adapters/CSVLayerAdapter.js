/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/Error","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../tasks/support/generateRendererUtils","../utils","../../statistics/support/utils","./support/utils","./FeatureLayerAdapter"],(function(e,t,r,s,a,i,n,o,l,u,c,d,p,f,h,y){"use strict";function m(e){return"esri.tasks.support.ClassBreaksDefinition"===e.declaredClass}function g(e){return"esri.tasks.support.UniqueValueDefinition"===e.declaredClass}let F=function(t){function r(e){return t.call(this,e)||this}e._inheritsLoose(r,t);var s=r.prototype;return s._createGenerateRendererResult=async function(e,t,r,s,a){const i=e&&e.features;if(!(i&&i.length))throw new o("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");let n=null;if("percent-of-total"===s){if(n=(await h.calculateStatsFromMemory({field:t},i)).sum,null==n)throw new o("csv-layer-adapter:invalid","invalid normalizationTotal")}if(m(a)){const e=(await h.getDataValues({field:t,normalizationType:s,normalizationField:r,normalizationTotal:n},i)).filter((e=>null!=e&&h.isValidNumber(e)));return d.createGenerateRendererClassBreaks({definition:a,values:e,normalizationTotal:n})}if(g(a)){const e=(await h.getDataValues({field:t},i)).filter((e=>null!=e&&"string"==typeof e&&""!==e.trim()));return d.createGenerateRendererUniqueValues(e)}},s.generateRenderer=function(e,t){const r=e.classificationDefinition;let s=null,a=null,i=null;m(r)?(s=r.classificationField,a=r.normalizationField,i=r.normalizationType):g(r)&&(s=r.attributeField);const n=this.layer;return p.getFieldsList({field:s,normalizationField:a}).then((o=>{const l=n.createQuery();return l.returnGeometry=!1,l.outFields=o,l.where=f.mergeWhereClauses(l.where,e.where),n.queryFeatures(l,{signal:t}).then((e=>this._createGenerateRendererResult(e,s,a,i,r)))}))},s.load=function(e){const t=this.layer.load(e).then((e=>{this.geometryType=e.geometryType,this.objectIdField=e.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0}));return this.addResolvingPromise(t),Promise.resolve(this)},r}(y);return F=t.__decorate([n.subclass("esri.smartMapping.support.adapters.CSVLayerAdapter")],F),F}));
