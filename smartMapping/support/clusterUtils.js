/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{unique as n}from"../../core/arrayUtils.js";import{isSome as e}from"../../core/maybe.js";import{createMD5Hash as i}from"../../core/MD5.js";import{isValidNumber as t}from"../../renderers/visualVariables/support/sizeVariableUtils.js";import{getPrimaryVisualVariables as o}from"../popup/support/utils.js";import{getNormalizationType as l}from"./utils.js";const r="cluster_count";function a(n,e){return n.split(`cluster_${e}_`).pop()}function s(n){if(!n)return null;const{field:e,valueExpression:i,normalizationField:o,normalizationType:r,normalizationTotal:a}=n;let s=null;if(i)s=i;else if(e){const n=l({normalizationType:r,normalizationField:o,normalizationTotal:a});if(n){const i=n.toLowerCase();if(s=e.toLowerCase()+",norm:"+i,o)s+=","+o.toLowerCase();else if("percent-of-total"===i){let n=a;t(n)&&0!==n||(n=null),s+=","+n}}}return s}function u(n){return i(n)}function p(n,i){const t=s(n);return`${i}_${e(t)?u(t):n.field}`}function f(n,e){return`cluster_${p(n,e)}`}function c(n,e){const i=e.getField(n);return i&&i.type}function m(n,i){const t="field"in i&&i.field,o=t?c(t,n):null;return{field:t,fieldType:e(o)?o:null,valueExpression:"valueExpression"in i?i.valueExpression:null,valueExpressionTitle:"valueExpressionTitle"in i?i.valueExpressionTitle:null,normalizationField:"normalizationField"in i?i.normalizationField:null,normalizationType:"normalizationType"in i?i.normalizationType:null,normalizationTotal:"normalizationTotal"in i?i.normalizationTotal:null}}function v(n,i){const t="rotation"===i.type?i.rotationType:null,o=i.legendOptions&&i.legendOptions.title,l=i.field,r=l?c(l,n):null;return{field:l,fieldType:e(r)?r:null,rotationType:t,valueExpression:i.valueExpression,valueExpressionTitle:i.valueExpressionTitle||i.valueExpression&&o,normalizationField:"normalizationField"in i?i.normalizationField:null,vvType:i.type}}function T(n){return n.map((n=>`{\n        "value": "${String(n.value)}",\n        "label": "${d(String(n.label))}"\n      }`))}function d(n){return n?n.replace(/"/g,'\\"'):""}function y(n,e,i){return`\n  var uvInfos = [${T(n).join(", ")}];\n  var predominantType = Text($feature["${e}"]);\n  var label = "${d(i)}";\n\n  for (var i = 0; i < Count(uvInfos); i++) {\n    if (uvInfos[i].value == predominantType) {\n      label = uvInfos[i].label;\n      break;\n    }\n  }\n\n  return label;\n  `}function z(n,e){const i=[p(n,e)];return"date"===n.fieldType&&i.push(n.fieldType.toLowerCase()),n.rotationType&&i.push(n.rotationType.toLowerCase()),i.join("_")}function x(n,e){return{statisticHash:z(n,e),attributeInfo:n,statisticType:e}}function b(e,i,t=!0){const l=[],r=m(e,i);"class-breaks"===i.type?l.push(x(r,"avg")):"unique-value"===i.type&&l.push(x(r,"type"));const a=o(i);for(const n of a){const i=v(e,n);l.push(x(i,"avg"))}return t?n(l,((n,e)=>n.statisticHash===e.statisticHash)):l}export{r as clusterCountField,f as getClusterField,a as getClusterFieldHash,y as getPredominantTypeExpression,m as getRendererAttributeInfo,p as getStatisticId,x as getStatisticInfo,b as getStatisticInfos,v as getVariableAttributeInfo};
