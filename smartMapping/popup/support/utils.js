/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/arrayUtils","../../../intl/messages","../../../intl/substitute","../../../layers/support/fieldUtils","../../../popup/content/AttachmentsContent","../../../popup/content/Content","../../../popup/content/CustomContent","../../../popup/content/FieldsContent","../../../popup/content/MediaContent","../../../popup/content/TextContent","../../../popup/ExpressionInfo","../../../popup/FieldInfo","../../../renderers/support/utils","../../../renderers/visualVariables/support/visualVariableUtils"],(function(e,n,t,i,s,l,a,r,o,p,u,f,d,m,c,b){"use strict";let g=0;const x="expression/";function y(e){return"hasVisualVariables"in e&&e.hasVisualVariables()?e.visualVariables.filter((e=>!b.viewScaleRE.test(e.valueExpression)&&(!("target"in e)||"outline"!==e.target))):[]}function F(e,n){let t=null;"popupTemplate"in e&&e.popupTemplate&&(t=e.popupTemplate.fieldInfos);const i=e.getField(n);let s=null;if(t&&t.some((e=>!(!e||e.fieldName.toLowerCase()!==i.name.toLowerCase())&&(s=e.clone(),!0))),!s){const e=l.numericTypes.indexOf(i.type)>-1,n="integer"===i.type||"small-integer"===i.type;s=new m({fieldName:i.name,isEditable:i.editable,visible:!0,format:e?{places:n?0:2,digitSeparator:!0}:null})}return s.label||(s.label=i.alias),s}function h(e){const{expression:n,title:t,returnType:i}=e;return new d({name:"expr"+g++,expression:n,title:t,returnType:i})}function I(e){const n="number"===e.returnType?{places:2,digitSeparator:!0}:null;return new m({fieldName:`${x}${e.name}`,visible:!0,format:n})}function $(e){return V.apply(this,arguments)}function V(){return(V=n._asyncToGenerator((function*(e){const n=yield i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),{renderer:l,layer:a,normFieldExpressionTemplate:r}=e,o=[],p=[],u=c.getAttributes(l,y);for(const t of u)if("field"===t.type)o.push(F(a,t.field));else if("normalized-field"===t.type){const e=a.getField(t.field),i=a.getField(t.normalizationField),l=h({type:"expression",expression:`\n      $feature["${e.name}"];\n      $feature["${i.name}"];\n      ${"percentage"===r?`($feature["${e.name}"] / $feature["${i.name}"]) * 100;`:`$feature["${e.name}"] / $feature["${i.name}"];`}\n      `,title:"percentage"===r?s.substitute(n.normFieldLabelAsPercent,{expression1:e.alias,expression2:i.alias}):s.substitute(n.normFieldLabel,{expression1:e.alias,expression2:i.alias}),returnType:"number"});o.push(I(l),F(a,t.field),F(a,t.normalizationField)),p.push(l)}else if("expression"===t.type){const e=h(t);o.push(I(e)),p.push(e)}return{fieldInfos:t.unique(o,((e,n)=>e.fieldName===n.fieldName)),expressionInfos:t.unique(p,((e,n)=>e.expression===n.expression))}}))).apply(this,arguments)}function T(e,n){return C.apply(this,arguments)}function C(){return(C=n._asyncToGenerator((function*(e,n){const{fieldInfos:t,expressionInfos:l}=n,a=yield i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");if(t.length>2)return[new p({fieldInfos:t})];const r=[];for(const i of t){const n=i.fieldName;let t=i.label;if(!t){const i=e.getField(n);if(i)t=i.alias||n;else if(l){const e=n.split(x)[1],i=l[l.findIndex((n=>n.name===e))];i&&(t=i.title||i.name)}}r.push(new f({text:s.substitute(a.fieldInfo,{fieldLabel:t,fieldValue:`{${n}}`})}))}return r}))).apply(this,arguments)}function v(e){return!(!("normalizationField"in e)||!e.normalizationField)||"hasVisualVariables"in e&&e.hasVisualVariables()&&e.visualVariables.some((e=>!(!("normalizationField"in e)||!e.normalizationField)))}e.expressionFieldPrefix=x,e.getContentFromFieldInfos=T,e.getExpressionInfo=h,e.getFieldAndExpressionInfos=$,e.getFieldInfo=F,e.getFieldInfoFromExpressionInfo=I,e.getPrimaryVisualVariables=y,e.hasNormalizedField=v,Object.defineProperty(e,"__esModule",{value:!0})}));
