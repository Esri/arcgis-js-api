/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../core/maybe","../../core/Error","../../layers/support/fieldUtils","../support/utils","./support/utils","../support/adapters/support/layerUtils"],(function(e,i,a,s,r,t){"use strict";const o=["date",...a.numericTypes];async function n(n){if(!(n&&n.layer&&(n.field||n.valueExpression||n.sqlExpression)))throw new i("histogram:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(n.valueExpression&&!n.sqlExpression&&!n.view)throw new i("histogram:missing-parameters","View is required when 'valueExpression' is specified");const l=[0,2,1,3,4],{layer:p,...d}=n,f=t.createLayerAdapter(p,l),m={layerAdapter:f,...d};if(m.normalizationType=s.getNormalizationType(m),!f)throw new i("histogram:invalid-parameters","'layer' must be one of these types: "+t.getLayerTypeLabels(l).join(", "));const u=e.isSome(m.signal)?{signal:m.signal}:null;await f.load(u);const h=m.valueExpression||m.sqlExpression,c=m.field,w=c?f.getField(c):null,y=!m.classificationMethod||"equal-interval"===m.classificationMethod,v=await s.getFieldsList({field:c,normalizationField:m.normalizationField,valueExpression:m.valueExpression}),g=r.verifyBasicFieldValidity(f,v,"histogram:invalid-parameters");if(g)throw g;if(w){const e=r.verifyFieldType(f,w,"histogram:invalid-parameters",o);if(e)throw e;if(a.isDateField(w)){if(m.normalizationType)throw new i("histogram:invalid-parameters","Normalization is not allowed for date fields");if(!y)throw new i("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed for date fields")}}else if(h){if(m.normalizationType)throw new i("histogram:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified");if(!y)throw new i("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed when 'valueExpression' or 'sqlExpression' is specified")}return m}async function l(e){const{layerAdapter:i,...a}=await n(e);return i.histogram(a)}return l}));
