/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../core/maybe","../../core/Error","../support/utils","./support/utils","../support/adapters/support/layerUtils"],(function(e,s,r,t,i){"use strict";async function n(n){if(!(n&&n.layer&&n.attributes))throw new s("summary-statistics-for-attributes:missing-parameters","'layer' and 'attributes' parameters are required");if(n.attributes.some((e=>!!e.valueExpression))&&!n.view)throw new s("summary-statistics-for-attributes:missing-parameters","View is required when 'valueExpression' is specified in attributes");const a=[2,1],{layer:u,...l}=n,o=i.createLayerAdapter(u,a),p={layerAdapter:o,...l};if(p.includeZeros=null==p.includeZeros||p.includeZeros,p.includeNegatives=null==p.includeNegatives||p.includeNegatives,!o)throw new s("summary-statistics-for-attributes:invalid-parameters","'layer' must be one of these types: "+i.getLayerTypeLabels(a).join(", "));const c=p.view,f=e.isSome(p.signal)?{signal:p.signal}:null;await Promise.all([c&&c.when(),o.load(f)]);const m=[];for(const e of p.attributes){const s=await r.getFieldsList({field:e.field,valueExpression:e.valueExpression});Array.prototype.push.apply(m,s)}const d=t.verifyBasicFieldValidity(o,m,"summary-statistics-for-attributes:invalid-parameters");if(d)throw d;return p}function a(e,s,r){const t=[],i=[],n=[],a=[],u=[];e.forEach(((e,s)=>{const l=e.field?"field":"expression",o=e.field||e.valueExpression;e.field?(u.push(o),i.push(`var ${l}${s} = Number($feature["${o}"]);`)):(t.push(`function getValueForExpr${s}() {\n  ${o} \n}`),i.push(`var ${l}${s} = Number(getValueForExpr${s}());`)),r||n.push(`${l}${s} = IIf(${l}${s} < 0, 0, ${l}${s});`),a.push(`${l}${s}`)}));let l="return sum;";const o=t.length?null:u.reduce(((e,s)=>`${e} + ${s}`));let p=null;s||r?s?r||(l="return IIf(sum >= 0, sum, null);",o&&(p=`(( ${o} ) >= 0)`)):(l="return IIf(sum != 0, sum, null);",o&&(p=`(( ${o} ) <> 0)`)):(l="return IIf(sum > 0, sum, null);",o&&(p=`(( ${o} ) > 0)`));return{valueExpression:[t.length?t.join("\n"):"",i.join("\n"),n.join("\n"),`var sum = ${a.join(" + ")};`,l].filter(Boolean).join("\n\n"),sqlExpression:o,sqlWhere:p}}async function u(e){const{layerAdapter:s,...r}=await n(e),t=a(r.attributes,r.includeZeros,r.includeNegatives);return s.summaryStatistics({valueExpression:t.valueExpression,sqlExpression:t.sqlExpression,sqlWhere:t.sqlWhere,view:r.view,signal:r.signal})}return u}));
