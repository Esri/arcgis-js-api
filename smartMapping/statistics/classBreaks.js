/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../core/maybe","../../core/Error","../support/utils","./support/utils","../support/adapters/support/layerUtils"],(function(e,a,i,s,r){"use strict";return async function(l){const{layerAdapter:n,...t}=await async function(l){if(!l||!l.layer||!l.field&&!l.valueExpression)throw new a("class-breaks:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(l.valueExpression&&!l.view)throw new a("class-breaks:missing-parameters","View is required when 'valueExpression' is specified");const n=[0,2,1,3],{layer:t,...o}=l,u=r.createLayerAdapter(t,n),m={layerAdapter:u,...o};if(m.normalizationType=i.getNormalizationType(m),m.numClasses=m.numClasses||5,!u)throw new a("class-breaks:invalid-parameters","'layer' must be one of these types: "+r.getLayerTypeLabels(n).join(", "));const p=e.isSome(m.signal)?{signal:m.signal}:null;await u.load(p);const d=m.field,c=m.minValue,f=m.maxValue,w=null!=c||null!=f,h=m.classificationMethod,y="percent-of-total"===m.normalizationType,v=!1!==m.analyzeData,z=d?u.getField(d):null,b=await i.getFieldsList({field:m.field,normalizationField:m.normalizationField,valueExpression:m.valueExpression}),g=s.verifyBasicFieldValidity(u,b,"class-breaks:invalid-parameters");if(g)throw g;if(z){const e=s.verifyNumericField(u,z,"class-breaks:invalid-parameters");if(e)throw e}if(m.valueExpression&&m.normalizationType)throw new a("class-breaks:invalid-parameters","Normalization is not allowed when 'valueExpression' is specified");if(w)if(v){if(y&&null==m.normalizationTotal)throw new a("class-breaks:missing-parameters","'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'minValue', 'maxValue' are specified")}else{if(null==c||null==f)throw new a("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false");if(c>=f)throw new a("class-breaks:invalid-parameters","'minValue' should be less than 'maxValue'");if(h&&"equal-interval"!==h)throw new a("class-breaks:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed when 'analyzeData' is false");if(y&&null==m.normalizationTotal)throw new a("class-breaks:missing-parameters","'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'analyzeData' is false")}else if(!v)throw new a("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false");return m}(l);return n.classBreaks(t)}}));
