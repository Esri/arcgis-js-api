/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/Error","../../../core/maybe","../../../geometry/SpatialReference","../../../layers/support/fieldUtils","../../../statistics/utils","../../../support/arcadeOnDemand"],(function(e,t,n,i,l,r,o,s){"use strict";let a=null;function u(e,t){return c.apply(this,arguments)}function c(){return(c=t._asyncToGenerator((function*(e,t){if(!t)return[];const n=e.field,i=e.valueExpression,r=e.normalizationType,u=e.normalizationField,c=e.normalizationTotal,f=[],d=e.viewInfoParams;let p=null,y=null;if(i){if(!a){const{arcadeUtils:e}=yield s.loadArcade();a=e}p=a.createFunction(i),y=d&&a.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new l(d.spatialReference)})}return t.forEach((e=>{const t=e.attributes;let l;if(i){const t=a.createExecContext(e,y);l=a.executeFunction(p,t)}else t&&(l=t[n]);if(r&&isFinite(l)){const e=t&&parseFloat(t[u]);l=o.getNormalizedValue(l,r,e,c)}f.push(l)})),f}))).apply(this,arguments)}function f(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let l;return"field"===n?l="(NOT "+i+" = 0)":"log"!==n&&"natural-log"!==n&&"square-root"!==n||(l=`(${t} > 0)`),l}function d(e,t){return new n(e,t)}function p(e,t,n){const i=null!=t?e+" >= "+t:"",l=null!=n?e+" <= "+n:"";let r="";return r=i&&l?g(i,l):i||l,r?"("+r+")":""}function y(e,t,n,i){let l=null;return t?t.name!==e.objectIdField&&-1!==i.indexOf(t.type)||(l=d(n,"'field' should be one of these types: "+i.join(","))):l=d(n,"'field' is not defined in the layer schema"),l}function m(e,t,n){let i;return t?t.name!==e.objectIdField&&r.isNumericField(t)||(i=d(n,"'field' should be one of these numeric types: "+r.numericTypes.join(","))):i=d(n,"'field' is not defined in the layer schema"),i}function g(e,t){let n=i.isSome(e)?e:"";return i.isSome(t)&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function h(e,t,n){const i=F({layer:e,fields:t});if(i.length)return d(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const l=b({layer:e,fields:t});return l.length?d(n,"Unsupported fields: "+l.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function F(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function b(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsStatistics}))}e.createError=d,e.getDataValues=u,e.getRangeExpr=p,e.getSQLFilterForNormalization=f,e.mergeWhereClauses=g,e.verifyBasicFieldValidity=h,e.verifyFieldType=y,e.verifyNumericField=m,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
