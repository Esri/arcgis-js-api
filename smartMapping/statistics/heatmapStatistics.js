/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../core/Error","../../core/maybe","../../layers/support/fieldUtils","./support/utils","../support/utils","../support/adapters/support/layerUtils"],(function(e,r,t,a,i,s,n){"use strict";const l=a.numericTypes;function p(e){return y.apply(this,arguments)}function y(){return(y=e._asyncToGenerator((function*(e){if(!(e&&e.layer&&e.view))throw new r("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const a=[n.LayerType.CSVLayer,n.LayerType.FeatureLayer,n.LayerType.OGCFeatureLayer,n.LayerType.GeoJSONLayer,n.LayerType.WFSLayer],{layer:p,...y}=e,u=n.createLayerAdapter(p,a),o={layerAdapter:u,...y};if(o.blurRadius=null==o.blurRadius?10:o.blurRadius,!u)throw new r("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+n.getLayerTypeLabels(a).join(", "));const c=t.isSome(o.signal)?{signal:o.signal}:null;yield u.load(c);const d=o.field,f=d?u.getField(d):null,h=yield s.getFieldsList({field:d}),m=i.verifyBasicFieldValidity(u,h,"heatmap-statistics:invalid-parameters");if(m)throw m;if(f){const e=i.verifyFieldType(u,f,"heatmap-statistics:invalid-parameters",l);if(e)throw e}return o}))).apply(this,arguments)}function u(e){return o.apply(this,arguments)}function o(){return(o=e._asyncToGenerator((function*(e){const{layerAdapter:r,...t}=yield p(e);return r.heatmapStatistics(t)}))).apply(this,arguments)}return u}));
