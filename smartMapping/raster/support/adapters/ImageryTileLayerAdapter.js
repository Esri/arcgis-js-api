/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import r from"../../../../core/Error.js";import{isNone as e}from"../../../../core/maybe.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../../core/accessorSupport/decorators/subclass.js";import o from"../../../../geometry/Extent.js";import{estimateStatisticsHistograms as i}from"../../../../layers/support/rasterFunctions/stretchUtils.js";import m from"./RasterLayerAdapter.js";let h=class extends m{generateRasterInfo(t){return Promise.resolve(this.rasterInfo)}async estimateStatisticsHistograms(t){if(null!==this._statsCache)return this._statsCache;const{raster:s}=this.layer,{extent:a,width:o,height:m}=this._getSamplePixelBlockDescriptor(s.rasterInfo),{pixelBlock:h}=await s.fetchPixels(a,o,m,t);if(e(h))throw new r("raster-layer-adapter","Unable to estimate histograms");return this._statsCache=i(h),this._statsCache}supportsMultidirectionalHillshade(){return!0}load(t){return this.addResolvingPromise(this.layer.load(t).then((()=>this.rasterInfo=this.layer.raster.rasterInfo))),Promise.resolve(this)}_getSamplePixelBlockDescriptor(t,r=1e3){const{pyramidScalingFactor:e,maximumPyramidLevel:s}=t.storageInfo;let{extent:a,width:i,height:m,pixelSize:h}=t,l=Math.ceil(Math.log(Math.max(i,m)/r)/Math.log(e))-1,n=0,p=0;if(l<=s){const t=e**l;i=Math.floor(i/t),m=Math.floor(m/t)}else l=0,i=Math.min(i,r),m=Math.min(m,r),n=Math.max(Math.floor(i/2-500),0),p=Math.max(Math.floor(m/2-500),0),a=new o({xmin:a.xmin+n*h.x,xmax:Math.min(a.xmax,a.xmin+n*h.x*r),ymin:a.ymin+p*h.y,ymax:Math.min(a.ymax,a.ymin+p*h.y*r)});return{extent:a,width:i,height:m,origin:{x:n,y:p}}}};t([s()],h.prototype,"layer",void 0),h=t([a("esri.smartMapping.support.adapters.ImageryTileLayerAdapter")],h);const l=h;export{l as default};
