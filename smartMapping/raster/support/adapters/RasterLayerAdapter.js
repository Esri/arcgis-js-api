/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import s from"../../../../core/Loadable.js";import{isNone as r,isSome as e}from"../../../../core/maybe.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../../core/accessorSupport/decorators/subclass.js";let i=class extends s{constructor(){super(...arguments),this.type="raster-layer-adapter"}async updateRasterInfo(t){this.rasterInfo=await this.generateRasterInfo(t),this.renderingRule=t?.renderingRule}async updateRasterInfoWithEstimatedStats(t){const s=this.rasterInfo;if(r(s.histograms)||r(s.statistics)){const o=await this.estimateStatisticsHistograms(t);e(o)&&(r(s.statistics)&&(s.statistics=o.statistics),r(s.histograms)&&(s.histograms=o.histograms))}}};t([o()],i.prototype,"layer",void 0),t([o()],i.prototype,"rasterInfo",void 0),t([o()],i.prototype,"renderingRule",void 0),t([o({readOnly:!0})],i.prototype,"type",void 0),t([o()],i.prototype,"version",void 0),i=t([a("esri.smartMapping.support.adapters.RasterLayerAdapter")],i);const p=i;export{p as default};
