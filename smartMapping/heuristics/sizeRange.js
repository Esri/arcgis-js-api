/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../core/has","../../core/Error","../../core/maybe","../../core/screenUtils","../../geometry/support/scaleUtils","../../renderers/visualVariables/SizeVariable","./scaleRange","../support/binningUtils","../support/adapters/support/layerUtils"],(function(e,n,l,s,i,a,t,o,r,c){"use strict";const u=1e8,p=1128.497176,v=591657527.591555,f=[10,8,4,2],m=[100,100,60,30],y=[2,1,.75,.5],g=[32,18,12,6],w=[{level:0,resolution:156543.03392800014,scale:591657527.591555},{level:1,resolution:78271.51696399994,scale:295828763.795777},{level:2,resolution:39135.75848200009,scale:147914381.897889},{level:3,resolution:19567.87924099992,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.992452562495,scale:4622324.434309},{level:8,resolution:611.4962262813797,scale:2311162.217155},{level:9,resolution:305.74811314055756,scale:1155581.108577},{level:10,resolution:152.87405657041106,scale:577790.554289},{level:11,resolution:76.43702828507324,scale:288895.277144},{level:12,resolution:38.21851414253662,scale:144447.638572},{level:13,resolution:19.10925707126831,scale:72223.819286},{level:14,resolution:9.554628535634155,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.388657133974685,scale:9027.977411},{level:17,resolution:1.1943285668550503,scale:4513.988705},{level:18,resolution:.5971642835598172,scale:2256.994353},{level:19,resolution:.29858214164761665,scale:1128.497176}];function S(e){return h.apply(this,arguments)}function h(){return(h=e._asyncToGenerator((function*(e){const{view:n}=e;if(!(e&&n&&e.layer))throw new l("size-range:missing-parameters","'view' and 'layer' parameters are required");e.forBinning&&r.verifyBinningParams(e,"size-range");const{layer:i,...a}=e,t=e.forBinning?c.binningCapableLayerTypes:c.featureCapableLayerTypes,o=c.createLayerAdapter(i,t,e.forBinning),u={layerAdapter:o,...a};if(!o)throw new l("size-range:invalid-parameters","'layer' must be one of these types: "+c.getLayerTypeLabels(t).join(", "));yield n.when();const p=s.isSome(u.signal)?{signal:u.signal}:null;yield o.load(p);const v=o.geometryType;if("point"!==v&&"multipoint"!==v&&"polyline"!==v&&"polygon"!==v)throw new l("size-range:not-supported",`sizeRange is not supported for geometryType: ${v}`);return u}))).apply(this,arguments)}function x(e,n){const l=Math.ceil(e/n);let s=Math.ceil(l/4);s<4?s=4:s>16&&(s=16);const i=5*s;return{min:s,max:i<50?50:i}}function z(e,n){const{view:l}=e,s=n.minScale||u,i=l.constraints&&"effectiveLODs"in l.constraints&&l.constraints.effectiveLODs||w,a=[];for(const t in i){if(i[t].scale>s)continue;const e=Number(t),n=[e-3,e,e+3,e+6];for(const l of n)l>-1&&l<i.length&&a.push(i[l].scale);break}return a.sort(((e,n)=>e-n))}function d(e,n){const{view:l,layerAdapter:i}=e,t=i.fullExtent,o=i.minScale||p,r=i.maxScale||v,c=n.minScale||0,u=n.maxScale||0;let f=s.isSome(t)?a.getScale(l,t):0;f=f<o&&f>r?f:0;return{scales:[o,r,c,u,f].map(Math.round).sort(((e,n)=>e-n)).filter(((e,n,l)=>!!e&&l.indexOf(e)===n)).filter(((e,n,l)=>!n||Math.abs(e-l[n-1])>5)),fullExtentScale:f}}function b(e,n){const{minScale:s,maxScale:a}=n,o=z(e,{minScale:s,maxScale:a});if(!o.length)throw new l("scale-range:insufficient-info","not enough scale values");return{minSize:new t({valueExpression:"$view.scale",stops:o.map(((e,n)=>({value:e,size:i.px2pt(f[n])})))}),maxSize:new t({valueExpression:"$view.scale",stops:o.map(((e,n)=>({value:e,size:i.px2pt(m[n])})))})}}function E(e,n){const{minScale:s,maxScale:a}=n,o=z(e,{minScale:s,maxScale:a});if(!o.length)throw new l("scale-range:insufficient-info","not enough scale values");return{minSize:new t({valueExpression:"$view.scale",stops:o.map(((e,n)=>({value:e,size:i.px2pt(y[n])})))}),maxSize:new t({valueExpression:"$view.scale",stops:o.map(((e,n)=>({value:e,size:i.px2pt(g[n])})))})}}function T(e,n){const{spatialStatistics:s,minScale:a,maxScale:o}=n;if(!("avgSize"in s)||!s.avgSize)throw new l("size-range:insufficient-info","average polygon size is invalid");const r=s.avgSize,{resolution:c,scale:u}=e.view,p=c/u,{scales:v,fullExtentScale:f}=d(e,{minScale:a,maxScale:o}),m=[],y=[];v.forEach(((e,n)=>{const{min:l,max:s}=x(r,p*e),a=v.indexOf(f),t=a>-1&&n>a?2:1;m.push({value:e,size:i.px2pt(l/t)}),y.push({value:e,size:i.px2pt(s/t)})}));return{minSize:new t({valueExpression:"$view.scale",stops:m}),maxSize:new t({valueExpression:"$view.scale",stops:y})}}function L(e){return $.apply(this,arguments)}function $(){return($=e._asyncToGenerator((function*(e){const n=yield S(e),{view:l,layerAdapter:s,signal:i}=n,a=yield o({layer:s,view:l,signal:i});switch(s.geometryType){case"point":case"multipoint":return b(n,a);case"polyline":return E(n,a);case"polygon":return T(n,a);case"mesh":case"multipatch":return null}return null}))).apply(this,arguments)}return L}));
