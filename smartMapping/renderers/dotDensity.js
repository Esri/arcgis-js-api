/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../core/maybe","../../core/Error","../../core/promiseUtils","../../renderers/support/AuthoringInfo","../../renderers/Renderer","../../renderers/ClassBreaksRenderer","../../renderers/UniqueValueRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/SimpleRenderer","../../renderers/support/jsonUtils","../../geometry/support/scaleUtils","../support/utils","../support/adapters/support/layerUtils","../statistics/spatialStatistics","../heuristics/outline","./support/utils","./support/dotDensityUtils","../statistics/summaryStatisticsForAttributes","../statistics/support/attributeDensity","../../chunks/dotDensity"],(function(e,t,a,i,r,n,s,l,o,d,u,p,m,c,y,b,g,f,w,v,h,S,V){"use strict";async function D(e){const{view:t,layer:r,attributes:n,signal:s}=e,l=await r.getSampleFeatures({view:t,sampleSize:500,returnGeometry:!0,signal:s}),[o,d]=await i.all([g({features:l,geometryType:r.geometryType}),h({layer:r,attributes:n,includeZeros:!1,includeNegatives:!1,view:t,signal:s})]),u="avgSize"in o&&o.avgSize,p=d.avg;if(!u)throw new a("dot-density-renderer:insufficient-info","Average polygon size is invalid");if(!p)throw new a("dot-density-renderer:insufficient-info","Average attribute value is invalid");const m=c.getResolutionForScale(t.scale,t.spatialReference),y=u*u/(m*m)*.1;return{dotValue:v.roundValue(p/y)||1,referenceScale:t.scale,minSliderValue:1,maxSliderValue:v.roundValue(p)}}async function E(e){const{view:t,layer:i,attributes:r,signal:n}=e,s=[];for(const e of r){const t=await y.getFieldsList({field:e.field,valueExpression:e.valueExpression});s.push(...t)}const l=await i.getSampleFeatures({view:t,sampleSize:500,requiredFields:s,returnGeometry:!0,signal:n}),o=await S({features:l,attributes:r,includeZeros:!1,includeNegatives:!1,view:t});if(!o.avgDensity||!o.minDensity||!o.maxDensity)throw new a("dot-density-renderer:insufficient-info","Invalid density values");const d=c.getResolutionForScale(t.scale,t.spatialReference),u=d*d,p=v.roundValue(o.minDensity*u),m=v.roundValue(o.maxDensity*u);let b=v.roundValue(o.avgDensity*u*10)||1;return b>m&&(b=m),{dotValue:b,referenceScale:t.scale,minSliderValue:p,maxSliderValue:m}}e.createRenderer=async function(e){const n=await async function(e){if(!(e&&e.layer&&e.view&&e.attributes&&e.attributes.length))throw new a("dot-density-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(e.attributes.length>8)throw new a("dot-density-renderer:invalid-parameters","Dot density renderer does not support more than 8 attributes");const r={...e},n=[2,1],s=b.createLayerAdapter(r.layer,n);if(r.layer=s,r.dotBlendingEnabled=null==r.dotBlendingEnabled||r.dotBlendingEnabled,r.dotValueOptimizationEnabled=null==r.dotValueOptimizationEnabled||r.dotValueOptimizationEnabled,!s)throw new a("dot-density-renderer:invalid-parameters","'layer' must be one of these types: "+b.getLayerTypeLabels(n).join(", "));const l=t.isSome(r.signal)?{signal:r.signal}:null;if(await i.all([r.view.when(),s.load(l)]),"polygon"!==s.geometryType)throw new a("dot-density-renderer:not-supported","Dot density renderer is supported for polygon layers only");return r}(e),s=n.layer,l=s.geometryType,o=await async function(e){let a=e.dotDensityScheme,i=null,r=null;const n=await w.getBasemapInfo(e.basemap,e.view);if(i=t.isSome(n.basemapId)?n.basemapId:null,r=t.isSome(n.basemapTheme)?n.basemapTheme:null,a)return{scheme:V.cloneScheme(a),basemapId:i,basemapTheme:r};const s=V.getSchemes({basemap:i,numColors:e.attributes.length,basemapTheme:r});return s&&(a=s.primaryScheme,i=s.basemapId,r=s.basemapTheme),{scheme:a,basemapId:i,basemapTheme:r}}(n),u=o&&o.scheme;if(!u)throw new a("dot-density-renderer:insufficient-info","Unable to find dot-density scheme");const p={layer:s,view:n.view,attributes:n.attributes,signal:n.signal},m={layer:n.layer,view:n.view,signal:n.signal},[c,y]=await i.all([n.trueDensity?E(p):D(p),n.outlineOptimizationEnabled?f(m):null]),{dotValue:g,referenceScale:v,minSliderValue:h,maxSliderValue:S}=c,T=w.createColors(u.colors,n.attributes.length),x=n.attributes.map(((e,t)=>({field:e.field,valueExpression:e.valueExpression,label:e.label,valueExpressionTitle:e.valueExpressionTitle,color:T[t]}))),R=new d({attributes:x,dotBlendingEnabled:n.dotBlendingEnabled,outline:y?w.getSymbolOutlineFromScheme(u,l,y.opacity):null,dotValue:g,referenceScale:n.dotValueOptimizationEnabled?v:null,legendOptions:n.legendOptions});return y&&y.visualVariables&&y.visualVariables.length&&(R.visualVariables=y.visualVariables.map((e=>e.clone()))),R.authoringInfo=new r({type:"dot-density",minSliderValue:h,maxSliderValue:S}),{renderer:R,dotDensityScheme:u,basemapId:o.basemapId,basemapTheme:o.basemapTheme}},Object.defineProperty(e,"__esModule",{value:!0})}));
