/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/PieChartRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../../core/maybe","../../geometry/support/scaleUtils","../../renderers/support/AuthoringInfo","../heuristics/outline","./support/dotDensityUtils","./support/utils","../statistics/spatialStatistics","../statistics/summaryStatisticsForAttributes","../statistics/support/attributeDensity","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils","../symbology/dotDensity"],(function(e,t,r,n,i,a,s,l,o,d,u,p,y,c,m,f,b,g,h,v,S,w,V,T,E){"use strict";const D=500;function x(e){return B.apply(this,arguments)}function B(){return(B=t._asyncToGenerator((function*(e){if(!(e&&e.layer&&e.view&&e.attributes&&e.attributes.length))throw new p("dot-density-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(e.attributes.length>8)throw new p("dot-density-renderer:invalid-parameters","Dot density renderer does not support more than 8 attributes");e.forBinning&&w.verifyBinningParams(e,"dot-density-renderer");const t={...e},r=[T.LayerType.FeatureLayer,T.LayerType.OGCFeatureLayer,T.LayerType.GeoJSONLayer,T.LayerType.WFSLayer],n=e.forBinning?T.binningCapableLayerTypes:r,i=T.createLayerAdapter(t.layer,n,e.forBinning);if(t.layer=i,t.dotBlendingEnabled=null==t.dotBlendingEnabled||t.dotBlendingEnabled,t.dotValueOptimizationEnabled=null==t.dotValueOptimizationEnabled||t.dotValueOptimizationEnabled,!i)throw new p("dot-density-renderer:invalid-parameters","'layer' must be one of these types: "+T.getLayerTypeLabels(n).join(", "));const a=y.isSome(t.signal)?{signal:t.signal}:null;yield Promise.all([t.view.when(),i.load(a)]);if("polygon"!==i.geometryType)throw new p("dot-density-renderer:not-supported","Dot density renderer is supported for polygon layers only");const s=[],l=t.attributes;for(const d of l){const e=yield V.getFieldsList({field:d.field,valueExpression:d.valueExpression});s.push(...e)}const o=g.verifyBasicFieldValidity(i,s.filter(Boolean),"dot-density-renderer:invalid-parameters");if(o)throw o;return t}))).apply(this,arguments)}function L(e){return F.apply(this,arguments)}function F(){return(F=t._asyncToGenerator((function*(e){let t=e.dotDensityScheme,r=null,n=null;const i=yield g.getBasemapInfo(e.basemap,e.view);if(r=y.isSome(i.basemapId)?i.basemapId:null,n=y.isSome(i.basemapTheme)?i.basemapTheme:null,t)return{scheme:E.cloneScheme(t),basemapId:r,basemapTheme:n};const a=E.getSchemes({basemap:r,numColors:e.attributes.length,basemapTheme:n});return a&&(t=a.primaryScheme,r=a.basemapId,n=a.basemapTheme),{scheme:t,basemapId:r,basemapTheme:n}}))).apply(this,arguments)}function R(e){return I.apply(this,arguments)}function I(){return(I=t._asyncToGenerator((function*(e){const{view:t,layer:r,attributes:n,signal:i}=e,a=yield r.getSampleFeatures({view:t,sampleSize:D,returnGeometry:!0,signal:i}),[s,l]=yield Promise.all([h({features:a,geometryType:r.geometryType}),v({layer:r,attributes:n,includeZeros:!1,includeNegatives:!1,view:t,signal:i})]),o="avgSize"in s&&s.avgSize,d=l.avg;if(!o)throw new p("dot-density-renderer:insufficient-info","Average polygon size is invalid");if(!d)throw new p("dot-density-renderer:insufficient-info","Average attribute value is invalid");const u=c.getResolutionForScale(t.scale,t.spatialReference),y=o*o/(u*u)*.1;return{dotValue:b.roundValue(d/y)||1,referenceScale:t.scale,minSliderValue:1,maxSliderValue:b.roundValue(d)}}))).apply(this,arguments)}function O(e){return z.apply(this,arguments)}function z(){return(z=t._asyncToGenerator((function*(e){const{view:t,layer:r,attributes:n,signal:i}=e,a=[];for(const p of n){const e=yield V.getFieldsList({field:p.field,valueExpression:p.valueExpression});a.push(...e)}const s=yield r.getSampleFeatures({view:t,sampleSize:D,requiredFields:a,returnGeometry:!0,signal:i}),l=yield S({features:s,attributes:n,includeZeros:!1,includeNegatives:!1,view:t});if(!l.avgDensity||!l.minDensity||!l.maxDensity)throw new p("dot-density-renderer:insufficient-info","Invalid density values");const o=c.getResolutionForScale(t.scale,t.spatialReference),d=o*o,u=b.roundValue(l.minDensity*d),y=b.roundValue(l.maxDensity*d),m=10;let f=b.roundValue(l.avgDensity*d*m)||1;return f>y&&(f=y),{dotValue:f,referenceScale:t.scale,minSliderValue:u,maxSliderValue:y}}))).apply(this,arguments)}function G(e){return P.apply(this,arguments)}function P(){return(P=t._asyncToGenerator((function*(e){const t=yield x(e),r=t.layer,n=r.geometryType,a=yield L(t),s=a&&a.scheme;if(!s)throw new p("dot-density-renderer:insufficient-info","Unable to find dot-density scheme");const l={layer:r,view:t.view,attributes:t.attributes,signal:t.signal},o={layer:t.layer,view:t.view,signal:t.signal},[d,u]=yield Promise.all([t.trueDensity?O(l):R(l),t.outlineOptimizationEnabled?f(o):null]),{dotValue:y,referenceScale:c,minSliderValue:b,maxSliderValue:h}=d,v=g.createColors(s.colors,t.attributes.length),S=t.attributes.map(((e,t)=>({field:e.field,valueExpression:e.valueExpression,label:e.label,valueExpressionTitle:e.valueExpressionTitle,color:v[t]}))),w=new i({attributes:S,dotBlendingEnabled:t.dotBlendingEnabled,outline:u?g.getSymbolOutlineFromScheme(s,n,u.opacity):null,dotValue:y,referenceScale:t.dotValueOptimizationEnabled?c:null,legendOptions:t.legendOptions});return u&&u.visualVariables&&u.visualVariables.length&&(w.visualVariables=u.visualVariables.map((e=>e.clone()))),w.authoringInfo=new m({type:"dot-density",minSliderValue:b,maxSliderValue:h}),{renderer:w,dotDensityScheme:s,basemapId:a.basemapId,basemapTheme:a.basemapTheme}}))).apply(this,arguments)}e.createRenderer=G,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
