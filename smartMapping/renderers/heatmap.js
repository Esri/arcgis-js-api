/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../Color","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../../core/maybe","../../renderers/support/HeatmapColorStop","./support/utils","../statistics/heatmapStatistics","../support/utils","../support/adapters/support/layerUtils","../../chunks/heatmap"],(function(e,r,a,n,s,t,i,l,o,p,u,m,d,c,f,h,y,b,R){"use strict";const w=.01;function T(e){return g.apply(this,arguments)}function g(){return(g=r._asyncToGenerator((function*(e){if(!(e&&e.layer&&e.view))throw new m("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const{blurRadius:r,minRatio:a,maxRatio:n,fadeToTransparent:s}=e,t={...e};t.blurRadius=null==r?10:r,t.minRatio=null==a?.01:a,t.maxRatio=null==n?1:n,t.fadeToTransparent=null==s||s;const i=[0,2,3,1,6],l=b.createLayerAdapter(t.layer,i);if(t.layer=l,!l)throw new m("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+b.getLayerTypeLabels(i).join(", "));const o=d.isSome(t.signal)?{signal:t.signal}:null;yield l.load(o);const p=yield y.getFieldsList({field:t.field}),u=f.verifyBasicFieldValidity(l,p,"heatmap-renderer:invalid-parameters");if(u)throw u;return t}))).apply(this,arguments)}function S(e){return v.apply(this,arguments)}function v(){return(v=r._asyncToGenerator((function*(e){let r=e.scheme,a=null,n=null;const s=yield f.getBasemapInfo(e.basemap,e.view);if(a=d.isSome(s.basemapId)?s.basemapId:null,n=d.isSome(s.basemapTheme)?s.basemapTheme:null,r)return{scheme:R.cloneScheme(r),basemapId:a,basemapTheme:n};const t=R.getSchemes({basemap:a,basemapTheme:n});return t&&(r=t.primaryScheme,a=t.basemapId,n=t.basemapTheme),{scheme:r,basemapId:a,basemapTheme:n}}))).apply(this,arguments)}function I(e,r){return x.apply(this,arguments)}function x(){return(x=r._asyncToGenerator((function*(e,r){const{fieldOffset:n}=e,{field:s,basemap:t,blurRadius:l,minRatio:o,maxRatio:p,fadeToTransparent:u,heatmapScheme:m,view:d}=r,{scheme:h,basemapId:y,basemapTheme:b}=yield S({basemap:t,scheme:m,view:d}),T=h.colors,g=T.length,v=!e.count,I=v?[0,100]:[e.min,e.max],x=(p-o)/(g-1),_=T[0],O=[new c({ratio:0,color:new a([_.r,_.g,_.b,0])}),new c({ratio:w,color:new a([_.r,_.g,_.b,0])}),new c({ratio:u?o:w,color:_})];f.createColors(T,g).forEach(((e,r)=>{O.push(new c({ratio:o+x*r,color:e}))}));const B=new i({blurRadius:l,colorStops:O,field:s,minPixelIntensity:I[0],maxPixelIntensity:I[1]});return null!=n&&(B.fieldOffset=n),{renderer:B,statistics:e,defaultValuesUsed:v,scheme:R.cloneScheme(h),basemapId:y,basemapTheme:b}}))).apply(this,arguments)}function _(e){return O.apply(this,arguments)}function O(){return(O=r._asyncToGenerator((function*(e){const r=yield T(e);return I(r.statistics?r.statistics:yield h({layer:r.layer,field:r.field,fieldOffset:r.fieldOffset,blurRadius:r.blurRadius,view:r.view,signal:r.signal}),r)}))).apply(this,arguments)}e.createRenderer=_,Object.defineProperty(e,"__esModule",{value:!0})}));
