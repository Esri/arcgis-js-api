/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../core/maybe","../../core/Error","../../Color","../../renderers/Renderer","../../renderers/ClassBreaksRenderer","../../renderers/UniqueValueRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/support/HeatmapColorStop","../../renderers/HeatmapRenderer","../../renderers/SimpleRenderer","../../renderers/support/jsonUtils","../support/utils","../support/adapters/support/layerUtils","./support/utils","../statistics/heatmapStatistics","../../chunks/heatmap"],(function(e,a,r,s,t,n,i,l,o,m,d,p,c,u,f,h,b,w){"use strict";const y=.01;async function R(e){if(!(e&&e.layer&&e.view))throw new r("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const{blurRadius:s,minRatio:t,maxRatio:n,fadeToTransparent:i}=e,l={...e};l.blurRadius=null==s?10:s,l.minRatio=null==t?.01:t,l.maxRatio=null==n?1:n,l.fadeToTransparent=null==i||i;const o=[0,2,1],m=f.createLayerAdapter(l.layer,o);if(l.layer=m,!m)throw new r("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(o).join(", "));const d=a.isSome(l.signal)?{signal:l.signal}:null;await m.load(d);const p=await u.getFieldsList({field:l.field}),c=h.verifyBasicFieldValidity(m,p,"heatmap-renderer:invalid-parameters");if(c)throw c;return l}async function T(e){let r=e.scheme,s=null,t=null;const n=await h.getBasemapInfo(e.basemap,e.view);if(s=a.isSome(n.basemapId)?n.basemapId:null,t=a.isSome(n.basemapTheme)?n.basemapTheme:null,r)return{scheme:w.cloneScheme(r),basemapId:s,basemapTheme:t};const i=w.getSchemes({basemap:s,basemapTheme:t});return i&&(r=i.primaryScheme,s=i.basemapId,t=i.basemapTheme),{scheme:r,basemapId:s,basemapTheme:t}}async function g(e,a){const{fieldOffset:r}=e,{field:t,basemap:n,blurRadius:i,minRatio:l,maxRatio:o,fadeToTransparent:p,heatmapScheme:c,view:u}=a,{scheme:f,basemapId:b,basemapTheme:R}=await T({basemap:n,scheme:c,view:u}),g=f.colors,S=g.length,v=!e.count,I=v?[0,100]:[e.min,e.max],x=(o-l)/(S-1),O=g[0],C=[new m({ratio:0,color:new s([O.r,O.g,O.b,0])}),new m({ratio:y,color:new s([O.r,O.g,O.b,0])}),new m({ratio:p?l:y,color:O})];h.createColors(g,S).forEach(((e,a)=>{C.push(new m({ratio:l+x*a,color:e}))}));const L=new d({blurRadius:i,colorStops:C,field:t,minPixelIntensity:I[0],maxPixelIntensity:I[1]});return null!=r&&(L.fieldOffset=r),{renderer:L,statistics:e,defaultValuesUsed:v,scheme:w.cloneScheme(f),basemapId:b,basemapTheme:R}}async function S(e){const a=await R(e);return g(a.statistics?a.statistics:await b({layer:a.layer,field:a.field,fieldOffset:a.fieldOffset,blurRadius:a.blurRadius,view:a.view,signal:a.signal}),a)}e.createRenderer=S,Object.defineProperty(e,"__esModule",{value:!0})}));
