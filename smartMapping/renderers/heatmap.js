/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../Color","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../../core/maybe","../../renderers/support/HeatmapColorStop","./support/utils","../statistics/heatmapStatistics","../support/utils","../support/adapters/support/layerUtils","../../chunks/heatmap"],(function(e,r,a,t,n,s,i,l,o,p,u,m,d,c,y,f,h,b,T){"use strict";const R=.01;function w(e){return S.apply(this,arguments)}function S(){return(S=r._asyncToGenerator((function*(e){if(!(e&&e.layer&&e.view))throw new m("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const{blurRadius:r,minRatio:a,maxRatio:t,fadeToTransparent:n}=e,s={...e};s.blurRadius=null==r?10:r,s.minRatio=null==a?.01:a,s.maxRatio=null==t?1:t,s.fadeToTransparent=null==n||n;const i=[b.LayerType.CSVLayer,b.LayerType.FeatureLayer,b.LayerType.OGCFeatureLayer,b.LayerType.GeoJSONLayer,b.LayerType.WFSLayer],l=b.createLayerAdapter(s.layer,i);if(s.layer=l,!l)throw new m("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+b.getLayerTypeLabels(i).join(", "));const o=d.isSome(s.signal)?{signal:s.signal}:null;yield l.load(o);const p=yield h.getFieldsList({field:s.field}),u=y.verifyBasicFieldValidity(l,p,"heatmap-renderer:invalid-parameters");if(u)throw u;return s}))).apply(this,arguments)}function g(e){return L.apply(this,arguments)}function L(){return(L=r._asyncToGenerator((function*(e){let r=e.scheme,a=null,t=null;const n=yield y.getBasemapInfo(e.basemap,e.view);if(a=d.isSome(n.basemapId)?n.basemapId:null,t=d.isSome(n.basemapTheme)?n.basemapTheme:null,r)return{scheme:T.cloneScheme(r),basemapId:a,basemapTheme:t};const s=T.getSchemes({basemap:a,basemapTheme:t});return s&&(r=s.primaryScheme,a=s.basemapId,t=s.basemapTheme),{scheme:r,basemapId:a,basemapTheme:t}}))).apply(this,arguments)}function v(e,r){return I.apply(this,arguments)}function I(){return(I=r._asyncToGenerator((function*(e,r){const{fieldOffset:t}=e,{field:n,basemap:s,blurRadius:l,minRatio:o,maxRatio:p,fadeToTransparent:u,heatmapScheme:m,view:d}=r,{scheme:f,basemapId:h,basemapTheme:b}=yield g({basemap:s,scheme:m,view:d}),w=f.colors,S=w.length,L=!e.count,v=L?[0,100]:[e.min,e.max],I=(p-o)/(S-1),x=w[0],O=[new c({ratio:0,color:new a([x.r,x.g,x.b,0])}),new c({ratio:R,color:new a([x.r,x.g,x.b,0])}),new c({ratio:u?o:R,color:x})];y.createColors(w,S).forEach(((e,r)=>{O.push(new c({ratio:o+I*r,color:e}))}));const _=new i({blurRadius:l,colorStops:O,field:n,minPixelIntensity:v[0],maxPixelIntensity:v[1]});return null!=t&&(_.fieldOffset=t),{renderer:_,statistics:e,defaultValuesUsed:L,scheme:T.cloneScheme(f),basemapId:h,basemapTheme:b}}))).apply(this,arguments)}function x(e){return O.apply(this,arguments)}function O(){return(O=r._asyncToGenerator((function*(e){const r=yield w(e);return v(r.statistics?r.statistics:yield f({layer:r.layer,field:r.field,fieldOffset:r.fieldOffset,blurRadius:r.blurRadius,view:r.view,signal:r.signal}),r)}))).apply(this,arguments)}e.createRenderer=x,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
