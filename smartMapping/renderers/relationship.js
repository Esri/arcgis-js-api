/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../core/lang","../../core/maybe","../../core/Error","../../intl/messages","../../renderers/support/AuthoringInfoClassBreakInfo","../../renderers/support/AuthoringInfoFieldInfo","../../renderers/support/AuthoringInfo","../../symbols/support/utils","../support/adapters/support/layerUtils","./support/utils","./type","../../chunks/relationship"],(function(e,a,n,l,i,r,s,o,t,d,u,m,f){"use strict";const p=["equal-interval","natural-breaks","quantile"],c=["HH","HL","LH","LL"],h={2:[["HL","HH"],["LL","LH"]],3:[["HL","HM","HH"],["ML","MM","MH"],["LL","LM","LH"]],4:[["HL","HM1","HM2","HH"],["M2L","M2M1","M2M2","M2H"],["M1L","M1M1","M1M2","M1H"],["LL","LM1","LM2","LH"]]},y={2:["L","H"],3:["L","M","H"],4:["L","M1","M2","H"]},b=e=>({minValue:e.minValue,maxValue:e.maxValue});async function v(e){if(!(e&&e.layer&&e.view&&e.field1&&e.field2))throw new l("relationship-renderer:missing-parameters","'layer', 'view', 'field1' and 'field2' parameters are required");const a={...e};if(a.symbolType=a.symbolType||"2d",a.defaultSymbolEnabled=null==a.defaultSymbolEnabled||a.defaultSymbolEnabled,a.classificationMethod=a.classificationMethod||"quantile",a.numClasses=a.numClasses||3,a.focus=a.focus||null,-1===p.indexOf(a.classificationMethod))throw new l("relationship-renderer:invalid-parameters",`classification method ${a.classificationMethod} is not supported`);if(a.numClasses<2||a.numClasses>4)throw new l("relationship-renderer:invalid-parameters","'numClasses' must be 2, 3 or 4");if(e.focus&&-1===c.indexOf(e.focus))throw new l("relationship-renderer:invalid-parameters","'focus' must be 'HH', 'HL', 'LH', 'LL' or null");const i=[0,2,1,3],r=d.createLayerAdapter(a.layer,i);if(a.layer=r,!r)throw new l("relationship-renderer:invalid-parameters","'layer' must be one of these types: "+d.getLayerTypeLabels(i).join(", "));const s=n.isSome(a.signal)?{signal:a.signal}:null;await r.load(s);const o=r.geometryType,t=a.symbolType.indexOf("3d")>-1;if(a.outlineOptimizationEnabled="polygon"===o&&a.outlineOptimizationEnabled,a.sizeOptimizationEnabled=("point"===o||"multipoint"===o||"polyline"===o)&&a.sizeOptimizationEnabled,"mesh"===o)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none";else{if("3d-volumetric-uniform"===a.symbolType&&"point"!==o)throw new l("relationship-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(t&&"polygon"===o)throw new l("relationship-renderer:not-supported","3d symbols are not supported for polygon layers");if(a.symbolType.indexOf("3d-volumetric")>-1&&(!a.view||"3d"!==a.view.type))throw new l("relationship-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const{field1:m,field2:f}=a,h=[m.field,f.field];m.normalizationField&&h.push(m.normalizationField),f.normalizationField&&h.push(f.normalizationField);const y=u.verifyBasicFieldValidity(r,h,"relationship-renderer:invalid-parameters");if(y)throw y;return a}async function w(e){if(!(e&&e.renderer&&e.numClasses))throw new l("update-relationship-renderer:missing-parameters","'renderer' and 'numClasses' parameters are required");const{field1:a,field2:n,renderer:i,numClasses:r,colors:s}=e,o=r**2;if((a||n)&&!(a&&n&&a.field&&n.field))throw new l("update-relationship-renderer:missing-parameters","'field1' and 'field2' parameters are required");if(a&&!a.classBreakInfos||n&&!n.classBreakInfos)throw new l("update-relationship-renderer:missing-parameters","'field1.classBreakInfos' and 'field2.classBreakInfos' are required");if(!i.authoringInfo)throw new l("update-relationship-renderer:missing-parameters","'renderer.authoringInfo' is required");if(i.uniqueValueInfos.length!==o)throw new l("update-relationship-renderer:invalid-parameters",`Renderer must have ${o} unique value infos to support ${r} classes`);if(s&&s.length!==o)throw new l("update-relationship-renderer:invalid-parameters",`The scheme must have ${o} colors`);return e}async function g(e){let a=e.relationshipScheme,l=null,i=null;const r=await u.getBasemapInfo(e.basemap,e.view);if(l=n.isSome(r.basemapId)?r.basemapId:null,i=n.isSome(r.basemapTheme)?r.basemapTheme:null,a)return{scheme:f.cloneScheme(a),basemapId:l,basemapTheme:i};const s=f.getSchemes({basemap:l,basemapTheme:i,geometryType:e.geometryType,theme:e.theme,worldScale:e.worldScale,view:e.view});return s&&(a=s.primaryScheme,l=s.basemapId,i=s.basemapTheme),{scheme:a,basemapId:l,basemapTheme:i}}function I(e,n){const l=a.clone(h[e]);return f.flatten2DArray(l,n)}function M(e,a){return I(e,a).map((e=>({value:e,count:0})))}function z(e,a,n,l){const{field:i,normalizationField:r}=e,{field:s,normalizationField:o}=a,t=n.map((e=>[e.minValue,e.maxValue])),d=l.map((e=>[e.minValue,e.maxValue])),u=t.length,m=y[u];return`\n  var field1 = $feature['${i}'];\n  var field2 = $feature['${s}'];\n  var hasNormField1 = ${r?"true":"false"};\n  var hasNormField2 = ${o?"true":"false"};\n  var normField1 = ${r?`$feature['${r}']`:"null"};\n  var normField2 = ${o?`$feature['${o}']`:"null"};\n\n  if (\n    IsEmpty(field1) ||\n    IsEmpty(field2) ||\n    (hasNormField1 && (IsEmpty(normField1) || normField1 == 0)) ||\n    (hasNormField2 && (IsEmpty(normField2) || normField2 == 0))\n  ) {\n    return null;\n  }\n\n  var value1 = IIf(hasNormField1, (field1 / normField1), field1);\n  var value2 = IIf(hasNormField2, (field2 / normField2), field2);\n\n  var breaks1 = ${JSON.stringify(t)};\n  var breaks2 = ${JSON.stringify(d)};\n  var classCodes = ${JSON.stringify(m)};\n\n  function getClassCode(value, breaks) {\n    var code = null;\n\n    for (var i in breaks) {\n      var info = breaks[i];\n      if (value >= info[0] && value <= info[1]) {\n        code = classCodes[i];\n        break;\n      }\n    }\n\n    return code;\n  }\n\n  var code1 = getClassCode(value1, breaks1);\n  var code2 = getClassCode(value2, breaks2);\n\n  var classValue = IIf(IsEmpty(code1) || IsEmpty(code2), null, code1 + code2);\n  return classValue;\n  `}async function F(e,a,n){const r=await i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),{basemap:s,classificationMethod:t,field1:d,field2:u,focus:p,numClasses:c,signal:h}=e,y=e.layer,v=a.classBreakInfos,w=n.classBreakInfos;if(c!==v.length||v.length!==w.length)throw new l("relationship-renderer:error","incompatible class breaks");const I=M(c,p),F=z(e.field1,e.field2,v,w),T=(await g({basemap:s,geometryType:y.geometryType,theme:"default",relationshipScheme:e.relationshipScheme,worldScale:e.symbolType.indexOf("3d-volumetric")>-1,view:e.view})).scheme,L=await m.createRenderer({layer:y,basemap:s,valueExpression:F,valueExpressionTitle:r.relationship.legendTitle,numTypes:-1,sortEnabled:!1,defaultSymbolEnabled:e.defaultSymbolEnabled,typeScheme:{colors:f.getColors(T,c,p),...T},statistics:{uniqueValueInfos:I},legendOptions:e.legendOptions,outlineOptimizationEnabled:e.outlineOptimizationEnabled,sizeOptimizationEnabled:e.sizeOptimizationEnabled,symbolType:e.symbolType,colorMixMode:e.colorMixMode,edgesType:e.edgesType,view:e.view,signal:h}),V=L.renderer,k=V.uniqueValueInfos,C=r.relationship;for(const l of k)l.label=C[l.value];const H=new o({type:"relationship",classificationMethod:t,numClasses:c,focus:p,field1:{field:d.field,normalizationField:d.normalizationField,label:d.label,classBreakInfos:v.map(b)},field2:{field:u.field,normalizationField:u.normalizationField,label:u.label,classBreakInfos:w.map(b)}});return V.authoringInfo=H,{renderer:V,classBreaks:{field1:a,field2:n},uniqueValueInfos:L.uniqueValueInfos,relationshipScheme:T,basemapId:L.basemapId,basemapTheme:L.basemapTheme}}function T(e,a,n){const l=I(a,n);e.sort(((e,a)=>{const n=l.indexOf(e.value),i=l.indexOf(a.value);let r=0;return n<i?r=-1:n>i&&(r=1),r}))}function L(e,a){const{authoringInfo:n}=e;n.numClasses=a.numClasses,n.focus=a.focus||null,n.focus||delete n.focus;const{field1:l,field2:i}=a;n.field1=new s.default({field:l.field,normalizationField:l.normalizationField,label:l.label,classBreakInfos:l.classBreakInfos.map((e=>new r.default(b(e))))}),n.field2=new s.default({field:i.field,normalizationField:i.normalizationField,label:i.label,classBreakInfos:i.classBreakInfos.map((e=>new r.default(b(e))))}),e.authoringInfo=n}async function V(e){const a=await w(e),{field1:n,field2:l,renderer:i,numClasses:r,focus:s,colors:o}=a,d=i.clone();if(d.valueExpression=z(n,l,n.classBreakInfos,l.classBreakInfos),T(d.uniqueValueInfos,r,s),o){const e=u.createColors(o,o.length);d.uniqueValueInfos.forEach(((a,n)=>t.applyColorToSymbol(a.symbol,e[n])))}return L(d,a),d}async function k(e){const a=await v(e),{layer:n,classificationMethod:i,field1:r,field2:s,numClasses:o,view:t,signal:d}=a,m={layer:n,classificationMethod:i,field:r.field,normalizationField:r.normalizationField,normalizationType:r.normalizationField?"field":null,minValue:r.minValue,maxValue:r.maxValue,analyzeData:!(null!=r.minValue&&null!=r.maxValue),numClasses:o,view:t,signal:d},f={layer:n,classificationMethod:i,field:s.field,normalizationField:s.normalizationField,normalizationType:s.normalizationField?"field":null,minValue:s.minValue,maxValue:s.maxValue,analyzeData:!(null!=s.minValue&&null!=s.maxValue),numClasses:o,view:t,signal:d},[p,c]=await Promise.all([u.getClassBreaks(m),u.getClassBreaks(f)]);if(!p||!c)throw new l("relationship-renderer:error","error when calculating class breaks");return F(a,p.result,c.result)}e.createRenderer=k,e.updateRenderer=V,Object.defineProperty(e,"__esModule",{value:!0})}));
