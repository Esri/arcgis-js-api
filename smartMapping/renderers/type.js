/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import"../../renderers/PointCloudClassBreaksRenderer.js";import"../../renderers/PointCloudRenderer.js";import"../../renderers/PointCloudRGBRenderer.js";import"../../renderers/PointCloudStretchRenderer.js";import e from"../../renderers/PointCloudUniqueValueRenderer.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/SimpleRenderer.js";import r from"../../renderers/UniqueValueRenderer.js";import"../../renderers/support/jsonUtils.js";import s from"../../core/Error.js";import{clone as l}from"../../core/lang.js";import{isSome as o}from"../../core/maybe.js";import{fetchMessageBundle as i}from"../../intl/messages.js";import{LegendOptions as t}from"../../renderers/support/LegendOptions.js";import{createUniqueValueLabel as n,calculateDateFormatInterval as a}from"../../renderers/support/utils.js";import p from"../heuristics/outline.js";import u from"../heuristics/sizeRange.js";import{getPointSizeAlgorithm as m,verifyBasicFieldValidity as d,isValidPointSize as c,createColors as y,getSymbolSizeFromScheme as f,getSymbolOutlineFromScheme as b,createSymbol as h,getBasemapInfo as v}from"./support/utils.js";import g from"../statistics/uniqueValues.js";import{getFieldsList as w}from"../support/utils.js";import{createLayerAdapter as T,featureCapableLayerTypes as j,getLayerTypeLabels as E,LayerType as x}from"../support/adapters/support/layerUtils.js";import{cloneScheme as I,getSchemes as V}from"../symbology/type.js";const z="date";async function M(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new s("type-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new s("type-renderer:missing-parameters","View is required when 'valueExpression' is specified");const r={...e};r.symbolType=r.symbolType||"2d",r.numTypes=null==r.numTypes?10:r.numTypes,r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled,r.sortBy=null==r.sortBy?"count":r.sortBy,r.sortEnabled=null==r.sortEnabled||r.sortEnabled,r.statistics=l(r.statistics);const i=T(r.layer,j);if(r.layer=i,!i)throw new s("type-renderer:invalid-parameters","'layer' must be one of these types: "+E(j).join(", "));const t=o(r.signal)?{signal:r.signal}:null;await i.load(t);const n=i.geometryType;if(r.outlineOptimizationEnabled="polygon"===n&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===n||"multipoint"===n||"polyline"===n)&&r.sizeOptimizationEnabled,"mesh"===n)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==n)throw new s("type-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new s("type-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const a=await w({field:r.field,valueExpression:r.valueExpression}),p=d(i,a,"type-renderer:invalid-parameters");if(p)throw p;return r}async function S(e){if(!(e&&e.layer&&e.field))throw new s("type-point-cloud-class-renderer:missing-parameters","'layer' and 'field' parameters are required");const r={...e};r.statistics=l(r.statistics);const i=[x.PointCloudLayer],t=T(r.layer,i);if(r.layer=t,r.density=r.density||25,r.size=r.size||"100%",!c(r.size))throw new s("type-point-cloud-class-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'");if(!t)throw new s("type-point-cloud-class-renderer:invalid-parameters","'layer' must be one of these types: "+E(i).join(", "));const n=o(r.signal)?{signal:r.signal}:null;await t.load(n);const a=await w({field:r.field}),p=d(t,a,"type-point-cloud-class-renderer:invalid-parameters");if(p)throw p;return r}async function R(e){let r=e.typeScheme,s=null,l=null;const i=await v(e.basemap,e.view);if(s=o(i.basemapId)?i.basemapId:null,l=o(i.basemapTheme)?i.basemapTheme:null,r)return{scheme:I(r),basemapId:s,basemapTheme:l};const t=V({basemap:s,basemapTheme:l,geometryType:e.geometryType,theme:e.theme,worldScale:e.worldScale,view:e.view});return t&&(r=t.primaryScheme,s=t.basemapId,l=t.basemapTheme),{scheme:r,basemapId:s,basemapTheme:l}}function q(e,r){let s;return s=e.label<r.label?-1:e.label>r.label?1:0,s}function C(e,r){let s;return s=e.value<r.value?-1:e.value>r.value?1:0,s}function O(e,r){let s=r.count-e.count;return 0===s&&(s=q(e,r)),s}function P(e,r){let s=r.count-e.count;return 0===s&&(s=C(e,r)),s}function B(e,r,s){let l;"count"===r?(l=P,s&&s.codedValues&&(l=O)):"value"===r&&(l=C,s&&s.codedValues&&(l=q)),l&&e.sort(l)}async function U(e,s,l,o){const p=await i("esri/smartMapping/t9n/smartMapping"),u=e.uniqueValueInfos,m=s.layer,d=s.field,c=d?m.getField(d):null,v=c?m.getFieldDomain(c.name):null,g=-1===s.numTypes?u.length:s.numTypes,w=m.geometryType,T=await R({basemap:s.basemap,geometryType:w,typeScheme:s.typeScheme,worldScale:s.symbolType.includes("3d-volumetric"),view:s.view}),j=T.scheme,E=new r({field:d});let x,V=-1;const M={value:null,domain:v,fieldInfo:c};if(u.forEach(((e,r)=>{M.value=e.value,e.label=n(M),null===e.value&&(V=r)})),V>-1&&(x=u.splice(V,1)[0]),!1!==s.sortEnabled&&B(u,s.sortBy,v),c&&c.type===z){const e=u.filter(((e,r)=>r<g)).map((e=>e.value));M.dateFormatInterval=a(e)}const S=l&&l.opacity;let q=y(j.colors,u.length);const C=f(j,w),O=b(j,w,S);u.forEach(((e,r)=>{M.value=e.value,e.label=n(M),e.symbol=h(w,{type:s.symbolType,color:q[r],size:C,outline:O,meshInfo:{colorMixMode:s.colorMixMode,edgesType:s.edgesType}})})),s.valueExpression&&(E.valueExpression=s.valueExpression,E.valueExpressionTitle=s.valueExpressionTitle),s.legendOptions&&(E.legendOptions=new t(s.legendOptions)),q=y(j.colors,g);for(let r=0;r<g;r++){const e=u[r];e&&E.addUniqueValueInfo({value:e.value,label:e.label,symbol:h(w,{type:s.symbolType,color:q[r],size:C,outline:O,meshInfo:{colorMixMode:s.colorMixMode,edgesType:s.edgesType}})})}s.defaultSymbolEnabled&&(E.defaultSymbol=h(w,{type:s.symbolType,color:j.noDataColor,size:C,outline:O,meshInfo:{colorMixMode:s.colorMixMode,edgesType:s.edgesType}}),E.defaultLabel=p.other),x&&(x.symbol=h(w,{type:s.symbolType,color:j.noDataColor,size:C,outline:O,meshInfo:{colorMixMode:s.colorMixMode,edgesType:s.edgesType}}),u.push(x));const P=[],U=E.uniqueValueInfos.length===u.length?-1:E.uniqueValueInfos.length;if(U>-1)for(let r=U;r<u.length;r++)P.push({...u[r]});return l&&l.visualVariables&&l.visualVariables.length&&(E.visualVariables=l.visualVariables.map((e=>e.clone()))),o&&o.minSize&&(E.visualVariables?E.visualVariables.push(o.minSize):E.visualVariables=[o.minSize]),{renderer:E,uniqueValueInfos:u,excludedUniqueValueInfos:P,typeScheme:I(j),basemapId:T.basemapId,basemapTheme:T.basemapTheme}}async function D(e,r){const s=e.uniqueValueInfos,l=await R({basemap:"gray",theme:"point-cloud-class",geometryType:"point",typeScheme:r}),o=l&&l.scheme,i="point-cloud-class"===o.theme,t=i?o.colors:y(o.colors,s.length);return B(s,"value"),s.map(((e,r)=>{const s=e.value;let l=null;return i?(l=t[s],l||(l=t[t.length-1])):l=t[r],{values:[s],color:l,label:e.label}}))}async function A(e){const r=await M(e),{layer:s,view:l,signal:o}=r,i={layer:s,field:r.field,valueExpression:r.valueExpression,returnAllCodedValues:r.returnAllCodedValues,view:l,signal:o},[t,n,a]=await Promise.all([null!=r.statistics?r.statistics:g(i),r.outlineOptimizationEnabled?p({layer:s,view:l,signal:o}):null,r.sizeOptimizationEnabled?u({layer:s,view:l,signal:o}):null]);return U(t,r,n,a)}async function F(r){const s=await S(r),l=null!=s.statistics?s.statistics:await g({layer:s.layer,field:s.field,signal:s.signal});return{renderer:new e({field:s.field,pointsPerInch:s.density,pointSizeAlgorithm:m(s.size),colorUniqueValueInfos:await D(l,s.typeScheme)})}}export{F as createPCClassRenderer,A as createRenderer};
