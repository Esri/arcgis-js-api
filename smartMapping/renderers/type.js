/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../core/lang","../../core/maybe","../../core/Error","../../core/promiseUtils","../../intl/messages","../../renderers/PointCloudRenderer","../../renderers/support/LegendOptions","../../renderers/PointCloudClassBreaksRenderer","../../renderers/PointCloudRGBRenderer","../../renderers/PointCloudStretchRenderer","../../renderers/PointCloudUniqueValueRenderer","../../renderers/Renderer","../../renderers/ClassBreaksRenderer","../../renderers/UniqueValueRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/SimpleRenderer","../../renderers/support/jsonUtils","../support/utils","../../renderers/support/utils","../support/adapters/support/layerUtils","../heuristics/outline","../heuristics/sizeRange","./support/utils","../statistics/uniqueValues","../../chunks/type"],(function(e,l,r,a,s,n,t,i,o,u,d,p,c,m,y,b,f,h,v,g,w,T,S,E,V,x,z,I){"use strict";async function M(e){let l=e.typeScheme,a=null,s=null;const n=await x.getBasemapInfo(e.basemap,e.view);if(a=r.isSome(n.basemapId)?n.basemapId:null,s=r.isSome(n.basemapTheme)?n.basemapTheme:null,l)return{scheme:I.cloneScheme(l),basemapId:a,basemapTheme:s};const t=I.getSchemes({basemap:a,basemapTheme:s,geometryType:e.geometryType,theme:e.theme,worldScale:e.worldScale,view:e.view});return t&&(l=t.primaryScheme,a=t.basemapId,s=t.basemapTheme),{scheme:l,basemapId:a,basemapTheme:s}}function q(e,l){let r;return r=e.label<l.label?-1:e.label>l.label?1:0,r}function C(e,l){let r;return r=e.value<l.value?-1:e.value>l.value?1:0,r}function R(e,l){let r=l.count-e.count;return 0===r&&(r=q(e,l)),r}function O(e,l){let r=l.count-e.count;return 0===r&&(r=C(e,l)),r}function L(e,l,r){let a;"count"===l?(a=O,r&&r.codedValues&&(a=R)):"value"===l&&(a=C,r&&r.codedValues&&(a=q)),a&&e.sort(a)}async function B(e,l){const r=e.uniqueValueInfos,a=await M({basemap:"gray",theme:"point-cloud-class",geometryType:"point",typeScheme:l}),s=a&&a.scheme,n="point-cloud-class"===s.theme,t=n?s.colors:x.createColors(s.colors,r.length);return L(r,"value"),r.map(((e,l)=>{const r=e.value;let a=null;return n?(a=t[r],a||(a=t[t.length-1])):a=t[l],{values:[r],color:a,label:e.label}}))}e.createPCClassRenderer=async function(e){const s=await async function(e){if(!(e&&e.layer&&e.field))throw new a("type-point-cloud-class-renderer:missing-parameters","'layer' and 'field' parameters are required");const s={...e};s.statistics=l.clone(s.statistics);const n=[4],t=S.createLayerAdapter(s.layer,n);if(s.layer=t,s.density=s.density||25,s.size=s.size||"100%",!x.isValidPointSize(s.size))throw new a("type-point-cloud-class-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'");if(!t)throw new a("type-point-cloud-class-renderer:invalid-parameters","'layer' must be one of these types: "+S.getLayerTypeLabels(n).join(", "));const i=r.isSome(s.signal)?{signal:s.signal}:null;await t.load(i);const o=await w.getFieldsList({field:s.field}),u=x.verifyBasicFieldValidity(t,o,"type-point-cloud-class-renderer:invalid-parameters");if(u)throw u;return s}(e),n=null!=s.statistics?s.statistics:await z({layer:s.layer,field:s.field,signal:s.signal});return{renderer:new p({field:s.field,pointsPerInch:s.density,pointSizeAlgorithm:x.getPointSizeAlgorithm(s.size),colorUniqueValueInfos:await B(n,s.typeScheme)})}},e.createRenderer=async function(e){const t=await async function(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new a("type-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new a("type-renderer:missing-parameters","View is required when 'valueExpression' is specified");const s={...e};s.symbolType=s.symbolType||"2d",s.numTypes=null==s.numTypes?10:s.numTypes,s.defaultSymbolEnabled=null==s.defaultSymbolEnabled||s.defaultSymbolEnabled,s.sortBy=null==s.sortBy?"count":s.sortBy,s.sortEnabled=null==s.sortEnabled||s.sortEnabled,s.statistics=l.clone(s.statistics);const n=[0,2,1,3],t=S.createLayerAdapter(s.layer,n);if(s.layer=t,!t)throw new a("type-renderer:invalid-parameters","'layer' must be one of these types: "+S.getLayerTypeLabels(n).join(", "));const i=r.isSome(s.signal)?{signal:s.signal}:null;await t.load(i);const o=t.geometryType;if(s.outlineOptimizationEnabled="polygon"===o&&s.outlineOptimizationEnabled,s.sizeOptimizationEnabled=("point"===o||"multipoint"===o||"polyline"===o)&&s.sizeOptimizationEnabled,"mesh"===o)s.symbolType="3d-volumetric",s.colorMixMode=s.colorMixMode||"replace",s.edgesType=s.edgesType||"none";else{if("3d-volumetric-uniform"===s.symbolType&&"point"!==o)throw new a("type-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(s.symbolType.indexOf("3d-volumetric")>-1&&(!s.view||"3d"!==s.view.type))throw new a("type-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const u=await w.getFieldsList({field:s.field,valueExpression:s.valueExpression}),d=x.verifyBasicFieldValidity(t,u,"type-renderer:invalid-parameters");if(d)throw d;return s}(e),{layer:o,view:u,signal:d}=t,p={layer:o,field:t.field,valueExpression:t.valueExpression,returnAllCodedValues:t.returnAllCodedValues,view:u,signal:d},[c,m,b]=await s.all([null!=t.statistics?t.statistics:z(p),t.outlineOptimizationEnabled?E({layer:o,view:u,signal:d}):null,t.sizeOptimizationEnabled?V({layer:o,view:u,signal:d}):null]);return async function(e,l,r,a){const s=await n.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),t=e.uniqueValueInfos,o=l.layer,u=l.field,d=u?o.getField(u):null,p=d?o.getFieldDomain(d.name):null,c=-1===l.numTypes?t.length:l.numTypes,m=o.geometryType,b=await M({basemap:l.basemap,geometryType:m,typeScheme:l.typeScheme,worldScale:l.symbolType.indexOf("3d-volumetric")>-1,view:l.view}),f=b.scheme,h=new y({field:u});let v,g=-1;const w={value:null,domain:p,fieldInfo:d};if(t.forEach(((e,l)=>{w.value=e.value,e.label=T.createUniqueValueLabel(w),null===e.value&&(g=l)})),g>-1&&(v=t.splice(g,1)[0]),!1!==l.sortEnabled&&L(t,l.sortBy,p),d&&"date"===d.type){const e=t.filter(((e,l)=>l<c)).map((e=>e.value));w.dateFormatInterval=T.calculateDateFormatInterval(e)}const S=r&&r.opacity;let E=x.createColors(f.colors,t.length);const V=x.getSymbolSizeFromScheme(f,m),z=x.getSymbolOutlineFromScheme(f,m,S);t.forEach(((e,r)=>{w.value=e.value,e.label=T.createUniqueValueLabel(w),e.symbol=x.createSymbol(m,{type:l.symbolType,color:E[r],size:V,outline:z,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}})})),l.valueExpression&&(h.valueExpression=l.valueExpression,h.valueExpressionTitle=l.valueExpressionTitle),l.legendOptions&&(h.legendOptions=new i.LegendOptions(l.legendOptions)),E=x.createColors(f.colors,c);for(let e=0;e<c;e++){const r=t[e];r&&h.addUniqueValueInfo({value:r.value,label:r.label,symbol:x.createSymbol(m,{type:l.symbolType,color:E[e],size:V,outline:z,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}})})}l.defaultSymbolEnabled&&(h.defaultSymbol=x.createSymbol(m,{type:l.symbolType,color:f.noDataColor,size:V,outline:z,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}}),h.defaultLabel=s.other),v&&(v.symbol=x.createSymbol(m,{type:l.symbolType,color:f.noDataColor,size:V,outline:z,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}}),t.push(v));const q=[],C=h.uniqueValueInfos.length===t.length?-1:h.uniqueValueInfos.length;if(C>-1)for(let e=C;e<t.length;e++)q.push({...t[e]});return r&&r.visualVariables&&r.visualVariables.length&&(h.visualVariables=r.visualVariables.map((e=>e.clone()))),a&&a.minSize&&(h.visualVariables?h.visualVariables.push(a.minSize):h.visualVariables=[a.minSize]),{renderer:h,uniqueValueInfos:t,excludedUniqueValueInfos:q,typeScheme:I.cloneScheme(f),basemapId:b.basemapId,basemapTheme:b.basemapTheme}}(c,t,m,b)},Object.defineProperty(e,"__esModule",{value:!0})}));
