/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import"../../renderers/PointCloudClassBreaksRenderer.js";import"../../renderers/PointCloudRenderer.js";import e from"../../renderers/PointCloudRGBRenderer.js";import o from"../../renderers/PointCloudStretchRenderer.js";import"../../renderers/PointCloudUniqueValueRenderer.js";import i from"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/support/jsonUtils.js";import r from"../../core/Error.js";import{isSome as a}from"../../core/maybe.js";import{fetchMessageBundle as l}from"../../intl/messages.js";import{substitute as n}from"../../intl/substitute.js";import s from"../../renderers/support/AuthoringInfo.js";import t from"../../renderers/support/AuthoringInfoVisualVariable.js";import{createColorStops as m,setLabelsForClassBreaks as d}from"../../renderers/support/utils.js";import u from"../../renderers/visualVariables/ColorVariable.js";import p from"../heuristics/ageUnit.js";import c from"../heuristics/outline.js";import y from"../heuristics/sizeRange.js";import{getSummaryStatistics as f,getClassBreaks as b,getPointSizeAlgorithm as h,formatDate as v,updateAgeRendererAuthoringInfoVV as w,createError as g,verifyBasicFieldValidity as T,isValidPointSize as x,createColors as E,getDefaultDataRange as V,createDefaultStopValues as z,createStopValues as S,getDataRange as M,createDataValues as j,createSymbol as I,getSymbolSizeFromScheme as q,getSymbolOutlineFromScheme as C,getBasemapInfo as O}from"./support/utils.js";import{getAgeExpressions as P,verifyDates as k,supportedAgeUnits as F}from"../statistics/support/ageUtils.js";import{getFieldsList as R,getNormalizationType as U}from"../support/utils.js";import{createLayerAdapter as B,featureCapableLayerTypes as D,getLayerTypeLabels as L,LayerType as A}from"../support/adapters/support/layerUtils.js";import{cloneScheme as G,getSchemes as W,getSchemeById as $}from"../symbology/color.js";const H="date",_="high-to-low",J=2**53-1,K=5;async function N(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new r("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new r("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const o={...e};if("90-10"===o.theme)throw new r("color-visual-variable:not-supported","Only 'high-to-low', 'above-and-below', 'centered-on', 'extremes', 'above', 'below' themes are supported.");const i=B(o.layer,D);if(o.layer=i,!i)throw new r("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+L(D).join(", "));const l=a(o.signal)?{signal:o.signal}:null;await i.load(l);if("mesh"!==i.geometryType&&o.worldScale&&(!o.view||"3d"!==o.view.type))throw g("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true");const n=await R({field:o.field,normalizationField:o.normalizationField,valueExpression:o.valueExpression}),s=T(i,n,"color-visual-variable:invalid-parameters");if(s)throw s;return o}async function Q(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new r("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new r("color-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");const o={...e};o.symbolType=o.symbolType||"2d",o.defaultSymbolEnabled=null==o.defaultSymbolEnabled||o.defaultSymbolEnabled;const i=B(o.layer,D);if(o.layer=i,!i)throw new r("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+L(D).join(", "));const l=a(o.signal)?{signal:o.signal}:null;await i.load(l);const n=i.geometryType;if(o.outlineOptimizationEnabled="polygon"===n&&o.outlineOptimizationEnabled,o.sizeOptimizationEnabled=("point"===n||"multipoint"===n||"polyline"===n)&&o.sizeOptimizationEnabled,"mesh"===n)o.symbolType="3d-volumetric",o.colorMixMode=o.colorMixMode||"replace",o.edgesType=o.edgesType||"none";else{if("3d-volumetric-uniform"===o.symbolType&&"point"!==n)throw new r("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(o.symbolType.includes("3d-volumetric")&&(!o.view||"3d"!==o.view.type))throw new r("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const s=await R({field:o.field,normalizationField:o.normalizationField,valueExpression:o.valueExpression}),t=T(i,s,"color-continuous-renderer:invalid-parameters");if(t)throw t;return o}async function X(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new r("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new r("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");const o={...e};o.symbolType=o.symbolType||"2d",o.defaultSymbolEnabled=null==o.defaultSymbolEnabled||o.defaultSymbolEnabled,o.classificationMethod=o.classificationMethod||"equal-interval",o.normalizationType=U(o);const i=B(o.layer,D);if(o.layer=i,!i)throw new r("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+L(D).join(", "));if(!(null!=o.minValue&&null!=o.maxValue)&&(null!=o.minValue||null!=o.maxValue))throw new r("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const l=a(o.signal)?{signal:o.signal}:null;await i.load(l);const n=i.geometryType;if(o.outlineOptimizationEnabled="polygon"===n&&o.outlineOptimizationEnabled,"mesh"===n)o.symbolType="3d-volumetric",o.colorMixMode=o.colorMixMode||"replace",o.edgesType=o.edgesType||"none";else{if("3d-volumetric-uniform"===o.symbolType&&"point"!==n)throw new r("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(o.symbolType.includes("3d-volumetric")&&(!o.view||"3d"!==o.view.type))throw new r("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const s=await R({field:o.field,normalizationField:o.normalizationField}),t=T(i,s,"color-class-breaks-renderer:invalid-parameters");if(t)throw t;return o}function Y(e){const o={...e};delete o.basemap,delete o.colorScheme,delete o.legendOptions,delete o.symbolType,delete o.defaultSymbolEnabled,delete o.colorMixMode,delete o.edgesType;const i=o;return i.analyzeData=!(null!=o.minValue&&null!=o.maxValue),i}function Z(e){if(!e||!e.layer)return Promise.reject(g("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));const o={...e},i=[A.PointCloudLayer],r=B(o.layer,i);if(o.layer=r,o.density=o.density||25,o.size=o.size||"100%",!x(o.size))return Promise.reject(g("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!r)return Promise.reject(g("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+L(i).join(", ")));const l=a(o.signal)?{signal:o.signal}:null;return r.load(l).then((()=>o))}function ee(e){if(!(e&&e.layer&&e.field))return Promise.reject(g("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));const o=e.field.toLowerCase();if("intensity"!==o&&"elevation"!==o)return Promise.reject(g("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));const i={...e},r=[A.PointCloudLayer],l=B(i.layer,r);if(i.layer=l,i.density=i.density||25,i.size=i.size||"100%",!x(i.size))return Promise.reject(g("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!l)return Promise.reject(g("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+L(r).join(", ")));const n=a(i.signal)?{signal:i.signal}:null;return l.load(n).then((()=>i))}function oe(e){const o={...e},i=o.symbolType.includes("3d-volumetric");delete o.symbolType,delete o.defaultSymbolEnabled,delete o.colorMixMode,delete o.edgesType;const r=o;return r.worldScale=i,r}async function ie(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new r("color-age-renderer:missing-parameters","'layer', 'view', startTime', 'endTime' parameters are required");const o={...e};o.symbolType=o.symbolType||"2d",o.defaultSymbolEnabled=null==o.defaultSymbolEnabled||o.defaultSymbolEnabled;const i=B(o.layer,D);if(o.layer=i,!i)throw new r("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+L(D).join(", "));const l=a(o.signal)?{signal:o.signal}:null;await i.load(l);const n=i.geometryType;if(o.outlineOptimizationEnabled="polygon"===n&&o.outlineOptimizationEnabled,o.sizeOptimizationEnabled=("point"===n||"multipoint"===n||"polyline"===n)&&o.sizeOptimizationEnabled,"mesh"===n)o.symbolType="3d-volumetric",o.colorMixMode=o.colorMixMode||"replace",o.edgesType=o.edgesType||"none";else if("3d-volumetric-uniform"===o.symbolType&&"point"!==n)throw new r("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(o.symbolType.includes("3d-volumetric")&&(!o.view||"3d"!==o.view.type))throw new r("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");const s=k(i,o.startTime,o.endTime,"color-age-renderer:invalid-parameters");if(s)throw s;if(o.unit&&!F.includes(o.unit))throw new r("color-age-renderer:invalid-unit",`Supported units are: ${F.join(", ")}`);return o}async function re(e,o){let i=e.colorScheme,r=null,l=null;const n=await O(e.basemap,e.view);if(r=a(n.basemapId)?n.basemapId:null,l=a(n.basemapTheme)?n.basemapTheme:null,i)return{scheme:G(i),basemapId:r,basemapTheme:l};const s=o||e.theme||_,t=W({theme:s,basemap:r,basemapTheme:l,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});if(t)if(r=t.basemapId,l=t.basemapTheme,e.schemeId){const o=s+"/"+r+"/"+e.schemeId;i=$({id:o,geometryType:e.geometryType})}else i=t.primaryScheme;return{scheme:i,basemapId:r,basemapTheme:l}}async function ae(e,o){const i=o.layer,r=await re({basemap:o.basemap,colorScheme:o.colorScheme,geometryType:i.geometryType,schemeId:"elevation"===o.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),a=r.scheme;if(!a)throw g("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme");const l=E(a.colors,K);if(l.length<K)throw g("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors");const n=V(e,!1,!0),s=n?z(n[0],n[1],5):S(e);return{stops:m({values:s,isDate:!1,dateFormatOptions:null,colors:l,labelIndexes:[0,2,4]}),basemapId:r.basemapId,basemapTheme:r.basemapTheme,statistics:e,defaultValuesUsed:!!n,colorScheme:G(a)}}async function le(e,o,i){const r=e.layer,{field:a,theme:l}=e,n=a&&!("function"==typeof a)?r.getField(a):null,m=n&&n.type===H,d=await re({basemap:e.basemap,theme:e.theme,geometryType:r.geometryType,colorScheme:e.colorScheme,worldScale:e.worldScale,view:e.view}),p=d.scheme;if(!p)throw g("color-visual-variable:insufficient-info","Unable to find color scheme");const c=E(p.colors,K);if(c.length<K)throw g("color-visual-variable:insufficient-info","Color scheme does not have enough colors");const y=p.id.includes("seq-"),f=M(o,i,l,m,"90-10"!==l),b=j(f,o,l,y),h=E(c,K),v=new u({field:a,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationField:e.normalizationField,stops:b.map(((e,o)=>({value:e,color:h[o]}))),legendOptions:e.legendOptions}),w=new t({type:"color",minSliderValue:null!=e.minValue?e.minValue:o.min,maxSliderValue:null!=e.maxValue?e.maxValue:o.max,theme:p.theme}),T=new s({visualVariables:[w]});return{basemapId:d.basemapId,basemapTheme:d.basemapTheme,visualVariable:v,statistics:o,defaultValuesUsed:f.defaultValuesUsed,colorScheme:G(p),authoringInfo:T}}async function ne(e,o,r,a,n,s){const t=await l("esri/smartMapping/t9n/smartMapping"),m=s.layer,d=s.field,u=m.geometryType,p=s.defaultSymbolEnabled,c=G(e.colorScheme),y=o&&o.opacity,f=[e.visualVariable.clone()];o&&o.visualVariables&&o.visualVariables.length&&f.push(...o.visualVariables.map((e=>e.clone()))),r&&r.minSize&&f.push(r.minSize);return{renderer:new i({classBreakInfos:[{minValue:-J,maxValue:J,symbol:I(u,{type:s.symbolType,color:c.noDataColor,size:q(c,u),outline:C(c,u,y),meshInfo:{colorMixMode:s.colorMixMode,edgesType:s.edgesType}})}],defaultLabel:p?t.other:null,defaultSymbol:p?I(u,{type:s.symbolType,color:c.noDataColor,size:q(c,u),outline:C(c,u,y),meshInfo:{colorMixMode:s.colorMixMode,edgesType:s.edgesType}}):null,field:d,normalizationType:a,normalizationField:n,valueExpression:s.valueExpression,valueExpressionTitle:s.valueExpressionTitle,visualVariables:f,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariable:e.visualVariable.clone(),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,colorScheme:G(e.colorScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}async function se(e){const o=await N(e),{view:i,field:r,valueExpression:a,minValue:l,maxValue:n,layer:s,normalizationField:t,signal:m,statistics:d}=o,u=t?"field":void 0,[p,c]=await Promise.all([d||f({layer:s,field:r,valueExpression:a,sqlExpression:o.sqlExpression,sqlWhere:o.sqlWhere,normalizationType:u,normalizationField:t,minValue:l,maxValue:n,view:i,signal:m}),"90-10"===o.theme?b({layer:s,field:r,normalizationField:t,valueExpression:a,classificationMethod:"quantile",minValue:l,maxValue:n,view:i,numClasses:10,signal:m}):null]);return le(o,p,c?.result)}function te(e,o){const i=e.colorsForClassBreaks;let r;if(i&&i.length>0&&(i.some((e=>(e.numClasses===o&&(r=e.colors),!!r))),!r)){const e=i[i.length-1],a=o-e.numClasses;if(a>0){const o=e.colors[e.numClasses-1];r=e.colors.splice(0);for(let e=1;e<=a;e++)r.push(o)}}return r&&(r=E(r,r.length)),r}async function me(e,o){const a=await l("esri/smartMapping/t9n/smartMapping"),n=e.layer,t=e.defaultSymbolEnabled,m=n.geometryType,u=e.classificationMethod,p="standard-deviation"===u,c=await re({basemap:e.basemap,geometryType:m,theme:p?"above-and-below":null,colorScheme:e.colorScheme,worldScale:e.symbolType.includes("3d-volumetric"),view:e.view}),y=c.scheme,{result:f,outlineResult:b}=o,h=f.classBreakInfos,v=e.normalizationType;if(!y)throw new r("color-class-breaks-renderer:insufficient-info","Unable to find color scheme");const w=te(y,h.length);if(!w||w.length!==h.length)throw new r("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors");const g=b&&b.opacity,T=new i({classBreakInfos:h.map(((o,i)=>({minValue:o.minValue,maxValue:o.maxValue,symbol:I(m,{type:e.symbolType,color:w[i],size:q(y,m),outline:C(y,m,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}),label:o.label}))),defaultLabel:t?a.other:null,defaultSymbol:t?I(m,{type:e.symbolType,color:y.noDataColor,size:q(y,m),outline:C(y,m,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:v,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===v?f.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new s({type:"class-breaks-color",classificationMethod:u,standardDeviationInterval:e.standardDeviationInterval})});return p||d({classBreakInfos:T.classBreakInfos,classificationMethod:u,normalizationType:v,round:!0}),b&&b.visualVariables&&b.visualVariables.length&&(T.visualVariables=b.visualVariables.map((e=>e.clone()))),{renderer:T,colorScheme:G(y),classBreaksResult:f,defaultValuesUsed:o.defaultValuesUsed,basemapId:c.basemapId,basemapTheme:c.basemapTheme}}async function de(e){const o=await Q(e),{layer:i,view:r,signal:a}=o,[l,n,s]=await Promise.all([se(oe(o)),o.outlineOptimizationEnabled?c({layer:i,view:r,signal:a}):null,o.sizeOptimizationEnabled?y({layer:i,view:r,signal:a}):null]),t=o.normalizationField;return ne(l,n,s,t?"field":void 0,t,o)}async function ue(e){const o=await X(e);return me(o,await b(Y(o),o.outlineOptimizationEnabled))}function pe(o){return Z(o).then((o=>({renderer:new e({field:"RGB",pointsPerInch:o.density,pointSizeAlgorithm:h(o.size)})})))}async function ce(e){const i=await ee(e),r=i.statistics?i.statistics:await f({layer:i.layer,field:i.field,signal:i.signal}),a=await ae(r,i);return{renderer:new o({field:i.field,pointsPerInch:i.density,pointSizeAlgorithm:h(i.size),stops:a.stops}),basemapId:a.basemapId,basemapTheme:a.basemapTheme,statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,colorScheme:a.colorScheme}}async function ye(e){const o=await l("esri/smartMapping/t9n/smartMapping"),i=await ie(e),{defaultSymbolEnabled:r,view:a,startTime:s,endTime:t,symbolType:m,colorMixMode:d,edgesType:u,minValue:f,maxValue:b,signal:h}=i,g=i.layer,[T,x,E]=await Promise.all([i.unit?{unit:i.unit,statistics:null}:p({view:a,layer:g,startTime:s,endTime:t,minValue:f,maxValue:b,signal:h}),i.outlineOptimizationEnabled?c({layer:g,view:a,signal:h}):null,i.sizeOptimizationEnabled?y({layer:g,view:a,signal:h}):null]),{unit:V,statistics:z}=T,S=P({layer:g,startTime:s,endTime:t,unit:V}).valueExpression,M=n(o[`ageInfo_${V}`],{unit:V,startTime:v(s,V,g),endTime:v(t,V,g)}),j=await se(oe({layer:g,basemap:i.basemap,valueExpression:S,symbolType:m,statistics:z,legendOptions:{title:M},colorScheme:i.colorScheme,theme:i.theme,view:a,minValue:i.minValue,maxValue:i.maxValue,signal:h})),I={layer:g,valueExpression:S,defaultSymbolEnabled:r,symbolType:m,colorMixMode:d,edgesType:u},q=await ne(j,x,E,null,null,I);return q.renderer.authoringInfo.visualVariables.forEach((e=>w(e,s,t,V))),{...q,unit:V}}export{ye as createAgeRenderer,ue as createClassBreaksRenderer,de as createContinuousRenderer,ce as createPCContinuousRenderer,pe as createPCTrueColorRenderer,se as createVisualVariable};
