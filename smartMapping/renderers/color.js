/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../renderers/PointCloudClassBreaksRenderer","../../renderers/PointCloudRenderer","../../renderers/PointCloudRGBRenderer","../../renderers/PointCloudStretchRenderer","../../renderers/PointCloudUniqueValueRenderer","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/PieChartRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../../core/maybe","../../intl/messages","../../intl/substitute","../../renderers/support/AuthoringInfo","../../renderers/support/AuthoringInfoVisualVariable","../../renderers/support/utils","../../renderers/visualVariables/ColorVariable","../heuristics/ageUnit","../heuristics/outline","../heuristics/sizeRange","./support/utils","../statistics/support/ageUtils","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils","../symbology/color"],(function(e,r,i,o,n,a,l,t,s,u,d,c,m,p,y,f,h,b,g,v,T,w,S,E,x,V,z,M,I,C,L,B,F){"use strict";const P="date",O="high-to-low",R=2**53-1,q=5;function k(e){return U.apply(this,arguments)}function U(){return(U=r._asyncToGenerator((function*(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new h("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new h("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&C.verifyBinningParams(e,"color-visual-variable");const r={...e};if("90-10"===r.theme)throw new h("color-visual-variable:not-supported","Only 'high-to-low', 'above-and-below', 'centered-on', 'extremes', 'above', 'below' themes are supported.");const i=e.forBinning?B.binningCapableLayerTypes:B.featureCapableLayerTypes,o=B.createLayerAdapter(r.layer,i,e.forBinning);if(r.layer=o,!o)throw new h("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+B.getLayerTypeLabels(i).join(", "));const n=b.isSome(r.signal)?{signal:r.signal}:null;yield o.load(n);if("mesh"!==o.geometryType&&r.worldScale&&(!r.view||"3d"!==r.view.type))throw M.createError("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true");const a=yield L.getFieldsList({field:r.field,normalizationField:r.normalizationField,valueExpression:r.valueExpression}),l=M.verifyBasicFieldValidity(o,a,"color-visual-variable:invalid-parameters");if(l)throw l;return r}))).apply(this,arguments)}function A(e){return D.apply(this,arguments)}function D(){return(D=r._asyncToGenerator((function*(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new h("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new h("color-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&C.verifyBinningParams(e,"color-continuous-renderer");const r={...e};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled;const i=e.forBinning?B.binningCapableLayerTypes:B.featureCapableLayerTypes,o=B.createLayerAdapter(r.layer,i,e.forBinning);if(r.layer=o,!o)throw new h("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+B.getLayerTypeLabels(i).join(", "));const n=b.isSome(r.signal)?{signal:r.signal}:null;yield o.load(n);const a=o.geometryType;if(r.outlineOptimizationEnabled="polygon"===a&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===a||"multipoint"===a||"polyline"===a)&&r.sizeOptimizationEnabled,"mesh"===a)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==a)throw new h("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new h("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const l=yield L.getFieldsList({field:r.field,normalizationField:r.normalizationField,valueExpression:r.valueExpression}),t=M.verifyBasicFieldValidity(o,l,"color-continuous-renderer:invalid-parameters");if(t)throw t;return r}))).apply(this,arguments)}function j(e){return G.apply(this,arguments)}function G(){return(G=r._asyncToGenerator((function*(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new h("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new h("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&C.verifyBinningParams(e,"color-class-breaks-renderer");const r={...e};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled,r.classificationMethod=r.classificationMethod||"equal-interval",r.normalizationType=L.getNormalizationType(r);const i=e.forBinning?B.binningCapableLayerTypes:B.featureCapableLayerTypes,o=B.createLayerAdapter(r.layer,i,e.forBinning);if(r.layer=o,!o)throw new h("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+B.getLayerTypeLabels(i).join(", "));if(!(null!=r.minValue&&null!=r.maxValue)&&(null!=r.minValue||null!=r.maxValue))throw new h("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const n=b.isSome(r.signal)?{signal:r.signal}:null;yield o.load(n);const a=o.geometryType;if(r.outlineOptimizationEnabled="polygon"===a&&r.outlineOptimizationEnabled,"mesh"===a)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==a)throw new h("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new h("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const l=yield L.getFieldsList({field:r.field,normalizationField:r.normalizationField}),t=M.verifyBasicFieldValidity(o,l,"color-class-breaks-renderer:invalid-parameters");if(t)throw t;return r}))).apply(this,arguments)}function _(e){const r={...e};delete r.basemap,delete r.colorScheme,delete r.legendOptions,delete r.symbolType,delete r.defaultSymbolEnabled,delete r.colorMixMode,delete r.edgesType;const i=r;return i.analyzeData=!(null!=r.minValue&&null!=r.maxValue),i}function H(e){if(!e||!e.layer)return Promise.reject(M.createError("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));const r={...e},i=[B.LayerType.PointCloudLayer],o=B.createLayerAdapter(r.layer,i);if(r.layer=o,r.density=r.density||25,r.size=r.size||"100%",!M.isValidPointSize(r.size))return Promise.reject(M.createError("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!o)return Promise.reject(M.createError("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+B.getLayerTypeLabels(i).join(", ")));const n=b.isSome(r.signal)?{signal:r.signal}:null;return o.load(n).then((()=>r))}function W(e){if(!(e&&e.layer&&e.field))return Promise.reject(M.createError("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));const r=e.field.toLowerCase();if("intensity"!==r&&"elevation"!==r)return Promise.reject(M.createError("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));const i={...e},o=[B.LayerType.PointCloudLayer],n=B.createLayerAdapter(i.layer,o);if(i.layer=n,i.density=i.density||25,i.size=i.size||"100%",!M.isValidPointSize(i.size))return Promise.reject(M.createError("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!n)return Promise.reject(M.createError("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+B.getLayerTypeLabels(o).join(", ")));const a=b.isSome(i.signal)?{signal:i.signal}:null;return n.load(a).then((()=>i))}function $(e){const r={...e},i=r.symbolType.includes("3d-volumetric");delete r.symbolType,delete r.defaultSymbolEnabled,delete r.colorMixMode,delete r.edgesType;const o=r;return o.worldScale=i,o}function N(e){return J.apply(this,arguments)}function J(){return(J=r._asyncToGenerator((function*(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new h("color-age-renderer:missing-parameters","'layer', 'view', startTime', 'endTime' parameters are required");const r={...e};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled;const i=B.createLayerAdapter(r.layer,B.featureCapableLayerTypes);if(r.layer=i,!i)throw new h("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+B.getLayerTypeLabels(B.featureCapableLayerTypes).join(", "));const o=b.isSome(r.signal)?{signal:r.signal}:null;yield i.load(o);const n=i.geometryType;if(r.outlineOptimizationEnabled="polygon"===n&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===n||"multipoint"===n||"polyline"===n)&&r.sizeOptimizationEnabled,"mesh"===n)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else if("3d-volumetric-uniform"===r.symbolType&&"point"!==n)throw new h("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new h("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");const a=I.verifyDates(i,r.startTime,r.endTime,"color-age-renderer:invalid-parameters");if(a)throw a;if(r.unit&&!I.supportedAgeUnits.includes(r.unit))throw new h("color-age-renderer:invalid-unit",`Supported units are: ${I.supportedAgeUnits.join(", ")}`);return r}))).apply(this,arguments)}function K(e,r){return Q.apply(this,arguments)}function Q(){return(Q=r._asyncToGenerator((function*(e,r){let i=e.colorScheme,o=null,n=null;const a=yield M.getBasemapInfo(e.basemap,e.view);if(o=b.isSome(a.basemapId)?a.basemapId:null,n=b.isSome(a.basemapTheme)?a.basemapTheme:null,i)return{scheme:F.cloneScheme(i),basemapId:o,basemapTheme:n};const l=r||e.theme||O,t=F.getSchemes({theme:l,basemap:o,basemapTheme:n,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});if(t)if(o=t.basemapId,n=t.basemapTheme,e.schemeId){const r=l+"/"+o+"/"+e.schemeId;i=F.getSchemeById({id:r,geometryType:e.geometryType})}else i=t.primaryScheme;return{scheme:i,basemapId:o,basemapTheme:n}}))).apply(this,arguments)}function X(e,r){return Y.apply(this,arguments)}function Y(){return(Y=r._asyncToGenerator((function*(e,r){const i=r.layer,o=yield K({basemap:r.basemap,colorScheme:r.colorScheme,geometryType:i.geometryType,schemeId:"elevation"===r.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),n=o.scheme;if(!n)throw M.createError("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme");const a=M.createColors(n.colors,q);if(a.length<q)throw M.createError("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors");const l=M.getDefaultDataRange(e,!1,!0),t=l?M.createDefaultStopValues(l[0],l[1],5):M.createStopValues(e);return{stops:S.createColorStops({values:t,isDate:!1,dateFormatOptions:null,colors:a,labelIndexes:[0,2,4]}),basemapId:o.basemapId,basemapTheme:o.basemapTheme,statistics:e,defaultValuesUsed:!!l,colorScheme:F.cloneScheme(n)}}))).apply(this,arguments)}function Z(e,r,i,o,n){return ee.apply(this,arguments)}function ee(){return(ee=r._asyncToGenerator((function*(e,r,i,o,n){const{field:a,theme:l}=e,t=yield K({basemap:e.basemap,theme:e.theme,geometryType:o,colorScheme:e.colorScheme,worldScale:e.worldScale,view:e.view}),s=t.scheme;if(!s)throw M.createError("color-visual-variable:insufficient-info","Unable to find color scheme");const u=M.createColors(s.colors,q);if(u.length<q)throw M.createError("color-visual-variable:insufficient-info","Color scheme does not have enough colors");const d=s.id.includes("seq-"),c=M.getDataRange(r,i,l,n,"90-10"!==l),m=M.createDataValues(c,r,l,d),p=M.createColors(u,q),y=new E({field:a,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationField:e.normalizationField,stops:m.map(((e,r)=>({value:e,color:p[r]}))),legendOptions:e.legendOptions}),f=new w({type:"color",minSliderValue:null!=e.minValue?e.minValue:r.min,maxSliderValue:null!=e.maxValue?e.maxValue:r.max,theme:s.theme}),h=new T({visualVariables:[f]});return{basemapId:t.basemapId,basemapTheme:t.basemapTheme,visualVariable:y,statistics:r,defaultValuesUsed:c.defaultValuesUsed,colorScheme:F.cloneScheme(s),authoringInfo:h}}))).apply(this,arguments)}function re(e,r,i,o,n,a,l){return ie.apply(this,arguments)}function ie(){return(ie=r._asyncToGenerator((function*(e,r,i,o,n,a,l){const s=yield g.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),{field:u,defaultSymbolEnabled:d}=l,c=F.cloneScheme(e.colorScheme),m=r&&r.opacity,p=[e.visualVariable.clone()];r&&r.visualVariables&&r.visualVariables.length&&p.push(...r.visualVariables.map((e=>e.clone()))),i&&i.minSize&&p.push(i.minSize);return{renderer:new t({classBreakInfos:[{minValue:-R,maxValue:R,symbol:M.createSymbol(a,{type:l.symbolType,color:c.noDataColor,size:M.getSymbolSizeFromScheme(c,a),outline:M.getSymbolOutlineFromScheme(c,a,m),meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}})}],defaultLabel:d?s.other:null,defaultSymbol:d?M.createSymbol(a,{type:l.symbolType,color:c.noDataColor,size:M.getSymbolSizeFromScheme(c,a),outline:M.getSymbolOutlineFromScheme(c,a,m),meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}}):null,field:u,normalizationType:o,normalizationField:n,valueExpression:l.valueExpression,valueExpressionTitle:l.valueExpressionTitle,visualVariables:p,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariable:e.visualVariable.clone(),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,colorScheme:F.cloneScheme(e.colorScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}))).apply(this,arguments)}function oe(e){return ne.apply(this,arguments)}function ne(){return(ne=r._asyncToGenerator((function*(e){const r=yield k(e),{view:i,field:o,valueExpression:n,minValue:a,maxValue:l,layer:t,normalizationField:s,signal:u,statistics:d}=r,c=s?"field":void 0,[m,p]=yield Promise.all([d||M.getSummaryStatistics({layer:t,field:o,valueExpression:n,sqlExpression:r.sqlExpression,sqlWhere:r.sqlWhere,normalizationType:c,normalizationField:s,minValue:a,maxValue:l,view:i,signal:u}),"90-10"===r.theme?M.getClassBreaks({layer:t,field:o,normalizationField:s,valueExpression:n,classificationMethod:"quantile",minValue:a,maxValue:l,view:i,numClasses:10,signal:u}):null]),y=t,f=o&&"function"!=typeof o?y.getField(o):null,h=f&&f.type===P;return Z(r,m,p?.result,y.geometryType,h)}))).apply(this,arguments)}function ae(e,r){const i=e.colorsForClassBreaks;let o;if(i&&i.length>0&&(i.some((e=>(e.numClasses===r&&(o=e.colors),!!o))),!o)){const e=i[i.length-1],n=r-e.numClasses;if(n>0){const r=e.colors[e.numClasses-1];o=e.colors.splice(0);for(let e=1;e<=n;e++)o.push(r)}}return o&&(o=M.createColors(o,o.length)),o}function le(e,r){return te.apply(this,arguments)}function te(){return(te=r._asyncToGenerator((function*(e,r){const i=yield g.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),o=e.layer,n=e.defaultSymbolEnabled,a=o.geometryType,l=e.classificationMethod,s="standard-deviation"===l,u=yield K({basemap:e.basemap,geometryType:a,theme:s?"above-and-below":null,colorScheme:e.colorScheme,worldScale:e.symbolType.includes("3d-volumetric"),view:e.view}),d=u.scheme,{result:c,outlineResult:m}=r,p=c.classBreakInfos,y=e.normalizationType;if(!d)throw new h("color-class-breaks-renderer:insufficient-info","Unable to find color scheme");const f=ae(d,p.length);if(!f||f.length!==p.length)throw new h("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors");const b=m&&m.opacity,v=new t({classBreakInfos:p.map(((r,i)=>({minValue:r.minValue,maxValue:r.maxValue,symbol:M.createSymbol(a,{type:e.symbolType,color:f[i],size:M.getSymbolSizeFromScheme(d,a),outline:M.getSymbolOutlineFromScheme(d,a,b),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}),label:r.label}))),defaultLabel:n?i.other:null,defaultSymbol:n?M.createSymbol(a,{type:e.symbolType,color:d.noDataColor,size:M.getSymbolSizeFromScheme(d,a),outline:M.getSymbolOutlineFromScheme(d,a,b),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:y,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===y?c.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new T({type:"class-breaks-color",classificationMethod:l,standardDeviationInterval:e.standardDeviationInterval})});return s||S.setLabelsForClassBreaks({classBreakInfos:v.classBreakInfos,classificationMethod:l,normalizationType:y,round:!0}),m&&m.visualVariables&&m.visualVariables.length&&(v.visualVariables=m.visualVariables.map((e=>e.clone()))),{renderer:v,colorScheme:F.cloneScheme(d),classBreaksResult:c,defaultValuesUsed:r.defaultValuesUsed,basemapId:u.basemapId,basemapTheme:u.basemapTheme}}))).apply(this,arguments)}function se(e){return ue.apply(this,arguments)}function ue(){return(ue=r._asyncToGenerator((function*(e){const r=yield A(e),{layer:i,view:o,signal:n}=r,[a,l,t]=yield Promise.all([oe($(r)),r.outlineOptimizationEnabled?V({layer:i,view:o,signal:n}):null,r.sizeOptimizationEnabled?z({layer:i,view:o,signal:n}):null]),s=r.normalizationField;return re(a,l,t,s?"field":void 0,s,i.geometryType,r)}))).apply(this,arguments)}function de(e){return ce.apply(this,arguments)}function ce(){return(ce=r._asyncToGenerator((function*(e){const r=yield j(e);return le(r,yield M.getClassBreaks(_(r),r.outlineOptimizationEnabled))}))).apply(this,arguments)}function me(e){return H(e).then((e=>({renderer:new n({field:"RGB",pointsPerInch:e.density,pointSizeAlgorithm:M.getPointSizeAlgorithm(e.size)})})))}function pe(e){return ye.apply(this,arguments)}function ye(){return(ye=r._asyncToGenerator((function*(e){const r=yield W(e),i=r.statistics?r.statistics:yield M.getSummaryStatistics({layer:r.layer,field:r.field,signal:r.signal}),o=yield X(i,r);return{renderer:new a({field:r.field,pointsPerInch:r.density,pointSizeAlgorithm:M.getPointSizeAlgorithm(r.size),stops:o.stops}),basemapId:o.basemapId,basemapTheme:o.basemapTheme,statistics:o.statistics,defaultValuesUsed:o.defaultValuesUsed,colorScheme:o.colorScheme}}))).apply(this,arguments)}function fe(e){return he.apply(this,arguments)}function he(){return(he=r._asyncToGenerator((function*(e){const r=yield g.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),i=yield N(e),{defaultSymbolEnabled:o,view:n,startTime:a,endTime:l,symbolType:t,colorMixMode:s,edgesType:u,minValue:d,maxValue:c,signal:m}=i,p=i.layer,[y,f,h]=yield Promise.all([i.unit?{unit:i.unit,statistics:null}:x({view:n,layer:p,startTime:a,endTime:l,minValue:d,maxValue:c,signal:m}),i.outlineOptimizationEnabled?V({layer:p,view:n,signal:m}):null,i.sizeOptimizationEnabled?z({layer:p,view:n,signal:m}):null]),{unit:b,statistics:T}=y,w=I.getAgeExpressions({layer:p,startTime:a,endTime:l,unit:b}).valueExpression,S=v.substitute(r[`ageInfo_${b}`],{unit:b,startTime:M.formatDate(a,b,p),endTime:M.formatDate(l,b,p)}),E=yield oe($({layer:p,basemap:i.basemap,valueExpression:w,symbolType:t,statistics:T,legendOptions:{title:S},colorScheme:i.colorScheme,theme:i.theme,view:n,minValue:i.minValue,maxValue:i.maxValue,signal:m})),C={layer:p,valueExpression:w,defaultSymbolEnabled:o,symbolType:t,colorMixMode:s,edgesType:u},L=yield re(E,f,h,null,null,p.geometryType,C);return L.renderer.authoringInfo.visualVariables.forEach((e=>M.updateAgeRendererAuthoringInfoVV(e,a,l,b))),{...L,unit:b}}))).apply(this,arguments)}e.createAgeRenderer=fe,e.createClassBreaksRenderer=de,e.createContinuousRenderer=se,e.createPCContinuousRenderer=pe,e.createPCTrueColorRenderer=me,e.createVisualVariable=oe,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
