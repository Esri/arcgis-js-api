/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../core/maybe","../../core/Error","../../core/promiseUtils","../../core/screenUtils","../../intl/substitute","../../intl/messages","../../renderers/support/AuthoringInfoVisualVariable","../../renderers/support/AuthoringInfo","../../renderers/Renderer","../../renderers/visualVariables/SizeVariable","../../renderers/ClassBreaksRenderer","../../renderers/UniqueValueRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/SimpleRenderer","../../renderers/support/jsonUtils","../support/utils","../../renderers/support/utils","../support/adapters/support/layerUtils","../statistics/support/ageUtils","../heuristics/ageUnit","../heuristics/outline","../heuristics/sizeRange","./support/utils","../../chunks/size"],(function(e,a,i,l,s,n,r,t,o,m,u,d,p,y,c,b,f,h,w,v,g,z,S,x,T,E,V){"use strict";const F=Math.pow(2,53)-1;function O(e){const a={...e},i=a.symbolType.indexOf("3d-volumetric")>-1,l=a;return l.worldScale=i,i&&(l.axis="3d-volumetric-uniform"===a.symbolType?"all":"height"),delete a.symbolType,delete a.defaultSymbolEnabled,l}async function k(e){let i=e.sizeScheme,l=null,s=null;const n=await E.getBasemapInfo(e.basemap,e.view);if(l=a.isSome(n.basemapId)?n.basemapId:null,s=a.isSome(n.basemapTheme)?n.basemapTheme:null,i)return{scheme:V.cloneScheme(i),basemapId:l,basemapTheme:s};const r=V.getSchemes({basemap:l,basemapTheme:s,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});return r&&(i=r.primaryScheme,l=r.basemapId,s=r.basemapTheme),{scheme:i,basemapId:l,basemapTheme:s}}function I(e,a){let i;switch(a){case"point":case"multipoint":{const a=e;i=[a.minSize,a.maxSize];break}case"polyline":{const a=e;i=[a.minWidth,a.maxWidth];break}case"polygon":{const a=e;i=[a.marker.minSize,a.marker.maxSize];break}}return i}async function q(e,a,i,l,s){const n=await r.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),t=s.layer,o=s.field,m=t.geometryType,u=s.defaultSymbolEnabled,p=V.cloneScheme(e.sizeScheme),y="polygon"===m,c=y?p.marker:p,b=y?p.background:null,f=y?"point":m,h=a&&a.opacity,w=e.visualVariables.map((e=>e.clone()));a&&a.visualVariables&&a.visualVariables.length&&w.push(...a.visualVariables.map((e=>e.clone())));return{renderer:new d({backgroundFillSymbol:b&&E.createSymbol(m,{type:s.symbolType,color:b.color,outline:E.getSymbolOutlineFromScheme(b,m,h)}),classBreakInfos:[{minValue:-F,maxValue:F,symbol:E.createSymbol(f,{type:s.symbolType,color:c.color,size:E.getSymbolSizeFromScheme(c,f),outline:E.getSymbolOutlineFromScheme(c,f,h)})}],defaultLabel:u?n.other:null,defaultSymbol:u?E.createSymbol(f,{type:s.symbolType,color:c.noDataColor,size:E.getSymbolSizeFromScheme(c,f,!0),outline:E.getSymbolOutlineFromScheme(c,f,h)}):null,field:o,normalizationField:l,normalizationType:i,valueExpression:s.valueExpression,valueExpressionTitle:s.valueExpressionTitle,visualVariables:w,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariables:e.visualVariables.map((e=>e.clone())),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,sizeScheme:V.cloneScheme(e.sizeScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}async function B(e,a){const i=await r.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),l=e.layer,n=e.defaultSymbolEnabled,t=l.geometryType,m="polygon"===t,u=e.symbolType.indexOf("3d-volumetric")>-1,p=await k({basemap:e.basemap,geometryType:t,sizeScheme:e.sizeScheme,worldScale:u,view:e.view}),y=p.scheme,{result:c,outlineResult:b}=a,f=c.classBreakInfos,h=e.classificationMethod,w=e.normalizationType,g=m?y.marker:y,z=m?y.background:null,S=m?"point":t,x=I(g,S),T=u&&E.getSizeRangeForAxis({minSize:x[0],maxSize:x[1]},"height"),F=function(e,a){const i=s.toPt(e.minSize),l=(s.toPt(e.maxSize)-i)/(a>=4?a-1:a),n=[];for(let e=0;e<a;e++)n.push(i+l*e);return n}({minSize:x[0],maxSize:u?T.maxSize:x[1]},f.length),O=b&&b.opacity,q=new d({backgroundFillSymbol:z&&E.createSymbol(t,{type:e.symbolType,color:z.color,outline:E.getSymbolOutlineFromScheme(z,t,O)}),classBreakInfos:f.map(((a,i)=>({minValue:a.minValue,maxValue:a.maxValue,symbol:E.createSymbol(S,{type:e.symbolType,color:g.color,size:F[i],widthAndDepth:T&&T.minSize,outline:E.getSymbolOutlineFromScheme(g,S,O)}),label:a.label}))),defaultLabel:n?i.other:null,defaultSymbol:n?E.createSymbol(S,{type:e.symbolType,color:g.noDataColor,size:E.getSymbolSizeFromScheme(g,S,!0),widthAndDepth:T&&T.minSize,outline:E.getSymbolOutlineFromScheme(g,S,O)}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:w,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===w?c.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new o({type:"class-breaks-size",classificationMethod:h,standardDeviationInterval:e.standardDeviationInterval})});return"standard-deviation"!==h&&v.setLabelsForClassBreaks({classBreakInfos:q.classBreakInfos,classificationMethod:h,normalizationType:w,round:!0}),b&&b.visualVariables&&b.visualVariables.length&&(q.visualVariables=b.visualVariables.map((e=>e.clone()))),{renderer:q,sizeScheme:V.cloneScheme(y),classBreaksResult:c,defaultValuesUsed:a.defaultValuesUsed,basemapId:p.basemapId,basemapTheme:p.basemapTheme}}async function D(e){const s=await async function(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const l={...e};if("90-10"===l.theme)throw new i("size-visual-variable:not-supported","Only 'high-to-low', 'above', 'below' themes are supported.");const s=[0,2,1,3],n=g.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(s).join(", "));"height"===l.axis&&(l.sizeOptimizationEnabled=!1);const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType;if("mesh"===t)throw new i("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(l.worldScale){if("polyline"===t||"polygon"===t)throw new i("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!l.view||"3d"!==l.view.type)throw new i("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true")}const o=await w.getFieldsList({field:l.field,normalizationField:l.normalizationField,valueExpression:l.valueExpression}),m=E.verifyBasicFieldValidity(n,o,"size-visual-variable:invalid-parameters");if(m)throw m;return l}(e),{view:n,field:r,valueExpression:m,minValue:d,maxValue:p,layer:y,normalizationField:c,signal:b,statistics:f}=s,h=c?"field":void 0,[v,z,S]=await l.all([f||E.getSummaryStatistics({layer:y,field:r,valueExpression:m,sqlExpression:s.sqlExpression,sqlWhere:s.sqlWhere,normalizationType:h,normalizationField:c,minValue:d,maxValue:p,view:n,signal:b}),"90-10"===s.theme?E.getClassBreaks({layer:y,field:r,normalizationField:c,valueExpression:m,classificationMethod:"quantile",minValue:d,maxValue:p,view:n,numClasses:10,signal:b}):null,s.sizeOptimizationEnabled?T({view:n,layer:y,signal:b}):null]);return async function(e,a,l,s){const{theme:n,field:r,normalizationField:m,minValue:d,maxValue:p,axis:y}=e,c=e.layer,b=r&&"function"!=typeof r?c.getField(r):null,f=b&&"date"===b.type,h=c.geometryType,w=await k({basemap:e.basemap,geometryType:h,sizeScheme:e.sizeScheme,worldScale:e.worldScale,view:e.view}),v=w.scheme;if(!v)throw new i("size-visual-variable:insufficient-info","Unable to find size scheme");const g=s&&[s.minSize,s.maxSize]||I(v,h),{minDataValue:z,maxDataValue:S,defaultValuesUsed:x}=E.getDataRange(a,l,n,f,"above"===n||"below"===n),T=[],F="height"===y,O=F?y:void 0,q=g[0];let B=g[1];if(F&&"number"==typeof q&&"number"==typeof B){const e=E.getSizeRangeForAxis({minSize:q,maxSize:B},O);T.push(new u({axis:"width-and-depth",minSize:e.minSize})),B=e.maxSize}const D=new u({field:r,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,valueUnit:"unknown",normalizationField:m,axis:O,minSize:q,maxSize:B,minDataValue:z,maxDataValue:S,legendOptions:e.legendOptions});!function(e,a){"clamped-linear"===e.transformationType&&"below"===a&&e.flipSizes()}(D,n),T.unshift(D);const L=new t({type:"size",theme:n,minSliderValue:null!=d?d:a.min,maxSliderValue:null!=p?p:a.max}),M=new o({visualVariables:[L]});return{basemapId:w.basemapId,basemapTheme:w.basemapTheme,visualVariables:T,statistics:a,defaultValuesUsed:x,sizeScheme:V.cloneScheme(v),authoringInfo:M}}(s,v,null==z?void 0:z.result,S)}e.createAgeRenderer=async function(e){const s=await async function(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new i("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");const l={...e};l.symbolType=l.symbolType||"2d",l.defaultSymbolEnabled=null==l.defaultSymbolEnabled||l.defaultSymbolEnabled;const s=[0,2,1,3],n=g.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(s).join(", "));const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType,o=l.symbolType.indexOf("3d")>-1;if(l.outlineOptimizationEnabled="polygon"===t&&l.outlineOptimizationEnabled,"mesh"===t)throw new i("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===t||"polygon"===t))throw new i("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(l.symbolType.indexOf("3d-volumetric")>-1&&(!l.view||"3d"!==l.view.type))throw new i("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const m=z.verifyDates(n,l.startTime,l.endTime,"size-age-renderer:invalid-parameters");if(m)throw m;if(l.unit&&-1===z.supportedAgeUnits.indexOf(l.unit))throw new i("size-age-renderer:invalid-unit",`Supported units are: ${z.supportedAgeUnits.join(", ")}`);return l}(e),{defaultSymbolEnabled:t,view:o,startTime:m,endTime:u,symbolType:d,minValue:p,maxValue:y,signal:c}=s,b=s.layer,f={layer:s.layer,view:s.view,signal:c},[h,w]=await l.all([s.unit?{unit:s.unit,statistics:null,valueExpression:null}:await S({view:o,layer:b,startTime:m,endTime:u,minValue:p,maxValue:y,signal:c}),s.outlineOptimizationEnabled?x(f):null]),{unit:v,statistics:T}=h,V=z.getAgeExpressions({layer:b,startTime:m,endTime:u,unit:v}).valueExpression,F=await r.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),k=n.substitute(F[`ageInfo_${v}`],{unit:v,startTime:E.formatDate(m,v,b),endTime:E.formatDate(u,v,b)}),I=await D(O({layer:b,basemap:s.basemap,valueExpression:V,symbolType:d,statistics:T,legendOptions:{title:k},theme:s.theme,sizeScheme:s.sizeScheme,sizeOptimizationEnabled:s.sizeOptimizationEnabled,view:s.view,minValue:p,maxValue:y,signal:c})),B={layer:b,valueExpression:V,defaultSymbolEnabled:t,symbolType:d},L=await q(I,w,null,null,B);return L.renderer.authoringInfo.visualVariables.forEach((e=>E.updateAgeRendererAuthoringInfoVV(e,m,u,v))),{...L,unit:v}},e.createClassBreaksRenderer=async function(e){const l=await async function(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new i("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new i("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");const l={...e};l.symbolType=l.symbolType||"2d",l.defaultSymbolEnabled=null==l.defaultSymbolEnabled||l.defaultSymbolEnabled,l.classificationMethod=l.classificationMethod||"equal-interval",l.normalizationType=w.getNormalizationType(l);const s=[0,2,1,3],n=g.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(s).join(", "));if(!(null!=l.minValue&&null!=l.maxValue||null==l.minValue&&null==l.maxValue))throw new i("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType,o=l.symbolType.indexOf("3d")>-1;if(l.outlineOptimizationEnabled="polygon"===t&&l.outlineOptimizationEnabled,"mesh"===t)throw new i("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===t||"polygon"===t))throw new i("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(l.symbolType.indexOf("3d-volumetric")>-1&&(!l.view||"3d"!==l.view.type))throw new i("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const m=await w.getFieldsList({field:l.field,normalizationField:l.normalizationField}),u=E.verifyBasicFieldValidity(n,m,"size-class-breaks-renderer:invalid-parameters");if(u)throw u;return l}(e);return B(l,await E.getClassBreaks(function(e){const a={...e};delete a.basemap,delete a.sizeScheme,delete a.legendOptions,delete a.symbolType,delete a.defaultSymbolEnabled;const i=a;return i.analyzeData=!(null!=a.minValue&&null!=a.maxValue),i}(l),l.outlineOptimizationEnabled))},e.createContinuousRenderer=async function(e){const s=await async function(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");const l={...e};l.symbolType=l.symbolType||"2d",l.defaultSymbolEnabled=null==l.defaultSymbolEnabled||l.defaultSymbolEnabled;const s=[0,2,1,3],n=g.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(s).join(", "));const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType,o=l.symbolType.indexOf("3d")>-1;if(l.outlineOptimizationEnabled="polygon"===t&&l.outlineOptimizationEnabled,"mesh"===t)throw new i("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===t||"polygon"===t))throw new i("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(l.symbolType.indexOf("3d-volumetric")>-1&&(!l.view||"3d"!==l.view.type))throw new i("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const m=await w.getFieldsList({field:l.field,normalizationField:l.normalizationField,valueExpression:l.valueExpression}),u=E.verifyBasicFieldValidity(n,m,"size-continuous-renderer:invalid-parameters");if(u)throw u;return l}(e),n={layer:s.layer,view:s.view,signal:s.signal},[r,t]=await l.all([D(O(s)),s.outlineOptimizationEnabled?x(n):null]),o=s.normalizationField;return q(r,t,o?"field":void 0,o,s)},e.createVisualVariables=D,Object.defineProperty(e,"__esModule",{value:!0})}));
