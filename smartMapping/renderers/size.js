/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/PieChartRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../../core/maybe","../../core/screenUtils","../../intl/messages","../../intl/substitute","../../renderers/support/AuthoringInfo","../../renderers/support/AuthoringInfoVisualVariable","../../renderers/support/utils","../../renderers/visualVariables/SizeVariable","../../renderers/visualVariables/support/sizeVariableUtils","../heuristics/ageUnit","../heuristics/outline","../heuristics/sizeRange","./support/utils","../statistics/support/ageUtils","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils","../symbology/size"],(function(e,i,a,n,l,r,s,t,o,u,m,p,d,y,c,b,f,h,g,v,w,z,S,T,x,V,E,F,k,B){"use strict";const I="date",L=2**53-1;function O(e){return q.apply(this,arguments)}function q(){return(q=i._asyncToGenerator((function*(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new p("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new p("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&E.verifyBinningParams(e,"size-visual-variable");const i={...e};if("90-10"===i.theme)throw new p("size-visual-variable:not-supported","Only 'high-to-low', 'above', 'below' themes are supported.");const a=e.forBinning?k.binningCapableLayerTypes:k.featureCapableLayerTypes,n=k.createLayerAdapter(i.layer,a,e.forBinning);if(i.layer=n,!n)throw new p("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+k.getLayerTypeLabels(a).join(", "));"height"===i.axis&&(i.sizeOptimizationEnabled=!1);const l=d.isSome(i.signal)?{signal:i.signal}:null;yield n.load(l);const r=n.geometryType;if("mesh"===r)throw new p("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(i.worldScale){if("polyline"===r||"polygon"===r)throw new p("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!i.view||"3d"!==i.view.type)throw new p("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true")}const s=yield F.getFieldsList({field:i.field,normalizationField:i.normalizationField,valueExpression:i.valueExpression}),t=x.verifyBasicFieldValidity(n,s,"size-visual-variable:invalid-parameters");if(t)throw t;return i}))).apply(this,arguments)}function C(e){return D.apply(this,arguments)}function D(){return(D=i._asyncToGenerator((function*(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new p("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new p("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&E.verifyBinningParams(e,"size-continuous-renderer");const i={...e};i.symbolType=i.symbolType||"2d",i.defaultSymbolEnabled=null==i.defaultSymbolEnabled||i.defaultSymbolEnabled;const a=e.forBinning?k.binningCapableLayerTypes:k.featureCapableLayerTypes,n=k.createLayerAdapter(i.layer,a,e.forBinning);if(i.layer=n,!n)throw new p("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+k.getLayerTypeLabels(a).join(", "));const l=d.isSome(i.signal)?{signal:i.signal}:null;yield n.load(l);const r=n.geometryType,s=i.symbolType.includes("3d");if(i.outlineOptimizationEnabled="polygon"===r&&i.outlineOptimizationEnabled,"mesh"===r)throw new p("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(s&&("polyline"===r||"polygon"===r))throw new p("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(i.symbolType.includes("3d-volumetric")&&(!i.view||"3d"!==i.view.type))throw new p("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const t=yield F.getFieldsList({field:i.field,normalizationField:i.normalizationField,valueExpression:i.valueExpression}),o=x.verifyBasicFieldValidity(n,t,"size-continuous-renderer:invalid-parameters");if(o)throw o;return i}))).apply(this,arguments)}function R(e){return U.apply(this,arguments)}function U(){return(U=i._asyncToGenerator((function*(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new p("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new p("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&E.verifyBinningParams(e,"size-class-breaks-renderer");const i={...e};i.symbolType=i.symbolType||"2d",i.defaultSymbolEnabled=null==i.defaultSymbolEnabled||i.defaultSymbolEnabled,i.classificationMethod=i.classificationMethod||"equal-interval",i.normalizationType=F.getNormalizationType(i);const a=e.forBinning?k.binningCapableLayerTypes:k.featureCapableLayerTypes,n=k.createLayerAdapter(i.layer,a,e.forBinning);if(i.layer=n,!n)throw new p("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+k.getLayerTypeLabels(a).join(", "));if(!(null!=i.minValue&&null!=i.maxValue)&&(null!=i.minValue||null!=i.maxValue))throw new p("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const l=d.isSome(i.signal)?{signal:i.signal}:null;yield n.load(l);const r=n.geometryType,s=i.symbolType.includes("3d");if(i.outlineOptimizationEnabled="polygon"===r&&i.outlineOptimizationEnabled,"mesh"===r)throw new p("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(s&&("polyline"===r||"polygon"===r))throw new p("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(i.symbolType.includes("3d-volumetric")&&(!i.view||"3d"!==i.view.type))throw new p("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const t=yield F.getFieldsList({field:i.field,normalizationField:i.normalizationField}),o=x.verifyBasicFieldValidity(n,t,"size-class-breaks-renderer:invalid-parameters");if(o)throw o;return i}))).apply(this,arguments)}function A(e){const i={...e};delete i.basemap,delete i.sizeScheme,delete i.legendOptions,delete i.symbolType,delete i.defaultSymbolEnabled;const a=i;return a.analyzeData=!(null!=i.minValue&&null!=i.maxValue),a}function M(e){const i={...e},a=i.symbolType.includes("3d-volumetric"),n=i;return n.worldScale=a,a&&(n.axis="3d-volumetric-uniform"===i.symbolType?"all":"height"),delete i.symbolType,delete i.defaultSymbolEnabled,n}function _(e){return G.apply(this,arguments)}function G(){return(G=i._asyncToGenerator((function*(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new p("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");const i={...e};i.symbolType=i.symbolType||"2d",i.defaultSymbolEnabled=null==i.defaultSymbolEnabled||i.defaultSymbolEnabled;const a=k.createLayerAdapter(i.layer,k.featureCapableLayerTypes);if(i.layer=a,!a)throw new p("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+k.getLayerTypeLabels(k.featureCapableLayerTypes).join(", "));const n=d.isSome(i.signal)?{signal:i.signal}:null;yield a.load(n);const l=a.geometryType,r=i.symbolType.includes("3d");if(i.outlineOptimizationEnabled="polygon"===l&&i.outlineOptimizationEnabled,"mesh"===l)throw new p("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(r&&("polyline"===l||"polygon"===l))throw new p("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(i.symbolType.includes("3d-volumetric")&&(!i.view||"3d"!==i.view.type))throw new p("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const s=V.verifyDates(a,i.startTime,i.endTime,"size-age-renderer:invalid-parameters");if(s)throw s;if(i.unit&&!V.supportedAgeUnits.includes(i.unit))throw new p("size-age-renderer:invalid-unit",`Supported units are: ${V.supportedAgeUnits.join(", ")}`);return i}))).apply(this,arguments)}function P(e){return j.apply(this,arguments)}function j(){return(j=i._asyncToGenerator((function*(e){let i=e.sizeScheme,a=null,n=null;const l=yield x.getBasemapInfo(e.basemap,e.view);if(a=d.isSome(l.basemapId)?l.basemapId:null,n=d.isSome(l.basemapTheme)?l.basemapTheme:null,i)return{scheme:B.cloneScheme(i),basemapId:a,basemapTheme:n};const r=B.getSchemes({basemap:a,basemapTheme:n,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});return r&&(i=r.primaryScheme,a=r.basemapId,n=r.basemapTheme),{scheme:i,basemapId:a,basemapTheme:n}}))).apply(this,arguments)}function W(e,i){let a;switch(i){case"point":case"multipoint":{const i=e;a=[i.minSize,i.maxSize];break}case"polyline":{const i=e;a=[i.minWidth,i.maxWidth];break}case"polygon":{const i=e;a=[i.marker.minSize,i.marker.maxSize];break}}return a}function H(e,i){e.transformationType===w.TransformationType.ClampedLinear&&"below"===i&&e.flipSizes()}function $(e,i,a,n){return N.apply(this,arguments)}function N(){return(N=i._asyncToGenerator((function*(e,i,a,n){const{theme:l,field:r,normalizationField:s,minValue:t,maxValue:o,axis:u}=e,m=e.layer,d=r&&!("function"==typeof r)?m.getField(r):null,y=d&&d.type===I,c=m.geometryType,b=yield P({basemap:e.basemap,geometryType:c,sizeScheme:e.sizeScheme,worldScale:e.worldScale,view:e.view}),g=b.scheme;if(!g)throw new p("size-visual-variable:insufficient-info","Unable to find size scheme");const w=n&&[n.minSize,n.maxSize]||W(g,c),{minDataValue:z,maxDataValue:S,defaultValuesUsed:T}=x.getDataRange(i,a,l,y,"above"===l||"below"===l),V=[],E="height"===u,F=E?u:void 0,k=w[0];let L=w[1];if(E&&"number"==typeof k&&"number"==typeof L){const e=x.getSizeRangeForAxis({minSize:k,maxSize:L},F);V.push(new v({axis:"width-and-depth",minSize:e.minSize})),L=e.maxSize}const O=new v({field:r,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,valueUnit:"unknown",normalizationField:s,axis:F,minSize:k,maxSize:L,minDataValue:z,maxDataValue:S,legendOptions:e.legendOptions});H(O,l),V.unshift(O);const q=new h({type:"size",theme:l,minSliderValue:null!=t?t:i.min,maxSliderValue:null!=o?o:i.max}),C=new f({visualVariables:[q]});return{basemapId:b.basemapId,basemapTheme:b.basemapTheme,visualVariables:V,statistics:i,defaultValuesUsed:T,sizeScheme:B.cloneScheme(g),authoringInfo:C}}))).apply(this,arguments)}function J(e,i,a,n,l){return K.apply(this,arguments)}function K(){return(K=i._asyncToGenerator((function*(e,i,n,l,r){const s=yield c.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),t=r.layer,o=r.field,u=t.geometryType,m=r.defaultSymbolEnabled,p=B.cloneScheme(e.sizeScheme),d="polygon"===u,y=d?p.marker:p,b=d?p.background:null,f=d?"point":u,h=i&&i.opacity,g=e.visualVariables.map((e=>e.clone()));i&&i.visualVariables&&i.visualVariables.length&&g.push(...i.visualVariables.map((e=>e.clone())));return{renderer:new a({backgroundFillSymbol:b&&x.createSymbol(u,{type:r.symbolType,color:b.color,outline:x.getSymbolOutlineFromScheme(b,u,h)}),classBreakInfos:[{minValue:-L,maxValue:L,symbol:x.createSymbol(f,{type:r.symbolType,color:y.color,size:x.getSymbolSizeFromScheme(y,f),outline:x.getSymbolOutlineFromScheme(y,f,h)})}],defaultLabel:m?s.other:null,defaultSymbol:m?x.createSymbol(f,{type:r.symbolType,color:y.noDataColor,size:x.getSymbolSizeFromScheme(y,f,!0),outline:x.getSymbolOutlineFromScheme(y,f,h)}):null,field:o,normalizationField:l,normalizationType:n,valueExpression:r.valueExpression,valueExpressionTitle:r.valueExpressionTitle,visualVariables:g,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariables:e.visualVariables.map((e=>e.clone())),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,sizeScheme:B.cloneScheme(e.sizeScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}))).apply(this,arguments)}function Q(e,i){const a=y.toPt(e.minSize),n=(y.toPt(e.maxSize)-a)/(i>=4?i-1:i),l=[];for(let r=0;r<i;r++)l.push(a+n*r);return l}function X(e,i){return Y.apply(this,arguments)}function Y(){return(Y=i._asyncToGenerator((function*(e,i){const n=yield c.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),l=e.layer,r=e.defaultSymbolEnabled,s=l.geometryType,t="polygon"===s,o=e.symbolType.includes("3d-volumetric"),u=yield P({basemap:e.basemap,geometryType:s,sizeScheme:e.sizeScheme,worldScale:o,view:e.view}),m=u.scheme,{result:p,outlineResult:d}=i,y=p.classBreakInfos,b=e.classificationMethod,h=e.normalizationType,v=t?m.marker:m,w=t?m.background:null,z=t?"point":s,S=W(v,z),T=o&&x.getSizeRangeForAxis({minSize:S[0],maxSize:S[1]},"height"),V=Q({minSize:S[0],maxSize:o?T.maxSize:S[1]},y.length),E=d&&d.opacity,F=new a({backgroundFillSymbol:w&&x.createSymbol(s,{type:e.symbolType,color:w.color,outline:x.getSymbolOutlineFromScheme(w,s,E)}),classBreakInfos:y.map(((i,a)=>({minValue:i.minValue,maxValue:i.maxValue,symbol:x.createSymbol(z,{type:e.symbolType,color:v.color,size:V[a],widthAndDepth:T&&T.minSize,outline:x.getSymbolOutlineFromScheme(v,z,E)}),label:i.label}))),defaultLabel:r?n.other:null,defaultSymbol:r?x.createSymbol(z,{type:e.symbolType,color:v.noDataColor,size:x.getSymbolSizeFromScheme(v,z,!0),widthAndDepth:T&&T.minSize,outline:x.getSymbolOutlineFromScheme(v,z,E)}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:h,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===h?p.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new f({type:"class-breaks-size",classificationMethod:b,standardDeviationInterval:e.standardDeviationInterval})});return"standard-deviation"!==b&&g.setLabelsForClassBreaks({classBreakInfos:F.classBreakInfos,classificationMethod:b,normalizationType:h,round:!0}),d&&d.visualVariables&&d.visualVariables.length&&(F.visualVariables=d.visualVariables.map((e=>e.clone()))),{renderer:F,sizeScheme:B.cloneScheme(m),classBreaksResult:p,defaultValuesUsed:i.defaultValuesUsed,basemapId:u.basemapId,basemapTheme:u.basemapTheme}}))).apply(this,arguments)}function Z(e){return ee.apply(this,arguments)}function ee(){return(ee=i._asyncToGenerator((function*(e){const i=yield O(e),{view:a,field:n,valueExpression:l,minValue:r,maxValue:s,layer:t,normalizationField:o,signal:u,statistics:m}=i,p=o?"field":void 0,[d,y,c]=yield Promise.all([m||x.getSummaryStatistics({layer:t,field:n,valueExpression:l,sqlExpression:i.sqlExpression,sqlWhere:i.sqlWhere,normalizationType:p,normalizationField:o,minValue:r,maxValue:s,view:a,signal:u}),"90-10"===i.theme?x.getClassBreaks({layer:t,field:n,normalizationField:o,valueExpression:l,classificationMethod:"quantile",minValue:r,maxValue:s,view:a,numClasses:10,signal:u}):null,i.sizeOptimizationEnabled?T({view:a,layer:t,signal:u}):null]);return $(i,d,y?.result,c)}))).apply(this,arguments)}function ie(e){return ae.apply(this,arguments)}function ae(){return(ae=i._asyncToGenerator((function*(e){const i=yield C(e),a={layer:i.layer,view:i.view,signal:i.signal},[n,l]=yield Promise.all([Z(M(i)),i.outlineOptimizationEnabled?S(a):null]),r=i.normalizationField;return J(n,l,r?"field":void 0,r,i)}))).apply(this,arguments)}function ne(e){return le.apply(this,arguments)}function le(){return(le=i._asyncToGenerator((function*(e){const i=yield R(e);return X(i,yield x.getClassBreaks(A(i),i.outlineOptimizationEnabled))}))).apply(this,arguments)}function re(e){return se.apply(this,arguments)}function se(){return(se=i._asyncToGenerator((function*(e){const i=yield _(e),{defaultSymbolEnabled:a,view:n,startTime:l,endTime:r,symbolType:s,minValue:t,maxValue:o,signal:u}=i,m=i.layer,p={layer:i.layer,view:i.view,signal:u},[d,y]=yield Promise.all([i.unit?{unit:i.unit,statistics:null,valueExpression:null}:yield z({view:n,layer:m,startTime:l,endTime:r,minValue:t,maxValue:o,signal:u}),i.outlineOptimizationEnabled?S(p):null]),{unit:f,statistics:h}=d,g=V.getAgeExpressions({layer:m,startTime:l,endTime:r,unit:f}).valueExpression,v=yield c.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),w=b.substitute(v[`ageInfo_${f}`],{unit:f,startTime:x.formatDate(l,f,m),endTime:x.formatDate(r,f,m)}),T=yield Z(M({layer:m,basemap:i.basemap,valueExpression:g,symbolType:s,statistics:h,legendOptions:{title:w},theme:i.theme,sizeScheme:i.sizeScheme,sizeOptimizationEnabled:i.sizeOptimizationEnabled,view:i.view,minValue:t,maxValue:o,signal:u})),E={layer:m,valueExpression:g,defaultSymbolEnabled:a,symbolType:s},F=yield J(T,y,null,null,E);return F.renderer.authoringInfo.visualVariables.forEach((e=>x.updateAgeRendererAuthoringInfoVV(e,l,r,f))),{...F,unit:f}}))).apply(this,arguments)}e.createAgeRenderer=re,e.createClassBreaksRenderer=ne,e.createContinuousRenderer=ie,e.createVisualVariables=Z,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
