/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../core/maybe","../../core/Error","../../core/screenUtils","../../intl/substitute","../../intl/messages","../../renderers/support/AuthoringInfoVisualVariable","../../renderers/support/AuthoringInfo","../../renderers/Renderer","../../renderers/visualVariables/SizeVariable","../../renderers/ClassBreaksRenderer","../../renderers/UniqueValueRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/SimpleRenderer","../../renderers/support/jsonUtils","../support/utils","../../renderers/support/utils","../support/adapters/support/layerUtils","../statistics/support/ageUtils","../heuristics/ageUnit","../heuristics/outline","../heuristics/sizeRange","./support/utils","../../chunks/size"],(function(e,a,i,l,s,n,r,t,o,m,u,d,p,y,c,b,f,h,w,v,g,z,S,x,T,E){"use strict";const V="date",F=2**53-1;async function O(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const l={...e};if("90-10"===l.theme)throw new i("size-visual-variable:not-supported","Only 'high-to-low', 'above', 'below' themes are supported.");const s=[0,2,1,3],n=v.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+v.getLayerTypeLabels(s).join(", "));"height"===l.axis&&(l.sizeOptimizationEnabled=!1);const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType;if("mesh"===t)throw new i("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(l.worldScale){if("polyline"===t||"polygon"===t)throw new i("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!l.view||"3d"!==l.view.type)throw new i("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true")}const o=await h.getFieldsList({field:l.field,normalizationField:l.normalizationField,valueExpression:l.valueExpression}),m=T.verifyBasicFieldValidity(n,o,"size-visual-variable:invalid-parameters");if(m)throw m;return l}async function k(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");const l={...e};l.symbolType=l.symbolType||"2d",l.defaultSymbolEnabled=null==l.defaultSymbolEnabled||l.defaultSymbolEnabled;const s=[0,2,1,3],n=v.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+v.getLayerTypeLabels(s).join(", "));const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType,o=l.symbolType.indexOf("3d")>-1;if(l.outlineOptimizationEnabled="polygon"===t&&l.outlineOptimizationEnabled,"mesh"===t)throw new i("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===t||"polygon"===t))throw new i("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(l.symbolType.indexOf("3d-volumetric")>-1&&(!l.view||"3d"!==l.view.type))throw new i("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const m=await h.getFieldsList({field:l.field,normalizationField:l.normalizationField,valueExpression:l.valueExpression}),u=T.verifyBasicFieldValidity(n,m,"size-continuous-renderer:invalid-parameters");if(u)throw u;return l}async function I(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new i("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new i("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");const l={...e};l.symbolType=l.symbolType||"2d",l.defaultSymbolEnabled=null==l.defaultSymbolEnabled||l.defaultSymbolEnabled,l.classificationMethod=l.classificationMethod||"equal-interval",l.normalizationType=h.getNormalizationType(l);const s=[0,2,1,3],n=v.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+v.getLayerTypeLabels(s).join(", "));if(!(null!=l.minValue&&null!=l.maxValue)&&(null!=l.minValue||null!=l.maxValue))throw new i("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType,o=l.symbolType.indexOf("3d")>-1;if(l.outlineOptimizationEnabled="polygon"===t&&l.outlineOptimizationEnabled,"mesh"===t)throw new i("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===t||"polygon"===t))throw new i("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(l.symbolType.indexOf("3d-volumetric")>-1&&(!l.view||"3d"!==l.view.type))throw new i("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const m=await h.getFieldsList({field:l.field,normalizationField:l.normalizationField}),u=T.verifyBasicFieldValidity(n,m,"size-class-breaks-renderer:invalid-parameters");if(u)throw u;return l}function q(e){const a={...e};delete a.basemap,delete a.sizeScheme,delete a.legendOptions,delete a.symbolType,delete a.defaultSymbolEnabled;const i=a;return i.analyzeData=!(null!=a.minValue&&null!=a.maxValue),i}function B(e){const a={...e},i=a.symbolType.indexOf("3d-volumetric")>-1,l=a;return l.worldScale=i,i&&(l.axis="3d-volumetric-uniform"===a.symbolType?"all":"height"),delete a.symbolType,delete a.defaultSymbolEnabled,l}async function D(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new i("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");const l={...e};l.symbolType=l.symbolType||"2d",l.defaultSymbolEnabled=null==l.defaultSymbolEnabled||l.defaultSymbolEnabled;const s=[0,2,1,3],n=v.createLayerAdapter(l.layer,s);if(l.layer=n,!n)throw new i("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+v.getLayerTypeLabels(s).join(", "));const r=a.isSome(l.signal)?{signal:l.signal}:null;await n.load(r);const t=n.geometryType,o=l.symbolType.indexOf("3d")>-1;if(l.outlineOptimizationEnabled="polygon"===t&&l.outlineOptimizationEnabled,"mesh"===t)throw new i("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===t||"polygon"===t))throw new i("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(l.symbolType.indexOf("3d-volumetric")>-1&&(!l.view||"3d"!==l.view.type))throw new i("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const m=g.verifyDates(n,l.startTime,l.endTime,"size-age-renderer:invalid-parameters");if(m)throw m;if(l.unit&&-1===g.supportedAgeUnits.indexOf(l.unit))throw new i("size-age-renderer:invalid-unit",`Supported units are: ${g.supportedAgeUnits.join(", ")}`);return l}async function L(e){let i=e.sizeScheme,l=null,s=null;const n=await T.getBasemapInfo(e.basemap,e.view);if(l=a.isSome(n.basemapId)?n.basemapId:null,s=a.isSome(n.basemapTheme)?n.basemapTheme:null,i)return{scheme:E.cloneScheme(i),basemapId:l,basemapTheme:s};const r=E.getSchemes({basemap:l,basemapTheme:s,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});return r&&(i=r.primaryScheme,l=r.basemapId,s=r.basemapTheme),{scheme:i,basemapId:l,basemapTheme:s}}function R(e,a){let i;switch(a){case"point":case"multipoint":{const a=e;i=[a.minSize,a.maxSize];break}case"polyline":{const a=e;i=[a.minWidth,a.maxWidth];break}case"polygon":{const a=e;i=[a.marker.minSize,a.marker.maxSize];break}}return i}function A(e,a){"clamped-linear"===e.transformationType&&"below"===a&&e.flipSizes()}async function M(e,a,l,s){const{theme:n,field:o,normalizationField:u,minValue:d,maxValue:p,axis:y}=e,c=e.layer,b=o&&!("function"==typeof o)?c.getField(o):null,f=b&&b.type===V,h=c.geometryType,w=await L({basemap:e.basemap,geometryType:h,sizeScheme:e.sizeScheme,worldScale:e.worldScale,view:e.view}),v=w.scheme;if(!v)throw new i("size-visual-variable:insufficient-info","Unable to find size scheme");const g=s&&[s.minSize,s.maxSize]||R(v,h),{minDataValue:z,maxDataValue:S,defaultValuesUsed:x}=T.getDataRange(a,l,n,f,"above"===n||"below"===n),F=[],O="height"===y,k=O?y:void 0,I=g[0];let q=g[1];if(O&&"number"==typeof I&&"number"==typeof q){const e=T.getSizeRangeForAxis({minSize:I,maxSize:q},k);F.push(new m({axis:"width-and-depth",minSize:e.minSize})),q=e.maxSize}const B=new m({field:o,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,valueUnit:"unknown",normalizationField:u,axis:k,minSize:I,maxSize:q,minDataValue:z,maxDataValue:S,legendOptions:e.legendOptions});A(B,n),F.unshift(B);const D=new r({type:"size",theme:n,minSliderValue:null!=d?d:a.min,maxSliderValue:null!=p?p:a.max}),M=new t({visualVariables:[D]});return{basemapId:w.basemapId,basemapTheme:w.basemapTheme,visualVariables:F,statistics:a,defaultValuesUsed:x,sizeScheme:E.cloneScheme(v),authoringInfo:M}}async function U(e,a,i,l,s){const r=await n.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),t=s.layer,o=s.field,m=t.geometryType,d=s.defaultSymbolEnabled,p=E.cloneScheme(e.sizeScheme),y="polygon"===m,c=y?p.marker:p,b=y?p.background:null,f=y?"point":m,h=a&&a.opacity,w=e.visualVariables.map((e=>e.clone()));a&&a.visualVariables&&a.visualVariables.length&&w.push(...a.visualVariables.map((e=>e.clone())));return{renderer:new u({backgroundFillSymbol:b&&T.createSymbol(m,{type:s.symbolType,color:b.color,outline:T.getSymbolOutlineFromScheme(b,m,h)}),classBreakInfos:[{minValue:-F,maxValue:F,symbol:T.createSymbol(f,{type:s.symbolType,color:c.color,size:T.getSymbolSizeFromScheme(c,f),outline:T.getSymbolOutlineFromScheme(c,f,h)})}],defaultLabel:d?r.other:null,defaultSymbol:d?T.createSymbol(f,{type:s.symbolType,color:c.noDataColor,size:T.getSymbolSizeFromScheme(c,f,!0),outline:T.getSymbolOutlineFromScheme(c,f,h)}):null,field:o,normalizationField:l,normalizationType:i,valueExpression:s.valueExpression,valueExpressionTitle:s.valueExpressionTitle,visualVariables:w,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariables:e.visualVariables.map((e=>e.clone())),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,sizeScheme:E.cloneScheme(e.sizeScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}function C(e,a){const i=l.toPt(e.minSize),s=(l.toPt(e.maxSize)-i)/(a>=4?a-1:a),n=[];for(let l=0;l<a;l++)n.push(i+s*l);return n}async function j(e,a){const i=await n.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),l=e.layer,s=e.defaultSymbolEnabled,r=l.geometryType,o="polygon"===r,m=e.symbolType.indexOf("3d-volumetric")>-1,d=await L({basemap:e.basemap,geometryType:r,sizeScheme:e.sizeScheme,worldScale:m,view:e.view}),p=d.scheme,{result:y,outlineResult:c}=a,b=y.classBreakInfos,f=e.classificationMethod,h=e.normalizationType,v=o?p.marker:p,g=o?p.background:null,z=o?"point":r,S=R(v,z),x=m&&T.getSizeRangeForAxis({minSize:S[0],maxSize:S[1]},"height"),V=C({minSize:S[0],maxSize:m?x.maxSize:S[1]},b.length),F=c&&c.opacity,O=new u({backgroundFillSymbol:g&&T.createSymbol(r,{type:e.symbolType,color:g.color,outline:T.getSymbolOutlineFromScheme(g,r,F)}),classBreakInfos:b.map(((a,i)=>({minValue:a.minValue,maxValue:a.maxValue,symbol:T.createSymbol(z,{type:e.symbolType,color:v.color,size:V[i],widthAndDepth:x&&x.minSize,outline:T.getSymbolOutlineFromScheme(v,z,F)}),label:a.label}))),defaultLabel:s?i.other:null,defaultSymbol:s?T.createSymbol(z,{type:e.symbolType,color:v.noDataColor,size:T.getSymbolSizeFromScheme(v,z,!0),widthAndDepth:x&&x.minSize,outline:T.getSymbolOutlineFromScheme(v,z,F)}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:h,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===h?y.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new t({type:"class-breaks-size",classificationMethod:f,standardDeviationInterval:e.standardDeviationInterval})});return"standard-deviation"!==f&&w.setLabelsForClassBreaks({classBreakInfos:O.classBreakInfos,classificationMethod:f,normalizationType:h,round:!0}),c&&c.visualVariables&&c.visualVariables.length&&(O.visualVariables=c.visualVariables.map((e=>e.clone()))),{renderer:O,sizeScheme:E.cloneScheme(p),classBreaksResult:y,defaultValuesUsed:a.defaultValuesUsed,basemapId:d.basemapId,basemapTheme:d.basemapTheme}}async function P(e){const a=await O(e),{view:i,field:l,valueExpression:s,minValue:n,maxValue:r,layer:t,normalizationField:o,signal:m,statistics:u}=a,d=o?"field":void 0,[p,y,c]=await Promise.all([u||T.getSummaryStatistics({layer:t,field:l,valueExpression:s,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:d,normalizationField:o,minValue:n,maxValue:r,view:i,signal:m}),"90-10"===a.theme?T.getClassBreaks({layer:t,field:l,normalizationField:o,valueExpression:s,classificationMethod:"quantile",minValue:n,maxValue:r,view:i,numClasses:10,signal:m}):null,a.sizeOptimizationEnabled?x({view:i,layer:t,signal:m}):null]);return M(a,p,null==y?void 0:y.result,c)}async function W(e){const a=await k(e),i={layer:a.layer,view:a.view,signal:a.signal},[l,s]=await Promise.all([P(B(a)),a.outlineOptimizationEnabled?S(i):null]),n=a.normalizationField;return U(l,s,n?"field":void 0,n,a)}async function _(e){const a=await I(e);return j(a,await T.getClassBreaks(q(a),a.outlineOptimizationEnabled))}async function $(e){const a=await D(e),{defaultSymbolEnabled:i,view:l,startTime:r,endTime:t,symbolType:o,minValue:m,maxValue:u,signal:d}=a,p=a.layer,y={layer:a.layer,view:a.view,signal:d},[c,b]=await Promise.all([a.unit?{unit:a.unit,statistics:null,valueExpression:null}:await z({view:l,layer:p,startTime:r,endTime:t,minValue:m,maxValue:u,signal:d}),a.outlineOptimizationEnabled?S(y):null]),{unit:f,statistics:h}=c,w=g.getAgeExpressions({layer:p,startTime:r,endTime:t,unit:f}).valueExpression,v=await n.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),x=s.substitute(v[`ageInfo_${f}`],{unit:f,startTime:T.formatDate(r,f,p),endTime:T.formatDate(t,f,p)}),E=await P(B({layer:p,basemap:a.basemap,valueExpression:w,symbolType:o,statistics:h,legendOptions:{title:x},theme:a.theme,sizeScheme:a.sizeScheme,sizeOptimizationEnabled:a.sizeOptimizationEnabled,view:a.view,minValue:m,maxValue:u,signal:d})),V={layer:p,valueExpression:w,defaultSymbolEnabled:i,symbolType:o},F=await U(E,b,null,null,V);return F.renderer.authoringInfo.visualVariables.forEach((e=>T.updateAgeRendererAuthoringInfoVV(e,r,t,f))),{...F,unit:f}}e.createAgeRenderer=$,e.createClassBreaksRenderer=_,e.createContinuousRenderer=W,e.createVisualVariables=P,Object.defineProperty(e,"__esModule",{value:!0})}));
