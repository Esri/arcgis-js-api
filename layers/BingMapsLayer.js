/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../request","../core/Error","../core/jsonMap","../core/maybe","../core/MultiOriginJSONSupport","../core/accessorSupport/decorators/property","../core/arrayUtils","../core/has","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/subclass","../geometry/SpatialReference","./BaseTileLayer","./mixins/BlendLayer","./mixins/OperationalLayer","./support/TileInfo"],(function(e,t,r,a,o,i,n,s,l,p,u,c,y,d,g,h,b){"use strict";const m=new o.JSONMap({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"}),v="https://dev.virtualearth.net";let _=function(t){function o(e){var r;return(r=t.call(this,e)||this).type="bing-maps",r.tileInfo=new b({size:[256,256],dpi:96,origin:{x:-20037508.342787,y:20037508.342787,spatialReference:y.WebMercator},spatialReference:y.WebMercator,lods:[{level:1,resolution:78271.5169639999,scale:295828763.795777},{level:2,resolution:39135.7584820001,scale:147914381.897889},{level:3,resolution:19567.8792409999,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.99245256249,scale:4622324.434309},{level:8,resolution:611.49622628138,scale:2311162.217155},{level:9,resolution:305.748113140558,scale:1155581.108577},{level:10,resolution:152.874056570411,scale:577790.554289},{level:11,resolution:76.4370282850732,scale:288895.277144},{level:12,resolution:38.2185141425366,scale:144447.638572},{level:13,resolution:19.1092570712683,scale:72223.819286},{level:14,resolution:9.55462853563415,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.38865713397468,scale:9027.977411},{level:17,resolution:1.19432856685505,scale:4513.988705},{level:18,resolution:.597164283559817,scale:2256.994353},{level:19,resolution:.298582141647617,scale:1128.497176},{level:20,resolution:.1492910708238085,scale:564.248588}]}),r.key=null,r.style="road",r.culture="en-US",r.region=null,r.portalUrl=null,r.hasAttributionData=!0,r}e._inheritsLoose(o,t);var n=o.prototype;return n.load=function(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new a("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)},n.getTileUrl=function(e,t,r){if(!this.loaded||i.isNone(this.bingMetadata))return null;const a=this.bingMetadata.resourceSets[0].resources[0],o=a.imageUrlSubdomains[t%a.imageUrlSubdomains.length],n=this._getQuadKey(e,t,r);return a.imageUrl.replace("{subdomain}",o).replace("{quadkey}",n)},n.fetchAttributionData=function(){var t=e._asyncToGenerator((function*(){return this.load().then((()=>{if(i.isNone(this.bingMetadata))return null;return{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}}))}));function r(){return t.apply(this,arguments)}return r}(),n._getMetadata=function(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return r(`${v}/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new a("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new a("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new a("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new a("bingmapslayer:getmetadata",e.message)}))},n._getPortalBingKey=function(){return r(this.portalUrl,{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new a("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new a("bingmapslayer:getportalbingkey",e.message)}))},n._getQuadKey=function(e,t,r){let a="";for(let o=e;o>0;o--){let e=0;const i=1<<o-1;0!=(r&i)&&(e+=1),0!=(t&i)&&(e+=2),a+=e.toString()}return a},e._createClass(o,[{key:"bingMetadata",get:function(){return this._get("bingMetadata")},set:function(e){this._set("bingMetadata",e)}},{key:"copyright",get:function(){return i.isSome(this.bingMetadata)?this.bingMetadata.copyright:null}},{key:"operationalLayerType",get:function(){return m.toJSON(this.style)}},{key:"bingLogo",get:function(){return i.isSome(this.bingMetadata)?this.bingMetadata.brandLogoUri:null}}]),o}(g.BlendLayer(h.OperationalLayer(n.MultiOriginJSONMixin(d))));t.__decorate([s.property({json:{read:!1,write:!1},value:null})],_.prototype,"bingMetadata",null),t.__decorate([s.property({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],_.prototype,"type",void 0),t.__decorate([s.property({type:b})],_.prototype,"tileInfo",void 0),t.__decorate([s.property({type:String,readOnly:!0,json:{read:!1,write:!1}})],_.prototype,"copyright",null),t.__decorate([s.property({type:String,json:{write:!1,read:!1}})],_.prototype,"key",void 0),t.__decorate([s.property({type:m.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:m.read}}})],_.prototype,"style",void 0),t.__decorate([s.property({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],_.prototype,"operationalLayerType",null),t.__decorate([s.property({type:String,json:{write:!1,read:!1}})],_.prototype,"culture",void 0),t.__decorate([s.property({type:String,json:{write:!1,read:!1}})],_.prototype,"region",void 0),t.__decorate([s.property({type:String,json:{write:!0,read:!0}})],_.prototype,"portalUrl",void 0),t.__decorate([s.property({type:Boolean,json:{write:!1,read:!1}})],_.prototype,"hasAttributionData",void 0),t.__decorate([s.property({type:String,readOnly:!0})],_.prototype,"bingLogo",null),_=t.__decorate([c.subclass("esri.layers.BingMapsLayer")],_);return _}));
