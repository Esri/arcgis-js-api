/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../PixelBlock","../RasterInfo","../RasterStorageInfo","./BaseRaster","./pamParser","./xmlUtilities","../rasterFormats/utils","../rasterFunctions/pixelUtils","../../../geometry/SpatialReference","../../../geometry/Extent","../../../geometry/Point"],(function(e,t,r,n,s,i,a,o,l,c,u,f,p,h,g,d,m,y,x,b,I){"use strict";const w=new Map;w.set("Int8","s8"),w.set("UInt8","u8"),w.set("Int16","s16"),w.set("UInt16","u16"),w.set("Int32","s32"),w.set("UInt32","u32"),w.set("Float32","f32"),w.set("Float64","f32"),w.set("Double64","f32");const _=new Map;_.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),_.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),_.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),_.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let A=function(t){function r(){var e;return(e=t.apply(this,arguments)||this)._files=null,e._storageIndex=null,e.datasetFormat="MRF",e}e._inheritsLoose(r,t);var i=r.prototype;return i.open=function(){var t=e._asyncToGenerator((function*(e){var t;yield this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const r=e?s.unwrap(e.signal):null,n=yield this.request(this.url,{responseType:"xml",signal:r}),{rasterInfo:i,files:a}=this._parseHeader(n.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=yield this._fetchAuxiliaryData(e);var o;if(null!=t)i.statistics=null!=(o=t.statistics)?o:i.statistics,i.histograms=t.histograms,t.histograms&&!s.isSome(i.statistics)&&(i.statistics=y.estimateStatisticsFromHistograms(t.histograms))}this._set("rasterInfo",i),this._files=a;const l=yield this.request(a.index,{responseType:"array-buffer",signal:r});this._storageIndex=this._parseIndex(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,f=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:p,height:h}=this.rasterInfo,g=[],d=this._getBandSegmentCount();let m=0,x=-1;for(;m<this._storageIndex.length;){x++;const e=Math.ceil(p/c/f**x)-1,t=Math.ceil(h/u/f**x)-1;m+=(e+1)*(t+1)*d*4,g.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=g,x>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=x),this.updateTileInfo()}));function r(e){return t.apply(this,arguments)}return r}(),i.fetchRawTile=function(){var t=e._asyncToGenerator((function*(e,t,r,n={}){const{blockWidth:i,blockHeight:a,blockBoundary:o}=this.rasterInfo.storageInfo,l=o[e];if(!l||l.maxRow<t||l.maxCol<r||l.minRow>t||l.minCol>r)return null;const{bandCount:c,pixelType:f}=this.rasterInfo,{ranges:p,actualTileWidth:h,actualTileHeight:g}=this._getTileLocation(e,t,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const e=new Uint8Array(i*a);return new u({width:i,height:a,pixels:null,mask:e,validPixelCount:0})}const{bandIds:d}=this.ioConfig,m=this._getBandSegmentCount(),y=[];let x=0;for(x=0;x<m;x++)(!d||d.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:p[x].from,to:p[x].to},responseType:"array-buffer",signal:n.signal}));const b=yield Promise.all(y),I=b.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),w=new Uint8Array(I);let A=0;for(x=0;x<m;x++)w.set(new Uint8Array(b[x].data),A),A+=b[x].data.byteLength;const F=_.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=yield this.decodePixelBlock(w.buffer,{width:i,height:a,format:F,planes:(null==d?void 0:d.length)||c,pixelType:f});if(s.isSome(this.rasterInfo.noDataValue)&&"lerc"!==F&&!R.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=R.width*R.height,r=new Uint8Array(t);if(Math.abs(e)>1e24)for(x=0;x<t;x++)Math.abs((R.pixels[0][x]-e)/e)>1e-6&&(r[x]=1);else for(x=0;x<t;x++)R.pixels[0][x]!==e&&(r[x]=1);R.mask=r}}let S=0,E=0;if(h!==i||g!==a){let e=R.mask;if(e)for(x=0;x<a;x++)if(E=x*i,x<g)for(S=h;S<i;S++)e[E+S]=0;else for(S=0;S<i;S++)e[E+S]=0;else for(e=new Uint8Array(i*a),R.mask=e,x=0;x<g;x++)for(E=x*i,S=0;S<h;S++)e[E+S]=1}return R}));function r(e,r,n){return t.apply(this,arguments)}return r}(),i._parseIndex=function(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,r,n,s,i,a;if(m.isPlatformLittleEndian){for(r=new Uint8Array(e),s=new ArrayBuffer(e.byteLength),n=new Uint8Array(s),i=0;i<e.byteLength/4;i++)for(a=0;a<4;a++)n[4*i+a]=r[4*i+3-a];t=new Uint32Array(s)}else t=new Uint32Array(e);return t},i._getBandSegmentCount=function(){return _.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount},i._getTileLocation=function(e,t,r){const{blockWidth:n,blockHeight:s,pyramidScalingFactor:i}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,f,p=0,h=0;for(f=0;f<e;f++)h=i**f,c=Math.ceil(a/n/h),u=Math.ceil(o/s/h),p+=c*u;h=i**e,c=Math.ceil(a/n/h),u=Math.ceil(o/s/h),p+=t*c+r,p*=4*l;const g=this._storageIndex.subarray(p,p+4*l);let d=0,m=0;const y=[];for(let x=0;x<l;x++)d=g[4*x+0]*2**32+g[4*x+1],m=d+g[4*x+2]*2**32+g[4*x+3],y.push({from:d,to:m});return{ranges:y,actualTileWidth:r<c-1?n:Math.ceil(a/h)-n*(c-1),actualTileHeight:t<u-1?s:Math.ceil(o/h)-s*(u-1)}},i._parseHeader=function(e){const t=d.getElement(e,"MRF_META/Raster");if(!t)throw new n("mrf:open","not a valid MRF format");const r=d.getElement(t,"Size"),s=parseInt(r.getAttribute("x"),10),i=parseInt(r.getAttribute("y"),10),a=parseInt(r.getAttribute("c"),10),o=(d.getElementValue(t,"Compression")||"none").toLowerCase();if(!_.has(o))throw new n("mrf:open","currently does not support compression "+o);const l=d.getElementValue(t,"DataType")||"UInt8",c=w.get(l);if(null==c)throw new n("mrf:open","currently does not support pixel type "+l);const u=d.getElement(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),m=parseInt(u.getAttribute("y"),10),y=d.getElement(t,"DataValues");let A,F;y&&(F=y.getAttribute("NoData"),null!=F&&(A=F.trim().split(" ").map((e=>parseFloat(e)))));if(d.getElement(e,"MRF_META/CachedSource"))throw new n("mrf:open","currently does not support MRF referencing other data files");const R=d.getElement(e,"MRF_META/GeoTags"),S=d.getElement(R,"BoundingBox");let E,k=!1;if(null!=S){const e=parseFloat(S.getAttribute("minx")),t=parseFloat(S.getAttribute("miny")),r=parseFloat(S.getAttribute("maxx")),n=parseFloat(S.getAttribute("maxy")),s=d.getElementValue(R,"Projection")||"";let i;if("LOCAL_CS[]"!==s)if(s.toLowerCase().startsWith("epsg:")){const e=Number(s.slice(5));isNaN(e)||0===e||(i=new x({wkid:e}))}else i=g.parseSpatialReference(s);else k=!0,i=new x({wkid:3857});E=new b(e,t,r,n),E.spatialReference=i}else k=!0,E=new b({xmin:-.5,ymin:.5-i,xmax:s-.5,ymax:.5,spatialReference:new x({wkid:3857})});const M=d.getElement(e,"MRF_META/Rsets"),T=parseInt(M&&M.getAttribute("scale")||"2",10),C=E.spatialReference,v=new p({origin:new I({x:E.xmin,y:E.ymax,spatialReference:C}),blockWidth:h,blockHeight:m,pyramidBlockWidth:h,pyramidBlockHeight:m,compression:o,pyramidScalingFactor:T}),U=new I({x:E.width/s,y:E.height/i,spatialReference:C}),B=new f({width:s,height:i,extent:E,isPseudoSpatialReference:k,spatialReference:C,bandCount:a,pixelType:c,pixelSize:U,noDataValue:A,storageInfo:v}),L=d.getElementValue(e,"datafile"),P=d.getElementValue(e,"IndexFile");return{rasterInfo:B,files:{mrf:this.url,index:P||this.url.replace(".mrf",".idx"),data:L||this.url.replace(".mrf",_.get(o).blobExtension)}}},i._fetchAuxiliaryData=function(){var t=e._asyncToGenerator((function*(e){try{const{data:t}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return g.parsePAMInfo(t)}catch{return null}}));function r(e){return t.apply(this,arguments)}return r}(),r}(h);t.__decorate([i.property()],A.prototype,"_files",void 0),t.__decorate([i.property()],A.prototype,"_storageIndex",void 0),t.__decorate([i.property({type:String,json:{write:!0}})],A.prototype,"datasetFormat",void 0),A=t.__decorate([c.subclass("esri.layers.support.rasterIO.MRFRaster")],A);return A}));
