/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/accessorSupport/decorators/subclass","../RasterInfo","../RasterStorageInfo","./BaseRaster","./DBFParser","./pamParser","../rasterFormats/TiffDecoder","../rasterFormats/TiffTags","../rasterFunctions/stretchUtils","../rasterTransforms/PolynomialTransform","../../../rest/support/FeatureSet","../../../geometry/SpatialReference","../../../geometry/Extent","../../../geometry/Point"],(function(e,t,r,i,n,s,a,o,l,f,u,c,p,d,h,y,m,g,T,I,x,_){"use strict";const S=(e,t)=>e.get(t)?.values,b=(e,t)=>e.get(t)?.values?.[0];let F=function(t){function r(){var e;return(e=t.apply(this,arguments)||this)._files=null,e._headerInfo=null,e._bufferSize=1048576,e.datasetFormat="TIFF",e}e._inheritsLoose(r,t);var s=r.prototype;return s.open=function(){var t=e._asyncToGenerator((function*(e){yield this.init();const t=e?n.unwrap(e.signal):null,{data:r}=yield this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!r)throw new i("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:s,firstIFDPos:a,isBigTiff:o}=h.parseSignature(r),l=[];yield this._readIFDs(l,r,s,a,0,o?8:4,t);const{imageInfo:f,rasterInfo:u}=this._parseIFDs(l),c=h.getPyramidIFDs(l),p=h.getMaskIFDs(l);if(this._headerInfo={littleEndian:s,isBigTiff:o,ifds:l,pyramidIFDs:c,maskIFDs:p,...f},this._set("rasterInfo",u),!f.isSupported)throw new i("tiffraster:open","this tiff is not supported: "+f.message);if(!f.tileWidth)throw new i("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:d=[]}=this.ioConfig;if(!d.includes("aux.xml")){const t=yield this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,u)}d.includes("vat.dbf")||1!==u.bandCount||"u8"!==u.pixelType||(u.attributeTable=yield this._fetchAuxiliaryTable(e),n.isSome(u.attributeTable)&&(u.keyProperties.DataType="thematic")),this.updateTileInfo()}));function r(e){return t.apply(this,arguments)}return r}(),s.fetchRawTile=function(){var t=e._asyncToGenerator((function*(e,t,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const s=yield this._fetchRawTiffTile(e,t,r,!1,i);if(n.isSome(s)&&this._headerInfo.hasMaskBand){const a=yield this._fetchRawTiffTile(e,t,r,!0,i);n.isSome(a)&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0])}return s}));function r(e,r,i){return t.apply(this,arguments)}return r}(),s._parseIFDs=function(e){const t=h.getImageInfo(e),{width:r,height:i,tileWidth:n,tileHeight:s,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:p,pyramidBlockWidth:y,pyramidBlockHeight:m,tileBoundary:T,affine:F,metadata:w}=t,R=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let v=d.parseSpatialReference(R),E=!!t.isPseudoGeographic;null==v&&(E=!0,v=new I({wkid:3857}));const D=new x({...t.extent,spatialReference:v}),k=new _(D?{x:D.xmin,y:D.ymax,spatialReference:v}:{x:0,y:0}),P=new u({blockWidth:n,blockHeight:s,pyramidBlockWidth:y,pyramidBlockHeight:m,compression:l,origin:k,firstPyramidLevel:c,maximumPyramidLevel:p,blockBoundary:T}),B=new _({x:(D.xmax-D.xmin)/r,y:(D.ymax-D.ymin)/i,spatialReference:v}),O=w?{BandProperties:w.bandProperties,DataType:w.dataType}:{};let L=null;const G=b(e[0],"PHOTOMETRICINTERPRETATION"),A=S(e[0],"COLORMAP");if(G<=3&&A?.length>3&&A.length%3==0){L=[];const e=A.length/3;for(let t=0;t<e;t++)L.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const z=new f({width:r,height:i,bandCount:a,pixelType:o,pixelSize:B,storageInfo:P,spatialReference:v,isPseudoSpatialReference:E,keyProperties:O,extent:D,colormap:L,statistics:w?w.statistics:null});return F?.length&&(z.nativeExtent=new x({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:v}),z.transform=new g({polynomialOrder:1,forwardCoefficients:[F[2]+F[0]/2,F[5]-F[3]/2,F[0],F[3],-F[1],-F[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new _({x:(D.xmax-D.xmin)/r,y:(D.ymax-D.ymin)/i,spatialReference:v}),P.origin.x=-.5,P.origin.y=.5),{imageInfo:t,rasterInfo:z}},s._processPAMInfo=function(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&n.isNone(t.statistics)&&(t.statistics=m.estimateStatisticsFromHistograms(e.histograms)),e.transform&&n.isNone(t.transform)){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new _({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference)},s._readIFDs=function(){var t=e._asyncToGenerator((function*(e,t,r,i,n,s=4,a){if(!i)return null;if(i>=t.byteLength||i<0){t=(yield this.request(this.url,{range:{from:i+n,to:i+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=i+n,i=0}const o=yield this._readIFD(t,r,i,n,y.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;yield this._readIFDs(e,t,r,o.nextIFD-n,n,s,a)}));function r(e,r,i,n,s){return t.apply(this,arguments)}return r}(),s._readIFD=function(){var t=e._asyncToGenerator((function*(e,t,r,i,s=y.TIFF_TAGS,a=4,o){if(!e)return null;const l=h.parseIFD(e,t,r,i,s,a);if(l.success){const r=[];if(l.ifd?.forEach((e=>{e.values||r.push(e)})),r.length>0){const s=r.map((e=>e.offlineOffsetSize)).filter(n.isSome),a=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:n}=yield this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:o});e=n,i=a,r.forEach((r=>h.parseFieldValues(e,t,r,i)))}}if(l.ifd?.has("GEOKEYDIRECTORY")){const r=l.ifd.get("GEOKEYDIRECTORY"),n=r?.values;if(n&&n.length>4){const s=n[0]+"."+n[1]+"."+n[2],a=yield this._readIFD(e,t,r.valueOffset+6-i,i,y.GEO_KEYS,2,o);r.data=a.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==e.byteLength){const r=yield this.request(this.url,{range:{from:i,to:i+l.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=r.data).byteLength<l.requiredBufferSize?null:this._readIFD(e,t,0,i,y.TIFF_TAGS,4,o)}}));function r(e,r,i,n){return t.apply(this,arguments)}return r}(),s._fetchRawTiffTile=function(){var t=e._asyncToGenerator((function*(e,t,r,i,n={}){const s=this._getTileLocation(e,t,r,i);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:f}=s,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),c=yield Promise.all(u),p=c.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===c.length?c[0].data:new ArrayBuffer(p),h=[0],y=[0];if(c.length>1){const e=new Uint8Array(d);for(let t=0,r=0;t<c.length;t++){const i=c[t].data;e.set(new Uint8Array(i),r),h[t]=r,r+=i.byteLength,y[t]=i.byteLength}}const{blockWidth:m,blockHeight:g}=this.getBlockWidthHeight(e),T=yield this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:h,sizes:y},width:m,height:g,planes:null,pixelType:null});if(null==T)return null;let I,x,_;if(o!==m||l!==g){let e=T.mask;if(e)for(I=0;I<g;I++)if(_=I*m,I<l)for(x=o;x<m;x++)e[_+x]=0;else for(x=0;x<m;x++)e[_+x]=0;else for(e=new Uint8Array(m*g),T.mask=e,I=0;I<l;I++)for(_=I*m,x=0;x<o;x++)e[_+x]=1}return T}));function r(e,r,i,n){return t.apply(this,arguments)}return r}(),s._getTileLocation=function(e,t,r,i=!1){const{firstPyramidLevel:n,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(n-1),{_headerInfo:o}=this;if(!o)return null;const l=i?o.maskIFDs[a]:0===a?o?.ifds[0]:o?.pyramidIFDs[a-1];if(!l)return null;const f=h.isBSQConfig(l,o),u=S(l,"TILEOFFSETS");if(void 0===u)return null;const c=S(l,"TILEBYTECOUNTS"),{minRow:p,minCol:d,maxRow:y,maxCol:m}=s[a];if(t>y||r>m||t<p||r<d)return null;const g=b(l,"IMAGEWIDTH"),T=b(l,"IMAGELENGTH"),I=b(l,"TILEWIDTH"),x=b(l,"TILELENGTH"),_=f?this.rasterInfo.bandCount:1,F=_*t*(m+1)+r,w=[{from:u[F],to:u[F+_-1]+c[F+_-1]-1}];if(f){let e=!0;for(let t=0;t<_;t++)if(u[F+t]+c[F+t]!==u[F+t+1]){e=!1;break}if(!e)for(let t=0;t<_;t++)w[t]={from:u[F+t],to:u[F+t]+c[F+t]-1}}const R=u[F],v=c[F];if(null==R||null==v)return null;return{ranges:w,ifd:l,actualTileWidth:r===m&&g%I||I,actualTileHeight:t===y&&T%x||x}},s._fetchAuxiliaryMetaData=function(){var t=e._asyncToGenerator((function*(e){try{const{data:t}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return d.parsePAMInfo(t)}catch{return null}}));function r(e){return t.apply(this,arguments)}return r}(),s._fetchAuxiliaryTable=function(){var t=e._asyncToGenerator((function*(e){try{const{data:t}=yield this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),r=p.parse(t);return r?.recordSet?T.fromJSON(r.recordSet):null}catch{return null}}));function r(e){return t.apply(this,arguments)}return r}(),r}(c);t.__decorate([s.property()],F.prototype,"_files",void 0),t.__decorate([s.property()],F.prototype,"_headerInfo",void 0),t.__decorate([s.property()],F.prototype,"_bufferSize",void 0),t.__decorate([s.property({type:String,json:{write:!0}})],F.prototype,"datasetFormat",void 0),F=t.__decorate([l.subclass("esri.layers.support.rasterDatasets.TIFFRaster")],F);return F}));
