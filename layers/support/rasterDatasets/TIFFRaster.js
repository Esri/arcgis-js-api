/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/Error","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../geometry/Point","../../../geometry/Extent","../../../geometry","../RasterInfo","../rasterFormats/TiffTags","../rasterFormats/TiffDecoder","../rasterFunctions/pixelUtils","../RasterStorageInfo","./BaseRaster","../rasterTransforms/PolynomialTransform","./pamParser"],(function(e,t,i,r,a,s,n,o,l,f,u,c,p,h,d,m,y,g,x,T,I,w,_){"use strict";const F=function(e,t){const i=e.get(t);return i&&i.values},S=function(e,t){const i=e.get(t);return i&&i.values[0]};let E=function(t){function i(){var e;return(e=t.apply(this,arguments)||this)._files=null,e._headerInfo=null,e._bufferSize=1048576,e.datasetFormat="TIFF",e}e._inheritsLoose(i,t);var a=i.prototype;return a.open=async function(e){var t;await this.init();const i=e?r.unwrap(e.signal):null,{data:a}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!a)throw new l("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:s,firstIFD:n,isBigTiff:o}=g.parseSignature(a),f=[];await this.readIFDs(f,a,s,n,0,o?8:4,i);const u=g.getImageInfo(f),{width:c,height:d,tileWidth:y,tileHeight:I,planes:_,pixelType:F,compression:S,firstPyramidLevel:E,maximumPyramidLevel:v,pyramidBlockWidth:b,pyramidBlockHeight:R,tileBoundary:B,affine:D,metadata:k}=u,L=h.fromJSON(u.extent),O=L.spatialReference,z=new p(L?{x:L.xmin,y:L.ymax,spatialReference:O}:{x:0,y:0}),H=new T({blockWidth:y,blockHeight:I,pyramidBlockWidth:b,pyramidBlockHeight:R,compression:S,origin:z,firstPyramidLevel:E,maximumPyramidLevel:v,blockBoundary:B}),P=new p({x:(L.xmax-L.xmin)/c,y:(L.ymax-L.ymin)/d,spatialReference:O}),G=k?{BandProperties:k.bandProperties,DataType:k.dataType}:{},q=new m({width:c,height:d,bandCount:_,pixelType:F,compression:S,pixelSize:P,storageInfo:H,spatialReference:O,keyProperties:G,extent:L,statistics:k?k.statistics:null});if(null!=D&&D.length&&(q.nativeExtent=new h({xmin:-.5,ymin:.5-d,xmax:c-.5,ymax:.5,spatialReference:O}),q.transform=new w({polynomialOrder:1,forwardCoefficients:[D[2]+D[0]/2,D[5]-D[3]/2,D[0],D[3],-D[1],-D[4]]}),q.extent=q.transform.forwardTransform(q.nativeExtent),q.pixelSize=new p({x:(L.xmax-L.xmin)/c,y:(L.ymax-L.ymin)/d,spatialReference:O}),H.origin.x=-.5,H.origin.y=.5),null==(t=this.ioConfig.skipExtensions)||!t.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var W;if(q.statistics=null!=(W=t.statistics)?W:q.statistics,q.histograms=t.histograms,t.histograms&&!r.isSome(q.statistics)&&(q.statistics=x.estimateStatisticsFromHistograms(t.histograms)),t.transform&&!D){q.transform=t.transform,q.nativeExtent=q.extent;const e=q.transform.forwardTransform(q.nativeExtent);q.pixelSize=new p({x:(e.xmax-e.xmin)/c,y:(e.ymax-e.ymin)/d,spatialReference:O}),q.extent=e}q.spatialReference||(q.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",q),this._headerInfo={littleEndian:s,isBigTiff:o,ifds:f,...u},!this._headerInfo.isSupported)throw new l("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()},a.fetchRawTile=async function(e,t,i,r={}){var a;if(null==(a=this._headerInfo)||!a.isSupported||this.isBlockOutside(e,t,i))return null;const s=this.getTileLocation(e,t,i);if(!s)return null;const{range:n,actualTileWidth:o,actualTileHeight:l,ifd:f}=s,{data:u}=await this.request(this.url,{range:n,responseType:"array-buffer",signal:r.signal}),{blockWidth:c,blockHeight:p}=this.getBlockWidthHeight(e),h=await this.decodePixelBlock(u,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offset:0,size:0},width:c,height:p,planes:null,pixelType:null});let d,m,y;if(o!==c||l!==p){let e=h.mask;if(e)for(d=0;d<p;d++)if(y=d*c,d<l)for(m=o;m<c;m++)e[y+m]=0;else for(m=0;m<c;m++)e[y+m]=0;else for(e=new Uint8Array(c*p),h.mask=e,d=0;d<l;d++)for(y=d*c,m=0;m<o;m++)e[y+m]=1}return h},a.readIFDs=async function(e,t,i,r,a,s=4,n){if(!r)return null;if(r>=t.byteLength||r<0){t=(await this.request(this.url,{range:{from:r+a,to:r+a+this._bufferSize},responseType:"array-buffer",signal:n})).data,a=r+a,r=0}const o=await this.readIFD(t,i,r,a,y.TIFF_TAGS,s,n);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-a,a,s,n)},a.readIFD=async function(e,t,i,r,a=y.TIFF_TAGS,s=4,n){if(!e)return null;const o=g.parseIFD(e,t,i,r,a,s);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const a=i.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:a}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:n});e=a,r=s,i.forEach((i=>g.parseFieldValues(e,t,i,r)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),a=i.values;if(a&&a.length>4){const s=a[0]+"."+a[1]+"."+a[2],o=await this.readIFD(e,t,i.valueOffset+6-r,r,y.GEO_KEYS,2,n);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:n});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,r,y.TIFF_TAGS,4,n)}},a.getTileLocation=function(e,t,i){const{firstPyramidLevel:r,blockBoundary:a}=this.rasterInfo.storageInfo,s=0===e?0:e-(r-1),n=this._headerInfo.ifds[s];if(!n)return null;const o=F(n,"TILEOFFSETS");if(void 0===o)return null;const l=F(n,"TILEBYTECOUNTS"),{minRow:f,minCol:u,maxRow:c,maxCol:p}=a[s];if(t>c||i>p||t<f||i<u)return null;const h=S(n,"IMAGEWIDTH"),d=S(n,"IMAGELENGTH"),m=S(n,"TILEWIDTH"),y=S(n,"TILELENGTH"),g=t*(p+1)+i,x=o[g],T=l[g];if(null==x||null==T)return null;return{range:{from:x,to:x+T-1},ifd:n,actualTileWidth:i===p?h%m:m,actualTileHeight:t===c?d%y:y}},a._fetchAuxiliaryData=async function(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return _.parsePAMInfo(t)}catch{return null}},i}(I);return t.__decorate([n.property()],E.prototype,"_files",void 0),t.__decorate([n.property()],E.prototype,"_headerInfo",void 0),t.__decorate([n.property()],E.prototype,"_bufferSize",void 0),t.__decorate([n.property({type:String,json:{write:!0}})],E.prototype,"datasetFormat",void 0),E=t.__decorate([o.subclass("esri.layers.support.rasterDatasets.TIFFRaster")],E),E}));
