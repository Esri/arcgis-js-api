/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/Error","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../geometry/SpatialReference","../../../geometry/Point","../../../geometry/Extent","../../../geometry","../../../tasks/support/FeatureSet","../TileInfo","../RasterInfo","../RasterStorageInfo","./BaseRaster","./DBFParser","../rasterTransforms/utils"],(function(e,t,r,n,o,i,a,s,l,f,c,u,d,p,m,h,g,y,x,I,S,v,w){"use strict";const b=new Map;b.set("int16","esriFieldTypeSmallInteger"),b.set("int32","esriFieldTypeInteger"),b.set("int64","esriFieldTypeInteger"),b.set("float32","esriFieldTypeSingle"),b.set("float64","esriFieldTypeDouble"),b.set("text","esriFieldTypeString");const T=8;let _=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).storageInfo=null,e.datasetFormat="CRF",e}e._inheritsLoose(r,t);var o=r.prototype;return o.open=async function(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new l("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",r),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0},o.fetchRawTile=async function(e,t,r,n={}){const o=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const i=this._buildCacheFilePath(o,t,r,n.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),s=await this.request(i,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!s)return null;const l=new Uint8Array(s.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const c=await this.request(i,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:n.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null},o._validateHeader=function(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&"RasterInfo"===e.type&&!t.some((t=>!e[t]))},o._parseHeader=function(e){var t,r;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:o,histograms:i,colormap:a,blockWidth:s,blockHeight:l,firstPyramidLevel:f,maximumPyramidLevel:c}=e,u=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),h=e.extent.spatialReference,g=null==(t=e.geodataXform)?void 0:t.spatialReference,S=new d(null!=h&&h.wkid||null!=h&&h.wkt?h:g);let v=new m({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:S});const w=new p({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:S}),b=Math.round((v.xmax-v.xmin)/w.x),_=Math.round((v.ymax-v.ymin)/w.y),k=this._parseTransform(e.geodataXform),z=k?v:null;k&&(v=k.forwardTransform(v),w.x=(v.xmax-v.xmin)/b,w.y=(v.ymax-v.ymin)/_);const C=null!=(r=e.properties)?r:{},R=e.format.toLowerCase().replace("cache/",""),F=new p(e.origin.x,e.origin.y,S);let P,H,L,B;if(a&&a.colors)for(P=[],H=0;H<a.colors.length;H++)L=a.colors[H],B=a.values?a.values[H]:H,P.push([B,255&L,L<<16>>>24,L<<8>>>24,L>>>24]);const D=e.LODInfos,M=[];for(H=0;H<D.levels.length;H++)M.push({level:D.levels[H],resolution:D.resolutions[H],scale:96/.0254*D.resolutions[H]});const O=new y({dpi:96,lods:M,format:R,origin:F,size:[s,l],spatialReference:S}),$={recordSize:T,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*T+64},q=[{maxCol:Math.ceil(b/s)-1,maxRow:Math.ceil(_/l)-1,minCol:0,minRow:0}];let E=2;if(c>0)for(H=0;H<c;H++)q.push({maxCol:Math.ceil(b/E/s)-1,maxRow:Math.ceil(_/E/l)-1,minCol:0,minRow:0}),E*=2;const A=e.mdInfo;return{storageInfo:$,rasterInfo:new x({width:b,height:_,pixelType:n,bandCount:o,extent:v,nativeExtent:z,transform:k,spatialReference:S,pixelSize:w,keyProperties:C,statistics:u,histograms:i,multidimensionalInfo:A,colormap:P,storageInfo:new I({blockWidth:s,blockHeight:l,pyramidBlockWidth:s,pyramidBlockHeight:l,origin:F,tileInfo:O,firstPyramidLevel:f,maximumPyramidLevel:c,blockBoundary:q})})}},o._parseTransform=function(e){var t,r;if(!w.isTransformSupported(e))throw new l("cloudraster:open","the data contains unsupported geodata transform types");const n=w.readTransform(e);if("identity"===n.type)return null;if(null==(t=n.forwardCoefficients)||!t.length||null==(r=n.inverseCoefficients)||!r.length)throw new l("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n},o._fetchAuxiliaryInformation=async function(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),n=await Promise.all([t,r]);let o;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":b.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(o={fields:e,features:r})}}if(!o&&n[1]){o=v.parse(n[1]).recordSet}return g.fromJSON(o)},o._buildCacheFilePath=function(e,t,r,o){const i=this.storageInfo.packetSize,a=Math.floor(t/i)*i,s=Math.floor(r/i)*i,l="R"+this._toHexString4(a)+"C"+this._toHexString4(s);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,u=null==o?void 0:o[0];if(!n.isSome(c)||!u)return`${this.url}/_alllayers/${f}/${l}.bundle`;let d=c.variables.filter((e=>e.name===u.variableName))[0].dimensions[0].values.indexOf(u.values[0]).toString(16);const p=4-d.length;for(let n=0;n<p;n++)d="0"+d;return d="S"+d,`${this.url}/_alllayers/${u.variableName}/${d}/${f}/${l}.bundle`},o._getIndexRecordFromBundle=function(e,t){const r=this.storageInfo.packetSize,n=r*(e%r)+t%r;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44},o._getTileEndAndContentType=function(e,t){const r=e.subarray(t,t+8);let n,o=0;for(n=0;n<5;n++)o|=(255&r[n])<<8*n;const i=0xffffffffff&o;for(o=0,n=5;n<8;n++)o|=(255&r[n])<<8*(n-5);return{position:i,recordSize:0xffffffffff&o}},o._toHexString4=function(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t},r}(S);return t.__decorate([a.property({readOnly:!0})],_.prototype,"storageInfo",void 0),t.__decorate([a.property({type:String,json:{write:!0}})],_.prototype,"datasetFormat",void 0),_=t.__decorate([s.subclass("esri.layers.support.rasterDatasets.CloudRaster")],_),_}));
