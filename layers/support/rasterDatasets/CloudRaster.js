/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/Error","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../core/promiseUtils","../../../geometry/SpatialReference","../../../geometry/Point","../../../geometry/Extent","../../../geometry","../../../tasks/support/FeatureSet","../TileInfo","../RasterInfo","../RasterStorageInfo","./BaseRaster","./DBFParser"],(function(e,t,i,r,o,n,a,s,l,f,c,u,p,d,m,h,g,y,x,I,S,v,b){"use strict";const w=new Map;w.set("int16","esriFieldTypeSmallInteger"),w.set("int32","esriFieldTypeInteger"),w.set("int64","esriFieldTypeInteger"),w.set("float32","esriFieldTypeSingle"),w.set("float64","esriFieldTypeDouble"),w.set("text","esriFieldTypeString");let _=function(t){function i(){var e;return(e=t.apply(this,arguments)||this).storageInfo=null,e.datasetFormat="CRF",e}e._inheritsLoose(i,t);var o=i.prototype;return o.open=async function(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new l("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0},o.fetchRawTile=async function(e,t,i,r={}){const o=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const n=this._buildCacheFilePath(o,t,i,r.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),s=await this.request(n,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!s)return null;const l=new Uint8Array(s.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const c=await this.request(n,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:r.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null},o._validateHeader=function(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))},o._parseHeader=function(e){var t;const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:o,colormap:n,blockWidth:a,blockHeight:s,firstPyramidLevel:l,maximumPyramidLevel:f}=e,c=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),u=new d(e.extent.spatialReference||e.geodataXform.spatialReference),p=new h({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:u}),g=new m({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:u}),y=null!=(t=e.properties)?t:{},v=e.format.toLowerCase().replace("cache/",""),b=new m(e.origin.x,e.origin.y,u);let w,_,T,z;if(n&&n.colors)for(w=[],_=0;_<n.colors.length;_++)T=n.colors[_],z=n.values?n.values[_]:_,w.push([z,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const k=e.LODInfos,R=[];for(_=0;_<k.levels.length;_++)R.push({level:k.levels[_],resolution:k.resolutions[_],scale:96/.0254*k.resolutions[_]});const C=new x({dpi:96,lods:R,format:v,origin:b,size:[a,s],spatialReference:u}),F={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},H=Math.round((p.xmax-p.xmin)/g.x),P=Math.round((p.ymax-p.ymin)/g.y),L=[{maxCol:Math.ceil(H/a)-1,maxRow:Math.ceil(P/s)-1,minCol:0,minRow:0}];let B=2;if(f>0)for(_=0;_<f;_++)L.push({maxCol:Math.ceil(H/B/a)-1,maxRow:Math.ceil(P/B/s)-1,minCol:0,minRow:0}),B*=2;const D=e.mdInfo;return{storageInfo:F,rasterInfo:new I({width:H,height:P,pixelType:i,bandCount:r,extent:p,spatialReference:u,pixelSize:g,keyProperties:y,statistics:c,histograms:o,multidimensionalInfo:D,colormap:w,storageInfo:new S({blockWidth:a,blockHeight:s,pyramidBlockWidth:a,pyramidBlockHeight:s,origin:b,tileInfo:C,firstPyramidLevel:l,maximumPyramidLevel:f,blockBoundary:L})})}},o._fetchAuxiliaryInformation=async function(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await p.all([t,i]);let o;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":w.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(o={fields:e,features:i})}}if(!o&&r[1]){o=b.parse(r[1]).recordSet}return y.fromJSON(o)},o._buildCacheFilePath=function(e,t,i,o){const n=this.storageInfo.packetSize,a=Math.floor(t/n)*n,s=Math.floor(i/n)*n,l="R"+this._toHexString4(a)+"C"+this._toHexString4(s);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,u=null==o?void 0:o[0];if(!r.isSome(c)||!u)return`${this.url}/_alllayers/${f}/${l}.bundle`;let p=c.variables.filter((e=>e.name===u.variableName))[0].dimensions[0].values.indexOf(u.values[0]).toString(16);const d=4-p.length;for(let e=0;e<d;e++)p="0"+p;return p="S"+p,`${this.url}/_alllayers/${u.variableName}/${p}/${f}/${l}.bundle`},o._getIndexRecordFromBundle=function(e,t){const i=this.storageInfo.packetSize,r=i*(e%i)+t%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44},o._getTileEndAndContentType=function(e,t){const i=e.subarray(t,t+8);let r,o=0;for(r=0;r<5;r++)o|=(255&i[r])<<8*r;const n=0xffffffffff&o;for(o=0,r=5;r<8;r++)o|=(255&i[r])<<8*(r-5);return{position:n,recordSize:0xffffffffff&o}},o._toHexString4=function(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t},i}(v);return t.__decorate([a.property({readOnly:!0})],_.prototype,"storageInfo",void 0),t.__decorate([a.property({type:String,json:{write:!0}})],_.prototype,"datasetFormat",void 0),_=t.__decorate([s.subclass("esri.layers.support.rasterDatasets.CloudRaster")],_),_}));
