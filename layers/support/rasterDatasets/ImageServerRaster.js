/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/Error","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../geometry/SpatialReference","../../../geometry/Point","../../../geometry/Extent","../../../geometry","../../../tasks/support/FeatureSet","../TileInfo","../serviceTileInfoProperty","../TilemapCache","../RasterInfo","../rasterFunctions/pixelUtils","../RasterStorageInfo","./BaseRaster"],(function(e,t,i,a,s,l,n,r,o,c,u,h,m,f,p,d,y,x,g,v,S,w,b,I){"use strict";let M=function(t){function i(){var e;return(e=t.apply(this,arguments)||this)._levelOffset=0,e._slices=null,e._tilemapCache=null,e.datasetFormat="RasterTileServer",e}e._inheritsLoose(i,t);var s=i.prototype;return s.open=async function(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new o("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new o("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const l=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,null==this.tileType&&(l.indexOf(s.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===s.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name.slice(s.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:t});if(!a.isSome(n))throw new o("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?g.readServiceTileInfo(s.tileInfo,s):x.fromJSON(s.tileInfo),{extent:t,pixelSize:i}=n,a=.5/n.width*i.x;let l,r;const o=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==s.maxScale&&("Raster"===this.tileType?(l=e.lods.filter((e=>e.resolution===i.x))[0],l||(l=e.lods[e.lods.length-1])):(l=e.lods.filter((e=>Math.abs(e.scale-s.maxScale)<a))[0],l||(l=e.lods.filter((e=>e.scale>s.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=l.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),l||(l=o);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==s.minScale&&"Elevation"===this.tileType&&(r=e.lods.filter((e=>Math.abs(e.scale-s.minScale)<a))[0],this._levelOffset=r.level-c.level),r||(r=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>a||!e.lods.some((e=>Math.abs(e.resolution-u)<a)))&&(i.x=i.y=l.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=l.level-r.level,[m,f]=e.size,p=e.origin;let{x:d,y}=i;const v=[{minCol:Math.floor((t.xmin-p.x+.1*d)/m/d),maxCol:Math.floor((t.xmax-p.x-.1*d)/m/d),minRow:Math.floor((p.y-t.ymax+.1*y)/f/y),maxRow:Math.floor((p.y-t.ymin-.1*y)/f/y)}];if(h>0)for(let s=0;s<h;s++)d*=2,y*=2,v.push({minCol:Math.floor((t.xmin-p.x+.1*d)/m/d),maxCol:Math.floor((t.xmax-p.x-.1*d)/m/d),minRow:Math.floor((p.y-t.ymax+.1*y)/f/d),maxRow:Math.floor((p.y-t.ymin-.1*y)/f/d)});n.storageInfo=new b({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:v}),this._set("rasterInfo",n)}if(s.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:c.urlToObject(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new v.TilemapCache({layer:e})}},s.fetchRawTile=async function(e,t,i,a={}){const{storageInfo:s,extent:l,pixelSize:n}=this.rasterInfo,r=s.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${r}/${t}/${i}`,c=this._slices?{sliceId:a.sliceId||0}:null,{data:u}=await this.request(o,{query:c,responseType:"array-buffer",signal:a.signal});if(!u)return null;const h=await this.decodePixelBlock(u,{width:s.tileInfo.size[0],height:s.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),m=s.blockBoundary[e];if("jpg"!==s.compression||i>m.minCol&&i<m.maxCol&&t>m.minRow&&t<m.maxRow)return h;const{origin:f,blockWidth:p,blockHeight:d}=s,y=2**e,x=Math.round((l.xmin-f.x)/(n.x*y))%p,g=Math.round((l.xmax-f.x)/(n.x*y))%p,v=Math.round((f.y-l.ymax)/(n.x*y))%d,S=Math.round((f.y-l.ymin)/(n.x*y))%d,b=i===m.minCol?x:0,I=t===m.minRow?v:0,M=i===m.maxCol?g:p,T=t===m.maxRow?S:d;return w.setValidBoundary(h,{x:b,y:I},{width:M-b,height:T-I}),h},s.getSliceIndex=function(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!i)return!0;return(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null},s.fetchVariableStatisticsHistograms=async function(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),a=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([i,a]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}},s.computeBestPyramidLevelForLocation=async function(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,a.unwrap(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:l}=this.rasterInfo.storageInfo;let n=l-s+this._levelOffset;const r=i.srcLocation;for(;n>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(n,i.row,i.col,t))break}catch{}if(n--,s++,i=this.identifyPixelLocation(r,s,a.unwrap(t.datumTransformation)),null===i)return null}return-1===n||null==i?null:s},s._fetchRasterInfo=async function(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=m.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new S({width:i,height:a,bandCount:3,extent:p.fromJSON(t.extent),spatialReference:s,pixelSize:new f({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:l,signal:n}=e,r=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:l,f:"json"},signal:n}).then((e=>y.fromJSON(e.data))).catch((()=>null)),o=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:l,f:"json"},signal:n}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:l,f:"json"},signal:n}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:n}).then((e=>e.data)).catch((()=>{})),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),d=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:n}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([r,o,c,u,h,d]).then((e=>{let l=null;if(t.minValues&&t.minValues.length===t.bandCount){l=[];for(let e=0;e<t.minValues.length;e++)l.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new S({width:i,height:a,bandCount:t.bandCount,extent:p.fromJSON(t.extent),spatialReference:s,pixelSize:new f({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:l,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))},s._fetchMultidimensionalInfo=async function(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i},s._fixScaleInServiceInfo=function(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)},i}(I);return t.__decorate([n.property({type:String,json:{write:!0}})],M.prototype,"datasetFormat",void 0),t.__decorate([n.property()],M.prototype,"tileType",void 0),M=t.__decorate([r.subclass("esri.layers.support.rasterDatasets.ImageServerRaster")],M),M}));
