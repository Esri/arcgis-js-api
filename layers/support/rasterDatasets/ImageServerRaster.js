/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/maybe","../../../core/urlUtils","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../RasterInfo","../RasterStorageInfo","../serviceTileInfoProperty","../TileInfo","../TilemapCache","./BaseRaster","../rasterFunctions/pixelUtils","../rasterTransforms/GCSShiftTransform","../../../rest/imageService/fetchRasterInfo","../../../geometry/SpatialReference","../../../geometry/Point","../../../geometry/Extent"],(function(e,t,i,s,r,n,a,l,o,c,u,h,f,p,m,y,d,x,v,g,S,I){"use strict";let _=function(t){function i(){var e;return(e=t.apply(this,arguments)||this)._levelOffset=0,e._tilemapCache=null,e._slices=null,e.datasetFormat="RasterTileServer",e.tileType=null,e}e._inheritsLoose(i,t);var a=i.prototype;return a.open=function(){var t=e._asyncToGenerator((function*(e){yield this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:yield this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const a=i.data;if(this.sourceJSON=a,!a)throw new s("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new s("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const l=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=a.cacheType,null==this.tileType&&(l.includes(a.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=a.name?.slice(a.name.indexOf("/")+1)??"";const o=yield this._fetchRasterInfo({signal:t});if(r.isNone(o))throw new s("image-server-raster:open","cannot initialize image service");const c="Map"===this.tileType?f.readServiceTileInfo(a.tileInfo,a):p.fromJSON(a.tileInfo);r.assertIsSome(c);const[u,y]=this._computeMinMaxLOD(o,c),{extent:d,pixelSize:x}=o,v=.5/o.width*x.x,g=Math.max(x.x,x.y),{lods:S}=c;("Map"!==this.tileType&&0!==a.maxScale||Math.abs(x.x-x.y)>v||!S.some((e=>Math.abs(e.resolution-g)<v)))&&(x.x=x.y=u.resolution,o.width=Math.ceil((d.xmax-d.xmin)/x.x-.1),o.height=Math.ceil((d.ymax-d.ymin)/x.y-.1));const I=u.level-y.level,[_,T]=c.size,w=[];S.forEach((e=>{e.level>=y.level&&e.level<=u.level&&w.push({x:e.resolution,y:e.resolution})})),w.sort(((e,t)=>e.x-t.x));const b=this.computeBlockBoundary(d,_,T,c.origin,w,I),M=w.length>1?w.slice(1):null;let R;if(a.transposeInfo&&(R={tileSize:[a.transposeInfo.rows,a.transposeInfo.cols],packetSize:o.keyProperties?._yxs.PacketSize??0}),o.storageInfo=new h({blockWidth:c.size[0],blockHeight:c.size[1],pyramidBlockWidth:c.size[0],pyramidBlockHeight:c.size[1],pyramidResolutions:M,compression:c.format,origin:c.origin,firstPyramidLevel:1,maximumPyramidLevel:I,tileInfo:c,transposeInfo:R,blockBoundary:b}),this._fixGCSShift(o),this._set("rasterInfo",o),a.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:o.storageInfo.tileInfo,parsedUrl:n.urlToObject(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new m.TilemapCache({layer:e})}}));function i(e){return t.apply(this,arguments)}return i}(),a.fetchRawTile=function(){var t=e._asyncToGenerator((function*(e,t,i,s={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:l}=n,o=r.isSome(l)&&!!s.transposedVariableName;if(this._slices&&!o&&null==s.sliceId)return null;const c=o?0:n.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${c}/${t}/${i}`,h=this._slices?o?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:f}=yield this.request(u,{query:h,responseType:"array-buffer",signal:s.signal});if(!f)return null;const p=o?l.tileSize:n.tileInfo.size,m=yield this.decodePixelBlock(f,{width:p[0],height:p[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o}),y=n.blockBoundary[e];if("jpg"!==n.compression||i>y.minCol&&i<y.maxCol&&t>y.minRow&&t<y.maxRow)return m;const{origin:x,blockWidth:v,blockHeight:g}=n,{x:S,y:I}=this.getPyramidPixelSize(e),_=Math.round((a.xmin-x.x)/S)%v,T=Math.round((a.xmax-x.x)/S)%v||v,w=Math.round((x.y-a.ymax)/I)%g,b=Math.round((x.y-a.ymin)/I)%g||g,M=i===y.minCol?_:0,R=t===y.minRow?w:0,z=i===y.maxCol?T:v,P=t===y.maxRow?b:g;return d.setValidBoundary(m,{x:M,y:R},{width:z-M,height:P-R}),m}));function i(e,i,s){return t.apply(this,arguments)}return i}(),a.getSliceIndex=function(e){if(!this._slices||r.isNone(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return!0;return(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null},a.fetchVariableStatisticsHistograms=function(){var t=e._asyncToGenerator((function*(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),r=yield Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}));function i(e,i){return t.apply(this,arguments)}return i}(),a.computeBestPyramidLevelForLocation=function(){var t=e._asyncToGenerator((function*(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,r.unwrap(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-s+this._levelOffset;const l=i.srcLocation;for(;a>=0;){try{if("available"===(yield this._tilemapCache.fetchAvailability(a,i.row,i.col,t)))break}catch{}if(a--,s++,i=this.identifyPixelLocation(l,s,r.unwrap(t.datumTransformation)),null===i)return null}return-1===a||null==i?null:s}));function i(e){return t.apply(this,arguments)}return i}(),a._fetchRasterInfo=function(){var t=e._asyncToGenerator((function*(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=g.fromJSON(t.spatialReference||e.spatialReference),n=new S({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new u({width:i,height:s,bandCount:3,extent:I.fromJSON(e),spatialReference:r,pixelSize:n,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=v.fetchServiceRasterInfo(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,n=yield Promise.all([s,r]);return this._slices=n[1],n[0]}));function i(e){return t.apply(this,arguments)}return i}(),a._fixScaleInServiceInfo=function(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)},a._fixGCSShift=function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new x,e.extent=e.transform.forwardTransform(t))},a._computeMinMaxLOD=function(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,n=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),a=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:l}=this;if("Map"===l)return this._levelOffset=r[0].level,[n,a];if("Raster"===l){return[r.find((e=>e.resolution===i.x))??n,a]}const{minScale:o,maxScale:c}=this.sourceJSON;let u=n;c>0&&(u=r.find((e=>Math.abs(e.scale-c)<s)),u||(u=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??n));let h=a;return o>0&&(h=r.find((e=>Math.abs(e.scale-o)<s))??a,this._levelOffset=h.level-a.level),[u,h]},i}(y);t.__decorate([a.property({type:String,json:{write:!0}})],_.prototype,"datasetFormat",void 0),t.__decorate([a.property()],_.prototype,"tileType",void 0),_=t.__decorate([c.subclass("esri.layers.support.rasterDatasets.ImageServerRaster")],_);return _}));
