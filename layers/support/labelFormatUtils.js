/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","exports","../../chunks/_rollupPluginBabelHelpers","../../core/Error","../../core/Logger","../../core/maybe","../../intl/date","../../intl/number","./fieldUtils","./labelUtils","../../support/arcadeOnDemand"],(function(e,r,t,n,a,l,i,o,u,s,c){"use strict";const d=a.getLogger("esri.layers.support.labelFormatUtils"),p={type:"simple",evaluate:()=>null},f={getAttribute:(e,r)=>e.field(r)};function g(e,r,t){return y.apply(this,arguments)}function y(){return(y=t._asyncToGenerator((function*(r,t,a){if(!r||!r.symbol||!t)return p;const i=r.where,o=s.getLabelExpression(r),u=i?yield new Promise(((r,t)=>e(["../../core/sql/WhereClause"],r,t))):null;let g;if("arcade"===o.type){const e=yield c.createLabelExpression(o.expression,a,t);if(l.isNone(e))return p;g={type:"arcade",evaluate(r){try{const t=e.evaluate({$feature:"attributes"in r?e.repurposeFeature(r):r});if(null!=t)return t.toString()}catch(t){d.error(new n("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:r,expression:o}))}return null},needsHydrationToEvaluate:()=>null==s.getSingleFieldArcadeExpression(o.expression)}}else g={type:"simple",evaluate:e=>o.expression.replace(/{[^}]*}/g,(r=>{const n=r.slice(1,-1),a=t.get(n);if(!a)return r;let l=null;if("attributes"in e){e&&e.attributes&&(l=e.attributes[a.name])}else l=e.field(a.name);return null==l?"":m(l,a)}))};if(i){let e;try{e=u.WhereClause.create(i,t)}catch(y){return d.error(new n("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:i,error:y})),p}const r=g.evaluate;g.evaluate=t=>{const a="attributes"in t?void 0:f;try{if(e.testFeature(t,a))return r(t)}catch(y){d.error(new n("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:i,feature:t,error:y}))}return null}}return g}))).apply(this,arguments)}function m(e,r){if(null==e)return"";const t=r.domain;if(t)if("codedValue"===t.type||"coded-value"===t.type){const r=e;for(const e of t.codedValues)if(e.code===r)return e.name}else if("range"===t.type){const r=+e,n="range"in t?t.range[0]:t.minValue,a="range"in t?t.range[1]:t.maxValue;if(n<=r&&r<=a)return t.name}let n=e;return"date"===r.type||"esriFieldTypeDate"===r.type?n=i.formatDate(n,i.convertDateFormatToIntlOptions("short-date")):u.isNumericField(r)&&(n=o.formatNumber(+n)),n||""}r.createLabelFunction=g,r.formatField=m,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
