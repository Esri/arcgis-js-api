/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{bytesToUTF8 as e}from"../rasterDatasets/byteStreamUtils.js";import{J as t}from"../../../chunks/Jpg.js";import{load as n,decode as a}from"./Lerc.js";import{decode as i}from"./Lzw.js";import s from"./TiffTags.js";import{isPlatformLittleEndian as r}from"./utils.js";import{Z as l}from"../../../chunks/Zlib.js";const o=[0,1,1,2,4,8,1,1,2,4,8,4,8,-1,-1,-1,8,8,8],f=4294967296,c=new Set([1,5,6,7,8,34712,34887]);function u(e,t){let n="unknown";return 3===e?n="f32":1===e?1===t?n="u1":2===t?n="u2":4===t?n="u4":t<=8?n="u8":t<=16?n="u16":t<=32&&(n="u32"):2===e&&(t<=8?n="s8":t<=16?n="s16":t<=32&&(n="s32")),n}function h(e){let t=null;switch(e?e.toLowerCase():"f32"){case"u1":case"u2":case"u4":case"u8":t=Uint8Array;break;case"u16":t=Uint16Array;break;case"u32":t=Uint32Array;break;case"s8":t=Int8Array;break;case"s16":t=Int16Array;break;case"s32":t=Int32Array;break;default:t=Float32Array}return t}function g(e,t){return{x:t[0]*e.x+t[1]*e.y+t[2],y:t[3]*e.x+t[4]*e.y+t[5]}}function w(e,t){return e.get(t)?.values}function p(e,t){return e.get(t)?.values}function d(e,t){return e.get(t)?.values[0]}function I(e,t){return e.get(t)?.values[0]}function T(e,t,n,a=0,i=s.TIFF_TAGS,r=4){const l=8===r,o=l?U(new DataView(e,n,8),0,t):new DataView(e,n,2).getUint16(0,t),f=4+2*r,c=l?8:2,u=c+o*f;if(n+u>e.byteLength)return{success:!1,ifd:null,nextIFD:null,requiredBufferSize:u};const h=n+u+4<=e.byteLength?P(new DataView(e,n+u,8===r?8:4),0,t,8===r):null,g=n+c,w=new Map;let p,d,I,T,E,y,m;for(let A=0;A<o;A++){d=new DataView(e,g+f*A,f),I=d.getUint16(0,t),E=d.getUint16(2,t),T=s.getTagName(I,i);const n=[];2===r?(y=d.getUint16(4,t),m=d.getUint16(6,t)):4===r?(y=d.getUint32(4,t),m=d.getUint32(8,t)):8===r&&(y=P(d,4,t,!0),m=P(d,12,t,!0),n.push(d.getUint32(12,t)),n.push(d.getUint32(16,t))),p={id:I,type:E,valueCount:y,valueOffset:m,valueOffsets:n,values:null},x(e,t,p,a,!1,r),w.set(T,p)}return{success:!0,ifd:w,nextIFD:h,requiredBufferSize:u}}const E=(e,t)=>a(e,{inputOffset:t}).pixels[0];async function y(e,a,s,o,f){const c=r===a,g=I(s,"BITSPERSAMPLE"),w=u(I(s,"SAMPLEFORMAT")??1,g),p=I(s,"COMPRESSION")??1,d=h(w);let T,y,m,A,S,M,x;if(34887===p)return await n(),E(e,o);if(1===p)m=e.slice(o,o+f),A=new Uint8Array(m);else if(8===p||32946===p)A=new Uint8Array(e,o,f),M=new l(A),x=M.getBytes(),m=new ArrayBuffer(x.length),A=new Uint8Array(m),A.set(x);else if(6===p){A=new Uint8Array(e,o,f);const n=new t;n.parse(A);const a=n.getData(n.width,n.height,!0);m=new ArrayBuffer(a.length),A=new Uint8Array(m),A.set(a)}else if(7===p){const n=s.get("JPEGTABLES").values,a=n.length-2;A=new Uint8Array(a+f-2);for(let e=0;e<a;e++)A[e]=n[e];const i=new Uint8Array(e,o+2,f-2);for(let e=0;e<i.length;e++)A[a+e]=i[e];const r=new t;r.parse(A);const l=r.getData(r.width,r.height,!0);m=new ArrayBuffer(l.length),A=new Uint8Array(m),A.set(l)}else 5===p&&(A=i(e,o,f,a),m=A.buffer);if("u8"===w||"s8"===w||c)y=new d(m);else{switch(m=new ArrayBuffer(A.length),S=new Uint8Array(m),w){case"u16":case"s16":for(T=0;T<A.length;T+=2)S[T]=A[T+1],S[T+1]=A[T];break;case"u32":case"s32":case"f32":for(T=0;T<A.length;T+=4)S[T]=A[T+3],S[T+1]=A[T+2],S[T+2]=A[T+1],S[T+3]=A[T]}y=new d(m)}return y}async function m(e,t,n){const a=p(n,"TILEOFFSETS");if(void 0===a)return null;const i=p(n,"TILEBYTECOUNTS"),{width:s,height:r,pixelType:l,tileWidth:o,tileHeight:f}=b([n]),c=D(n,t),u=t.planes,g=s*r,w=I(n,"BITSPERSAMPLE"),d=34887===(I(n,"COMPRESSION")??1),T=h(l),E=[];for(let h=0;h<u;h++)E.push(new T(g));let m,A,S,M,x,O,U,L,P,N,k,G,R;const C=Math.ceil(s/o);if(w%8==0)if(d&&c&&u>1){const l=Math.round(a.length/u);for(m=0;m<l;m++){O=Math.floor(m/C)*f,U=m%C*o,L=O*s+U;for(let l=0;l<u;l++){const c=m*u+l;if(0!==i[c])for(S=await y(e,t.littleEndian,n,a[c],i[c]),N=0,P=L,G=Math.min(o,s-U),k=Math.min(f,r-O),R=E[l],M=0;M<k;M++)for(P=L+M*s,N=M*o,x=0;x<G;x++,P++,N++)R[P]=S[N]}}}else for(m=0;m<a.length;m++)if(0!==i[m])for(O=Math.floor(m/C)*f,U=m%C*o,L=O*s+U,S=await y(e,t.littleEndian,n,a[m],i[m]),N=0,P=L,G=Math.min(o,s-U),k=Math.min(f,r-O),A=0;A<u;A++)if(R=E[A],c||d)for(M=0;M<k;M++)for(P=L+M*s,N=o*f*A+M*o,x=0;x<G;x++,P++,N++)R[P]=S[N];else for(M=0;M<k;M++)for(P=L+M*s,N=M*o*u+A,x=0;x<G;x++,P++,N+=u)R[P]=S[N];return{width:s,height:r,pixelType:l,pixels:E}}const A=(e,n,a)=>{const s=r===n.littleEndian,o=p(a,"STRIPOFFSETS");if(void 0===o)return null;const{width:f,height:c,pixelType:u}=b([a]),g=n.planes,w=f*c,d=I(a,"BITSPERSAMPLE"),T=h(u),E=new T(w*g),y=p(a,"STRIPBYTECOUNTS"),m=I(a,"ROWSPERSTRIP"),A=I(a,"COMPRESSION")??1;let S,M,x,D,O,U,L,P,N,k,G,R=m;if(d%8==0)for(S=0;S<o.length;S++){if(O=S*(m*f)*g,R=(S+1)*m>c?c-S*m:m,"u8"===u||"s8"===u||s){if(8===A||32946===A)L=new Uint8Array(e,o[S],y[S]),k=new l(L),G=k.getBytes(),U=new ArrayBuffer(G.length),L=new Uint8Array(U),L.set(G),L.length!==R*f*g*d/8&&console.log("strip byte counts is different than expected");else if(6===A){L=new Uint8Array(e,o[S],y[S]);const n=new t;n.parse(L);const a=n.getData(n.width,n.height,!0);U=new ArrayBuffer(a.length),L=new Uint8Array(U),L.set(a)}else 5===A?(L=i(e,o[S],y[S],n.littleEndian),U=L.buffer):1===A&&(y[S]!==R*f*g*d/8&&console.log("strip byte counts is different than expected"),U=e.slice(o[S],o[S]+y[S]));D=new T(U)}else{switch(6===A||8===A||32946===A?(L=new Uint8Array(e,o[S],y[S]),k=new l(L),L=k.getBytes(),U=new ArrayBuffer(L.length),P=new Uint8Array(U),L.length!==R*f*g*d/8&&console.log("strip byte counts is different than expected")):1===A&&(y[S]!==R*f*g*d/8&&console.log("strip byte counts is different than expected"),U=new ArrayBuffer(y[S]),L=new Uint8Array(e,o[S],y[S]),P=new Uint8Array(U)),u){case"u16":case"s16":for(x=0;x<L.length;x+=2)P[x]=L[x+1],P[x+1]=L[x];break;case"u32":case"s32":case"f32":for(x=0;x<L.length;x+=4)P[x]=L[x+3],P[x+1]=L[x+2],P[x+2]=L[x+1],P[x+3]=L[x]}D=new T(U)}E.set(D,O)}const C=[];if(1===g)C.push(E);else for(S=0;S<g;S++){for(N=new T(w),M=0;M<w;M++)N[M]=E[M*g+S];C.push(N)}return{width:f,height:c,pixelType:u,pixels:C}},S=(e,t,n)=>{if(!(e&&e.length>0&&t&&n))return null;let a,i,s;const r=e[0].length,l=e.length,o=new Uint8Array(r);for(let f=0;f<l;f++)if(a=e[f],i=t[f],s=n[f],0===f)for(let e=0;e<r;e++)o[e]=a[e]<i||a[e]>s?0:1;else for(let e=0;e<r;e++)o[e]&&(o[e]=a[e]<i||a[e]>s?0:1);return o},M=e=>{if(!e)return null;const t=e.match(/<Item(.*?)Item>/gi);if(!t||0===t.length)return null;const n=new Map;let a,i,s,r,l;for(let I=0;I<t.length;I++)a=t[I],i=a.slice("<Item ".length,a.indexOf(">")),r=a.indexOf("sample="),r>-1&&(l=a.slice(r+'sample="'.length,a.indexOf('"',r+'sample="'.length))),r=a.indexOf("name="),r>-1&&(i=a.slice(r+'name="'.length,a.indexOf('"',r+'name="'.length))),i&&(s=a.slice(a.indexOf(">")+1,a.indexOf("</Item>")).trim(),null!=l?n.has(i)?n.get(i)[l]=s:n.set(i,[s]):n.set(i,s)),l=null;const o=n.get("STATISTICS_MINIMUM"),f=n.get("STATISTICS_MAXIMUM"),c=n.get("STATISTICS_MEAN"),u=n.get("STATISTICS_STDDEV");let h=null;if(o&&f){h=[];for(let e=0;e<o.length;e++)h.push({min:parseFloat(o[e]),max:parseFloat(f[e]),avg:c&&parseFloat(c[e]),stddev:u&&parseFloat(u[e])})}const g=n.get("BandName"),w=n.get("WavelengthMin"),p=n.get("WavelengthMax");let d=null;if(g){d=[];for(let e=0;e<g.length;e++)d.push({BandName:g[e],WavelengthMin:w&&parseFloat(w[e]),WavelengthMax:p&&parseFloat(p[e])})}return{statistics:h,bandProperties:d,dataType:n.get("DataType"),rawMetadata:n}};function x(e,t,n,a=0,i=!1,s=4){if(n.values)return!0;const r=n.type,l=n.valueCount;let c=n.valueOffset,u=[];const h=o[r],g=8*h,w=l*h,p=l*o[r]*8;let d,I;const T=8===s?64:32,E=n.valueOffsets;if(p>T){if(w>(i?e.byteLength:e?e.byteLength-c+a:0))return n.offlineOffsetSize=[c,w],n.values=null,!1}if(p<=T){if(!t)if(T<=32)c>>>=32-p;else{const e=E?.length?E[0]:c>>>0,t=E?.length?E[1]:Math.round((c-e)/f);p<=32?(c=e>>>32-p,E[0]=c):(c=e*2**(32-p)+(t>>>32-p),E[0]=e,E[1]=t>>>32-p)}if(1===l&&g===T)u=[c];else if(64===T){const e=E?.length?E[0]:c>>>0,t=E?.length?E[1]:Math.round((c-e)/f);let n=e,a=32;for(I=1;I<=l;I++){const e=32-g*I%32;if(a<g){const i=n<<e>>>32-a,s=t<<32-a>>>32-a;n=t,u.push(i+s*2**(g-a)),a-=32-(g-a)}else u.push(n<<e>>>32-g),a-=g;0===a&&(a=32,n=t)}}else for(I=1;I<=l;I++){const e=32-g*I;u.push(c<<e>>>32-g)}}else{c-=a,i&&(c=0);for(let n=c;n<c+w;n+=h){switch(r){case 1:case 2:case 7:d=new DataView(e,n,1).getUint8(0);break;case 3:d=new DataView(e,n,2).getUint16(0,t);break;case 4:case 13:d=new DataView(e,n,4).getUint32(0,t);break;case 5:d=new DataView(e,n,4).getUint32(0,t)/new DataView(e,n+4,4).getUint32(0,t);break;case 6:d=new DataView(e,n,1).getInt8(0);break;case 8:d=new DataView(e,n,2).getInt16(0,t);break;case 9:d=new DataView(e,n,4).getInt32(0,t);break;case 10:d=new DataView(e,n,4).getInt32(0,t)/new DataView(e,n+4,4).getInt32(0,t);break;case 11:d=new DataView(e,n,4).getFloat32(0,t);break;case 12:d=new DataView(e,n,8).getFloat64(0,t);break;case 16:case 18:d=U(new DataView(e,n,8),0,t);break;case 17:d=L(new DataView(e,n,8),0,t);break;default:d=null}u.push(d)}}if(2===r){let e="";const t=u;for(u=[],I=0;I<t.length;I++)0===t[I]&&""!==e?(u.push(e),e=""):e+=String.fromCharCode(t[I]);""===e&&0!==u.length||u.push(e)}return n.values=u,!0}function b(e){const t=e[0],n=I(t,"TILEWIDTH"),a=I(t,"TILELENGTH"),i=I(t,"IMAGEWIDTH"),s=I(t,"IMAGELENGTH"),r=I(t,"BITSPERSAMPLE"),l=I(t,"SAMPLESPERPIXEL"),o=I(t,"SAMPLEFORMAT")??1,f=u(o,r),h=D(t),T=w(t,"GDAL_NODATA");let E;T?.length&&(E=T.map((e=>parseFloat(e))),E.some((e=>isNaN(e)))&&(E=null));const y=I(t,"COMPRESSION")??1;let m;switch(y){case 1:m="NONE";break;case 2:case 3:case 4:case 32771:m="CCITT";break;case 5:m="LZW";break;case 6:case 7:m="JPEG";break;case 32773:m="PACKBITS";break;case 8:case 32946:m="DEFLATE";break;case 34712:m="JPEG2000";break;case 34887:m="LERC";break;default:m=String(y)}let A=!0,S="";c.has(y)||(A=!1,S+="unsupported tag compression "+y),o>3&&(A=!1,S+="unsupported tag sampleFormat "+o),r%8!=0&&(A=!1,S+="unsupported tag bitsPerSample "+r);const x=d(t,"GEOASCIIPARAMS");let b;if(x){const e=x.split("|").find((e=>e.includes("ESRI PE String = "))),t=e?e.replace("ESRI PE String = ",""):"";b=t.startsWith("COMPD_CS")||t.startsWith("PROJCS")||t.startsWith("GEOGCS")?{wkid:null,wkt:t}:null}const O=p(t,"GEOTIEPOINTS"),U=p(t,"GEOPIXELSCALE"),L=p(t,"GEOTRANSMATRIX"),P=t.has("GEOKEYDIRECTORY")?t.get("GEOKEYDIRECTORY").data:null;let N,k,R=!1;if(P){R=2===I(P,"GTRasterTypeGeoKey");const e=I(P,"GTModelTypeGeoKey");if(2===e){const e=I(P,"GeographicTypeGeoKey");e>=1024&&e<=32766&&(b={wkid:e})}else if(1===e){const e=I(P,"ProjectedCSTypeGeoKey");e>=1024&&e<=32766&&(b={wkid:e})}}if(U&&O&&O.length>=6?(N=[U[0],0,O[3]-O[0]*U[0],0,-Math.abs(U[1]),O[4]-O[1]*U[1]],R&&(N[2]-=.5*N[0]+.5*N[1],N[5]-=.5*N[3]+.5*N[4])):L&&16===L.length&&(N=R?[L[0],L[1],L[3]-.5*L[0],L[4],L[5],L[7]-.5*L[5]]:[L[0],L[1],L[3],L[4],L[5],L[7]]),N){const e=[{x:0,y:s},{x:0,y:0},{x:i,y:s},{x:i,y:0}];let t,n=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;for(let i=0;i<e.length;i++)t=g(e[i],N),n=t.x>n?n:t.x,r=t.x<r?r:t.x,a=t.y>a?a:t.y,l=t.y<l?l:t.y;k={xmin:n,xmax:r,ymin:a,ymax:l,spatialReference:b}}else k={xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:b};const C=e.filter((e=>1===d(e,"NEWSUBFILETYPE")));let v,F,B,V,W;if(C.length>0){v=Math.round(Math.log(i/I(C[0],"IMAGEWIDTH"))/Math.LN2);const e=C[C.length-1];F=Math.round(Math.log(i/I(e,"IMAGEWIDTH"))/Math.LN2),B=I(e,"TILEWIDTH"),V=I(e,"TILELENGTH")}B=F>0?B||n:null,V=F>0?V||a:null,n&&(W=[{maxCol:Math.ceil(i/n)-1,maxRow:Math.ceil(s/a)-1,minRow:0,minCol:0}],C.forEach((e=>{W.push({maxCol:Math.ceil(I(e,"IMAGEWIDTH")/I(e,"TILEWIDTH"))-1,maxRow:Math.ceil(I(e,"IMAGELENGTH")/I(e,"TILELENGTH"))-1,minRow:0,minCol:0})})));const H=d(e[0],"GDAL_METADATA"),Y=M(H);return S+=" "+G({width:i,height:s,tileWidth:n,tileHeight:a,planes:l,ifds:e}),{width:i,height:s,tileWidth:n,tileHeight:a,planes:l,isBSQ:h,pixelType:f,compression:m,noData:E,isSupported:A,message:S,extent:k,affine:U?null:N,firstPyramidLevel:v,maximumPyramidLevel:F,pyramidBlockWidth:B,pyramidBlockHeight:V,tileBoundary:W,metadata:Y}}function D(e,t){const n=w(e,"PLANARCONFIGURATION");return n?2===n[0]:!!t&&t.isBSQ}function O(e){const{littleEndian:t,isBigTiff:n,firstIFD:a}=N(e);let i=a;const r=[];do{const a=k(e,t,i,0,s.TIFF_TAGS,n?8:4);if(!a.success)break;r.push(a.ifd),i=a.nextIFD}while(i>0);return{...b(r),littleEndian:t,isBigTiff:n,ifds:r}}function U(e,t,n){const a=e.getUint32(t,n),i=e.getUint32(t+4,n);return n?i*f+a:a*f+i}function L(e,t,n){let a=n?e.getInt32(t,n):e.getUint32(t,n),i=n?e.getUint32(t+4,n):e.getInt32(t+4,n);const s=(n?a:i)>=0?1:-1;n?a*=s:i*=s;return s*(n?i*f+a:a*f+i)}function P(e,t,n,a){return a?U(e,t,n):e.getUint32(t,n)}function N(e){const t=new DataView(e,0,16),n=t.getUint16(0,!1);let a=null;if(18761===n)a=!0;else{if(19789!==n)throw"unexpected endianess byte";a=!1}const i=t.getUint16(2,a);if(42!==i&&43!==i)throw"unexpected tiff identifier";let s=4;const r=43===i;if(r){const e=t.getUint16(s,a);if(s+=2,8!==e)throw"unsupported bigtiff version";if(0!==t.getUint16(s,a))throw"unsupported bigtiff version";s+=2}return{littleEndian:a,isBigTiff:r,firstIFD:P(t,s,a,r)}}function k(t,n,a,i=0,r=s.TIFF_TAGS,l=4){const o=T(t,n,a,i,r,l);let f;const c=o.ifd;if(c){if(s.ifdTags.forEach(((e,a)=>{c.has(a)&&(f=c.get(a),f.data=T(t,n,f.valueOffset-i,i,e).ifd)})),c.has("GEOKEYDIRECTORY")){f=c.get("GEOKEYDIRECTORY");const e=f.values;if(e&&e.length>4){const a=e[0]+"."+e[1]+"."+e[2];f.data=T(t,n,f.valueOffset+6-i,i,s.GEO_KEYS,2).ifd,f.data&&f.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}if(c.has("XMP")){f=c.get("XMP");const t=f.values;"number"==typeof t[0]&&7===f.type&&(f.values=[e(new Uint8Array(t))])}}return o}function G(e){const{width:t,height:n,tileHeight:a,tileWidth:i}=e,s=e.planes,r=i?i*a:t*n,l=I(e.ifds[0],"BITSPERSAMPLE");let o="";return r*s>2**30/(l>8?l/8:1)&&(o=i?"tiled tiff exceeding 1 gigabits per tile is not supported":"scanline tiff exceeding 1 gigabits is not supported"),o}async function R(e,t){const{headerInfo:n,ifd:a,offsets:i,sizes:s}=t,r=[];for(let h=0;h<i.length;h++){const t=await y(e,n.littleEndian,a,i[h],s[h]||e.byteLength);r.push(t)}const l=D(a,n),{pixelType:o,planes:f}=n,c=h(o),u=I(a,"TILEWIDTH"),g=I(a,"TILELENGTH"),w=I(a,"COMPRESSION")??1,p=u*g;let d;const T=[];let E=r[0];const m=34887===w;for(let h=0;h<f;h++){if(d=new c(p),l&&m){if(E=r[h],E.length)for(let e=0;e<p;e++)d[e]=E[h][e+h]}else if(E.length)if(l||m&&!l)d=E.slice(p*h,p*(h+1));else for(let e=0;e<p;e++)d[e]=E[e*f+h];T.push(d)}const A=n.noData?n.noData[0]:t.noDataValue,M=n.metadata?n.metadata.statistics:null,x=M?M.map((e=>e.min)):null,b=M?M.map((e=>e.max)):null;let O,U;if(null!=A)if(O=new Uint8Array(p),Math.abs(A)>1e24)for(U=0;U<p;U++)Math.abs((T[0][U]-A)/A)<1e-6?O[U]=0:O[U]=1;else for(U=0;U<p;U++)T[0][U]===A?O[U]=0:O[U]=1;else x&&b&&t.applyMinMaxConstraint&&(O=S(T,x,b));return{pixelType:o,width:u,height:g,pixels:T,mask:O,noDataValue:A}}async function C(e,t={}){const n=t.pyramidLevel||0,a=t.headerInfo||O(e),{ifds:i,noData:s}=a;if(0===i.length)throw"no valid image file directory";const r=G(a);if(r)throw r;let l,o;const f=-1===n?i[i.length-1]:i[n],c=s?s[0]:t.noDataValue;if(o=a.tileWidth?await m(e,a,f):await A(e,a,f),null!==c){if(o.mask=new Uint8Array(o.width*o.height),Math.abs(c)>1e24)for(l=0;l<o.width*o.height;l++)Math.abs((o.pixels[0][l]-c)/c)<1e-6?o.mask[l]=0:o.mask[l]=1;else for(l=0;l<o.width*o.height;l++)o.pixels[0][l]===c?o.mask[l]=0:o.mask[l]=1;o.noDataValue=c}return o}export{C as decode,R as decodeTileOrStrip,b as getImageInfo,D as isBSQConfig,x as parseFieldValues,O as parseHeader,k as parseIFD,N as parseSignature};
