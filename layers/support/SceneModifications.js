/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import o from"../../request.js";import t from"../../core/Collection.js";import{JSONSupportMixin as e}from"../../core/JSONSupport.js";import{get as s}from"../../core/maybe.js";import{urlToObject as i}from"../../core/urlUtils.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import m from"./SceneModification.js";var a;let n=a=class extends(e(t.ofType(m))){constructor(r){super(r),this.url=null}clone(){return new a({url:this.url,items:this.items.map((r=>r.clone()))})}toJSON(r){return this.toArray().map((o=>o.toJSON(r))).filter((r=>!!r.geometry))}static fromJSON(r,o){const t=new a;for(const e of r)t.add(m.fromJSON(e,o));return t}static async fromUrl(r,t,e){const c={url:i(r),origin:"service"},p=await o(r,{responseType:"json",signal:s(e,"signal")}),n=t.toJSON(),l=[];for(const o of p.data)l.push(m.fromJSON({...o,geometry:{...o.geometry,spatialReference:n}},c));return new a({url:r,items:l})}};r([c({type:String})],n.prototype,"url",void 0),n=a=r([p("esri.layers.support.SceneModifications")],n);const l=n;export{l as default};
