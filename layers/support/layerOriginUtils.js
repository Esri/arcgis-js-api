/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{writableNameToId as e,idToReadableName as r,OriginId as t,idToWritableName as i}from"../../core/accessorSupport/PropertyOrigin.js";import{isFeatureServiceLayer as o}from"./layerUtils.js";const p=e=>"feature"===e.type&&!e.isTable,n={feature:{predicate:o,propertyGroups:[{id:"blend-mode",properties:["blendMode"],predicate:p},{id:"charts",properties:["charts"]},{id:"custom-parameters",properties:["customParameters"]},{id:"definition-expression",properties:["definitionExpression"]},{id:"effect",properties:["effect","featureEffect"],predicate:p},{id:"feature-reduction",properties:["featureReduction"],predicate:p},{id:"floor-info",properties:["floorInfo"],predicate:p},{id:"form-template",properties:["formTemplate"]},{id:"labels",properties:["labelingInfo","labelsVisible"],predicate:p},{id:"legend-enabled",properties:["legendEnabled"],predicate:p},{id:"opacity",properties:["opacity"],predicate:p},{id:"order-by",properties:["orderBy"],predicate:p},{id:"popup",properties:["popupTemplate","popupEnabled"]},{id:"refresh-interval",properties:["refreshInterval"]},{id:"renderer",properties:["renderer"],predicate:p},{id:"scale-range",properties:["minScale","maxScale"],predicate:p},{id:"use-view-time",properties:["useViewTime"]}]}};function s(e){return n[e.type].propertyGroups.filter((r=>!r.predicate||r.predicate(e)))}function d(e){const r=s(e),t=[];for(const i of r)t.push(...i.properties);return t}function c(e,r,t){return e.originIdOf(r)<t?"source":"overridden"}function a(r,t,i){const o=e(i),{id:p,properties:n}=t,s=n.map((e=>c(r,e,o))).reduce(((e,r)=>e===r?e:"overridden"));return{id:p,properties:[...n],status:s}}function f(t,i,o){const p=e(o);t.revert(i,r(p-1))}function u(r,o,p){const n=e(p),s=r,d=s.originIdOf(o);d<n&&d!==t.COMPUTED&&s.updateOrigin(o,i(n))}function l(e){const r=n[e.type];return!(!r||r.predicate&&!r.predicate(e))}function m(e,r){if(!l(e))return;const t=s(e).map((t=>a(e,t,r)));return{propertyGroupOriginInfos:t,status:t.map((e=>e.status)).reduce(((e,r)=>e===r?e:"mixed"))}}function y(e,r){if(!l(e))return;const t=d(e);for(const i of t)f(e,i,r)}function b(e,r){if(!l(e))return;const t=d(e);for(const i of t)u(e,i,r)}export{y as clearOverrides,b as disconnectFromSource,m as getLayerOriginInfo,l as isSupportedLayer};
