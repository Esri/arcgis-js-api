/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{clone as e}from"../../core/lang.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{enumeration as n}from"../../core/accessorSupport/decorators/enumeration.js";import{reader as s}from"../../core/accessorSupport/decorators/reader.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../../core/accessorSupport/decorators/writer.js";var u;const c=new Set(["raster","raster2","dem","fillraster"]),p=new Set(["rasters"]),m=t=>t&&t.rasterFunction?d.fromJSON(t):t,f=t=>t&&t instanceof d?t.toJSON():t,l=t=>t?.functionName&&!t.declaredClass,y=t=>l(t)?new d(t):t,F=t=>{if(null==t)return null;t=e(t);const r={};for(const e of Object.keys(t))c.has(e.toLowerCase())?r[e]=m(t[e]):p.has(e.toLowerCase())&&Array.isArray(t[e])?r[e]=t[e].map(m):r[e]=t[e];return r};let d=u=class extends r{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(t){if(t){const r=Object.keys(t);if(r.some((r=>c.has(r.toLowerCase())&&l(t[r])))||r.some((r=>p.has(r.toLowerCase())&&Array.isArray(t[r])&&t[r].some((t=>l(t)))))){t=e(t);for(const e of r)c.has(e.toLowerCase())?t[e]=y(t[e]):p.has(e.toLowerCase())&&Array.isArray(t[e])&&(t[e]=t[e].map((t=>y(t))))}}this._set("functionArguments",t)}readFunctionArguments(t){return F(t)}writeFunctionArguments(t,r,e){const o={};for(const n of Object.keys(t))c.has(n.toLowerCase())?o[n]=f(t[n]):p.has(n.toLowerCase())&&Array.isArray(t[n])?o[n]=t[n].map(f):o[n]=f(t[n]);r[e]=o}readFunctionName(t,r){const e=r.rasterFunctionInfos,o=r.name;return o||(e&&e.length&&"None"!==e[0].name?e[0].name:r.rasterFunctionDefinition?r.rasterFunctionDefinition.name:r.rasterFunction)}clone(){return new u({functionName:this.functionName,functionArguments:e(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:e(this.rasterFunctionDefinition)})}};t([o({json:{type:Object,name:"rasterFunctionArguments"}})],d.prototype,"functionArguments",null),t([s("functionArguments")],d.prototype,"readFunctionArguments",null),t([a("functionArguments")],d.prototype,"writeFunctionArguments",null),t([o({json:{type:String,write:{target:"rasterFunction"}}})],d.prototype,"functionName",void 0),t([s("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],d.prototype,"readFunctionName",null),t([n({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),o({json:{default:"unknown"}})],d.prototype,"outputPixelType",void 0),t([o({type:String,json:{read:!0,write:!0}})],d.prototype,"variableName",void 0),t([o({type:Object,json:{name:"rasterFunctionDefinition"}})],d.prototype,"rasterFunctionDefinition",void 0),d=u=t([i("esri.layers.support.RasterFunction")],d);const w=d;export{w as default};
