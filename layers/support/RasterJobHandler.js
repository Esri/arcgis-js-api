/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../core/Error","./PixelBlock","../../core/workers/workers"],(function(e,r,o){"use strict";return function(){function n(){this._workerThread=null,this._destroyed=!1}var t=n.prototype;return t.initialize=async function(){const e=await o.open("RasterWorker");this._destroyed?e.close():this._workerThread=e},t.destroy=function(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)},t.decode=async function(o,n){if(!this._workerThread)throw new e("raster-jobhandler:no-connection","no available worker connection");const t=await this._workerThread.invoke("decode",o,n);return t?new r(t):null},t.symbolize=async function(o,n){if(!this._workerThread)throw new e("raster-jobhandler:no-connection","no available worker connection");const t={extent:o.extent&&o.extent.toJSON(),pixelBlock:o.pixelBlock.toJSON(),simpleStretchParams:o.simpleStretchParams,bandIds:o.bandIds},i=await this._workerThread.invoke("symbolize",t,n);return i?new r(i):null},t.updateSymbolizer=async function(r,o){var n;if(!this._workerThread)throw new e("raster-jobhandler:no-connection","no available worker connection");const t=null==r||null==(n=r.rendererJSON)?void 0:n.histograms;await Promise.all(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:r.toJSON(),histograms:t},o))},t.stretch=async function(o,n){if(!this._workerThread)throw new e("raster-jobhandler:no-connection","no available worker connection");if(null==o||!o.pixelBlock)return null;const t={srcPixelBlock:o.pixelBlock.toJSON(),stretchParams:o.stretchParams},i=await this._workerThread.invoke("stretch",t,n);return i?new r(i):null},t.split=async function(o,n){if(!this._workerThread)throw new e("raster-jobhandler:no-connection","no available worker connection");if(null==o||!o.pixelBlock)return null;const t={srcPixelBlock:o.pixelBlock.toJSON(),tileSize:o.tileSize,maximumPyramidLevel:o.maximumPyramidLevel},i=await this._workerThread.invoke("split",t,n);return i&&i.forEach(((e,o)=>{i.set(o,e?r.fromJSON(e):null)})),Promise.resolve(i)},t.estimateStatisticsHistograms=async function(r,o){if(!this._workerThread)throw new e("raster-jobhandler:no-connection","no available worker connection");if(null==r||!r.pixelBlock)return null;const n={srcPixelBlock:r.pixelBlock.toJSON()},t=await this._workerThread.invoke("estimateStatisticsHistograms",n,o);return Promise.resolve(t)},t.mosaicAndTransform=async function(o,n){var t;if(!this._workerThread)throw new e("raster-jobhandler:no-connection","no available worker connection");if(null==o||null==(t=o.srcPixelBlocks)||!t.length)return null;const i={...o,srcPixelBlocks:o.srcPixelBlocks.map((e=>e?e.toJSON():null))},a=await this._workerThread.invoke("mosaicAndTransform",i,n);return a?new r(a):null},n}()}));
