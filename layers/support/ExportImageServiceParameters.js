/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/JSONSupport","../../core/accessorSupport/decorators/aliasOf","../../core/arrayUtils","../../core/has","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./imageryRendererUtils","./MosaicRule","./rasterEnums","./RasterFunction"],(function(e,r,t,o,i,a,n,s,p,c,l,m,u,d,y){"use strict";e.ExportImageServiceParameters=function(e){function t(){var r;return(r=e.apply(this,arguments)||this).layer=null,r.adjustAspectRatio=void 0,r.bandIds=void 0,r.compression=void 0,r.compressionQuality=void 0,r.compressionTolerance=.01,r.format=null,r.interpolation=null,r.noData=null,r.noDataInterpretation=void 0,r.pixelType=void 0,r.lercVersion=2,r}r._inheritsLoose(t,e);var o=t.prototype;return o.writeAdjustAspectRatio=function(e,r,t){this.layer.version<10.3||(r[t]=e)},o.writeCompressionQuality=function(e,r,t){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(r[t]=e)},o.writeCompressionTolerance=function(e,r,t){"lerc"===this.format&&null!=e&&(r[t]=e)},o.writeLercVersion=function(e,r,t){"lerc"===this.format&&this.layer.version>=10.5&&(r[t]=e)},o.combineRendererWithRenderingRule=function(){var e;const r=this.layer,{rasterInfo:t,renderingRule:o,renderer:i}=r;if(!i||!m.isSupportedRendererType(i))return o;return m.combineRenderingRules(m.convertRendererToRenderingRule(i,{rasterAttributeTable:t.attributeTable,pixelType:t.pixelType,dataType:t.dataType,bandProperties:null==(e=t.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:r.version<10.6,convertToRFT:!(null==o||!o.rasterFunctionDefinition)}),o)},o._addResampleRasterFunction=function(e){var r;if(!("vector-field"===(null==(r=this.layer.renderer)?void 0:r.type))||"Resample"===(null==e?void 0:e.functionName))return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;let o=new y({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return o=null!=e&&e.rasterFunctionDefinition?new y({rasterFunctionDefinition:m.convertRenderingRuleToRFT(o)}):o,m.combineRenderingRules(o,e)},r._createClass(t,[{key:"version",get:function(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1},set:function(e){this._set("version",e)}},{key:"mosaicRule",get:function(){const e=this.layer;let r=e.mosaicRule;const t=e.definitionExpression;return r?t&&t!==r.where&&(r=r.clone(),r.where=t):t&&(r=new u({where:t})),r}},{key:"renderingRule",get:function(){const e=this.layer;let r=e.renderingRule;const t=e.pixelFilter,o=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return r=this._addResampleRasterFunction(r),o&&!t&&(r=this.combineRendererWithRenderingRule()),r}}]),t}(o.JSONSupport),t.__decorate([p.property()],e.ExportImageServiceParameters.prototype,"layer",void 0),t.__decorate([p.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"adjustAspectRatio",void 0),t.__decorate([l.writer("adjustAspectRatio")],e.ExportImageServiceParameters.prototype,"writeAdjustAspectRatio",null),t.__decorate([p.property({json:{write:!0}}),i.aliasOf("layer.bandIds")],e.ExportImageServiceParameters.prototype,"bandIds",void 0),t.__decorate([p.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"compression",void 0),t.__decorate([p.property({json:{write:!0}}),i.aliasOf("layer.compressionQuality")],e.ExportImageServiceParameters.prototype,"compressionQuality",void 0),t.__decorate([l.writer("compressionQuality")],e.ExportImageServiceParameters.prototype,"writeCompressionQuality",null),t.__decorate([p.property({json:{write:!0}}),i.aliasOf("layer.compressionTolerance")],e.ExportImageServiceParameters.prototype,"compressionTolerance",void 0),t.__decorate([l.writer("compressionTolerance")],e.ExportImageServiceParameters.prototype,"writeCompressionTolerance",null),t.__decorate([p.property({json:{write:!0}}),i.aliasOf("layer.format")],e.ExportImageServiceParameters.prototype,"format",void 0),t.__decorate([p.property({type:String,json:{read:{reader:d.interpolationKebab.read},write:{writer:d.interpolationKebab.write}}}),i.aliasOf("layer.interpolation")],e.ExportImageServiceParameters.prototype,"interpolation",void 0),t.__decorate([p.property({json:{write:!0}}),i.aliasOf("layer.noData")],e.ExportImageServiceParameters.prototype,"noData",void 0),t.__decorate([p.property({type:String,json:{read:{reader:d.noDataInterpretationKebab.read},write:{writer:d.noDataInterpretationKebab.write}}}),i.aliasOf("layer.noDataInterpretation")],e.ExportImageServiceParameters.prototype,"noDataInterpretation",void 0),t.__decorate([p.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"pixelType",void 0),t.__decorate([p.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"lercVersion",void 0),t.__decorate([l.writer("lercVersion")],e.ExportImageServiceParameters.prototype,"writeLercVersion",null),t.__decorate([p.property({type:Number})],e.ExportImageServiceParameters.prototype,"version",null),t.__decorate([p.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"mosaicRule",null),t.__decorate([p.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"renderingRule",null),e.ExportImageServiceParameters=t.__decorate([c.subclass("esri.layers.mixins.ExportImageServiceParameters")],e.ExportImageServiceParameters),Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
