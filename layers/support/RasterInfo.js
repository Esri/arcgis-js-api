/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{isNone as o}from"../../core/maybe.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import s from"../../geometry/Extent.js";import n from"../../geometry/SpatialReference.js";import p from"./RasterStorageInfo.js";let a=class extends e{constructor(t){super(t),this.attributeTable=null,this.bandCount=null,this.colormap=null,this.extent=null,this.format=void 0,this.height=null,this.width=null,this.histograms=null,this.keyProperties={},this.multidimensionalInfo=null,this.noDataValue=null,this.pixelSize=null,this.pixelType=null,this.isPseudoSpatialReference=!1,this.spatialReference=null,this.statistics=null,this.storageInfo=null,this.transform=null}get dataType(){const t=this.keyProperties?.DataType?.toLowerCase()??"generic";return"stdtime"===t?"standard-time":t}get nativeExtent(){return this._get("nativeExtent")||this.extent}set nativeExtent(t){t&&this._set("nativeExtent",t)}get nativePixelSize(){if(o(this.transform)||!this.transform.affectsPixelSize)return this.pixelSize;const t=this.nativeExtent;return{x:t.width/this.width,y:t.height/this.height}}get hasMultidimensionalTranspose(){return!!this.storageInfo?.transposeInfo}};t([i({json:{write:!0}})],a.prototype,"attributeTable",void 0),t([i({json:{write:!0}})],a.prototype,"bandCount",void 0),t([i({json:{write:!0}})],a.prototype,"colormap",void 0),t([i({type:String,readOnly:!0})],a.prototype,"dataType",null),t([i({type:s,json:{write:!0}})],a.prototype,"extent",void 0),t([i({type:s,json:{write:!0}})],a.prototype,"nativeExtent",null),t([i({json:{write:!0}})],a.prototype,"nativePixelSize",null),t([i({json:{write:!0}})],a.prototype,"format",void 0),t([i({json:{write:!0}})],a.prototype,"height",void 0),t([i({json:{write:!0}})],a.prototype,"width",void 0),t([i({json:{write:!0}})],a.prototype,"hasMultidimensionalTranspose",null),t([i({json:{write:!0}})],a.prototype,"histograms",void 0),t([i({json:{write:!0}})],a.prototype,"keyProperties",void 0),t([i({json:{write:!0}})],a.prototype,"multidimensionalInfo",void 0),t([i({json:{write:!0}})],a.prototype,"noDataValue",void 0),t([i({json:{write:!0}})],a.prototype,"pixelSize",void 0),t([i({json:{write:!0}})],a.prototype,"pixelType",void 0),t([i()],a.prototype,"isPseudoSpatialReference",void 0),t([i({type:n,json:{write:!0}})],a.prototype,"spatialReference",void 0),t([i({json:{write:!0}})],a.prototype,"statistics",void 0),t([i({type:p,json:{write:!0}})],a.prototype,"storageInfo",void 0),t([i({json:{write:!0}})],a.prototype,"transform",void 0),a=t([r("esri.layers.support.RasterInfo")],a);const l=a;export{l as default};
