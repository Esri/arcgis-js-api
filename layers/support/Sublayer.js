/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/lang","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/utils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/Error","../../core/urlUtils","../../core/uuid","../../core/accessorSupport/PropertyOrigin","../../portal/support/resourceExtension","../../geometry/Extent","../../geometry","../../core/Collection","./fieldUtils","../../core/Identifiable","../../PopupTemplate","../../request","../../core/Loadable","../../symbols","../../core/MultiOriginJSONSupport","../../renderers/Renderer","../../renderers/ClassBreaksRenderer","../../renderers/UniqueValueRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/SimpleRenderer","../../renderers/support/types","../../renderers/support/jsonUtils","./Field","./FieldsIndex","./LabelClass","./FeatureType","./source/MapLayerSource","./source/DataLayerSource","../../support/popupUtils","../../tasks/support/Query","../../core/HandleOwner"],(function(e,r,t,i,o,a,n,l,s,p,y,u,d,c,f,h,b,g,m,_,S,I,v,w,L,D,O,P,x,F,E,j,k,M,T,N,V,C,q,A,U,J,R,$,B,Q){"use strict";function G(e){return Object.freeze({__proto__:null,default:e})}var H;function z(e){return e&&"esriSMS"===e.type}function W(e,r,t){var i;return{ignoreOrigin:!0,enabled:!!t&&("map-image"===(null==(i=t.layer)?void 0:i.type)&&(t.writeSublayerStructure||this.originIdOf(r)>=b.nameToId(t.origin)))}}function X(e,r,t){var i;return{enabled:!!t&&("tile"===(null==(i=t.layer)?void 0:i.type)&&this._isOverridden(r))}}function K(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function Y(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=b.nameToId(t.origin))}}const Z=a.getLogger("esri.layers.support.Sublayer");let ee=0;const re=new Set;re.add("layer"),re.add("parent"),re.add("loaded"),re.add("loadStatus"),re.add("loadError"),re.add("loadWarnings");let te=H=function(t){function i(e){var r;return(r=t.call(this,e)||this).capabilities=void 0,r.fields=null,r.fullExtent=null,r.globalIdField=null,r.legendEnabled=!0,r.objectIdField=null,r.popupEnabled=!0,r.popupTemplate=null,r.sourceJSON=null,r.title=null,r.typeIdField=null,r.types=null,r}r._inheritsLoose(i,t);var a=i.prototype;return a.load=async function(e){return this.addResolvingPromise((async()=>{var r;if(!this.layer&&!this.url)throw new c("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let t=null;if(!this.layer||this.originIdOf("url")>2||"data-layer"===(null==(r=this.source)?void 0:r.type)){t=(await L(this.url,{responseType:"json",query:{f:"json"},...e})).data}else{var i;let r=this.id;"map-layer"===(null==(i=this.source)?void 0:i.type)&&(r=this.source.mapLayerId),t=await this.layer.fetchSublayerInfo(r,e)}t&&(this.sourceJSON=t,this.read({layerDefinition:t},{origin:"service"}))})()),this},a.readCapabilities=function(e,r){const t=(e=(r=r.layerDefinition||r).capabilities||e)?e.toLowerCase().split(",").map((e=>e.trim())):[];return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:-1!==t.indexOf("query")}}},a.readGlobalIdFieldFromService=function(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeGlobalID"===t.type)return t.name},a.writeLabelingInfo=function(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})},a.readMinScale=function(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0},a.readMaxScale=function(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0},a.readObjectIdFieldFromService=function(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeOID"===t.type)return t.name},a.readOpacity=function(e,r){const t=r.layerDefinition;return 1-.01*(null!=t.transparency?t.transparency:t.drawingInfo.transparency)},a.writeOpacity=function(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}},a.writeParent=function(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=n.ensureInteger(this.parent.id):r.parentLayerId=-1},a.castSublayers=function(e){return n.ensureType(S.ofType(H),e)},a.writeSublayers=function(e,r,t){this.get("sublayers.length")&&(r[t]=this.sublayers.map((e=>e.id)).toArray().reverse())},a.readTypeIdField=function(e,r){const t=(r=r.layerDefinition||r).typeIdField;if(t){const e=I.getField(r.fields,t);if(e)return e.name}return null},a.writeVisible=function(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e},a.clone=function(){const{store:e}=l.getProperties(this),r=new H;return l.getProperties(r).store=e.clone(re),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r},a.createPopupTemplate=function(e){return $.createPopupTemplate(this,e)},a.createQuery=function(){return new B({returnGeometry:!0,where:this.definitionExpression||"1=1"})},a.createFeatureLayer=async function(){var r,t;if(this.hasOwnProperty("sublayers"))return null;const i=null==(r=this.layer)?void 0:r.parsedUrl,a=new(0,(await new Promise((function(r,t){e(["../FeatureLayer"],(function(e){r(G(e))}),t)}))).default)({url:i.path});return i&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source),null!=this.layer.refreshInterval&&(a.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(a.definitionExpression=this.definitionExpression),this.originIdOf("labelingInfo")>2&&(a.labelingInfo=o.clone(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(a.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(a.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(a.visible=this.visible),this.originIdOf("minScale")>0&&(a.minScale=this.minScale),this.originIdOf("maxScale")>0&&(a.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(a.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(a.popupTemplate=o.clone(this.popupTemplate)),this.originIdOf("renderer")>2&&(a.renderer=o.clone(this.renderer)),"data-layer"===(null==(t=this.source)?void 0:t.type)&&(a.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(a.title=this.title),"map-image"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(a.customParameters=this.layer.customParameters),"tile"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(a.customParameters=this.layer.customParameters),a},a.getFeatureType=function(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(null==i)return null;let o=null;return t.some((e=>{const{id:r}=e;return null!=r&&(r.toString()===i.toString()&&(o=e),!!o)})),o},a.getFieldDomain=function(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)},a.queryFeatures=function(r=this.createQuery(),t){return this.load().then((()=>{if(!this.get("capabilities.operations.supportsQuery"))throw new c("Sublayer.queryFeatures","this layer doesn't support queries.");return Promise.all([new Promise((function(r,t){e(["../../rest/query/operations/query"],r,t)})),new Promise((function(r,t){e(["../../tasks/support/FeatureSet"],(function(e){r(G(e))}),t)}))])})).then((([{executeQuery:e},{default:i}])=>e(this.url,B.from(r),this.layer?this.layer.spatialReference:null,{...t,query:{...this.layer.customParameters}}).then((e=>i.fromJSON(e.data))))).then((e=>(e&&e.features&&e.features.forEach((e=>{e.sourceLayer=this})),e)))},a.toExportImageJSON=function(){var e;const r={id:this.id,source:(null==(e=this.source)?void 0:e.toJSON())||{mapLayerId:this.id,type:"mapLayer"}};this.definitionExpression&&(r.definitionExpression=this.definitionExpression);const t=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,r)=>(e[r]=this.originIdOf(r),e)),{});if(Object.keys(t).some((e=>t[e]>2))){const e=r.drawingInfo={};t.renderer>2&&(e.renderer=this.renderer?this.renderer.toJSON():null),t.labelsVisible>2&&(e.showLabels=this.labelsVisible),this.labelsVisible&&t.labelingInfo>2&&(e.labelingInfo=this.labelingInfo?this.labelingInfo.map((e=>e.write({},{origin:"service",layer:this.layer}))):null,e.showLabels=!0),t.opacity>2&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return r},a._assignDefaultSymbolColors=function(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline&&e.outline.color?e.color=e.outline.color:e.color=[0,0,0,0])}))},a._forEachSimpleMarkerSymbols=function(e,r){if(e){const t="uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:[];for(const e of t)z(e.symbol)&&r(e.symbol);"symbol"in e&&z(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&z(e.defaultSymbol)&&r(e.defaultSymbol)}},a._setAndNotifyLayer=function(e,r){const t=this.layer,i=this._get(e);let o,a;switch(e){case"definitionExpression":o="supportsSublayerDefinitionExpression";case"minScale":case"maxScale":case"visible":o="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":o="supportsDynamicLayers",a="supportsModification"}const n=l.getProperties(this).getDefaultOrigin();if("service"!==n){if(o&&!1===this.get(`layer.capabilities.exportMap.${o}`))return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${o}'`);if(a&&!1===this.get(`capabilities.exportMap.${a}`))return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${a}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,r),"service"!==n&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")},a._handleSublayersChange=function(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.removeAll()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{const r=this.get("layer.capabilities.exportMap.supportsSublayersChanges");null==r||r||(Z.error(new c("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))},a._logLockedError=function(e,r){Z.error(new c("sublayer:locked",`Property '${e}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:r,sublayer:this,layer:this.layer}))},a._getLayerDomain=function(e){const r=this.fieldsIndex.get(e);return r?r.domain:null},r._createClass(i,[{key:"definitionExpression",set:function(e){this._setAndNotifyLayer("definitionExpression",e)}},{key:"fieldsIndex",get:function(){return new q(this.fields||[])}},{key:"id",get:function(){const e=this._get("id");return null==e?ee++:e},set:function(e){this._get("id")!==e&&(!1!==this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}},{key:"labelingInfo",set:function(e){this._setAndNotifyLayer("labelingInfo",e)}},{key:"labelsVisible",set:function(e){this._setAndNotifyLayer("labelsVisible",e)}},{key:"layer",set:function(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((r=>r.layer=e))}},{key:"listMode",set:function(e){this._set("listMode",e)}},{key:"minScale",set:function(e){this._setAndNotifyLayer("minScale",e)}},{key:"maxScale",set:function(e){this._setAndNotifyLayer("maxScale",e)}},{key:"opacity",set:function(e){this._setAndNotifyLayer("opacity",e)}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"renderer",set:function(e){if(e)for(const r of e.getSymbols())if(O.isSymbol3D(r)){Z.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}},{key:"source",get:function(){return this._get("source")||new J.MapLayerSource({mapLayerId:this.id})},set:function(e){this._setAndNotifyLayer("source",e)}},{key:"sublayers",set:function(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}},{key:"url",get:function(){var e,r;const t=null!=(e=null==(r=this.layer)?void 0:r.parsedUrl)?e:this._lastParsedUrl,i=this.source;if(!t)return null;if(this._lastParsedUrl=t,"map-layer"===(null==i?void 0:i.type))return`${t.path}/${i.mapLayerId}`;const o={layer:JSON.stringify({source:this.source})};return`${t.path}/dynamicLayer?${f.objectToQuery(o)}`},set:function(e){e?this._override("url",e):this._clearOverride("url")}},{key:"visible",set:function(e){this._setAndNotifyLayer("visible",e)}}]),i}(Q.HandleOwnerMixin(P.MultiOriginJSONMixin(v.IdentifiableMixin(D))));return te.test={isMapImageLayerOverridePolicy:e=>e===K||e===W,isTileImageLayerOverridePolicy:e=>e===X},t.__decorate([s.property({readOnly:!0})],te.prototype,"capabilities",void 0),t.__decorate([y.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],te.prototype,"readCapabilities",null),t.__decorate([s.property({type:String,value:null,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression",overridePolicy:W}}})],te.prototype,"definitionExpression",null),t.__decorate([s.property({type:[C],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],te.prototype,"fields",void 0),t.__decorate([s.property({readOnly:!0})],te.prototype,"fieldsIndex",null),t.__decorate([s.property({type:m,json:{read:{source:"layerDefinition.extent"}}})],te.prototype,"fullExtent",void 0),t.__decorate([s.property({type:String})],te.prototype,"globalIdField",void 0),t.__decorate([y.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],te.prototype,"readGlobalIdFieldFromService",null),t.__decorate([s.property({type:n.Integer,json:{write:{ignoreOrigin:!0}}})],te.prototype,"id",null),t.__decorate([s.property({value:null,type:[A],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:K}}})],te.prototype,"labelingInfo",null),t.__decorate([d.writer("labelingInfo")],te.prototype,"writeLabelingInfo",null),t.__decorate([s.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:K}}})],te.prototype,"labelsVisible",null),t.__decorate([s.property({value:null})],te.prototype,"layer",null),t.__decorate([s.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:Y}}})],te.prototype,"legendEnabled",void 0),t.__decorate([s.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],te.prototype,"listMode",null),t.__decorate([s.property({type:Number,value:0,json:{write:{overridePolicy:K}}})],te.prototype,"minScale",null),t.__decorate([y.reader("minScale",["minScale","layerDefinition.minScale"])],te.prototype,"readMinScale",null),t.__decorate([s.property({type:Number,value:0,json:{write:{overridePolicy:K}}})],te.prototype,"maxScale",null),t.__decorate([y.reader("maxScale",["maxScale","layerDefinition.maxScale"])],te.prototype,"readMaxScale",null),t.__decorate([s.property({type:String})],te.prototype,"objectIdField",void 0),t.__decorate([y.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],te.prototype,"readObjectIdFieldFromService",null),t.__decorate([s.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:K}}})],te.prototype,"opacity",null),t.__decorate([y.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],te.prototype,"readOpacity",null),t.__decorate([d.writer("opacity")],te.prototype,"writeOpacity",null),t.__decorate([s.property({json:{type:n.Integer,write:{target:"parentLayerId",allowNull:!0,overridePolicy:K}}})],te.prototype,"parent",void 0),t.__decorate([d.writer("parent")],te.prototype,"writeParent",null),t.__decorate([s.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:Y,writer(e,r,t){r[t]=!e}}}})],te.prototype,"popupEnabled",void 0),t.__decorate([s.property({type:w,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Y}}})],te.prototype,"popupTemplate",void 0),t.__decorate([s.property({readOnly:!0})],te.prototype,"defaultPopupTemplate",null),t.__decorate([s.property({types:N.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:K},origins:{"web-scene":{types:N.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:K}}}}})],te.prototype,"renderer",null),t.__decorate([s.property({types:{key:"type",base:null,typeMap:{"data-layer":R.DataLayerSource,"map-layer":J.MapLayerSource}},cast(e){if(e){if("mapLayerId"in e)return n.ensureClass(J.MapLayerSource,e);if("dataSource"in e)return n.ensureClass(R.DataLayerSource,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:K}}})],te.prototype,"source",null),t.__decorate([s.property()],te.prototype,"sourceJSON",void 0),t.__decorate([s.property({value:null,json:{type:[n.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:K}}})],te.prototype,"sublayers",null),t.__decorate([p.cast("sublayers")],te.prototype,"castSublayers",null),t.__decorate([d.writer("sublayers")],te.prototype,"writeSublayers",null),t.__decorate([s.property({type:String,json:{read:{source:"name"},write:{target:"name",allowNull:!0,overridePolicy:Y}}})],te.prototype,"title",void 0),t.__decorate([s.property({type:String})],te.prototype,"typeIdField",void 0),t.__decorate([y.reader("typeIdField",["layerDefinition.typeIdField"])],te.prototype,"readTypeIdField",null),t.__decorate([s.property({type:[U],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],te.prototype,"types",void 0),t.__decorate([s.property({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:X}}})],te.prototype,"url",null),t.__decorate([s.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:K}}})],te.prototype,"visible",null),t.__decorate([d.writer("visible")],te.prototype,"writeVisible",null),te=H=t.__decorate([u.subclass("esri.layers.support.Sublayer")],te),te}));
