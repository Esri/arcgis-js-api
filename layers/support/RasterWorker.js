/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../geometry/Extent","../../geometry","./PixelBlock","./rasterFormats/RasterCodec","./rasterFunctions/pixelUtils","../../renderers/support/RasterSymbolizer"],(function(e,t,r,o,s,i){"use strict";return function(){function t(){}var n=t.prototype;return n.decode=async function(e){const t=await o.decode(e.data,e.options);return t&&t.toJSON()},n.symbolize=function(t){t.pixelBlock=r.fromJSON(t.pixelBlock),t.extent=t.extent?e.fromJSON(t.extent):null;const o=this.symbolizer.symbolize(t);return Promise.resolve(o&&o.toJSON())},n.updateSymbolizer=async function(e){var t;this.symbolizer=i.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(t=this.symbolizer)?void 0:t.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)},n.stretch=function(e){const t=this.symbolizer.simpleStretch(r.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(t&&t.toJSON())},n.estimateStatisticsHistograms=function(e){const t=s.estimateStatisticsHistograms(r.fromJSON(e.srcPixelBlock));return Promise.resolve(t)},n.split=function(e){const t=s.split(r.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return t&&t.forEach(((e,r)=>{t.set(r,null==e?void 0:e.toJSON())})),Promise.resolve(t)},n.mosaicAndTransform=async function(e){const t=e.srcPixelBlocks.map((e=>e?new r(e):null)),o=s.mosaic(t,e.srcMosaicSize);if(!e.coefs)return o&&o.toJSON();const i=s.approximateTransform(o,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return i&&i.toJSON()},t}()}));
