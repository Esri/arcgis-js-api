/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{clone as e}from"../../core/lang.js";import t from"./RasterFunction.js";import{schema as n}from"./rasterFunctionUtils.js";import{getRFxArgColorRampValue as r,convertColorRampToColormap as o,getColorRampName as a,rgbaConvertTo32Bit as i}from"../../renderers/support/colorRampUtils.js";import{stretchTypeJSONDict as s}from"../../renderers/support/stretchRendererUtils.js";import u from"../../renderers/visualVariables/SizeVariable.js";const c={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},l={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},m=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function f(e){return m.has(e.type)}function p(t,n){if(!t||!n)return e(t||n);const r=e(t);if(n.rasterFunctionDefinition){const e=n.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),g(r.rasterFunctionDefinition.arguments,n)}else if("none"!==n.functionName.toLowerCase()){b(r.functionArguments).Raster=n}return r}function g(e,t){for(const n in e)"raster"===n.toLowerCase()&&("RasterFunctionVariable"===e[n].type?(e[n]=t.rasterFunctionDefinition,e[n].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[n].type&&g(e[n].arguments,t))}function d(t){const r=e(n[t.functionName+"Function"]),o=t.functionArguments;for(const e in o)"raster"===e.toLowerCase()?(r.arguments[e]=d(o[e]),r.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(r.arguments[e].value=N(o[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=o[e];return r}function h(e,t){switch(t=t||{},e.type){case"raster-stretch":return v(e,t);case"class-breaks":return T(e,t);case"unique-value":return A(e,t);case"raster-colormap":return F(e,t);case"vector-field":return y(e,t);case"raster-shaded-relief":return w(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function b(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?b(t.functionArguments):e}const R={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function y(e,n){const r=new t;r.functionName="VectorFieldRenderer";const{dataType:o,bandProperties:a}=n,i="vector-uv"===o;let s,c;a&&2===a.length&&(s=a.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),c=a.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==s&&null!==s||(s=0,c=1);const m="arithmetic"===e.rotationType?1:2,f="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new u,g={magnitudeBandID:s,directionBandID:c,isUVComponents:i,referenceSystem:m,massFlowAngleRepresentation:f,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:l[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return r.functionArguments=g,n.convertToRFT?new t({rasterFunctionDefinition:d(r)}):r}function w(e,n){const a=n.convertToRFT;if("elevation"!==n.dataType)return new t;const i=new t;i.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,u="none"===e.scalingType?1:3,c={HillshadeType:s,SlopeType:u,ZFactor:e.zFactor};return 0===s&&(c.Azimuth=e.azimuth,c.Altitude=e.altitude),3===u&&(c.PSPower=e.pixelSizePower,c.PSZFactor=e.pixelSizeFactor),i.functionArguments=c,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",a?c.ColorRamp=r(e.colorRamp):c.Colormap=o(e.colorRamp,256)),a?new t({rasterFunctionDefinition:d(i)}):i}function v(e,n){const i=n.convertToRFT,u=new t;u.functionName="Stretch";const c=R[s.toJSON(e.stretchType)],l="u8",m={StretchType:c,Statistics:x(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(m.Min=e.outputMin),null!=e.outputMax&&(m.Max=e.outputMax),c===R.standardDeviation?(m.NumberOfStandardDeviations=e.numberOfStandardDeviations,u.outputPixelType=l):c===R.percentClip?(m.MinPercent=e.minPercent,m.MaxPercent=e.maxPercent,u.outputPixelType=l):c===R.minMax?u.outputPixelType=l:c===R.sigmoid&&(m.SigmoidStrengthLevel=e.sigmoidStrengthLevel),u.functionArguments=m,u.variableName="Raster",e.colorRamp){const s=e.colorRamp,c=new t;if(i)c.functionArguments={ColorRamp:r(s)};else{const t=a(s);if(t)c.functionArguments={colorRamp:t};else if(!n.convertColorRampToColormap||"algorithmic"!==s.type&&"multipart"!==s.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),c.functionArguments={colorRamp:t}}else c.functionArguments={Colormap:o(s,256)}}return c.variableName="Raster",c.functionName="Colormap",c.functionArguments.Raster=u,i?new t({rasterFunctionDefinition:d(c)}):c}return i?new t({rasterFunctionDefinition:d(u)}):u}function T(e,n){const r=[],o=[],a=[],i=[],s=1e-6,{pixelType:u,rasterAttributeTable:c}=n,l=c&&c.features,m=C(c);if(l&&Array.isArray(l)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,n)=>{const r=t.symbol.color;let o;r.a&&l.forEach((a=>{o=a.attributes[e.field],(o>=t.minValue&&o<t.maxValue||n===e.classBreakInfos.length-1&&o>=t.minValue)&&i.push([a.attributes[m],r.r,r.g,r.b])}))}));const r=u?S(i,u):i,o=new t;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=r,o.variableName="Raster",n.convertToRFT?new t({rasterFunctionDefinition:d(o)}):o}e.classBreakInfos.forEach(((e,t)=>{const n=e.symbol&&e.symbol.color;n.a?(0===t?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),o.push(t),i.push([t,n.r,n.g,n.b])):a.push(e.minValue,e.maxValue)}));const f=u?S(i,u):i,p=new t;p.functionName="Remap",p.functionArguments={InputRanges:r,OutputValues:o,NoDataRanges:a},p.variableName="Raster";const g=new t;return g.functionName="Colormap",g.functionArguments={Colormap:f,Raster:p},n.convertToRFT?new t({rasterFunctionDefinition:d(g)}):g}function S(e,t){const n=c[String(t).toLowerCase()];return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function C(e){if(!e)return;const{fields:t}=e,n=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return n&&n.name}function A(e,n){const r=[],{pixelType:o,rasterAttributeTable:a}=n,i=a&&a.features,s=C(a),u=e.defaultSymbol?.color?.toRgb(),c=e.uniqueValueInfos;if(c)if(i){const t=new Map;c.forEach((e=>{const n=e.value,r=e.symbol.color?.toRgb();null!=n&&r&&t.set(String(n),r)}));const n=e.field;i.forEach((({attributes:e})=>{const o=String(e[n]),a=e[s];if(t.has(o)){const e=t.get(o);r.push([a,...e])}else u&&r.push([a,...u])}))}else for(let t=0;t<c.length;t++){const e=c[t],n=e.symbol.color,o=+e.value;if(n?.a){if(isNaN(o))return null;r.push([o,n.r,n.g,n.b])}}const l=o&&r.length>0?S(r,o):r,m=new t;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=l,m.variableName="Raster",n.convertToRFT?new t({rasterFunctionDefinition:d(m)}):m}function F(e,n){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:o}=n,a=o?S(r,o):r,i=new t;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=a,n.convertToRFT?new t({rasterFunctionDefinition:d(i)}):i}function x(e){const t=[];return e.forEach((e=>{const n=e;if(Array.isArray(n))t.push(n);else{if(null==n.min||null==n.max)return;const e=[n.min,n.max,n.avg||0,n.stddev||0];t.push(e)}})),t}function N(e){const t=[],n=[];return e.forEach((e=>{t.push(e[0]),n.push(i([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:n}}export{p as combineRenderingRules,h as convertRendererToRenderingRule,d as convertRenderingRuleToRFT,f as isSupportedRendererType,c as pixelTypeRanges};
