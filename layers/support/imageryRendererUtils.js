/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../core/lang","./RasterFunction","./rasterFunctionUtils","../../renderers/support/colorRampUtils","../../renderers/support/stretchRendererUtils","../../renderers/visualVariables/SizeVariable"],(function(e,n,t,r,o,a,i){"use strict";const s={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},u={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},l=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function c(e){return l.has(e.type)}function m(e,t){if(!e||!t)return n.clone(e||t);const r=n.clone(e);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),p(r.rasterFunctionDefinition.arguments,t)}else if("none"!==t.functionName.toLowerCase()){g(r.functionArguments).Raster=t}return r}function p(e,n){for(const t in e)"raster"===t.toLowerCase()&&("RasterFunctionVariable"===e[t].type?(e[t]=n.rasterFunctionDefinition,e[t].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[t].type&&p(e[t].arguments,n))}function f(e){const t=n.clone(r.schema[e.functionName+"Function"]),o=e.functionArguments;for(const n in o)"raster"===n.toLowerCase()?(t.arguments[n]=f(o[n]),t.arguments[n].type="RasterFunctionTemplate"):"colormap"===n.toLowerCase()?(t.arguments[n].value=x(o[n]),t.arguments.ColorSchemeType.value=0):t.arguments[n].value=o[n];return t}function d(e,n){switch(n=n||{},e.type){case"raster-stretch":return v(e,n);case"class-breaks":return y(e,n);case"unique-value":return C(e,n);case"raster-colormap":return S(e,n);case"vector-field":return h(e,n);case"raster-shaded-relief":return b(e,n);case"flow":throw new Error("Unsupported rendering rule.")}}function g(e){const n=e.Raster;return n&&"esri.layers.support.RasterFunction"===n.declaredClass?g(n.functionArguments):e}const R={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function h(e,n){const r=new t;r.functionName="VectorFieldRenderer";const{dataType:o,bandProperties:a}=n,s="vector-uv"===o;let l,c;a&&2===a.length&&(l=a.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),c=a.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==l&&null!==l||(l=0,c=1);const m="arithmetic"===e.rotationType?1:2,p="flow-from"===e.flowRepresentation?0:1,d=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new i,g={magnitudeBandID:l,directionBandID:c,isUVComponents:s,referenceSystem:m,massFlowAngleRepresentation:p,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:u[e.style.toLowerCase().replace("-","_")],minimumMagnitude:d.minDataValue,maximumMagnitude:d.maxDataValue,minimumSymbolSize:d.minSize,maximumSymbolSize:d.maxSize};return r.functionArguments=g,n.convertToRFT?new t({rasterFunctionDefinition:f(r)}):r}function b(e,n){const r=n.convertToRFT;if("elevation"!==n.dataType)return new t;const a=new t;a.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,u={HillshadeType:i,SlopeType:s,ZFactor:e.zFactor};return 0===i&&(u.Azimuth=e.azimuth,u.Altitude=e.altitude),3===s&&(u.PSPower=e.pixelSizePower,u.PSZFactor=e.pixelSizeFactor),a.functionArguments=u,a.variableName="Raster",e.colorRamp&&(a.functionName="ShadedRelief",r?u.ColorRamp=o.getRFxArgColorRampValue(e.colorRamp):u.Colormap=o.convertColorRampToColormap(e.colorRamp,256)),r?new t({rasterFunctionDefinition:f(a)}):a}function v(e,n){const r=n.convertToRFT,i=new t;i.functionName="Stretch";const s=R[a.stretchTypeJSONDict.toJSON(e.stretchType)],u="u8",l={StretchType:s,Statistics:F(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),s===R.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=u):s===R.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,i.outputPixelType=u):s===R.minMax?i.outputPixelType=u:s===R.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=l,i.variableName="Raster",e.colorRamp){const a=e.colorRamp,s=new t;if(r)s.functionArguments={ColorRamp:o.getRFxArgColorRampValue(a)};else{const t=o.getColorRampName(a);t?s.functionArguments={colorRamp:t}:!n.convertColorRampToColormap||"algorithmic"!==a.type&&"multipart"!==a.type?s.functionArguments={colorRamp:e.colorRamp.toJSON()}:s.functionArguments={Colormap:o.convertColorRampToColormap(a,256)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=i,r?new t({rasterFunctionDefinition:f(s)}):s}return r?new t({rasterFunctionDefinition:f(i)}):i}function y(e,n){const r=[],o=[],a=[],i=[],s=1e-6,{pixelType:u,rasterAttributeTable:l}=n,c=l&&l.features,m=w(l);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach(((n,t)=>{const r=n.symbol.color;let o;r.a&&c.forEach((a=>{o=a.attributes[e.field],(o>=n.minValue&&o<n.maxValue||t===e.classBreakInfos.length-1&&o>=n.minValue)&&i.push([a.attributes[m],r.r,r.g,r.b])}))}));const r=u?T(i,u):i,o=new t;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=r,o.variableName="Raster",n.convertToRFT?new t({rasterFunctionDefinition:f(o)}):o}e.classBreakInfos.forEach(((e,n)=>{const t=e.symbol&&e.symbol.color;t.a?(0===n?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),o.push(n),i.push([n,t.r,t.g,t.b])):a.push(e.minValue,e.maxValue)}));const p=u?T(i,u):i,d=new t;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:o,NoDataRanges:a},d.variableName="Raster";const g=new t;return g.functionName="Colormap",g.functionArguments={Colormap:p,Raster:d},n.convertToRFT?new t({rasterFunctionDefinition:f(g)}):g}function T(e,n){const t=s[String(n).toLowerCase()];return t&&e.push([Math.floor(t[0]-1),0,0,0],[Math.ceil(t[1]+1),0,0,0]),e}function w(e){if(!e)return;const{fields:n}=e,t=n&&n.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return t&&t.name}function C(e,n){var r,o;const a=[],{pixelType:i,rasterAttributeTable:s}=n,u=s&&s.features,l=w(s),c=null==(r=e.defaultSymbol)||null==(o=r.color)?void 0:o.toRgb(),m=e.uniqueValueInfos;if(m)if(u){const n=new Map;m.forEach((e=>{var t;const r=e.value,o=null==(t=e.symbol.color)?void 0:t.toRgb();null!=r&&o&&n.set(String(r),o)}));const t=e.field;u.forEach((({attributes:e})=>{const r=String(e[t]),o=e[l];if(n.has(r)){const e=n.get(r);a.push([o,...e])}else c&&a.push([o,...c])}))}else for(let t=0;t<m.length;t++){const e=m[t],n=e.symbol.color,r=+e.value;if(null!=n&&n.a){if(isNaN(r))return null;a.push([r,n.r,n.g,n.b])}}const p=i&&a.length>0?T(a,i):a,d=new t;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=p,d.variableName="Raster",n.convertToRFT?new t({rasterFunctionDefinition:f(d)}):d}function S(e,n){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:o}=n,a=o?T(r,o):r,i=new t;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=a,n.convertToRFT?new t({rasterFunctionDefinition:f(i)}):i}function F(e){const n=[];return e.forEach((e=>{const t=e;if(Array.isArray(t))n.push(t);else{if(null==t.min||null==t.max)return;const e=[t.min,t.max,t.avg||0,t.stddev||0];n.push(e)}})),n}function x(e){const n=[],t=[];return e.forEach((e=>{n.push(e[0]),t.push(o.rgbaConvertTo32Bit([...e.slice(1),255]))})),{type:"RasterColormap",values:n,colors:t}}e.combineRenderingRules=m,e.convertRendererToRenderingRule=d,e.convertRenderingRuleToRFT=f,e.isSupportedRendererType=c,e.pixelTypeRanges=s,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
