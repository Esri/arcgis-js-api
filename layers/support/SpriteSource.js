/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../core/Logger","../../core/Error","../../core/urlUtils","../../core/promiseUtils","../../request"],(function(t,e,i,s,a,r){"use strict";const h=e.getLogger("esri.layers.support.SpriteSource");return function(){function e(t,e,i,s){this.baseURL=t,this.devicePixelRatio=e,this.maxTextureSize=i,this._spriteImageFormat=s,this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded"}var o=e.prototype;return o.getSpriteInfo=function(t){return this._spritesData[t]},o.load=async function(t){if(this.baseURL){this.loadStatus="loading";try{await this._loadSprites(t),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"},o._loadSprites=function(t){this._isRetina=this.devicePixelRatio>1.15;const e=s.urlToObject(this.baseURL),o=e.query?"?"+s.objectToQuery(e.query):"",n=this._isRetina?"@2x":"",l=`${e.path}${n}.${this._spriteImageFormat}${o}`,u=`${e.path}${n}.json${o}`;return a.all([r(u,t),r(l,{responseType:"image",...t})]).then((([t,s])=>{const r=Object.keys(t.data);if(!r||0===r.length||1===r.length&&"_ssl"===r[0]||!s||!s.data)return this._spritesData=this.image=null,this.width=this.height=0,a.resolve(null);this._spritesData=t.data;const o=s.data,n=Math.max(this.maxTextureSize,4096);if(o.width>n||o.height>n){const t=`Sprite resource for style ${e.path} is bigger than the maximum allowed of ${n} pixels}`;throw h.error(t),new i("SpriteSource",t)}this.width=o.width,this.height=o.height;const l=document.createElement("canvas"),u=l.getContext("2d");l.width=o.width,l.height=o.height,u.drawImage(o,0,0,o.width,o.height);const c=u.getImageData(0,0,o.width,o.height),d=new Uint8Array(c.data);let g;for(let t=0;t<d.length;t+=4)g=d[t+3]/255,d[t]=d[t]*g,d[t+1]=d[t+1]*g,d[t+2]=d[t+2]*g;this.image=d}))},t._createClass(e,[{key:"spriteNames",get:function(){const t=[];for(const e in this._spritesData)t.push(e);return t.sort(),t}}]),e}()}));
