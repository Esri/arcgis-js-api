/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import t from"../../request.js";import e from"../../core/Error.js";import i from"../../core/Logger.js";import{urlToObject as s,objectToQuery as a}from"../../core/urlUtils.js";const h=i.getLogger("esri.layers.support.SpriteSource"),r=1.15;class o{constructor(t,e,i,s){this.baseURL=t,this.devicePixelRatio=e,this.maxTextureSize=i,this._spriteImageFormat=s,this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded"}get spriteNames(){const t=[];for(const e in this._spritesData)t.push(e);return t.sort(),t}getSpriteInfo(t){return this._spritesData[t]}async load(t){if(this.baseURL){this.loadStatus="loading";try{await this._loadSprites(t),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"}_loadSprites(i){this._isRetina=this.devicePixelRatio>r;const o=s(this.baseURL),l=o.query?"?"+a(o.query):"",n=this._isRetina?"@2x":"",d=`${o.path}${n}.${this._spriteImageFormat}${l}`,g=`${o.path}${n}.json${l}`;return Promise.all([t(g,i),t(d,{responseType:"image",...i})]).then((([t,i])=>{const s=Object.keys(t.data);if(!s||0===s.length||1===s.length&&"_ssl"===s[0]||!i||!i.data)return this._spritesData=this.image=null,this.width=this.height=0,null;this._spritesData=t.data;const a=i.data,r=Math.max(this.maxTextureSize,4096);if(a.width>r||a.height>r){const t=`Sprite resource for style ${o.path} is bigger than the maximum allowed of ${r} pixels}`;throw h.error(t),new e("SpriteSource",t)}this.width=a.width,this.height=a.height;const l=document.createElement("canvas"),n=l.getContext("2d");l.width=a.width,l.height=a.height,n.drawImage(a,0,0,a.width,a.height);const d=n.getImageData(0,0,a.width,a.height),g=new Uint8Array(d.data);let u;for(let e=0;e<g.length;e+=4)u=g[e+3]/255,g[e]=g[e]*u,g[e+1]=g[e+1]*u,g[e+2]=g[e+2]*u;this.image=g}))}}export{o as default};
