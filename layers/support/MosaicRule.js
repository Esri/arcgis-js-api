/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{strict as t}from"../../core/jsonMap.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{clone as r}from"../../core/lang.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import{cast as s}from"../../core/accessorSupport/decorators/cast.js";import{reader as n}from"../../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{Integer as c}from"../../core/accessorSupport/ensureType.js";import l from"../../geometry/Point.js";import p from"./DimensionalDefinition.js";import d from"./RasterFunction.js";var u;const m=t()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),h=t()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function M(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return h.fromJSON(t)}let w=u=class extends o{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return M(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const o=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=o||(r?m.toJSON(r):null);return m.fromJSON(i)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new u({ascending:this.ascending,itemRenderingRule:r(this.itemRenderingRule),lockRasterIds:r(this.lockRasterIds),method:this.method,multidimensionalDefinition:r(this.multidimensionalDefinition),objectIds:r(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:r(this.viewpoint),where:this.where})}};e([i({type:Boolean,json:{write:!0}})],w.prototype,"ascending",void 0),e([n("ascending",["ascending","sortAscending"])],w.prototype,"readAscending",null),e([i({type:d,json:{write:!0}})],w.prototype,"itemRenderingRule",void 0),e([i({type:[c],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],w.prototype,"lockRasterIds",void 0),e([i({type:String,json:{type:h.jsonValues,write:{target:"mosaicMethod",writer:h.write}}})],w.prototype,"method",void 0),e([n("method",["mosaicMethod","defaultMosaicMethod"])],w.prototype,"readMethod",null),e([i({type:[p],json:{write:!0}})],w.prototype,"multidimensionalDefinition",void 0),e([i({type:[c],json:{name:"fids",write:!0}})],w.prototype,"objectIds",void 0),e([i({json:{type:m.jsonValues,read:{reader:m.read},write:{target:"mosaicOperation",writer:m.write}}})],w.prototype,"operation",void 0),e([n("operation",["mosaicOperation","mosaicOperator"])],w.prototype,"readOperation",null),e([i({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],w.prototype,"sortField",void 0),e([i({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],w.prototype,"sortValue",void 0),e([s("sortValue")],w.prototype,"castSortValue",null),e([i({type:l,json:{write:!0}})],w.prototype,"viewpoint",void 0),e([i({type:String,json:{write:!0}})],w.prototype,"where",void 0),w=u=e([a("esri.layers.support.MosaicRule")],w);const y=w;export{y as default};
