/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import r from"../../core/Collection.js";import t from"../../core/Evented.js";import{JSONSupportMixin as s}from"../../core/JSONSupport.js";import o from"../../core/Loadable.js";import{isSome as i}from"../../core/maybe.js";import{whenOnce as l}from"../../core/reactiveUtils.js";import{stripHTML as a}from"../../core/string.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{cast as u}from"../../core/accessorSupport/decorators/cast.js";import{reader as p}from"../../core/accessorSupport/decorators/reader.js";import{subclass as y}from"../../core/accessorSupport/decorators/subclass.js";import{ensureType as h}from"../../core/accessorSupport/ensureType.js";import{computeExtent as c,sublayersFromJSON as m,fetchService as d,parseKML as b}from"./kmlUtils.js";import f from"../../geometry/Extent.js";var v;let j=v=class extends(t.EventedMixin(s(o))){constructor(){super(...arguments),this._sublayersHandles=null,this.description=null,this.id=null,this.networkLink=null,this.title=null,this.sourceJSON=null,this.fullExtent=null}initialize(){l((()=>this.networkLink)).then((()=>l((()=>!0===this.visible)))).then((()=>this.load()))}load(e){if(!this.networkLink)return;if(this.networkLink.viewFormat)return;const t=i(e)?e.signal:null,s=this._fetchService(this._get("networkLink").href,t).then((e=>{const t=c(e.sublayers);this.fullExtent=f.fromJSON(t),this.sourceJSON=e;const s=h(r.ofType(v),m(v,e));this.sublayers?this.sublayers.addMany(s):this.sublayers=s,this.layer.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")}));return this.addResolvingPromise(s),Promise.resolve(this)}set sublayers(e){const r=this._get("sublayers");r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this._sublayersHandles.forEach((e=>e.remove())),this._sublayersHandles=null),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this._sublayersHandles=[e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))]),this._set("sublayers",e)}castSublayers(e){return h(r.ofType(v),e)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,r){return!!r.visibility}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((r=>r.layer=e))}_fetchService(e,r){return d(e,this.layer.outSpatialReference,this.layer.refreshInterval,r).then((e=>b(e.data)))}};e([n()],j.prototype,"description",void 0),e([n()],j.prototype,"id",void 0),e([n({readOnly:!0,value:null})],j.prototype,"networkLink",void 0),e([n({json:{write:{allowNull:!0}}})],j.prototype,"parent",void 0),e([n({value:null,json:{write:{allowNull:!0}}})],j.prototype,"sublayers",null),e([u("sublayers")],j.prototype,"castSublayers",null),e([n({value:null,json:{read:{source:"name",reader:e=>a(e)}}})],j.prototype,"title",void 0),e([n({value:!0})],j.prototype,"visible",null),e([p("visible",["visibility"])],j.prototype,"readVisible",null),e([n()],j.prototype,"sourceJSON",void 0),e([n({value:null})],j.prototype,"layer",null),e([n({type:f})],j.prototype,"fullExtent",void 0),j=v=e([y("esri.layers.support.KMLSublayer")],j);const S=j;export{S as default};
