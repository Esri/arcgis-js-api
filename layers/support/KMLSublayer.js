/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../core/Collection","../../core/Evented","../../core/JSONSupport","../../core/Loadable","../../core/maybe","../../core/reactiveUtils","../../core/string","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","./kmlUtils","../../geometry/Extent"],(function(e,r,t,o,s,i,l,n,a,u,c,p,y,d,h,v,f){"use strict";var _;let b=_=function(r){function t(...t){var o;return(o=r.call(this,...t)||this).description=null,o.id=null,o.networkLink=null,o.sublayers=null,o.title=null,o.sourceJSON=null,o.fullExtent=null,o.addHandles([a.on((()=>o.sublayers),"after-add",(({item:r})=>{r.parent=e._assertThisInitialized(o),r.layer=o.layer}),a.sync),a.on((()=>o.sublayers),"after-remove",(({item:e})=>{e.layer=e.parent=null}),a.sync),a.watch((()=>o.sublayers),((r,t)=>{if(t)for(const e of t)e.layer=e.parent=null;if(r)for(const s of r)s.parent=e._assertThisInitialized(o),s.layer=o.layer}),a.sync)]),o}e._inheritsLoose(t,r);var s=t.prototype;return s.initialize=function(){a.whenOnce((()=>this.networkLink)).then((()=>a.whenOnce((()=>!0===this.visible)))).then((()=>this.load()))},s.load=function(e){if(!this.networkLink)return;if(this.networkLink.viewFormat)return;const r=n.isSome(e)?e.signal:null,t=this._fetchService(this._get("networkLink")?.href??"",r).then((e=>{const r=v.computeExtent(e.sublayers);this.fullExtent=f.fromJSON(r),this.sourceJSON=e;const t=p.ensureType(o.ofType(_),v.sublayersFromJSON(_,e));this.sublayers?this.sublayers.addMany(t):this.sublayers=t,this.layer?.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")}));return this.addResolvingPromise(t),Promise.resolve(this)},s.readVisible=function(e,r){return!!r.visibility},s._fetchService=function(e,r){return v.fetchService(e,this.layer.outSpatialReference,this.layer.refreshInterval,r).then((e=>v.parseKML(e.data)))},e._createClass(t,[{key:"visible",get:function(){return this._get("visible")},set:function(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}},{key:"layer",set:function(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((r=>r.layer=e))}}]),t}(s.EventedMixin(i.JSONSupportMixin(l)));r.__decorate([c.property()],b.prototype,"description",void 0),r.__decorate([c.property()],b.prototype,"id",void 0),r.__decorate([c.property({readOnly:!0,value:null})],b.prototype,"networkLink",void 0),r.__decorate([c.property({json:{write:{allowNull:!0}}})],b.prototype,"parent",void 0),r.__decorate([c.property({type:o.ofType(_),json:{write:{allowNull:!0}}})],b.prototype,"sublayers",void 0),r.__decorate([c.property({value:null,json:{read:{source:"name",reader:e=>u.stripHTML(e)}}})],b.prototype,"title",void 0),r.__decorate([c.property({value:!0})],b.prototype,"visible",null),r.__decorate([d.reader("visible",["visibility"])],b.prototype,"readVisible",null),r.__decorate([c.property()],b.prototype,"sourceJSON",void 0),r.__decorate([c.property({value:null})],b.prototype,"layer",null),r.__decorate([c.property({type:f})],b.prototype,"fullExtent",void 0),b=_=r.__decorate([h.subclass("esri.layers.support.KMLSublayer")],b);return b}));
