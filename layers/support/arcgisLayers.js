/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../request.js";import r from"../../core/Error.js";import{isNone as a,isSome as t}from"../../core/maybe.js";import{getFilename as s,urlToObject as n}from"../../core/urlUtils.js";import{parse as l,parseNonStandardSublayerUrl as o}from"./arcgisLayerUrl.js";import{layerLookupMap as u}from"./lazyLayerLoader.js";async function y(e){const r=e.properties?.customParameters,a=await f(e.url,r),t={...e.properties,url:e.url};if(!a.sublayerIds)return null!=a.layerOrTableId&&(t.layerId=a.layerOrTableId,t.sourceJSON=a.sourceJSON),new a.Constructor(t);const s=new(0,(await import("../GroupLayer.js")).default)({title:a.parsedUrl.title});return c(s,a,t),s}function i(e,r){return e?e.find((e=>e.id===r)):null}function c(e,r,a){function s(e,s){const n={...a,layerId:e,sublayerTitleMode:"service-name"};return t(s)&&(n.sourceJSON=s),new r.Constructor(n)}r.sublayerIds.forEach((a=>{const t=s(a,i(r.sublayerInfos,a));e.add(t)})),r.tableIds.forEach((a=>{const t=s(a,i(r.tableInfos,a));e.tables.add(t)}))}async function f(e,t){let s=l(e);if(a(s)&&(s=await d(e,t)),a(s))throw new r("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:n,sublayer:o}=s;let u;const y={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(n){case"MapServer":u=null!=o?"FeatureLayer":w(e,t).then((e=>e?"TileLayer":"MapImageLayer"));break;case"ImageServer":u=h(e,{customParameters:t}).then((e=>{const r=e.tileInfo&&e.tileInfo.format;return e.tileInfo?"LERC"!==r?.toUpperCase()||e.cacheType&&"elevation"!==e.cacheType.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer"}));break;case"SceneServer":u=h(s.url.path,{customParameters:t}).then((e=>{if(e){if("Voxel"===e?.layerType)return"VoxelLayer";if(e?.layers&&Array.isArray(e.layers)&&e.layers.length>0){const r={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"},a=e.layers[0]?.layerType;if(null!=r[a])return r[a]}}return"SceneLayer"}));break;default:u=y[n]}const i={FeatureLayer:!0,SceneLayer:!0},c="FeatureServer"===n,f={parsedUrl:s,Constructor:null,layerOrTableId:c?o:null,sublayerIds:null,tableIds:null},m=await u;if(i[m]&&null==o){const r=await p(e,n,t);c&&(f.sublayerInfos=r.layerInfos,f.tableInfos=r.tableInfos);1!==r.layerIds.length+r.tableIds.length?(f.sublayerIds=r.layerIds,f.tableIds=r.tableIds):c&&(f.layerOrTableId=r.layerIds[0]??r.tableIds[0],f.sourceJSON=r.layerInfos[0]??r.tableInfos[0])}return f.Constructor=await S(m),f}async function d(e,r){const a=await h(e,{customParameters:r});let l=null,u=null;const y=a.type;if("Feature Layer"===y||"Table"===y?(l="FeatureServer",u=a.id):"indexedVector"===y?l="VectorTileServer":a.hasOwnProperty("mapName")?l="MapServer":a.hasOwnProperty("bandCount")&&a.hasOwnProperty("pixelSizeX")?l="ImageServer":a.hasOwnProperty("maxRecordCount")&&a.hasOwnProperty("allowGeometryUpdates")?l="FeatureServer":a.hasOwnProperty("streamUrls")?l="StreamServer":m(a)?(l="SceneServer",u=a.id):a.hasOwnProperty("layers")&&m(a.layers?.[0])&&(l="SceneServer"),!l)return null;const i=null!=u?o(e):null;return{title:t(i)&&a.name||s(e),serverType:l,sublayer:u,url:{path:t(i)?i.serviceUrl:n(e).path}}}function m(e){return e?.hasOwnProperty("store")&&e.hasOwnProperty("id")&&"number"==typeof e.id}async function p(e,r,a){let t,s=!1;if("FeatureServer"===r){const r=await b(e,{customParameters:a});s=!!r.layersJSON,t=r.layersJSON||r.serviceJSON}else t=await h(e,{customParameters:a});const n=t?.layers,l=t?.tables;return{layerIds:n?.map((e=>e.id)).reverse()||[],tableIds:l?.map((e=>e.id)).reverse()||[],layerInfos:s?n:[],tableInfos:s?l:[]}}function I(e){return!e.type||"Feature Layer"===e.type}async function b(e,r){let a=await h(e,r);a=a||{},a.layers=a.layers?.filter(I)||[];const t={serviceJSON:a};if(a.currentVersion<10.5)return t;const s=await h(e+"/layers",r);return t.layersJSON={layers:s?.layers?.filter(I)||[],tables:s?.tables||[]},t}async function S(e){return(0,u[e])()}async function w(e,r){return(await h(e,{customParameters:r})).tileInfo}async function h(r,a){return(await e(r,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}})).data}export{b as fetchFeatureService,y as fromUrl};
