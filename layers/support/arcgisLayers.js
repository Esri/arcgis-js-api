/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","exports","../../chunks/_rollupPluginBabelHelpers","../../core/Error","../../core/maybe","../../core/urlUtils","./arcgisLayerUrl","./fetchService","./layerUtils","./lazyLayerLoader","../../support/requestPresets"],(function(e,r,t,a,n,l,s,o,u,c,i){"use strict";const y=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),p={FeatureLayer:!0,SceneLayer:!0};function d(e){return f.apply(this,arguments)}function f(){return(f=t._asyncToGenerator((function*(r){const t=r.properties?.customParameters,a=yield I(r.url,t),n={...r.properties,url:r.url};if(!a.sublayerIds)return null!=a.layerOrTableId&&(n.layerId=a.layerOrTableId,n.sourceJSON=a.sourceJSON),new a.Constructor(n);const l=new(0,(yield new Promise(((r,t)=>e(["../GroupLayer"],(e=>r(y(e))),t)))).default)({title:a.parsedUrl.title});return m(l,a,n),l}))).apply(this,arguments)}function S(e,r){return e?e.find((e=>e.id===r)):null}function m(e,r,t){function a(e,a){const l={...t,layerId:e,sublayerTitleMode:"service-name"};return n.isSome(a)&&(l.sourceJSON=a),new r.Constructor(l)}r.sublayerIds.forEach((t=>{const n=a(t,S(r.sublayerInfos,t));e.add(n)})),r.tableIds.forEach((t=>{const n=a(t,S(r.tableInfos,t));e.tables.add(n)}))}function I(e,r){return b.apply(this,arguments)}function b(){return(b=t._asyncToGenerator((function*(e,r){let t=s.parse(e);if(n.isNone(t)&&(t=yield h(e,r)),n.isNone(t))throw new a("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:l,sublayer:o}=t;let c;const y={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(l){case"MapServer":if(null!=o)c="FeatureLayer";else{c=(yield N(e,r))?"TileLayer":"MapImageLayer"}break;case"ImageServer":{const t=yield i.fetchArcGISServiceJSON(e,{customParameters:r}),{tileInfo:a,cacheType:n}=t;c=a?"LERC"!==a?.format?.toUpperCase()||n&&"elevation"!==n.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const e=yield i.fetchArcGISServiceJSON(t.url.path,{customParameters:r});if(c="SceneLayer",e){const r=e?.layers;if("Voxel"===e?.layerType)c="VoxelLayer";else if(r?.length){const e=r[0]?.layerType;null!=e&&null!=u.sceneServiceLayerTypeToClassName[e]&&(c=u.sceneServiceLayerTypeToClassName[e])}}break}default:c=y[l]}const d="FeatureServer"===l,f={parsedUrl:t,Constructor:null,layerOrTableId:d?o:void 0,sublayerIds:null,tableIds:null};if(p[c]&&null==o){const t=yield O(e,l,r);d&&(f.sublayerInfos=t.layerInfos,f.tableInfos=t.tableInfos);1!==t.layerIds.length+t.tableIds.length?(f.sublayerIds=t.layerIds,f.tableIds=t.tableIds):d&&(f.layerOrTableId=t.layerIds[0]??t.tableIds[0],f.sourceJSON=t.layerInfos?.[0]??t.tableInfos?.[0])}return f.Constructor=yield P(c),f}))).apply(this,arguments)}function h(e,r){return v.apply(this,arguments)}function v(){return(v=t._asyncToGenerator((function*(e,r){const t=yield i.fetchArcGISServiceJSON(e,{customParameters:r});let a=null,o=null;const u=t.type;if("Feature Layer"===u||"Table"===u?(a="FeatureServer",o=t.id??null):"indexedVector"===u?a="VectorTileServer":t.hasOwnProperty("mapName")?a="MapServer":t.hasOwnProperty("bandCount")&&t.hasOwnProperty("pixelSizeX")?a="ImageServer":t.hasOwnProperty("maxRecordCount")&&t.hasOwnProperty("allowGeometryUpdates")?a="FeatureServer":t.hasOwnProperty("streamUrls")?a="StreamServer":T(t)?(a="SceneServer",o=t.id):t.hasOwnProperty("layers")&&T(t.layers?.[0])&&(a="SceneServer"),!a)return null;const c=null!=o?s.parseNonStandardSublayerUrl(e):null;return{title:n.isSome(c)&&t.name||l.getFilename(e),serverType:a,sublayer:o,url:{path:n.isSome(c)?c.serviceUrl:l.urlToObject(e).path}}}))).apply(this,arguments)}function T(e){return null!=e&&e.hasOwnProperty("store")&&e.hasOwnProperty("id")&&"number"==typeof e.id}function O(e,r,t){return L.apply(this,arguments)}function L(){return(L=t._asyncToGenerator((function*(e,r,t){let a,n=!1;if("FeatureServer"===r){const r=yield o.fetchFeatureService(e,{customParameters:t});n=!!r.layersJSON,a=r.layersJSON||r.serviceJSON}else a=yield i.fetchArcGISServiceJSON(e,{customParameters:t});const l=a?.layers,s=a?.tables;return{layerIds:l?.map((e=>e.id)).reverse()||[],tableIds:s?.map((e=>e.id)).reverse()||[],layerInfos:n?l:[],tableInfos:n?s:[]}}))).apply(this,arguments)}function P(e){return w.apply(this,arguments)}function w(){return(w=t._asyncToGenerator((function*(e){return(0,c.layerLookupMap[e])()}))).apply(this,arguments)}function N(e,r){return g.apply(this,arguments)}function g(){return(g=t._asyncToGenerator((function*(e,r){return(yield i.fetchArcGISServiceJSON(e,{customParameters:r})).tileInfo}))).apply(this,arguments)}r.fromUrl=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
