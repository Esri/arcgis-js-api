/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../request","../../core/Accessor","../../core/byteSizeEstimations","../../core/Error","../../core/HandleOwner","../../core/Logger","../../core/LRUCache","../../core/PooledArray","../../core/promiseUtils","../../core/reactiveUtils","../../core/scheduling","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/subclass","./Tilemap"],(function(e,t,i,r,l,a,n,s,o,c,h,p,u,m,v,f,y,_,d,b,T){"use strict";var g;const w=o.getLogger("esri.layers.support.TilemapCache");e.TilemapCache=g=function(e){function i(t){var i;return(i=e.call(this,t)||this)._pendingTilemapRequests={},i._availableLevels={},i.levels=5,i.cacheByteSize=2*a.ByteSizeUnit.MEGABYTES,i.request=r,i._prefetchingEnabled=!0,i}t._inheritsLoose(i,e);var l=i.prototype;return l.initialize=function(){this._tilemapCache=new c(this.cacheByteSize),this.handles.add([this.watch(["layer.parsedUrl","layer.tileServers?","layer.apiKey?","layer.customParameters?"],(()=>this._initializeTilemapDefinition())),u.watch((()=>{var e,t;return null==(e=this.layer)||null==(t=e.tileInfo)?void 0:t.lods}),(e=>this._initializeAvailableLevels(e)),u.syncAndInitial)]),this._initializeTilemapDefinition()},l.castLevels=function(e){return e<=2?(w.error("Minimum levels for Tilemap is 3, but got ",e),3):e},l.fetchTilemap=function(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new n("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,i,l);if(a)return Promise.resolve(a);const s=r&&r.signal;return r={...r,signal:null},new Promise(((e,t)=>{p.onAbort(s,(()=>t(p.createAbortError())));const i=T.tilemapDefinitionId(l);let a=this._pendingTilemapRequests[i];if(!a){a=T.Tilemap.fromDefinition(l,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)}))},l.getAvailability=function(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"},l.fetchAvailability=function(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof T.Tilemap){const l=r.getAvailability(t,i);return"unavailable"===l?Promise.reject(new n("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):l}if(p.isAbortError(r))throw r;return"unknown"})):Promise.reject(new n("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))},l.fetchAvailabilityUpsample=function(e,t,i,r,l){r.level=e,r.row=t,r.col=i;const a=this.layer.tileInfo;a.updateTileInfo(r);const n=this.fetchAvailability(e,t,i,l).catch((e=>{if(p.isAbortError(e))throw e;if(a.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,l,n),n},l._fetchAvailabilityUpsamplePrefetch=function(){var e=t._asyncToGenerator((function*(e,t,i,r,l,a){if(!this._prefetchingEnabled)return;const n=`prefetch-${e}`;if(this.handles.has(n))return;const s=new AbortController;a.then((()=>s.abort()),(()=>s.abort()));let o=!1;const c={remove(){o||(o=!0,s.abort())}};if(this.handles.add(c,n),yield m.waitTicks(10,s.signal).catch((()=>{})),o||(o=!0,this.handles.remove(n)),p.isAborted(s))return;const h={id:e,level:t,row:i,col:r},u={...l,signal:s.signal},v=this.layer.tileInfo;for(let p=0;g._prefetches.length<g._maxPrefetch&&v.upsampleTile(h);++p){const e=this.fetchAvailability(h.level,h.row,h.col,u);g._prefetches.push(e);const t=()=>{g._prefetches.removeUnordered(e)};e.then(t,t)}}));function i(t,i,r,l,a,n){return e.apply(this,arguments)}return i}(),l._initializeTilemapDefinition=function(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:r}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:v.objectToQuery({...t.query,...r,token:null!=i?i:null==(e=t.query)?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}},l._tilemapFromCache=function(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const l=T.tilemapDefinitionId(r);return this._tilemapCache.get(l)},l._initializeAvailableLevels=function(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))},t._createClass(i,[{key:"size",get:function(){return 1<<this.levels}},{key:"test",get:function(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}}]),i}(s.HandleOwnerMixin(l)),e.TilemapCache._maxPrefetch=4,e.TilemapCache._prefetches=new h({initialSize:g._maxPrefetch}),i.__decorate([f.property({constructOnly:!0,type:Number})],e.TilemapCache.prototype,"levels",void 0),i.__decorate([d.cast("levels")],e.TilemapCache.prototype,"castLevels",null),i.__decorate([f.property({readOnly:!0,type:Number})],e.TilemapCache.prototype,"size",null),i.__decorate([f.property({constructOnly:!0,type:Number})],e.TilemapCache.prototype,"cacheByteSize",void 0),i.__decorate([f.property({constructOnly:!0})],e.TilemapCache.prototype,"layer",void 0),i.__decorate([f.property({constructOnly:!0})],e.TilemapCache.prototype,"request",void 0),e.TilemapCache=g=i.__decorate([b.subclass("esri.layers.support.TilemapCache")],e.TilemapCache),Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
