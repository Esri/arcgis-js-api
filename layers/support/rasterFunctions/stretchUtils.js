/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../PixelBlock","../../../renderers/support/stretchRendererUtils"],(function(t,e,s,n){"use strict";const i={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]},r=1,o=[.299,.587,.114];function a(t,e=256){e=Math.min(e,256);const{size:s,counts:n}=t,i=new Uint8Array(s),r=n.reduce(((t,s)=>t+s/e),0);let o=0,a=0,f=0,l=r;for(let u=0;u<s;u++)if(f+=n[u],!(u<s-1&&f+n[u+1]<l)){for(;o<e-1&&l<f;)o++,l+=r;for(let t=a;t<=u;t++)i[t]=o;a=u+1}for(let u=a;u<s;u++)i[u]=e-1;return i}function f(t){const{minCutOff:e,maxCutOff:s,gamma:n,pixelType:i}=t,r=t.outMin||0,o=t.outMax||255;if(!["u8","u16","s8","s16"].includes(i))return null;const a=e.length;let f,u,m=0;"s8"===i?m=-127:"s16"===i&&(m=-32767);let c=256;["u16","s16"].includes(i)&&(c=65536);const h=[],g=o-r;for(f=0;f<a;f++)h[f]=s[f]-e[f],s[f],e[f];const p=n&&n.length>=a,x=[];if(p)for(f=0;f<a;f++)n[f]>1?n[f]>2?x[f]=6.5+(n[f]-2)**2.5:x[f]=6.5+100*(2-n[f])**4:x[f]=1;let M;const d=[];let S,y,b;if(p)for(f=0;f<a;f++){for(b=[],u=0;u<c;u++)S=u+m,M=(S-e[f])/h[f],y=1,n[f]>1&&(y-=(1/g)**(M*x[f])),S<s[f]&&S>e[f]?b[u]=Math.floor(y*g*M**(1/n[f]))+r:S>=s[f]?b[u]=o:b[u]=r;d[f]=b}else for(f=0;f<a;f++){for(b=[],u=0;u<c;u++)S=u+m,S<=e[f]?b[u]=r:S>=s[f]?b[u]=o:b[u]=Math.floor((S-e[f])/h[f]*g)+r;d[f]=b}if(null!=t.contrastOffset){const e=l(t.contrastOffset,t.brightnessOffset);for(f=0;f<a;f++)for(b=d[f],u=0;u<c;u++)b[u]=e[b[u]]}return{lut:d,offset:m}}function l(t,e){const s=Math.min(Math.max(t,-100),100),n=Math.min(Math.max(e??0,-100),100),i=255,r=128;let o=0,a=0;const f=new Uint8Array(256);for(o=0;o<256;o++)s>0&&s<100?a=(200*o-100*i+2*i*n)/(2*(100-s))+r:s<=0&&s>-100?a=(200*o-100*i+2*i*n)*(100+s)/2e4+r:100===s?(a=200*o-100*i+(i+1)*(100-s)+2*i*n,a=a>0?i:0):-100===s&&(a=r),f[o]=a>i?i:a<0?0:a;return f}function u(t,e,s){const n=[];for(let i=0;i<e.length;i++){let r=0,a=0,f=0;"min"in e[i]?({min:r,max:a,avg:f}=e[i]):[r,a,f]=e[i];let l=f??0;"u8"!==t&&(l=255*(l-r)/(a-r)),s&&(l*=o[i]),n.push(m(l))}return n}function m(t){if(t<=0||t>=255)return r;let e=0;150!==t&&(e=t<=150?45*Math.cos(.01047*t):17*Math.sin(.021*t));const s=255,n=t+e,i=Math.log(t/s),o=Math.log(n/s);if(0===o)return r;const a=i/o;return isNaN(a)?r:Math.min(9.9,Math.max(.01,a))}function c(t){if(e.isNone(t)||!t.pixels?.length)return null;t.statistics||t.updateStatistics();const{pixels:s,mask:n,pixelType:i,statistics:r}=t,o=t.width*t.height,a=s.length;let f,l,u,m,c;const h=[],g=[];let p,x,M,d,S,y,b,O,C,z;const k=256;for(m=0;m<a;m++){if(p=new Uint32Array(k),M=s[m],"u8"===i)if(f=-.5,l=255.5,n)for(c=0;c<o;c++)n[c]&&p[M[c]]++;else for(c=0;c<o;c++)p[M[c]]++;else{if(e.assertIsSome(r),f=r[m].minValue,l=r[m].maxValue,u=(l-f)/k,x=new Uint32Array(k+1),n)for(c=0;c<o;c++)n[c]&&x[Math.floor((M[c]-f)/u)]++;else for(c=0;c<o;c++)x[Math.floor((M[c]-f)/u)]++;for(c=0;c<255;c++)p[c]=x[c];p[255]=x[255]+x[256]}for(h.push({min:f,max:l,size:k,counts:p}),d=0,S=0,O=0,c=0;c<k;c++)d+=p[c],S+=c*p[c];for(C=S/d,c=0;c<k;c++)O+=p[c]*(c-C)**2;z=Math.sqrt(O/(d-1)),u=(l-f)/k,y=(C+.5)*u+f,b=z*u,g.push({min:f,max:l,avg:y,stddev:b})}return{statistics:g,histograms:h}}function h(t){const e=[];for(let s=0;s<t.length;s++){const{min:n,max:i,size:r,counts:o}=t[s];let a=0,f=0;for(let t=0;t<r;t++)a+=o[t],f+=t*o[t];const l=f/a;let u=0;for(let t=0;t<r;t++)u+=o[t]*(t-l)**2;const m=(i-n)/r,c=(l+.5)*m+n,h=Math.sqrt(u/(a-1))*m;e.push({min:n,max:i,avg:c,stddev:h})}return e}function g(t,s){const{pixelBlock:r,bandIds:o,returnHistogramLut:f,rasterInfo:l}=s;let u=null,m=null,h=t.stretchType;if("number"==typeof h&&(h=n.stretchTypeFunctionEnum[h]),t.dra)if("minMax"===h&&e.isSome(r)&&r.statistics)u=r.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const t=c(r);u=e.isSome(t)?t.statistics:null,m=e.isSome(t)?t.histograms:null}else u=t.statistics?.length>0?t.statistics:e.unwrap(l.statistics),m=t.histograms||e.unwrap(l.histograms);"percentClip"!==h&&"histogramEqualization"!==h||m?.length||(h="minMax");const g=u?.length||m?.length||l.bandCount,x=[],M=[];let d,S,y,b,O,C,z,k,v,w,A,T;switch(u&&!Array.isArray(u[0])&&(u=u.map((t=>[t.min,t.max,t.avg,t.stddev]))),h){case"none":{const t=i[l.pixelType]||i.f32;for(k=0;k<g;k++)x[k]=t[0],M[k]=t[1]}break;case"minMax":for(e.assertIsSome(u),k=0;k<g;k++)x[k]=u[k][0],M[k]=u[k][1];break;case"standardDeviation":for(e.assertIsSome(u),k=0;k<g;k++)x[k]=u[k][2]-t.numberOfStandardDeviations*u[k][3],M[k]=u[k][2]+t.numberOfStandardDeviations*u[k][3],x[k]<u[k][0]&&(x[k]=u[k][0]),M[k]>u[k][1]&&(M[k]=u[k][1]);break;case"histogramEqualization":for(e.assertIsSome(m),k=0;k<g;k++)x[k]=m[k].min,M[k]=m[k].max;break;case"percentClip":for(e.assertIsSome(m),k=0;k<m.length;k++){for(d=m[k],O=new Uint32Array(d.size),b=[...d.counts],b.length>=20&&(b[0]=b[1]=b[2]=b[b.length-1]=b[b.length-2]=0),y=0,S=(d.max-d.min)/d.size,z=-.5===d.min&&1===S?.5:0,v=0;v<d.size;v++)y+=b[v],O[v]=y;for(C=(t.minPercent||0)*y/100,v=0;v<d.size;v++)if(O[v]>C){x[k]=d.min+S*(v+z);break}for(C=(1-(t.maxPercent||0)/100)*y,v=d.size-2;v>=0;v--)if(O[v]<C){M[k]=d.min+S*(v+2-z);break}}break;default:for(e.assertIsSome(u),k=0;k<g;k++)x[k]=u[k][0],M[k]=u[k][1]}"histogramEqualization"===h?(e.assertIsSome(m),A=m[0].size||256,w=0,f&&(T=m.map((t=>a(t))))):(A=t.max||255,w=t.min||0);return p({minCutOff:x,maxCutOff:M,outMax:A,outMin:w,histogramLut:T},o)}function p(t,e){if(null==e||0===e.length)return t;const s=Math.max.apply(null,e),{minCutOff:n,maxCutOff:i,outMin:r,outMax:o,histogramLut:a}=t;return n.length===e.length||n.length<=s?t:{minCutOff:e.map((t=>n[t])),maxCutOff:e.map((t=>i[t])),histogramLut:a?e.map((t=>a[t])):null,outMin:r,outMax:o}}function x(t,n){if(e.isNone(t)||!t.pixels?.length)return t;const{mask:i,width:r,height:o,pixels:a}=t,{minCutOff:f,maxCutOff:l,gamma:u}=n,m=n.outMin||0,c=n.outMax||255,h=r*o,g=n.outputPixelType||"u8",p=t.pixels.map((()=>s.createEmptyBand(g,h))),x=p.length;let M,d,S,y,b;const O=c-m,C=[];for(M=0;M<x;M++)C[M]=l[M]-f[M],l[M],f[M];const z=u&&u.length>=x,k=[];if(z)for(M=0;M<x;M++)u[M]>1?u[M]>2?k[M]=6.5+(u[M]-2)**2.5:k[M]=6.5+100*(2-u[M])**4:k[M]=1;if(z)if(null!=i){for(d=0;d<h;d++)if(i[d])for(M=0;M<x;M++)S=a[M][d],b=(S-f[M])/C[M],y=1,u[M]>1&&(y-=(1/O)**(b*k[M])),S<l[M]&&S>f[M]?p[M][d]=Math.floor(y*O*b**(1/u[M]))+m:S>=l[M]?p[M][d]=c:p[M][d]=m}else for(d=0;d<h;d++)for(M=0;M<x;M++)S=a[M][d],b=(S-f[M])/C[M],y=1,u[M]>1&&(y-=(1/O)**(b*k[M])),S<l[M]&&S>f[M]?p[M][d]=Math.floor(y*O*b**(1/u[M]))+m:S>=l[M]?p[M][d]=c:p[M][d]=m;else if(null!=i){for(d=0;d<h;d++)if(i[d])for(M=0;M<x;M++)S=a[M][d],S<l[M]&&S>f[M]?p[M][d]=Math.floor((S-f[M])/C[M]*O)+m:S>=l[M]?p[M][d]=c:p[M][d]=m}else for(d=0;d<h;d++)for(M=0;M<x;M++)S=a[M][d],S<l[M]&&S>f[M]?p[M][d]=Math.floor((S-f[M])/C[M]*O)+m:S>=l[M]?p[M][d]=c:p[M][d]=m;const v=new s({width:r,height:o,mask:i,pixels:p,pixelType:g});return v.updateStatistics(),v}t.computeGammaValues=u,t.createContrastBrightnessLUT=l,t.createHistogramEqualizationLUT=a,t.createStretchLUT=f,t.estimateStatisticsFromHistograms=h,t.estimateStatisticsHistograms=c,t.getStretchCutoff=g,t.stretch=x,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
