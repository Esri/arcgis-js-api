/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../core/jsonMap","../../../core/maybe","../PixelBlock","./pixelUtils"],(function(t,e,n,r,o){"use strict";const a=new Map;a.set("meter-per-second",1),a.set("kilometer-per-hour",.277778),a.set("knots",.514444),a.set("feet-per-second",.3048),a.set("mile-per-hour",.44704);const i=180/Math.PI,s=5,l=new e.JSONMap({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function h(t,e){return a.get(t)/a.get(e)||1}function c(t){return(450-t)%360}function u(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let a=Math.atan2(r,n)*i;return a=(360+a)%360,"geographic"===e&&(a=c(a)),[o,a]}function f(t,e="geographic"){let n=t[1];"geographic"===e&&(n=c(n)),n%=360;const r=t[0];return[r*Math.cos(n/i),r*Math.sin(n/i)]}function p(t,e,n="geographic",a=1){if(!o.isValidPixelBlock(t))return t;const{pixels:i,width:s,height:l}=t,h=s*l,c=i[0],p=i[1],m=r.createEmptyBand(t.pixelType,h),M=r.createEmptyBand(t.pixelType,h);let d=0;for(let r=0;r<l;r++)for(let t=0;t<s;t++)"vector-uv"===e?([m[d],M[d]]=u([c[d],p[d]],n),m[d]*=a):([m[d],M[d]]=f([c[d],p[d]],n),m[d]*=a,M[d]*=a),d++;const x=new r({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[m,M]});return x.updateStatistics(),x}function m(t,e,n=1){if(1===n||!o.isValidPixelBlock(t))return t;const r=t.clone(),{pixels:a,width:i,height:s}=r,l=a[0],h=a[1];let c=0;for(let o=0;o<s;o++)for(let t=0;t<i;t++)"vector-uv"===e?(l[c]*=n,h[c]*=n):l[c]*=n,c++;return r.updateStatistics(),r}function M(t,e,r,o,a){if(!n.isSome(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:e,height:r,resolution:t.width/e};const i=a.xmin,s=a.ymax;o=Math.max(o||0,30);const l=Math.ceil(e*(1/o)),h=Math.ceil(r*(1/o)),c=((t.xmax-t.xmin)/l+(t.ymax-t.ymin)/h)/2;return t.xmin=i+Math.floor((t.xmin-i)/c)*c,t.xmax=i+Math.ceil((t.xmax-i)/c)*c,t.ymin=s+Math.floor((t.ymin-s)/c)*c,t.ymax=s+Math.ceil((t.ymax-s)/c)*c,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/c),resolution:c}}const d=x(0,0,0);function x(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,a=13*o,i=-7*o,s=-2*o,l=-16*o,h=29,[c,u]=k(0,e+a,n,h),[f,p]=k(t-5.5,e+i,n,h),[m,M]=k(t+5.5,e+i,n,h),[d,x]=k(t-1.5,e+s,n,h),[g,w]=k(t+1.5,e+s,n,h),[y,P]=k(t-1.5,e+l,n,h),[b,v]=k(t+1.5,e+l,n,h);return[c,u,f,p,d,x,g,w,m,M,y,P,b,v]}function g(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,a=5*o,i=20*o,l=25*o,h=45,c=0,u=0,f=2,p=0,m=f*o;let[M,d]=[c+r/2,u-i],[x,g]=[M+f,d],[w,y]=[x-p,g+m],[P,b]=[c-r/2,u-l],[v,I]=[P+p,b-m],_=Math.ceil(t/s),A=Math.floor(_/10);_-=8*A;const F=[],S=[];for(let s=0;s<_/2;s++,A--){A<=0&&_%2==1&&s===(_-1)/2&&(P=c,v=P+p,b=(b+d)/2,I=b-m);const[t,n]=k(P,b,e,h);if(A>0){const[r,o]=k(x,b,e,h),[a,i]=k(M,d,e,h);F.push(r),F.push(o),F.push(t),F.push(n),F.push(a),F.push(i)}else{const[r,o]=k(x,g,e,h),[a,i]=k(w,y,e,h),[s,l]=k(v,I,e,h);S.push(t),S.push(n),S.push(s),S.push(l),S.push(a),S.push(i),S.push(r),S.push(o)}b+=a,d+=a,g+=a,y+=a,I+=a}const[U,V]=k(c+r/2,u+i,e,h),D=r/2+f,[T,B]=k(c+D,u+i,e,h),[N,O]=k(c+r/2,u-l,e,h),[C,J]=k(c+D,u-l,e,h);return{pennants:F,barbs:S,shaft:[U,V,T,B,N,O,C,J]}}function k(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,a=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+a-n)%(2*Math.PI)]}const w=[0,1,3,6,10,16,21,27,33,40,47,55,63],y=[0,.5,1,1.5,2],P=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function b(t,e,n,r){const o=h(r||"knots",n);let a;for(a=1;a<e.length;a++)if(a===e.length-1){if(t<e[a]*o)break}else if(t<=e[a]*o)break;return Math.min(a-1,e.length-2)}function v(t,e,n,r,o){let a=0;switch(e){case"beaufort_kn":a=b(t,w,"knots",n);break;case"beaufort_km":a=b(t,w,"kilometer-per-hour",n);break;case"beaufort_ft":a=b(t,w,"feet-per-second",n);break;case"beaufort_m":a=b(t,w,"meter-per-second",n);break;case"classified_arrow":a=b(t,o,r,n);break;case"ocean_current_m":a=b(t,y,"meter-per-second",n);break;case"ocean_current_kn":a=b(t,P,"knots",n)}return a}function I(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:a}=e,i=l.fromJSON(r),s=l.fromJSON(o),h=7*6,c=15;let u=0,f=0;const{width:p,height:m,mask:M}=t,x=t.pixels[0],g=t.pixels[1],k=M?M.filter((t=>t>0)).length:p*m,w=new Float32Array(k*h),y=new Uint32Array(c*k);for(let l=0;l<m;l++)for(let t=0;t<p;t++){const e=l*p+t;if(!M||M[l*p+t]){var P;const r=null!=(P=(g[e]+360)%360/180*Math.PI)?P:2*Math.PI*Math.random(),o=v(x[e],n,i,s,a);for(let n=0;n<d.length;n+=2)w[u++]=(t+.5)/p,w[u++]=(l+.5)/m,w[u++]=d[n],w[u++]=d[n+1]+r,w[u++]=o,w[u++]=x[e];const c=7*(u/h-1);y[f++]=c,y[f++]=c+1,y[f++]=c+2,y[f++]=c+0,y[f++]=c+4,y[f++]=c+3,y[f++]=c+0,y[f++]=c+2,y[f++]=c+3,y[f++]=c+2,y[f++]=c+5,y[f++]=c+3,y[f++]=c+5,y[f++]=c+6,y[f++]=c+3}}return{vertexData:w,indexData:y}}const _=[];function A(t,e){if(0===_.length)for(let s=0;s<30;s++)_.push(g(5*s,0));const n=h(l.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:a}=t,i=t.pixels[0],c=t.pixels[1],u=6,f=[],p=[];let m=0,M=0;for(let l=0;l<o;l++)for(let t=0;t<r;t++){const e=l*r+t,h=i[e]*n;if((!a||a[l*r+t])&&h>=s){var d;const n=null!=(d=(c[e]+360)%360/180*Math.PI)?d:2*Math.PI*Math.random(),{pennants:a,barbs:i,shaft:s}=_[Math.min(Math.floor(h/5),29)];if(a.length+i.length===0)continue;let x=f.length/u;const g=(t+.5)/r,k=(l+.5)/o;for(let t=0;t<a.length;t+=2)f[m++]=g,f[m++]=k,f[m++]=a[t],f[m++]=a[t+1]+n,f[m++]=0,f[m++]=h;for(let t=0;t<i.length;t+=2)f[m++]=g,f[m++]=k,f[m++]=i[t],f[m++]=i[t+1]+n,f[m++]=0,f[m++]=h;for(let t=0;t<s.length;t+=2)f[m++]=g,f[m++]=k,f[m++]=s[t],f[m++]=s[t+1]+n,f[m++]=0,f[m++]=h;for(let t=0;t<a.length/6;t++)p[M++]=x,p[M++]=x+1,p[M++]=x+2,x+=3;for(let t=0;t<i.length/8;t++)p[M++]=x,p[M++]=x+1,p[M++]=x+2,p[M++]=x+1,p[M++]=x+2,p[M++]=x+3,x+=4;p[M++]=x+0,p[M++]=x+1,p[M++]=x+2,p[M++]=x+1,p[M++]=x+3,p[M++]=x+2,x+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function F(t,e){const n=4*6;let r=0,o=0;const{width:a,height:i,mask:l}=t,h=t.pixels[0],c=[],u=[],f="wind_speed"===e.style?s:Number.MAX_VALUE;for(let s=0;s<i;s++)for(let t=0;t<a;t++){const e=s*a+t;if((!l||l[s*a+t])&&h[e]<f){for(let n=0;n<4;n++)c[r++]=(t+.5)/a,c[r++]=(s+.5)/i,c[r++]=n<2?-.5:.5,c[r++]=n%2==0?-.5:.5,c[r++]=0,c[r++]=h[e];const l=4*(r/n-1);u[o++]=l,u[o++]=l+1,u[o++]=l+2,u[o++]=l+1,u[o++]=l+2,u[o++]=l+3}}return{vertexData:new Float32Array(c),indexData:new Uint32Array(u)}}function S(t,e){return"simple_scalar"===e.style?F(t,e):"wind_speed"===e.style?A(t,e):I(t,e)}function U(t,e,n,o=[0,0],a=.5){const{width:i,height:s,mask:l}=t,[h,c]=t.pixels,[p,m]=o,M=Math.round((i-p)/n),d=Math.round((s-m)/n),x=M*d,g=new Float32Array(x),k=new Float32Array(x),w=new Uint8Array(x),y="vector-uv"===e;for(let r=0;r<d;r++)for(let t=0;t<M;t++){let e=0;const o=r*M+t,d=Math.max(0,r*n+m),x=Math.max(0,t*n+p),P=Math.min(s,d+n),b=Math.min(i,x+n);for(let t=d;t<P;t++)for(let n=x;n<b;n++){const r=t*i+n;if(!l||l[r]){e++;const t=y?[h[r],c[r]]:[h[r],(360+c[r])%360],[n,a]=y?t:f(t);g[o]+=n,k[o]+=a}}if(e>=(P-d)*(b-x)*(1-a)){w[o]=1;const[t,n]=u([g[o]/e,k[o]/e]);g[o]=t,k[o]=n}else w[o]=0,g[o]=0,k[o]=0}const P=new r({width:M,height:d,pixels:[g,k],mask:w});return P.updateStatistics(),P}t.convertVectorFieldData=p,t.convertVectorFieldUnit=m,t.createVFMesh=S,t.createVFMeshScalar=F,t.getUnitConversionFactor=h,t.sampleVectorField=U,t.snapImageToSymbolTile=M,t.unitKebabDict=l,t.uvComponentToVector=u,Object.defineProperty(t,"__esModule",{value:!0})}));
