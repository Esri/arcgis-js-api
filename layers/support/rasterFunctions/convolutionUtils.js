/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../PixelBlock"],(function(e,n){"use strict";var t;e.ConvolutionKernel=void 0,(t=e.ConvolutionKernel||(e.ConvolutionKernel={}))[t.UserDefined=-1]="UserDefined",t[t.LineDetectionHorizontal=0]="LineDetectionHorizontal",t[t.LineDetectionVertical=1]="LineDetectionVertical",t[t.LineDetectionLeftDiagonal=2]="LineDetectionLeftDiagonal",t[t.LineDetectionRightDiagonal=3]="LineDetectionRightDiagonal",t[t.GradientNorth=4]="GradientNorth",t[t.GradientWest=5]="GradientWest",t[t.GradientEast=6]="GradientEast",t[t.GradientSouth=7]="GradientSouth",t[t.GradientNorthEast=8]="GradientNorthEast",t[t.GradientNorthWest=9]="GradientNorthWest",t[t.SmoothArithmeticMean=10]="SmoothArithmeticMean",t[t.Smoothing3x3=11]="Smoothing3x3",t[t.Smoothing5x5=12]="Smoothing5x5",t[t.Sharpening3x3=13]="Sharpening3x3",t[t.Sharpening5x5=14]="Sharpening5x5",t[t.Laplacian3x3=15]="Laplacian3x3",t[t.Laplacian5x5=16]="Laplacian5x5",t[t.SobelHorizontal=17]="SobelHorizontal",t[t.SobelVertical=18]="SobelVertical",t[t.Sharpen=19]="Sharpen",t[t.Sharpen2=20]="Sharpen2",t[t.PointSpread=21]="PointSpread",t[t.None=255]="None";const o=new Map;function l(e){const n=Math.sqrt(e.length),t=e.slice(0,n),o=[1];for(let l=1;l<n;l++){let t=null;for(let o=0;o<n;o++){const i=e[o+l*n],r=e[o];if(null==t)if(0===r){if(i)return{separable:!1,row:null,col:null}}else t=i/r;else if(i/r!==t)return{separable:!1,row:null,col:null}}if(null==t)return{separable:!1,row:null,col:null};o.push(t)}return{separable:!0,row:t,col:o}}function i(e,n,t,o,l,i,r){const a=new Float32Array(n*t),s=i.length,u=r?0:o,h=r?o:0,c=r?1:n;for(let p=u;p<t-u;p++){const t=p*n;for(let r=h;r<n-h;r++){if(l&&!l[t+r])continue;let n=0;for(let l=0;l<s;l++)n+=e[t+r+(l-o)*c]*i[l];a[t+r]=n}}return a}function r(e,n,t,o,l,i,r){const a=new Float32Array(n*t),s=Math.floor(o/2),u=Math.floor(l/2);for(let h=s;h<t-s;h++){const t=h*n;for(let h=u;h<n-u;h++){if(i&&!i[t+h])continue;let c=0;for(let i=0;i<o;i++)for(let o=0;o<l;o++)c+=e[t+h+(i-s)*n+o-u]*r[i*l+o];a[t+h]=c}}return a}function a(e,t,o=!0){const{pixels:l,width:i,height:a,pixelType:u,mask:h}=e,c=l.length,p=[],{kernel:f,rows:S,cols:g}=t;for(let n=0;n<c;n++){const e=r(l[n],i,a,S,g,h,f);o&&s(e,i,a,S,g),p.push(e)}return new n({width:i,height:a,pixelType:u,pixels:p,mask:h})}function s(e,n,t,o,l){const i=Math.floor(o/2);for(let a=0;a<i;a++)for(let o=0;o<n;o++)e[a*n+o]=e[(l-1-a)*n+o],e[(t-1-a)*n+o]=e[(t-l+a)*n+o];const r=Math.floor(l/2);for(let a=0;a<t;a++){const t=a*n;for(let o=0;o<r;o++)e[t+o]=e[t+l-1-o],e[t+n-o-1]=e[t+n+o-l]}}function u(e,t,o,l=!0){const{pixels:r,width:a,height:u,pixelType:h,mask:c}=e,p=r.length,f=[],S=t.length,g=o.length,d=Math.floor(S/2),v=Math.floor(g/2);for(let n=0;n<p;n++){let e=i(r[n],a,u,d,c,t,!0);e=i(e,a,u,v,c,o,!1),l&&s(e,a,u,S,g),f.push(e)}return new n({width:a,height:u,pixelType:h,pixels:f,mask:c})}function h(e,n){const t=l(n.kernel),o=!1!==n.mirrorEdges,i=t.separable?u(e,t.row,t.col,o):a(e,n,o),{outputPixelType:r}=n;return r&&i.clamp(r),i}o.set(e.ConvolutionKernel.None,[0,0,0,0,1,0,0,0,0]),o.set(e.ConvolutionKernel.LineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),o.set(e.ConvolutionKernel.LineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),o.set(e.ConvolutionKernel.LineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),o.set(e.ConvolutionKernel.LineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),o.set(e.ConvolutionKernel.GradientNorth,[-1,-2,-1,0,0,0,1,2,1]),o.set(e.ConvolutionKernel.GradientWest,[-1,0,1,-2,0,2,-1,0,1]),o.set(e.ConvolutionKernel.GradientEast,[1,0,-1,2,0,-2,1,0,-1]),o.set(e.ConvolutionKernel.GradientSouth,[1,2,1,0,0,0,-1,-2,-1]),o.set(e.ConvolutionKernel.GradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),o.set(e.ConvolutionKernel.GradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),o.set(e.ConvolutionKernel.SmoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),o.set(e.ConvolutionKernel.Smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),o.set(e.ConvolutionKernel.Smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),o.set(e.ConvolutionKernel.Sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),o.set(e.ConvolutionKernel.Sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),o.set(e.ConvolutionKernel.Laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),o.set(e.ConvolutionKernel.Laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),o.set(e.ConvolutionKernel.SobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),o.set(e.ConvolutionKernel.SobelVertical,[-1,0,1,-2,0,2,-1,0,1]),o.set(e.ConvolutionKernel.Sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),o.set(e.ConvolutionKernel.Sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),o.set(e.ConvolutionKernel.PointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]),e.convolute=h,e.convoluteSeparable=u,e.convolutionKernels=o,e.separateKernels=l,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
