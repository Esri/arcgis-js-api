/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/JSONSupport","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/arrayUtils","../../../core/accessorSupport/decorators/cast","../../../core/accessorSupport/decorators/subclass"],(function(t,r,e,s,o,n,i,a){"use strict";let u=function(r){function e(){var t;return(t=r.apply(this,arguments)||this).functionArguments=null,t.readingBufferSize=0,t}t._inheritsLoose(e,r);var o=e.prototype;return o.bind=function(t,r=!1){const e=this._getRasterValues();for(let s=0;s<e.length;s++){const o=e[s];if(o&&"object"==typeof o&&"bind"in o&&(!o.rasterInfo||r)){const e=o.bind(t,r);if(!e.success)return e}}return!this.rasterInfo||r?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindSourceRasters()):{success:!0}},o.process=function(t){const r=this._getRasterValues().map((r=>this._readRasterValue(r,t)));return this._processPixels({...t,pixelBlocks:r})},o.getPrimaryRasters=function(){const t=[],r=[];return this._getPrimaryRasters(this,t,r),{rasters:t,rasterIds:r}},o._getOutputPixelType=function(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t},o._getRasterValues=function(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]&&Array.isArray(this.functionArguments.rasters)?this.functionArguments.rasters:t.map((t=>this.functionArguments[t]))},o._getSourceRasterInfos=function(t){const r=this._getRasterValues(),{rasterInfos:e,rasterIds:s}=t;return r.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&s.includes(t)?e[s.indexOf(t)]:e[0]))},o._getPrimaryRasterId=function(t){return t?.url},o._getPrimaryRasters=function(t,r=[],e=[]){for(let s=0;s<t.sourceRasters.length;s++){const o=t.sourceRasters[s];if("number"!=typeof o)if("bind"in o)this._getPrimaryRasters(o,r,e);else{const t=o,s=this._getPrimaryRasterId(t);if(null==s)continue;e.includes(s)||(this.mainPrimaryRasterId===s?(r.unshift(t),e.unshift(s)):(r.push(t),e.push(s)))}}},o._readRasterValue=function(t,r){const{primaryPixelBlocks:e}=r;if(s.isNone(t)||"$$"===t){const t=e[0];return s.isNone(t)?null:t.clone()}if("string"==typeof t){const s=r.primaryRasterIds.indexOf(t);return-1===s?null:e[s]}if("number"==typeof t){const r=e[0];if(s.isNone(r))return null;const o=new Float32Array(r.width*r.height);o.fill(t);const n=r.clone();return n.pixels=n.pixels.map((()=>o)),n}return t.process(r)},e}(e.JSONSupport);r.__decorate([o.property({json:{write:!0}})],u.prototype,"functionName",void 0),r.__decorate([o.property({json:{write:!0}})],u.prototype,"functionArguments",void 0),r.__decorate([o.property()],u.prototype,"rasterArgumentNames",void 0),r.__decorate([o.property({json:{write:!0}}),i.cast((t=>t?.toLowerCase()))],u.prototype,"outputPixelType",void 0),r.__decorate([o.property({json:{write:!0}})],u.prototype,"mainPrimaryRasterId",void 0),r.__decorate([o.property()],u.prototype,"sourceRasters",void 0),r.__decorate([o.property({json:{write:!0}})],u.prototype,"sourceRasterInfos",void 0),r.__decorate([o.property({json:{write:!0}})],u.prototype,"rasterInfo",void 0),r.__decorate([o.property({json:{write:!0}})],u.prototype,"readingBufferSize",void 0),u=r.__decorate([a.subclass("esri.layers.support.rasterFunctions.BaseRasterFunction")],u);return u}));
