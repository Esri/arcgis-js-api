/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../PixelBlock"],(function(t,e,n){"use strict";function i(t){return e.isSome(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function l(t,e){if(null==e||!e.length||!i(t))return t;const l=t.pixels.length;return e&&e.some((t=>t>=l))||1===l&&1===e.length&&0===e[0]?t:l!==e.length||e.some(((t,e)=>t!==e))?new n({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function o(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),o=new Uint8Array(4*l),r=[];let s,a=0,f=0;const h=5===n[0].length;if(l>65536)return n.forEach((t=>{r[t[0]-i]=h?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:i,alphaSpecified:h};if(t.fillUnspecified)for(s=n[f],a=s[0]-i;a<l;a++)o[4*a]=s[1],o[4*a+1]=s[2],o[4*a+2]=s[3],o[4*a+3]=h?s[4]:255,a===s[0]-i&&(s=f===n.length-1?s:n[++f]);else for(a=0;a<n.length;a++)s=n[a],f=4*(s[0]-i),o[f]=s[1],o[f+1]=s[2],o[f+2]=s[3],o[f+3]=h?s[4]:255;return{indexedColormap:o,offset:i,alphaSpecified:h}}function r(t,e){if(!i(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const n=t.clone(),l=n.pixels;let o=n.mask;const r=n.width*n.height;if(1!==l.length)return t;const{indexedColormap:s,indexed2DColormap:a,offset:f,alphaSpecified:h}=e,u=s.length-1;let c=0;const p=l[0],m=new Uint8Array(p.length),x=new Uint8Array(p.length),d=new Uint8Array(p.length);let g,y=0;if(s)if(o)for(c=0;c<r;c++)o[c]&&(y=4*(p[c]-f),y<f||y>u?o[c]=0:(m[c]=s[y],x[c]=s[y+1],d[c]=s[y+2],o[c]=s[y+3]));else{for(o=new Uint8Array(r),c=0;c<r;c++)y=4*(p[c]-f),y<f||y>u?o[c]=0:(m[c]=s[y],x[c]=s[y+1],d[c]=s[y+2],o[c]=s[y+3]);n.mask=o}else if(o)for(c=0;c<r;c++)o[c]&&(g=a[p[c]],m[c]=g[0],x[c]=g[1],d[c]=g[2],o[c]=g[3]);else{for(o=new Uint8Array(r),c=0;c<r;c++)g=a[p[c]],m[c]=g[0],x[c]=g[1],d[c]=g[2],o[c]=g[3];n.mask=o}return n.pixels=[m,x,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function s(t){if(!i(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:n,pixelType:l,statistics:o}=t,r=t.width*t.height,s=e.length;let a,f,h,u,c;const p=[],m=[];let x,d,g,y,w,M,k,A,U,C;const T=256;for(u=0;u<s;u++){if(x=new Uint32Array(T),g=e[u],"u8"===l)if(a=-.5,f=255.5,n)for(c=0;c<r;c++)n[c]&&x[g[c]]++;else for(c=0;c<r;c++)x[g[c]]++;else{if(a=o[u].minValue,f=o[u].maxValue,h=(f-a)/T,d=new Uint32Array(T+1),n)for(c=0;c<r;c++)n[c]&&d[Math.floor((g[c]-a)/h)]++;else for(c=0;c<r;c++)d[Math.floor((g[c]-a)/h)]++;for(c=0;c<255;c++)x[c]=d[c];x[255]=d[255]+d[256]}for(p.push({min:a,max:f,size:T,counts:x}),y=0,w=0,A=0,c=0;c<T;c++)y+=x[c],w+=c*x[c];for(U=w/y,c=0;c<T;c++)A+=x[c]*(c-U)**2;C=Math.sqrt(A/(y-1)),h=(f-a)/T,M=(U+.5)*h+a,k=C*h,m.push({min:a,max:f,avg:M,stddev:k})}return{statistics:m,histograms:p}}function a(t){const e=[];for(let n=0;n<t.length;n++){const{min:i,max:l,size:o,counts:r}=t[n];let s=0,a=0;for(let t=0;t<o;t++)s+=r[t],a+=t*r[t];const f=a/s;let h=0;for(let t=0;t<o;t++)h+=r[t]*(t-f)**2;const u=(l-i)/o,c=(f+.5)*u+i,p=Math.sqrt(h/(s-1))*u;e.push({min:i,max:l,avg:c,stddev:p})}return e}function f(t){const{minCutOff:e,maxCutOff:n,gamma:i,pixelType:l}=t,o=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(l))return null;const s=e.length;let a,f,u=0;"s8"===l?u=-127:"s16"===l&&(u=-32767);let c=256;["u16","s16"].indexOf(l)>-1&&(c=65536);const p=[],m=[],x=r-o;for(a=0;a<s;a++)m[a]=n[a]-e[a],p[a]=x/(n[a]-e[a]);const d=i&&i.length>=s,g=[];if(d)for(a=0;a<s;a++)i[a]>1?i[a]>2?g[a]=6.5+(i[a]-2)**2.5:g[a]=6.5+100*(2-i[a])**4:g[a]=1;let y;const w=[];let M,k,A;if(d)for(a=0;a<s;a++){for(A=[],f=0;f<c;f++)M=f+u,y=(M-e[a])/m[a],k=1,i[a]>1&&(k-=(1/x)**(y*g[a])),M<n[a]&&M>e[a]?A[f]=Math.floor(k*x*y**(1/i[a]))+o:M>=n[a]?A[f]=r:A[f]=o;w[a]=A}else for(a=0;a<s;a++){for(A=[],f=0;f<c;f++)M=f+u,M<=e[a]?A[f]=o:M>=n[a]?A[f]=r:A[f]=Math.floor((M-e[a])/m[a]*x)+o;w[a]=A}if(null!=t.contrastOffset){const e=h(t.contrastOffset,t.brightnessOffset);for(a=0;a<s;a++)for(A=w[a],f=0;f<c;f++)A[f]=e[A[f]]}return{lut:w,offset:u}}function h(t,e){const n=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(e,-100),100),l=255,o=128;let r,s;const a=new Uint8Array(256);for(r=0;r<256;r++)n>0&&n<100?s=(200*r-100*l+2*l*i)/(2*(100-n))+o:n<=0&&n>-100?s=(200*r-100*l+2*l*i)*(100+n)/2e4+o:100===n?(s=200*r-100*l+(l+1)*(100-n)+2*l*i,s=s>0?l:0):-100===n&&(s=o),a[r]=s>l?l:s<0?0:s;return a}function u(t,e=256){e=Math.min(e,256);const{size:n,counts:i}=t,l=new Uint8Array(n),o=i.reduce(((t,n)=>t+n/e),0);let r=0,s=0,a=0,f=o;for(let h=0;h<n;h++)if(a+=i[h],!(h<n-1&&a+i[h+1]<f)){for(;r<e-1&&f<a;)r++,f+=o;for(let t=s;t<=h;t++)l[t]=r;s=h+1}for(let h=s;h<n;h++)l[h]=e-1;return l}function c(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l,mask:o}=n,{minCutOff:r,maxCutOff:s,gamma:a}=e,f=e.outMin||0,h=e.outMax||255,u=n.width*n.height,c=l.length;let p,m,x,d,g;const y=h-f,w=[],M=[];for(p=0;p<c;p++)M[p]=s[p]-r[p],w[p]=y/(s[p]-r[p]);const k=a&&a.length>=c,A=[];if(k)for(p=0;p<c;p++)a[p]>1?a[p]>2?A[p]=6.5+(a[p]-2)**2.5:A[p]=6.5+100*(2-a[p])**4:A[p]=1;if(k)if(null!=o){for(m=0;m<u;m++)if(o[m])for(p=0;p<c;p++)x=l[p][m],g=(x-r[p])/M[p],d=1,a[p]>1&&(d-=(1/y)**(g*A[p])),x<s[p]&&x>r[p]?l[p][m]=Math.floor(d*y*g**(1/a[p]))+f:x>=s[p]?l[p][m]=h:l[p][m]=f}else for(m=0;m<u;m++)for(p=0;p<c;p++)x=l[p][m],g=(x-r[p])/M[p],d=1,a[p]>1&&(d-=(1/y)**(g*A[p])),x<s[p]&&x>r[p]?l[p][m]=Math.floor(d*y*g**(1/a[p]))+f:x>=s[p]?l[p][m]=h:l[p][m]=f;else if(null!=o){for(m=0;m<u;m++)if(o[m])for(p=0;p<c;p++)x=l[p][m],x<s[p]&&x>r[p]?l[p][m]=Math.floor((x-r[p])/M[p]*y)+f:x>=s[p]?l[p][m]=h:l[p][m]=f}else for(m=0;m<u;m++)for(p=0;p<c;p++)x=l[p][m],x<s[p]&&x>r[p]?l[p][m]=Math.floor((x-r[p])/M[p]*y)+f:x>=s[p]?l[p][m]=h:l[p][m]=f;return n.pixelType="u8",n.updateStatistics(),n}function p(t,e){if(!i(t))return null;const{pixels:l,mask:o}=t,r=t.width*t.height,s=l.length;let a=e.lut;const{offset:f}=e;let h,u;a&&1===a[0].length&&(a=l.map((()=>a)));const c=[];let p,m,x;if(f)if(null==o)for(h=0;h<s;h++){for(p=l[h],m=a[h],x=new Uint8Array(r),u=0;u<r;u++)x[u]=m[p[u]-f];c.push(x)}else for(h=0;h<s;h++){for(p=l[h],m=a[h],x=new Uint8Array(r),u=0;u<r;u++)o[u]&&(x[u]=m[p[u]-f]);c.push(x)}else if(null==o)for(h=0;h<s;h++){for(p=l[h],m=a[h],x=new Uint8Array(r),u=0;u<r;u++)x[u]=m[p[u]];c.push(x)}else for(h=0;h<s;h++){for(p=l[h],m=a[h],x=new Uint8Array(r),u=0;u<r;u++)o[u]&&(x[u]=m[p[u]]);c.push(x)}const d=new n({width:t.width,height:t.height,pixels:c,mask:o,pixelType:"u8"});return d.updateStatistics(),d}function m(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l}=n,o=n.width*n.height,r=e.length,s=Math.floor(r/2),a=e[Math.floor(s)],f=l[0];let h,u,c,p,m,x,d=!1;const g=new Uint8Array(o),y=new Uint8Array(o),w=new Uint8Array(o);let M=n.mask;const k=4===e[0].mappedColor.length;for(M||(M=new Uint8Array(o),M.fill(k?255:1),n.mask=M),m=0;m<o;m++)if(M[m]){for(h=f[m],d=!1,x=s,u=a,c=0,p=r-1;p-c>1;){if(h===u.value){d=!0;break}h>u.value?c=x:p=x,x=Math.floor((c+p)/2),u=e[Math.floor(x)]}d||(h===e[c].value?(u=e[c],d=!0):h===e[p].value?(u=e[p],d=!0):h<e[c].value?(d=!1,u=null):h>e[c].value&&(h<e[p].value?(u=e[c],d=!0):p===r-1?(d=!1,u=null):(u=e[p],d=!0))),d?(g[m]=u.mappedColor[0],y[m]=u.mappedColor[1],w[m]=u.mappedColor[2],M[m]=u.mappedColor[3]):g[m]=y[m]=w[m]=M[m]=0}return n.pixels=[g,y,w],n.mask=M,n.pixelType="u8",n.maskIsAlpha=k,n}function x(t,e,n,i,l,o,r,s){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:o<=i*e?0:o<i*e+e?o-i*e:e,xmax:l+r<=n*t?0:l+r<n*t+t?l+r-n*t:t,ymax:o+s<=i*e?0:o+s<i*e+e?o+s-i*e:e}}function d(t,n){if(!t||0===t.length)return null;const i=t.filter((t=>t.pixelBlock))[0];if(!i||e.isNone(i.pixelBlock))return null;const l=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,o=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(l,o),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,s.map((t=>t.extent.xmin))),f=Math.min.apply(null,s.map((t=>t.extent.ymin))),h=Math.max.apply(null,s.map((t=>t.extent.xmax))),u=Math.max.apply(null,s.map((t=>t.extent.ymax))),c={x:Math.round((n.xmin-a)/l),y:Math.round((u-n.ymax)/o)},p={width:Math.round((h-a)/l),height:Math.round((u-f)/o)},m={width:Math.round((n.xmax-n.xmin)/l),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==s.length||c.x<0||c.y<0||p.width<m.width||p.height<m.height)return null;return{extent:n,pixelBlock:y(s.map((t=>t.pixelBlock)),p,{clipOffset:c,clipSize:m})}}function g(t,e,n,i,l,o){const{width:r,height:s}=n.block,{x:a,y:f}=n.offset,{width:h,height:u}=n.mosaic,c=x(r,s,i,l,a,f,h,u);let p=0,m=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth,e=r*o.resolutionX,n=o.startX+i*e,l=n+e;n<t&&l>t?m=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,m=0)}if(c.xmax-=m,"number"!=typeof e)for(let x=c.ymin;x<c.ymax;x++){const n=(l*s+x-f)*h+(i*r-a)+p,o=x*r;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e[o+i]}else for(let x=c.ymin;x<c.ymax;x++){const n=(l*s+x-f)*h+(i*r-a)+p;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e}}function y(t,l,o={}){const{clipOffset:r,clipSize:s,alignmentInfo:a,blockWidths:f}=o;if(f)return w(t,l,{blockWidths:f});const h=t.filter((t=>i(t)))[0];if(e.isNone(h))return null;const u=s?s.width:l.width,c=s?s.height:l.height,p=h.width,m=h.height,x=l.width/p,d=l.height/m,y={offset:r||{x:0,y:0},mosaic:s||l,block:{width:p,height:m}},M=h.pixelType,k=n.getPixelArrayConstructor(M),A=h.pixels.length,U=[];let C,T;for(let e=0;e<A;e++){T=new k(u*c);for(let n=0;n<d;n++)for(let l=0;l<x;l++){const o=t[n*x+l];i(o)&&(C=o.pixels[e],g(T,C,y,l,n,a))}U.push(T)}let S;if(t.some((t=>e.isNone(t)||t.mask&&t.mask.length>0))){S=new Uint8Array(u*c);for(let n=0;n<d;n++)for(let i=0;i<x;i++){const l=t[n*x+i],o=e.isSome(l)?l.mask:null;g(S,o||(l?1:0),y,i,n,a)}}const B=new n({width:u,height:c,pixels:U,pixelType:M,mask:S});return B.updateStatistics(),B}function w(t,l,o){const r=t.find((t=>e.isSome(t)));if(!e.isSome(r))return null;const s=t.some((t=>!e.isSome(t)||!!t.mask)),{width:a,height:f}=l,h=s?new Uint8Array(a*f):null,{blockWidths:u}=o,c=[],p=r.getPlaneCount(),m=n.getPixelArrayConstructor(r.pixelType);if(s)for(let e=0,n=0;e<t.length;n+=u[e],e++){const l=t[e];if(!i(l))continue;const o=l.mask;for(let t=0;t<f;t++)for(let i=0;i<u[e];i++)h[t*a+i+n]=null==o?255:o[t*l.width+i]}for(let e=0;e<p;e++){const n=new m(a*f);for(let l=0,o=0;l<t.length;o+=u[l],l++){const r=t[l];if(!i(r))continue;const s=r.pixels[e];if(null!=s)for(let t=0;t<f;t++)for(let e=0;e<u[l];e++)n[t*a+e+o]=s[t*r.width+e]}c.push(n)}const x=new n({width:a,height:f,mask:h,pixels:c,pixelType:r.pixelType});return x.updateStatistics(),x}function M(t,e,n){if(!i(t))return null;const{width:l,height:o}=t,r=e.x,s=e.y,a=n.width+r,f=n.height+s;if(r<0||s<0||a>l||f>o)return t;if(0===r&&0===s&&a===l&&f===o)return t;t.mask||(t.mask=new Uint8Array(l*o));const h=t.mask;for(let i=0;i<o;i++){const t=i*l;for(let e=0;e<l;e++)h[t+e]=i<s||i>=f||e<r||e>=a?0:1}return t.updateStatistics(),t}function k(t){if(!i(t))return null;const e=t.clone(),{width:n,height:l,pixels:o,mask:r}=t,s=o[0],a=e.pixels[0];for(let i=2;i<l-1;i++){const t=new Map;for(let l=i-2;l<i+2;l++)for(let e=0;e<4;e++){const i=l*n+e;C(t,s[i],r?r[i]:1)}a[i*n]=A(t),a[i*n+1]=a[i*n+2]=a[i*n];let e=3;for(;e<n-1;e++){let l=(i-2)*n+e+1;C(t,s[l],r?r[l]:1),l=(i-1)*n+e+1,C(t,s[l],r?r[l]:1),l=i*n+e+1,C(t,s[l],r?r[l]:1),l=(i+1)*n+e+1,C(t,s[l],r?r[l]:1),l=(i-2)*n+e-3,U(t,s[l],r?r[l]:1),l=(i-1)*n+e-3,U(t,s[l],r?r[l]:1),l=i*n+e-3,U(t,s[l],r?r[l]:1),l=(i+1)*n+e-3,U(t,s[l],r?r[l]:1),a[i*n+e]=A(t)}a[i*n+e+1]=a[i*n+e]}for(let i=0;i<n;i++)a[i]=a[n+i]=a[2*n+i],a[(l-1)*n+i]=a[(l-2)*n+i];return e.updateStatistics(),e}function A(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let o=l.next();for(;!o.done;)i=t.get(o.value),i>e&&(n=o.value,e=i),o=l.next();return n}function U(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function C(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function T(t,e,l){let{x:o,y:r}=e;const{width:s,height:a}=l;if(0===o&&0===r&&a===t.height&&s===t.width)return t;const{width:f,height:h}=t,u=Math.max(0,r),c=Math.max(0,o),p=Math.min(o+s,f),m=Math.min(r+a,h);if(p<0||m<0||!i(t))return null;o=Math.max(0,-o),r=Math.max(0,-r);const{pixels:x,mask:d}=t,g=s*a,y=x.length,w=[];for(let i=0;i<y;i++){const e=x[i],l=n.createEmptyBand(t.pixelType,g);for(let t=u;t<m;t++){const n=t*f;let i=(t+r-u)*s+o;for(let t=c;t<p;t++)l[i++]=e[n+t]}w.push(l)}const M=new Uint8Array(g);for(let n=u;n<m;n++){const t=n*f;let e=(n+r-u)*s+o;for(let n=c;n<p;n++)M[e++]=d?d[t+n]:1}const k=new n({width:l.width,height:l.height,pixelType:t.pixelType,pixels:w,mask:M});return k.updateStatistics(),k}function S(t,e=!0){if(!i(t))return null;const{pixels:l,width:o,height:r,mask:s,pixelType:a}=t,f=[],h=Math.round(o/2),u=Math.round(r/2),c=r-1,p=o-1;for(let i=0;i<l.length;i++){const t=l[i],s=n.createEmptyBand(a,h*u);let m=0;for(let n=0;n<r;n+=2)for(let i=0;i<o;i+=2){const l=t[n*o+i];if(e){const e=i===p?l:t[n*o+i+1],r=n===c?l:t[n*o+i+o],a=i===p?r:n===c?e:t[n*o+i+o+1];s[m++]=(l+e+r+a)/4}else s[m++]=l}f.push(s)}let m=null;if(s){m=new Uint8Array(h*u);let t=0;for(let n=0;n<r;n+=2)for(let i=0;i<o;i+=2){const l=s[n*o+i];if(e){const e=i===p?l:s[n*o+i+1],r=n===c?l:s[n*o+i+o],a=i===p?r:n===c?e:s[n*o+i+o+1];m[t++]=l*e*r*a?1:0}else m[t++]=l}}return new n({width:h,height:u,pixelType:a,pixels:f,mask:m})}function B(t,e,n){if(!i(t))return null;const{width:l,height:o}=e;let{width:r,height:s}=t;const a=new Map,f={x:0,y:0},h=null==n?1:1+n;let u=t;for(let i=0;i<h;i++){const t=Math.ceil(r/l),n=Math.ceil(s/o);for(let r=0;r<n;r++){f.y=r*o;for(let n=0;n<t;n++){f.x=n*l;const t=T(u,f,e);a.set(`${i}/${r}/${n}`,t)}}i<h-1&&(u=S(u)),r=Math.round(r/2),s=Math.round(s/2)}return a}function v(t,e,l,o,r="nearest"){if(!i(t))return null;"majority"===r&&(t=k(t));const{pixels:s,mask:a,pixelType:f}=t,h=t.width,u=t.height,c=n.getPixelArrayConstructor(f),p=s.length,{width:m,height:x}=e,d=o.cols,g=o.rows,y=Math.ceil(m/d-.1/d),w=Math.ceil(x/g-.1/g);let M,A,U,C,T,S,B,v=!1;for(let n=0;n<l.length;n+=3)-1===l[n]&&-1===l[n+1]&&-1===l[n+2]&&(v=!0);const P=y*d,b=P*w*g,O=new Float32Array(b),z=new Float32Array(b);let I,W,j=0;const D="majority"===r?0:.5;for(let n=0;n<w;n++)for(let t=0;t<y;t++){M=12*(n*y+t),A=l[M],U=l[M+1],C=l[M+2],T=l[M+3],S=l[M+4],B=l[M+5];for(let e=0;e<g;e++){j=(n*g+e)*P+t*d,W=(e+.5)/g;for(let t=0;t<e;t++)I=(t+.5)/d,O[j+t]=Math.round((A*I+U*W+C)*h-D),z[j+t]=Math.round((T*I+S*W+B)*u-D)}M+=6,A=l[M],U=l[M+1],C=l[M+2],T=l[M+3],S=l[M+4],B=l[M+5];for(let e=0;e<g;e++){j=(n*g+e)*P+t*d,W=(e+.5)/g;for(let t=e;t<d;t++)I=(t+.5)/d,O[j+t]=Math.round((A*I+U*W+C)*h-D),z[j+t]=Math.round((T*I+S*W+B)*u-D)}}const E=(t,e)=>{for(let n=0;n<x;n++){M=n*P;for(let i=0;i<m;i++)O[M]<0||z[M]<0?t[n*m+i]=0:t[n*m+i]=e[O[M]+z[M]*h],M++}},L=[];let V;for(let n=0;n<p;n++)V=new c(m*x),E(V,s[n]),L.push(V);const q=new n({width:m,height:x,pixelType:f,pixels:L});if(a)q.mask=new Uint8Array(m*x),E(q.mask,a);else if(v){q.mask=new Uint8Array(m*x);for(let t=0;t<m*x;t++)q.mask[t]=O[t]<0||z[t]<0?0:1}return q.updateStatistics(),q}t.approximateTransform=v,t.clip=T,t.colorize=r,t.createColormapLUT=o,t.createContrastBrightnessLUT=h,t.createHistogramEqualizationLUT=u,t.createStretchLUT=f,t.estimateStatisticsFromHistograms=a,t.estimateStatisticsHistograms=s,t.extractBands=l,t.getClipBounds=x,t.isValidPixelBlock=i,t.lookupPixels=p,t.mosaic=y,t.mosaicPixelData=d,t.remapColor=m,t.resampleByMajority=k,t.setValidBoundary=M,t.split=B,t.stretch=c,Object.defineProperty(t,"__esModule",{value:!0})}));
