/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../PixelBlock"],(function(t,e,n){"use strict";function i(t){return e.isSome(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function l(t,e){if(null==e||!e.length||!i(t))return t;const l=t.pixels.length;return e&&e.some((t=>t>=l))||1===l&&1===e.length&&0===e[0]?t:l!==e.length||e.some(((t,e)=>t!==e))?new n({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function o(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),o=new Uint8Array(4*l),r=[];let s,a=0,h=0;const f=5===n[0].length;if(l>65536)return n.forEach((t=>{r[t[0]-i]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:i,alphaSpecified:f};if(t.fillUnspecified)for(s=n[h],a=s[0]-i;a<l;a++)o[4*a]=s[1],o[4*a+1]=s[2],o[4*a+2]=s[3],o[4*a+3]=f?s[4]:255,a===s[0]-i&&(s=h===n.length-1?s:n[++h]);else for(a=0;a<n.length;a++)s=n[a],h=4*(s[0]-i),o[h]=s[1],o[h+1]=s[2],o[h+2]=s[3],o[h+3]=f?s[4]:255;return{indexedColormap:o,offset:i,alphaSpecified:f}}function r(t,e){if(!i(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const n=t.clone(),l=n.pixels;let o=n.mask;const r=n.width*n.height;if(1!==l.length)return t;const{indexedColormap:s,indexed2DColormap:a,offset:h,alphaSpecified:f}=e,u=s.length-1;let c=0;const m=l[0],x=new Uint8Array(m.length),p=new Uint8Array(m.length),d=new Uint8Array(m.length);let g,y=0;if(s)if(o)for(c=0;c<r;c++)o[c]&&(y=4*(m[c]-h),y<h||y>u?o[c]=0:(x[c]=s[y],p[c]=s[y+1],d[c]=s[y+2],o[c]=s[y+3]));else{for(o=new Uint8Array(r),c=0;c<r;c++)y=4*(m[c]-h),y<h||y>u?o[c]=0:(x[c]=s[y],p[c]=s[y+1],d[c]=s[y+2],o[c]=s[y+3]);n.mask=o}else if(o)for(c=0;c<r;c++)o[c]&&(g=a[m[c]],x[c]=g[0],p[c]=g[1],d[c]=g[2],o[c]=g[3]);else{for(o=new Uint8Array(r),c=0;c<r;c++)g=a[m[c]],x[c]=g[0],p[c]=g[1],d[c]=g[2],o[c]=g[3];n.mask=o}return n.pixels=[x,p,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=f,n}function s(t){if(!i(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:n,pixelType:l,statistics:o}=t,r=t.width*t.height,s=e.length;let a,h,f,u,c;const m=[],x=[];let p,d,g,y,w,M,k,A,U,C;const T=256;for(u=0;u<s;u++){if(p=new Uint32Array(T),g=e[u],"u8"===l)if(a=-.5,h=255.5,n)for(c=0;c<r;c++)n[c]&&p[g[c]]++;else for(c=0;c<r;c++)p[g[c]]++;else{if(a=o[u].minValue,h=o[u].maxValue,f=(h-a)/T,d=new Uint32Array(T+1),n)for(c=0;c<r;c++)n[c]&&d[Math.floor((g[c]-a)/f)]++;else for(c=0;c<r;c++)d[Math.floor((g[c]-a)/f)]++;for(c=0;c<255;c++)p[c]=d[c];p[255]=d[255]+d[256]}for(m.push({min:a,max:h,size:T,counts:p}),y=0,w=0,A=0,c=0;c<T;c++)y+=p[c],w+=c*p[c];for(U=w/y,c=0;c<T;c++)A+=p[c]*(c-U)**2;C=Math.sqrt(A/(y-1)),f=(h-a)/T,M=(U+.5)*f+a,k=C*f,x.push({min:a,max:h,avg:M,stddev:k})}return{statistics:x,histograms:m}}function a(t){const e=[];for(let n=0;n<t.length;n++){const{min:i,max:l,size:o,counts:r}=t[n];let s=0,a=0;for(let t=0;t<o;t++)s+=r[t],a+=t*r[t];const h=a/s;let f=0;for(let t=0;t<o;t++)f+=r[t]*(t-h)**2;const u=(l-i)/o,c=(h+.5)*u+i,m=Math.sqrt(f/(s-1))*u;e.push({min:i,max:l,avg:c,stddev:m})}return e}function h(t){const{minCutOff:e,maxCutOff:n,gamma:i,pixelType:l}=t,o=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(l))return null;const s=e.length;let a,h,u=0;"s8"===l?u=-127:"s16"===l&&(u=-32767);let c=256;["u16","s16"].indexOf(l)>-1&&(c=65536);const m=[],x=[],p=r-o;for(a=0;a<s;a++)x[a]=n[a]-e[a],m[a]=p/(n[a]-e[a]);const d=i&&i.length>=s,g=[];if(d)for(a=0;a<s;a++)i[a]>1?i[a]>2?g[a]=6.5+(i[a]-2)**2.5:g[a]=6.5+100*(2-i[a])**4:g[a]=1;let y;const w=[];let M,k,A;if(d)for(a=0;a<s;a++){for(A=[],h=0;h<c;h++)M=h+u,y=(M-e[a])/x[a],k=1,i[a]>1&&(k-=(1/p)**(y*g[a])),M<n[a]&&M>e[a]?A[h]=Math.floor(k*p*y**(1/i[a]))+o:M>=n[a]?A[h]=r:A[h]=o;w[a]=A}else for(a=0;a<s;a++){for(A=[],h=0;h<c;h++)M=h+u,M<=e[a]?A[h]=o:M>=n[a]?A[h]=r:A[h]=Math.floor((M-e[a])/x[a]*p)+o;w[a]=A}if(null!=t.contrastOffset){const e=f(t.contrastOffset,t.brightnessOffset);for(a=0;a<s;a++)for(A=w[a],h=0;h<c;h++)A[h]=e[A[h]]}return{lut:w,offset:u}}function f(t,e){const n=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(e,-100),100),l=255,o=128;let r,s;const a=new Uint8Array(256);for(r=0;r<256;r++)n>0&&n<100?s=(200*r-100*l+2*l*i)/(2*(100-n))+o:n<=0&&n>-100?s=(200*r-100*l+2*l*i)*(100+n)/2e4+o:100===n?(s=200*r-100*l+(l+1)*(100-n)+2*l*i,s=s>0?l:0):-100===n&&(s=o),a[r]=s>l?l:s<0?0:s;return a}function u(t,e=256){e=Math.min(e,256);const{size:n,counts:i}=t,l=new Uint8Array(n),o=i.reduce(((t,n)=>t+n/e),0);let r=0,s=0,a=0,h=o;for(let f=0;f<n;f++)if(a+=i[f],!(f<n-1&&a+i[f+1]<h)){for(;r<e-1&&h<a;)r++,h+=o;for(let t=s;t<=f;t++)l[t]=r;s=f+1}for(let f=s;f<n;f++)l[f]=e-1;return l}function c(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l,mask:o}=n,{minCutOff:r,maxCutOff:s,gamma:a}=e,h=e.outMin||0,f=e.outMax||255,u=n.width*n.height,c=l.length;let m,x,p,d,g;const y=f-h,w=[],M=[];for(m=0;m<c;m++)M[m]=s[m]-r[m],w[m]=y/(s[m]-r[m]);const k=a&&a.length>=c,A=[];if(k)for(m=0;m<c;m++)a[m]>1?a[m]>2?A[m]=6.5+(a[m]-2)**2.5:A[m]=6.5+100*(2-a[m])**4:A[m]=1;if(k)if(null!=o){for(x=0;x<u;x++)if(o[x])for(m=0;m<c;m++)p=l[m][x],g=(p-r[m])/M[m],d=1,a[m]>1&&(d-=(1/y)**(g*A[m])),p<s[m]&&p>r[m]?l[m][x]=Math.floor(d*y*g**(1/a[m]))+h:p>=s[m]?l[m][x]=f:l[m][x]=h}else for(x=0;x<u;x++)for(m=0;m<c;m++)p=l[m][x],g=(p-r[m])/M[m],d=1,a[m]>1&&(d-=(1/y)**(g*A[m])),p<s[m]&&p>r[m]?l[m][x]=Math.floor(d*y*g**(1/a[m]))+h:p>=s[m]?l[m][x]=f:l[m][x]=h;else if(null!=o){for(x=0;x<u;x++)if(o[x])for(m=0;m<c;m++)p=l[m][x],p<s[m]&&p>r[m]?l[m][x]=Math.floor((p-r[m])/M[m]*y)+h:p>=s[m]?l[m][x]=f:l[m][x]=h}else for(x=0;x<u;x++)for(m=0;m<c;m++)p=l[m][x],p<s[m]&&p>r[m]?l[m][x]=Math.floor((p-r[m])/M[m]*y)+h:p>=s[m]?l[m][x]=f:l[m][x]=h;return n.pixelType="u8",n.updateStatistics(),n}function m(t,e){if(!i(t))return null;const{pixels:l,mask:o}=t,r=t.width*t.height,s=l.length;let a=e.lut;const{offset:h}=e;let f,u;a&&1===a[0].length&&(a=l.map((()=>a)));const c=[];let m,x,p;if(h)if(null==o)for(f=0;f<s;f++){for(m=l[f],x=a[f],p=new Uint8Array(r),u=0;u<r;u++)p[u]=x[m[u]-h];c.push(p)}else for(f=0;f<s;f++){for(m=l[f],x=a[f],p=new Uint8Array(r),u=0;u<r;u++)o[u]&&(p[u]=x[m[u]-h]);c.push(p)}else if(null==o)for(f=0;f<s;f++){for(m=l[f],x=a[f],p=new Uint8Array(r),u=0;u<r;u++)p[u]=x[m[u]];c.push(p)}else for(f=0;f<s;f++){for(m=l[f],x=a[f],p=new Uint8Array(r),u=0;u<r;u++)o[u]&&(p[u]=x[m[u]]);c.push(p)}const d=new n({width:t.width,height:t.height,pixels:c,mask:o,pixelType:"u8"});return d.updateStatistics(),d}function x(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l}=n,o=n.width*n.height,r=e.length,s=Math.floor(r/2),a=e[Math.floor(s)],h=l[0];let f,u,c,m,x,p,d=!1;const g=new Uint8Array(o),y=new Uint8Array(o),w=new Uint8Array(o);let M=n.mask;const k=4===e[0].mappedColor.length;for(M||(M=new Uint8Array(o),M.fill(k?255:1),n.mask=M),x=0;x<o;x++)if(M[x]){for(f=h[x],d=!1,p=s,u=a,c=0,m=r-1;m-c>1;){if(f===u.value){d=!0;break}f>u.value?c=p:m=p,p=Math.floor((c+m)/2),u=e[Math.floor(p)]}d||(f===e[c].value?(u=e[c],d=!0):f===e[m].value?(u=e[m],d=!0):f<e[c].value?(d=!1,u=null):f>e[c].value&&(f<e[m].value?(u=e[c],d=!0):m===r-1?(d=!1,u=null):(u=e[m],d=!0))),d?(g[x]=u.mappedColor[0],y[x]=u.mappedColor[1],w[x]=u.mappedColor[2],M[x]=u.mappedColor[3]):g[x]=y[x]=w[x]=M[x]=0}return n.pixels=[g,y,w],n.mask=M,n.pixelType="u8",n.maskIsAlpha=k,n}function p(t,e,n,i,l,o,r,s){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:o<=i*e?0:o<i*e+e?o-i*e:e,xmax:l+r<=n*t?0:l+r<n*t+t?l+r-n*t:t,ymax:o+s<=i*e?0:o+s<i*e+e?o+s-i*e:e}}function d(t,n){if(!t||0===t.length)return null;const i=t.filter((t=>t.pixelBlock))[0];if(!i||e.isNone(i.pixelBlock))return null;const l=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,o=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(l,o),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,s.map((t=>t.extent.xmin))),h=Math.min.apply(null,s.map((t=>t.extent.ymin))),f=Math.max.apply(null,s.map((t=>t.extent.xmax))),u=Math.max.apply(null,s.map((t=>t.extent.ymax))),c={x:Math.round((n.xmin-a)/l),y:Math.round((u-n.ymax)/o)},m={width:Math.round((f-a)/l),height:Math.round((u-h)/o)},x={width:Math.round((n.xmax-n.xmin)/l),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(m.width/i.pixelBlock.width)*Math.round(m.height/i.pixelBlock.height)!==s.length||c.x<0||c.y<0||m.width<x.width||m.height<x.height)return null;return{extent:n,pixelBlock:y(s.map((t=>t.pixelBlock)),m,c,x)}}function g(t,e,n,i,l,o){const{width:r,height:s}=n.block,{x:a,y:h}=n.offset,{width:f,height:u}=n.mosaic,c=p(r,s,i,l,a,h,f,u);let m=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth,e=r*o.resolutionX,n=o.startX+i*e,l=n+e;n<t&&l>t?x=o.rightPadding:n>=t&&(m=o.leftMargin-o.rightPadding,x=0)}if(c.xmax-=x,"number"!=typeof e)for(let p=c.ymin;p<c.ymax;p++){const n=(l*s+p-h)*f+(i*r-a)+m,o=p*r;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e[o+i]}else for(let p=c.ymin;p<c.ymax;p++){const n=(l*s+p-h)*f+(i*r-a)+m;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e}}function y(t,l,o,r,s){const a=t.filter((t=>i(t)))[0];if(e.isNone(a))return null;const h=r?r.width:l.width,f=r?r.height:l.height,u=a.width,c=a.height,m=l.width/u,x=l.height/c,p={offset:o||{x:0,y:0},mosaic:r||l,block:{width:u,height:c}},d=a.pixelType,y=n.getPixelArrayConstructor(d),w=a.pixels.length,M=[];let k,A;for(let e=0;e<w;e++){A=new y(h*f);for(let n=0;n<x;n++)for(let l=0;l<m;l++){const o=t[n*m+l];i(o)&&(k=o.pixels[e],g(A,k,p,l,n,s))}M.push(A)}let U;if(t.some((t=>e.isNone(t)||t.mask&&t.mask.length>0))){U=new Uint8Array(h*f);for(let n=0;n<x;n++)for(let i=0;i<m;i++){const l=t[n*m+i],o=e.isSome(l)?l.mask:null;g(U,o||(l?1:0),p,i,n,s)}}const C=new n({width:h,height:f,pixels:M,pixelType:d,mask:U});return C.updateStatistics(),C}function w(t,e,n){if(!i(t))return null;const{width:l,height:o}=t,r=e.x,s=e.y,a=n.width+r,h=n.height+s;if(r<0||s<0||a>l||h>o)return t;if(0===r&&0===s&&a===l&&h===o)return t;t.mask||(t.mask=new Uint8Array(l*o));const f=t.mask;for(let i=0;i<o;i++){const t=i*l;for(let e=0;e<l;e++)f[t+e]=i<s||i>=h||e<r||e>=a?0:1}return t.updateStatistics(),t}function M(t){if(!i(t))return null;const e=t.clone(),{width:n,height:l,pixels:o,mask:r}=t,s=o[0],a=e.pixels[0];for(let i=2;i<l-1;i++){const t=new Map;for(let l=i-2;l<i+2;l++)for(let e=0;e<4;e++){const i=l*n+e;U(t,s[i],r?r[i]:1)}a[i*n]=k(t),a[i*n+1]=a[i*n+2]=a[i*n];let e=3;for(;e<n-1;e++){let l=(i-2)*n+e+1;U(t,s[l],r?r[l]:1),l=(i-1)*n+e+1,U(t,s[l],r?r[l]:1),l=i*n+e+1,U(t,s[l],r?r[l]:1),l=(i+1)*n+e+1,U(t,s[l],r?r[l]:1),l=(i-2)*n+e-3,A(t,s[l],r?r[l]:1),l=(i-1)*n+e-3,A(t,s[l],r?r[l]:1),l=i*n+e-3,A(t,s[l],r?r[l]:1),l=(i+1)*n+e-3,A(t,s[l],r?r[l]:1),a[i*n+e]=k(t)}a[i*n+e+1]=a[i*n+e]}for(let i=0;i<n;i++)a[i]=a[n+i]=a[2*n+i],a[(l-1)*n+i]=a[(l-2)*n+i];return e.updateStatistics(),e}function k(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let o=l.next();for(;!o.done;)i=t.get(o.value),i>e&&(n=o.value,e=i),o=l.next();return n}function A(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function U(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function C(t,e,l){let{x:o,y:r}=e;const{width:s,height:a}=l;if(0===o&&0===r&&a===t.height&&s===t.width)return t;const{width:h,height:f}=t,u=Math.max(0,r),c=Math.max(0,o),m=Math.min(o+s,h),x=Math.min(r+a,f);if(m<0||x<0||!i(t))return null;o=Math.max(0,-o),r=Math.max(0,-r);const{pixels:p,mask:d}=t,g=s*a,y=p.length,w=[];for(let i=0;i<y;i++){const e=p[i],l=n.createEmptyBand(t.pixelType,g);for(let t=u;t<x;t++){const n=t*h;let i=(t+r-u)*s+o;for(let t=c;t<m;t++)l[i++]=e[n+t]}w.push(l)}const M=new Uint8Array(g);for(let n=u;n<x;n++){const t=n*h;let e=(n+r-u)*s+o;for(let n=c;n<m;n++)M[e++]=d?d[t+n]:1}const k=new n({width:l.width,height:l.height,pixelType:t.pixelType,pixels:w,mask:M});return k.updateStatistics(),k}function T(t,e=!0){if(!i(t))return null;const{pixels:l,width:o,height:r,mask:s,pixelType:a}=t,h=[],f=Math.round(o/2),u=Math.round(r/2),c=r-1,m=o-1;for(let i=0;i<l.length;i++){const t=l[i],s=n.createEmptyBand(a,f*u);let x=0;for(let n=0;n<r;n+=2)for(let i=0;i<o;i+=2){const l=t[n*o+i];if(e){const e=i===m?l:t[n*o+i+1],r=n===c?l:t[n*o+i+o],a=i===m?r:n===c?e:t[n*o+i+o+1];s[x++]=(l+e+r+a)/4}else s[x++]=l}h.push(s)}let x=null;if(s){x=new Uint8Array(f*u);let t=0;for(let n=0;n<r;n+=2)for(let i=0;i<o;i+=2){const l=s[n*o+i];if(e){const e=i===m?l:s[n*o+i+1],r=n===c?l:s[n*o+i+o],a=i===m?r:n===c?e:s[n*o+i+o+1];x[t++]=l*e*r*a?1:0}else x[t++]=l}}return new n({width:f,height:u,pixelType:a,pixels:h,mask:x})}function S(t,e,n){if(!i(t))return null;const{width:l,height:o}=e;let{width:r,height:s}=t;const a=new Map,h={x:0,y:0},f=null==n?1:1+n;let u=t;for(let i=0;i<f;i++){const t=Math.ceil(r/l),n=Math.ceil(s/o);for(let r=0;r<n;r++){h.y=r*o;for(let n=0;n<t;n++){h.x=n*l;const t=C(u,h,e);a.set(`${i}/${r}/${n}`,t)}}i<f-1&&(u=T(u)),r=Math.round(r/2),s=Math.round(s/2)}return a}function B(t,e,l,o,r="nearest"){if(!i(t))return null;"majority"===r&&(t=M(t));const{pixels:s,mask:a,pixelType:h}=t,f=t.width,u=t.height,c=n.getPixelArrayConstructor(h),m=s.length,{width:x,height:p}=e,d=o.cols,g=o.rows,y=Math.ceil(x/d-.1/d),w=Math.ceil(p/g-.1/g);let k,A,U,C,T,S,B,v=!1;for(let n=0;n<l.length;n+=3)-1===l[n]&&-1===l[n+1]&&-1===l[n+2]&&(v=!0);const P=y*d,O=P*w*g,b=new Float32Array(O),z=new Float32Array(O);let j,D,E=0;const I="majority"===r?0:.5;for(let n=0;n<w;n++)for(let t=0;t<y;t++){k=12*(n*y+t),A=l[k],U=l[k+1],C=l[k+2],T=l[k+3],S=l[k+4],B=l[k+5];for(let e=0;e<g;e++){E=(n*g+e)*P+t*d,D=(e+.5)/g;for(let t=0;t<e;t++)j=(t+.5)/d,b[E+t]=Math.round((A*j+U*D+C)*f-I),z[E+t]=Math.round((T*j+S*D+B)*u-I)}k+=6,A=l[k],U=l[k+1],C=l[k+2],T=l[k+3],S=l[k+4],B=l[k+5];for(let e=0;e<g;e++){E=(n*g+e)*P+t*d,D=(e+.5)/g;for(let t=e;t<d;t++)j=(t+.5)/d,b[E+t]=Math.round((A*j+U*D+C)*f-I),z[E+t]=Math.round((T*j+S*D+B)*u-I)}}const L=(t,e)=>{for(let n=0;n<p;n++){k=n*P;for(let i=0;i<x;i++)b[k]<0||z[k]<0?t[n*x+i]=0:t[n*x+i]=e[b[k]+z[k]*f],k++}},V=[];let q;for(let n=0;n<m;n++)q=new c(x*p),L(q,s[n]),V.push(q);const F=new n({width:x,height:p,pixelType:h,pixels:V});if(a)F.mask=new Uint8Array(x*p),L(F.mask,a);else if(v){F.mask=new Uint8Array(x*p);for(let t=0;t<x*p;t++)F.mask[t]=b[t]<0||z[t]<0?0:1}return F.updateStatistics(),F}t.approximateTransform=B,t.clip=C,t.colorize=r,t.createColormapLUT=o,t.createContrastBrightnessLUT=f,t.createHistogramEqualizationLUT=u,t.createStretchLUT=h,t.estimateStatisticsFromHistograms=a,t.estimateStatisticsHistograms=s,t.extractBands=l,t.getClipBounds=p,t.isValidPixelBlock=i,t.lookupPixels=m,t.mosaic=y,t.mosaicPixelData=d,t.remapColor=x,t.resampleByMajority=M,t.setValidBoundary=w,t.split=S,t.stretch=c,Object.defineProperty(t,"__esModule",{value:!0})}));
