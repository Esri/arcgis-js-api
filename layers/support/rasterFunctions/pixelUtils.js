/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../PixelBlock"],(function(t,e,n){"use strict";var i,l;function o(t){return e.isSome(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function s(t,e){if(!e?.length||!o(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new n({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function r(t){if(!t?.length||t.some((t=>!o(t))))return null;if(1===t.length)return e.isSome(t[0])?t[0].clone():null;const i=t,{width:l,height:s,pixelType:r}=i[0];if(i.some((t=>t.width!==l||t.height!==s)))return null;const a=i.map((({mask:t})=>t)).filter((t=>null!=t));let h=null;a.length&&(h=new Uint8Array(l*s),h.set(a[0]),a.length>1&&d(a.slice(1),h));const f=[];i.forEach((({pixels:t})=>f.push(...t)));const c=i.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new n({pixelType:r,width:l,height:s,mask:h,pixels:f,statistics:u.length?u:null})}function a(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),o=new Uint8Array(4*l),s=[];let r,a=0,h=0;const f=5===n[0].length;if(l>65536)return n.forEach((t=>{s[t[0]-i]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:i,alphaSpecified:f};if(t.fillUnspecified)for(r=n[h],a=r[0]-i;a<l;a++)o[4*a]=r[1],o[4*a+1]=r[2],o[4*a+2]=r[3],o[4*a+3]=f?r[4]:255,a===r[0]-i&&(r=h===n.length-1?r:n[++h]);else for(a=0;a<n.length;a++)r=n[a],h=4*(r[0]-i),o[h]=r[1],o[h+1]=r[2],o[h+2]=r[3],o[h+3]=f?r[4]:255;return{indexedColormap:o,offset:i,alphaSpecified:f}}function h(t,n){if(!o(t))return t;if(!n||!n.indexedColormap&&!n.indexed2DColormap)return t;const i=t.clone(),l=i.pixels;let s=i.mask;const r=i.width*i.height;if(1!==l.length)return t;const{indexedColormap:a,indexed2DColormap:h,offset:f,alphaSpecified:c}=n;let u=0;const p=l[0],m=new Uint8Array(p.length),x=new Uint8Array(p.length),d=new Uint8Array(p.length);let g,y=0;if(a){const t=a.length-1;if(e.isSome(s))for(u=0;u<r;u++)s[u]&&(y=4*(p[u]-f),y<f||y>t?s[u]=0:(m[u]=a[y],x[u]=a[y+1],d[u]=a[y+2],s[u]=a[y+3]));else{for(s=new Uint8Array(r),u=0;u<r;u++)y=4*(p[u]-f),y<f||y>t?s[u]=0:(m[u]=a[y],x[u]=a[y+1],d[u]=a[y+2],s[u]=a[y+3]);i.mask=s}}else if(h)if(e.isSome(s))for(u=0;u<r;u++)s[u]&&(g=h[p[u]],m[u]=g[0],x[u]=g[1],d[u]=g[2],s[u]=g[3]);else{for(s=new Uint8Array(r),u=0;u<r;u++)g=h[p[u]],m[u]=g[0],x[u]=g[1],d[u]=g[2],s[u]=g[3];i.mask=s}return i.pixels=[m,x,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=c,i}function f(t,e){if(!o(t))return null;const{pixels:i,mask:l}=t,s=i.length;let r=e.lut;const{offset:a}=e;r&&1===r[0].length&&(r=i.map((()=>r)));const h=[],f=e.outputPixelType||"u8";for(let n=0;n<s;n++){const t=c(i[n],l,r[n],a||0,f);h.push(t)}const u=new n({width:t.width,height:t.height,pixels:h,mask:l,pixelType:f});return u.updateStatistics(),u}function c(t,e,i,l,o){const s=t.length,r=n.createEmptyBand(o,s);if(e)for(let n=0;n<s;n++)e[n]&&(r[n]=i[t[n]-l]);else for(let n=0;n<s;n++)r[n]=i[t[n]-l];return r}function u(t,e){if(!o(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,s=e.length,r=Math.floor(s/2),a=e[Math.floor(r)],h=i[0];let f,c,u,p,m,x,d=!1;const g=new Uint8Array(l),y=new Uint8Array(l),w=new Uint8Array(l);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(l),k.fill(M?255:1),n.mask=k),m=0;m<l;m++)if(k[m]){for(f=h[m],d=!1,x=r,c=a,u=0,p=s-1;p-u>1;){if(f===c.value){d=!0;break}f>c.value?u=x:p=x,x=Math.floor((u+p)/2),c=e[Math.floor(x)]}d||(f===e[u].value?(c=e[u],d=!0):f===e[p].value?(c=e[p],d=!0):f<e[u].value?(d=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],d=!0):p===s-1?(d=!1,c=null):(c=e[p],d=!0))),d?(g[m]=c.mappedColor[0],y[m]=c.mappedColor[1],w[m]=c.mappedColor[2],k[m]=c.mappedColor[3]):g[m]=y[m]=w[m]=k[m]=0}return n.pixels=[g,y,w],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function p(t,e){if(!o(t))return null;const{width:i,height:l}=t,{inputRanges:s,outputValues:r,outputPixelType:a,noDataRanges:h,allowUnmatched:f}=e,c=t.pixels[0],u=n.createEmptyBand(a,c.length);f&&u.set(c);const p=t.mask,m=s.length/2;for(let n=0;n<l;n++)for(let t=0;t<i;t++){const e=n*i+t;if(!p||p[e]){const t=c[e];for(let n=m-1;n>=0;n--)if(t>=s[2*n]&&t<=s[2*n+1]){u[e]=r[n];break}}}let x=p;if(h?.length){x=new Uint8Array(i*l),p&&x.set(p);for(let t=0;t<l;t++)for(let e=0;e<i;e++){const n=t*i+e;if(!p||p[n]){const t=c[n];for(let e=0;e<m;e+=2)if(t>=h[e]&&t<=h[e+1]){u[n]=0,x[n]=0;break}}}}return new n({width:i,height:l,pixelType:a,pixels:[u],mask:x})}function m(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,s=!!e?.length;for(let r=0;r<t.length;r++)if(i[r]){const n=t[r];if(s){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[r]=0)}i[r]&&(n===o||l?.has(n))&&(i[r]=0)}}function x(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function d(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function g(t,e){if(!o(t))return null;const{width:i,height:l,pixels:s}=t,r=i*l,a=new Uint8Array(r);t.mask?a.set(t.mask):a.fill(255);const h=s.length,{includedRanges:f,noDataValues:u,outputPixelType:p,matchAll:g,lookup:y}=e;if(y){const t=[];for(let e=0;e<h;e++){const n=c(s[e],a,y.lut,y.offset||0,"u8");t.push(n)}1===t.length?a.set(t[0]):g?x(t,a):d(t,a)}else if(g){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(r);n.set(a),m(s[e],f,u,n),t.push(n)}1===t.length?a.set(t[0]):x(t,a)}else for(let n=0;n<h;n++)m(s[n],f,u,a);return new n({width:i,height:l,pixelType:p,pixels:s,mask:a})}function y(t,e,i){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const l=t.includes("16")?65536:256,o=t.includes("s")?-l/2:0,s=n.createEmptyBand(t,l);for(let n=0;n<e.length;n++){const t=i[n],l=Math.ceil(e[2*n]-o),r=Math.floor(e[2*n+1]-o);for(let e=l;e<=r;e++)s[e]=t}return{lut:s,offset:o}}function w(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,o=new Uint8Array(i);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-l),n=Math.floor(e[2*s+1]-l);for(let e=t;e<=n;e++)o[e]=255}if(n)for(let s=0;s<n.length;s++)o[n[s]-l]=0;return{lut:o,offset:l}}function k(t,e,n,i,l,o,s,r){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:o<=i*e?0:o<i*e+e?o-i*e:e,xmax:l+s<=n*t?0:l+s<n*t+t?l+s-n*t:t,ymax:o+r<=i*e?0:o+r<i*e+e?o+r-i*e:e}}function M(t,n){if(!t||0===t.length)return null;const i=t.find((t=>t.pixelBlock));if(!i||e.isNone(i.pixelBlock))return null;const l=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,o=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,s=.01*Math.min(l,o),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,r.map((t=>t.extent.xmin))),h=Math.min.apply(null,r.map((t=>t.extent.ymin))),f=Math.max.apply(null,r.map((t=>t.extent.xmax))),c=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((n.xmin-a)/l),y:Math.round((c-n.ymax)/o)},p={width:Math.round((f-a)/l),height:Math.round((c-h)/o)},m={width:Math.round((n.xmax-n.xmin)/l),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==r.length||u.x<0||u.y<0||p.width<m.width||p.height<m.height)return null;return{extent:n,pixelBlock:T(r.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:m})}}function A(t,e,n,i,l,o){const{width:s,height:r}=n.block,{x:a,y:h}=n.offset,{width:f,height:c}=n.mosaic,u=k(s,r,i,l,a,h,f,c);let p=0,m=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=s*o.resolutionX,n=o.startX+i*e,l=n+e;n<t&&l>t?m=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,m=0)}if(u.xmax-=m,"number"!=typeof e)for(let x=u.ymin;x<u.ymax;x++){const n=(l*r+x-h)*f+(i*s-a)+p,o=x*s;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e[o+i]}else for(let x=u.ymin;x<u.ymax;x++){const n=(l*r+x-h)*f+(i*s-a)+p;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e}}function T(t,i,l={}){const{clipOffset:s,clipSize:r,alignmentInfo:a,blockWidths:h}=l;if(h)return S(t,i,{blockWidths:h});const f=t.find((t=>o(t)));if(e.isNone(f))return null;const c=r?r.width:i.width,u=r?r.height:i.height,p=f.width,m=f.height,x=i.width/p,d=i.height/m,g={offset:s||{x:0,y:0},mosaic:r||i,block:{width:p,height:m}},y=f.pixelType,w=n.getPixelArrayConstructor(y),k=f.pixels.length,M=[];let T,U;for(let e=0;e<k;e++){U=new w(c*u);for(let n=0;n<d;n++)for(let i=0;i<x;i++){const l=t[n*x+i];o(l)&&(T=l.pixels[e],A(U,T,g,i,n,a))}M.push(U)}let B;if(t.some((t=>e.isNone(t)||e.isSome(t.mask)&&t.mask.length>0))){B=new Uint8Array(c*u);for(let n=0;n<d;n++)for(let i=0;i<x;i++){const l=t[n*x+i],o=e.isSome(l)?l.mask:null;e.isSome(o)?A(B,o,g,i,n,a):A(B,l?1:0,g,i,n,a)}}const C=new n({width:c,height:u,pixels:M,pixelType:y,mask:B});return C.updateStatistics(),C}function S(t,i,l){const s=t.find((t=>e.isSome(t)));if(e.isNone(s))return null;const r=t.some((t=>!e.isSome(t)||!!t.mask)),{width:a,height:h}=i,f=r?new Uint8Array(a*h):null,{blockWidths:c}=l,u=[],p=s.getPlaneCount(),m=n.getPixelArrayConstructor(s.pixelType);if(r)for(let n=0,d=0;n<t.length;d+=c[n],n++){const i=t[n];if(!o(i))continue;const l=e.unwrap(i.mask);for(let t=0;t<h;t++)for(let e=0;e<c[n];e++)f[t*a+e+d]=null==l?255:l[t*i.width+e]}for(let e=0;e<p;e++){const n=new m(a*h);for(let i=0,l=0;i<t.length;l+=c[i],i++){const s=t[i];if(!o(s))continue;const r=s.pixels[e];if(null!=r)for(let t=0;t<h;t++)for(let e=0;e<c[i];e++)n[t*a+e+l]=r[t*s.width+e]}u.push(n)}const x=new n({width:a,height:h,mask:f,pixels:u,pixelType:s.pixelType});return x.updateStatistics(),x}function U(t,e,n){if(!o(t))return null;const{width:i,height:l}=t,s=e.x,r=e.y,a=n.width+s,h=n.height+r;if(s<0||r<0||a>i||h>l)return t;if(0===s&&0===r&&a===i&&h===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const f=t.mask;for(let o=0;o<l;o++){const t=o*i;for(let e=0;e<i;e++)f[t+e]=o<r||o>=h||e<s||e>=a?0:1}return t.updateStatistics(),t}function B(t){if(!o(t))return null;const n=t.clone(),{width:i,height:l,pixels:s}=t,r=s[0],a=n.pixels[0],h=e.unwrap(t.mask);for(let e=2;e<l-1;e++){const t=new Map;for(let l=e-2;l<e+2;l++)for(let e=0;e<4;e++){const n=l*i+e;P(t,r[n],h?h[n]:1)}a[e*i]=C(t),a[e*i+1]=a[e*i+2]=a[e*i];let n=3;for(;n<i-1;n++){let l=(e-2)*i+n+1;P(t,r[l],h?h[l]:1),l=(e-1)*i+n+1,P(t,r[l],h?h[l]:1),l=e*i+n+1,P(t,r[l],h?h[l]:1),l=(e+1)*i+n+1,P(t,r[l],h?h[l]:1),l=(e-2)*i+n-3,b(t,r[l],h?h[l]:1),l=(e-1)*i+n-3,b(t,r[l],h?h[l]:1),l=e*i+n-3,b(t,r[l],h?h[l]:1),l=(e+1)*i+n-3,b(t,r[l],h?h[l]:1),a[e*i+n]=C(t)}a[e*i+n+1]=a[e*i+n]}for(let e=0;e<i;e++)a[e]=a[i+e]=a[2*i+e],a[(l-1)*i+e]=a[(l-2)*i+e];return n.updateStatistics(),n}function C(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let o=l.next();for(;!o.done;)i=t.get(o.value),i>e&&(n=o.value,e=i),o=l.next();return n}function b(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function P(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function v(t,i,l){let{x:s,y:r}=i;const{width:a,height:h}=l;if(0===s&&0===r&&h===t.height&&a===t.width)return t;const{width:f,height:c}=t,u=Math.max(0,r),p=Math.max(0,s),m=Math.min(s+a,f),x=Math.min(r+h,c);if(m<0||x<0||!o(t))return null;s=Math.max(0,-s),r=Math.max(0,-r);const{pixels:d}=t,g=a*h,y=d.length,w=[];for(let e=0;e<y;e++){const i=d[e],l=n.createEmptyBand(t.pixelType,g);for(let t=u;t<x;t++){const e=t*f;let n=(t+r-u)*a+s;for(let t=p;t<m;t++)l[n++]=i[e+t]}w.push(l)}const k=new Uint8Array(g),M=e.unwrap(t.mask);for(let e=u;e<x;e++){const t=e*f;let n=(e+r-u)*a+s;for(let e=p;e<m;e++)k[n++]=M?M[t+e]:1}const A=new n({width:l.width,height:l.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function N(t,i=!0){if(!o(t))return null;const{pixels:l,width:s,height:r,mask:a,pixelType:h}=t,f=[],c=Math.round(s/2),u=Math.round(r/2),p=r-1,m=s-1;for(let e=0;e<l.length;e++){const t=l[e],o=n.createEmptyBand(h,c*u);let a=0;for(let e=0;e<r;e+=2)for(let n=0;n<s;n+=2){const l=t[e*s+n];if(i){const i=n===m?l:t[e*s+n+1],r=e===p?l:t[e*s+n+s],h=n===m?r:e===p?i:t[e*s+n+s+1];o[a++]=(l+i+r+h)/4}else o[a++]=l}f.push(o)}let x=null;if(e.isSome(a)){x=new Uint8Array(c*u);let t=0;for(let e=0;e<r;e+=2)for(let n=0;n<s;n+=2){const l=a[e*s+n];if(i){const i=n===m?l:a[e*s+n+1],o=e===p?l:a[e*s+n+s],r=n===m?o:e===p?i:a[e*s+n+s+1];x[t++]=l*i*o*r?1:0}else x[t++]=l}}return new n({width:c,height:u,pixelType:h,pixels:f,mask:x})}function _(t,e,n){if(!o(t))return null;const{width:i,height:l}=e;let{width:s,height:r}=t;const a=new Map,h={x:0,y:0},f=null==n?1:1+n;let c=t;for(let o=0;o<f;o++){const t=Math.ceil(s/i),n=Math.ceil(r/l);for(let s=0;s<n;s++){h.y=s*l;for(let n=0;n<t;n++){h.x=n*i;const t=v(c,h,e);a.set(`${o}/${s}/${n}`,t)}}o<f-1&&(c=N(c)),s=Math.round(s/2),r=Math.round(r/2)}return a}function D(t,e,n,i,l=.5){const{width:o,height:s}=t,{width:r,height:a}=e,h=i.cols,f=i.rows,c=Math.ceil(r/h-.1/h),u=Math.ceil(a/f-.1/f);let p,m,x,d,g,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),T=new Float32Array(M),S=new Uint32Array(M),U=new Uint32Array(M);let B,C,b=0;for(let P=0;P<u;P++)for(let t=0;t<c;t++){p=12*(P*c+t),m=n[p],x=n[p+1],d=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){b=(P*f+e)*k+t*h,C=(e+.5)/f;for(let t=0;t<e;t++)B=(t+.5)/h,A[b+t]=(m*B+x*C+d)*o-l,T[b+t]=(g*B+y*C+w)*s-l,S[b+t]=Math.round(A[b+t]),U[b+t]=Math.round(T[b+t])}p+=6,m=n[p],x=n[p+1],d=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){b=(P*f+e)*k+t*h,C=(e+.5)/f;for(let t=e;t<h;t++)B=(t+.5)/h,A[b+t]=(m*B+x*C+d)*o-l,T[b+t]=(g*B+y*C+w)*s-l,S[b+t]=Math.round(A[b+t]),U[b+t]=Math.round(T[b+t])}}return{offsets_x:A,offsets_y:T,offsets_xi:S,offsets_yi:U,gridWidth:k}}function I(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:o,gridWidth:s}=D(t,t,n,{rows:i[0],cols:i[1]},.5),{width:r,height:a}=t,h=new Float32Array(r*a),f=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<r;t++){const e=c*s+t,n=0===c?e:e-s,i=c===a-1?e:e+s,u=l[n]-l[i],p=o[i]-o[n];if(isNaN(u)||isNaN(p))h[c*r+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,h[c*r+t]=e}}return h}function E(t,i,l,s,r="nearest"){if(!o(t))return null;"majority"===r&&(t=B(t));const{pixels:a,mask:h,pixelType:f}=t,c=t.width,u=t.height,p=n.getPixelArrayConstructor(f),m=a.length,{width:x,height:d}=i;let g=!1;for(let e=0;e<l.length;e+=3)-1===l[e]&&-1===l[e+1]&&-1===l[e+2]&&(g=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=D({width:c,height:u},i,l,s,"majority"===r?0:.5);let T;const S=(t,e,n)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let l=0;l<d;l++){T=l*A;for(let o=0;o<x;o++){if(y[T]<0||w[T]<0)t[l*x+o]=0;else if(n)t[l*x+o]=e[k[T]+M[T]*c];else{const n=Math.floor(y[T]),s=Math.floor(w[T]),r=Math.ceil(y[T]),a=Math.ceil(w[T]),f=y[T]-n,u=w[T]-s;if(!h||h[n+s*c]&&h[n+s*c]&&h[n+a*c]&&h[r+a*c]){const h=(1-f)*e[n+s*c]+f*e[r+s*c],p=(1-f)*e[n+a*c]+f*e[r+a*c];t[l*x+o]=(1-u)*h+u*p+i}else t[l*x+o]=e[k[T]+M[T]*c]}T++}}},U=[];let C;for(let e=0;e<m;e++)C=new p(x*d),S(C,a[e],"nearest"===r||"majority"===r),U.push(C);const b=new n({width:x,height:d,pixelType:f,pixels:U});if(e.isSome(h))b.mask=new Uint8Array(x*d),S(b.mask,h,!0);else if(g){b.mask=new Uint8Array(x*d);for(let t=0;t<x*d;t++)b.mask[t]=y[t]<0||w[t]<0?0:1}return b.updateStatistics(),b}t.NoDataInterpretation=void 0,(i=t.NoDataInterpretation||(t.NoDataInterpretation={}))[i.matchAny=0]="matchAny",i[i.matchAll=1]="matchAll",t.MissingBandAction=void 0,(l=t.MissingBandAction||(t.MissingBandAction={}))[l.bestMatch=0]="bestMatch",l[l.fail=1]="fail",t.approximateTransform=E,t.clip=v,t.colorize=h,t.compositeBands=r,t.createColormapLUT=a,t.createMaskLUT=w,t.createRemapLUT=y,t.extractBands=s,t.getClipBounds=k,t.getLocalArithmeticNorthRotations=I,t.isValidPixelBlock=o,t.lookupBandValues=c,t.lookupPixels=f,t.mask=g,t.mosaic=T,t.mosaicPixelData=M,t.remap=p,t.remapColor=u,t.resampleByMajority=B,t.setValidBoundary=U,t.split=_,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
