/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../core/maybe","../PixelBlock","../rasterFormats/pixelRangeUtils"],(function(t,e,n,i){"use strict";var l,o;t.NoDataInterpretation=void 0,(l=t.NoDataInterpretation||(t.NoDataInterpretation={}))[l.matchAny=0]="matchAny",l[l.matchAll=1]="matchAll",t.MissingBandAction=void 0,(o=t.MissingBandAction||(t.MissingBandAction={}))[o.bestMatch=0]="bestMatch",o[o.fail=1]="fail";const s=6;function r(t){return e.isSome(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function a(t,e){if(!e?.length||!r(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new n({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function h(t){if(!t?.length||t.some((t=>!r(t))))return null;if(1===t.length)return e.isSome(t[0])?t[0].clone():null;const i=t,{width:l,height:o,pixelType:s}=i[0];if(i.some((t=>t.width!==l||t.height!==o)))return null;const a=i.map((({mask:t})=>t)).filter((t=>null!=t));let h=null;a.length&&(h=new Uint8Array(l*o),h.set(a[0]),a.length>1&&y(a.slice(1),h));const f=[];i.forEach((({pixels:t})=>f.push(...t)));const c=i.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new n({pixelType:s,width:l,height:o,mask:h,pixels:f,statistics:u.length?u:null})}function f(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),o=new Uint8Array(4*l),s=[];let r,a=0,h=0;const f=5===n[0].length;if(l>65536)return n.forEach((t=>{s[t[0]-i]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:i,alphaSpecified:f};if(t.fillUnspecified)for(r=n[h],a=r[0]-i;a<l;a++)o[4*a]=r[1],o[4*a+1]=r[2],o[4*a+2]=r[3],o[4*a+3]=f?r[4]:255,a===r[0]-i&&(r=h===n.length-1?r:n[++h]);else for(a=0;a<n.length;a++)r=n[a],h=4*(r[0]-i),o[h]=r[1],o[h+1]=r[2],o[h+2]=r[3],o[h+3]=f?r[4]:255;return{indexedColormap:o,offset:i,alphaSpecified:f}}function c(t,n){if(!r(t))return t;if(!n||!n.indexedColormap&&!n.indexed2DColormap)return t;const i=t.clone(),l=i.pixels;let o=i.mask;const s=i.width*i.height;if(1!==l.length)return t;const{indexedColormap:a,indexed2DColormap:h,offset:f,alphaSpecified:c}=n;let u=0;const p=l[0],m=new Uint8Array(p.length),x=new Uint8Array(p.length),g=new Uint8Array(p.length);let d,y=0;if(a){const t=a.length-1;if(e.isSome(o))for(u=0;u<s;u++)o[u]&&(y=4*(p[u]-f),y<f||y>t?o[u]=0:(m[u]=a[y],x[u]=a[y+1],g[u]=a[y+2],o[u]=a[y+3]));else{for(o=new Uint8Array(s),u=0;u<s;u++)y=4*(p[u]-f),y<f||y>t?o[u]=0:(m[u]=a[y],x[u]=a[y+1],g[u]=a[y+2],o[u]=a[y+3]);i.mask=o}}else if(h)if(e.isSome(o))for(u=0;u<s;u++)o[u]&&(d=h[p[u]],m[u]=d[0],x[u]=d[1],g[u]=d[2],o[u]=d[3]);else{for(o=new Uint8Array(s),u=0;u<s;u++)d=h[p[u]],m[u]=d[0],x[u]=d[1],g[u]=d[2],o[u]=d[3];i.mask=o}return i.pixels=[m,x,g],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=c,i}function u(t,e){if(!r(t))return null;const{pixels:i,mask:l}=t,o=i.length;let s=e.lut;const{offset:a}=e;s&&1===s[0].length&&(s=i.map((()=>s)));const h=[],f=e.outputPixelType||"u8";for(let n=0;n<o;n++){const t=p(i[n],l,s[n],a||0,f);h.push(t)}const c=new n({width:t.width,height:t.height,pixels:h,mask:l,pixelType:f});return c.updateStatistics(),c}function p(t,e,i,l,o){const s=t.length,r=n.createEmptyBand(o,s);if(e)for(let n=0;n<s;n++)e[n]&&(r[n]=i[t[n]-l]);else for(let n=0;n<s;n++)r[n]=i[t[n]-l];return r}function m(t,e){if(!r(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,o=e.length,s=Math.floor(o/2),a=e[Math.floor(s)],h=i[0];let f,c,u,p,m,x,g=!1;const d=new Uint8Array(l),y=new Uint8Array(l),w=new Uint8Array(l);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(l),k.fill(M?255:1),n.mask=k),m=0;m<l;m++)if(k[m]){for(f=h[m],g=!1,x=s,c=a,u=0,p=o-1;p-u>1;){if(f===c.value){g=!0;break}f>c.value?u=x:p=x,x=Math.floor((u+p)/2),c=e[Math.floor(x)]}g||(f===e[u].value?(c=e[u],g=!0):f===e[p].value?(c=e[p],g=!0):f<e[u].value?(g=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],g=!0):p===o-1?(g=!1,c=null):(c=e[p],g=!0))),g?(d[m]=c.mappedColor[0],y[m]=c.mappedColor[1],w[m]=c.mappedColor[2],k[m]=c.mappedColor[3]):d[m]=y[m]=w[m]=k[m]=0}return n.pixels=[d,y,w],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function x(t,e){if(!r(t))return null;const{width:l,height:o}=t,{inputRanges:s,outputValues:a,outputPixelType:h,noDataRanges:f,allowUnmatched:c,isLastInputRangeInclusive:u}=e,p=t.pixels[0],m=n.createEmptyBand(h,p.length),x=t.mask,g=new Uint8Array(l*o);x?g.set(x):g.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,y=s.map((t=>t-d));y[0]=s[0],y[y.length-1]=s[s.length-1]+(u?1e-6:0);const w=s.length/2,[k,M]=i.getPixelValueRange(h);for(let n=0;n<o;n++)for(let t=0;t<l;t++){const e=n*l+t;if(g[e]){const t=p[e];let n=!1;for(let i=w-1;i>=0;i--)if(t===y[2*i]||t>y[2*i]&&t<y[2*i+1]){m[e]=a[i],n=!0;break}n||(c?m[e]=t>M?M:t<k?k:t:g[e]=0)}}if(f?.length)for(let n=0;n<o;n++)for(let t=0;t<l;t++){const e=n*l+t;if(!x||x[e]){const t=p[e];for(let n=0;n<w;n+=2)if(t>=f[n]&&t<=f[n+1]){m[e]=0,g[e]=0;break}}}return new n({width:l,height:o,pixelType:h,pixels:[m],mask:g})}function g(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,s=!!e?.length;for(let r=0;r<t.length;r++)if(i[r]){const n=t[r];if(s){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[r]=0)}i[r]&&(n===o||l?.has(n))&&(i[r]=0)}}function d(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function y(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function w(t,e){if(!r(t))return null;const{width:i,height:l,pixels:o}=t,s=i*l,a=new Uint8Array(s);t.mask?a.set(t.mask):a.fill(255);const h=o.length,{includedRanges:f,noDataValues:c,outputPixelType:u,matchAll:m,lookups:x}=e;if(x){const t=[];for(let e=0;e<h;e++){const n=x[e],i=p(o[e],a,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?a.set(t[0]):m?d(t,a):y(t,a)}else if(m){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(s);n.set(a),g(o[e],f?.slice(2*e,2*e+2),c?.[e],n),t.push(n)}1===t.length?a.set(t[0]):d(t,a)}else for(let n=0;n<h;n++)g(o[n],f?.slice(2*n,2*n+2),c?.[n],a);return new n({width:i,height:l,pixelType:u,pixels:o,mask:a})}function k(t){const{srcPixelType:e,inputRanges:l,outputValues:o,allowUnmatched:s,noDataRanges:r,isLastInputRangeInclusive:a,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const f=e.includes("16")?65536:256,c=e.includes("s")?-f/2:0,u=n.createEmptyBand(h,f),p=new Uint8Array(f);s&&p.fill(255);const[m,x]=i.getPixelValueRange(h);if(l?.length&&o?.length){const t=1e-6,e=l.map((e=>e-t));e[0]=l[0],a&&(e[e.length-1]=l[l.length-1]);for(let n=0;n<e.length;n++){const t=o[n]>x?x:o[n]<m?m:o[n],i=Math.ceil(e[2*n]-c),l=Math.floor(e[2*n+1]-c);for(let e=i;e<=l;e++)u[e]=t,p[e]=255}}if(r?.length)for(let n=0;n<r.length;n++){const t=Math.ceil(r[2*n]-c),e=Math.floor(r[2*n+1]-c);for(let n=t;n<=e;n++)p[n]=0}return{lut:u,offset:c,mask:p}}function M(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,o=new Uint8Array(i);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-l),n=Math.floor(e[2*s+1]-l);for(let e=t;e<=n;e++)o[e]=255}else o.fill(255);if(n)for(let s=0;s<n.length;s++)o[n[s]-l]=0;return{lut:o,offset:l}}function A(t,e,n,i,l,o,s,r){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:o<=i*e?0:o<i*e+e?o-i*e:e,xmax:l+s<=n*t?0:l+s<n*t+t?l+s-n*t:t,ymax:o+r<=i*e?0:o+r<i*e+e?o+r-i*e:e}}function T(t,n){if(!t||0===t.length)return null;const i=t.find((t=>t.pixelBlock));if(!i||e.isNone(i.pixelBlock))return null;const l=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,o=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,s=.01*Math.min(l,o),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,r.map((t=>t.extent.xmin))),h=Math.min.apply(null,r.map((t=>t.extent.ymin))),f=Math.max.apply(null,r.map((t=>t.extent.xmax))),c=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((n.xmin-a)/l),y:Math.round((c-n.ymax)/o)},p={width:Math.round((f-a)/l),height:Math.round((c-h)/o)},m={width:Math.round((n.xmax-n.xmin)/l),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==r.length||u.x<0||u.y<0||p.width<m.width||p.height<m.height)return null;return{extent:n,pixelBlock:S(r.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:m})}}function U(t,e,n,i,l,o){const{width:s,height:r}=n.block,{x:a,y:h}=n.offset,{width:f,height:c}=n.mosaic,u=A(s,r,i,l,a,h,f,c);let p=0,m=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=s*o.resolutionX,n=o.startX+i*e;n<t&&n+e>t?m=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,m=0)}if(u.xmax-=m,"number"!=typeof e)for(let x=u.ymin;x<u.ymax;x++){const n=(l*r+x-h)*f+(i*s-a)+p,o=x*s;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e[o+i]}else for(let x=u.ymin;x<u.ymax;x++){const n=(l*r+x-h)*f+(i*s-a)+p;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e}}function S(t,i,l={}){const{clipOffset:o,clipSize:s,alignmentInfo:a,blockWidths:h}=l;if(h)return B(t,i,{blockWidths:h});const f=t.find((t=>r(t)));if(e.isNone(f))return null;const c=s?s.width:i.width,u=s?s.height:i.height,p=f.width,m=f.height,x=i.width/p,g=i.height/m,d={offset:o||{x:0,y:0},mosaic:s||i,block:{width:p,height:m}},y=f.pixelType,w=n.getPixelArrayConstructor(y),k=f.pixels.length,M=[];let A,T;for(let e=0;e<k;e++){T=new w(c*u);for(let n=0;n<g;n++)for(let i=0;i<x;i++){const l=t[n*x+i];r(l)&&(A=l.pixels[e],U(T,A,d,i,n,a))}M.push(T)}let S;if(t.some((t=>e.isNone(t)||e.isSome(t.mask)&&t.mask.length>0))){S=new Uint8Array(c*u);for(let n=0;n<g;n++)for(let i=0;i<x;i++){const l=t[n*x+i],o=e.isSome(l)?l.mask:null;e.isSome(o)?U(S,o,d,i,n,a):U(S,l?1:0,d,i,n,a)}}const P=new n({width:c,height:u,pixels:M,pixelType:y,mask:S});return P.updateStatistics(),P}function B(t,i,l){const o=t.find((t=>e.isSome(t)));if(e.isNone(o))return null;const s=t.some((t=>!e.isSome(t)||!!t.mask)),{width:a,height:h}=i,f=s?new Uint8Array(a*h):null,{blockWidths:c}=l,u=[],p=o.getPlaneCount(),m=n.getPixelArrayConstructor(o.pixelType);if(s)for(let n=0,g=0;n<t.length;g+=c[n],n++){const i=t[n];if(!r(i))continue;const l=e.unwrap(i.mask);for(let t=0;t<h;t++)for(let e=0;e<c[n];e++)f[t*a+e+g]=null==l?255:l[t*i.width+e]}for(let e=0;e<p;e++){const n=new m(a*h);for(let i=0,l=0;i<t.length;l+=c[i],i++){const o=t[i];if(!r(o))continue;const s=o.pixels[e];if(null!=s)for(let t=0;t<h;t++)for(let e=0;e<c[i];e++)n[t*a+e+l]=s[t*o.width+e]}u.push(n)}const x=new n({width:a,height:h,mask:f,pixels:u,pixelType:o.pixelType});return x.updateStatistics(),x}function P(t,e,n){if(!r(t))return null;const{width:i,height:l}=t,o=e.x,s=e.y,a=n.width+o,h=n.height+s;if(o<0||s<0||a>i||h>l)return t;if(0===o&&0===s&&a===i&&h===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const f=t.mask;for(let r=0;r<l;r++){const t=r*i;for(let e=0;e<i;e++)f[t+e]=r<s||r>=h||e<o||e>=a?0:1}return t.updateStatistics(),t}function C(t){if(!r(t))return null;const n=t.clone(),{width:i,height:l,pixels:o}=t,s=o[0],a=n.pixels[0],h=e.unwrap(t.mask);for(let e=2;e<l-1;e++){const t=new Map;for(let l=e-2;l<e+2;l++)for(let e=0;e<4;e++){const n=l*i+e;I(t,s[n],h?h[n]:1)}a[e*i]=b(t),a[e*i+1]=a[e*i+2]=a[e*i];let n=3;for(;n<i-1;n++){let l=(e-2)*i+n+1;I(t,s[l],h?h[l]:1),l=(e-1)*i+n+1,I(t,s[l],h?h[l]:1),l=e*i+n+1,I(t,s[l],h?h[l]:1),l=(e+1)*i+n+1,I(t,s[l],h?h[l]:1),l=(e-2)*i+n-3,v(t,s[l],h?h[l]:1),l=(e-1)*i+n-3,v(t,s[l],h?h[l]:1),l=e*i+n-3,v(t,s[l],h?h[l]:1),l=(e+1)*i+n-3,v(t,s[l],h?h[l]:1),a[e*i+n]=b(t)}a[e*i+n+1]=a[e*i+n]}for(let e=0;e<i;e++)a[e]=a[i+e]=a[2*i+e],a[(l-1)*i+e]=a[(l-2)*i+e];return n.updateStatistics(),n}function b(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let o=l.next();for(;!o.done;)i=t.get(o.value),i>e&&(n=o.value,e=i),o=l.next();return n}function v(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function I(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function _(t,i,l){let{x:o,y:s}=i;const{width:a,height:h}=l;if(0===o&&0===s&&h===t.height&&a===t.width)return t;const{width:f,height:c}=t,u=Math.max(0,s),p=Math.max(0,o),m=Math.min(o+a,f),x=Math.min(s+h,c);if(m<0||x<0||!r(t))return null;o=Math.max(0,-o),s=Math.max(0,-s);const{pixels:g}=t,d=a*h,y=g.length,w=[];for(let e=0;e<y;e++){const i=g[e],l=n.createEmptyBand(t.pixelType,d);for(let t=u;t<x;t++){const e=t*f;let n=(t+s-u)*a+o;for(let t=p;t<m;t++)l[n++]=i[e+t]}w.push(l)}const k=new Uint8Array(d),M=e.unwrap(t.mask);for(let e=u;e<x;e++){const t=e*f;let n=(e+s-u)*a+o;for(let e=p;e<m;e++)k[n++]=M?M[t+e]:1}const A=new n({width:l.width,height:l.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function N(t,i=!0){if(!r(t))return null;const{pixels:l,width:o,height:s,mask:a,pixelType:h}=t,f=[],c=Math.round(o/2),u=Math.round(s/2),p=s-1,m=o-1;for(let e=0;e<l.length;e++){const t=l[e],r=n.createEmptyBand(h,c*u);let a=0;for(let e=0;e<s;e+=2)for(let n=0;n<o;n+=2){const l=t[e*o+n];if(i){const i=n===m?l:t[e*o+n+1],s=e===p?l:t[e*o+n+o],h=n===m?s:e===p?i:t[e*o+n+o+1];r[a++]=(l+i+s+h)/4}else r[a++]=l}f.push(r)}let x=null;if(e.isSome(a)){x=new Uint8Array(c*u);let t=0;for(let e=0;e<s;e+=2)for(let n=0;n<o;n+=2){const l=a[e*o+n];if(i){const i=n===m?l:a[e*o+n+1],s=e===p?l:a[e*o+n+o],r=n===m?s:e===p?i:a[e*o+n+o+1];x[t++]=l*i*s*r?1:0}else x[t++]=l}}return new n({width:c,height:u,pixelType:h,pixels:f,mask:x})}function R(t,e,n){if(!r(t))return null;const{width:i,height:l}=e;let{width:o,height:s}=t;const a=new Map,h={x:0,y:0},f=null==n?1:1+n;let c=t;for(let r=0;r<f;r++){const t=Math.ceil(o/i),n=Math.ceil(s/l);for(let o=0;o<n;o++){h.y=o*l;for(let n=0;n<t;n++){h.x=n*i;const t=_(c,h,e);a.set(`${r}/${o}/${n}`,t)}}r<f-1&&(c=N(c)),o=Math.round(o/2),s=Math.round(s/2)}return a}function D(t,e,n,i,l=0){const{width:o,height:s}=t,{width:r,height:a}=e,h=i.cols,f=i.rows,c=Math.ceil(r/h-.1/h),u=Math.ceil(a/f-.1/f);let p,m,x,g,d,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),T=new Float32Array(M),U=new Uint32Array(M),S=new Uint32Array(M);let B,P,C=0;for(let b=0;b<u;b++)for(let t=0;t<c;t++){p=12*(b*c+t),m=n[p],x=n[p+1],g=n[p+2],d=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){C=(b*f+e)*k+t*h,P=(e+.5)/f;for(let t=0;t<e;t++)B=(t+.5)/h,A[C+t]=(m*B+x*P+g)*o+l,T[C+t]=(d*B+y*P+w)*s+l,U[C+t]=Math.floor(A[C+t]),S[C+t]=Math.floor(T[C+t])}p+=6,m=n[p],x=n[p+1],g=n[p+2],d=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){C=(b*f+e)*k+t*h,P=(e+.5)/f;for(let t=e;t<h;t++)B=(t+.5)/h,A[C+t]=(m*B+x*P+g)*o+l,T[C+t]=(d*B+y*P+w)*s+l,U[C+t]=Math.floor(A[C+t]),S[C+t]=Math.floor(T[C+t])}}return{offsets_x:A,offsets_y:T,offsets_xi:U,offsets_yi:S,gridWidth:k}}function E(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:o,gridWidth:s}=D(t,t,n,{rows:i[0],cols:i[1]}),{width:r,height:a}=t,h=new Float32Array(r*a),f=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<r;t++){const e=c*s+t,n=0===c?e:e-s,i=c===a-1?e:e+s,u=l[n]-l[i],p=o[i]-o[n];if(isNaN(u)||isNaN(p))h[c*r+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,h[c*r+t]=e}}return h}function W(t,i,l,o,s="nearest"){if(!r(t))return null;"majority"===s&&(t=C(t));const{pixels:a,mask:h,pixelType:f}=t,c=t.width,u=t.height,p=n.getPixelArrayConstructor(f),m=a.length,{width:x,height:g}=i;let d=!1;for(let e=0;e<l.length;e+=3)-1===l[e]&&-1===l[e+1]&&-1===l[e+2]&&(d=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=D({width:c,height:u},i,l,o,"majority"===s?.5:0);let T;const U=(t,e,n)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let l=0;l<g;l++){T=l*A;for(let o=0;o<x;o++){if(y[T]<0||w[T]<0)t[l*x+o]=0;else if(n)t[l*x+o]=e[k[T]+M[T]*c];else{const n=Math.floor(y[T]),s=Math.floor(w[T]),r=Math.ceil(y[T]),a=Math.ceil(w[T]),f=y[T]-n,u=w[T]-s;if(!h||h[n+s*c]&&h[n+s*c]&&h[n+a*c]&&h[r+a*c]){const h=(1-f)*e[n+s*c]+f*e[r+s*c],p=(1-f)*e[n+a*c]+f*e[r+a*c];t[l*x+o]=(1-u)*h+u*p+i}else t[l*x+o]=e[k[T]+M[T]*c]}T++}}},S=[];let B;for(let e=0;e<m;e++)B=new p(x*g),U(B,a[e],"nearest"===s||"majority"===s),S.push(B);const P=new n({width:x,height:g,pixelType:f,pixels:S});if(e.isSome(h))P.mask=new Uint8Array(x*g),U(P.mask,h,!0);else if(d){P.mask=new Uint8Array(x*g);for(let t=0;t<x*g;t++)P.mask[t]=y[t]<0||w[t]<0?0:1}return P.updateStatistics(),P}t.MAX_MAP_SIZE_GPU=s,t.approximateTransform=W,t.clip=_,t.colorize=c,t.compositeBands=h,t.createColormapLUT=f,t.createMaskLUT=M,t.createRemapLUT=k,t.extractBands=a,t.getClipBounds=A,t.getLocalArithmeticNorthRotations=E,t.interpolateOffsets=D,t.isValidPixelBlock=r,t.lookupBandValues=p,t.lookupPixels=u,t.mask=w,t.mosaic=S,t.mosaicPixelData=T,t.remap=x,t.remapColor=m,t.resampleByMajority=C,t.setValidBoundary=P,t.split=R,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
