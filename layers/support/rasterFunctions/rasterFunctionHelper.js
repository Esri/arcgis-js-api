/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../core/colorUtils","../../../core/Error","../../../core/lang","./AspectFunction","./BandArithmeticFunction","./ColormapFunction","./CompositeBandFunction","./ConvolutionFunction","./ExtractBandFunction","./LocalFunction","./MaskFunction","./NDVIFunction","./RemapFunction","./SlopeFunction","./StatisticsHistogramFunction","./StretchFunction"],(function(t,e,r,n,s,a,o,u,i,c,l,m,p,f,g,d,A){"use strict";const y=new Map;function F(t,e,r=["raster"],n=""){y.set(t,{desc:n,ctor:e,rasterArgumentNames:r})}function h(){const t=new Set;return y.forEach(((e,r)=>t.add(r))),t}function C(t,e){const{rasterFunctionArguments:r}=t;if(!r)return;(r.rasters||[r.raster]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&C(t,e))}))}function b(t,e){if(e=e??{},"function"in(t=n.clone(t))&&"arguments"in t&&t.arguments&&(t=k(t,e)),"rasterFunction"in t)return R(t=v(t),e);throw new r("raster-function-helper","unsupported raster function json.")}function N(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}function S(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function v(t){const{rasterFunction:e,rasterFunctionArguments:r}=t,n={};for(const s in r){let t=r[s];const e=s.toLowerCase();if("rasters"===e&&Array.isArray(t))n.rasters=t.map((t=>S(t)?v(t):t));else switch(S(t)&&(t=v(t)),e){case"dra":n.dra=t;break;case"pspower":n.psPower=t;break;case"pszfactor":n.psZFactor=t;break;case"bandids":n.bandIds=t;break;default:n[s[0].toLowerCase()+s.slice(1)]=t}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function R(t,e){const{rasterFunction:n,rasterFunctionArguments:s}=t,a=t.outputPixelType?.toLowerCase();if(null==n||!y.has(n))throw new r("raster-function-helper",`unsupported raster function: ${n}`);const o=y.get(n),u=("function"==typeof o.ctor?o.ctor:o.ctor.default).fromJSON({...t,outputPixelType:a}),{rasterArgumentNames:i}=u,c=[],l=N(s,i),m="rasters"===i[0],p=[];for(let r=0;r<l.length;r++){const t=l[r];let n;null==t||"string"==typeof t&&t.startsWith("$")?c.push(e?.raster):"string"==typeof t?e[t]&&c.push(e[t]):"number"!=typeof t&&"rasterFunction"in t&&(n=R(t,e),m||(u.functionArguments[i[r]]=n),c.push(n)),m&&p.push(n??t)}if(m&&(u.functionArguments.rasters=p),e){u.sourceRasters=c;const t=e.raster?.url;t&&(u.mainPrimaryRasterId=t)}return u}function w(t,e){if(t&&e)for(const r in t){const n=t[r];n&&"object"==typeof n&&(n.function&&n.arguments?w(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function D(t){if(!t||"object"!=typeof t)return t;if(Array.isArray(t)&&0===t.length)return 0===t.length?null:["number","string"].includes(typeof t[0])?t:t.map((t=>D(t)));if("value"in t&&["number","string","boolean"].includes(typeof t.value))return t.value;if(!("type"in t))return t;switch(t.type){case"Scalar":return t.value;case"AlgorithmicColorRamp":return V(t);case"MultiPartColorRamp":return{type:"multipart",colorRamps:t.ArrayOfColorRamp.map(V)};case"ArgumentArray":return t.elements?.length?"RasterStatistics"===t.elements[0].type?t.elements:"RasterFunctionVariable"===t.elements[0].type?t.elements.map((t=>null!=t.value?D(t.value):t.name.toLowerCase().includes("raster")?"$$":null)):t:t.elements;default:return t}}function V(t){const r=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:s}=t;if(!Array.isArray(n)){const{r:t,g:r,b:s}=e.toRGB({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,r,s,n.AlphaValue]}if(!Array.isArray(s)){const{r:t,g:r,b:n}=e.toRGB({h:s.Hue,s:s.Saturation,v:s.Value});s=[t,r,n,s.AlphaValue]}return{type:"algorithmic",algorithm:r,fromColor:n,toColor:s}}function k(t,e){e&&w(t,e);const r={};return B(t,r),r}function B(t,e){if(!t||!e)return;const{function:r,arguments:n}=t;if(!r||!n)return;e.rasterFunction=r.type.replace("Function",""),e.outputPixelType=r.pixelType;const s={};e.rasterFunctionArguments=s;for(const a in n){const t=n[a];"object"==typeof t&&("function"in t&&t.function&&t.arguments?(e.rasterFunctionArguments[a]={},B(t,e.rasterFunctionArguments[a])):"value"in t&&(s[a]=D(t.value)))}switch(s.DEM&&!s.Raster&&(s.Raster=s.DEM,delete s.DEM),e.rasterFunction){case"Stretch":T(s);break;case"Colormap":M(s);break;case"Convolution":x(s);break;case"Mask":E(s)}}function T(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function M(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}function x(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function E(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}y.set("Aspect",{desc:"Aspect Function",ctor:s,rasterArgumentNames:["raster"]}),y.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:a,rasterArgumentNames:["raster"]}),y.set("Colormap",{desc:"Colormap Function",ctor:o,rasterArgumentNames:["raster"]}),y.set("CompositeBand",{desc:"CompositeBand Function",ctor:u,rasterArgumentNames:["rasters"]}),y.set("Convolution",{desc:"Convolution Function",ctor:i,rasterArgumentNames:["raster"]}),y.set("ExtractBand",{desc:"ExtractBand Function",ctor:c,rasterArgumentNames:["raster"]}),y.set("Local",{desc:"Local Function",ctor:l,rasterArgumentNames:["rasters"]}),y.set("Mask",{desc:"Mask Function",ctor:m,rasterArgumentNames:["raster"]}),y.set("NDVI",{desc:"NDVI Function",ctor:p,rasterArgumentNames:["raster"]}),y.set("Remap",{desc:"Remap Function",ctor:f,rasterArgumentNames:["raster"]}),y.set("Slope",{desc:"Slope Function",ctor:g,rasterArgumentNames:["raster"]}),y.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:d,rasterArgumentNames:["raster"]}),y.set("Stretch",{desc:"Stretch Function",ctor:A,rasterArgumentNames:["raster"]}),t.create=b,t.getPrimaryRasterUrls=C,t.getRasterValues=N,t.getSupportedFunctions=h,t.register=F,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
