/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["require","exports"],(function(e,n){"use strict";function a(e){return Object.freeze({__proto__:null,default:e})}const t={BingMapsLayer:async()=>(await new Promise((function(n,t){e(["../BingMapsLayer"],(function(e){n(a(e))}),t)}))).default,BuildingSceneLayer:async()=>(await new Promise((function(n,t){e(["../BuildingSceneLayer"],(function(e){n(a(e))}),t)}))).default,CSVLayer:async()=>(await new Promise((function(n,t){e(["../CSVLayer"],(function(e){n(a(e))}),t)}))).default,ElevationLayer:async()=>(await new Promise((function(n,t){e(["../ElevationLayer"],(function(e){n(a(e))}),t)}))).default,FeatureLayer:async()=>(await new Promise((function(n,t){e(["../FeatureLayer"],(function(e){n(a(e))}),t)}))).default,GroupLayer:async()=>(await new Promise((function(n,t){e(["../GroupLayer"],(function(e){n(a(e))}),t)}))).default,GeoRSSLayer:async()=>(await new Promise((function(n,t){e(["../GeoRSSLayer"],(function(e){n(a(e))}),t)}))).default,ImageryLayer:async()=>(await new Promise((function(n,t){e(["../ImageryLayer"],(function(e){n(a(e))}),t)}))).default,ImageryTileLayer:async()=>(await new Promise((function(n,t){e(["../ImageryTileLayer"],(function(e){n(a(e))}),t)}))).default,IntegratedMeshLayer:async()=>(await new Promise((function(n,t){e(["../IntegratedMeshLayer"],(function(e){n(a(e))}),t)}))).default,KMLLayer:async()=>(await new Promise((function(n,t){e(["../KMLLayer"],(function(e){n(a(e))}),t)}))).default,MapImageLayer:async()=>(await new Promise((function(n,t){e(["../MapImageLayer"],(function(e){n(a(e))}),t)}))).default,MapNotesLayer:async()=>(await new Promise((function(n,t){e(["../MapNotesLayer"],(function(e){n(a(e))}),t)}))).default,OpenStreetMapLayer:async()=>(await new Promise((function(n,t){e(["../OpenStreetMapLayer"],(function(e){n(a(e))}),t)}))).default,PointCloudLayer:async()=>(await new Promise((function(n,t){e(["../PointCloudLayer"],(function(e){n(a(e))}),t)}))).default,RouteLayer:async()=>(await new Promise((function(n,t){e(["../RouteLayer"],(function(e){n(a(e))}),t)}))).default,SceneLayer:async()=>(await new Promise((function(n,t){e(["../SceneLayer"],(function(e){n(a(e))}),t)}))).default,StreamLayer:async()=>(await new Promise((function(n,t){e(["../StreamLayer"],(function(e){n(a(e))}),t)}))).default,TileLayer:async()=>(await new Promise((function(n,t){e(["../TileLayer"],(function(e){n(a(e))}),t)}))).default,UnknownLayer:async()=>(await new Promise((function(n,t){e(["../UnknownLayer"],(function(e){n(a(e))}),t)}))).default,UnsupportedLayer:async()=>(await new Promise((function(n,t){e(["../UnsupportedLayer"],(function(e){n(a(e))}),t)}))).default,VectorTileLayer:async()=>(await new Promise((function(n,t){e(["../VectorTileLayer"],(function(e){n(a(e))}),t)}))).default,WebTileLayer:async()=>(await new Promise((function(n,t){e(["../WebTileLayer"],(function(e){n(a(e))}),t)}))).default,WMSLayer:async()=>(await new Promise((function(n,t){e(["../WMSLayer"],(function(e){n(a(e))}),t)}))).default,WMTSLayer:async()=>(await new Promise((function(n,t){e(["../WMTSLayer"],(function(e){n(a(e))}),t)}))).default};n.layerLookupMap=t,Object.defineProperty(n,"__esModule",{value:!0})}));
