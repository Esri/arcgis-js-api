/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","exports","../../../core/maybe","../../../core/jsonMap","../../../geometry/support/spatialReferenceUtils","../../../geometry/support/extentUtils","../../../geometry/support/jsonUtils","../../../core/unitUtils","../../../geometry/support/normalizeUtils","../OptimizedGeometry","../featureConversionUtils","../centroid","./projectionSupport"],(function(e,t,i,r,n,o,s,a,l,c,u,m,y){"use strict";const f=new r.JSONMap({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),p=Object.freeze({}),g=new c,d=new c,S=new c,h={esriGeometryPoint:u.convertToPoint,esriGeometryPolyline:u.convertToPolyline,esriGeometryPolygon:u.convertToPolygon,esriGeometryMultipoint:u.convertToMultipoint};function R(e,t,i,r=e.hasZ,n=e.hasM){const o=e.hasZ&&r,s=e.hasM&&n;if(i){const a=u.quantizeOptimizedGeometry(S,t,e.hasZ,e.hasM,"esriGeometryPoint",i,r,n);return u.convertToPoint(a,o,s)}return u.convertToPoint(t,o,s)}function G(e,t,i){return"esriGeometryPolygon"===e.geometryType&&t&&(t.centroid||t.geometry)?(t.centroid||(t.centroid=m.getCentroidOptimizedGeometry(new c,t.geometry,e.hasZ,e.hasM)),R(e,t.centroid,i)):null}function w(e,t,i,r,n,o,s=t,a=i){const l=t&&s,c=i&&a,m=r?"coords"in r?r:r.geometry:null;if(!m)return null;if(n){let r=u.generalizeOptimizedGeometry(d,m,t,i,e,n,s,a);return o&&(r=u.quantizeOptimizedGeometry(S,r,l,c,e,o)),h[e](r,l,c)}if(o){const r=u.quantizeOptimizedGeometry(S,m,t,i,e,o,s,a);return h[e](r,l,c)}return u.removeZMValues(g,m,t,i,s,a),h[e](g,l,c)}async function M(e,t,i){const{outFields:r,orderByFields:n,groupByFieldsForStatistics:o,outStatistics:s}=e;if(r)for(let a=0;a<r.length;a++)r[a]=r[a].trim();if(n)for(let a=0;a<n.length;a++)n[a]=n[a].trim();if(o)for(let a=0;a<o.length;a++)o[a]=o[a].trim();if(s)for(let a=0;a<s.length;a++)s[a].onStatisticField&&(s[a].onStatisticField=s[a].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),U(e,t,i)}async function z(e,t,i){return U(e,t,i)}async function U(e,t,r){if(!e)return null;let{where:n}=e;if(e.where=n=n&&n.trim(),(!n||/^1 *= *1$/.test(n)||t&&t===n)&&(e.where=null),!e.geometry)return e;let a=await O(e);if(e.distance=0,e.units=null,"esriSpatialRelEnvelopeIntersects"===e.spatialRel){const{spatialReference:t}=e.geometry;a=o.getGeometryExtent(a),a.spatialReference=t}e.geometry=a,await y.checkProjectionSupport(a.spatialReference,r);const c=(await l.normalizeCentralMeridian(s.fromJSON(a)))[0];if(i.isNone(c))throw p;const u=c.toJSON(),m=await y.project(u,u.spatialReference,r);if(!m)throw p;return m.spatialReference=r,e.geometry=m,e}async function O(e){const{geometry:t,distance:i,units:r}=e;if(null==i||"vertexAttributes"in t)return t;const o=t.spatialReference,s=r?f.fromJSON(r):a.getUnitString(o),l=o&&(n.isGeographic(o)||n.isWebMercator(o))?t:await y.checkProjectionSupport(o,n.WGS84).then((()=>y.project(t,n.WGS84)));return(await P())(l.spatialReference,l,i,s)}async function P(){return(await new Promise((function(t,i){e(["../../../geometry/geometryEngineJSON"],t,i)}))).geodesicBuffer}function v(e){return e&&N in e?JSON.parse(JSON.stringify(e,_)):e}const N="_geVersion",_=(e,t)=>e!==N?t:void 0;t.QUERY_ENGINE_EMPTY_RESULT=p,t.cleanFromGeometryEngine=v,t.getCentroid=G,t.getGeometry=w,t.normalizeFilter=z,t.normalizeQuery=M,t.normalizeQueryLike=U,t.transformCentroid=R,Object.defineProperty(t,"__esModule",{value:!0})}));
