/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../../core/Error","../../../../geometry/support/spatialReferenceUtils","../../../../geometry/support/jsonUtils","../../../support/fieldUtils","../../../../request","../../../support/fieldType","../../featureConversionUtils","../../../support/FieldsIndex","./geojson","../support/clientSideDefaults","../../data/projectionSupport","../../data/FeatureStore","../../data/QueryEngine","../support/sourceUtils"],(function(e,t,i,s,n,r,a,o,u,l,d,p,c,y){"use strict";const f={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};return function(){function m(){this._queryEngine=null}var h=m.prototype;return h.destroy=function(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null},h.load=async function(i){const y=[];await this._checkProjection(i.spatialReference);let m=null;if(i.url){m=(await n(i.url,{responseType:"json"})).data,await u.validateGeoJSON(m)}const h=u.inferLayerProperties(m,{geometryType:i.geometryType}),g=i.fields||h.fields||[],F=null!=i.hasZ?i.hasZ:h.hasZ,b=h.geometryType,I=i.objectIdField||("number"===h.objectIdFieldType?h.objectIdFieldName:"OBJECTID")||"OBJECTID",E=i.spatialReference||t.WGS84;let _=i.timeInfo;if(!b)throw new e("geojson-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if("string"===h.objectIdFieldType&&y.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),g===h.fields&&h.unknownFields.length>0&&y.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:h.unknownFields}}),I){let e=null;g.some((t=>t.name===I&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):g.unshift({alias:I,name:I,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const t of g){if(null==t.name&&(t.name=t.alias),null==t.alias&&(t.alias=t.name),!t.name)throw new e("geojson-layer:invalid-field-name","field name is missing",{field:t});if(t.name===I&&(t.type="esriFieldTypeOID"),-1===r.kebabDict.jsonValues.indexOf(t.type))throw new e("geojson-layer:invalid-field-type",`invalid type for field "${t.name}"`,{field:t})}const j={};this._requiredFields=[];for(const e of g)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=s.getFieldDefaultValue(e);e.nullable||void 0!==t?j[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new o(g),_){if(_.startTimeField){const e=this._fieldsIndex.get(_.startTimeField);e?(_.startTimeField=e.name,e.type="esriFieldTypeDate"):_.startTimeField=null}if(_.endTimeField){const e=this._fieldsIndex.get(_.endTimeField);e?(_.endTimeField=e.name,e.type="esriFieldTypeDate"):_.endTimeField=null}if(_.trackIdField){const e=this._fieldsIndex.get(_.trackIdField);e?_.trackIdField=e.name:(_.trackIdField=null,y.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:_}}))}_.startTimeField||_.endTimeField||(y.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:_}}),_=null)}const T={warnings:y,featureErrors:[],layerDefinition:{...f,drawingInfo:l.createDrawingInfo(b),templates:l.createDefaultTemplate(j),extent:null,geometryType:b,objectIdField:I,fields:g,hasZ:!!F,timeInfo:_}};this._queryEngine=new c.default({fields:g,geometryType:b,hasM:!1,hasZ:F,objectIdField:I,spatialReference:E,timeInfo:_,featureStore:new p({geometryType:b,hasM:!1,hasZ:F}),cacheSpatialQueries:!0}),this._createDefaultAttributes=l.createDefaultAttributesFunction(j,I),this._nextObjectId=h.maxObjectId+1;const q=u.createOptimizedFeatures(m,{geometryType:b,hasZ:F,objectIdFieldName:"number"===h.objectIdFieldType?I:null});if(!t.equals(E,t.WGS84))for(const e of q)e.geometry&&(e.geometry=a.convertFromGeometry(d.project(a.convertToGeometry(e.geometry,b,F,!1),t.WGS84,E)));return this._loadInitialFeatures(T,q),T},h.applyEdits=async function(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([y.loadGeometryEngineForSimplify(t,i),d.checkProjectionSupport(e.adds,t),d.checkProjectionSupport(e.updates,t)]),this._applyEdits(e)},h.queryFeatures=function(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)},h.queryFeatureCount=function(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)},h.queryObjectIds=function(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)},h.queryExtent=function(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)},h.querySnapping=function(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)},h._loadInitialFeatures=function(e,t){const{featureStore:i,objectIdField:s}=this._queryEngine,n=[];for(const r of t){const t=this._createDefaultAttributes(),i=y.mixAttributes(this._fieldsIndex,this._requiredFields,t,r.attributes,!0,e.warnings);i?e.featureErrors.push(i):(this._assignObjectId(t,r.attributes,!0),r.attributes=t,r.objectId=t[s],n.push(r))}if(i.addMany(n),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e},h._applyEdits=function(e){const{adds:t,updates:i,deletes:s}=e,n={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(n,t),i&&i.length&&this._applyUpdateEdits(n,i),s&&s.length){for(const e of s)n.deleteResults.push(y.createFeatureEditSuccessResult(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:n}},h._applyAddEdits=function(e,t){const{addResults:s}=e,{geometryType:n,hasM:r,hasZ:o,objectIdField:u,spatialReference:l,featureStore:p}=this._queryEngine,c=[];for(const a of t){if(a.geometry&&n!==i.getJsonType(a.geometry)){s.push(y.createFeatureEditErrorResult("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=y.mixAttributes(this._fieldsIndex,this._requiredFields,t,a.attributes);if(r)s.push(r);else{if(this._assignObjectId(t,a.attributes),a.attributes=t,null!=a.uid){const t=a.attributes[u];e.uidToObjectId[a.uid]=t}a.geometry&&(a.geometry=d.project(y.simplify(a.geometry,l),a.geometry.spatialReference,l)),c.push(a),s.push(y.createFeatureEditSuccessResult(a.attributes[u]))}}p.addMany(a.convertFromFeatures([],c,n,o,r,u))},h._applyUpdateEdits=function({updateResults:e},t){const{geometryType:s,hasM:n,hasZ:r,objectIdField:o,spatialReference:u,featureStore:l}=this._queryEngine;for(const p of t){const{attributes:t,geometry:c}=p,f=t&&t[o];if(null==f){e.push(y.createFeatureEditErrorResult(`Identifier field ${o} missing`));continue}if(!l.has(f)){e.push(y.createFeatureEditErrorResult(`Feature with object id ${f} missing`));continue}const m=a.convertToFeature(l.getFeature(f),s,r,n);if(c){if(s!==i.getJsonType(c)){e.push(y.createFeatureEditErrorResult("Incorrect geometry type."));continue}m.geometry=d.project(y.simplify(c,u),c.spatialReference,u)}if(t){const i=y.mixAttributes(this._fieldsIndex,this._requiredFields,m.attributes,t);if(i){e.push(i);continue}}l.add(a.convertFromFeature(m,s,r,n,o)),e.push(y.createFeatureEditSuccessResult(f))}},h._assignObjectId=function(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++},h._checkProjection=async function(i){try{await d.checkProjectionSupport(t.WGS84,i)}catch{throw new e("geojson-layer","Projection not supported")}},m}()}));
