/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../../../core/Error","../../../../core/promiseUtils","../../../../geometry/support/spatialReferenceUtils","../../../../geometry/support/jsonUtils","../../../support/fieldUtils","../../../../request","../../../support/fieldType","../../featureConversionUtils","../../../support/FieldsIndex","../../data/projectionSupport","./geojson","../support/clientSideDefaults","../../data/FeatureStore","../../data/QueryEngine","../support/sourceUtils"],(function(e,t,i,s,n,r,a,o,u,l,d,c,p,y,f){"use strict";const m={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};return function(){function h(){this._queryEngine=null}var g=h.prototype;return g.destroy=function(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null},g.load=async function(t){const s=[];await this._checkProjection(t.spatialReference);let f=null;if(t.url){f=(await r(t.url,{responseType:"json"})).data,await d.validateGeoJSON(f)}const h=d.inferLayerProperties(f,{geometryType:t.geometryType}),g=t.fields||h.fields||[],F=null!=t.hasZ?t.hasZ:h.hasZ,b=h.geometryType,I=t.objectIdField||("number"===h.objectIdFieldType?h.objectIdFieldName:"OBJECTID")||"OBJECTID",E=t.spatialReference||i.WGS84;let _=t.timeInfo;if(!b)throw new e("geojson-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if("string"===h.objectIdFieldType&&s.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),g===h.fields&&h.unknownFields.length>0&&s.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:h.unknownFields}}),I){let e=null;g.some((t=>t.name===I&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):g.unshift({alias:I,name:I,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const t of g){if(null==t.name&&(t.name=t.alias),null==t.alias&&(t.alias=t.name),!t.name)throw new e("geojson-layer:invalid-field-name","field name is missing",{field:t});if(t.name===I&&(t.type="esriFieldTypeOID"),-1===a.kebabDict.jsonValues.indexOf(t.type))throw new e("geojson-layer:invalid-field-type",`invalid type for field "${t.name}"`,{field:t})}const j={};this._requiredFields=[];for(const e of g)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=n.getFieldDefaultValue(e);e.nullable||void 0!==t?j[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new u(g),_){if(_.startTimeField){const e=this._fieldsIndex.get(_.startTimeField);e?(_.startTimeField=e.name,e.type="esriFieldTypeDate"):_.startTimeField=null}if(_.endTimeField){const e=this._fieldsIndex.get(_.endTimeField);e?(_.endTimeField=e.name,e.type="esriFieldTypeDate"):_.endTimeField=null}if(_.trackIdField){const e=this._fieldsIndex.get(_.trackIdField);e?_.trackIdField=e.name:(_.trackIdField=null,s.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:_}}))}_.startTimeField||_.endTimeField||(s.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:_}}),_=null)}const T={warnings:s,featureErrors:[],layerDefinition:{...m,drawingInfo:c.createDrawingInfo(b),templates:c.createDefaultTemplate(j),extent:null,geometryType:b,objectIdField:I,fields:g,hasZ:!!F,timeInfo:_}};this._queryEngine=new y.default({fields:g,geometryType:b,hasM:!1,hasZ:F,objectIdField:I,spatialReference:E,timeInfo:_,featureStore:new p({geometryType:b,hasM:!1,hasZ:F})}),this._createDefaultAttributes=c.createDefaultAttributesFunction(j,I),this._nextObjectId=h.maxObjectId+1;const q=d.createOptimizedFeatures(f,{geometryType:b,hasZ:F,objectIdFieldName:"number"===h.objectIdFieldType?I:null});if(!i.equals(E,i.WGS84))for(const e of q)e.geometry&&(e.geometry=o.convertFromGeometry(l.project(o.convertToGeometry(e.geometry,b,F,!1),i.WGS84,E)));return this._loadInitialFeatures(T,q),T},g.applyEdits=async function(e){const{spatialReference:i,geometryType:s}=this._queryEngine;return await t.all([f.loadGeometryEngineForSimplify(i,s),l.checkProjectionSupport(e.adds,i),l.checkProjectionSupport(e.updates,i)]),this._applyEdits(e)},g.queryFeatures=async function(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)},g.queryFeatureCount=async function(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)},g.queryObjectIds=async function(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)},g.queryExtent=async function(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)},g._loadInitialFeatures=function(e,t){const{featureStore:i,objectIdField:s}=this._queryEngine,n=[];for(const i of t){const t=this._createDefaultAttributes(),r=f.mixAttributes(this._fieldsIndex,this._requiredFields,t,i.attributes,!0,e.warnings);r?e.featureErrors.push(r):(this._assignObjectId(t,i.attributes,!0),i.attributes=t,i.objectId=t[s],n.push(i))}if(i.addMany(n),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e},g._applyEdits=function(e){const{adds:t,updates:i,deletes:s}=e,n={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(n,t),i&&i.length&&this._applyUpdateEdits(n,i),s&&s.length){for(const e of s)n.deleteResults.push(f.createFeatureEditSuccessResult(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:n}},g._applyAddEdits=function(e,t){const{addResults:i}=e,{geometryType:n,hasM:r,hasZ:a,objectIdField:u,spatialReference:d,featureStore:c}=this._queryEngine,p=[];for(const r of t){if(r.geometry&&n!==s.getJsonType(r.geometry)){i.push(f.createFeatureEditErrorResult("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),a=f.mixAttributes(this._fieldsIndex,this._requiredFields,t,r.attributes);if(a)i.push(a);else{if(this._assignObjectId(t,r.attributes),r.attributes=t,null!=r.uid){const t=r.attributes[u];e.uidToObjectId[r.uid]=t}r.geometry&&(r.geometry=l.project(f.simplify(r.geometry,d),r.geometry.spatialReference,d)),p.push(r),i.push(f.createFeatureEditSuccessResult(r.attributes[u]))}}c.addMany(o.convertFromFeatures([],p,n,a,r,u))},g._applyUpdateEdits=function({updateResults:e},t){const{geometryType:i,hasM:n,hasZ:r,objectIdField:a,spatialReference:u,featureStore:d}=this._queryEngine;for(const c of t){const{attributes:t,geometry:p}=c,y=t&&t[a];if(null==y){e.push(f.createFeatureEditErrorResult(`Identifier field ${a} missing`));continue}if(!d.has(y)){e.push(f.createFeatureEditErrorResult(`Feature with object id ${y} missing`));continue}const m=o.convertToFeature(d.getFeature(y),i,r,n);if(p){if(i!==s.getJsonType(p)){e.push(f.createFeatureEditErrorResult("Incorrect geometry type."));continue}m.geometry=l.project(f.simplify(p,u),p.spatialReference,u)}if(t){const i=f.mixAttributes(this._fieldsIndex,this._requiredFields,m.attributes,t);if(i){e.push(i);continue}}d.add(o.convertFromFeature(m,i,r,n,a)),e.push(f.createFeatureEditSuccessResult(y))}},g._assignObjectId=function(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++},g._checkProjection=async function(t){try{await l.checkProjectionSupport(i.WGS84,t)}catch{throw new e("geojson-layer","Projection not supported")}},h}()}));
