/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/has","../../../core/maybe","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/urlUtils","../../../core/uuid","../../../portal/support/resourceExtension","../../../geometry/Extent","../../../geometry","../../../core/Loadable","../../../core/workers/workers","../../../tasks/support/FeatureSet"],(function(e,t,o,r,n,i,s,c,u,l,a,p,d,h,y,_){"use strict";let f=function(t){function n(e){var o;return(o=t.call(this,e)||this).type="csv",o}e._inheritsLoose(n,t);var i=n.prototype;return i.load=function(e){const t=r.isSome(e)?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)},i.destroy=function(){var e;null==(e=this._connection)||e.close(),this._connection=null},i.openPorts=function(){return this.load().then((()=>this._connection.openPorts()))},i.queryFeatures=function(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>_.fromJSON(e)))},i.queryFeaturesJSON=function(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))},i.queryFeatureCount=function(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))},i.queryObjectIds=function(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))},i.queryExtent=function(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:p.fromJSON(e.extent)})))},i.querySnapping=function(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))},i._startWorker=async function(e){this._connection=await y.open("CSVSourceWorker",{strategy:o("feature-layers-workers")?"dedicated":"local",signal:e});const t=await this._connection.invoke("load",{url:this.url,parsing:{columnDelimiter:this.delimiter,fields:this.fields&&this.fields.map((e=>e.toJSON())),latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference&&this.spatialReference.toJSON(),timeInfo:this.timeInfo&&this.timeInfo.toJSON()}},{signal:e});this.locationInfo=t.locationInfo,this.sourceJSON=t.layerDefinition,this.columnDelimiter=t.columnDelimiter},n}(h);return t.__decorate([s.property()],f.prototype,"type",void 0),t.__decorate([s.property()],f.prototype,"url",void 0),t.__decorate([s.property()],f.prototype,"delimiter",void 0),t.__decorate([s.property()],f.prototype,"fields",void 0),t.__decorate([s.property()],f.prototype,"latitudeField",void 0),t.__decorate([s.property()],f.prototype,"longitudeField",void 0),t.__decorate([s.property()],f.prototype,"spatialReference",void 0),t.__decorate([s.property()],f.prototype,"timeInfo",void 0),t.__decorate([s.property()],f.prototype,"locationInfo",void 0),t.__decorate([s.property()],f.prototype,"sourceJSON",void 0),t.__decorate([s.property()],f.prototype,"columnDelimiter",void 0),f=t.__decorate([c.subclass("esri.layers.graphics.sources.CSVSource")],f),f}));
