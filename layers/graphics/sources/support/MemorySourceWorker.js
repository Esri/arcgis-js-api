/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Error","../../../../geometry/support/jsonUtils","../../../../geometry/support/spatialReferenceUtils","../../featureConversionUtils","../../objectIdUtils","../../data/FeatureStore","../../data/projectionSupport","../../data/QueryEngine","./clientSideDefaults","./sourceUtils","../../../support/FieldsIndex","../../../support/fieldType","../../../support/fieldUtils"],(function(e,t,i,n,r,s,a,u,l,o,d,c,p,f){"use strict";const y=n.WGS84,h={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:n.WGS84},m={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function g(e){return i.isPoint(e)?null!=e.z:!!e.hasZ}function F(e){return i.isPoint(e)?null!=e.m:!!e.hasM}return function(){function n(){this._queryEngine=null,this._nextObjectId=null}var b=n.prototype;return b.destroy=function(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null},b.load=function(){var i=e._asyncToGenerator((function*(e){const i=[],{features:n}=e,r=this._inferLayerProperties(n,e.fields),d=e.fields||[],g=null!=e.hasM?e.hasM:r.hasM,F=null!=e.hasZ?e.hasZ:r.hasZ,b=!e.spatialReference&&!r.spatialReference,I=b?y:e.spatialReference||r.spatialReference,_=b?h:null,E=e.geometryType||r.geometryType,j=!E;let T=e.objectIdField||r.objectIdField,x=e.timeInfo;if(!j&&(b&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!E))throw new t("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!T)throw new t("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(r.objectIdField&&T!==r.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${T}" doesn't match the field name "${r.objectIdField}", found in the provided fields`}),T=r.objectIdField),T&&!r.objectIdField){let e=null;d.some((t=>t.name===T&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):d.unshift({alias:T,name:T,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const s of d){if(null==s.name&&(s.name=s.alias),null==s.alias&&(s.alias=s.name),!s.name)throw new t("feature-layer:invalid-field-name","field name is missing",{field:s});if(s.name===T&&(s.type="esriFieldTypeOID"),-1===p.kebabDict.jsonValues.indexOf(s.type))throw new t("feature-layer:invalid-field-type",`invalid type for field "${s.name}"`,{field:s})}const R={};this._requiredFields=[];for(const t of d)if("esriFieldTypeOID"!==t.type&&"esriFieldTypeGlobalID"!==t.type){t.editable=null==t.editable||!!t.editable,t.nullable=null==t.nullable||!!t.nullable;const e=f.getFieldDefaultValue(t);t.nullable||void 0!==e?R[t.name]=e:this._requiredFields.push(t)}if(this._fieldsIndex=new c(d),this._createDefaultAttributes=o.createDefaultAttributesFunction(R,T),x){if(x.startTimeField){const e=this._fieldsIndex.get(x.startTimeField);e?(x.startTimeField=e.name,e.type="esriFieldTypeDate"):x.startTimeField=null}if(x.endTimeField){const e=this._fieldsIndex.get(x.endTimeField);e?(x.endTimeField=e.name,e.type="esriFieldTypeDate"):x.endTimeField=null}if(x.trackIdField){const e=this._fieldsIndex.get(x.trackIdField);e?x.trackIdField=e.name:(x.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:x}}))}x.startTimeField||x.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:x}}),x=null)}const q={warnings:i,featureErrors:[],layerDefinition:{...m,drawingInfo:o.createDrawingInfo(E),templates:o.createDefaultTemplate(R),extent:_,geometryType:E,objectIdField:T,fields:d,hasZ:!!F,hasM:!!g,timeInfo:x},assignedObjectIds:{}};if(this._queryEngine=new l.default({fields:d,geometryType:E,hasM:g,hasZ:F,objectIdField:T,spatialReference:I,featureStore:new a({geometryType:E,hasM:g,hasZ:F}),timeInfo:x,cacheSpatialQueries:!0}),!n||!n.length)return this._nextObjectId=s.initialObjectId,q;const S=s.findLastObjectIdFromFeatures(T,n);return this._nextObjectId=S+1,yield u.checkProjectionSupport(n,I),this._loadInitialFeatures(q,n)}));function n(e){return i.apply(this,arguments)}return n}(),b.applyEdits=function(){var t=e._asyncToGenerator((function*(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return yield Promise.all([d.loadGeometryEngineForSimplify(t,i),u.checkProjectionSupport(e.adds,t),u.checkProjectionSupport(e.updates,t)]),this._applyEdits(e)}));function i(e){return t.apply(this,arguments)}return i}(),b.queryFeatures=function(e,t={}){return this._queryEngine.executeQuery(e,t.signal)},b.queryFeatureCount=function(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)},b.queryObjectIds=function(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)},b.queryExtent=function(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)},b.querySnapping=function(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)},b._inferLayerProperties=function(e,t){let n,r,s=null,a=null,u=null;for(const l of e){const e=l.geometry;if(e&&(s||(s=i.getJsonType(e)),a||(a=e.spatialReference),null==n&&(n=g(e)),null==r&&(r=F(e)),s&&a&&null!=n&&null!=r))break}if(t&&t.length){let e=null;t.some((t=>{const i="esriFieldTypeOID"===t.type,n=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||n}))&&(u=e.name)}return{geometryType:s,spatialReference:a,objectIdField:u,hasM:r,hasZ:n}},b._loadInitialFeatures=function(e,t){const{geometryType:n,hasM:s,hasZ:a,objectIdField:l,spatialReference:o,featureStore:c}=this._queryEngine,p=[];for(const r of t){if(null!=r.uid&&(e.assignedObjectIds[r.uid]=-1),r.geometry&&n!==i.getJsonType(r.geometry)){e.featureErrors.push(d.createFeatureEditErrorResult("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),s=d.mixAttributes(this._fieldsIndex,t,r.attributes,this._requiredFields,!0,e.warnings);s?e.featureErrors.push(s):(this._assignObjectId(t,r.attributes,!0),r.attributes=t,null!=r.uid&&(e.assignedObjectIds[r.uid]=r.attributes[l]),r.geometry&&(r.geometry=u.project(r.geometry,r.geometry.spatialReference,o)),p.push(r))}if(c.addMany(r.convertFromFeatures([],p,n,a,s,l)),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e},b._applyEdits=function(e){const{adds:t,updates:i,deletes:n}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),i&&i.length&&this._applyUpdateEdits(r,i),n&&n.length){for(const e of n)r.deleteResults.push(d.createFeatureEditSuccessResult(e));this._queryEngine.featureStore.removeManyById(n)}return{fullExtent:this._queryEngine.fullExtent,featureEditResults:r}},b._applyAddEdits=function(e,t){const{addResults:n}=e,{geometryType:s,hasM:a,hasZ:l,objectIdField:o,spatialReference:c,featureStore:p}=this._queryEngine,f=[];for(const r of t){if(r.geometry&&s!==i.getJsonType(r.geometry)){n.push(d.createFeatureEditErrorResult("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),a=d.mixAttributes(this._fieldsIndex,t,r.attributes,this._requiredFields);if(a)n.push(a);else{if(this._assignObjectId(t,r.attributes),r.attributes=t,null!=r.uid){const t=r.attributes[o];e.uidToObjectId[r.uid]=t}r.geometry&&(r.geometry=u.project(d.simplify(r.geometry,c),r.geometry.spatialReference,c)),f.push(r),n.push(d.createFeatureEditSuccessResult(r.attributes[o]))}}p.addMany(r.convertFromFeatures([],f,s,l,a,o))},b._applyUpdateEdits=function({updateResults:e},t){const{geometryType:n,hasM:s,hasZ:a,objectIdField:l,spatialReference:o,featureStore:c}=this._queryEngine;for(const p of t){const{attributes:t,geometry:f}=p,y=t&&t[l];if(null==y){e.push(d.createFeatureEditErrorResult(`Identifier field ${l} missing`));continue}if(!c.has(y)){e.push(d.createFeatureEditErrorResult(`Feature with object id ${y} missing`));continue}const h=r.convertToFeature(c.getFeature(y),n,a,s);if(f){if(n!==i.getJsonType(f)){e.push(d.createFeatureEditErrorResult("Incorrect geometry type."));continue}h.geometry=u.project(d.simplify(f,o),f.spatialReference,o)}if(t){const i=d.mixAttributes(this._fieldsIndex,h.attributes,t,this._requiredFields);if(i){e.push(i);continue}}c.add(r.convertFromFeature(h,n,a,s,l)),e.push(d.createFeatureEditSuccessResult(y))}},b._assignObjectId=function(e,t,i=!1){const n=this._queryEngine.objectIdField;i&&t&&isFinite(t[n])?e[n]=t[n]:e[n]=this._nextObjectId++},n}()}));
