/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../core/has","../../../../core/Error","../../../../core/urlUtils","../../../../geometry/support/spatialReferenceUtils","../../../../geometry/SpatialReference","../../../../geometry/support/webMercatorUtils","../../../../geometry","../../../../request","../../../../geometry/projection","../../../../core/number","../../OptimizedFeature","../../OptimizedGeometry","../../../support/FieldsIndex","../../../../geometry/geometryAdapters/json","./clientSideDefaults","../../data/projectionSupport","../../data/FeatureStore","../../data/QueryEngine","../csv/csv"],(function(e,t,i,n,r,l,o,s,a,u,d,c,f,m,p,y,g,F,h,I){"use strict";const N=y.createDrawingInfo("esriGeometryPoint"),_=["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong"],b=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point-y"],x=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point-x"],T=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,w=["csv"],E=[0,0];let D=function(e,t){this.x=e,this.y=t};const j=function(){const e=d._parseInfo(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),n=e.factor;return function(r){const l=t.exec(r);if(e.factor=n,!l)return NaN;let o=l[1];if(!l[1]){if(!l[2])return NaN;o=l[2],e.factor*=-1}return o=o.replace(i,"").replace(e.decimal,"."),+o*e.factor}}(),v="isInteger"in Number?Number.isInteger:e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e;let S=function(){function e(){this._fieldsIndex=null,this._queryEngine=null}var s=e.prototype;return s.destroy=function(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=null,this._fieldsIndex=null},s.load=async function(e,t={}){const[i]=await Promise.all([this._fetch(e.url,t),this._checkProjection(t&&e.parsing&&e.parsing.spatialReference)]),n=this._parse(i,e);if(this._queryEngine=this._createQueryEngine(i,n),n.layerDefinition.extent=this._queryEngine.fullExtent,n.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n},s.applyEdits=async function(){throw new i("csv-source:editing-not-supported","applyEdits() is not supported on CSVLayer")},s.queryFeatures=function(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)},s.queryFeatureCount=function(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)},s.queryObjectIds=function(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)},s.queryExtent=function(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)},s.querySnapping=function(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)},s._fetch=async function(e,t){if(!e)throw new i("csv-source:invalid-source","url not defined");const r=n.urlToObject(e);return(await a(r.path,{query:r.query,responseType:"text",signal:t.signal})).data},s._parse=function(e,t){const r=t.parsing||{},l={columnDelimiter:r.columnDelimiter,layerDefinition:null,locationInfo:{latitudeFieldName:r.latitudeField,longitudeFieldName:r.longitudeField}},o=I.readRows(e);let{value:s}=o.next();if(!s)throw new i("csv","CSV is empty",{csv:e});if(s=s.trim(),!r.columnDelimiter){const e=I.inferDelimiter(s);if(!e)throw new i("csv-source:invalid-delimiter","Unable to detect the delimiter from CSV");l.columnDelimiter=e}const a=s.split(l.columnDelimiter),u=l.layerDefinition={name:n.getFilename(t.url,w)||"csv",drawingInfo:N,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:r.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:r.spatialReference||{wkid:102100}}};if(!r.latitudeField||!r.longitudeField){const e=this._inferLocationInfo(a);if(!r.longitudeField&&!e.longitudeFieldName||!r.latitudeField&&!e.latitudeFieldName)throw new i("csv","Unable to identify latitudeField and/or longitudeField from CSV");l.locationInfo={longitudeFieldName:r.longitudeField||e.longitudeFieldName,latitudeFieldName:r.latitudeField||e.latitudeFieldName}}const d=this._inferFields(o,l.columnDelimiter,a,l.locationInfo);if(r.fields&&r.fields.length){const e=new Map;for(const t of r.fields)e.set(t.name.toLowerCase(),t);for(const t of d){const i=e.get(t.name.toLowerCase());if(i){const e=t.name;Object.assign(t,i),t.name=e}}}u.fields=d;if(!u.fields.some((e=>"esriFieldTypeOID"===e.type&&(u.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};u.objectIdField=e.name,u.fields.unshift(e)}if(this._fieldsIndex=new m(u.fields),u.timeInfo){const e=u.timeInfo;if(e.startTimeField){const t=this._fieldsIndex.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=this._fieldsIndex.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=this._fieldsIndex.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(u.timeInfo=null)}return l},s._inferLocationInfo=function(e){let t=null,i=null;const n=t=>e.find((e=>e.toLowerCase()===t));return x.some((e=>(t=n(e),!!t))),b.some((e=>(i=n(e),!!i))),{longitudeFieldName:t,latitudeFieldName:i}},s._inferFields=function(e,t,i,n){const r=[],l=I.parseRows(e,i,t),o=[];e:for(;o.length<10;){const{value:e,done:t}=l.next();if(t)break e;o.push(e)}for(const s of i)if(s===n.longitudeFieldName||s===n.latitudeFieldName)r.push({name:s,type:"esriFieldTypeDouble",alias:s});else{const e=o.map((e=>e[s])),t=this._inferFieldType(e),i={name:s,type:null,alias:s};switch(t){case"integer":i.type="esriFieldTypeInteger";break;case"double":i.type="esriFieldTypeDouble";break;case"date":i.type="esriFieldTypeDate",i.length=36;break;default:i.type="esriFieldTypeString",i.length=255}r.push(i)}return r},s._inferFieldType=function(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let i=!1;if(""!==e){if(t.test(e))i=!0;else{let t=j(e);if(!isNaN(t))return/[.,]/.test(e)||!v(t)||t>214783647||t<-214783648?"double":"integer";if(-1===e.indexOf("E"))i=!0;else{if(t=Number(e),!isNaN(t))return"double";if(-1===e.indexOf(","))i=!0;else{if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";i=!0}}}if(i){if(!/^[-]?\d*[.,]?\d*$/.test(e)){const t=new Date(e);return this._isValidDate(t,e)?"date":"string"}return"string"}return"string"}})).reduce(((e,t)=>void 0===e||e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))},s._isValidDate=function(e,i){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let n=!0;if(t("chrome")&&/\d+\W*$/.test(i)){const e=i.match(/[a-zA-Z]{2,}/);if(e){let t=!1,i=0;for(;!t&&i<=e.length;)t=!T.test(e[i]),i++;n=!t}}return n},s._createQueryEngine=function(e,t){const{latitudeFieldName:i,longitudeFieldName:n}=t.locationInfo,{objectIdField:s,fields:a,extent:d,timeInfo:m}=t.layerDefinition;let y=[];const g=[],N=new Set,b=new Set,x=[];for(const{name:r,type:l}of a)"esriFieldTypeDate"===l?N.add(r):_.indexOf(l)>-1&&b.add(r),r!==s&&x.push(r);let T=0;const w=I.readRows(e);w.next();const v=I.parseRows(w,x,t.columnDelimiter);e:for(;;){const{value:e,done:t}=v.next();if(t)break e;const r=this._parseCoordinateValue(e[i]),l=this._parseCoordinateValue(e[n]);if(null!=l&&null!=r&&!isNaN(r)&&!isNaN(l)){e[i]=r,e[n]=l;for(const t in e)if(t!==i&&t!==n)if(N.has(t)){const i=new Date(e[t]);e[t]=this._isValidDate(i,e[t])?i.getTime():null}else if(b.has(t)){const i=j(e[t]);isNaN(i)?e[t]=null:e[t]=i}e[s]=T,T++,y.push(new D(l,r)),g.push(e)}}if(!r.equals({wkid:4326},d.spatialReference))if(r.isWebMercator(d.spatialReference))for(const r of y)[r.x,r.y]=o.lngLatToXY(r.x,r.y,E);else y=u.projectMany(p.jsonAdapter,y,l.WGS84,d.spatialReference,null);const S=new F({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1}),q=new h.default({fields:t.layerDefinition.fields,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:m,objectIdField:s,spatialReference:d.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:S}),O=[];for(let r=0;r<y.length;r++){const{x:e,y:t}=y[r],i=g[r];i[s]=r+1,O.push(new c(new f([],[e,t]),i,null,i[s]))}return S.addMany(O),q},s._parseCoordinateValue=function(e){if(null==e||""===e)return null;let t=j(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t},s._checkProjection=async function(e){try{await g.checkProjectionSupport(r.WGS84,e)}catch{throw new i("csv-layer","Projection not supported")}},e}();e.csvLatitudeFieldNames=b,e.csvLongitudeFieldNames=x,e.default=S,Object.defineProperty(e,"__esModule",{value:!0})}));
