/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../core/has","../../../../core/lang","../../../../core/Error","../../../../core/urlUtils","../../../../core/promiseUtils","../../../../geometry/support/spatialReferenceUtils","../../../../geometry/SpatialReference","../../../../geometry/support/webMercatorUtils","../../../../geometry","../../../../request","../../../../geometry/projection","../../../../core/number","../../OptimizedFeature","../../OptimizedGeometry","../../../support/FieldsIndex","../../../../geometry/geometryAdapters/json","../../data/projectionSupport","./clientSideDefaults","../../data/FeatureStore","../../data/QueryEngine","../csv/csv"],(function(e,t,i,n,r,l,o,s,a,d,u,c,f,m,p,y,g,F,h,I,N,_){"use strict";const b=h.createDrawingInfo("esriGeometryPoint"),x=["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong"],T=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point-y"],w=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point-x"],D=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,E=["csv"],v=[0,0];let j=function(e,t){this.x=e,this.y=t};const S=function(){const e=f._parseInfo(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),n=e.factor;return function(r){const l=t.exec(r);if(e.factor=n,!l)return NaN;let o=l[1];if(!l[1]){if(!l[2])return NaN;o=l[2],e.factor*=-1}return o=o.replace(i,"").replace(e.decimal,"."),+o*e.factor}}(),q="isInteger"in Number?Number.isInteger:e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e;let R=function(){function e(){this._fieldsIndex=null,this._queryEngine=null}var d=e.prototype;return d.destroy=function(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=null,this._fieldsIndex=null},d.load=async function(e,t={}){const[i]=await l.all([this._fetch(e.url,t),this._checkProjection(t&&e.parsing&&e.parsing.spatialReference)]),n=this._parse(i,e);if(this._queryEngine=this._createQueryEngine(i,n),n.layerDefinition.extent=this._queryEngine.fullExtent,n.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n},d.applyEdits=async function(){throw new n("csv-source:editing-not-supported","applyEdits() is not supported on CSVLayer")},d.queryFeatures=async function(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)},d.queryFeatureCount=async function(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)},d.queryObjectIds=async function(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)},d.queryExtent=async function(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)},d._fetch=async function(e,t){if(!e)throw new n("csv-source:invalid-source","url not defined");const i=r.urlToObject(e);return(await u(i.path,{query:i.query,responseType:"text",signal:t.signal})).data},d._parse=function(e,t){const l=t.parsing||{},o={columnDelimiter:l.columnDelimiter,layerDefinition:null,locationInfo:{latitudeFieldName:l.latitudeField,longitudeFieldName:l.longitudeField}},s=_.readRows(e);let{value:a}=s.next();if(!a)throw new n("csv","CSV is empty",{csv:e});if(a=a.trim(),!l.columnDelimiter){const e=_.inferDelimiter(a);if(!e)throw new n("csv-source:invalid-delimiter","Unable to detect the delimiter from CSV");o.columnDelimiter=e}const d=a.split(o.columnDelimiter),u=o.layerDefinition={name:r.getFilename(t.url,E)||"csv",drawingInfo:b,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:l.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:l.spatialReference||{wkid:102100}}};if(!l.latitudeField||!l.longitudeField){const e=this._inferLocationInfo(d);if(!l.longitudeField&&!e.longitudeFieldName||!l.latitudeField&&!e.latitudeFieldName)throw new n("csv","Unable to identify latitudeField and/or longitudeField from CSV");o.locationInfo={longitudeFieldName:l.longitudeField||e.longitudeFieldName,latitudeFieldName:l.latitudeField||e.latitudeFieldName}}const c=this._inferFields(s,o.columnDelimiter,d,o.locationInfo);if(l.fields&&l.fields.length){const e=new Map;for(const t of l.fields)e.set(t.name.toLowerCase(),t);for(const t of c){const n=e.get(t.name.toLowerCase());if(n){const e=t.name;i.mixin(t,n),t.name=e}}}u.fields=c;if(!u.fields.some((e=>"esriFieldTypeOID"===e.type&&(u.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};u.objectIdField=e.name,u.fields.unshift(e)}if(this._fieldsIndex=new y(u.fields),u.timeInfo){const e=u.timeInfo;if(e.startTimeField){const t=this._fieldsIndex.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=this._fieldsIndex.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=this._fieldsIndex.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(u.timeInfo=null)}return o},d._inferLocationInfo=function(e){let t=null,i=null;const n=t=>e.find((e=>e.toLowerCase()===t));return w.some((e=>(t=n(e),!!t))),T.some((e=>(i=n(e),!!i))),{longitudeFieldName:t,latitudeFieldName:i}},d._inferFields=function(e,t,i,n){const r=[],l=_.parseRows(e,i,t),o=[];e:for(;o.length<10;){const{value:e,done:t}=l.next();if(t)break e;o.push(e)}for(const e of i)if(e===n.longitudeFieldName||e===n.latitudeFieldName)r.push({name:e,type:"esriFieldTypeDouble",alias:e});else{const t=o.map((t=>t[e])),i=this._inferFieldType(t),n={name:e,type:null,alias:e};switch(i){case"integer":n.type="esriFieldTypeInteger";break;case"double":n.type="esriFieldTypeDouble";break;case"date":n.type="esriFieldTypeDate",n.length=36;break;default:n.type="esriFieldTypeString",n.length=255}r.push(n)}return r},d._inferFieldType=function(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let i=!1;if(""!==e){if(t.test(e))i=!0;else{let t=S(e);if(!isNaN(t))return/[.,]/.test(e)||!q(t)||t>214783647||t<-214783648?"double":"integer";if(-1===e.indexOf("E"))i=!0;else{if(t=Number(e),!isNaN(t))return"double";if(-1===e.indexOf(","))i=!0;else{if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";i=!0}}}if(i){if(!/^[-]?\d*[.,]?\d*$/.test(e)){const t=new Date(e);return this._isValidDate(t,e)?"date":"string"}return"string"}return"string"}})).reduce(((e,t)=>void 0===e||e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))},d._isValidDate=function(e,i){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let n=!0;if(t("chrome")&&/\d+\W*$/.test(i)){const e=i.match(/[a-zA-Z]{2,}/);if(e){let t=!1,i=0;for(;!t&&i<=e.length;)t=!D.test(e[i]),i++;n=!t}}return n},d._createQueryEngine=function(e,t){const{latitudeFieldName:i,longitudeFieldName:n}=t.locationInfo,{objectIdField:r,fields:l,extent:d,timeInfo:u}=t.layerDefinition;let f=[];const y=[],F=new Set,h=new Set,b=[];for(const{name:e,type:t}of l)"esriFieldTypeDate"===t?F.add(e):x.indexOf(t)>-1&&h.add(e),e!==r&&b.push(e);let T=0;const w=_.readRows(e);w.next();const D=_.parseRows(w,b,t.columnDelimiter);e:for(;;){const{value:e,done:t}=D.next();if(t)break e;const l=this._parseCoordinateValue(e[i]),o=this._parseCoordinateValue(e[n]);if(null!=o&&null!=l&&!isNaN(l)&&!isNaN(o)){e[i]=l,e[n]=o;for(const t in e)if(t!==i&&t!==n)if(F.has(t)){const i=new Date(e[t]);e[t]=this._isValidDate(i,e[t])?i.getTime():null}else if(h.has(t)){const i=S(e[t]);isNaN(i)?e[t]=null:e[t]=i}e[r]=T,T++,f.push(new j(o,l)),y.push(e)}}if(!o.equals({wkid:4326},d.spatialReference))if(o.isWebMercator(d.spatialReference))for(const e of f)[e.x,e.y]=a.lngLatToXY(e.x,e.y,v);else f=c.projectMany(g.jsonAdapter,f,s.WGS84,d.spatialReference,null);const E=new I({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1}),q=new N.default({fields:t.layerDefinition.fields,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:u,objectIdField:r,spatialReference:d.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:E}),R=[];for(let e=0;e<f.length;e++){const{x:t,y:i}=f[e],n=y[e];n[r]=e+1,R.push(new m(new p([],[t,i]),n,null,n[r]))}return E.addMany(R),q},d._parseCoordinateValue=function(e){if(null==e||""===e)return null;let t=S(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t},d._checkProjection=async function(e){try{await F.checkProjectionSupport(o.WGS84,e)}catch{throw new n("csv-layer","Projection not supported")}},e}();e.csvLatitudeFieldNames=T,e.csvLongitudeFieldNames=w,e.default=R,Object.defineProperty(e,"__esModule",{value:!0})}));
