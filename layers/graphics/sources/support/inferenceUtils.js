/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_parseInfo as e}from"../../../../core/number.js";import{parseRows as t}from"../csv/csv.js";function r(e){const t=e.map((e=>e.toLowerCase()));return{longitudeFieldName:e[t.indexOf(d.find((e=>t.includes(e))))],latitudeFieldName:e[t.indexOf(s.find((e=>t.includes(e))))]}}function n(e,r,n,l){const o=[],a=t(e,n,r),u=[];for(const t of a){if(10===u.length)break;u.push(t)}for(const t of n)if(t===l.longitudeFieldName||t===l.latitudeFieldName)o.push({name:t,type:"esriFieldTypeDouble",alias:t});else{const e=i(u.map((e=>e[t]))),r={name:t,type:null,alias:t};switch(e){case"integer":r.type="esriFieldTypeInteger";break;case"double":r.type="esriFieldTypeDouble";break;case"date":r.type="esriFieldTypeDate",r.length=36;break;default:r.type="esriFieldTypeString",r.length=255}o.push(r)}return o}function i(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let r=!1;if(""!==e){if(t.test(e))r=!0;else{let t=o(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?"double":"integer";if(e.includes("E")){if(t=Number(e),!isNaN(t))return"double";if(e.includes(",")){if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";r=!0}else r=!0}else r=!0}if(r){if(!/^[-]?\d*[.,]?\d*$/.test(e)){return l(new Date(e),e)?"date":"string"}return"string"}return"string"}})).reduce(((e,t)=>void 0===e||e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}function l(e,t){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let r=!0;if(!u&&/\d+\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,n=0;for(;!t&&n<=e.length;)t=!a.test(e[n]),n++;r=!t}}return r}const o=function(){const t=e(),r=new RegExp("^"+t.regexp+"$"),n=new RegExp("["+t.group+"\\s\\xa0]","g"),i=t.factor;return e=>{const l=r.exec(e);if(t.factor=i,!l)return NaN;let o=l[1];if(!l[1]){if(!l[2])return NaN;o=l[2],t.factor*=-1}return o=o.replace(n,"").replace(t.decimal,"."),+o*t.factor}}(),a=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,u=Number.isNaN(new Date("technology 10").getTime()),s=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point-y"],d=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point-x"];export{i as inferFieldType,n as inferFields,r as inferLocationInfo,l as isValidDate,o as parseNumber};
