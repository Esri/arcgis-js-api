/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../core/maybe"],(function(t,e){"use strict";function n(t,e){return t?e?4:3:e?3:2}function r(t,r,u,l,N){if(e.isNone(r)||!r.lengths.length)return null;const s="upperLeft"===N?.originPosition?-1:1;t.lengths.length&&(t.lengths.length=0),t.coords.length&&(t.coords.length=0);const i=t.coords,c=[],f=u?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:T,coords:g}=r,h=n(u,l);let E=0;for(const e of T){const t=o(f,g,E,e,u,l,s);t&&c.push(t),E+=e*h}if(c.sort(((t,e)=>{let n=s*t[2]-s*e[2];return 0===n&&u&&(n=t[4]-e[4]),n})),c.length){let t=6*c[0][2];i[0]=c[0][0]/t,i[1]=c[0][1]/t,u&&(t=6*c[0][4],i[2]=0!==t?c[0][3]/t:0),(i[0]<f[0]||i[0]>f[1]||i[1]<f[2]||i[1]>f[3]||u&&(i[2]<f[4]||i[2]>f[5]))&&(i.length=0)}if(!i.length){const t=r.lengths[0]?I(g,0,T[0],u,l):null;if(!t)return null;i[0]=t[0],i[1]=t[1],u&&t.length>2&&(i[2]=t[2])}return t}function o(t,e,r,o,I,u,l=1){const N=n(I,u);let s=r,i=r+N,c=0,f=0,T=0,g=0,h=0;for(let n=0,m=o-1;n<m;n++,s+=N,i+=N){const n=e[s],r=e[s+1],o=e[s+2],u=e[i],l=e[i+1],N=e[i+2];let E=n*l-u*r;g+=E,c+=(n+u)*E,f+=(r+l)*E,I&&(E=n*N-u*o,T+=(o+N)*E,h+=E),n<t[0]&&(t[0]=n),n>t[1]&&(t[1]=n),r<t[2]&&(t[2]=r),r>t[3]&&(t[3]=r),I&&(o<t[4]&&(t[4]=o),o>t[5]&&(t[5]=o))}if(g*l>0&&(g*=-1),h*l>0&&(h*=-1),!g)return null;const E=[c,f,.5*g];return I&&(E[3]=T,E[4]=.5*h),E}function I(t,e,r,o,I){const i=n(o,I);let c=e,f=e+i,T=0,g=0,h=0,E=0;for(let n=0,m=r-1;n<m;n++,c+=i,f+=i){const e=t[c],n=t[c+1],r=t[c+2],I=t[f],i=t[f+1],m=t[f+2],b=o?l(e,n,r,I,i,m):u(e,n,I,i);if(b)if(T+=b,o){const t=s(e,n,r,I,i,m);g+=b*t[0],h+=b*t[1],E+=b*t[2]}else{const t=N(e,n,I,i);g+=b*t[0],h+=b*t[1]}}return T>0?o?[g/T,h/T,E/T]:[g/T,h/T]:r>0?o?[t[e],t[e+1],t[e+2]]:[t[e],t[e+1]]:null}function u(t,e,n,r){const o=n-t,I=r-e;return Math.sqrt(o*o+I*I)}function l(t,e,n,r,o,I){const u=r-t,l=o-e,N=I-n;return Math.sqrt(u*u+l*l+N*N)}function N(t,e,n,r){return[t+.5*(n-t),e+.5*(r-e)]}function s(t,e,n,r,o,I){return[t+.5*(r-t),e+.5*(o-e),n+.5*(I-n)]}t.getCentroidOptimizedGeometry=r,t.lineCentroid=I,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
