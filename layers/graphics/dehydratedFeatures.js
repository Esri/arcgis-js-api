/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["exports","../../core/byteSizeEstimations","../../core/has","../../core/maybe","../../core/typedArrayUtil","../../core/uid","../../geometry/SpatialReference","../../geometry/support/aaBoundingBox","../../geometry/support/aaBoundingRect","../../geometry/support/quantizationUtils","../../geometry/support/typeUtils","../support/Field","./dehydratedFeatureComparison"],(function(e,t,n,s,r,a,i,o,l,u,c,p,h){"use strict";let m=function(e,t,n){this.uid=e,this.geometry=t,this.attributes=n,this.visible=!0,this.objectId=null,this.centroid=null};function y(e){return s.isSome(e.geometry)}function d(e){return c.isFeatureGeometryType(e.type)}let f=function(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null};function g(e){const t=c.featureGeometryTypeKebabDictionary.fromJSON(e.geometryType),n=i.fromJSON(e.spatialReference),r=e.transform,a=e.features.map((a=>{const i=b(a,t,n,e.objectIdFieldName),o=i.geometry;if(s.isSome(o)&&r)switch(o.type){case"point":i.geometry=u.unquantizePoint(r,o,o,o.hasZ,o.hasM);break;case"multipoint":i.geometry=u.unquantizeMultipoint(r,o,o,o.hasZ,o.hasM);break;case"polygon":i.geometry=u.unquantizePolygon(r,o,o,o.hasZ,o.hasM);break;case"polyline":i.geometry=u.unquantizePolyline(r,o,o,o.hasZ,o.hasM);break;case"extent":case"mesh":i.geometry=o}return i}));return{geometryType:t,features:a,spatialReference:n,fields:e.fields?e.fields.map((e=>p.fromJSON(e))):null,objectIdFieldName:e.objectIdFieldName,globalIdFieldName:e.globalIdFieldName,geohashFieldName:e.geohashFieldName,geometryProperties:e.geometryProperties,hasZ:e.hasZ,hasM:e.hasM,exceededTransferLimit:e.exceededTransferLimit,transform:null}}function b(e,t,n,s){return{uid:a.generateUID(),objectId:s&&e.attributes?e.attributes[s]:null,attributes:e.attributes,geometry:x(e.geometry,t,n),visible:!0}}function x(e,t,n){if(!e)return null;switch(t){case"point":{const t=e;return{x:t.x,y:t.y,z:t.z,m:t.m,hasZ:null!=t.z,hasM:null!=t.m,type:"point",spatialReference:n}}case"polyline":{const t=e;return{paths:t.paths,hasZ:!!t.hasZ,hasM:!!t.hasM,type:"polyline",spatialReference:n}}case"polygon":{const t=e;return{rings:t.rings,hasZ:!!t.hasZ,hasM:!!t.hasM,type:"polygon",spatialReference:n}}case"multipoint":{const t=e;return{points:t.points,hasZ:!!t.hasZ,hasM:!!t.hasM,type:"multipoint",spatialReference:n}}}}function A(e,t,n,s){return{x:e,y:t,z:n,hasZ:null!=n,hasM:!1,spatialReference:s,type:"point"}}function N(e){if(s.isNone(e))return 0;let t=32;switch(e.type){case"point":t+=42;break;case"polyline":case"polygon":{let n=0;const s=2+(e.hasZ?1:0)+(e.hasM?1:0),r="polyline"===e.type?e.paths:e.rings;for(const e of r)n+=e.length;t+=8*n*s+64,t+=128*n,t+=34,t+=32*(r.length+1);break}case"multipoint":{const n=2+(e.hasZ?1:0)+(e.hasM?1:0),s=e.points.length;t+=8*s*n+64,t+=128*s,t+=34,t+=32;break}case"extent":t+=98,e.hasM&&(t+=32),e.hasZ&&(t+=32);break;case"mesh":t+=r.estimateSize(e.vertexAttributes.position),t+=r.estimateSize(e.vertexAttributes.normal),t+=r.estimateSize(e.vertexAttributes.uv),t+=r.estimateSize(e.vertexAttributes.tangent)}return t}function z(e){let n=32;return n+=t.estimateAttributesObjectSize(e.attributes),n+=3,n+=8+N(e.geometry),n}function Z(e){if(s.isNone(e))return 0;switch(e.type){case"point":return 1;case"polyline":{let t=0;for(const n of e.paths)t+=n.length;return t}case"polygon":{let t=0;for(const n of e.rings)t+=n.length;return t}case"multipoint":return e.points.length;case"extent":return 2;case"mesh":{const t=e.vertexAttributes&&e.vertexAttributes.position;return t?t.length/3:0}default:return}}function M(e){if(s.isNone(e))return!1;switch(e.type){case"extent":case"point":return!0;case"polyline":for(const t of e.paths)if(t.length>0)return!0;return!1;case"polygon":for(const t of e.rings)if(t.length>0)return!0;return!1;case"multipoint":return e.points.length>0;case"mesh":return!e.loaded||e.vertexAttributes.position.length>0}}function S(e,t){switch(o.empty(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[3]=e.x,t[1]=t[4]=e.y,e.hasZ&&(t[2]=t[5]=e.z);break;case"polyline":for(let n=0;n<e.paths.length;n++)o.expandWithNestedArray(t,e.paths[n],e.hasZ);break;case"polygon":for(let n=0;n<e.rings.length;n++)o.expandWithNestedArray(t,e.rings[n],e.hasZ);break;case"multipoint":o.expandWithNestedArray(t,e.points,e.hasZ);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[3]=e.xmax,t[4]=e.ymax,null!=e.zmin&&(t[2]=e.zmin),null!=e.zmax&&(t[5]=e.zmax)}}function k(e,t){S(e,R),o.expandWithAABB(t,R)}function F(e,t){switch(l.empty(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[2]=e.x,t[1]=t[3]=e.y;break;case"polyline":for(let n=0;n<e.paths.length;n++)l.expandWithNestedArray(t,e.paths[n]);break;case"polygon":for(let n=0;n<e.rings.length;n++)l.expandWithNestedArray(t,e.rings[n]);break;case"multipoint":l.expandWithNestedArray(t,e.points);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[2]=e.xmax,t[3]=e.ymax}}function I(e,t){F(e,v),l.expand(t,v)}function j(e,t){return null!=e.objectId?e.objectId:e.attributes&&t?e.attributes[t]:null}const R=o.create(),v=l.create();e.equals=h.equals,e.DehydratedFeatureClass=m,e.DehydratedFeatureSetClass=f,e.computeAABB=S,e.computeAABR=F,e.estimateGeometryObjectSize=N,e.estimateSize=z,e.expandAABB=k,e.expandAABR=I,e.fromFeatureSetJSON=g,e.fromJSONGeometry=x,e.getObjectId=j,e.hasGeometry=y,e.hasVertices=M,e.isFeatureGeometry=d,e.makeDehydratedPoint=A,e.numVertices=Z,Object.defineProperty(e,"__esModule",{value:!0})}));
