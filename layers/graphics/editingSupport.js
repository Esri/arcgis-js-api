/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../Graphic","../../core/Collection","../../core/Error","../../core/lang","../../core/maybe","../../core/urlUtils","../../core/uuid","../../geometry/support/normalizeUtils","../mixins/EditBusLayer","../support/infoFor3D"],(function(e,t,a,r,s,i,n,o,d,l,u,p){"use strict";function c(e){return e&&null!=e.applyEdits}function h(e,t,a){return y.apply(this,arguments)}function y(){return(y=t._asyncToGenerator((function*(e,t,a,r={}){let s,n;const o={edits:a,result:new Promise(((e,t)=>{s=e,n=t}))};e.emit("apply-edits",o);try{const{results:n,edits:o}=yield f(e,t,a,r),d=e=>e.filter((e=>!e.error)).map(i.clone),l={edits:o,addedFeatures:d(n.addFeatureResults),updatedFeatures:d(n.updateFeatureResults),deletedFeatures:d(n.deleteFeatureResults),addedAttachments:d(n.addAttachmentResults),updatedAttachments:d(n.updateAttachmentResults),deletedAttachments:d(n.deleteAttachmentResults)};return n.editedFeatureResults?.length&&(l.editedFeatures=n.editedFeatureResults),(l.addedFeatures.length||l.updatedFeatures.length||l.deletedFeatures.length||l.addedAttachments.length||l.updatedAttachments.length||l.deletedAttachments.length)&&(e.emit("edits",l),u.isEditBusLayer(e)&&u.editEventBus.emit("edits",{layer:e,event:l})),s(l),n}catch(d){throw n(d),d}}))).apply(this,arguments)}function f(e,t,a,r){return m.apply(this,arguments)}function m(){return(m=t._asyncToGenerator((function*(e,t,a,r){if(yield e.load(),!c(t))throw new s(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!e.editingEnabled)throw new s(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:i,options:n}=yield g(e,a,r);return i.addFeatures.length||i.updateFeatures.length||i.deleteFeatures.length||i.addAttachments.length||i.updateAttachments.length||i.deleteAttachments.length?{edits:i,results:yield t.applyEdits(i,n)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}))).apply(this,arguments)}function g(e,t,a){return b.apply(this,arguments)}function b(){return(b=t._asyncToGenerator((function*(e,t,a){const i=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),o=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),d=n.isSome(e.infoFor3D);if(!t||!i&&!o)throw new s(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new s(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new s(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new s(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&o)throw new s(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&o)throw new s(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const l={...a};if(null!=l.rollbackOnFailureEnabled||e.capabilities.editing.supportsRollbackOnFailure||(l.rollbackOnFailureEnabled=!0),!1===l.rollbackOnFailureEnabled&&"original-and-current-features"===l.returnServiceEditsOption)throw new s(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true.");if(!e.capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference&&l.returnServiceEditsInSourceSR)throw new s(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(l.returnServiceEditsInSourceSR&&"original-and-current-features"!==l.returnServiceEditsOption)throw new s(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsOption' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const u={...t};if(u.addFeatures=t&&r.isCollection(t.addFeatures)?t.addFeatures.toArray():u.addFeatures||[],u.updateFeatures=t&&r.isCollection(t.updateFeatures)?t.updateFeatures.toArray():u.updateFeatures||[],u.deleteFeatures=t&&r.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():u.deleteFeatures||[],u.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new s(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(u.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new s(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(u.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new s(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");u.addAttachments=u.addAttachments||[],u.updateAttachments=u.updateAttachments||[],u.deleteAttachments=u.deleteAttachments||[],u.addFeatures=u.addFeatures.map($),u.updateFeatures=u.updateFeatures.map($),u.addAssets=[];const p=a&&a.globalIdUsed||d;u.addFeatures.forEach((t=>w(t,e,p))),u.updateFeatures.forEach((t=>v(t,e,p))),u.deleteFeatures.forEach((t=>A(t,e,p))),u.addAttachments.forEach((t=>I(t,e))),u.updateAttachments.forEach((t=>I(t,e))),d&&(yield R(u,e));return{edits:yield S(u),options:l}}))).apply(this,arguments)}function F(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new s(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new s(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&n.isSome(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new s(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new s(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function w(e,t,a){F(e,t,a)}function A(e,t,a){F(e,t,a)}function v(e,t,a){if(F(e,t,a),"geometry"in e&&n.isSome(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new s(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}function I(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new s(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new s(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new s(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new s(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&!!r.data.name)&&!r.name)throw new s(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&r.uploadId)throw new s(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=o.dataComponents(r.data);if(e&&!e.isBase64)throw new s(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function S(e){return E.apply(this,arguments)}function E(){return(E=t._asyncToGenerator((function*(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=yield l.normalizeCentralMeridian(r),i=t.length,n=a.length;return s.slice(0,i).forEach(((t,a)=>e.addFeatures[a].geometry=t)),s.slice(i,i+n).forEach(((t,a)=>e.updateFeatures[a].geometry=t)),e}))).apply(this,arguments)}function $(e){const t=new a;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}function R(e,t){return T.apply(this,arguments)}function T(){return(T=t._asyncToGenerator((function*(e,t){if(n.isNone(t.infoFor3D))return;const{infoFor3D:a}=t;let r=!1;for(const n of a.editFormats)if(n===p.AssetType.GLTF_BINARY){r=!0;break}const s=[];for(const n of e.addFeatures)s.push(G(n,e,t,r));for(const n of e.updateFeatures)s.push(G(n,e,t,r));const i=yield Promise.allSettled(s);for(const n of i)if("rejected"===n.status)throw n.reason}))).apply(this,arguments)}function G(e,t,a,r){return U.apply(this,arguments)}function U(){return(U=t._asyncToGenerator((function*(e,t,a,r){if(n.isNone(e.geometry)||"mesh"!==e.geometry.type)return;const i=e.geometry,o=a.globalIdField;if(n.isSome(a.parsedUrl)&&n.isSome(i.external)&&Array.isArray(i.external.source)&&1===i.external.source.length&&"source"in i.external.source[0]&&"string"==typeof i.external.source[0].source&&i.external.source[0].source.startsWith(a.parsedUrl.path))return;if(!r)throw new s(`${a.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");const l=yield i.toBinaryGLTF(),u=yield l.buffer(),c=`{${d.generateUUID()}}`,h=`${c}.glb`;t.addAssets.push({featureGlobalId:e.getAttribute(o),assetMapGlobalId:c,assetName:h,flags:0,data:u.data,mimeType:u.type,assetType:p.AssetType.GLTF_BINARY,feature:e})}))).apply(this,arguments)}e.applyEdits=h,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
