/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../config","../core/maybe","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../symbols/Symbol","../symbols/SimpleLineSymbol","../request","../symbols/PictureMarkerSymbol","../symbols/SimpleFillSymbol","../symbols/SimpleMarkerSymbol","../symbols","./Layer","../core/MultiOriginJSONSupport","./support/commonProperties","./mixins/OperationalLayer","./mixins/BlendLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer"],(function(e,r,o,t,i,l,s,a,n,p,y,c,u,d,S,m,_,f,b,h,v,g,L,R,C,x,O,k){"use strict";const M=["atom","xml"],F={base:d,key:"type",typeMap:{"simple-line":S},errorContext:"symbol"},P={base:d,key:"type",typeMap:{"picture-marker":_,"simple-marker":b},errorContext:"symbol"},w={base:d,key:"type",typeMap:{"simple-fill":f},errorContext:"symbol"};let j=function(r){function o(...e){var o;return(o=r.call(this,...e)||this).description=null,o.legendEnabled=!0,o.lineSymbol=null,o.pointSymbol=null,o.polygonSymbol=null,o.operationalLayerType="GeoRSS",o.outSpatialReference=null,o.url=null,o.type="geo-rss",o}e._inheritsLoose(o,r);var l=o.prototype;return l.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},l.readFeatureCollections=function(e,r){return r.featureCollection.layers.forEach((e=>{const r=e.layerDefinition.drawingInfo.renderer.symbol;r&&"esriSFS"===r.type&&r.outline&&-1!==r.outline.style.indexOf("esriSFS")&&(r.outline.style="esriSLSSolid")})),r.featureCollection.layers},l.load=function(e){const r=i.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then((()=>this._fetchService(r)),(()=>this._fetchService(r)))),Promise.resolve(this)},l._fetchService=async function(e){const{data:r}=await m(t.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(r,{origin:"service"})},e._createClass(o,[{key:"title",get:function(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?y.getFilename(this.url,M)||"GeoRSS":e||""},set:function(e){this._set("title",e)}}]),o}(C.BlendLayer(O.RefreshableLayer(R.OperationalLayer(x.PortalLayer(k.ScaleRangeLayer(g.MultiOriginJSONMixin(v)))))));return r.__decorate([a.property()],j.prototype,"description",void 0),r.__decorate([a.property({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],j.prototype,"title",null),r.__decorate([a.property()],j.prototype,"featureCollections",void 0),r.__decorate([n.reader("service","featureCollections",["featureCollection.layers"])],j.prototype,"readFeatureCollections",null),r.__decorate([a.property(L.id)],j.prototype,"id",void 0),r.__decorate([a.property(L.legendEnabled)],j.prototype,"legendEnabled",void 0),r.__decorate([a.property({types:F,json:{write:!0}})],j.prototype,"lineSymbol",void 0),r.__decorate([a.property({type:["show","hide"]})],j.prototype,"listMode",void 0),r.__decorate([a.property({types:P,json:{write:!0}})],j.prototype,"pointSymbol",void 0),r.__decorate([a.property({types:w,json:{write:!0}})],j.prototype,"polygonSymbol",void 0),r.__decorate([a.property({type:["GeoRSS"]})],j.prototype,"operationalLayerType",void 0),r.__decorate([a.property()],j.prototype,"outSpatialReference",void 0),r.__decorate([a.property(L.url)],j.prototype,"url",void 0),r.__decorate([a.property({readOnly:!0,json:{read:!1},value:"geo-rss"})],j.prototype,"type",void 0),j=r.__decorate([p.subclass("esri.layers.GeoRSSLayer")],j),j}));
