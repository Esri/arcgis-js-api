/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../config","../request","../symbols","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/accessorSupport/ensureType","../core/Logger","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/commonProperties","../symbols/Symbol","../symbols/SimpleLineSymbol","../symbols/PictureMarkerSymbol","../symbols/SimpleMarkerSymbol","../symbols/SimpleFillSymbol"],(function(e,r,o,t,i,l,s,n,a,p,y,c,u,d,S,m,_,f,b,h,v,g,L,R,C,x,O){"use strict";const k=["atom","xml"],M={base:L,key:"type",typeMap:{"simple-line":R},errorContext:"symbol"},F={base:L,key:"type",typeMap:{"picture-marker":C,"simple-marker":x},errorContext:"symbol"},P={base:L,key:"type",typeMap:{"simple-fill":O},errorContext:"symbol"};let w=function(r){function i(...e){var o;return(o=r.call(this,...e)||this).description=null,o.legendEnabled=!0,o.lineSymbol=null,o.pointSymbol=null,o.polygonSymbol=null,o.operationalLayerType="GeoRSS",o.outSpatialReference=null,o.url=null,o.type="geo-rss",o}e._inheritsLoose(i,r);var s=i.prototype;return s.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},s.readFeatureCollections=function(e,r){return r.featureCollection.layers.forEach((e=>{const r=e.layerDefinition.drawingInfo.renderer.symbol;r&&"esriSFS"===r.type&&r.outline&&-1!==r.outline.style.indexOf("esriSFS")&&(r.outline.style="esriSLSSolid")})),r.featureCollection.layers},s.load=function(e){const r=l.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(n.throwIfAbortError).then((()=>this._fetchService(r)))),Promise.resolve(this)},s._fetchService=function(){var r=e._asyncToGenerator((function*(e){const{data:r}=yield t(o.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(r,{origin:"service"})}));function i(e){return r.apply(this,arguments)}return i}(),e._createClass(i,[{key:"title",get:function(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?a.getFilename(this.url,k)||"GeoRSS":e||""},set:function(e){this._set("title",e)}}]),i}(_.BlendLayer(h.RefreshableLayer(f.OperationalLayer(b.PortalLayer(v.ScaleRangeLayer(s.MultiOriginJSONMixin(m)))))));return r.__decorate([p.property()],w.prototype,"description",void 0),r.__decorate([p.property({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],w.prototype,"title",null),r.__decorate([p.property()],w.prototype,"featureCollections",void 0),r.__decorate([d.reader("service","featureCollections",["featureCollection.layers"])],w.prototype,"readFeatureCollections",null),r.__decorate([p.property(g.id)],w.prototype,"id",void 0),r.__decorate([p.property(g.legendEnabled)],w.prototype,"legendEnabled",void 0),r.__decorate([p.property({types:M,json:{write:!0}})],w.prototype,"lineSymbol",void 0),r.__decorate([p.property({type:["show","hide"]})],w.prototype,"listMode",void 0),r.__decorate([p.property({types:F,json:{write:!0}})],w.prototype,"pointSymbol",void 0),r.__decorate([p.property({types:P,json:{write:!0}})],w.prototype,"polygonSymbol",void 0),r.__decorate([p.property({type:["GeoRSS"]})],w.prototype,"operationalLayerType",void 0),r.__decorate([p.property()],w.prototype,"outSpatialReference",void 0),r.__decorate([p.property(g.url)],w.prototype,"url",void 0),r.__decorate([p.property({readOnly:!0,json:{read:!1},value:"geo-rss"})],w.prototype,"type",void 0),w=r.__decorate([S.subclass("esri.layers.GeoRSSLayer")],w),w}));
