/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/Error","../core/Handles","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/persistable","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/SceneService","./support/commonProperties","./support/I3SLayerDefinitions","./support/SceneModifications","../chunks/persistableUrlUtils"],(function(e,r,t,o,i,n,s,a,p,c,y,d,l,u,f,h,m,v,S,_,g,T,I,w,L){"use strict";let x=function(r){function n(...e){var t;return(t=r.call(this,...e)||this)._handles=new o,t.geometryType="mesh",t.operationalLayerType="IntegratedMeshLayer",t.type="integrated-mesh",t.nodePages=null,t.materialDefinitions=null,t.textureSetDefinitions=null,t.geometryDefinitions=null,t.serviceUpdateTimeStamp=null,t.profile="mesh-pyramids",t.modifications=null,t._modificationsSource=null,t.elevationInfo=null,t.path=null,t}e._inheritsLoose(n,r);var p=n.prototype;return p.destroy=function(){this._handles.destroy()},p.initialize=function(){this._handles.add(a.on((()=>this.modifications),"after-changes",(()=>this.modifications=this.modifications),a.sync))},p.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},p.readModifications=function(e,r,t){this._modificationsSource={url:L.fromJSON(e,t),context:t}},p.load=function(){var r=e._asyncToGenerator((function*(e){return this.addResolvingPromise(this._doLoad(e)),this}));function t(e){return r.apply(this,arguments)}return t}(),p._doLoad=function(){var r=e._asyncToGenerator((function*(e){const r=i.get(e,"signal");try{yield this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(t){s.throwIfAbortError(t)}if(yield this._fetchService(r),i.isSome(this._modificationsSource)){const r=yield w.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}yield this._fetchIndexAndUpdateExtent(this.nodePages,r)}));function t(e){return r.apply(this,arguments)}return t}(),p.beforeSave=function(){if(!i.isNone(this._modificationsSource))return this.load().then((()=>{}),(()=>{}))},p.saveAs=function(){var r=e._asyncToGenerator((function*(e,r){return this._debouncedSaveOperations(g.SaveOperationType.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}));function t(e,t){return r.apply(this,arguments)}return t}(),p.save=function(){var r=e._asyncToGenerator((function*(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(g.SaveOperationType.SAVE,e)}));function t(){return r.apply(this,arguments)}return t}(),p.validateLayer=function(e){if(e.layerType&&"IntegratedMesh"!==e.layerType)throw new t("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new t("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new t("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})},p._getTypeKeywords=function(){return["IntegratedMeshLayer"]},n}(g.SceneService(m.ArcGISService(v.OperationalLayer(S.PortalLayer(_.ScaleRangeLayer(n.MultiOriginJSONMixin(h.APIKeyMixin(f))))))));r.__decorate([p.property({type:String,readOnly:!0})],x.prototype,"geometryType",void 0),r.__decorate([p.property({type:["show","hide"]})],x.prototype,"listMode",void 0),r.__decorate([p.property({type:["IntegratedMeshLayer"]})],x.prototype,"operationalLayerType",void 0),r.__decorate([p.property({json:{read:!1},readOnly:!0})],x.prototype,"type",void 0),r.__decorate([p.property({type:I.I3SNodePageDefinition,readOnly:!0})],x.prototype,"nodePages",void 0),r.__decorate([p.property({type:[I.I3SMaterialDefinition],readOnly:!0})],x.prototype,"materialDefinitions",void 0),r.__decorate([p.property({type:[I.I3STextureSetDefinition],readOnly:!0})],x.prototype,"textureSetDefinitions",void 0),r.__decorate([p.property({type:[I.I3SGeometryDefinition],readOnly:!0})],x.prototype,"geometryDefinitions",void 0),r.__decorate([p.property({readOnly:!0})],x.prototype,"serviceUpdateTimeStamp",void 0),r.__decorate([p.property({type:w}),u.persistable({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],x.prototype,"modifications",void 0),r.__decorate([d.reader(["web-scene","portal-item"],"modifications")],x.prototype,"readModifications",null),r.__decorate([p.property(T.elevationInfo)],x.prototype,"elevationInfo",void 0),r.__decorate([p.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],x.prototype,"path",void 0),x=r.__decorate([l.subclass("esri.layers.IntegratedMeshLayer")],x);return x}));
