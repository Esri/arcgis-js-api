/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../geometry","../core/Error","../core/maybe","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","./FeatureLayer","./graphics/sources/CSVSource","./graphics/sources/support/clientSideDefaults","../rest/support/Query","../chunks/persistableUrlUtils","../geometry/SpatialReference"],(function(e,r,t,o,i,n,a,s,l,u,c,d,p,y,h,f,g,_){"use strict";function m(e,r){throw new o(r,`CSVLayer (title: ${e.title}, id: ${e.id}) cannot be saved to a portal item`)}let v=function(r){function t(...e){var t;return(t=r.call(this,...e)||this).geometryType="point",t.capabilities=h.createCapabilities(!1,!1),t.delimiter=null,t.editingEnabled=!1,t.fields=null,t.latitudeField=null,t.locationType="coordinates",t.longitudeField=null,t.operationalLayerType="CSV",t.outFields=["*"],t.path=null,t.spatialReference=_.WGS84,t.source=null,t.type="csv",t}e._inheritsLoose(t,r);var s=t.prototype;return s.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},s.load=function(r){var t=this;const o=i.isSome(r)?r.signal:null,a=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},r).catch(n.throwIfAbortError).then(e._asyncToGenerator((function*(){return t.initLayerProperties(yield t.createGraphicsSource(o))})));return this.addResolvingPromise(a),Promise.resolve(this)},s.readWebMapLabelsVisible=function(e,r){return null!=r.showLabels?r.showLabels:!!(r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.labelingInfo)},s.createGraphicsSource=function(){var r=e._asyncToGenerator((function*(e){const r=new y.CSVSource({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",r),yield r.load({signal:e}),this.read({locationInfo:r.locationInfo,columnDelimiter:r.delimiter},{origin:"service",url:this.parsedUrl}),r}));function t(e){return r.apply(this,arguments)}return t}(),s.queryFeatures=function(e,r){return this.load().then((()=>this.source.queryFeatures(f.from(e)||this.createQuery()))).then((e=>{if(e?.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))},s.queryObjectIds=function(e,r){return this.load().then((()=>this.source.queryObjectIds(f.from(e)||this.createQuery())))},s.queryFeatureCount=function(e,r){return this.load().then((()=>this.source.queryFeatureCount(f.from(e)||this.createQuery())))},s.queryExtent=function(e,r){return this.load().then((()=>this.source.queryExtent(f.from(e)||this.createQuery())))},s.read=function(e,t){r.prototype.read.call(this,e,t),t&&"service"===t.origin&&this.revert(["latitudeField","longitudeField"],"service")},s.write=function(e,t){return r.prototype.write.call(this,e,{...t,writeLayerSchema:!0})},s.clone=function(){throw new o("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)},s.save=function(){var r=e._asyncToGenerator((function*(e){return m(this,"csv-layer:save")}));function t(e){return r.apply(this,arguments)}return t}(),s.saveAs=function(){var r=e._asyncToGenerator((function*(e,r){return m(this,"csv-layer:save-as")}));function t(e,t){return r.apply(this,arguments)}return t}(),s.hasDataChanged=function(){var r=e._asyncToGenerator((function*(){try{const{dataChanged:e,updates:r}=yield this.source.refresh(this.customParameters);return i.isSome(r)&&this.read(r,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}));function t(){return r.apply(this,arguments)}return t}(),s._verifyFields=function(){},s._verifySource=function(){},s._hasMemorySource=function(){return!1},e._createClass(t,[{key:"isTable",get:function(){return this.loaded&&null==this.geometryType}},{key:"url",set:function(e){if(!e)return void this._set("url",e);const r=a.urlToObject(e);this._set("url",r.path),r.query&&(this.customParameters={...this.customParameters,...r.query})}}]),t}(p);r.__decorate([s.property({readOnly:!0,json:{read:!1,write:!1}})],v.prototype,"capabilities",void 0),r.__decorate([s.property({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],v.prototype,"delimiter",void 0),r.__decorate([s.property({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],v.prototype,"editingEnabled",void 0),r.__decorate([s.property({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],v.prototype,"fields",void 0),r.__decorate([s.property({type:Boolean,readOnly:!0})],v.prototype,"isTable",null),r.__decorate([c.reader("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],v.prototype,"readWebMapLabelsVisible",null),r.__decorate([s.property({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"latitudeField",void 0),r.__decorate([s.property({type:["show","hide"]})],v.prototype,"listMode",void 0),r.__decorate([s.property({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],v.prototype,"locationType",void 0),r.__decorate([s.property({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"longitudeField",void 0),r.__decorate([s.property({type:["CSV"]})],v.prototype,"operationalLayerType",void 0),r.__decorate([s.property()],v.prototype,"outFields",void 0),r.__decorate([s.property({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],v.prototype,"path",void 0),r.__decorate([s.property({json:{read:!1},cast:null,type:y.CSVSource,readOnly:!0})],v.prototype,"source",void 0),r.__decorate([s.property({json:{read:!1},value:"csv",readOnly:!0})],v.prototype,"type",void 0),r.__decorate([s.property({json:{read:g.read,write:{isRequired:!0,ignoreOrigin:!0,writer:g.write}}})],v.prototype,"url",null),v=r.__decorate([d.subclass("esri.layers.CSVLayer")],v);return v}));
