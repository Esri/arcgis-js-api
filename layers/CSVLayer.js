/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../geometry","../core/accessorSupport/decorators/property","../core/has","../core/accessorSupport/ensureType","../core/Logger","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","./FeatureLayer","./graphics/sources/CSVSource","./graphics/sources/support/clientSideDefaults","../rest/support/Query","../chunks/persistableUrlUtils","../geometry/SpatialReference"],(function(e,r,t,o,i,n,a,l,s,u,p,c,d,y,f){"use strict";let h=function(r){function t(...e){var t;return(t=r.call(this,...e)||this).capabilities=c.createCapabilities(!1,!1),t.delimiter=null,t.editingEnabled=!1,t.fields=null,t.latitudeField=null,t.customParameters=null,t.locationType="coordinates",t.longitudeField=null,t.operationalLayerType="CSV",t.outFields=["*"],t.path=null,t.portalItem=null,t.spatialReference=f.WGS84,t.source=null,t.type="csv",t}e._inheritsLoose(t,r);var o=t.prototype;return o.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},o.readWebMapLabelsVisible=function(e,r){return null!=r.showLabels?r.showLabels:!!(r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.labelingInfo)},o.createGraphicsSource=function(){var r=e._asyncToGenerator((function*(e){const r=new p({delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url});return this._set("source",r),yield r.load({signal:e}),this.read({locationInfo:r.locationInfo,columnDelimiter:r.columnDelimiter},{origin:"service",url:this.parsedUrl}),r}));function t(e){return r.apply(this,arguments)}return t}(),o.queryFeatures=function(e,r){return this.load().then((()=>this.source.queryFeatures(d.from(e)||this.createQuery()))).then((e=>{if(null!=e&&e.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))},o.queryObjectIds=function(e,r){return this.load().then((()=>this.source.queryObjectIds(d.from(e)||this.createQuery())))},o.queryFeatureCount=function(e,r){return this.load().then((()=>this.source.queryFeatureCount(d.from(e)||this.createQuery())))},o.queryExtent=function(e,r){return this.load().then((()=>this.source.queryExtent(d.from(e)||this.createQuery())))},o.write=function(e,t){return r.prototype.write.call(this,e,{...t,writeLayerSchema:!0})},o._verifyFields=function(){},o._verifySource=function(){},o._hasMemorySource=function(){return!1},e._createClass(t,[{key:"isTable",get:function(){return this.loaded&&null==this.geometryType}},{key:"url",set:function(e){this._set("url",e)}}]),t}(u);return r.__decorate([o.property({readOnly:!0,json:{read:!1,write:!1}})],h.prototype,"capabilities",void 0),r.__decorate([o.property({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],h.prototype,"delimiter",void 0),r.__decorate([o.property({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],h.prototype,"editingEnabled",void 0),r.__decorate([o.property({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],h.prototype,"fields",void 0),r.__decorate([o.property({type:Boolean,readOnly:!0})],h.prototype,"isTable",null),r.__decorate([l.reader("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],h.prototype,"readWebMapLabelsVisible",null),r.__decorate([o.property({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],h.prototype,"latitudeField",void 0),r.__decorate([o.property({json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],h.prototype,"customParameters",void 0),r.__decorate([o.property({type:["show","hide"]})],h.prototype,"listMode",void 0),r.__decorate([o.property({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],h.prototype,"locationType",void 0),r.__decorate([o.property({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],h.prototype,"longitudeField",void 0),r.__decorate([o.property({type:["CSV"]})],h.prototype,"operationalLayerType",void 0),r.__decorate([o.property()],h.prototype,"outFields",void 0),r.__decorate([o.property({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],h.prototype,"path",void 0),r.__decorate([o.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],h.prototype,"portalItem",void 0),r.__decorate([o.property({json:{read:!1},cast:null,type:p,readOnly:!0})],h.prototype,"source",void 0),r.__decorate([o.property({json:{read:!1},value:"csv",readOnly:!0})],h.prototype,"type",void 0),r.__decorate([o.property({json:{read:y.read,write:{isRequired:!0,ignoreOrigin:!0,writer:y.write}}})],h.prototype,"url",null),h=r.__decorate([s.subclass("esri.layers.CSVLayer")],h),h}));
