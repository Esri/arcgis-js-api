// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../geometry","../core/accessorSupport/decorators","./FeatureLayer","./graphics/data/QueryEngineCapabilities","./graphics/sources/CSVSource","../support/persistableUrlUtils","../tasks/support/Query"],(function(e,t,r,o,i,n,a,p,s,l){"use strict";return function(e){function t(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var i=e.apply(this,t)||this;return i.delimiter=null,i.editingEnabled=!0,i.fields=null,i.latitudeField=null,i.locationType="coordinates",i.longitudeField=null,i.operationalLayerType="CSV",i.outFields=["*"],i.path=null,i.portalItem=null,i.spatialReference=o.SpatialReference.WGS84,i.source=null,i.type="csv",i}return r.__extends(t,e),t.prototype.normalizeCtorArgs=function(e,t){return"string"==typeof e?r.__assign({url:e},t):e},Object.defineProperty(t.prototype,"capabilities",{get:function(){return{data:{supportsAttachment:!1,supportsM:!1,supportsZ:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsQuery:!0,supportsResizeAttachments:!1,supportsUpdate:!1},query:a.queryCapabilities,queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1},editing:{supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hasService",{get:function(){return!1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isTable",{get:function(){return this.loaded&&null==this.geometryType},enumerable:!1,configurable:!0}),t.prototype.readWebMapLabelsVisible=function(e,t){return null!=t.showLabels?t.showLabels:!!(t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.labelingInfo)},Object.defineProperty(t.prototype,"url",{set:function(e){this._set("url",e)},enumerable:!1,configurable:!0}),t.prototype.createGraphicsSource=function(e){return r.__awaiter(this,void 0,void 0,(function(){var t;return r.__generator(this,(function(r){switch(r.label){case 0:return t=new p.default({delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url}),this._set("source",t),[4,t.load({signal:e})];case 1:return r.sent(),this.read({locationInfo:t.locationInfo,columnDelimiter:t.columnDelimiter},{origin:"service",url:this.parsedUrl}),[2,t]}}))}))},t.prototype.queryFeatures=function(e,t){var r=this;return this.load().then((function(){return r.source.queryFeatures(l.from(e)||r.createQuery())})).then((function(e){if(e&&e.features)for(var t=0,o=e.features;t<o.length;t++){var i=o[t];i.layer=i.sourceLayer=r}return e}))},t.prototype.queryObjectIds=function(e,t){var r=this;return this.load().then((function(){return r.source.queryObjectIds(l.from(e)||r.createQuery())}))},t.prototype.queryFeatureCount=function(e,t){var r=this;return this.load().then((function(){return r.source.queryFeatureCount(l.from(e)||r.createQuery())}))},t.prototype.queryExtent=function(e,t){var r=this;return this.load().then((function(){return r.source.queryExtent(l.from(e)||r.createQuery())}))},t.prototype._verifyFields=function(){},t.prototype._verifySource=function(){},t.prototype._hasMemorySource=function(){return!0},r.__decorate([i.property({readOnly:!0,dependsOn:["loaded"],json:{read:!1,write:!1}})],t.prototype,"capabilities",null),r.__decorate([i.property({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],t.prototype,"delimiter",void 0),r.__decorate([i.property({type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],t.prototype,"editingEnabled",void 0),r.__decorate([i.property({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],t.prototype,"fields",void 0),r.__decorate([i.property({readOnly:!0})],t.prototype,"hasService",null),r.__decorate([i.property({type:Boolean,readOnly:!0,dependsOn:["loaded"]})],t.prototype,"isTable",null),r.__decorate([i.reader("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],t.prototype,"readWebMapLabelsVisible",null),r.__decorate([i.property({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],t.prototype,"latitudeField",void 0),r.__decorate([i.property({type:["show","hide"]})],t.prototype,"listMode",void 0),r.__decorate([i.property({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],t.prototype,"locationType",void 0),r.__decorate([i.property({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],t.prototype,"longitudeField",void 0),r.__decorate([i.property({type:["CSV"]})],t.prototype,"operationalLayerType",void 0),r.__decorate([i.property()],t.prototype,"outFields",void 0),r.__decorate([i.property({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],t.prototype,"path",void 0),r.__decorate([i.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],t.prototype,"portalItem",void 0),r.__decorate([i.property({json:{read:!1},cast:null,type:p.default,readOnly:!0})],t.prototype,"source",void 0),r.__decorate([i.property({json:{read:!1},value:"csv",readOnly:!0})],t.prototype,"type",void 0),r.__decorate([i.property({json:{read:s.read,write:{isRequired:!0,ignoreOrigin:!0,writer:s.write}}})],t.prototype,"url",null),t=r.__decorate([i.subclass("esri.layers.CSVLayer")],t)}(n)}));