/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../PopupTemplate","../rasterRenderers","../core/Error","../core/Logger","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","./Layer","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/ImageryTileMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./support/commonProperties","./support/Field","./support/rasterEnums","./support/RasterFunction","./support/rasterDatasets/FunctionRaster","./support/rasterDatasets/RasterFactory","./support/rasterFunctions/rasterFunctionHelper","../support/popupUtils"],(function(e,r,t,s,a,i,o,n,l,p,c,d,u,y,h,m,f,_,g,v,R,b,S,T,w,P,I,O,L,x,F,N,J,M){"use strict";let D=function(r){function t(...e){var t;return(t=r.call(this,...e)||this)._primaryRasters=null,t.bandIds=null,t.interpolation=null,t.legendEnabled=!0,t.isReference=null,t.listMode="show",t.sourceJSON=null,t.version=null,t.type="imagery-tile",t.operationalLayerType="ArcGISTiledImageServiceLayer",t.popupEnabled=!0,t.popupTemplate=null,t.fields=null,t}e._inheritsLoose(t,r);var n=t.prototype;return n.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},n.load=function(e){const r=o.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.throwIfAbortError).then((()=>this._openRaster(r)))),Promise.resolve(this)},n.readRenderer=function(e,r,t){const a=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,i=s.read(a,t)||void 0;if(null!=i)return i},n.createPopupTemplate=function(e){return M.createPopupTemplate({fields:this.rasterFields,title:this.title},e)},n.generateRasterInfo=function(){var r=e._asyncToGenerator((function*(e,r){if(!(e=d.ensureClass(x,e)))return this._primaryRasters[0].rasterInfo;try{const t={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>t[e.url]=e));const s=J.create(e.toJSON(),t),a=new F({rasterFunction:s});return yield a.open(r),a.rasterInfo}catch{return null}}));function t(e,t){return r.apply(this,arguments)}return t}(),n.write=function(e,t){const{raster:s}=this;if(this.loaded?"RasterTileServer"===s.datasetFormat&&("Raster"===s.tileType||"Map"===s.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return r.prototype.write.call(this,e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null},n._openRaster=function(){var r=e._asyncToGenerator((function*(e){let r=!1;if(this.raster)this.raster.rasterInfo||(yield this.raster.open()),"Function"===this.raster.datasetFormat?(r=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:r}=this,t=[this.url];r&&J.getPrimaryRasterUrls(r.toJSON(),t);const o=yield Promise.all(t.map((r=>N.open({url:r,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e})))),n=o.findIndex((e=>null==e));if(n>-1)throw new a("imagery-tile-layer:open",`cannot open raster: ${t[n]}`);if(this._primaryRasters=o,r){const e={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((r=>e[r.url]=r));const t=J.create(r.rasterFunctionDefinition??r.toJSON(),e),n=new F({rasterFunction:t});try{yield n.open(),this.raster=n}catch(s){const e=i.getLogger(this.declaredClass);s instanceof a&&e.error("imagery-tile-layer:open",s.message),e.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=o[0]}}else this.raster=o[0]}const t=this.raster.rasterInfo;if(!t)throw new a("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",r?t:this._primaryRasters[0].rasterInfo),this._set("spatialReference",t.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(p.watch((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}));function t(e){return r.apply(this,arguments)}return t}(),e._createClass(t,[{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"rasterFields",get:function(){let e=[new O({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:r}=this,t=r?.attributeTable,s=o.isSome(t)?t.fields:null,a="Raster.";if(s){const r=s.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name=a+e.name,r}));e=e.concat(r)}const i=r?.dataType,n=r?.multidimensionalInfo;if(("vector-magdir"===i||"vector-uv"===i)&&o.isSome(n)){const r=n.variables[0].unit?.trim(),t="Magnitude"+(r?` (${r})`:"");e.push(new O({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),e.push(new O({name:"Raster.Direction",alias:"Direction (Â°)",domain:null,editable:!1,type:"double"}))}return e}},{key:"renderer",set:function(e){this._set("renderer",e),this.updateRenderer()}}]),t}(g.BlendLayer(w.ScaleRangeLayer(b.OperationalLayer(S.PortalLayer(v.CustomParametersMixin(R.ImageryTileMixin(P.TemporalLayer(_.ArcGISService(T.RefreshableLayer(n.MultiOriginJSONMixin(f)))))))))));r.__decorate([c.property()],D.prototype,"_primaryRasters",void 0),r.__decorate([c.property({type:[d.Integer],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],D.prototype,"bandIds",void 0),r.__decorate([c.property({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),y.enumeration(L.interpolationKebab)],D.prototype,"interpolation",void 0),r.__decorate([c.property(I.legendEnabled)],D.prototype,"legendEnabled",void 0),r.__decorate([c.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],D.prototype,"isReference",void 0),r.__decorate([c.property({type:["show","hide"]})],D.prototype,"listMode",void 0),r.__decorate([c.property({json:{read:!0,write:!0}})],D.prototype,"blendMode",void 0),r.__decorate([c.property()],D.prototype,"sourceJSON",void 0),r.__decorate([c.property({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],D.prototype,"version",void 0),r.__decorate([c.property({readOnly:!0,json:{read:!1}})],D.prototype,"type",void 0),r.__decorate([c.property({type:["ArcGISTiledImageServiceLayer"]})],D.prototype,"operationalLayerType",void 0),r.__decorate([c.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,r,t){r[t]=!e}}}})],D.prototype,"popupEnabled",void 0),r.__decorate([c.property({type:t,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],D.prototype,"popupTemplate",void 0),r.__decorate([c.property({readOnly:!0})],D.prototype,"defaultPopupTemplate",null),r.__decorate([c.property({readOnly:!0,type:[O]})],D.prototype,"fields",void 0),r.__decorate([c.property({readOnly:!0,type:[O]})],D.prototype,"rasterFields",null),r.__decorate([c.property({types:s.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:s.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],D.prototype,"renderer",null),r.__decorate([h.reader("renderer")],D.prototype,"readRenderer",null),D=r.__decorate([m.subclass("esri.layers.ImageryTileLayer")],D);return D}));
