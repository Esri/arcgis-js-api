/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/maybe","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/jsonMap","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/Error","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../PopupTemplate","./Layer","../core/MultiOriginJSONSupport","./support/commonProperties","./mixins/OperationalLayer","../rasterRenderers","./support/Field","./mixins/BlendLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","../support/popupUtils","./mixins/ImageryTileMixin","./support/rasterDatasets/RasterFactory"],(function(e,r,t,o,i,a,n,s,p,l,d,c,u,y,h,f,_,m,g,v,S,b,P,R,T,w,I,L,O){"use strict";const N=s.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function x(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let J=function(r){function t(...e){var t;return(t=r.call(this,...e)||this).bandIds=null,t.interpolation=null,t.legendEnabled=!0,t.isReference=null,t.listMode="show",t.sourceJSON=null,t.version=null,t.title=null,t.type="imagery-tile",t.operationalLayerType="ArcGISTiledImageServiceLayer",t.popupEnabled=!0,t.popupTemplate=null,t}e._inheritsLoose(t,r);var i=t.prototype;return i.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},i.load=function(e){const r=o.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(r)),(()=>this._openRaster(r)))),Promise.resolve(this)},i.readRenderer=function(e,r,t){const o=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,i=S.read(o,t)||void 0;if(null!=i)return i},i.createPopupTemplate=function(e){return I.createPopupTemplate(this,e)},i.write=function(e,t){const{raster:o}=this;if(this.loaded?"RasterTileServer"===o.datasetFormat&&("Raster"===o.tileType||"Map"===o.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return r.prototype.write.call(this,e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new c("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null},i._openRaster=async function(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await O.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:r}=this.raster;if(!r)throw new c("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()},e._createClass(t,[{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"fields",get:function(){var e,r;let t=[new b({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const o=null==(e=this.rasterInfo)||null==(r=e.attributeTable)?void 0:r.fields,i="Raster.";if(o){const e=o.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name=i+e.name,r}));t=t.concat(e)}return t}},{key:"renderer",set:function(e){this._set("renderer",e),this.updateRenderer()}}]),t}(P.BlendLayer(w.ScaleRangeLayer(T.RefreshableLayer(v.OperationalLayer(R.PortalLayer(L.ImageryTileMixin(m.MultiOriginJSONMixin(_))))))));return r.__decorate([n.property({type:[a.Integer],json:{write:{overridePolicy:x}}})],J.prototype,"bandIds",void 0),r.__decorate([n.property({json:{write:{overridePolicy:x}}}),p.enumeration(N)],J.prototype,"interpolation",void 0),r.__decorate([n.property({json:{write:!0}})],J.prototype,"multidimensionalDefinition",void 0),r.__decorate([n.property(g.legendEnabled)],J.prototype,"legendEnabled",void 0),r.__decorate([n.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],J.prototype,"isReference",void 0),r.__decorate([n.property({type:["show","hide"]})],J.prototype,"listMode",void 0),r.__decorate([n.property()],J.prototype,"sourceJSON",void 0),r.__decorate([n.property({readOnly:!0})],J.prototype,"version",void 0),r.__decorate([n.property()],J.prototype,"title",void 0),r.__decorate([n.property({readOnly:!0,json:{read:!1}})],J.prototype,"type",void 0),r.__decorate([n.property({type:["ArcGISTiledImageServiceLayer"]})],J.prototype,"operationalLayerType",void 0),r.__decorate([n.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:x,writer(e,r,t){r[t]=!e}}}})],J.prototype,"popupEnabled",void 0),r.__decorate([n.property({type:f,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:x}}})],J.prototype,"popupTemplate",void 0),r.__decorate([n.property({readOnly:!0})],J.prototype,"defaultPopupTemplate",null),r.__decorate([n.property({readOnly:!0,type:[b]})],J.prototype,"fields",null),r.__decorate([n.property({types:S.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:x},origins:{"web-scene":{types:S.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],J.prototype,"renderer",null),r.__decorate([l.reader("renderer")],J.prototype,"readRenderer",null),J=r.__decorate([d.subclass("esri.layers.ImageryTileLayer")],J),J}));
