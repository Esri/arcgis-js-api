// COPYRIGHT Â© 2022 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/3.42/esri/copyright.txt for details.

define(["require","exports","./MemoryRequirements","./TileBufferData","./TileDisplayData","./Utils","./WGLDisplayList","./WGLDisplayObject","./WGLDisplayRecord","./mesh/VertexBuffer","./mesh/factories/WGLMeshFactory","./util/Reader","./util/serializationUtils","./util/Writer"],(function(e,t,r,a,i,s,f,n,l,o,u,d,v,h){var D=new r.default,p=new r.default;function y(e,t){var r={};for(var a in e){var i={data:new Uint32Array(t*e[a]/4),stride:e[a]};r[a]=i}return r}return function(){function e(){this.tileDisplayData=null,this.tileBufferData=null}return e.prototype.reshuffle=function(){D.reset();var t=this._collectDisplayRecords();for(var r in t)for(var i=0,n=x=t[r];i<n.length;i++){var l=n[i];D.needMore(l.geometryType,l.meshData?l.meshData.vertexCount:l.vertexCount,l.meshData?l.meshData.indexData.length:l.indexCount)}var o=t.length,u=new a;for(r=0;r<o;++r){u.geometries[r].indexBuffer=new Uint32Array(Math.round(1.15*D.indicesFor(r)));var d=[];for(var v in this.tileBufferData.geometries[r].vertexBuffer)d.push(this.tileBufferData.geometries[r].vertexBuffer[v].stride);var h=e._computeVertexAlignment(d),y=Math.round(1.15*D.verticesFor(r)),c=e._align(y,h);for(var g in this.tileBufferData.geometries[r].vertexBuffer){var m=this.tileBufferData.geometries[r].vertexBuffer[g].stride,B=Math.round(c*m/4);u.geometries[r].vertexBuffer[g]={stride:m,data:new Uint32Array(B)}}}p.reset(),this.tileDisplayData.displayList=new f;for(r=0;r<o;++r){for(var x,w=0,M=x=t[r];w<M.length;w++){if((l=M[w]).meshData)l.writeMeshDataToBuffers(p.verticesFor(r),u.geometries[r].vertexBuffer,p.indicesFor(r),u.geometries[r].indexBuffer),l.meshData=null;else{var b=this.tileBufferData.geometries[r].vertexBuffer,L=this.tileBufferData.geometries[r].indexBuffer,T=u.geometries[r].vertexBuffer,F=u.geometries[r].indexBuffer,z=p.verticesFor(r),A=p.indicesFor(r);s.copyMeshData(z,A,T,F,l,b,L),l.vertexFrom=z,l.indexFrom=A}p.needMore(r,l.vertexCount,l.indexCount)}this.tileDisplayData.displayList.addToList(x)}this.tileBufferData=u},e.prototype.getStrides=function(){for(var e=[],t=0;t<this.tileBufferData.geometries.length;++t){var r=this.tileBufferData.geometries[t];for(var a in e[t]={},r.vertexBuffer)e[t][a]=r.vertexBuffer[a].stride}return e},e.prototype._guessSize=function(){for(var e=this.tileDisplayData.displayObjects,t=Math.min(e.length,4),r=0,a=0;a<t;a++)r=Math.max(r,e[a].displayRecords.length);return 2*(12*e.length+e.length*r*40)},e.prototype.serialize=function(){var e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new h.default(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}},e.decode=function(t){var r=u.MaterialStore.deserialize(new d.default(t.materialStore)),s=v.deserializeList(new d.default(t.displayObjects),n,{store:r}),f={};for(var l in t.vertexBuffersMap)f[l]=o.VertexBuffers.decode(t.vertexBuffersMap[l]);var h=new e,D=new i,p=new a;for(var y in D.displayObjects=s,f){var c=f[y];p.geometries[y].indexBuffer=c.indexBuffer,p.geometries[y].vertexBuffer=c.namedBuffers}return h.tileDisplayData=D,h.tileBufferData=p,h},e.bind=function(t,r){var a=new e;return a.tileDisplayData=t,a.tileBufferData=r,a},e.create=function(t,r){var s=new e;s.tileDisplayData=new i,s.tileDisplayData.displayObjects=t;for(var f=[0,0,0,0,0],n=[0,0,0,0,0],o=[[],[],[],[],[]],u=0,d=t;u<d.length;u++)for(var v=0,h=d[u].displayRecords;v<h.length;v++){var D=h[v];o[D.geometryType].push(D),f[D.geometryType]+=D.meshData.vertexCount,n[D.geometryType]+=D.meshData.indexData.length}for(var p=new a,c=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(r),g=0;g<5;g++){var m=new Uint32Array(n[g]),B=y(c[g],f[g]);l.writeAllMeshDataToBuffers(o[g],B,m),p.geometries[g]={indexBuffer:m,vertexBuffer:B}}return s.tileBufferData=p,s},e._align=function(e,t){var r=e%t;return 0===r?e:e+(t-r)},e._computeVertexAlignment=function(e){for(var t=!1,r=!1,a=0,i=e;a<i.length;a++){var s=i[a];s%4==2?t=!0:s%4!=0&&(r=!0)}return r?4:t?2:1},e.prototype._collectDisplayRecords=function(){for(var e=[[],[],[],[],[]],t=0,r=this.tileDisplayData.displayObjects;t<r.length;t++)for(var a=0,i=r[t].displayRecords;a<i.length;a++){var s=i[a];e[s.geometryType].push(s)}return e},e}()}));