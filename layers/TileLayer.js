/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../request","../core/Error","../core/HandleOwner","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/arrayUtils","../core/accessorSupport/decorators/cast","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../geometry/SpatialReference","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISCachedService","./mixins/ArcGISMapService","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/SublayersOwner","./support/arcgisLayerUrl","./support/commonProperties","./support/Sublayer"],(function(e,r,t,i,a,o,s,n,l,c,p,u,d,y,h,_,f,v,m,S,g,b,T,w,O,L,A,I,P,R,M){"use strict";const U=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let x=function(r){function a(...e){var t;return(t=r.call(this,...e)||this).listMode="show",t.isReference=null,t.operationalLayerType="ArcGISTiledMapServiceLayer",t.resampling=!0,t.sourceJSON=null,t.spatialReference=null,t.path=null,t.sublayers=null,t.type="tile",t.url=null,t}e._inheritsLoose(a,r);var s=a.prototype;return s.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},s.load=function(e){const r=o.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(n.throwIfAbortError).then((()=>this._fetchService(r)))),Promise.resolve(this)},s.readSpatialReference=function(e,r){return(e=e||r.tileInfo&&r.tileInfo.spatialReference)&&_.fromJSON(e)},s.writeSublayers=function(e,r,t,i){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),o=[],s={writeSublayerStructure:!1,...i};a.forEach((e=>{const r=e.write({},s);o.push(r)}));o.some((e=>Object.keys(e).length>1))&&(r.layers=o)},s.castTileServers=function(e){return Array.isArray(e)?e.map((e=>l.urlToObject(e).path)):null},s.fetchTile=function(e,r,i,a={}){const{signal:o}=a,s=this.getTileUrl(e,r,i),n={responseType:"image",signal:o,query:{...this.refreshParameters}};return t(s,n).then((e=>e.data))},s.fetchImageBitmapTile=function(){var r=e._asyncToGenerator((function*(e,r,i,a={}){const{signal:o}=a,s=this.getTileUrl(e,r,i),n={responseType:"blob",signal:o,query:{...this.refreshParameters}},l=yield t(s,n);return createImageBitmap(l.data)}));function i(e,t,i){return r.apply(this,arguments)}return i}(),s.getTileUrl=function(e,r,t){const i=!this.tilemapCache&&this.supportsBlankTile,a=l.objectToQuery({...this.parsedUrl.query,blankTile:!i&&null,...this.customParameters,token:this.apiKey}),o=this.tileServers;return`${o&&o.length?o[r%o.length]:this.parsedUrl.path}/tile/${e}/${r}/${t}${a?"?"+a:""}`},s._fetchService=function(e){return new Promise(((r,a)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new i("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new i("tile-layer:undefined-url","layer's url is not defined");const s=P.parse(this.parsedUrl.path);if(o.isSome(s)&&"ImageServer"===s.serverType)throw new i("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");t(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,a)})).then((r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!P.isHostedAgolService(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))},s._fetchServerVersion=function(e,r){if(!P.isArcGISUrl(e))return Promise.reject();const a=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return t(a,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new i("tile-layer:version-not-available")}))},s._getMapName=function(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]},s._getDefaultAttribution=function(e){if(!e)return;let r;e=e.toLowerCase();for(let t=0,i=U.length;t<i;t++)if(r=U[t],r.toLowerCase().includes(e))return l.makeAbsolute("//static.arcgis.com/attribution/"+r)},s._getDefaultTileServers=function(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]},e._createClass(a,[{key:"attributionDataUrl",get:function(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}},{key:"tileServers",get:function(){return this._getDefaultTileServers(this.parsedUrl.path)}},{key:"hasOverriddenFetchTile",get:function(){return!this.fetchTile.__isDefault__}}]),a}(b.BlendLayer(I.SublayersOwner(A.ScaleRangeLayer(w.OperationalLayer(O.PortalLayer(m.ArcGISCachedService(S.ArcGISMapService(g.ArcGISService(s.MultiOriginJSONMixin(a.HandleOwnerMixin(L.RefreshableLayer(v.APIKeyMixin(T.CustomParametersMixin(f))))))))))))));r.__decorate([c.property({readOnly:!0})],x.prototype,"attributionDataUrl",null),r.__decorate([c.property({type:["show","hide","hide-children"]})],x.prototype,"listMode",void 0),r.__decorate([c.property({json:{read:!0,write:!0}})],x.prototype,"blendMode",void 0),r.__decorate([c.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],x.prototype,"isReference",void 0),r.__decorate([c.property({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],x.prototype,"operationalLayerType",void 0),r.__decorate([c.property({type:Boolean})],x.prototype,"resampling",void 0),r.__decorate([c.property()],x.prototype,"sourceJSON",void 0),r.__decorate([c.property({type:_})],x.prototype,"spatialReference",void 0),r.__decorate([d.reader("spatialReference",["spatialReference","tileInfo"])],x.prototype,"readSpatialReference",null),r.__decorate([c.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],x.prototype,"path",void 0),r.__decorate([c.property({readOnly:!0})],x.prototype,"sublayers",void 0),r.__decorate([h.writer("sublayers",{layers:{type:[M]}})],x.prototype,"writeSublayers",null),r.__decorate([c.property({json:{read:!1,write:!1}})],x.prototype,"popupEnabled",void 0),r.__decorate([c.property()],x.prototype,"tileServers",null),r.__decorate([u.cast("tileServers")],x.prototype,"castTileServers",null),r.__decorate([c.property({readOnly:!0,json:{read:!1}})],x.prototype,"type",void 0),r.__decorate([c.property(R.url)],x.prototype,"url",void 0),x=r.__decorate([y.subclass("esri.layers.TileLayer")],x),x.prototype.fetchTile.__isDefault__=!0;return x}));
