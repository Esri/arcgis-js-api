/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["require","exports","../../core/promiseUtils"],(function(e,n,a){"use strict";function i(e){return Object.freeze({__proto__:null,default:e})}const t={ArcGISFeatureLayer:async()=>(await new Promise((function(n,a){e(["../FeatureLayer"],(function(e){n(i(e))}),a)}))).default,ArcGISImageServiceLayer:async()=>(await new Promise((function(n,a){e(["../ImageryLayer"],(function(e){n(i(e))}),a)}))).default,ArcGISImageServiceVectorLayer:()=>a.resolve(null),ArcGISMapServiceLayer:async()=>(await new Promise((function(n,a){e(["../MapImageLayer"],(function(e){n(i(e))}),a)}))).default,ArcGISSceneServiceLayer:async()=>(await new Promise((function(n,a){e(["../SceneLayer"],(function(e){n(i(e))}),a)}))).default,ArcGISStreamLayer:async()=>(await new Promise((function(n,a){e(["../StreamLayer"],(function(e){n(i(e))}),a)}))).default,ArcGISTiledElevationServiceLayer:async()=>(await new Promise((function(n,a){e(["../ElevationLayer"],(function(e){n(i(e))}),a)}))).default,ArcGISTiledImageServiceLayer:async()=>(await new Promise((function(n,a){e(["../ImageryTileLayer"],(function(e){n(i(e))}),a)}))).default,ArcGISTiledMapServiceLayer:async()=>(await new Promise((function(n,a){e(["../TileLayer"],(function(e){n(i(e))}),a)}))).default,BingMapsAerial:async()=>(await new Promise((function(n,a){e(["../BingMapsLayer"],(function(e){n(i(e))}),a)}))).default,BingMapsRoad:async()=>(await new Promise((function(n,a){e(["../BingMapsLayer"],(function(e){n(i(e))}),a)}))).default,BingMapsHybrid:async()=>(await new Promise((function(n,a){e(["../BingMapsLayer"],(function(e){n(i(e))}),a)}))).default,BuildingSceneLayer:async()=>(await new Promise((function(n,a){e(["../BuildingSceneLayer"],(function(e){n(i(e))}),a)}))).default,CSV:async()=>(await new Promise((function(n,a){e(["../CSVLayer"],(function(e){n(i(e))}),a)}))).default,GeoRSS:async()=>(await new Promise((function(n,a){e(["../GeoRSSLayer"],(function(e){n(i(e))}),a)}))).default,GroupLayer:async()=>(await new Promise((function(n,a){e(["../GroupLayer"],(function(e){n(i(e))}),a)}))).default,IntegratedMeshLayer:async()=>(await new Promise((function(n,a){e(["../IntegratedMeshLayer"],(function(e){n(i(e))}),a)}))).default,KML:async()=>(await new Promise((function(n,a){e(["../KMLLayer"],(function(e){n(i(e))}),a)}))).default,OpenStreetMap:async()=>(await new Promise((function(n,a){e(["../OpenStreetMapLayer"],(function(e){n(i(e))}),a)}))).default,PointCloudLayer:async()=>(await new Promise((function(n,a){e(["../PointCloudLayer"],(function(e){n(i(e))}),a)}))).default,VectorTileLayer:async()=>(await new Promise((function(n,a){e(["../VectorTileLayer"],(function(e){n(i(e))}),a)}))).default,WebTiledLayer:async()=>(await new Promise((function(n,a){e(["../WebTileLayer"],(function(e){n(i(e))}),a)}))).default,WFS:()=>a.resolve(null),SubtypeGroupLayer:()=>a.resolve(null),WMS:async()=>(await new Promise((function(n,a){e(["../WMSLayer"],(function(e){n(i(e))}),a)}))).default,RasterDataLayer:()=>a.resolve(null),RasterDataElevationLayer:()=>a.resolve(null)};n.typeModuleMap=t,Object.defineProperty(n,"__esModule",{value:!0})}));
