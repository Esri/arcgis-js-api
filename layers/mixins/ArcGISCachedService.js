/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{reader as o}from"../../core/accessorSupport/decorators/reader.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import{serviceTileInfoProperty as i}from"../support/serviceTileInfoProperty.js";import{TilemapCache as p}from"../support/TilemapCache.js";import a from"../../geometry/SpatialReference.js";const s=s=>{let l=class extends s{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,r){return null!=r.minLOD&&null!=r.maxLOD?e:0}readMaxScale(e,r){return null!=r.minLOD&&null!=r.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,r){return r.capabilities&&r.capabilities.includes("Tilemap")?new p({layer:this}):null}};return e([r({json:{read:{source:"copyrightText"}}})],l.prototype,"copyright",void 0),e([r()],l.prototype,"minScale",void 0),e([o("service","minScale")],l.prototype,"readMinScale",null),e([r()],l.prototype,"maxScale",void 0),e([o("service","maxScale")],l.prototype,"readMaxScale",null),e([r({type:a})],l.prototype,"spatialReference",void 0),e([r({readOnly:!0})],l.prototype,"supportsBlankTile",null),e([r(i)],l.prototype,"tileInfo",void 0),e([r()],l.prototype,"tilemapCache",void 0),e([o("service","tilemapCache",["capabilities"])],l.prototype,"readTilemapCache",null),e([r()],l.prototype,"version",void 0),l=e([t("esri.layers.mixins.ArcGISCachedService")],l),l};export{s as ArcGISCachedService};
