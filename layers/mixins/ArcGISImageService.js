/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../Graphic","../../rasterRenderers","../../request","../../core/Error","../../core/jsonMap","../../core/lang","../../core/Logger","../../core/maybe","../../core/promiseUtils","../../core/urlUtils","../../core/accessorSupport/decorators/aliasOf","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../support/commonProperties","../support/DimensionalDefinition","../support/ExportImageServiceParameters","../support/Field","../support/FieldsIndex","../support/imageryRendererUtils","../support/MosaicRule","../support/PixelBlock","../support/rasterEnums","../support/RasterFunction","../support/RasterInfo","../support/RasterJobHandler","../support/rasterFormats/RasterCodec","../support/rasterFunctions/vectorFieldUtils","../../renderers/support/rasterRendererHelper","../../renderers/support/RasterSymbolizer","../../rest/imageService","../../core/unitUtils","../../kernel","../../rest/query/support/AttachmentInfo","../../rest/support/AttachmentQuery","../../rest/query/executeForCount","../../geometry/Extent","../../geometry/Geometry","../../geometry/Multipoint","../../geometry/Point","../../geometry/Polygon","../../geometry/Polyline","../../geometry/support/normalizeUtils","../support/arcgisLayerUrl","../../core/pbf","../../geometry/support/spatialReferenceUtils","../../rest/support/Query","../../rest/query/executeForIds","../../rest/query/executeQueryJSON","../../core/has","../graphics/featureConversionUtils","../../rest/support/FeatureSet","../../rest/support/RelationshipQuery","../../rest/support/TopFeaturesQuery","../../rest/support/ImageAngleParameters","../../rest/support/ImageHistogramParameters","../../rest/support/ImageIdentifyParameters","../../rest/support/ImagePixelLocationParameters","../../rest/support/ImageSampleParameters","../../views/2d/engine/flow/dataUtils","../../geometry/SpatialReference"],(function(e,t,r,i,n,s,o,a,l,u,p,c,d,m,h,f,y,g,_,v,R,S,b,x,I,w,T,F,O,P,N,D,C,M,J,q,V,A,z,Q,j,E,U,H,L,G,k,B,W,K,X,Y,$,Z,ee,te,re,ie,ne,se,oe,ae,le,ue,pe,ce,de){"use strict";const me=p.getLogger("esri.layers.mixins.ArcGISImageService"),he=l.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),fe=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ye=y.ensureRange(f.ensureNumber,{min:0,max:255});function ge(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}const _e=e=>{let i=function(e){function r(){var t;return(t=e.apply(this,arguments)||this)._functionRasterInfos={},t._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},t._symbolizer=null,t._defaultServiceMosaicRule=null,t._serviceSourceType=null,t._serviceSupportsMosaicRule=null,t.rasterAttributeTableFieldPrefix="Raster.",t.adjustAspectRatio=null,t.bandCount=null,t.bandIds=void 0,t.capabilities=null,t.compressionQuality=void 0,t.compressionTolerance=.01,t.copyright=null,t.definitionExpression=null,t.exportImageServiceParameters=null,t.rasterInfo=null,t.fields=null,t.fullExtent=null,t.hasMultidimensions=!1,t.imageMaxHeight=4100,t.imageMaxWidth=4100,t.interpolation=void 0,t.minScale=0,t.maxScale=0,t.multidimensionalInfo=null,t.noData=null,t.noDataInterpretation=void 0,t.objectIdField=null,t.geometryType="polygon",t.typeIdField=null,t.types=[],t.pixelSizeX=null,t.pixelSizeY=null,t.pixelFilter=null,t.raster=void 0,t.viewId=void 0,t.renderer=null,t.rasterAttributeTable=null,t.rasterFunctionInfos=null,t.serviceDataType=null,t.spatialReference=null,t.pixelType=null,t.serviceRasterInfo=null,t.sourceJSON=null,t.url=null,t.version=null,t}t._inheritsLoose(r,e);var i=r.prototype;return i.initialize=function(){this._set("exportImageServiceParameters",new b.ExportImageServiceParameters({layer:this}))},i.readDefaultServiceMosaicRule=function(e,t){return this._serviceSupportsMosaicRule?T.fromJSON(t):null},i.readServiceSourceType=function(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"},i.readServiceSupportsMosaicRule=function(e,t){return this._isMosaicRuleSupported(t)},i.readBandIds=function(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e},i.readCapabilities=function(e,t){return this._readCapabilities(t)},i.writeCompressionQuality=function(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)},i.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},i.readFormat=function(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"},i.readMinScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},i.readMaxScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},i.readMosaicRule=function(e,t){const r=e||t.mosaicRule;return r?T.fromJSON(r):this._isMosaicRuleSupported(t)?T.fromJSON(t):null},i.writeMosaicRule=function(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new T({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())},i.writeNoData=function(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ye(e))},i.readObjectIdField=function(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e},i.readRenderer=function(e,t,r){var i,n;const o=null==t||null==(i=t.layerDefinition)||null==(n=i.drawingInfo)?void 0:n.renderer,a=s.read(o,r);return null==a?null:("vector-field"===a.type&&t.symbolTileSize&&!o.symbolTileSize&&(a.symbolTileSize=t.symbolTileSize),w.isSupportedRendererType(a)||me.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a)},i.writeRenderer=function(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)},i.readRenderingRule=function(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?P.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null},i.writeRenderingRule=function(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())},i.readSpatialReference=function(e,t){const r=e||t.extent.spatialReference;return r?de.fromJSON(r):null},i.readPixelType=function(e){return he.fromJSON(e)||e},i.writePixelType=function(e,t,r){(c.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=he.toJSON(e))},i.readVersion=function(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r},i.applyFilter=function(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t},i.applyRenderer=function(){var e=t._asyncToGenerator((function*(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),n=this._rasterJobHandler.instance,{bandIds:s}=this;if(n){i&&(this._symbolizer.bind(),yield n.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const o=yield n.symbolize({bandIds:s,...e},t);r={extent:e.extent,pixelBlock:o}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:s,...e})}}return r}));function r(t,r){return e.apply(this,arguments)}return r}(),i.destroy=function(){this._shutdownJobHandler()},i.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},i.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},i.computeAngles=function(){var e=t._asyncToGenerator((function*(e,t){if(yield this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new a("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=f.ensureClass(oe,e).clone(),V.computeAngles(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.computePixelSpaceLocations=function(){var e=t._asyncToGenerator((function*(e,t){if(yield this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new a("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=f.ensureClass(ue,e).clone(),V.computePixelSpaceLocations(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.computeHistograms=function(){var e=t._asyncToGenerator((function*(e,t){if(yield this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new a("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=f.ensureClass(ae,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),V.computeHistograms(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.computeStatisticsHistograms=function(){var e=t._asyncToGenerator((function*(e,t){if(yield this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new a("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=f.ensureClass(ae,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),V.computeStatisticsHistograms(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.getField=function(e){const{fieldsIndex:t}=this;return c.isSome(t)?t.get(e):void 0},i.getFieldDomain=function(e,t){const r=this.getField(e);return r?r.domain:null},i.fetchImage=function(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new a("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const n=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return d.when(n).then((n=>{n&&(this.rasterInfo=n);const s={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(s)}))},i.fetchKeyProperties=function(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return o(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))},i.fetchRasterAttributeTable=function(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new a("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):o(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>ie.fromJSON(e.data)))},i.getCatalogItemRasterInfo=function(){var e=t._asyncToGenerator((function*(e,t){const r=o(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=o(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),n=yield Promise.all([r,i]);if(!n[0])return;const s=U.fromJSON(n[0].extent),a=n[0].statistics?n[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new N({bandCount:n[0].bandCount,extent:s,spatialReference:s.sr,pixelSize:new G({x:n[0].pixelSizeX,y:n[0].pixelSizeY,spatialReference:s.sr}),pixelType:n[0].pixelType.toLowerCase(),statistics:a,histograms:n[0].histograms,keyProperties:n[1]||{}})}));function r(t,r){return e.apply(this,arguments)}return r}(),i.getCatalogItemICSInfo=function(){var e=t._asyncToGenerator((function*(e,t){const{data:r}=yield o(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let n=null;try{n=(yield o(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?o(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},u=o(this.parsedUrl.path+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=5,c=(n.xmin+n.xmax)/2,d=(n.ymax-n.ymin)/(p+1),m=n.ymin+d,h=[];for(let o=0;o<p;o++)h.push({x:c,y:m+d*o});const f={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},y=o(this.parsedUrl.path+"/project",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=yield Promise.all([s,u,y]);let _=g[0].ipxf;if(null==_){var v,R,S;const e=null==(v=i.geodataXform)?void 0:v.xf_0;"topup"===(null==e||null==(R=e.name)?void 0:R.toLowerCase())&&6===(null==e||null==(S=e.coefficients)?void 0:S.length)&&(_={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const b=U.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);b&&(b.spatialReference=new de({wkid:0,imageCoordinateSystem:i}));const x=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],I=x.length;if(I<3)return{ics:i,icsToPixelTransform:_,icsExtent:b,northDirection:null};let w=0,T=0,F=0,O=0;for(let o=0;o<I;o++)w+=x[o].x,T+=x[o].y,F+=x[o].x*x[o].x,O+=x[o].x*x[o].y;const P=(I*O-w*T)/(I*F-w*w);let N=0;const D=x[p-1].x>x[0].x,C=x[p-1].y>x[0].y;return P===1/0?N=C?90:270:0===P?N=D?0:180:P>0?N=D?180*Math.atan(P)/Math.PI:180*Math.atan(P)/Math.PI+180:P<0&&(N=C?180+180*Math.atan(P)/Math.PI:360+180*Math.atan(P)/Math.PI),{ics:i,icsToPixelTransform:_,icsExtent:b,northDirection:N}}));function r(t,r){return e.apply(this,arguments)}return r}(),i.generateRasterInfo=function(){var e=t._asyncToGenerator((function*(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&c.isSome(this.serviceRasterInfo))return this.serviceRasterInfo;const r=ge(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return yield i}catch{return this._functionRasterInfos[r]=null,null}}));function r(t,r){return e.apply(this,arguments)}return r}(),i.getExportImageServiceParameters=function(e,t,r,i){e=e.clone().shiftCentralMeridian();const n=V.getImageSpatialReferenceQueryParameter(e.spatialReference,this.parsedUrl.path);c.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const s=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:a}=s;let{renderingRule:l}=s;const u=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase(),p=!this.renderer||"raster-stretch"===this.renderer.type;if(null!=o&&o.length&&u&&p){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===l.rasterFunction)e.rasterFunctionArguments.Raster=l.rasterFunctionArguments.Raster,l.rasterFunctionArguments.Raster=e;else if("Colormap"===l.rasterFunction){const t=l.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,l.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=l,l=e;s.bandIds=void 0}else s.bandIds=null==o?void 0:o.join(",");a instanceof Array&&a.length>0&&(s.noData=a.join(","));const d=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;s.mosaicRule=d&&JSON.stringify(d),s.renderingRule=l&&JSON.stringify(l);const m={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r,...s,...m}},i.getSamples=function(){var e=t._asyncToGenerator((function*(e,t){if(yield this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new a("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=f.ensureClass(pe,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),V.getSamples(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.identify=function(){var e=t._asyncToGenerator((function*(e,t){if(yield this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new a("imagery-layer:query-rasters","query operation is not supported on the input image service");e=f.ensureClass(le,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;if(n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=c.unwrap(t)}return r&&null==e.raster&&(e.raster=r),V.identify(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.createQuery=function(){const e=new $;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e},i.queryRasters=function(){var e=t._asyncToGenerator((function*(e,t){return({query:e,requestOptions:t}=yield this._prepareForQuery(e,t)),ee.executeQueryJSON(this.url,e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),i.queryObjectIds=function(){var e=t._asyncToGenerator((function*(e,t){return({query:e,requestOptions:t}=yield this._prepareForQuery(e,t)),Z.executeForIds(this.url,e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),i.queryRasterCount=function(){var e=t._asyncToGenerator((function*(e,t){return({query:e,requestOptions:t}=yield this._prepareForQuery(e,t)),E.executeForCount(this.url,e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),i.queryVisibleRasters=function(e,t){if(!e)return Promise.reject(new a("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const p="raster.servicepixelvalue",d=this.rasterFunctionNamesIndex;if(c.isSome(e.outFields)&&(o=e.outFields.some((e=>-1===e.toLowerCase().indexOf(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(p)>-1&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new P({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName))}const m=c.isNone(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),h=e.timeExtent||this.timeExtent,f=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,h),y=this._getQueryParams({geometry:e.geometry,timeExtent:h,mosaicRule:f,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete y.f;const g=new le(y),_=this.generateRasterInfo(this.renderingRule);return new Promise((r=>{_.then((()=>{V.identify(this.url,g,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}).then((t=>{var n;const l=e.outFields,p=t.value.toLowerCase().indexOf("nodata")>-1;if(o&&!m&&null!=t&&null!=(n=t.catalogItems)&&n.features.length&&(s||!p)){const n=this.objectIdField||"ObjectId",o=t.catalogItems.features,p=o.map((e=>e.attributes&&e.attributes[n])),c=new $({objectIds:p,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[n]});return this.queryRasters(c).then((a=>{a&&a.features&&a.features.length>0&&a.features.forEach((t=>{o.forEach((r=>{r.attributes[n]===t.attributes[n]&&(r.geometry=new k(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:l}))})).catch((()=>{throw new a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:l}))})).catch((()=>{throw new a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))},i.fetchVariableStatisticsHistograms=function(){var e=t._asyncToGenerator((function*(e,t){const r=o(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=o(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=yield Promise.all([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}));function r(t,r){return e.apply(this,arguments)}return r}(),i.createStreamlinesMesh=function(){var e=t._asyncToGenerator((function*(e,t){const r=this._rasterJobHandler.instance;return r?r.createStreamlinesMesh(e,t):ce.createStreamlinesMesh(e.rendererSettings,e.flowData,c.isSome(t.signal)?t.signal:(new AbortController).signal)}));function r(t,r){return e.apply(this,arguments)}return r}(),i._fetchService=function(){var e=t._asyncToGenerator((function*(e){yield this._fetchServiceInfo(e),c.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=c.isSome(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,i,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,me.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=c.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}));function r(t){return e.apply(this,arguments)}return r}(),i._combineMosaicRuleWithTimeExtent=function(e,t){const r=this.timeInfo;if(c.isNone(e)||c.isNone(this.multidimensionalInfo)||c.isNone(t)||c.isNone(null==r?void 0:r.startField))return e;const{startField:i}=r;var n;if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(n=e.multidimensionalDefinition)?void 0:n.filter((e=>e.dimensionName!==i)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const s=e.multidimensionalDefinition.filter((e=>e.dimensionName===i)),o=c.isSome(t.start)?t.start.getTime():null,a=c.isSome(t.end)?t.end.getTime():null,l=null==o||null==a||o===a,u=l?[o||a]:[[o,a]],p=this.version>=10.8;if(s.length)s.forEach((e=>{e.dimensionName===i&&(p?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=l,e.values=u))}));else if(!p){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=i,e.isSlice=l,e.values=u})):e.multidimensionalDefinition.push(new S({variableName:"",dimensionName:i,isSlice:l,values:u}))}return this._cleanupMultidimensionalDefinition(e)},i._cleanupMultidimensionalDefinition=function(e){return c.isNone(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)},i._prepareForQuery=function(){var e=t._asyncToGenerator((function*(e,t){var r;if(yield this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new a("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=c.isSome(e)?f.ensureClass($,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}));function r(t,r){return e.apply(this,arguments)}return r}(),i._initJobHandler=function(){var e=t._asyncToGenerator((function*(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new D;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),yield this._rasterJobHandler.connectionPromise}));function r(){return e.apply(this,arguments)}return r}(),i._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0},i._isSupportedRenderer=function(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||J.getSupportedRendererTypes(this.rasterInfo).includes(this.renderer.type)},i._fetchCapabilities=function(){var e=t._asyncToGenerator((function*(e){return this.capabilities||(yield this._fetchServiceInfo(e)),this.capabilities}));function r(t){return e.apply(this,arguments)}return r}(),i._fetchServiceInfo=function(){var e=t._asyncToGenerator((function*(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=yield o(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new a("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}));function r(t){return e.apply(this,arguments)}return r}(),i._isMosaicDataset=function(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0},i._isMosaicRuleSupported=function(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return r||i},i._isVectorFieldResampleFunction=function(e){if(!c.isSome(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),n=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===n||10===n)},i._isPicture=function(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1},i._configDefaultRenderer=function(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=J.getDefaultBandCombination(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;if(!this.renderer)this.renderer=J.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName});this._symbolizer?(this._symbolizer.rendererJSON=J.normalizeRendererJSON(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new q({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind().success||(this._symbolizer=null)}},i._clonePixelData=function(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:c.isSome(e.pixelBlock)&&e.pixelBlock.clone()}},i._getQueryParams=function(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}},i._getRequestOptions=function(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}},i._decodePixelBlock=function(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):C.decode(e,t,r)},i._fetchMultidimensionalInfo=function(){var e=t._asyncToGenerator((function*(e){var t;const r=yield o(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}));function r(t){return e.apply(this,arguments)}return r}(),i._getRasterFunctionInfos=function(){var e=t._asyncToGenerator((function*(e){const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:o(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.rasterFunctionInfos})):null}));function r(t){return e.apply(this,arguments)}return r}(),i._fetchAuxiliaryRasterInfo=function(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new a("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,n=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&o(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>ie.fromJSON(e.data))).catch((()=>null)),s=!!(t.hasColormap&&this.version>=10.1)&&o(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),l=!!(t.hasHistograms&&this.version>=10.1)&&o(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.version>=10.3&&o(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),p=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([n,s,l,u,p]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=de.fromJSON(t.spatialReference||t.extent.spatialReference);return new N({width:i,height:n,bandCount:t.bandCount,extent:U.fromJSON(t.extent),spatialReference:s,pixelSize:new G({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))},i._requestArrayBuffer=function(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return o(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const n=this._initJobHandler(),s=o(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([s,n]).then((e=>{const r=e[0].data,n=t.format||"jpgpng";let s=n;if("bsq"!==s&&"bip"!==s&&(s=C.getFormat(r)),!s){throw new a("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)))}const o="gif"===n||"bmp"===n||n.indexOf("png")>-1&&("png"===s||"jpg"===s),l={signal:i};return o?C.decode(r,{useCanvas:!0,...t},l).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:n},l).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))},i._generateRasterInfo=function(){var e=t._asyncToGenerator((function*(e,t){const{data:r}=yield o(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return yield this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}));function r(t,r){return e.apply(this,arguments)}return r}(),i._isValidCustomizedMosaicRule=function(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())},i._updateMultidimensionalDefinition=function(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r="",i=[];for(const n in t)if(t.hasOwnProperty(n)){const e=t[n],s=e.extent;let o=!0,a=[s[0]];e.hasRanges&&!0===e.hasRanges?(o=!1,a=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(s[1])<=Math.abs(s[0])&&(a=[s[1]]),i.push(new S({variableName:r,dimensionName:t[n].name,isSlice:o,values:a}))}if(i.length>0){this.mosaicRule=this.mosaicRule||new T;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i)}},i._formatAttributeValue=function(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),n=i&&i.format;if(n){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,n)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,n)):this._formatNumberFromString(e,n)}}return e},i._getFieldInfo=function(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0))),i},i._formatDelimitedString=function(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e},i._formatNumberFromString=function(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)},i._processVisibleRastersResponse=function(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:s,returnDomainValues:o,templateFields:a}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const d=this.objectIdField||"ObjectId",m="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,h=[];if(r&&!u&&!m){const e={};e[d]=0;p=[r],u=[new n(this.fullExtent,null,e)]}if(!u)return[];let f,y,g;this._updateResponseFieldNames(u,a),m&&!s&&(u=[]);for(let n=0;n<u.length;n++){if(f=u[n],null!=r){if(y=p[n],g=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===y.toLowerCase()&&!s)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";f.attributes[e]=this._formatAttributeValue(y,e),f.attributes[t]=this._formatAttributeValue(g,t),this._updateFeatureWithMagDirValues(f,y);const o=this.fields&&this.fields.length>0;let a=this.renderingRule&&c.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?o?y:r:g;this.renderingRule||(a=o?y:r),this._updateFeatureWithRasterAttributeTableValues(f,a)}if(f.sourceLayer=this,o&&this._updateFeatureWithDomainValues(f),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];f.attributes[t]=this._formatAttributeValue(l[e],t)}h.push(u[n])}return h},i._updateFeatureWithRasterAttributeTableValues=function(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||c.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const n=r.fields,s=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=s&&s[0];if(!o)return;const a=i.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));a&&a[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(a[0].attributes[t.name],r)}))},i._updateFeatureWithMagDirValues=function(e,t){if("esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),n=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new F({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:s,extent:new U(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[s.pixels[0][0],s.pixels[1][0]]:M.uvComponentToVector([s.pixels[0][0],s.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1]},i._updateFeatureWithDomainValues=function(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))},i._updateResponseFieldNames=function(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;c.isSome(r)&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))},i._updateRenderingRulesFunctionName=function(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e},i._isRFTJson=function(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")},i._readCapabilities=function(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,s=t.indexOf("image")>-1,o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsMeasure:t.indexOf("mensuration")>-1&&a,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&s,supportsProject:r>=10.3&&s,supportsComputeStatisticsHistograms:r>=10.4&&s,supportsQueryBoundary:r>=10.6&&s,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1,supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!(null==i||!i.supportsStatistics),supportsOrderBy:!(null==i||!i.supportsOrderBy),supportsDistinct:!(null==i||!i.supportsDistinct),supportsPagination:!(null==i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(null==i||!i.useStandardizedQueries),supportsPercentileStatistics:!(null==i||!i.supportsPercentileStatistics),supportsCentroid:!(null==i||!i.supportsReturningGeometryCentroid),supportsDistance:!(null==i||!i.supportsQueryWithDistance),supportsExtent:!(null==i||!i.supportsReturningQueryExtent),supportsGeometryProperties:!(null==i||!i.supportsReturningGeometryProperties),supportsHavingClause:!(null==i||!i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}},t._createClass(r,[{key:"rasterFunctionNamesIndex",get:function(){const e=new Map;return!this.rasterFunctionInfos||c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}},{key:"fieldsIndex",get:function(){return this.fields?new I(this.fields):null}},{key:"format",set:function(e){e&&fe.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}},{key:"mosaicRule",set:function(e){let t=e;t&&t.mosaicMethod&&(t=T.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}},{key:"parsedUrl",get:function(){return this.url?m.urlToObject(this.url):null}},{key:"rasterFields",get:function(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new x({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new x({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new x({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?u.clone(this.fields):[];n.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(i),c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new x({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new x({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new x({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const s=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(s&&s.length>0){const t=s.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=u.clone(t);return r.name=e+t.name,r}));n=n.concat(t)}return n}},{key:"renderingRule",set:function(e){let t=e;t&&t.rasterFunction&&(t=P.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}}]),r}(e);return r.__decorate([y.property()],i.prototype,"_functionRasterInfos",void 0),r.__decorate([y.property()],i.prototype,"_rasterJobHandler",void 0),r.__decorate([y.property()],i.prototype,"_symbolizer",void 0),r.__decorate([y.property({dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"_defaultServiceMosaicRule",void 0),r.__decorate([g.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultServiceMosaicRule",null),r.__decorate([y.property()],i.prototype,"_cachedRendererJson",void 0),r.__decorate([y.property({readOnly:!0})],i.prototype,"_serviceSourceType",void 0),r.__decorate([g.reader("_serviceSourceType",["serviceSourceType","fields"])],i.prototype,"readServiceSourceType",null),r.__decorate([y.property({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),r.__decorate([g.reader("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),r.__decorate([y.property()],i.prototype,"rasterAttributeTableFieldPrefix",void 0),r.__decorate([y.property({readOnly:!0})],i.prototype,"rasterFunctionNamesIndex",null),r.__decorate([y.property()],i.prototype,"adjustAspectRatio",void 0),r.__decorate([y.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.bandCount")],i.prototype,"bandCount",void 0),r.__decorate([y.property({type:[f.Integer],json:{write:!0}})],i.prototype,"bandIds",void 0),r.__decorate([g.reader("bandIds")],i.prototype,"readBandIds",null),r.__decorate([y.property({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),r.__decorate([g.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),r.__decorate([y.property({type:Number})],i.prototype,"compressionQuality",void 0),r.__decorate([v.writer("compressionQuality")],i.prototype,"writeCompressionQuality",null),r.__decorate([y.property({type:Number})],i.prototype,"compressionTolerance",void 0),r.__decorate([v.writer("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),r.__decorate([y.property({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),r.__decorate([y.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),r.__decorate([y.property({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),r.__decorate([y.property()],i.prototype,"rasterInfo",void 0),r.__decorate([y.property({readOnly:!0,type:[x]})],i.prototype,"fields",void 0),r.__decorate([y.property({readOnly:!0})],i.prototype,"fieldsIndex",null),r.__decorate([y.property({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),r.__decorate([g.reader("service","format",["serviceDataType"])],i.prototype,"readFormat",null),r.__decorate([y.property({type:U})],i.prototype,"fullExtent",void 0),r.__decorate([y.property({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),r.__decorate([y.property({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),r.__decorate([y.property({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),r.__decorate([y.property({type:String,json:{type:O.interpolationKebab.jsonValues,read:O.interpolationKebab.read,write:O.interpolationKebab.write}})],i.prototype,"interpolation",void 0),r.__decorate([y.property()],i.prototype,"minScale",void 0),r.__decorate([g.reader("service","minScale")],i.prototype,"readMinScale",null),r.__decorate([y.property()],i.prototype,"maxScale",void 0),r.__decorate([g.reader("service","maxScale")],i.prototype,"readMaxScale",null),r.__decorate([y.property({type:T})],i.prototype,"mosaicRule",null),r.__decorate([g.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),r.__decorate([v.writer("mosaicRule")],i.prototype,"writeMosaicRule",null),r.__decorate([y.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.multidimensionalInfo")],i.prototype,"multidimensionalInfo",void 0),r.__decorate([y.property({json:{type:f.Integer}})],i.prototype,"noData",void 0),r.__decorate([v.writer("noData")],i.prototype,"writeNoData",null),r.__decorate([y.property({type:String,json:{type:O.noDataInterpretationKebab.jsonValues,read:O.noDataInterpretationKebab.read,write:O.noDataInterpretationKebab.write}})],i.prototype,"noDataInterpretation",void 0),r.__decorate([y.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),r.__decorate([g.reader("objectIdField")],i.prototype,"readObjectIdField",null),r.__decorate([y.property({})],i.prototype,"geometryType",void 0),r.__decorate([y.property({})],i.prototype,"typeIdField",void 0),r.__decorate([y.property({})],i.prototype,"types",void 0),r.__decorate([y.property({readOnly:!0})],i.prototype,"parsedUrl",null),r.__decorate([y.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.pixelSize.x")],i.prototype,"pixelSizeX",void 0),r.__decorate([y.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.pixelSize.y")],i.prototype,"pixelSizeY",void 0),r.__decorate([y.property({type:Function})],i.prototype,"pixelFilter",void 0),r.__decorate([y.property()],i.prototype,"raster",void 0),r.__decorate([y.property()],i.prototype,"viewId",void 0),r.__decorate([y.property({types:s.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:s.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"animated-flow"!==e.type})}}}}})],i.prototype,"renderer",void 0),r.__decorate([g.reader("renderer")],i.prototype,"readRenderer",null),r.__decorate([v.writer("renderer")],i.prototype,"writeRenderer",null),r.__decorate([y.property(R.opacity)],i.prototype,"opacity",void 0),r.__decorate([y.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.attributeTable")],i.prototype,"rasterAttributeTable",void 0),r.__decorate([y.property({readOnly:!0})],i.prototype,"rasterFields",null),r.__decorate([y.property({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),r.__decorate([y.property({type:P})],i.prototype,"renderingRule",null),r.__decorate([g.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),r.__decorate([v.writer("renderingRule")],i.prototype,"writeRenderingRule",null),r.__decorate([y.property()],i.prototype,"serviceDataType",void 0),r.__decorate([y.property({readOnly:!0,type:de})],i.prototype,"spatialReference",void 0),r.__decorate([g.reader("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),r.__decorate([y.property({json:{type:he.jsonValues}})],i.prototype,"pixelType",void 0),r.__decorate([g.reader("pixelType")],i.prototype,"readPixelType",null),r.__decorate([v.writer("pixelType")],i.prototype,"writePixelType",null),r.__decorate([y.property({constructOnly:!0,type:N})],i.prototype,"serviceRasterInfo",void 0),r.__decorate([y.property()],i.prototype,"sourceJSON",void 0),r.__decorate([y.property(R.url)],i.prototype,"url",void 0),r.__decorate([y.property({readOnly:!0})],i.prototype,"version",void 0),r.__decorate([g.reader("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=r.__decorate([_.subclass("esri.layers.mixins.ArcGISImageService")],i),i};e.ArcGISImageService=_e,Object.defineProperty(e,"__esModule",{value:!0})}));
