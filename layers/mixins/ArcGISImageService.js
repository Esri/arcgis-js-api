/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../Graphic","../../rasterRenderers","../../request","../../core/Error","../../core/jsonMap","../../core/lang","../../core/Logger","../../core/maybe","../../core/reactiveUtils","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../support/commonProperties","../support/DimensionalDefinition","../support/ExportImageServiceParameters","../support/Field","../support/FieldsIndex","../support/imageryRendererUtils","../support/MosaicRule","../support/MultidimensionalSubset","../support/PixelBlock","../support/rasterEnums","../support/RasterFunction","../support/RasterInfo","../support/RasterJobHandler","../support/rasterDatasets/multidimensionalUtils","../support/rasterFormats/RasterCodec","../support/rasterFunctions/vectorFieldUtils","../../renderers/support/rasterRendererHelper","../../renderers/support/RasterSymbolizer","../../rest/imageService","../../core/has","../support/source/DataLayerSource","../../rest/query/executeQueryJSON","../../config","../../kernel","../../core/unitUtils","../../geometry/support/spatialReferenceUtils","../graphics/featureConversionUtils","../../geometry/Extent","../../geometry/Geometry","../../geometry/Multipoint","../../geometry/Point","../../geometry/Polygon","../../geometry/Polyline","../../geometry/support/normalizeUtils","../../core/pbf","../../rest/support/FeatureSet","../../rest/support/Query","../../rest/query/support/AttachmentInfo","../../rest/support/AttachmentQuery","../../rest/query/executeForCount","../../rest/query/executeForIds","../../rest/support/RelationshipQuery","../../rest/support/TopFeaturesQuery","../../rest/imageService/fetchRasterInfo","../../rest/imageService/getCatalogItemRasterInfo","../../rest/support/ImageAngleParameters","../../rest/support/ImageHistogramParameters","../../rest/support/ImageIdentifyParameters","../../rest/support/ImagePixelLocationParameters","../../rest/support/ImageSampleParameters","../../views/2d/engine/flow/dataUtils","../../geometry/SpatialReference"],(function(e,t,r,i,n,s,o,a,l,u,p,c,d,m,f,h,y,g,_,R,S,v,b,I,x,w,F,T,D,N,P,C,O,M,J,q,V,E,A,Q,j,H,U,G,L,z,k,B,W,K,X,$,Y,Z,ee,te,re,ie,ne,se,oe,ae,le,ue,pe,ce,de,me,fe,he,ye){"use strict";const ge=l.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),_e=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Re=f.ensureRange(h.ensureNumber,{min:0,max:255});function Se(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi)?.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return t?t.join("/"):null}const ve=e=>{let i=function(e){function r(){var t;return(t=e.apply(this,arguments)||this)._functionRasterInfos={},t._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},t._cachedRendererJson=null,t._serviceSupportsMosaicRule=null,t._rasterAttributeTableFieldPrefix="Raster.",t.adjustAspectRatio=null,t.bandIds=void 0,t.capabilities=null,t.compressionQuality=void 0,t.compressionTolerance=.01,t.copyright=null,t.defaultMosaicRule=null,t.definitionExpression=null,t.exportImageServiceParameters=null,t.rasterInfo=null,t.fields=null,t.fullExtent=null,t.hasMultidimensions=!1,t.imageMaxHeight=4100,t.imageMaxWidth=4100,t.interpolation=void 0,t.minScale=0,t.maxScale=0,t.multidimensionalSubset=null,t.noData=null,t.noDataInterpretation=void 0,t.objectIdField=null,t.geometryType="polygon",t.typeIdField=null,t.types=[],t.pixelFilter=null,t.raster=void 0,t.sourceType=null,t.viewId=void 0,t.symbolizer=null,t.rasterFunctionInfos=null,t.serviceDataType=null,t.spatialReference=null,t.pixelType=null,t.serviceRasterInfo=null,t.sourceJSON=null,t.url=null,t.version=void 0,t}t._inheritsLoose(r,e);var i=r.prototype;return i.initialize=function(){this._set("exportImageServiceParameters",new v.ExportImageServiceParameters({layer:this}))},i.readServiceSupportsMosaicRule=function(e,t){return this._isMosaicRuleSupported(t)},i.readBandIds=function(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e},i.readCapabilities=function(e,t){return this._readCapabilities(t)},i.writeCompressionQuality=function(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)},i.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},i.readDefaultMosaicRule=function(e,t){return this._serviceSupportsMosaicRule?w.fromJSON(t):null},i.readFormat=function(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"},i.readMinScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},i.readMaxScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},i.readMosaicRule=function(e,t){const r=e||t.mosaicRule;return r?w.fromJSON(r):this._isMosaicRuleSupported(t)?w.fromJSON(t):null},i.writeMosaicRule=function(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new w({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())},i.writeNoData=function(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Re(e))},i.readObjectIdField=function(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e},i.readSourceType=function(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"},i.readRenderer=function(e,t,r){const i=t?.layerDefinition?.drawingInfo?.renderer,n=s.read(i,r);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!i.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),x.isSupportedRendererType(n)||p.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)},i.writeRenderer=function(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)},i.readRenderingRule=function(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?N.fromJSON({rasterFunctionDefinition:t.renderingRule}):N.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null},i.writeRenderingRule=function(e,t,r){const i=e.toJSON();i.rasterFunctionDefinition?t[r]=i.rasterFunctionDefinition:t[r]=i},i.readSpatialReference=function(e,t){const r=e||t.extent.spatialReference;return r?ye.fromJSON(r):null},i.readPixelType=function(e){return ge.fromJSON(e)||e},i.writePixelType=function(e,t,r){(c.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=ge.toJSON(e))},i.readVersion=function(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r},i.applyFilter=function(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t},i.applyRenderer=function(){var e=t._asyncToGenerator((function*(e,t){let r=e;const{renderer:i,symbolizer:n,pixelFilter:s,bandIds:o}=this;if(!this._isPicture()&&i&&n&&!s){const s=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(i.toJSON()),a=this._rasterJobHandler.instance;if(a){s&&(n.bind(),yield a.updateSymbolizer(n,t),this._cachedRendererJson=i.toJSON());const l=yield a.symbolize({bandIds:o,...e},t);r={extent:e.extent,pixelBlock:l}}else r={extent:e.extent,pixelBlock:n.symbolize({bandIds:o,...e})}}return r}));function r(t,r){return e.apply(this,arguments)}return r}(),i.destroy=function(){this._shutdownJobHandler()},i.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},i.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},i.computeAngles=function(){var e=t._asyncToGenerator((function*(e,t){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new a("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=h.ensureClass(pe,e).clone(),E.computeAngles(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.computePixelSpaceLocations=function(){var e=t._asyncToGenerator((function*(e,t){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new a("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=h.ensureClass(me,e).clone(),E.computePixelSpaceLocations(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.computeHistograms=function(){var e=t._asyncToGenerator((function*(e,t){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new a("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=h.ensureClass(ce,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),E.computeHistograms(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.computeStatisticsHistograms=function(){var e=t._asyncToGenerator((function*(e,t){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new a("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=h.ensureClass(ce,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),E.computeStatisticsHistograms(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.getField=function(e){const{fieldsIndex:t}=this;return c.isSome(t)?t.get(e):void 0},i.getFieldDomain=function(e,t){const r=this.getField(e);return r?r.domain:null},i.fetchImage=function(){var e=t._asyncToGenerator((function*(e,t,r,i={}){if(null==e||null==t||null==r)throw new a("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=yield this.generateRasterInfo(this.renderingRule,{signal:i.signal});e&&(this.rasterInfo=e)}const n=this.getExportImageServiceParameters(e,t,r,i.timeExtent);if(null==n){if(i.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,{imageOrCanvasElement:e}}const n=(this.bandIds?.length||this.rasterInfo?.bandCount)??0,s=t*r,o=this.rasterInfo?.pixelType??"unknown",a=[];for(let e=0;e<n;e++)a.push(T.createEmptyBand(o,s));return{pixelData:{pixelBlock:new T({width:t,height:r,pixels:a,mask:new Uint8Array(s),pixelType:o}),extent:e}}}const s={imageServiceParameters:n,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(s)}));function r(t,r,i){return e.apply(this,arguments)}return r}(),i.fetchKeyProperties=function(e){return o(l(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>e.data))},i.fetchRasterAttributeTable=function(e){return this.version<10.1?Promise.reject(new a("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):o(l(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>ee.fromJSON(e.data)))},i.getCatalogItemRasterInfo=function(e,t){const r={...t,query:this._getQueryParams()};return ue.getCatalogItemRasterInfo(l(this.parsedUrl),e,r)},i.getCatalogItemICSInfo=function(){var e=t._asyncToGenerator((function*(e,t){const{data:r}=yield o(l(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let n=null;try{n=(yield o(l(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?o(l(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,u={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},p=o(l(this.parsedUrl)+"/project",{query:this._getQueryParams(u),...t}).then((e=>e.data)).catch((()=>({}))),c=5,d=(n.xmin+n.xmax)/2,m=(n.ymax-n.ymin)/(c+1),f=n.ymin+m,h=[];for(let o=0;o<c;o++)h.push({x:d,y:f+m*o});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},g=o(l(this.parsedUrl)+"/project",{query:this._getQueryParams(y),...t}).then((e=>e.data)).catch((()=>({}))),_=yield Promise.all([s,p,g]);let R=_[0].ipxf;if(null==R){const e=i.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(R={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const S=k.fromJSON(_[1]&&_[1].geometries&&_[1].geometries[0]);S&&(S.spatialReference=new ye({wkid:0,imageCoordinateSystem:i}));const v=_[2].geometries?_[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],b=v.length;if(b<3)return{ics:i,icsToPixelTransform:R,icsExtent:S,northDirection:null};let I=0,x=0,w=0,F=0;for(let o=0;o<b;o++)I+=v[o].x,x+=v[o].y,w+=v[o].x*v[o].x,F+=v[o].x*v[o].y;const T=(b*F-I*x)/(b*w-I*I);let D=0;const N=v[c-1].x>v[0].x,P=v[c-1].y>v[0].y;return T===1/0?D=P?90:270:0===T?D=N?0:180:T>0?D=N?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(D=P?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:R,icsExtent:S,northDirection:D}}));function r(t,r){return e.apply(this,arguments)}return r}(),i.generateRasterInfo=function(){var e=t._asyncToGenerator((function*(e,t){if(this.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const r=Se(e);if(!r)return null;if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return yield i}catch{return this._functionRasterInfos[r]=null,null}}));function r(t,r){return e.apply(this,arguments)}return r}(),i.getExportImageServiceParameters=function(e,t,r,i){e=e.clone().shiftCentralMeridian();const n=E.getImageSpatialReferenceQueryParameter(e.spatialReference,l(this.parsedUrl));this.pixelType!==this.serviceRasterInfo?.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const s=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:a}=s;let{renderingRule:u}=s;const p=this.renderingRule?.rasterFunctionDefinition,d=!this.renderer||"raster-stretch"===this.renderer.type;if(o?.length&&this._hasRenderingRule(this.renderingRule)&&!p&&d){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;s.bandIds=void 0}else s.bandIds=o?.join(",");a instanceof Array&&a.length>0&&(s.noData=a.join(","));const m=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;s.mosaicRule=c.isSome(m)?JSON.stringify(m):null;const{multidimensionalSubset:f}=this;if(f&&c.isSome(m)&&m.multidimensionalDefinition&&O.hasExcludedVariableOrDimension(m.multidimensionalDefinition,f,!0))return null;s.renderingRule=this._getRenderingRuleString(N.fromJSON(u));const h={};if(i){const{start:e,end:t}=i.toJSON();let r;if(e&&t&&e===t?(h.time=""+e,r=[e]):null==e&&null==t||(h.time=`${e??"null"},${t??"null"}`,r=null!=e&&null!=t?[e,t]:[e??t]),r&&f){const e=f.dimensions.find((({name:e})=>"StdTime"===e));if(2===r.length&&e.extent.length){if(r[0]=Math.max(r[0],e.extent[0]),r[1]=Math.min(r[1],e.extent[1]??e.extent[0]),r[1]<r[0])return null;h.time=r.join()}const t=new S({variableName:"",dimensionName:"StdTime",isSlice:1===r.length,values:r});if(O.hasExcludedVariableOrDimension([t],f,!0))return null}}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r,...s,...h}},i.getSamples=function(){var e=t._asyncToGenerator((function*(e,t){if(!(yield this._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new a("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=h.ensureClass(fe,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),E.getSamples(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.identify=function(){var e=t._asyncToGenerator((function*(e,t){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new a("imagery-layer:query-rasters","query operation is not supported on the input image service");e=h.ensureClass(de,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;if(n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=c.unwrap(t)}return r&&null==e.raster&&(e.raster=r),E.identify(this.url,e,this._getRequestOptions(t))}));function r(t,r){return e.apply(this,arguments)}return r}(),i.createQuery=function(){const e=new te;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e},i.queryRasters=function(){var e=t._asyncToGenerator((function*(e,t){return({query:e,requestOptions:t}=yield this._prepareForQuery(e,t)),j.executeQueryJSON(this.url,e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),i.queryObjectIds=function(){var e=t._asyncToGenerator((function*(e,t){return({query:e,requestOptions:t}=yield this._prepareForQuery(e,t)),se.executeForIds(this.url,e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),i.queryRasterCount=function(){var e=t._asyncToGenerator((function*(e,t){return({query:e,requestOptions:t}=yield this._prepareForQuery(e,t)),ne.executeForCount(this.url,e,t)}));function r(t,r){return e.apply(this,arguments)}return r}(),i.queryVisibleRasters=function(){var e=t._asyncToGenerator((function*(e,t){if(!e)throw new a("imagery-layer: query-visible-rasters","missing query parameter");yield this.load();const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const p="raster.servicepixelvalue",d=this._rasterFunctionNamesIndex;if(c.isSome(e.outFields)&&(o=e.outFields.some((e=>!e.toLowerCase().includes(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(p)&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new N({functionName:e[0]}))),u=t.map((e=>e[1]));const{renderingRule:r}=this;0===l.length?r?.functionName?(l.push(r),u.push(r.functionName)):l=null:r?.functionName&&!l.some((e=>e.functionName===r.functionName))&&(l.push(r),u.push(r.functionName))}const m=c.isNone(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=e.timeExtent||this.timeExtent,h=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f),y=this._getQueryParams({geometry:e.geometry,timeExtent:f,mosaicRule:h,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete y.f;const g=new de(y);try{yield this.generateRasterInfo(this.renderingRule);const r=yield E.identify(this.url,g,{signal:t?.signal,query:{...this.customParameters}}),n=e.outFields,a=null!=r.value&&r.value.toLowerCase().includes("nodata");if(!(o&&!m&&r?.catalogItems?.features.length&&(s||!a)))return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n});const l=this.objectIdField||"ObjectId",p=r.catalogItems?.features??[],d=p.map((e=>e.attributes?.[l])),f=new te({objectIds:d,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),h=yield this.queryRasters(f);return h?.features?.length&&h.features.forEach((t=>{p.forEach((r=>{r.attributes[l]===t.attributes[l]&&(r.geometry=new X(t.geometry),c.isSome(e.outSpatialReference)&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n})}catch{throw new a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}));function r(t,r){return e.apply(this,arguments)}return r}(),i.fetchVariableStatisticsHistograms=function(){var e=t._asyncToGenerator((function*(e,t){const r=o(l(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),i=o(l(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),n=yield Promise.all([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}));function r(t,r){return e.apply(this,arguments)}return r}(),i.createFlowMesh=function(){var e=t._asyncToGenerator((function*(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):he.createFlowMesh(e.meshType,e.simulationSettings,e.flowData,c.isSome(t.signal)?t.signal:(new AbortController).signal)}));function r(t,r){return e.apply(this,arguments)}return r}(),i.getMultidimensionalSubsetVariables=function(e){const t=e??this.multidimensionalInfo;return O.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,t)},i._fetchService=function(){var e=t._asyncToGenerator((function*(e){yield this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=c.isSome(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):le.fetchServiceRasterInfo(l(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,i,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),p.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([d.watch((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;t&&c.isSome(t.multidimensionalInfo)&&this._updateMultidimensionalDefinition(t)}))}));function r(t){return e.apply(this,arguments)}return r}(),i._combineMosaicRuleWithTimeExtent=function(e,t){const r=this.timeInfo;if(c.isNone(e)||c.isNone(this.multidimensionalInfo)||c.isNone(t)||c.isNone(r?.startField))return e;const{startField:i}=r,n=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===i))))?i:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==n)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const s=e.multidimensionalDefinition.filter((e=>e.dimensionName===n)),o=c.isSome(t.start)?t.start.getTime():null,a=c.isSome(t.end)?t.end.getTime():null,l=null==o||null==a||o===a,u=l?[o||a]:[[o,a]],p=this.version>=10.8;if(s.length)s.forEach((e=>{e.dimensionName===n&&(p?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=l,e.values=u))}));else if(!p){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=n,e.isSlice=l,e.values=u})):e.multidimensionalDefinition.push(new S({variableName:"",dimensionName:n,isSlice:l,values:u}))}return this._cleanupMultidimensionalDefinition(e)},i._cleanupMultidimensionalDefinition=function(e){return c.isNone(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)},i._prepareForQuery=function(){var e=t._asyncToGenerator((function*(e,t){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new a("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=c.isSome(e)?h.ensureClass(te,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}));function r(t,r){return e.apply(this,arguments)}return r}(),i._initJobHandler=function(){var e=t._asyncToGenerator((function*(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new C;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),yield this._rasterJobHandler.connectionPromise}));function r(){return e.apply(this,arguments)}return r}(),i._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null},i._isSupportedRenderer=function(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&this._hasRenderingRule(r)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&q.getSupportedRendererTypes(t).includes(e.type)},i._fetchCapabilities=function(){var e=t._asyncToGenerator((function*(e){return this.capabilities||(yield this._fetchServiceInfo(e)),this.capabilities}));function r(t){return e.apply(this,arguments)}return r}(),i._fetchServiceInfo=function(){var e=t._asyncToGenerator((function*(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:i}=yield o(l(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new a("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}));function r(t){return e.apply(this,arguments)}return r}(),i._isMosaicDataset=function(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0},i._isMosaicRuleSupported=function(e){if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||r},i._isVectorFieldResampleFunction=function(e){if(c.isNone(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t?.toLowerCase(),n=r?.ResampleType||r?.resampleType;return i&&(7===n||10===n)},i._isPicture=function(){return!this.format||this.format.includes("jpg")||this.format.includes("png")},i._configRenderer=function(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo&&this.rasterInfo.bandCount>=3){const e=q.getDefaultBandCombination(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=q.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=q.normalizeRendererJSON(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new V({rendererJSON:t,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e},i._clonePixelData=function(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:c.isSome(e.pixelBlock)?e.pixelBlock.clone():null}},i._getQueryParams=function(e){e&&c.isSome(e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}},i._getRequestOptions=function(e){return{...e,query:{...e?.query,...this.customParameters}}},i._decodePixelBlock=function(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):M.decode(e,t,r)},i._getRasterFunctionInfos=function(){var e=t._asyncToGenerator((function*(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return(yield o(l(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos}return null}));function r(t){return e.apply(this,arguments)}return r}(),i._canRequestImageElement=function(e){return!this.pixelFilter&&(!e||e.includes("png"))},i._requestArrayBuffer=function(){var e=t._asyncToGenerator((function*(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&this._canRequestImageElement(t.format)){return{imageOrCanvasElement:(yield o(l(this.parsedUrl)+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:i})).data,params:t}}const n=this._initJobHandler(),s=o(l(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}),u=(yield Promise.all([s,n]))[0].data,p=t.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=M.getFormat(u)),!c)throw new a("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const d={signal:i},m="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?M.decode(u,{useCanvas:!0,...t},d):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},d);return{pixelData:{pixelBlock:yield m,extent:t.extent},params:t}}));function r(t){return e.apply(this,arguments)}return r}(),i._generateRasterInfo=function(e,t){const r={...t,query:this._getQueryParams()};return le.generateRasterInfo(l(this.parsedUrl),e,r)},i._isValidCustomizedMosaicRule=function(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())},i._updateMultidimensionalDefinition=function(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=O.getDefaultMultidimensionalDefinition(e,{multidimensionalSubset:this.multidimensionalSubset});if(c.isSome(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new w;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&"none"!==this.renderingRule.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}},i._processVisibleRastersResponse=function(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:s,returnDomainValues:o,templateFields:a}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const d=this.objectIdField||"ObjectId",m="string"==typeof r&&r.toLowerCase().includes("nodata"),f=[];if(r&&!u&&!m){const e={};e[d]=0;p=[r],u=[new n(this.fullExtent,null,e)]}if(!u)return[];let h,y,g;this._updateResponseFieldNames(u,a),m&&!s&&(u=[]);for(let n=0;n<u.length;n++){if(h=u[n],null!=r){if(y=p[n],g=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.includes(this.renderingRule.functionName)?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===y.toLowerCase()&&!s)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";h.attributes[e]=y,h.attributes[t]=g,this._updateFeatureWithMagDirValues(h,y);const o=this.fields&&this.fields.length>0;let a=this.renderingRule&&c.isSome(this.serviceRasterInfo?.attributeTable)?o?y:r:g;this.renderingRule||(a=o?y:r),this._updateFeatureWithRasterAttributeTableValues(h,a)}if(h.sourceLayer=h.layer=this,o&&this._updateFeatureWithDomainValues(h),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];h.attributes[t]=l[e]}f.push(u[n])}return f},i._updateFeatureWithRasterAttributeTableValues=function(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||this.serviceRasterInfo?.attributeTable;if(c.isNone(r))return;const{features:i,fields:n}=r,s=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=s&&s[0];if(!o)return;const a=i.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));a&&a[0]&&n.forEach((t=>{const r=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=a[0].attributes[t.name]}))},i._updateFeatureWithMagDirValues=function(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),n=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new T({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:s,extent:new k(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[s.pixels[0][0],s.pixels[1][0]]:J.uvComponentToVector([s.pixels[0][0],s.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1]},i._updateFeatureWithDomainValues=function(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))},i._updateResponseFieldNames=function(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;c.isNone(r)||e.forEach((e=>{if(e&&e.attributes)for(const i of t){const t=r.get(i)?.name;t&&t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))},i._getRenderingRuleString=function(e){if(this._hasRenderingRule(e)){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null},i._hasRenderingRule=function(e){return null!=e&&null!=e.functionName&&"none"!==e.functionName.toLowerCase()},i._updateRenderingRulesFunctionName=function(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e},i._isRFTJson=function(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")},i._isVectorDataSet=function(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType},i._readCapabilities=function(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,s=t.includes("image"),o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsMeasure:t.includes("mensuration")&&a,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&s,supportsProject:r>=10.3&&s,supportsComputeStatisticsHistograms:r>=10.4&&s,supportsQueryBoundary:r>=10.6&&s,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!!i?.supportsStatistics,supportsOrderBy:!!i?.supportsOrderBy,supportsDistinct:!!i?.supportsDistinct,supportsPagination:!!i?.supportsPagination,supportsStandardizedQueriesOnly:!!i?.useStandardizedQueries,supportsPercentileStatistics:!!i?.supportsPercentileStatistics,supportsCentroid:!!i?.supportsReturningGeometryCentroid,supportsDistance:!!i?.supportsQueryWithDistance,supportsExtent:!!i?.supportsReturningQueryExtent,supportsGeometryProperties:!!i?.supportsReturningGeometryProperties,supportsHavingClause:!!i?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!i?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}},t._createClass(r,[{key:"_rasterFunctionNamesIndex",get:function(){const e=new Map;return!this.rasterFunctionInfos||c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}},{key:"fieldsIndex",get:function(){return this.fields?new I(this.fields):null}},{key:"format",set:function(e){e&&_e.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}},{key:"mosaicRule",set:function(e){let t=e;t&&t.mosaicMethod&&(t=w.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}},{key:"multidimensionalInfo",get:function(){return c.isSome(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}},{key:"parsedUrl",get:function(){return m.urlToObject(this.url)}},{key:"renderer",set:function(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}},{key:"rasterFields",get:function(){const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new b({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new b({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new b({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?u.clone(this.fields):[];n.push(r),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(i),c.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new b({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(n.push(new b({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new b({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:s}=this.rasterInfo??{};if(c.isSome(s)){const t=s.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=u.clone(t);return r.name=e+t.name,r}));n=n.concat(t)}return n}},{key:"renderingRule",set:function(e){let t=e;t&&t.rasterFunction&&(t=N.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}}]),r}(e);function l(e){return e?.path??""}return r.__decorate([f.property()],i.prototype,"_functionRasterInfos",void 0),r.__decorate([f.property()],i.prototype,"_rasterJobHandler",void 0),r.__decorate([f.property()],i.prototype,"_cachedRendererJson",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),r.__decorate([y.reader("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),r.__decorate([f.property()],i.prototype,"_rasterAttributeTableFieldPrefix",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),r.__decorate([f.property()],i.prototype,"adjustAspectRatio",void 0),r.__decorate([f.property({type:[h.Integer],json:{write:!0}})],i.prototype,"bandIds",void 0),r.__decorate([y.reader("bandIds")],i.prototype,"readBandIds",null),r.__decorate([f.property({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),r.__decorate([y.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),r.__decorate([f.property({type:Number})],i.prototype,"compressionQuality",void 0),r.__decorate([_.writer("compressionQuality")],i.prototype,"writeCompressionQuality",null),r.__decorate([f.property({type:Number})],i.prototype,"compressionTolerance",void 0),r.__decorate([_.writer("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),r.__decorate([f.property({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),r.__decorate([f.property({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),r.__decorate([y.reader("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),r.__decorate([f.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),r.__decorate([f.property({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),r.__decorate([f.property()],i.prototype,"rasterInfo",void 0),r.__decorate([f.property({readOnly:!0,type:[b]})],i.prototype,"fields",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"fieldsIndex",null),r.__decorate([f.property({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),r.__decorate([y.reader("service","format",["serviceDataType"])],i.prototype,"readFormat",null),r.__decorate([f.property({type:k})],i.prototype,"fullExtent",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),r.__decorate([f.property({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),r.__decorate([f.property({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),r.__decorate([f.property({type:String,json:{type:D.interpolationKebab.jsonValues,read:D.interpolationKebab.read,write:D.interpolationKebab.write}})],i.prototype,"interpolation",void 0),r.__decorate([f.property()],i.prototype,"minScale",void 0),r.__decorate([y.reader("service","minScale")],i.prototype,"readMinScale",null),r.__decorate([f.property()],i.prototype,"maxScale",void 0),r.__decorate([y.reader("service","maxScale")],i.prototype,"readMaxScale",null),r.__decorate([f.property({type:w})],i.prototype,"mosaicRule",null),r.__decorate([y.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),r.__decorate([_.writer("mosaicRule")],i.prototype,"writeMosaicRule",null),r.__decorate([f.property()],i.prototype,"multidimensionalInfo",null),r.__decorate([f.property({type:F,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),r.__decorate([f.property({json:{type:h.Integer}})],i.prototype,"noData",void 0),r.__decorate([_.writer("noData")],i.prototype,"writeNoData",null),r.__decorate([f.property({type:String,json:{type:D.noDataInterpretationKebab.jsonValues,read:D.noDataInterpretationKebab.read,write:D.noDataInterpretationKebab.write}})],i.prototype,"noDataInterpretation",void 0),r.__decorate([f.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),r.__decorate([y.reader("objectIdField")],i.prototype,"readObjectIdField",null),r.__decorate([f.property({})],i.prototype,"geometryType",void 0),r.__decorate([f.property({})],i.prototype,"typeIdField",void 0),r.__decorate([f.property({})],i.prototype,"types",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"parsedUrl",null),r.__decorate([f.property({type:Function})],i.prototype,"pixelFilter",void 0),r.__decorate([f.property()],i.prototype,"raster",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"sourceType",void 0),r.__decorate([y.reader("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),r.__decorate([f.property()],i.prototype,"viewId",void 0),r.__decorate([f.property({types:s.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:s.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],i.prototype,"renderer",null),r.__decorate([y.reader("renderer")],i.prototype,"readRenderer",null),r.__decorate([_.writer("renderer")],i.prototype,"writeRenderer",null),r.__decorate([f.property()],i.prototype,"symbolizer",void 0),r.__decorate([f.property(R.opacity)],i.prototype,"opacity",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"rasterFields",null),r.__decorate([f.property({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),r.__decorate([f.property({type:N})],i.prototype,"renderingRule",null),r.__decorate([y.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),r.__decorate([_.writer("renderingRule")],i.prototype,"writeRenderingRule",null),r.__decorate([f.property()],i.prototype,"serviceDataType",void 0),r.__decorate([f.property({readOnly:!0,type:ye})],i.prototype,"spatialReference",void 0),r.__decorate([y.reader("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),r.__decorate([f.property({json:{type:ge.jsonValues}})],i.prototype,"pixelType",void 0),r.__decorate([y.reader("pixelType")],i.prototype,"readPixelType",null),r.__decorate([_.writer("pixelType")],i.prototype,"writePixelType",null),r.__decorate([f.property({constructOnly:!0,type:P})],i.prototype,"serviceRasterInfo",void 0),r.__decorate([f.property()],i.prototype,"sourceJSON",void 0),r.__decorate([f.property(R.url)],i.prototype,"url",void 0),r.__decorate([f.property({readOnly:!0})],i.prototype,"version",void 0),r.__decorate([y.reader("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=r.__decorate([g.subclass("esri.layers.mixins.ArcGISImageService")],i),i};e.ArcGISImageService=ve,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
