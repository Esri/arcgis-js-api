// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../geometry","../../Graphic","../../rasterRenderers","../../request","../../core/Error","../../core/jsonMap","../../core/lang","../../core/Logger","../../core/maybe","../../core/promiseUtils","../../core/SetUtils","../../core/urlUtils","../../core/accessorSupport/decorators","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../support/commonProperties","../support/DimensionalDefinition","../support/ExportImageServiceParameters","../support/Field","../support/FieldsIndex","../support/imageryRendererUtils","../support/MosaicRule","../support/PixelBlock","../support/RasterFunction","../support/RasterInfo","../support/RasterJobHandler","../support/rasterFormats/RasterCodec","../../renderers/support/rasterRendererHelper","../../renderers/support/RasterSymbolizer","../../tasks/ImageServiceIdentifyTask","../../tasks/QueryTask","../../tasks/support/FeatureSet","../../tasks/support/ImageServiceIdentifyParameters","../../tasks/support/Query"],(function(e,t,r,i,n,a,o,s,l,u,p,c,d,f,m,h,y,g,_,v,b,R,x,I,S,w,O,P,N,D,F,T,J,C,V,M,j){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ArcGISImageService=void 0;var q=p.getLogger("esri.layers.mixins.ArcGISImageService"),z=l.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),A=l.strict()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),E=l.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),U=f.SetFromValues(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Q=g.ensureRange(y.ensureNumber,{min:0,max:255});t.ArcGISImageService=function(e){return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._functionRasterInfos={},t._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},t._symbolizer=null,t._defaultServiceMosaicRule=null,t.rasterAttributeTableFieldPrefix="Raster.",t.adjustAspectRatio=null,t.bandCount=null,t.bandIds=void 0,t.capabilities=null,t.compressionQuality=void 0,t.compressionTolerance=.01,t.copyright=null,t.definitionExpression=null,t.exportImageServiceParameters=null,t.rasterInfo=null,t.fields=null,t.fullExtent=null,t.hasMultidimensions=!1,t.imageMaxHeight=4100,t.imageMaxWidth=4100,t.interpolation=void 0,t.minScale=0,t.maxScale=0,t.multidimensionalInfo=null,t.noData=null,t.noDataInterpretation=void 0,t.objectIdField=null,t.pixelSizeX=null,t.pixelSizeY=null,t.pixelFilter=null,t.raster=void 0,t.viewId=void 0,t.renderer=null,t.rasterAttributeTable=null,t.rasterFunctionInfos=null,t.serviceDataType=null,t.spatialReference=null,t.pixelType=null,t.serviceRasterInfo=null,t.sourceJSON=null,t.url=null,t.version=null,t}return r.__extends(t,e),t.prototype.initialize=function(){this._set("exportImageServiceParameters",new b.ExportImageServiceParameters({layer:this}))},t.prototype.readDefaultServiceMosaicRule=function(e,t){return S.fromJSON(t)},Object.defineProperty(t.prototype,"rasterFunctionNamesIndex",{get:function(){var e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1?e:(this.rasterFunctionInfos.forEach((function(t){e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"queryTask",{get:function(){return new C({url:this.url})},enumerable:!1,configurable:!0}),t.prototype.readBandIds=function(e,t){if(Array.isArray(e)&&e.length>0&&e.every((function(e){return"number"==typeof e})))return e},t.prototype.readCapabilities=function(e,t){return this._readCapabilities(t)},t.prototype.writeCompressionQuality=function(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)},t.prototype.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},Object.defineProperty(t.prototype,"fieldsIndex",{get:function(){return this.fields?new x(this.fields):null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"format",{set:function(e){e&&U.has(e.toLowerCase())&&this._set("format",e.toLowerCase())},enumerable:!1,configurable:!0}),t.prototype.readFormat=function(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"},t.prototype.readMinScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},t.prototype.readMaxScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},Object.defineProperty(t.prototype,"mosaicRule",{set:function(e){var t=e;t&&t.mosaicMethod&&(t=S.fromJSON(r.__assign(r.__assign({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)},enumerable:!1,configurable:!0}),t.prototype.readMosaicRule=function(e,t){return S.fromJSON(e||t.mosaicRule||t)},t.prototype.writeMosaicRule=function(e,t,r){var i=this.mosaicRule,n=this.definitionExpression;i?n&&n!==i.where&&((i=i.clone()).where=n):n&&(i=new S({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())},t.prototype.writeNoData=function(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Q(e))},t.prototype.readObjectIdField=function(e,t){if(!e){var r=t.fields.filter((function(e){return"esriFieldTypeOID"===e.type||"oid"===e.type}));e=r&&r[0]&&r[0].name}return e},Object.defineProperty(t.prototype,"parsedUrl",{get:function(){return this.url?m.urlToObject(this.url):null},enumerable:!1,configurable:!0}),t.prototype.readRenderer=function(e,t,r){var i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=a.read(i,r)||void 0;if(null!=n)return I.isSupportedRendererType(n)||q.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n},Object.defineProperty(t.prototype,"rasterFields",{get:function(){var e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new R({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new R({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new R({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=this.fields?u.clone(this.fields):[];n.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((function(e){return"none"===e.name.toLowerCase()}))&&n.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((function(e){return"none"!==e.name.toLowerCase()})).forEach((function(e){n.push(new R({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new R({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new R({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));var a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){var o=a.filter((function(e){return"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()})).map((function(t){var r=u.clone(t);return r.name=e+t.name,r}));n=n.concat(o)}return n},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"renderingRule",{set:function(e){var t=e;t&&t.rasterFunction&&(t=O.fromJSON(r.__assign(r.__assign({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)},enumerable:!1,configurable:!0}),t.prototype.readRenderingRule=function(e,t){var r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?O.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null},t.prototype.writeRenderingRule=function(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())},t.prototype.readSpatialReference=function(e,t){var r=e||t.extent.spatialReference;return r?i.SpatialReference.fromJSON(r):null},t.prototype.readPixelType=function(e){return E.fromJSON(e)||e},t.prototype.writePixelType=function(e,t,r){(c.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=E.toJSON(e))},t.prototype.readVersion=function(e,t){var r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r},t.prototype.applyFilter=function(e){var t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t},t.prototype.applyRenderer=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,n,a,o,s;return r.__generator(this,(function(l){switch(l.label){case 0:return i=e,this._isPicture()||!this.renderer||!this._symbolizer||this.pixelFilter?[3,5]:(n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),a=this._rasterJobHandler.instance,o=this.bandIds,a?n?(this._symbolizer.bind(),[4,a.updateSymbolizer(this._symbolizer,t)]):[3,2]:[3,4]);case 1:l.sent(),this._cachedRendererJson=this.renderer.toJSON(),l.label=2;case 2:return[4,a.symbolize(r.__assign({bandIds:o},e),t)];case 3:return s=l.sent(),i={extent:e.extent,pixelBlock:s},[3,5];case 4:i={extent:e.extent,pixelBlock:this._symbolizer.symbolize(r.__assign({bandIds:o},e))},l.label=5;case 5:return[2,i]}}))}))},t.prototype.destroy=function(){this._shutdownJobHandler()},t.prototype.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},t.prototype.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},t.prototype.fetchImage=function(e,t,r,i){var n=this;if(void 0===i&&(i={}),null==e||null==t||null==r)return d.reject(new s("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));var a=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return d.when(a).then((function(a){a&&(n.rasterInfo=a);var o={imageServiceParameters:n.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:n.format},requestAsImageElement:i.requestAsImageElement&&!n.pixelFilter||!1,signal:i.signal};return n._requestArrayBuffer(o)}))},t.prototype.fetchKeyProperties=function(e){var t=e&&e.renderingRule&&e.renderingRule.toJSON();return o(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((function(e){return e.data}))},t.prototype.fetchRasterAttributeTable=function(e){var t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?d.reject(new s("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):o(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((function(e){return V.fromJSON(e.data)}))},t.prototype.getCatalogItemRasterInfo=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var n,a,s,l,u;return r.__generator(this,(function(p){switch(p.label){case 0:return n=o(this.parsedUrl.path+"/"+e+"/info",r.__assign({query:this._getQueryParams()},t)).then((function(e){return e.data})),a=o(this.parsedUrl.path+"/"+e+"/info/keyProperties",r.__assign({query:this._getQueryParams()},t)).then((function(e){return e.data})).catch((function(){})),[4,d.all([n,a])];case 1:return(s=p.sent())[0]?(l=i.Extent.fromJSON(s[0].extent),u=s[0].statistics?s[0].statistics.map((function(e){return{min:e[0],max:e[1],avg:e[2],stddev:e[3]}})):null,[2,new P({bandCount:s[0].bandCount,extent:l,spatialReference:l.sr,pixelSize:new i.Point({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:l.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:u,histograms:s[0].histograms,keyProperties:s[1]||{}})]):[2,void 0]}}))}))},t.prototype.getCatalogItemICSInfo=function(e,t){var n,a,s;return r.__awaiter(this,void 0,void 0,(function(){var l,u,p,c,f,m,h,y,g,_,v,b,R,x,I,S,w,O,P,N,D,F,T,J,C,V,M,j,q,z;return r.__generator(this,(function(A){switch(A.label){case 0:return[4,o(this.parsedUrl.path+"/"+e+"/info/ics",r.__assign({query:this._getQueryParams()},t))];case 1:if(l=A.sent().data,!(u=l&&l.ics))return[2,void 0];p=null,A.label=2;case 2:return A.trys.push([2,4,,5]),[4,o(this.parsedUrl.path+"/"+e+"/info",r.__assign({query:this._getQueryParams()},t))];case 3:return c=A.sent(),p=c.data.extent,[3,5];case 4:return A.sent(),[3,5];case 5:if(!p||!p.spatialReference)return[2,{ics:u,icsToPixelTransform:null,icsExtent:null,northDirection:null}];for(f=this.version>=10.7?o(this.parsedUrl.path+"/"+e+"/info/icstopixel",r.__assign({query:this._getQueryParams()},t)).then((function(e){return e.data})).catch((function(){return{}})):{},m=p.spatialReference,h={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[p]}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},y=o(this.parsedUrl.path+"/project",r.__assign({query:this._getQueryParams(h)},t)).then((function(e){return e.data})).catch((function(){return{}})),g=5,_=(p.xmin+p.xmax)/2,v=(p.ymax-p.ymin)/(g+1),b=p.ymin+v,R=[],V=0;V<g;V++)R.push({x:_,y:b+v*V});return x={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:R}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},I=o(this.parsedUrl.path+"/project",r.__assign({query:this._getQueryParams(x)},t)).then((function(e){return e.data})).catch((function(){return{}})),[4,d.all([f,y,I])];case 6:if(S=A.sent(),null==(w=S[0].ipxf)&&(O=null===(n=u.geodataXform)||void 0===n?void 0:n.xf_0,"topup"===(null===(a=null==O?void 0:O.name)||void 0===a?void 0:a.toLowerCase())&&6===(null===(s=null==O?void 0:O.coefficients)||void 0===s?void 0:s.length)&&(w={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:O.coefficients,cellsizeRatio:0,type:"GeometricXform"}})),(P=i.Extent.fromJSON(S[1]&&S[1].geometries&&S[1].geometries[0]))&&(P.spatialReference=new i.SpatialReference({wkid:0,imageCoordinateSystem:u})),N=S[2].geometries?S[2].geometries.filter((function(e){return null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y})):[],(D=N.length)<3)return[2,{ics:u,icsToPixelTransform:w,icsExtent:P,northDirection:null}];for(F=0,T=0,J=0,C=0,V=0;V<D;V++)F+=N[V].x,T+=N[V].y,J+=N[V].x*N[V].x,C+=N[V].x*N[V].y;return M=(D*C-F*T)/(D*J-F*F),j=0,q=N[g-1].x>N[0].x,z=N[g-1].y>N[0].y,M===1/0?j=z?90:270:0===M?j=q?0:180:M>0?j=q?180*Math.atan(M)/Math.PI:180*Math.atan(M)/Math.PI+180:M<0&&(j=z?180+180*Math.atan(M)/Math.PI:360+180*Math.atan(M)/Math.PI),[2,{ics:u,icsToPixelTransform:w,icsExtent:P,northDirection:j}]}}))}))},t.prototype.generateRasterInfo=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,n;return r.__generator(this,(function(r){switch(r.label){case 0:if((!e||"none"===e.functionName.toLowerCase())&&c.isSome(this.serviceRasterInfo))return[2,this.serviceRasterInfo];if(i=function(e){if(!e)return null;var t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((function(e){return e.replace('"rasterFunction":"',"").replace('"',"")}));return r?r.join("/"):null}(e),this._functionRasterInfos[i])return[2,this._functionRasterInfos[i]];n=this._generateRasterInfo(e,t),this._functionRasterInfos[i]=n,r.label=1;case 1:return r.trys.push([1,3,,4]),[4,n];case 2:return[2,r.sent()];case 3:return r.sent(),this._functionRasterInfos[i]=null,[2,null];case 4:return[2]}}))}))},t.prototype.getExportImageServiceParameters=function(e,t,i,n){var a,o=(e=e.clone().shiftCentralMeridian()).spatialReference;if(o.imageCoordinateSystem){var s=o.imageCoordinateSystem,l=s.id,u=s.referenceServiceName;a=null!=l?u?this.parsedUrl.path.toLowerCase().indexOf("/"+u.toLowerCase()+"/")>-1?"0:"+l:JSON.stringify({icsid:l,icsns:u}):"0:"+l:JSON.stringify({ics:o.imageCoordinateSystem})}else a=o.wkid||JSON.stringify(o.toJSON());c.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);var p=this.exportImageServiceParameters.toJSON(),d=p.bandIds,f=p.noData,m=p.mosaicRule,h=p.renderingRule;d instanceof Array&&d.length>0&&(p.bandIds=d.join(",")),f instanceof Array&&f.length>0&&(p.noData=f.join(","));var y=this.timeInfo;m&&m.multidimensionalDefinition&&n&&y&&y.startField&&(m.multidimensionalDefinition=m.multidimensionalDefinition.filter((function(e){return e.dimensionName!==y.startField}))),p.mosaicRule=m&&JSON.stringify(m),p.renderingRule=h&&JSON.stringify(h);var g={};if(n){var _=n.toJSON(),v=_.start,b=_.end;v&&b&&v===b?g.time=""+v:null==v&&null==b||(g.time=(null==v?"null":v)+","+(null==b?"null":b))}return r.__assign(r.__assign({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+i},p),g)},t.prototype.queryRasters=function(e){return this.queryTask.execute(e)},t.prototype.queryVisibleRasters=function(e,t){var r=this;if(!e)return d.reject(new s("imagery-layer: query-visible-rasters","missing query parameter"));var n=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1},a=n.pixelSize,o=n.returnDomainValues,l=n.returnTopmostRaster,u=n.showNoDataRecords,p=!1,c=null,f=null,m=this.rasterFunctionNamesIndex;if(e.outFields&&(p=e.outFields.some((function(e){return-1===e.toLowerCase().indexOf("raster.servicepixelvalue")})),this.version>=10.4)){var h=e.outFields.filter((function(e){return e.toLowerCase().indexOf("raster.servicepixelvalue")>-1&&e.length>"raster.servicepixelvalue".length})).map((function(e){var t=e.slice("raster.servicepixelvalue".length+1);return[r._updateRenderingRulesFunctionName(t,m),t]}));c=h.map((function(e){return new O({functionName:e[0]})})),f=h.map((function(e){return e[1]})),0===c.length?this.renderingRule?(c.push(this.renderingRule),f.push(this.renderingRule.functionName)):c=null:this.renderingRule&&!c.some((function(e){return e.functionName===r.renderingRule.functionName}))&&(c.push(this.renderingRule),f.push(this.renderingRule.functionName))}var y=!e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),g=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:c,pixelSize:a,returnCatalogItems:p,returnGeometry:y,maxItemCount:l?1:null});delete g.f;var _=new M(g),v=new J({url:this.url}),b=this.generateRasterInfo(this.renderingRule);return d.create((function(t){b.then((function(){v.execute(_).then((function(n){var a=e.outFields;if(p&&!y&&n.catalogItems&&n.catalogItems.features&&n.catalogItems.features.length>0){var l=r.objectIdField||"ObjectId",c=n.catalogItems.features,d=c.map((function(e){return e.attributes&&e.attributes[l]})),m=new j({objectIds:d,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]});return r.queryRasters(m).then((function(s){s&&s.features&&s.features.length>0&&s.features.forEach((function(t){c.forEach((function(r){r.attributes[l]===t.attributes[l]&&(r.geometry=new i.Polygon(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),t(r._processVisibleRastersResponse(n,{returnDomainValues:o,templateRRFunctionNames:f,showNoDataRecords:u,templateFields:a}))})).catch((function(){throw new s("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}t(r._processVisibleRastersResponse(n,{returnDomainValues:o,templateRRFunctionNames:f,showNoDataRecords:u,templateFields:a}))})).catch((function(){throw new s("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))},t.prototype.fetchVariableStatisticsHistograms=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,n,a;return r.__generator(this,(function(r){switch(r.label){case 0:return i=o(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((function(e){var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),n=o(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((function(e){var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),[4,d.all([i,n])];case 1:return(a=r.sent())[0]&&a[0].forEach((function(e){e.avg=e.mean,e.stddev=e.standardDeviation})),[2,{statistics:a[0]||null,histograms:a[1]||null}]}}))}))},t.prototype._fetchService=function(e){var t;return r.__awaiter(this,void 0,void 0,(function(){var i,n,a,l,u,p,f=this;return r.__generator(this,(function(r){switch(r.label){case 0:return(i=this.sourceJSON)?[3,2]:[4,o(this.parsedUrl.path,{query:this._getQueryParams(),signal:e})];case 1:n=r.sent(),a=n.data,l=n.ssl,i=a,this.sourceJSON=i,l&&(this.url=this.url.replace(/^http:/i,"https:")),r.label=2;case 2:if((null===(t=i.capabilities)||void 0===t?void 0:t.toLowerCase().split(",").map((function(e){return e.trim()})).indexOf("tilesonly"))>-1)throw new s("imagery-layer:fetch-metadata","use ImageryTileLayer to open tiles-only image services");return this.read(i,{origin:"service",url:this.parsedUrl}),c.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo),u=c.isSome(this.serviceRasterInfo)?d.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:i,signal:e}).then((function(e){return f._set("serviceRasterInfo",e),e})),p=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null,[2,d.all([u,p]).then((function(e){e[1]?f._set("rasterInfo",e[1]):f._set("rasterInfo",e[0]),f._configDefaultRenderer(),f.watch("renderer",(function(){return f._configDefaultRenderer()})),f.watch("renderingRule",(function(e){(f.renderer||f._symbolizer||f.popupEnabled&&f.popupTemplate)&&f.generateRasterInfo(e).then((function(e){e&&(f.rasterInfo=e)}))}));var t=c.isSome(f.serviceRasterInfo)&&f.serviceRasterInfo.multidimensionalInfo;t&&f._updateMultidimensionalDefinition(t)}))]}}))}))},t.prototype._initJobHandler=function(){return r.__awaiter(this,void 0,void 0,(function(){var e,t=this;return r.__generator(this,(function(r){switch(r.label){case 0:return null!=this._rasterJobHandler.connectionPromise?[2,this._rasterJobHandler.connectionPromise]:(e=new N,this._rasterJobHandler.connectionPromise=e.initialize().then((function(){t._rasterJobHandler.instance=e}),(function(){return null})),[4,this._rasterJobHandler.connectionPromise]);case 1:return r.sent(),[2]}}))}))},t.prototype._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0},t.prototype._isPicture=function(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1},t.prototype._configDefaultRenderer=function(){var e,t;if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){var r=F.getDefaultBandCombination(this.rasterInfo);!r||3===this.rasterInfo.bandCount&&0===r[0]&&1===r[1]&&2===r[2]||(this.bandIds=r)}this.renderer||(this.renderer=F.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null===(t=null===(e=this.mosaicRule)||void 0===e?void 0:e.multidimensionalDefinition)||void 0===t?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.renderer=this.renderer,this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new T({renderer:this.renderer,rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}},t.prototype._clonePixelData=function(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}},t.prototype._getQueryParams=function(e){var t=this.raster,i=this.viewId;return r.__assign({raster:t,viewId:i,f:"json"},e)},t.prototype._decodePixelBlock=function(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):D.decode(e,t,r)},t.prototype._fetchMultidimensionalInfo=function(e){var t;return r.__awaiter(this,void 0,void 0,(function(){var i;return r.__generator(this,(function(r){switch(r.label){case 0:return[4,o(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((function(e){var t;return null===(t=e.data)||void 0===t?void 0:t.multidimensionalInfo}))];case 1:return i=r.sent(),(null===(t=i.variables)||void 0===t?void 0:t.length)&&i.variables.forEach((function(e){var t;(null===(t=e.statistics)||void 0===t?void 0:t.length)&&e.statistics.forEach((function(e){e.avg=e.mean,e.stddev=e.standardDeviation}))})),[2,i]}}))}))},t.prototype._fetchAuxiliaryRasterInfo=function(e){var t=e&&e.serviceInfo;if(!t)return d.reject(new s("imagery-layer:fetch-metadata","valid serviceInfo is required"));var r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,n=e.signal,a=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&o(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:n}).then((function(e){return V.fromJSON(e.data)})).catch((function(){return null})),l=!!(t.hasColormap&&this.version>=10.1)&&o(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:n}).then((function(e){var t;return null===(t=e.data)||void 0===t?void 0:t.colormap})),u=!!(t.hasHistograms&&this.version>=10.1)&&o(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:n}).then((function(e){var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),p=this.version>=10.3&&o(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:n}).then((function(e){return e.data})).catch((function(){})),c=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return d.all([a,l,u,p,c]).then((function(e){var r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(var n=0;n<t.minValues.length;n++)r.push({min:t.minValues[n],max:t.maxValues[n],avg:t.meanValues[n],stddev:t.stdvValues[n]})}var a=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),o=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=i.SpatialReference.fromJSON(t.spatialReference||t.extent.spatialReference);return new P({width:a,height:o,bandCount:t.bandCount,extent:i.Extent.fromJSON(t.extent),spatialReference:s,pixelSize:new i.Point({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))},t.prototype._requestArrayBuffer=function(e){var t=this,i=e.imageProps,n=e.requestAsImageElement,a=e.signal;if(n&&!this.pixelFilter&&i.format&&i.format.indexOf("png")>-1)return o(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(r.__assign({f:"image"},e.imageServiceParameters)),signal:a}).then((function(e){return{imageElement:e.data,params:i}}));var l=this._initJobHandler(),u=o(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(r.__assign({f:"image"},e.imageServiceParameters)),signal:a});return d.all([u,l]).then((function(e){var n=e[0].data,o=i.format||"jpgpng",l=o;if("bsq"!==l&&"bip"!==l&&(l=D.getFormat(n)),!l)throw new s("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(n)));var u="gif"===o||"bmp"===o||o.indexOf("png")>-1&&("png"===l||"jpg"===l),p={signal:a};return u?D.decode(n,r.__assign({useCanvas:!0},i),p).then((function(e){return{pixelData:{pixelBlock:e,extent:i.extent},params:i}})):t._decodePixelBlock(n,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:o},p).then((function(e){return{pixelData:{pixelBlock:e,extent:i.extent},params:i}}))}))},t.prototype._generateRasterInfo=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i;return r.__generator(this,(function(n){switch(n.label){case 0:return[4,o(this.parsedUrl.path,r.__assign({query:this._getQueryParams({renderingRule:e})},t))];case 1:return i=n.sent().data,[4,this._fetchAuxiliaryRasterInfo(r.__assign({serviceInfo:i,renderingRule:e},t))];case 2:return[2,n.sent()]}}))}))},t.prototype._isValidCustomizedMosaicRule=function(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())},t.prototype._updateMultidimensionalDefinition=function(e){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var t=e.variables[0].dimensions,r=[];for(var i in t)if(t.hasOwnProperty(i)){var n=t[i],a=n.extent,o=!0,s=[a[0]];n.hasRanges&&!0===n.hasRanges?(o=!1,s=[n.values[0]]):"stdz"===n.name.toLowerCase()&&Math.abs(a[1])<=Math.abs(a[0])&&(s=[a[1]]),r.push(new v({variableName:"",dimensionName:t[i].name,isSlice:o,values:s}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new S;var l=this.mosaicRule.multidimensionalDefinition;(!l||l&&l.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}},t.prototype._formatAttributeValue=function(e,t){if("string"==typeof e){var r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),n=i&&i.format;if(n){var a=void 0,o=void 0;return e.trim().indexOf(",")>-1?(o=(a=",")+" ",this._formatDelimitedString(e,a,o,n)):e.trim().indexOf(" ")>-1?(a=o=" ",this._formatDelimitedString(e,a,o,n)):this._formatNumberFromString(e,n)}}return e},t.prototype._getFieldInfo=function(e,t){if(e&&e.length&&t){var r=t.toLowerCase(),i=void 0;return e.some((function(e){return!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0)})),i}},t.prototype._formatDelimitedString=function(e,t,r,i){var n=this;return e&&t&&r&&i?e.trim().split(t).map((function(e){return n._formatNumberFromString(e,i)})).join(r):e},t.prototype._formatNumberFromString=function(e,t){if(!e||!t)return e;var r=Number(e);return isNaN(r)?e:t.format(r)},t.prototype._processVisibleRastersResponse=function(e,t){t=t||{};var r,i,a,o=e.value,s=t.templateRRFunctionNames,l=t.showNoDataRecords,u=t.returnDomainValues,p=t.templateFields,d=e.processedValues,f=e.catalogItems&&e.catalogItems.features,m=e.properties&&e.properties.Values&&e.properties.Values.map((function(e){return e.replace(/ /gi,", ")}))||[],h=this.objectIdField||"ObjectId",y="string"==typeof o&&o.toLowerCase().indexOf("nodata")>-1,g=[];if(o&&!f&&!y){var _={};_[h]=0,m=[o],f=[new n(this.fullExtent,null,_)]}if(!f)return[];this._updateResponseFieldNames(f,p);for(var v=0;v<f.length;v++){if(r=f[v],null!=o&&!y){if(i=m[v],a=this.renderingRule&&d&&d.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?d[s.indexOf(this.renderingRule.functionName)]:o,"nodata"===i.toLowerCase()&&!l)continue;r.attributes["Raster.ItemPixelValue"]=this._formatAttributeValue(i,"Raster.ItemPixelValue"),r.attributes["Raster.ServicePixelValue"]=this._formatAttributeValue(a,"Raster.ServicePixelValue"),this._updateFeatureWithMagDirValues(r,i);var b=this.fields&&this.fields.length>0,R=this.renderingRule&&c.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?b?i:o:a;this.renderingRule||(R=b?i:o),this._updateFeatureWithRasterAttributeTableValues(r,R)}if(r.sourceLayer=this,u&&this._updateFeatureWithDomainValues(r),s&&d&&s.length===d.length)for(var x=0;x<s.length;x++){var I="Raster.ServicePixelValue."+s[x];r.attributes[I]=this._formatAttributeValue(d[x],I)}g.push(f[v])}return g},t.prototype._updateFeatureWithRasterAttributeTableValues=function(e,t){var r=this,i=this.rasterInfo&&this.rasterInfo.attributeTable||c.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,n=i&&i.features;if(n){var a=i.fields,o=a.map((function(e){return e.name})).filter((function(e){return"value"===e.toLowerCase()})),s=o&&o[0];if(s){var l=n.filter((function(e){return e.attributes[s]===(null!=t?parseInt(t,10):null)}));l&&l[0]&&a.forEach((function(t){var i=r.rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=r._formatAttributeValue(l[0].attributes[t.name],i)}))}}},t.prototype._updateFeatureWithMagDirValues=function(e,t){if(this.pixelFilter&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType)){var r=t.replace(" ",",").split(",").map((function(e){return parseFloat(e)})),n=r.map((function(e){return[e]})),a=r.map((function(e){return{minValue:e,maxValue:e,noDataValue:null}})),o=new w({height:1,width:1,pixelType:"f32",pixels:n,statistics:a});this.pixelFilter({pixelBlock:o,extent:new i.Extent(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=o.pixels[0][0],e.attributes["Raster.Direction"]=o.pixels[1][0]}},t.prototype._updateFeatureWithDomainValues=function(e){var t=this.fields&&this.fields.filter((function(e){return e.domain&&"coded-value"===e.domain.type}));null!=t&&t.forEach((function(t){var r=e.attributes[t.name];if(null!=r){var i=t.domain.codedValues.filter((function(e){return e.code===r}))[0];i&&(e.attributes[t.name]=i.name)}}))},t.prototype._updateResponseFieldNames=function(e,t){if(t&&!(t.length<1)){var r=this.fieldsIndex;r&&e.forEach((function(e){if(e&&e.attributes)for(var i=0,n=t;i<n.length;i++){var a=n[i];if(r.has(a)){var o=r.get(a).name;o!==a&&(e.attributes[a]=e.attributes[o],delete e.attributes[o])}}}))}},t.prototype._updateRenderingRulesFunctionName=function(e,t){if(e&&!(e.length<1)){if("Raw"===e)return e.replace("Raw","None");var r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}},t.prototype._isRFTJson=function(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")},t.prototype._readCapabilities=function(e){var t=e.capabilities?e.capabilities.toLowerCase().split(",").map((function(e){return e.trim()})):["image","catalog"],r=e.currentVersion,i=e.advancedQueryCapabilities,n=e.maxRecordCount,a=t.indexOf("image")>-1,o="esriImageServiceDataTypeElevation"===e.serviceDataType,s=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:a,supportsExportImage:a,supportsIdentify:a,supportsMeasure:t.indexOf("mensuration")>-1&&s,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&a,supportsProject:r>=10.3&&a,supportsComputeStatisticsHistograms:r>=10.4&&a,supportsQueryBoundary:r>=10.6&&a,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:n}}},r.__decorate([h.property()],t.prototype,"_functionRasterInfos",void 0),r.__decorate([h.property()],t.prototype,"_rasterJobHandler",void 0),r.__decorate([h.property()],t.prototype,"_symbolizer",void 0),r.__decorate([h.property()],t.prototype,"_defaultServiceMosaicRule",void 0),r.__decorate([h.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),r.__decorate([h.property()],t.prototype,"_cachedRendererJson",void 0),r.__decorate([h.property()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),r.__decorate([h.property({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],t.prototype,"rasterFunctionNamesIndex",null),r.__decorate([h.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),r.__decorate([h.property()],t.prototype,"adjustAspectRatio",void 0),r.__decorate([h.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),r.__decorate([h.property({type:[y.Integer],json:{write:!0}})],t.prototype,"bandIds",void 0),r.__decorate([h.reader("bandIds")],t.prototype,"readBandIds",null),r.__decorate([h.property({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),r.__decorate([h.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),r.__decorate([h.property({type:Number})],t.prototype,"compressionQuality",void 0),r.__decorate([h.writer("compressionQuality")],t.prototype,"writeCompressionQuality",null),r.__decorate([h.property({type:Number})],t.prototype,"compressionTolerance",void 0),r.__decorate([h.writer("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),r.__decorate([h.property({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),r.__decorate([h.property({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),r.__decorate([h.property({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),r.__decorate([h.property()],t.prototype,"rasterInfo",void 0),r.__decorate([h.property({readOnly:!0,type:[R]})],t.prototype,"fields",void 0),r.__decorate([h.property({readOnly:!0,dependsOn:["fields"]})],t.prototype,"fieldsIndex",null),r.__decorate([h.property({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),r.__decorate([h.reader("service","format",["serviceDataType"])],t.prototype,"readFormat",null),r.__decorate([h.property({type:i.Extent})],t.prototype,"fullExtent",void 0),r.__decorate([h.property({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),r.__decorate([h.property({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),r.__decorate([h.property({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),r.__decorate([h.property({type:String,json:{type:z.jsonValues,read:z.read,write:z.write}})],t.prototype,"interpolation",void 0),r.__decorate([h.property()],t.prototype,"minScale",void 0),r.__decorate([h.reader("service","minScale")],t.prototype,"readMinScale",null),r.__decorate([h.property()],t.prototype,"maxScale",void 0),r.__decorate([h.reader("service","maxScale")],t.prototype,"readMaxScale",null),r.__decorate([h.property({type:S})],t.prototype,"mosaicRule",null),r.__decorate([h.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),r.__decorate([h.writer("mosaicRule")],t.prototype,"writeMosaicRule",null),r.__decorate([h.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),r.__decorate([h.property({json:{type:y.Integer}})],t.prototype,"noData",void 0),r.__decorate([h.writer("noData")],t.prototype,"writeNoData",null),r.__decorate([h.property({type:String,json:{type:A.jsonValues,read:A.read,write:A.write}})],t.prototype,"noDataInterpretation",void 0),r.__decorate([h.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),r.__decorate([h.reader("objectIdField")],t.prototype,"readObjectIdField",null),r.__decorate([h.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),r.__decorate([h.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),r.__decorate([h.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),r.__decorate([h.property({type:Function})],t.prototype,"pixelFilter",void 0),r.__decorate([h.property()],t.prototype,"raster",void 0),r.__decorate([h.property()],t.prototype,"viewId",void 0),r.__decorate([h.property({types:a.rasterRendererTypes,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],t.prototype,"renderer",void 0),r.__decorate([h.reader("renderer")],t.prototype,"readRenderer",null),r.__decorate([h.property(_.opacityDrawingInfo)],t.prototype,"opacity",void 0),r.__decorate([h.property({readOnly:!0}),h.aliasOf("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),r.__decorate([h.property({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],t.prototype,"rasterFields",null),r.__decorate([h.property({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),r.__decorate([h.property({type:O})],t.prototype,"renderingRule",null),r.__decorate([h.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),r.__decorate([h.writer("renderingRule")],t.prototype,"writeRenderingRule",null),r.__decorate([h.property()],t.prototype,"serviceDataType",void 0),r.__decorate([h.property({readOnly:!0,type:i.SpatialReference})],t.prototype,"spatialReference",void 0),r.__decorate([h.reader("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),r.__decorate([h.property({json:{type:E.jsonValues}})],t.prototype,"pixelType",void 0),r.__decorate([h.reader("pixelType")],t.prototype,"readPixelType",null),r.__decorate([h.writer("pixelType")],t.prototype,"writePixelType",null),r.__decorate([h.property({constructOnly:!0,type:P})],t.prototype,"serviceRasterInfo",void 0),r.__decorate([h.property()],t.prototype,"sourceJSON",void 0),r.__decorate([h.property(_.url)],t.prototype,"url",void 0),r.__decorate([h.property({readOnly:!0})],t.prototype,"version",void 0),r.__decorate([h.reader("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=r.__decorate([h.subclass("esri.layers.mixins.ArcGISImageService")],t)}(e)}}));