/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{id as r}from"../../kernel.js";import e from"../../request.js";import{result as s}from"../../core/asyncUtils.js";import o from"../../core/Error.js";import i from"../../core/Logger.js";import{isNone as a,isSome as l}from"../../core/maybe.js";import{throwIfAborted as p,isAbortError as n,throwIfAbortError as m}from"../../core/promiseUtils.js";import{normalize as c,hasSamePortal as u}from"../../core/urlUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{reader as h}from"../../core/accessorSupport/decorators/reader.js";import{subclass as f}from"../../core/accessorSupport/decorators/subclass.js";import{writer as y}from"../../core/accessorSupport/decorators/writer.js";import g from"../../portal/Portal.js";import I from"../../portal/PortalItem.js";import j from"../../portal/PortalUser.js";const w=i.getLogger("esri.layers.mixins.PortalLayer"),v=i=>{let v=class extends i{constructor(){super(...arguments),this.resourceReferences={portalItem:null,paths:[]},this.userHasEditingPrivileges=!0}destroy(){this.portalItem?.destroy(),this.portalItem=null}set portalItem(t){t!==this._get("portalItem")&&(this.removeOrigin("portal-item"),this._set("portalItem",t))}readPortalItem(t,r,e){if(r.itemId)return new I({id:r.itemId,portal:e&&e.portal})}writePortalItem(t,r){t&&t.id&&(r.itemId=t.id)}async loadFromPortal(t,r){if(this.portalItem&&this.portalItem.id)try{const e=await import("../../portal/support/layersLoader.js");return p(r),await e.load({instance:this,supportedTypes:t.supportedTypes,validateItem:t.validateItem,supportsData:t.supportsData},r)}catch(e){throw n(e)||w.warn(`Failed to load layer (${this.title}, ${this.id}) portal item (${this.portalItem.id})\n  ${e}`),e}}async finishLoadEditablePortalLayer(t){this._set("userHasEditingPrivileges",await this._fetchUserHasEditingPrivileges(t).catch((t=>(m(t),!0))))}async _fetchUserHasEditingPrivileges(t){const e=this.url?r?.findCredential(this.url):null;if(!e)return!0;const s=P.credential===e?P.user:await this._fetchEditingUser(t);return P.credential=e,P.user=s,a(s)||null==s.privileges||s.privileges.includes("features:user:edit")}async _fetchEditingUser(t){const o=this.portalItem?.portal?.user;if(o)return o;const i=r.findServerInfo(this.url);if(!i?.owningSystemUrl)return null;const a=`${i.owningSystemUrl}/sharing/rest`,p=g.getDefault();if(p&&p.loaded&&c(p.restUrl)===c(a))return p.user;const n=`${a}/community/self`,m=l(t)?t.signal:null,u=await s(e(n,{authMode:"no-prompt",query:{f:"json"},signal:m}));return u.ok?j.fromJSON(u.value.data):null}read(t,r){r&&(r.layer=this),super.read(t,r)}write(t,r){const e=r&&r.portal,s=this.portalItem&&this.portalItem.id&&(this.portalItem.portal||g.getDefault());return e&&s&&!u(s.restUrl,e.restUrl)?(r.messages&&r.messages.push(new o("layer:cross-portal",`The layer '${this.title} (${this.id})' cannot be persisted because it refers to an item on a different portal than the one being saved to. To save, set layer.portalItem to null or save to the same portal as the item associated with the layer`,{layer:this})),null):super.write(t,{...r,layer:this})}};return t([d({type:I})],v.prototype,"portalItem",null),t([h("web-document","portalItem",["itemId"])],v.prototype,"readPortalItem",null),t([y("web-document","portalItem",{itemId:{type:String}})],v.prototype,"writePortalItem",null),t([d({clonable:!1})],v.prototype,"resourceReferences",void 0),t([d({readOnly:!0})],v.prototype,"userHasEditingPrivileges",void 0),v=t([f("esri.layers.mixins.PortalLayer")],v),v},P={credential:null,user:null};export{v as PortalLayer};
