/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../request","../../core/Error","../../core/Logger","../../core/maybe","../../core/promiseUtils","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/originUtils","../../geometry/Extent","../../geometry/HeightModelInfo","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties","../support/I3SIndexInfo","../support/schemaValidatorLoader","../../portal/Portal","../../portal/PortalItem","../../webdoc/support/saveUtils"],(function(e,t,r,o,i,n,a,s,l,p,c,u,d,y,h,f,m,v,S,_,g,I,x,w,b,T){"use strict";const O="esri.layers.mixins.SceneService",R=n.getLogger(O),E=n=>{let c=function(r){function n(){var o;return(o=r.apply(this,arguments)||this).spatialReference=null,o.fullExtent=null,o.heightModelInfo=null,o.minScale=0,o.maxScale=0,o.version={major:Number.NaN,minor:Number.NaN,versionString:""},o.copyright=null,o.sublayerTitleMode="item-title",o.title=null,o.layerId=null,o.indexInfo=null,o._debouncedSaveOperations=s.debounce(function(){var r=t._asyncToGenerator((function*(t,r,i){switch(t){case e.SaveOperationType.SAVE:return o._save(r);case e.SaveOperationType.SAVE_AS:return o._saveAs(i,r)}}));return function(e,t,o){return r.apply(this,arguments)}}()),o}t._inheritsLoose(n,r);var p=n.prototype;return p.readSpatialReference=function(e,t){return this._readSpatialReference(t)},p._readSpatialReference=function(e){if(null!=e.spatialReference)return S.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,o=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=o?new S(o):null}},p.readFullExtent=function(e,t,r){if(null!=e&&"object"==typeof e){const o=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return m.fromJSON(o,r)}const o=t.store,i=this._readSpatialReference(t);return null==i||null==o||null==o.extent||!Array.isArray(o.extent)||o.extent.some((e=>e<A))?null:new m({xmin:o.extent[0],ymin:o.extent[1],xmax:o.extent[2],ymax:o.extent[3],spatialReference:i})},p.parseVersionString=function(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},r=e.split(".");return r.length>=2&&(t.major=parseInt(r[0],10),t.minor=parseInt(r[1],10)),t},p.readVersion=function(e,t){const r=t.store,o=null!=r.version?r.version.toString():"";return this.parseVersionString(o)},p.readTitlePortalItem=function(e){return"item-title"!==this.sublayerTitleMode?void 0:e},p.readTitleService=function(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return _.titleFromUrlAndName(this.url,t.name);let o=t.name;if(!o&&this.url){const e=_.parse(this.url);a.isSome(e)&&(o=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(o=r+" - "+o),_.cleanTitle(o)},p.writeUrl=function(e,t,r,o){_.writeUrlWithLayerId(this,e,"layers",t,o)},p._fetchIndexAndUpdateExtent=function(){var e=t._asyncToGenerator((function*(e,t){this.indexInfo=I.fetchIndexInfo(this.parsedUrl.path,this.rootNode,e,this.apiKey,R,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(yield this.indexInfo)}));function r(t,r){return e.apply(this,arguments)}return r}(),p._updateExtent=function(e){if("page"===e?.type){const t=e.rootIndex%e.pageSize,r=e.rootPage?.nodes?.[t];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new i("sceneservice:invalid-node-page","Invalid node page.");if(r.obb.center[0]<A||null==this.fullExtent||this.fullExtent.hasZ)return;const o=r.obb.halfSize,n=r.obb.center[2],a=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);this.fullExtent.zmin=n-a,this.fullExtent.zmax=n+a}else if("node"===e?.type){const t=e.rootNode?.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<A)return;const r=t[2],o=t[3],{fullExtent:i}=this;i&&(i.zmin=r-o,i.zmax=r+o)}},p._fetchService=function(){var e=t._asyncToGenerator((function*(e){if(null==this.url)throw new i("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=yield this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}));function r(t){return e.apply(this,arguments)}return r}(),p._fetchFirstLayerId=function(){var e=t._asyncToGenerator((function*(e){const t=yield o(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}));function r(t){return e.apply(this,arguments)}return r}(),p._fetchServiceLayer=function(){var e=t._asyncToGenerator((function*(e){const t=yield o(this.parsedUrl?.path??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let r=!1;if(t.data.layerType&&"Voxel"===t.data.layerType&&(r=!0),r)return this._fetchVoxelServiceLayer();const i=t.data;this.read(i,this._getServiceContext()),this.validateLayer(i)}));function r(t){return e.apply(this,arguments)}return r}(),p._fetchVoxelServiceLayer=function(){var e=t._asyncToGenerator((function*(e){const t=(yield o(this.parsedUrl?.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}));function r(t){return e.apply(this,arguments)}return r}(),p._getServiceContext=function(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}},p._ensureLoadBeforeSave=function(){var e=t._asyncToGenerator((function*(){yield this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&(yield this.beforeSave())}));function r(){return e.apply(this,arguments)}return r}(),p.validateLayer=function(e){},p._updateTypeKeywords=function(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const o=t.getTypeKeywords();for(const i of o)e.typeKeywords.push(i);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),r===N.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))},p._saveAs=function(){var e=t._asyncToGenerator((function*(e,t){const r={...L,...t};let o=b.from(e);o||(R.error("_saveAs(): requires a portal item parameter"),yield Promise.reject(new i("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),o.id&&(o=o.clone(),o.id=null);const n=o.portal||w.getDefault();yield this._ensureLoadBeforeSave(),o.type=U,o.portal=n;const a={origin:"portal-item",url:null,messages:[],portal:n,portalItem:o,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},s={layers:[this.write({},a)]};return yield Promise.all(a.resources.pendingOperations??[]),yield this._validateAgainstJSONSchema(s,a,r),o.url=this.url,o.title||(o.title=this.title),this._updateTypeKeywords(o,r,N.newItem),yield n.signIn(),yield n.user?.addItem({item:o,folder:r&&r.folder,data:s}),yield T.saveResources(this.resourceReferences,a,null),this.portalItem=o,f.updateOrigins(a),a.portalItem=o,o}));function r(t,r){return e.apply(this,arguments)}return r}(),p._save=function(){var e=t._asyncToGenerator((function*(e){const t={...L,...e};if(!this.portalItem)throw R.error("_save(): requires the .portalItem property to be set"),new i("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==U)throw R.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+U),new i("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${U}"`);yield this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&l.urlToObject(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||w.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write({},r)]};return yield Promise.all(r.resources.pendingOperations??[]),yield this._validateAgainstJSONSchema(o,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,N.existingItem),yield this.portalItem.update({data:o}),yield T.saveResources(this.resourceReferences,r,null),f.updateOrigins(r),this.portalItem}));function r(t){return e.apply(this,arguments)}return r}(),p._validateAgainstJSONSchema=function(){var e=t._asyncToGenerator((function*(e,t,r){let o=t.messages?.filter((e=>"error"===e.type)).map((e=>new i(e.name,e.message,e.details)))??[];r?.validationOptions?.ignoreUnsupported&&(o=o.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name)));const n=r?.validationOptions,a=n?.enabled,s=x.getLoader();if(a&&s){const t=(yield s()).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(R.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===n.failPolicy){const e=t.map((e=>new i("sceneservice:schema-validation",e))).concat(o);throw new i("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(o.length>0)throw new i("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:o})}));function r(t,r,o){return e.apply(this,arguments)}return r}(),t._createClass(n,[{key:"url",set:function(e){const t=_.sanitizeUrlWithLayerId({layer:this,url:e,nonStandardUrlAllowed:!1,logger:R});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}},{key:"parsedUrl",get:function(){const e=this._get("url"),t=l.urlToObject(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}}]),n}(n);return r.__decorate([p.property(g.id)],c.prototype,"id",void 0),r.__decorate([p.property({type:S})],c.prototype,"spatialReference",void 0),r.__decorate([d.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],c.prototype,"readSpatialReference",null),r.__decorate([p.property({type:m})],c.prototype,"fullExtent",void 0),r.__decorate([d.reader("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],c.prototype,"readFullExtent",null),r.__decorate([p.property({readOnly:!0,type:v})],c.prototype,"heightModelInfo",void 0),r.__decorate([p.property({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],c.prototype,"minScale",void 0),r.__decorate([p.property({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],c.prototype,"maxScale",void 0),r.__decorate([p.property({readOnly:!0})],c.prototype,"version",void 0),r.__decorate([d.reader("version",["store.version"])],c.prototype,"readVersion",null),r.__decorate([p.property({type:String,json:{read:{source:"copyrightText"}}})],c.prototype,"copyright",void 0),r.__decorate([p.property({type:String,json:{read:!1}})],c.prototype,"sublayerTitleMode",void 0),r.__decorate([p.property({type:String})],c.prototype,"title",void 0),r.__decorate([d.reader("portal-item","title")],c.prototype,"readTitlePortalItem",null),r.__decorate([d.reader("service","title",["name"])],c.prototype,"readTitleService",null),r.__decorate([p.property({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],c.prototype,"layerId",void 0),r.__decorate([p.property(g.url)],c.prototype,"url",null),r.__decorate([h.writer("url")],c.prototype,"writeUrl",null),r.__decorate([p.property()],c.prototype,"parsedUrl",null),r.__decorate([p.property({readOnly:!0})],c.prototype,"store",void 0),r.__decorate([p.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],c.prototype,"rootNode",void 0),c=r.__decorate([y.subclass(O)],c),c},A=-1e38;var N;!function(e){e[e.existingItem=0]="existingItem",e[e.newItem=1]="newItem"}(N||(N={}));const U="Scene Service",L={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var j;e.SaveOperationType=void 0,(j=e.SaveOperationType||(e.SaveOperationType={}))[j.SAVE=0]="SAVE",j[j.SAVE_AS=1]="SAVE_AS",e.SCENE_SERVICE_ITEM_TYPE=U,e.SceneService=E,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
