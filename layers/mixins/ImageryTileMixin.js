/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../rasterRenderers","../../request","../../core/Error","../../core/Logger","../../core/maybe","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/subclass","../../geometry/support/spatialReferenceUtils","../support/arcgisLayerUrl","../support/commonProperties","../support/DimensionalDefinition","../support/MultidimensionalSubset","../support/RasterFunction","../support/RasterJobHandler","../support/TileInfo","../support/rasterDatasets/FunctionRaster","../support/rasterDatasets/multidimensionalUtils","../support/rasterFunctions/rasterFunctionHelper","../support/rasterFunctions/vectorFieldUtils","../../renderers/support/rasterRendererHelper","../../renderers/support/RasterSymbolizer","../../views/2d/engine/flow/dataUtils","../../geometry/SpatialReference"],(function(e,t,r,n,i,s,o,a,l,u,c,d,f,h,p,m,y,_,b,g,S,I,F,J,R,v,D,x,T){"use strict";const N=a.getLogger("esri.layers.mixins.ImageryTileMixin"),H=e=>{let n=function(e){function r(...t){var r;return(r=e.call(this,...t)||this)._isConstructedFromFunctionRaster=!1,r._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},r.bandIds=null,r.copyright=null,r.interpolation="nearest",r.multidimensionalSubset=null,r.raster=null,r.rasterFunction=null,r.rasterInfo=null,r.sourceJSON=null,r.spatialReference=null,r.symbolizer=null,r._isConstructedFromFunctionRaster="Function"===t[0]?.raster?.datasetFormat,r}t._inheritsLoose(r,e);var n=r.prototype;return n.convertVectorFieldData=function(){var e=t._asyncToGenerator((function*(e,t){if(l.isNone(e)||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:n},t):R.convertVectorFieldData(e,n)}));function r(t,r){return e.apply(this,arguments)}return r}(),n.createFlowMesh=function(){var e=t._asyncToGenerator((function*(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):x.createFlowMesh(e.meshType,e.simulationSettings,e.flowData,l.isSome(t.signal)?t.signal:(new AbortController).signal)}));function r(t,r){return e.apply(this,arguments)}return r}(),n.normalizeRasterFetchOptions=function(e){const{multidimensionalInfo:t}=this.rasterInfo??{};if(l.isNone(t))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!l.isNone(r)&&r.length||(r=F.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const n=e.timeExtent||this.timeExtent;if(l.isSome(r)&&l.isSome(n)&&(l.isSome(n.start)||l.isSome(n.end))){r=r.map((e=>e.clone()));const i=t.variables.find((({name:e})=>e===r[0].variableName))?.dimensions?.find((({name:e})=>"StdTime"===e)),s=r.find((({dimensionName:e})=>"StdTime"===e));if(!i||!s)return{...e,multidimensionalDefinition:null};const{start:o,end:a}=n,u=l.isNone(o)?null:o.getTime(),c=l.isNone(a)?null:a.getTime(),d=u??c,f=c??u;if(l.isSome(i.values)){const e=i.values.filter((e=>{if(Array.isArray(e)){if(d===f)return e[0]<=d&&e[1]>=d;const t=e[0]<=d&&e[1]>d||e[0]<f&&e[1]>=f,r=e[0]>=d&&e[1]<=f||e[0]<d&&e[1]>f;return t||r}return d===f?e===d:e>=d&&e<=f}));if(e.length){const t=e.sort(((e,t)=>{if(d===f)return(e[0]??e)-(t[0]??t);return Math.abs((e[1]??e)-f)-Math.abs((t[1]??t)-f)}))[0];s.values=[t]}else r=null}else if(i.hasRegularIntervals&&i.extent){const[e,t]=i.extent;d>t||f<e?r=null:s.values=d===f?[d]:[Math.max(e,d),Math.min(t,f)]}}return l.isSome(r)&&F.hasExcludedVariableOrDimension(r,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:r}},n.updateRasterFunction=function(){var e=t._asyncToGenerator((function*(){if("imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){const e=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&e&&this._set("rasterFunction",b.fromJSON(e)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let e,t=this.raster,r=!1;"Function"===t.datasetFormat?(e=t.primaryRasters.rasters,t=e[0],r=!0):e=[t];const{rasterFunction:n}=this;if(n){const r={raster:t};e.length>1&&e.forEach((e=>r[e.url]=e));const i=J.create(n.rasterFunctionDefinition??n.toJSON(),r),s=new I({rasterFunction:i});s.rasterJobHandler=this._rasterJobHandler.instance,yield s.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=s}else this.raster=t,this._cachedRasterFunctionJson=null;if(this._cachedRendererJson=null,!r&&!n)return;const{bandIds:i}=this,{bandCount:s}=this.raster.rasterInfo,o=i?.length?i.some((e=>e>=s)):s>=3;i&&(o||"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")}));function r(){return e.apply(this,arguments)}return r}(),n.updateRenderer=function(){var e=t._asyncToGenerator((function*(){const{loaded:e,symbolizer:t}=this;if(!e||!t)return;const{rasterInfo:r}=this.raster,n=F.getDefaultVariablInfo(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,i=v.normalizeRendererJSON({...this.renderer.toJSON(),variableName:n});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(i))return;const s=this._rasterJobHandler.instance;s&&(t.rasterInfo=v.getVariableRasterInfo(r,n),t.rendererJSON=i,t.bind(),yield s.updateSymbolizer(t),this._cachedRendererJson=i)}));function r(){return e.apply(this,arguments)}return r}(),n.applyRenderer=function(){var e=t._asyncToGenerator((function*(e,t){const r=e&&e.pixelBlock;if(!(l.isSome(r)&&r.pixels&&r.pixels.length>0))return null;let n;yield this.updateRenderer();const i=this._rasterJobHandler.instance,s=this.bandIds??[];return n=i?yield i.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),n}));function r(t,r){return e.apply(this,arguments)}return r}(),n.getTileUrl=function(e,t,r){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""},n.getCompatibleTileInfo=function(e,t,r=!1){if(!this.loaded||l.isNone(t))return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const n=h.getInfo(e);return S.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})},n.getCompatibleFullExtent=function(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null},n.fetchTile=function(){var e=t._asyncToGenerator((function*(e,t,r,n={}){if(a(this),n.requestAsImageElement){const i=this.getTileUrl(e,t,r);return s(i,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}const{rasterInfo:i}=this;if(l.isSome(i.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),l.isNone(n.multidimensionalDefinition))){const s=n.tileInfo||i.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,s),pixelBlock:null}}return yield this._initJobHandler(),yield this.updateRasterFunction(),"raster-shaded-relief"===this.renderer.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,n)}));function r(t,r,n){return e.apply(this,arguments)}return r}(),n.fetchPixels=function(){var e=t._asyncToGenerator((function*(e,t,r,n={}){return l.isSome(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),l.isNone(n.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(yield this._initJobHandler(),yield this.updateRasterFunction(),this.raster.fetchPixels(e,t,r,n))}));function r(t,r,n){return e.apply(this,arguments)}return r}(),n.identify=function(){var e=t._asyncToGenerator((function*(e,t={}){const{raster:r,rasterInfo:n}=this;if(l.isSome(n.multidimensionalInfo)){if(!(n.hasMultidimensionalTranspose&&!!(F.isMultiSliceOrRangeDefinition(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&(t=this.normalizeRasterFetchOptions(t),l.isNone(t.multidimensionalDefinition)))return{location:e,value:null}}const i=this.multidimensionalSubset?.areaOfInterest;if(i&&!i.contains(e))throw new o("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return r.identify(e,t)}));function r(t){return e.apply(this,arguments)}return r}(),n.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},n.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},n.hasStandardTime=function(){const e=this.rasterInfo?.multidimensionalInfo;if(l.isNone(e)||"standard-time"!==this.rasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,r=t?.[0]?.variableName;return e.variables.some((e=>e.name===r&&(!t?.[0].dimensionName||e.dimensions.some((e=>"StdTime"===e.name)))))},n.getStandardTimeValue=function(e){return new Date(24*(e-25569)*3600*1e3).toString()},n.getMultidimensionalSubsetVariables=function(e){const t=e??this.rasterInfo?.multidimensionalInfo;return F.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,t)},n._configDefaultSettings=function(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=F.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()},n._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new g;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{a(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise},n._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)},n._configDefaultInterpolation=function(){if(null==this.interpolation){a(this);const{raster:e}=this,t=v.getDefaultInterpolation(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t)}},n._configDefaultRenderer=function(e="no"){a(this);const{rasterInfo:t}=this.raster;!this.bandIds&&t.bandCount>1&&(this.bandIds=v.getDefaultBandCombination(t));const r=F.getDefaultVariablInfo(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===e){const e=v.createDefaultRenderer(t,{bandIds:this.bandIds,variableName:r});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===e.type&&((t.statistics?.[0].max??0)>1e24||(t.statistics?.[0].min??0)<-1e24)&&(e.dynamicRangeAdjustment=!0,e.statistics=null,"none"===e.stretchType&&(e.stretchType="min-max")),this.renderer=e}const n=v.normalizeRendererJSON({...this.renderer.toJSON(),variableName:r}),i=v.getVariableRasterInfo(t,r);this.symbolizer?(this.symbolizer.rendererJSON=n,this.symbolizer.rasterInfo=i):this.symbolizer=new D({rendererJSON:n,rasterInfo:i});const s=this.symbolizer.bind();if(s.success){if("auto"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(l.isSome(e))if("raster-colormap"!==t.type)this._configDefaultRenderer("override");else{const e=v.createDefaultRenderer(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer("override")}else if("raster-stretch"===t.type){const e=this.bandIds?.length,r=t.statistics?.length;!t.dynamicRangeAdjustment&&r&&e&&r!==e&&this._configDefaultRenderer("override")}}}else N.warn("imagery-tile-mixin",s.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override")},t._createClass(r,[{key:"fullExtent",get:function(){return this.rasterInfo?.extent}},{key:"multidimensionalDefinition",set:function(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}},{key:"tileInfo",get:function(){return this.rasterInfo?.storageInfo.tileInfo}},{key:"url",set:function(e){this._set("url",p.sanitizeUrl(e,N))}},{key:"renderer",set:function(e){this._set("renderer",e),this.updateRenderer()}}]),r}(e);function a(e){if(!e.raster||!e.rasterInfo)throw new o("imagery-tile","no raster")}return r.__decorate([u.property()],n.prototype,"_cachedRendererJson",void 0),r.__decorate([u.property()],n.prototype,"_cachedRasterFunctionJson",void 0),r.__decorate([u.property()],n.prototype,"_compatibleFullExtent",void 0),r.__decorate([u.property()],n.prototype,"_isConstructedFromFunctionRaster",void 0),r.__decorate([u.property()],n.prototype,"_rasterJobHandler",void 0),r.__decorate([u.property()],n.prototype,"bandIds",void 0),r.__decorate([u.property({json:{origins:{service:{read:{source:"copyrightText"}}}}})],n.prototype,"copyright",void 0),r.__decorate([u.property({json:{read:!1}})],n.prototype,"fullExtent",null),r.__decorate([u.property()],n.prototype,"interpolation",void 0),r.__decorate([u.property()],n.prototype,"ioConfig",void 0),r.__decorate([u.property({type:[y],json:{write:!0}})],n.prototype,"multidimensionalDefinition",null),r.__decorate([u.property({type:_,json:{write:!0}})],n.prototype,"multidimensionalSubset",void 0),r.__decorate([u.property()],n.prototype,"raster",void 0),r.__decorate([u.property({type:b})],n.prototype,"rasterFunction",void 0),r.__decorate([u.property()],n.prototype,"rasterInfo",void 0),r.__decorate([u.property()],n.prototype,"sourceJSON",void 0),r.__decorate([u.property({readOnly:!0,type:T,json:{read:!1}})],n.prototype,"spatialReference",void 0),r.__decorate([u.property({json:{read:!1}})],n.prototype,"tileInfo",null),r.__decorate([u.property(m.url)],n.prototype,"url",null),r.__decorate([u.property({types:i.rasterRendererTypes})],n.prototype,"renderer",null),r.__decorate([u.property()],n.prototype,"symbolizer",void 0),n=r.__decorate([f.subclass("esri.layers.ImageryTileMixin")],n),n};e.ImageryTileMixin=H,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
