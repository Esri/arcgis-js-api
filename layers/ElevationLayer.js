/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/maybe","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/Error","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../core/promiseUtils","../request","./Layer","../core/MultiOriginJSONSupport","../geometry/HeightModelInfo","./support/commonProperties","./mixins/OperationalLayer","./mixins/ArcGISService","./mixins/PortalLayer","./mixins/ArcGISCachedService","./support/LercDecoder"],(function(e,r,t,o,i,a,n,s,l,c,p,u,d,y,h,v,m,g,f,S,_,w,I,b,T){"use strict";const x=a.getLogger("esri.layers.ElevationLayer");let L=function(t){function o(...e){var r;return(r=t.call(this,...e)||this).copyright=null,r.heightModelInfo=null,r.path=null,r.opacity=1,r.operationalLayerType="ArcGISTiledElevationServiceLayer",r.sourceJSON=null,r.type="elevation",r.url=null,r.version=null,r._lercDecoder=T.acquireDecoder(),r}r._inheritsLoose(o,t);var a=o.prototype;return a.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},a.destroy=function(){T.releaseDecoder(this._lercDecoder),this._lercDecoder=null},a.readVersion=function(e,r){let t=r.currentVersion;return t||(t=9.3),t},a.load=function(e){const r=i.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let r=0;r<e.typeKeywords.length;r++)if("elevation 3d layer"===e.typeKeywords[r].toLowerCase())return!0;throw new p("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).then((()=>this._fetchImageService(r)),(()=>this._fetchImageService(r)))),h.resolve(this)},a.fetchTile=function(e,r,t,o){o=o||{signal:null};const a=i.isSome(o.signal)?o.signal:o.signal=h.createAbortController().signal,n={responseType:"array-buffer",signal:a},s={noDataValue:o.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,r,t,o))).then((()=>v(this.getTileUrl(e,r,t),n))).then((e=>this._lercDecoder.decode(e.data,s,a))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))},a.getTileUrl=function(e,r,t){const o=!this.tilemapCache&&this.supportsBlankTile,i=u.objectToQuery({...this.parsedUrl.query,blankTile:!o&&null});return`${this.parsedUrl.path}/tile/${e}/${r}/${t}${i?"?"+i:""}`},a.queryElevation=async function(r,t){const{ElevationQuery:o}=await new Promise((function(r,t){e(["./support/ElevationQuery"],r,t)}));h.throwIfAborted(t);return(new o).query(this,r,t)},a.createElevationSampler=async function(r,t){const{ElevationQuery:o}=await new Promise((function(r,t){e(["./support/ElevationQuery"],r,t)}));h.throwIfAborted(t);return(new o).createSampler(this,r,t)},a._fetchTileAvailability=function(e,r,t,o){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,r,t,o):h.resolve("unknown")},a._fetchImageService=async function(e){if(this.sourceJSON)return this.sourceJSON;const r={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},t=await v(this.parsedUrl.path,r);t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})},r._createClass(o,[{key:"minScale",set:function(e){this.constructed&&x.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)},get:function(){}},{key:"maxScale",set:function(e){this.constructed&&x.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)},get:function(){}}]),o}(b.ArcGISCachedService(w.ArcGISService(_.OperationalLayer(I.PortalLayer(g.MultiOriginJSONMixin(m))))));return t.__decorate([s.property({json:{read:{source:"copyrightText"}}})],L.prototype,"copyright",void 0),t.__decorate([s.property({readOnly:!0,type:f})],L.prototype,"heightModelInfo",void 0),t.__decorate([s.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],L.prototype,"path",void 0),t.__decorate([s.property({type:["show","hide"]})],L.prototype,"listMode",void 0),t.__decorate([s.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],L.prototype,"minScale",null),t.__decorate([s.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],L.prototype,"maxScale",null),t.__decorate([s.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],L.prototype,"opacity",void 0),t.__decorate([s.property({type:["ArcGISTiledElevationServiceLayer"]})],L.prototype,"operationalLayerType",void 0),t.__decorate([s.property()],L.prototype,"sourceJSON",void 0),t.__decorate([s.property({json:{read:!1},value:"elevation",readOnly:!0})],L.prototype,"type",void 0),t.__decorate([s.property(S.url)],L.prototype,"url",void 0),t.__decorate([s.property()],L.prototype,"version",void 0),t.__decorate([l.reader("version",["currentVersion"])],L.prototype,"readVersion",null),L=t.__decorate([c.subclass("esri.layers.ElevationLayer")],L),L}));
