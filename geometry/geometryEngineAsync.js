/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","./Point","./support/jsonUtils","../geometry","../core/workers/workers"],(function(n,e,t,r,i){"use strict";function a(n){var e;return Array.isArray(n)?null==(e=n[0])?void 0:e.spatialReference:null==n?void 0:n.spatialReference}function o(n){return n?Array.isArray(n)?n.map(o):n.toJSON?n.toJSON():n:n}function c(n){return Array.isArray(n)?n.map((n=>t.fromJSON(n))):t.fromJSON(n)}function u(n,e){let t;return Array.isArray(n)?t=n:(t=[],t.push(n),null!=e&&t.push(e)),t}let s;async function f(){return s||(s=i.open("geometryEngineWorker",{strategy:"distributed"})),s}async function l(n,e){return(await f()).invoke("executeGEOperation",{operation:n,parameters:o(e)})}function p(n){return l("extendedSpatialReferenceInfo",[n])}async function y(n,e){return c(await l("clip",[a(n),n,e]))}async function d(n,e){return c(await l("cut",[a(n),n,e]))}function w(n,e){return l("contains",[a(n),n,e])}function m(n,e){return l("crosses",[a(n),n,e])}function g(n,e,t){return l("distance",[a(n),n,e,t])}function A(n,e){return l("equals",[a(n),n,e])}function x(n,e){return l("intersects",[a(n),n,e])}function S(n,e){return l("touches",[a(n),n,e])}function h(n,e){return l("within",[a(n),n,e])}function v(n,e){return l("disjoint",[a(n),n,e])}function O(n,e){return l("overlaps",[a(n),n,e])}function J(n,e,t){return l("relate",[a(n),n,e,t])}function N(n){return l("isSimple",[a(n),n])}async function R(n){return c(await l("simplify",[a(n),n]))}async function E(n,e=!1){return c(await l("convexHull",[a(n),n,e]))}async function V(n,e){return c(await l("difference",[a(n),n,e]))}async function I(n,e){return c(await l("symmetricDifference",[a(n),n,e]))}async function b(n,e){return c(await l("intersect",[a(n),n,e]))}async function j(n,e=null){const t=u(n,e);return c(await l("union",[a(t),t]))}async function k(n,e,t,r,i,o){return c(await l("offset",[a(n),n,e,t,r,i,o]))}async function z(n,e,t,r=!1){const i=[a(n),n,e,t,r];return c(await l("buffer",i))}async function D(n,e,t,r,i,o){const u=[a(n),n,e,t,r,i,o];return c(await l("geodesicBuffer",u))}async function H(n,t,r=!0){const i=await l("nearestCoordinate",[a(n),n,t,r]);return{...i,coordinate:e.fromJSON(i.coordinate)}}async function L(n,t){const r=await l("nearestVertex",[a(n),n,t]);return{...r,coordinate:e.fromJSON(r.coordinate)}}async function q(n,t,r,i){return(await l("nearestVertices",[a(n),n,t,r,i])).map((n=>({...n,coordinate:e.fromJSON(n.coordinate)})))}function B(n){return"xmin"in n?n.center:"x"in n?n:n.extent.center}async function C(n,e,t){var r;if(null==n)throw new Error("Illegal Argument Exception");const i=n.spatialReference;t=null!=(r=t)?r:B(n);const a=n.constructor.fromJSON(await l("rotate",[i,n,e,t]));return a.spatialReference=i,a}async function P(n,e){var t;if(null==n)throw new Error("Illegal Argument Exception");const r=n.spatialReference;e=null!=(t=e)?t:B(n);const i=n.constructor.fromJSON(await l("flipHorizontal",[r,n,e]));return i.spatialReference=r,i}async function _(n,e){var t;if(null==n)throw new Error("Illegal Argument Exception");const r=n.spatialReference;e=null!=(t=e)?t:B(n);const i=n.constructor.fromJSON(await l("flipVertical",[r,n,e]));return i.spatialReference=r,i}async function G(n,e,t,r){return c(await l("generalize",[a(n),n,e,t,r]))}async function M(n,e,t){return c(await l("densify",[a(n),n,e,t]))}async function U(n,e,t,r=0){return c(await l("geodesicDensify",[a(n),n,e,t,r]))}function W(n,e){return l("planarArea",[a(n),n,e])}function F(n,e){return l("planarLength",[a(n),n,e])}function K(n,e,t){return l("geodesicArea",[a(n),n,e,t])}function Q(n,e,t){return l("geodesicLength",[a(n),n,e,t])}n.buffer=z,n.clip=y,n.contains=w,n.convexHull=E,n.crosses=m,n.cut=d,n.densify=M,n.difference=V,n.disjoint=v,n.distance=g,n.equals=A,n.extendedSpatialReferenceInfo=p,n.flipHorizontal=P,n.flipVertical=_,n.generalize=G,n.geodesicArea=K,n.geodesicBuffer=D,n.geodesicDensify=U,n.geodesicLength=Q,n.intersect=b,n.intersects=x,n.isSimple=N,n.nearestCoordinate=H,n.nearestVertex=L,n.nearestVertices=q,n.offset=k,n.overlaps=O,n.planarArea=W,n.planarLength=F,n.relate=J,n.rotate=C,n.simplify=R,n.symmetricDifference=I,n.touches=S,n.union=j,n.within=h,Object.defineProperty(n,"__esModule",{value:!0})}));
