/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../config","../../core/Error","../../core/Logger","../../core/maybe","../Polygon","../Polyline","./normalizeUtilsCommon","./spatialReferenceUtils","./webMercatorUtils","../../rest/geometryService/cut","../../rest/geometryService/simplify"],(function(e,t,n,o,s,r,i,l,c,f,a,u,p){"use strict";const h=s.getLogger("esri.geometry.support.normalizeUtils");function g(e){return"polygon"===e.type}function m(e){return"polygon"===e[0].type}function y(e){return"polyline"===e[0].type}function x(e){const t=[];let n=0,o=0;for(let s=0;s<e.length;s++){const r=e[s];let i=null;for(let e=0;e<r.length;e++)i=r[e],t.push(i),0===e?(n=i[0],o=n):(n=Math.min(n,i[0]),o=Math.max(o,i[0]));i&&t.push([(n+o)/2,0])}return t}function d(e,t){if(!(e instanceof l||e instanceof i)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw h.error(e),new o(e)}const n=c.getGeometryParts(e),s=[];for(const o of n){const e=[];s.push(e),e.push([o[0][0],o[0][1]]);for(let n=0;n<o.length-1;n++){const s=o[n][0],r=o[n][1],i=o[n+1][0],l=o[n+1][1],c=Math.sqrt((i-s)*(i-s)+(l-r)*(l-r)),f=(l-r)/c,a=(i-s)/c,u=c/t;if(u>1){for(let l=1;l<=u-1;l++){const n=l*t,o=a*n+s,i=f*n+r;e.push([o,i])}const n=(c+Math.floor(u-1)*t)/2,o=a*n+s,i=f*n+r;e.push([o,i])}e.push([i,l])}}return g(e)?new i({rings:s,spatialReference:e.spatialReference}):new l({paths:s,spatialReference:e.spatialReference})}function M(e,t,n){if(t){const t=d(e,1e6);e=a.webMercatorToGeographic(t,!0)}return n&&(e=c.updatePolyGeometry(e,n)),e}function P(e,t,n){if(Array.isArray(e)){const o=e[0];if(o>t){const n=c.offsetMagnitude(o,t);e[0]=o+n*(-2*t)}else if(o<n){const t=c.offsetMagnitude(o,n);e[0]=o+t*(-2*n)}}else{const o=e.x;if(o>t){const n=c.offsetMagnitude(o,t);e=e.clone().offset(n*(-2*t),0)}else if(o<n){const t=c.offsetMagnitude(o,n);e=e.clone().offset(t*(-2*n),0)}}return e}function b(e,t){let n=-1;for(let o=0;o<t.cutIndexes.length;o++){const s=t.cutIndexes[o],r=t.geometries[o],i=c.getGeometryParts(r);for(let e=0;e<i.length;e++){const t=i[e];t.some((n=>{if(n[0]<180)return!0;{let n=0;for(let e=0;e<t.length;e++){const o=t[e][0];n=o>n?o:n}n=Number(n.toFixed(9));const o=-360*c.offsetMagnitude(n,180);for(let s=0;s<t.length;s++){const t=r.getPoint(e,s);r.setPoint(e,s,t.clone().offset(o,0))}return!0}}))}if(s===n){if(m(e))for(const t of c.getGeometryParts(r))e[s]=e[s].addRing(t);else if(y(e))for(const t of c.getGeometryParts(r))e[s]=e[s].addPath(t)}else n=s,e[s]=r}return e}function w(e,t,n){return R.apply(this,arguments)}function R(){return(R=t._asyncToGenerator((function*(e,t,o){if(!Array.isArray(e))return w([e],t);t&&"string"!=typeof t&&h.warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const s="string"==typeof t?t:t?.url??n.geometryServiceUrl;let g,m,y,x,d,R,G,z,T=0;const v=[],L=[];for(const n of e)if(r.isNone(n))L.push(n);else if(g||(g=n.spatialReference,m=f.getInfo(g),y=g.isWebMercator,R=y?102100:4326,x=c.cutParams[R].maxX,d=c.cutParams[R].minX,G=c.cutParams[R].plus180Line,z=c.cutParams[R].minus180Line),m)if("mesh"===n.type)L.push(n);else if("point"===n.type)L.push(P(n.clone(),x,d));else if("multipoint"===n.type){const e=n.clone();e.points=e.points.map((e=>P(e,x,d))),L.push(e)}else if("extent"===n.type){const e=n.clone()._normalize(!1,!1,m);L.push(e.rings?new i(e):e)}else if(n.extent){const e=n.extent,t=c.offsetMagnitude(e.xmin,d)*(2*x);let o=0===t?n.clone():c.updatePolyGeometry(n.clone(),t);e.offset(t,0),e.intersects(G)&&e.xmax!==x?(T=e.xmax>T?e.xmax:T,o=M(o,y),v.push(o),L.push("cut")):e.intersects(z)&&e.xmin!==d?(T=e.xmax*(2*x)>T?e.xmax*(2*x):T,o=M(o,y,360),v.push(o),L.push("cut")):L.push(o)}else L.push(n.clone());else L.push(n);let S=c.offsetMagnitude(T,x),I=-90;const U=S,A=new l;for(;S>0;){const e=360*S-180;A.addPath([[e,I],[e,-1*I]]),I*=-1,S--}if(v.length>0&&U>0){const t=b(v,yield u.cut(s,v,A,o)),n=[],i=[];for(let o=0;o<L.length;o++){const s=L[o];if("cut"!==s)i.push(s);else{const s=t.shift(),l=e[o];r.isSome(l)&&"polygon"===l.type&&l.rings&&l.rings.length>1&&s.rings.length>=l.rings.length?(n.push(s),i.push("simplify")):i.push(y?a.geographicToWebMercator(s):s)}}if(!n.length)return i;const l=yield p.simplify(s,n,o),c=[];for(let e=0;e<i.length;e++){const t=i[e];"simplify"!==t?c.push(t):c.push(y?a.geographicToWebMercator(l.shift()):l.shift())}return c}const W=[];for(let n=0;n<L.length;n++){const e=L[n];if("cut"!==e)W.push(e);else{const e=v.shift();W.push(!0===y?a.geographicToWebMercator(e):e)}}return W}))).apply(this,arguments)}function G(e){if(!e)return null;const t=e.extent;if(!t)return null;const n=e.spatialReference&&f.getInfo(e.spatialReference);if(!n)return t;const[o,s]=n.valid,r=2*s,{width:i}=t;let l,{xmin:c,xmax:a}=t;if([c,a]=[a,c],"extent"===e.type||0===i||i<=s||i>r||c<o||a>s)return t;switch(e.type){case"polygon":if(!(e.rings.length>1))return t;l=x(e.rings);break;case"polyline":if(!(e.paths.length>1))return t;l=x(e.paths);break;case"multipoint":l=e.points}const u=t.clone();for(let f=0;f<l.length;f++){let e=l[f][0];e<0?(e+=s,a=Math.max(e,a)):(e-=s,c=Math.min(e,c))}return u.xmin=c,u.xmax=a,u.width<i?(u.xmin-=s,u.xmax-=s,u):t}function z(e,t){const n=f.getInfo(t);if(n){const[t,o]=n.valid,s=o-t;if(e<t)for(;e<t;)e+=s;if(e>o)for(;e>o;)e-=s}return e}e.getDenormalizedExtent=G,e.normalizeCentralMeridian=w,e.normalizeMapX=z,e.straightLineDensify=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
