/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{c as t}from"../../chunks/mat4.js";import{s as n,e,c as o,n as r,f as u}from"../../chunks/vec3.js";import{c as i}from"../../chunks/vec3f64.js";import{getSphericalPCPF as a,getReferenceEllipsoid as s}from"../projectionEllipsoid.js";import c from"../SpatialReference.js";import{Axis as l}from"./Axis.js";import{f,b as p}from"../../chunks/boundedPlane.js";import{f as v,s as m}from"../../chunks/sphere.js";function h(t){const{value:n,operations:e}=t;return{operations:e,value:e.create(n)}}function j(t,n,e){return t.operations.setExtent(t.value,n,e.value),e}function d(t){return{operations:t,value:t.create()}}function A(t,n,e=d(t)){return e.operations=t,t.copy(n,e.value),e}function k(t){return A(m,v(0,0,0,s(t).radius))}const x=2**50;function y(){return A(p,f([0,0,0],[x,0,0],[0,x,0]))}function P(t,n){return B.operations=t,B.value=n,B}function R(t,n,e){return t.operations.axisAt(t.value,n,l.Z,e)}function S(t,n,e,o){return t.operations.axisAt(t.value,n,e,o)}function b(t,n,e){return t.operations.intersectRay(t.value,n,e)}function C(t,n){return t.operations.intersectRay(t.value,n,null)}function E(t,n,e){return t.operations.closestPoint(t.value,n,e)}function g(t,n,e){return t.operations.intersectRayClosestSilhouette(t.value,n,e)}function G(t,n,e){return t.operations.closestPointOnSilhouette(t.value,n,e)}function O(t,n){return t.operations.distanceToSilhouette(t.value,n)}function T(t,n){return t.operations.altitudeAt(t.value,n)}function Z(t,n,e,o){return t.operations.setAltitudeAt(t.value,n,e,o)}function q(e,o,r,u){return o!==u&&t(u,o),n(z,u[12],u[13],u[14]),Z(e,z,r,z),u[12]=z[0],u[13]=z[1],u[14]=z[2],u}function w(t,n,e){return t.operations.elevate(t.value,n,e.value)}const z=i(),B={operations:null,value:null};function D(t,n,o,r,u){return u[0]=e(t,n),u[1]=e(t,o),u[2]=e(t,r),u}function F(t,n,e,i,a){o(e,t),o(I,n),r(I,I),u(i,I,e),u(a,i,e)}function H(t,n){return t?a(n):n.isGeographic?c.PlateCarree:n}const I=i();export{T as altitudeAt,S as axisAt,E as closestPoint,G as closestPointOnSilhouette,F as coordinateSystemFromOneAxisAndNormalVector,h as create,d as createFromOperations,k as createGlobal,y as createLocal,O as distanceToSilhouette,w as elevate,A as fromValues,b as intersectRay,g as intersectRayClosestSilhouette,C as intersectsRay,R as normalAt,H as renderSRFromViewSR,Z as setAltitudeAt,q as setAltitudeOfTransformation,j as setExtent,D as vectorCoordinates,P as wrap};
