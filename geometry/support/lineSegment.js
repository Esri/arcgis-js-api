/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{clamp as t}from"../../core/mathUtils.js";import{ObjectStack as r}from"../../core/ObjectStack.js";import{c as n,b as o,e as i,g as e,a as c,p as u,d as s}from"../../chunks/vec3.js";import{a,c as g}from"../../chunks/vec3f64.js";import{sv3d as f}from"./vectorStacks.js";function v(t){return t?{origin:a(t.origin),vector:a(t.vector)}:{origin:g(),vector:g()}}function p(t,r){const n=x.get();return n.origin=t,n.vector=r,n}function h(t,r=v()){return m(t.origin,t.vector,r)}function m(t,r,o=v()){return n(o.origin,t),n(o.vector,r),o}function l(t,r,i=v()){return n(i.origin,t),o(i.vector,r,t),i}function b(r,n){const c=o(f.get(),n,r.origin),u=i(r.vector,c),s=i(r.vector,r.vector),a=t(u/s,0,1),g=o(f.get(),e(f.get(),r.vector,a),c);return i(g,g)}function M(t,r){return Math.sqrt(b(t,r))}function d(t,r,n){return A(t,r,0,1,n)}function j(t,r,n){return c(n,t.origin,e(n,t.vector,r))}function A(r,n,s,a,g){const{vector:v,origin:p}=r,h=o(f.get(),n,p),m=i(v,h)/u(v);return e(g,v,t(m,s,a)),c(g,g,r.origin)}function B(t,r){if(q(t,p(r.origin,r.direction),!1,w)){const{tA:r,pB:n,distance2:o}=w;if(r>=0&&r<=1)return o;if(r<0)return s(t.origin,n);if(r>1)return s(c(f.get(),t.origin,t.vector),n)}return null}function k(t,r,o){return!!q(t,r,!0,w)&&(n(o,w.pA),!0)}function S(t,r){return q(t,r,!0,w)?w.distance2:null}function q(r,n,o,i){const e=1e-6,u=r.origin,a=c(f.get(),u,r.vector),g=n.origin,v=c(f.get(),g,n.vector),p=f.get(),h=f.get();if(p[0]=u[0]-g[0],p[1]=u[1]-g[1],p[2]=u[2]-g[2],h[0]=v[0]-g[0],h[1]=v[1]-g[1],h[2]=v[2]-g[2],Math.abs(h[0])<e&&Math.abs(h[1])<e&&Math.abs(h[2])<e)return!1;const m=f.get();if(m[0]=a[0]-u[0],m[1]=a[1]-u[1],m[2]=a[2]-u[2],Math.abs(m[0])<e&&Math.abs(m[1])<e&&Math.abs(m[2])<e)return!1;const l=p[0]*h[0]+p[1]*h[1]+p[2]*h[2],b=h[0]*m[0]+h[1]*m[1]+h[2]*m[2],M=p[0]*m[0]+p[1]*m[1]+p[2]*m[2],d=h[0]*h[0]+h[1]*h[1]+h[2]*h[2],j=(m[0]*m[0]+m[1]*m[1]+m[2]*m[2])*d-b*b;if(Math.abs(j)<e)return!1;let A=(l*b-M*d)/j,B=(l+b*A)/d;o&&(A=t(A,0,1),B=t(B,0,1));const k=f.get(),S=f.get();return k[0]=u[0]+A*m[0],k[1]=u[1]+A*m[1],k[2]=u[2]+A*m[2],S[0]=g[0]+B*h[0],S[1]=g[1]+B*h[1],S[2]=g[2]+B*h[2],i.tA=A,i.tB=B,i.pA=k,i.pB=S,i.distance2=s(k,S),!0}const w={tA:0,tB:0,pA:g(),pB:g(),distance2:0},x=new r((()=>({origin:null,vector:null})));export{S as closestLineSegmentDistance2,k as closestLineSegmentPoint,B as closestRayDistance2,h as copy,v as create,M as distance,b as distance2,l as fromPoints,m as fromValues,j as pointAt,d as projectPoint,A as projectPointClamp,p as wrap};
