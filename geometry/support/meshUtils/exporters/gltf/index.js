/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{eachAlways as e}from"../../../../../core/promiseUtils.js";import t from"../../../../Point.js";import{GLB as r}from"./glb.js";import{GLTF as o}from"./gltf.js";import{BufferOutputType as n,ImageOutputType as s}from"./types.js";export{AlphaMode,AttributeType,BufferOutputType,ColorMode,ImageOutputType,MeshMode}from"./types.js";import{isArrayBufferPNG as i,encodeBase64DataUri as u}from"./imageutils.js";export{Asset}from"./asset.js";export{Scene}from"./scene.js";export{Node}from"./node.js";const f="model.gltf",p="model.glb";function a(a,m,c){const l=new o(a,m=m||{},c);let g=l.params;g?g.origin||(g.origin=new t({x:-1,y:-1,z:-1})):g={origin:new t({x:-1,y:-1,z:-1})};const y=g.origin,d=l.gltf,j=d.extras.promises;let x=1,b=1,B=null;return e(j).then((()=>{const e={origin:y};delete d.extras;const t="number"==typeof m.jsonSpacing?m.jsonSpacing:4,o=JSON.stringify(d,((t,r)=>{if("extras"!==t){if(r instanceof ArrayBuffer){if(i(r))switch(m.imageOutputType){case s.DataURI:case s.GLB:break;case s.External:default:{const t=`img${b}.png`;return b++,e[t]=r,t}}switch(m.bufferOutputType){case n.DataURI:return u(r);case n.GLB:if(B)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(B=r);case n.External:default:{const t=`data${x}.bin`;return x++,e[t]=r,t}}}return r}}),t);return m.bufferOutputType===n.GLB||m.imageOutputType===s.GLB?e[p]=new r(o,B).buffer:e[f]=o,e}))}function m(e,t){return a(e,{bufferOutputType:n.GLB,imageOutputType:s.GLB,jsonSpacing:0},t)}export{p as MODEL_NAME_GLB,f as MODEL_NAME_GLTF,m as exportGLB,a as exportGLTF};
