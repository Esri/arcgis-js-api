/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/promiseUtils","../../../../Point","./asset","./types","./glb","./imageutils","./gltf","./scene","./node"],(function(e,t,r,n,u,o,p,a,f,i){"use strict";const c="model.gltf",s="model.glb";function y(e,n,f){n=n||{};const i=new a.GLTF(e,n,f);let c=i.params;c?c.origin||(c.origin=new r({x:-1,y:-1,z:-1})):c={origin:new r({x:-1,y:-1,z:-1})};const s=c.origin,y=i.gltf,l=y.extras.promises;let g=1,d=1,O=null;return t.eachAlways(l).then((()=>{const e={origin:s};delete y.extras;const t="number"==typeof n.jsonSpacing?n.jsonSpacing:4,r=JSON.stringify(y,((t,r)=>{if("extras"!==t){if(r instanceof ArrayBuffer){if(p.isArrayBufferPNG(r))switch(n.imageOutputType){case u.ImageOutputType.DataURI:case u.ImageOutputType.GLB:break;case u.ImageOutputType.External:default:{const t=`img${d}.png`;return d++,e[t]=r,t}}switch(n.bufferOutputType){case u.BufferOutputType.DataURI:return p.encodeBase64DataUri(r);case u.BufferOutputType.GLB:if(O)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(O=r);case u.BufferOutputType.External:default:{const t=`data${g}.bin`;return g++,e[t]=r,t}}}return r}}),t);return n.bufferOutputType===u.BufferOutputType.GLB||n.imageOutputType===u.ImageOutputType.GLB?e["model.glb"]=new o.GLB(r,O).buffer:e["model.gltf"]=r,e}))}e.Asset=n.Asset,Object.defineProperty(e,"AlphaMode",{enumerable:!0,get:function(){return u.AlphaMode}}),Object.defineProperty(e,"BufferOutputType",{enumerable:!0,get:function(){return u.BufferOutputType}}),Object.defineProperty(e,"ColorMode",{enumerable:!0,get:function(){return u.ColorMode}}),Object.defineProperty(e,"ComponentType",{enumerable:!0,get:function(){return u.ComponentType}}),Object.defineProperty(e,"DataType",{enumerable:!0,get:function(){return u.DataType}}),Object.defineProperty(e,"FilterMode",{enumerable:!0,get:function(){return u.FilterMode}}),Object.defineProperty(e,"ImageOutputType",{enumerable:!0,get:function(){return u.ImageOutputType}}),Object.defineProperty(e,"MeshMode",{enumerable:!0,get:function(){return u.MeshMode}}),e.Scene=f.Scene,e.Node=i.Node,e.MODEL_NAME_GLB=s,e.MODEL_NAME_GLTF=c,e.exportGLB=function(e,t){return y(e,{bufferOutputType:u.BufferOutputType.GLB,imageOutputType:u.ImageOutputType.GLB,jsonSpacing:0},t)},e.exportGLTF=y,Object.defineProperty(e,"__esModule",{value:!0})}));
