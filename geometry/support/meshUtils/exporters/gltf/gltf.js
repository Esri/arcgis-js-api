/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/vec3f64","../../../../../chunks/vec3","../../../../../chunks/quatf64","../../../MeshMaterialMetallicRoughness","../../georeference","../../../../../chunks/quat","./types","./buffer","./geometry","./imageutils"],(function(e,t,s,r,i,a,n,o,u,c,l){"use strict";let h=function(){function e(e,t,s){this.params={},this.materialMap=new Array,this.gltf={asset:{version:"2.0",copyright:e.copyright,generator:e.generator},extras:{options:t,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this.addScenes(e)}var h=e.prototype;return h.addScenes=function(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras.options.bufferOutputType===o.BufferOutputType.GLB||this.gltf.extras.options.imageOutputType===o.ImageOutputType.GLB;t&&(this.gltf.extras.binChunkBuffer=new u.Buffer(this.gltf)),e.forEachScene((e=>{this.addScene(e)})),t&&this.gltf.extras.binChunkBuffer.finalize()},h.addScene=function(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode((e=>{t.nodes||(t.nodes=[]);const s=this.addNode(e);t.nodes.push(s)})),this.gltf.scenes.push(t)},h.addNode=function(e){this.gltf.nodes||(this.gltf.nodes=[]);const i={};e.name&&(i.name=e.name);const a=e.translation;s.exactEquals(a,t.ZEROS)||(i.translation=t.clone(a));const o=e.rotation;n.exactEquals(o,r.IDENTITY)||(i.rotation=r.clone(o));const u=e.scale;s.exactEquals(u,t.ONES)||(i.scale=t.clone(u)),e.mesh&&e.mesh.vertexAttributes.position?i.mesh=this.addMesh(e.mesh):e.forEachNode((e=>{i.children||(i.children=[]);const t=this.addNode(e);i.children.push(t)}));const c=this.gltf.nodes.length;return this.gltf.nodes.push(i),c},h.addMesh=function(e){this.gltf.meshes||(this.gltf.meshes=[]);const t={primitives:[]},s=this.gltf.extras.options.bufferOutputType===o.BufferOutputType.GLB;let r;r=s?this.gltf.extras.binChunkBuffer:new u.Buffer(this.gltf);const i=e.clone();this.params.origin||(this.params.origin=c.computeOrigin(i)),i.rotate(-90,0,0,{origin:this.params.origin}),c.smoothNormalsMesh(i);const n=a.ungeoreference(i.vertexAttributes,this.params.origin,{geographic:this.params.geographic,unit:"meters"});i.vertexAttributes.position=n.position,i.vertexAttributes.normal=n.normal,i.vertexAttributes.tangent=n.tangent;const l=r.addBufferView(o.ComponentType.FLOAT,o.DataType.VEC3,o.TargetBuffer.ARRAY_BUFFER);let h,f,p,d;i.vertexAttributes.normal&&(h=r.addBufferView(o.ComponentType.FLOAT,o.DataType.VEC3,o.TargetBuffer.ARRAY_BUFFER)),i.vertexAttributes.uv&&(f=r.addBufferView(o.ComponentType.FLOAT,o.DataType.VEC2,o.TargetBuffer.ARRAY_BUFFER)),i.vertexAttributes.tangent&&(p=r.addBufferView(o.ComponentType.FLOAT,o.DataType.VEC4,o.TargetBuffer.ARRAY_BUFFER)),i.vertexAttributes.color&&(d=r.addBufferView(o.ComponentType.UNSIGNED_BYTE,o.DataType.VEC4,o.TargetBuffer.ARRAY_BUFFER)),l.startAccessor("POSITION"),h&&h.startAccessor("NORMAL"),f&&f.startAccessor("TEXCOORD_0"),p&&p.startAccessor("TANGENT"),d&&d.startAccessor("COLOR_0");const g=i.vertexAttributes.position.length/3;for(let a=0;a<g;++a)l.push(i.vertexAttributes.position[3*a+0]),l.push(i.vertexAttributes.position[3*a+1]),l.push(i.vertexAttributes.position[3*a+2]),h&&(h.push(i.vertexAttributes.normal[3*a+0]),h.push(i.vertexAttributes.normal[3*a+1]),h.push(i.vertexAttributes.normal[3*a+2])),f&&(f.push(i.vertexAttributes.uv[2*a+0]),f.push(i.vertexAttributes.uv[2*a+1])),p&&(p.push(i.vertexAttributes.tangent[4*a+0]),p.push(i.vertexAttributes.tangent[4*a+1]),p.push(i.vertexAttributes.tangent[4*a+2]),p.push(i.vertexAttributes.tangent[4*a+3])),d&&(d.push(i.vertexAttributes.color[4*a+0]),d.push(i.vertexAttributes.color[4*a+1]),d.push(i.vertexAttributes.color[4*a+2]),d.push(i.vertexAttributes.color[4*a+3]));const m=l.endAccessor(),x=this.addAccessor(l.index,m);let T,A,b,R,v;if(h){const e=h.endAccessor();T=this.addAccessor(h.index,e)}if(f){const e=f.endAccessor();A=this.addAccessor(f.index,e)}if(p){const e=p.endAccessor();b=this.addAccessor(p.index,e)}if(d){const e=d.endAccessor();R=this.addAccessor(d.index,e)}i.components&&i.components.length>0&&i.components[0].faces?(v=r.addBufferView(o.ComponentType.UNSIGNED_INT,o.DataType.SCALAR,o.TargetBuffer.ELEMENT_ARRAY_BUFFER),this.addMeshVertexIndexed(v,i.components,t,x,T,A,b,R)):this.addMeshVertexNonIndexed(i.components,t,x,T,A,b,R),l.finalize(),h&&h.finalize(),f&&f.finalize(),p&&p.finalize(),v&&v.finalize(),d&&d.finalize(),s||r.finalize();const y=this.gltf.meshes.length;return this.gltf.meshes.push(t),y},h.addMaterial=function(e){if(null===e)return;const t=this.materialMap.indexOf(e);if(-1!==t)return t;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(e.alphaMode){case"mask":s.alphaMode=o.AlphaMode.MASK;break;case"auto":case"blend":s.alphaMode=o.AlphaMode.BLEND}.5!==e.alphaCutoff&&(s.alphaCutoff=e.alphaCutoff),e.doubleSided&&(s.doubleSided=e.doubleSided),s.pbrMetallicRoughness={};const r=e=>e**2.1,a=e=>{const t=e.toRgba();return t[0]=r(t[0]/255),t[1]=r(t[1]/255),t[2]=r(t[2]/255),t};if(e.color&&(s.pbrMetallicRoughness.baseColorFactor=a(e.color)),e.colorTexture&&(s.pbrMetallicRoughness.baseColorTexture={index:this.addTexture(e.colorTexture)}),e.normalTexture&&(s.normalTexture={index:this.addTexture(e.normalTexture)}),e instanceof i){if(e.emissiveTexture&&(s.emissiveTexture={index:this.addTexture(e.emissiveTexture)}),e.emissiveColor){const t=a(e.emissiveColor);s.emissiveFactor=[t[0],t[1],t[2]]}e.occlusionTexture&&(s.occlusionTexture={index:this.addTexture(e.occlusionTexture)}),e.metallicRoughnessTexture&&(s.pbrMetallicRoughness.metallicRoughnessTexture={index:this.addTexture(e.metallicRoughnessTexture)}),s.pbrMetallicRoughness.metallicFactor=e.metallic,s.pbrMetallicRoughness.roughnessFactor=e.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1;const n=this.gltf.materials.length;return this.gltf.materials.push(s),this.materialMap.push(e),n},h.addTexture=function(e){this.gltf.textures||(this.gltf.textures=[]);const t={sampler:this.addSampler(e),source:this.addImage(e)},s=this.gltf.textures.length;return this.gltf.textures.push(t),s},h.addImage=function(e){this.gltf.images||(this.gltf.images=[]);const t={};if(e.url)t.uri=e.url;else{t.extras=e.data;for(let t=0;t<this.gltf.images.length;++t)if(e.data===this.gltf.images[t].extras)return t;switch(this.gltf.extras.options.imageOutputType){case o.ImageOutputType.GLB:{const s=this.gltf.extras.binChunkBuffer.addBufferView(o.ComponentType.UNSIGNED_BYTE,o.DataType.SCALAR);s.writeAsync(l.imageToArrayBuffer(e.data)).then((()=>{s.finalize()})),t.bufferView=s.index,t.mimeType="image/png";break}case o.ImageOutputType.DataURI:t.uri=l.imageToDataURI(e.data);break;default:this.gltf.extras.promises.push(l.imageToArrayBuffer(e.data).then((e=>{t.uri=e})))}}const s=this.gltf.images.length;return this.gltf.images.push(t),s},h.addSampler=function(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=10497,s=10497;if("string"==typeof e.wrap)switch(e.wrap){case"clamp":t=33071,s=33071;break;case"mirror":t=33648,s=33648}else{switch(e.wrap.vertical){case"clamp":s=33071;break;case"mirror":s=33648}switch(e.wrap.horizontal){case"clamp":t=33071;break;case"mirror":t=33648}}const r={wrapS:t,wrapT:s};for(let a=0;a<this.gltf.samplers.length;++a)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[a]))return a;const i=this.gltf.samplers.length;return this.gltf.samplers.push(r),i},h.addAccessor=function(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(s),r},h.addMeshVertexIndexed=function(e,t,s,r,i,a,n,o){for(const u of t){e.startAccessor("INDICES");for(let s=0;s<u.faces.length;++s)e.push(u.faces[s]);const t=e.endAccessor(),c={attributes:{POSITION:r},indices:this.addAccessor(e.index,t),material:this.addMaterial(u.material)};i&&"flat"!==u.shading&&(c.attributes.NORMAL=i),a&&(c.attributes.TEXCOORD_0=a),n&&"flat"!==u.shading&&(c.attributes.TANGENT=n),o&&(c.attributes.COLOR_0=o),s.primitives.push(c)}},h.addMeshVertexNonIndexed=function(e,t,s,r,i,a,n){const o={attributes:{POSITION:s}};r&&(o.attributes.NORMAL=r),i&&(o.attributes.TEXCOORD_0=i),a&&(o.attributes.TANGENT=a),n&&(o.attributes.COLOR_0=n),e&&(o.material=this.addMaterial(e[0].material)),t.primitives.push(o)},e}();e.GLTF=h,Object.defineProperty(e,"__esModule",{value:!0})}));
