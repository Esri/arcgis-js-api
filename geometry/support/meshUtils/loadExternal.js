/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../core/Error.js";import{isSome as t,isNone as s}from"../../../core/maybe.js";import{whenOrAbort as r,eachAlwaysValues as o,isAborted as n,throwIfAborted as a}from"../../../core/promiseUtils.js";import{makeRelative as i,removeFile as l}from"../../../core/urlUtils.js";import c from"../../Point.js";async function f(e,s,o){const{loadGLTFMesh:n}=await r(import("./loadGLTFMesh.js"),o),a=await m(s,o),i=n(new c({x:0,y:0,z:0,spatialReference:e.spatialReference}),a.url,{resolveFile:u(a),useTransform:!0,signal:t(o)?o.signal:null});i.then((()=>a.dispose()),(()=>a.dispose()));const{vertexAttributes:l,components:f}=await i;e.vertexAttributes=l,e.components=f}function u(e){const t=l(e.url);return s=>{const r=i(s,t,t),o=r?r.replace(/^ *\.\//,""):null;return e.files.get(o)??s}}async function m(e,t){return e instanceof Blob?y.fromBlob(e):"string"==typeof e?new y(e):Array.isArray(e)?p(e,t):w(e,t)}async function p(t,r){const i=new Map;let l=null;const c=await o(t.map((async e=>({name:e.name,source:await m(e instanceof Blob?e:e.source,r)})))),f=[];for(const e of c)e&&(n(r)?e.source.dispose():f.push(e));a(r);for(const{name:e,source:o}of f)(s(l)||/\.(gltf|glb)/i.test(e))&&(l=o.url),i.set(e,o.url),o.files&&o.files.forEach(((e,t)=>i.set(t,e)));if(s(l))throw new e("mesh-load-external:missing-files","Missing files to load external mesh source");return new y(l,(()=>f.forEach((({source:e})=>e.dispose()))),i)}async function w(e,t){const{default:s}=await r(import("../../../request.js"),t),o="string"==typeof e.multipart[0]?await Promise.all(e.multipart.map((async e=>(await s(e,{responseType:"array-buffer"})).data))):e.multipart;return y.fromBlob(new Blob(o))}class y{constructor(e,t=(()=>{}),s=new Map){this.url=e,this.dispose=t,this.files=s}static fromBlob(e){const t=URL.createObjectURL(e);return new y(t,(()=>URL.revokeObjectURL(t)))}}export{f as loadExternal};
