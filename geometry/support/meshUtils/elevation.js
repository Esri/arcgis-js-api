/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../geometry","../../../Ground","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/unitUtils","../../Mesh","../../projection","../MeshComponent","../MeshVertexAttributes","../../Point"],(function(e,t,n,r,o,i,a,s,l,u,c,p,m){"use strict";function y(e,t,n){return f.apply(this,arguments)}function f(){return(f=t._asyncToGenerator((function*(e,t,n){let i;if(g(e)||e instanceof r){const r=yield h(e);return i=yield r.createElevationSampler(t,{demResolution:n?.demResolution??"finest-contiguous"}),d(i,t,{material:n?.material})}return"string"==typeof n?.demResolution?(o.getLogger("esri.geometry.support.meshUtils.elevation").error("create()","demResolution must be a number when used directly with a sampler"),null):d(e,t,{material:n?.material,demResolution:n?.demResolution})}))).apply(this,arguments)}function d(e,t,n){const r=s.getMetersPerUnitForSR(t.spatialReference),o=(n?.demResolution??e.demResolution.min)/r,a=Math.round(t.width/o),m=Math.round(t.height/o),y=a+1,f=m+1,d=new Float64Array(y*f*3),h=new Float32Array(y*f*2);let R=0,g=0;const b=new Uint32Array(a*m*2*3);let v=0,A=0;const M=!e.spatialReference.equals(t.spatialReference);w.spatialReference=t.spatialReference;const{xmin:x,ymin:U,height:P,width:S}=t;for(let s=0;s<f;s++){const t=U+P*(s/m);for(let n=0;n<y;n++){const r=x+S*(n/a);if(d[R++]=r,d[R++]=t,M){w.x=r,w.y=t;const n=u.project(w,e.spatialReference);d[R++]=i.unwrapOr(e.elevationAt(n.x,n.y),0)}else d[R++]=i.unwrapOr(e.elevationAt(r,t),0);const o=n/a,l=s/m;h[g++]=o,h[g++]=l,s!==m&&n!==a&&(b[A++]=v+1,b[A++]=v+y+1,b[A++]=v+y,b[A++]=v,b[A++]=v+1,b[A++]=v+y),v++}}return new l({vertexAttributes:new p.MeshVertexAttributes({position:d,uv:h}),components:[new c({faces:b,shading:"smooth",material:n?.material??null})],spatialReference:t.spatialReference})}function h(e){return R.apply(this,arguments)}function R(){return(R=t._asyncToGenerator((function*(e){return g(e)?e.load():(yield e.load(),yield a.eachAlways(e.layers.map((e=>e.load()))),e)}))).apply(this,arguments)}function g(e){return"type"in e&&("elevation"===e.type||"base-elevation"===e.type)}const w=new m;e.create=y,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
