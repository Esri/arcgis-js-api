/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isSome as t}from"../../../core/maybe.js";import{c as e}from"../../../chunks/mat3f64.js";import{t as n,n as r}from"../../../chunks/vec3.js";import{c as o}from"../../../chunks/vec3f64.js";import s from"../MeshComponent.js";import{MeshVertexAttributes as a}from"../MeshVertexAttributes.js";import{georeferenceByTransform as i}from"./georeference.js";function c(){const{faceDescriptions:t,faceVertexOffsets:e,uvScales:n}=d,r=4*t.length,o=new Float64Array(3*r),s=new Float32Array(3*r),a=new Float32Array(2*r),i=new Uint32Array(2*t.length*3);let c=0,l=0,f=0,u=0;for(let h=0;h<t.length;h++){const r=t[h],p=c/3;for(const t of e)i[u++]=p+t;const m=r.corners;for(let t=0;t<4;t++){const e=m[t];let i=0;a[f++]=.25*n[t][0]+r.uvOrigin[0],a[f++]=r.uvOrigin[1]-.25*n[t][1];for(let t=0;t<3;t++)0!==r.axis[t]?(o[c++]=.5*r.axis[t],s[l++]=r.axis[t]):(o[c++]=.5*e[i++],s[l++]=0)}}return{position:o,normal:s,uv:a,faces:i}}function l(e,n){const r=e.components[0],o=r.faces,a=M[n],i=6*a,c=new Uint32Array(6),l=new Uint32Array(o.length-6);let f=0,u=0;for(let t=0;t<o.length;t++)t>=i&&t<i+6?c[f++]=o[t]:l[u++]=o[t];if(t(e.vertexAttributes.uv)){const t=new Float32Array(e.vertexAttributes.uv),n=4*a*2,r=[0,1,1,1,1,0,0,0];for(let e=0;e<r.length;e++)t[n+e]=r[e];e.vertexAttributes.uv=t}return e.components=[new s({faces:c,material:r.material}),new s({faces:l})],e}function f(t=0){const e=Math.round(8*2**t),n=2*e,r=(e-1)*(n+1)+2*n,o=new Float64Array(3*r),s=new Float32Array(3*r),a=new Float32Array(2*r),i=new Uint32Array(3*((e-1)*n*2));let c=0,l=0,f=0,u=0;for(let h=0;h<=e;h++){const t=h/e*Math.PI+.5*Math.PI,r=Math.cos(t),p=Math.sin(t);F[2]=p;const m=0===h||h===e,w=m?n-1:n;for(let v=0;v<=w;v++){const t=v/w*2*Math.PI;F[0]=-Math.sin(t)*r,F[1]=Math.cos(t)*r;for(let e=0;e<3;e++)o[c]=.5*F[e],s[c]=F[e],++c;a[l++]=(v+(m?.5:0))/n,a[l++]=h/e,0!==h&&v!==n&&(h!==e&&(i[f++]=u,i[f++]=u+1,i[f++]=u-n),1!==h&&(i[f++]=u,i[f++]=u-n,i[f++]=u-n-1)),u++}}return{position:o,normal:s,uv:a,faces:i}}function u(t=0){const e=5,n=Math.round(16*2**t),r=(e-1)*(n+1)+2*n,o=new Float64Array(3*r),s=new Float32Array(3*r),a=new Float32Array(2*r),i=new Uint32Array(3*(4*n));let c=0,l=0,f=0,u=0,h=0;for(let p=0;p<=e;p++){const t=0===p||p===e,r=p<=1||p>=e-1,m=2===p||4===p,w=t?n-1:n;for(let v=0;v<=w;v++){const g=v/w*2*Math.PI,A=t?0:.5;F[0]=A*Math.sin(g),F[1]=A*-Math.cos(g),F[2]=p<=2?.5:-.5;for(let t=0;t<3;t++)o[c++]=F[t],s[l++]=r?2===t?p<=1?1:-1:0:2===t?0:F[t]/A;a[f++]=(v+(t?.5:0))/n,a[f++]=p<=1?1*p/3:p<=3?1*(p-2)/3+1/3:1*(p-4)/3+2/3,m||0===p||v===n||(p!==e&&(i[u++]=h,i[u++]=h+1,i[u++]=h-n),1!==p&&(i[u++]=h,i[u++]=h-n,i[u++]=h-n-1)),h++}}return{position:o,normal:s,uv:a,faces:i}}function h(t,e){const n="number"==typeof e?e:null!=e?e.width:1,r="number"==typeof e?e:null!=e?e.height:1;switch(t){case"up":case"down":return{width:n,depth:r};case"north":case"south":return{width:n,height:r};case"east":case"west":return{depth:n,height:r}}}function p(t){const e=g.facingAxisOrderSwap[t],n=g.position,r=g.normal,o=new Float64Array(n.length),s=new Float32Array(r.length);let a=0;for(let i=0;i<4;i++){const t=a;for(let i=0;i<3;i++){const c=e[i],l=Math.abs(c)-1,f=c>=0?1:-1;o[a]=n[t+l]*f,s[a]=r[t+l]*f,a++}}return{position:o,normal:s,uv:new Float32Array(g.uv),faces:new Uint32Array(g.faces),isPlane:!0}}const m=1,w=2,v=3,g={position:[-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0],normal:[0,0,1,0,0,1,0,0,1,0,0,1],uv:[0,1,1,1,1,0,0,0],faces:[0,1,2,0,2,3],facingAxisOrderSwap:{east:[v,m,w],west:[-v,-m,w],north:[-m,v,w],south:[m,-v,w],up:[m,w,v],down:[m,-w,-v]}};function A(t,e,n){t.isPlane||y(t),x(t,n&&n.size);const{vertexAttributes:r,transform:o}=i(t,e,n);return{vertexAttributes:new a({...r,uv:t.uv}),transform:o,components:[new s({faces:t.faces,material:n&&n.material||null})],spatialReference:e.spatialReference}}function y(t){for(let e=0;e<t.position.length;e+=3)t.position[e+2]+=.5}function x(t,e){if(null==e)return;const o="number"==typeof e?[e,e,e]:[null!=e.width?e.width:1,null!=e.depth?e.depth:1,null!=e.height?e.height:1];O[0]=o[0],O[4]=o[1],O[8]=o[2];for(let r=0;r<t.position.length;r+=3){for(let e=0;e<3;e++)F[e]=t.position[r+e];n(F,F,O);for(let e=0;e<3;e++)t.position[r+e]=F[e]}if(o[0]!==o[1]||o[1]!==o[2]){O[0]=1/o[0],O[4]=1/o[1],O[8]=1/o[2];for(let e=0;e<t.normal.length;e+=3){for(let n=0;n<3;n++)F[n]=t.normal[e+n];n(F,F,O),r(F,F);for(let n=0;n<3;n++)t.normal[e+n]=F[n]}}}const d={faceDescriptions:[{axis:[0,-1,0],uvOrigin:[0,.625],corners:[[-1,-1],[1,-1],[1,1],[-1,1]]},{axis:[1,0,0],uvOrigin:[.25,.625],corners:[[-1,-1],[1,-1],[1,1],[-1,1]]},{axis:[0,1,0],uvOrigin:[.5,.625],corners:[[1,-1],[-1,-1],[-1,1],[1,1]]},{axis:[-1,0,0],uvOrigin:[.75,.625],corners:[[1,-1],[-1,-1],[-1,1],[1,1]]},{axis:[0,0,1],uvOrigin:[0,.375],corners:[[-1,-1],[1,-1],[1,1],[-1,1]]},{axis:[0,0,-1],uvOrigin:[0,.875],corners:[[-1,1],[1,1],[1,-1],[-1,-1]]}],uvScales:[[0,0],[1,0],[1,1],[0,1]],faceVertexOffsets:[0,1,2,0,2,3]},M={south:0,east:1,north:2,west:3,up:4,down:5},F=o(),O=e();export{M as boxFaceOrder,h as convertPlaneSizeParameter,A as convertUnitGeometry,c as createUnitSizeBox,u as createUnitSizeCylinder,p as createUnitSizePlane,f as createUnitSizeSphere,l as extractSingleFaceOfBox};
