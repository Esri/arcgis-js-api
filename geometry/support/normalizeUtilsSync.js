/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{isNone as t}from"../../core/maybe.js";import{create as i}from"./aaBoundingRect.js";import{getBoundsXY as s}from"./boundsUtils.js";import{closeRings as n}from"./coordsUtils.js";import{isPoint as e,isMultipoint as h,isExtent as o,isPolygon as r,isPolyline as u}from"./jsonUtils.js";import{cutParams as m,updatePolyGeometry as x,offsetMagnitude as l}from"./normalizeUtilsCommon.js";import{getInfo as c,isWebMercator as a}from"./spatialReferenceUtils.js";function p(t){return _(t,!0)}function f(t){return _(t,!1)}function _(i,n){if(t(i))return null;const p=i.spatialReference,f=c(p),_="toJSON"in i?i.toJSON():i;if(!f)return _;const I=a(p)?102100:4326,g=m[I].maxX,v=m[I].minX;if(e(_))return y(_,g,v);if(h(_))return _.points=_.points.map((t=>y(t,g,v))),_;if(o(_))return d(_,f);if(r(_)||u(_)){const t=s(S,_),i={xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3]},e=l(i.xmin,v)*(2*g),h=0===e?_:x(_,e);return i.xmin+=e,i.xmax+=e,i.xmax>g?P(h,g,n):i.xmin<v?P(h,v,n):h}return _}function d(t,i){if(!i)return t;const s=I(t,i).map((t=>t.extent));return s.length<2?s[0]||t:s.length>2?(t.xmin=i.valid[0],t.xmax=i.valid[1],t):{rings:s.map((t=>[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]))}}function y(t,i,s){if(Array.isArray(t)){const n=t[0];if(n>i){const s=l(n,i);t[0]=n+s*(-2*i)}else if(n<s){const i=l(n,s);t[0]=n+i*(-2*s)}}else{const n=t.x;if(n>i){const s=l(n,i);t.x+=s*(-2*i)}else if(n<s){const i=l(n,s);t.x+=i*(-2*s)}}return t}function I(t,i){const s=[],{ymin:n,ymax:e,xmin:h,xmax:o}=t,r=t.xmax-t.xmin,[u,m]=i.valid,{x,frameId:l}=g(t.xmin,i),{x:c,frameId:a}=g(t.xmax,i),p=x===c&&r>0;if(r>2*m){const t={xmin:h<o?x:c,ymin:n,xmax:m,ymax:e},i={xmin:u,ymin:n,xmax:h<o?c:x,ymax:e},r={xmin:0,ymin:n,xmax:m,ymax:e},p={xmin:u,ymin:n,xmax:0,ymax:e},f=[],_=[];v(t,r)&&f.push(l),v(t,p)&&_.push(l),v(i,r)&&f.push(a),v(i,p)&&_.push(a);for(let s=l+1;s<a;s++)f.push(s),_.push(s);s.push(new C(t,[l]),new C(i,[a]),new C(r,f),new C(p,_))}else x>c||p?s.push(new C({xmin:x,ymin:n,xmax:m,ymax:e},[l]),new C({xmin:u,ymin:n,xmax:c,ymax:e},[a])):s.push(new C({xmin:x,ymin:n,xmax:c,ymax:e},[l]));return s}function g(t,i){const[s,n]=i.valid,e=2*n;let h,o=0;return t>n?(h=Math.ceil(Math.abs(t-n)/e),t-=h*e,o=h):t<s&&(h=Math.ceil(Math.abs(t-s)/e),t+=h*e,o=-h),{x:t,frameId:o}}function v(t,i){const{xmin:s,ymin:n,xmax:e,ymax:h}=i;return O(t,s,n)&&O(t,s,h)&&O(t,e,h)&&O(t,e,n)}function O(t,i,s){return i>=t.xmin&&i<=t.xmax&&s>=t.ymin&&s<=t.ymax}function P(t,i,s=!0){const e=!u(t);if(e&&n(t),s){return(new T).cut(t,i)}const h=e?t.rings:t.paths,o=e?4:2,r=h.length,m=-2*i;for(let n=0;n<r;n++){const t=h[n];if(t&&t.length>=o){const i=[];for(const s of t)i.push([s[0]+m,s[1]]);h.push(i)}}return e?t.rings=h:t.paths=h,t}class C{constructor(t,i){this.extent=t,this.frameIds=i}}const S=i();class T{constructor(){this.linesIn=[],this.linesOut=[]}cut(t,i){let s;if(this.xCut=i,t.rings)this.closed=!0,s=t.rings,this.minPts=4;else{if(!t.paths)return null;this.closed=!1,s=t.paths,this.minPts=2}for(const e of s){if(!e||e.length<this.minPts)continue;let t=!0;for(const i of e)t?(this.moveTo(i),t=!1):this.lineTo(i);this.closed&&this.close()}this._pushLineIn(),this._pushLineOut(),s=[];for(const e of this.linesIn)e&&e.length>=this.minPts&&s.push(e);const n=-2*this.xCut;for(const e of this.linesOut)if(e&&e.length>=this.minPts){for(const t of e)t[0]+=n;s.push(e)}return this.closed?t.rings=s:t.paths=s,t}moveTo(t){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(t[0]),this._moveTo(t[0],t[1],this._prevSide),this._prevPt=t,this._firstPt=t}lineTo(t){const i=this._side(t[0]);if(i*this._prevSide==-1){const s=this._intersect(this._prevPt,t);this._lineTo(this.xCut,s,0),this._prevSide=0,this._lineTo(t[0],t[1],i)}else this._lineTo(t[0],t[1],i);this._prevSide=i,this._prevPt=t}close(){const t=this._firstPt,i=this._prevPt;t[0]===i[0]&&t[1]===i[1]||this.lineTo(t),this._checkClosingPt(this.lineIn),this._checkClosingPt(this.lineOut)}_moveTo(t,i,s){this.closed?(this.lineIn.push([s<=0?t:this.xCut,i]),this.lineOut.push([s>=0?t:this.xCut,i])):(s<=0&&this.lineIn.push([t,i]),s>=0&&this.lineOut.push([t,i]))}_lineTo(t,i,s){this.closed?(this._addPolyVertex(this.lineIn,s<=0?t:this.xCut,i),this._addPolyVertex(this.lineOut,s>=0?t:this.xCut,i)):s<0?(0===this._prevSide&&this._pushLineOut(),this.lineIn.push([t,i])):s>0?(0===this._prevSide&&this._pushLineIn(),this.lineOut.push([t,i])):this._prevSide<0?(this.lineIn.push([t,i]),this.lineOut.push([t,i])):this._prevSide>0&&(this.lineOut.push([t,i]),this.lineIn.push([t,i]))}_addPolyVertex(t,i,s){const n=t.length;n>1&&t[n-1][0]===i&&t[n-2][0]===i?t[n-1][1]=s:t.push([i,s])}_checkClosingPt(t){const i=t.length;i>3&&t[0][0]===this.xCut&&t[i-2][0]===this.xCut&&t[1][0]===this.xCut&&(t[0][1]=t[i-2][1],t.pop())}_side(t){return t<this.xCut?-1:t>this.xCut?1:0}_intersect(t,i){const s=(this.xCut-t[0])/(i[0]-t[0]);return t[1]+s*(i[1]-t[1])}_pushLineIn(){this.lineIn&&this.lineIn.length>=this.minPts&&this.linesIn.push(this.lineIn),this.lineIn=[]}_pushLineOut(){this.lineOut&&this.lineOut.length>=this.minPts&&this.linesOut.push(this.lineOut),this.lineOut=[]}}export{T as CutVertical,f as normalizeCentralMeridianForDisplay,p as normalizeCentralMeridianSync};
