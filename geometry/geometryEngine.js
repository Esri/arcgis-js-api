/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../chunks/geometryEngineBase","./geometryAdapters/hydrated"],(function(e,n,r){"use strict";function t(e){return Array.isArray(e)?e[0].spatialReference:e&&e.spatialReference}function a(e){return n.geometryEngineBase$1.extendedSpatialReferenceInfo(e)}function i(e,a){return n.geometryEngineBase$1.clip(r.hydratedAdapter,t(e),e,a)}function o(e,a){return n.geometryEngineBase$1.cut(r.hydratedAdapter,t(e),e,a)}function d(e,a){return n.geometryEngineBase$1.contains(r.hydratedAdapter,t(e),e,a)}function u(e,a){return n.geometryEngineBase$1.crosses(r.hydratedAdapter,t(e),e,a)}function s(e,a,i){return n.geometryEngineBase$1.distance(r.hydratedAdapter,t(e),e,a,i)}function c(e,a){return n.geometryEngineBase$1.equals(r.hydratedAdapter,t(e),e,a)}function g(e,a){return n.geometryEngineBase$1.intersects(r.hydratedAdapter,t(e),e,a)}function f(e,a){return n.geometryEngineBase$1.touches(r.hydratedAdapter,t(e),e,a)}function l(e,a){return n.geometryEngineBase$1.within(r.hydratedAdapter,t(e),e,a)}function y(e,a){return n.geometryEngineBase$1.disjoint(r.hydratedAdapter,t(e),e,a)}function p(e,a){return n.geometryEngineBase$1.overlaps(r.hydratedAdapter,t(e),e,a)}function m(e,a,i){return n.geometryEngineBase$1.relate(r.hydratedAdapter,t(e),e,a,i)}function E(e){return n.geometryEngineBase$1.isSimple(r.hydratedAdapter,t(e),e)}function h(e){return n.geometryEngineBase$1.simplify(r.hydratedAdapter,t(e),e)}function A(e,a=!1){return n.geometryEngineBase$1.convexHull(r.hydratedAdapter,t(e),e,a)}function B(e,a){return n.geometryEngineBase$1.difference(r.hydratedAdapter,t(e),e,a)}function $(e,a){return n.geometryEngineBase$1.symmetricDifference(r.hydratedAdapter,t(e),e,a)}function x(e,a){return n.geometryEngineBase$1.intersect(r.hydratedAdapter,t(e),e,a)}function w(e,a=null){return n.geometryEngineBase$1.union(r.hydratedAdapter,t(e),e,a)}function R(e,a,i,o,d,u){return n.geometryEngineBase$1.offset(r.hydratedAdapter,t(e),e,a,i,o,d,u)}function v(e,a,i,o=!1){return n.geometryEngineBase$1.buffer(r.hydratedAdapter,t(e),e,a,i,o)}function I(e,a,i,o,d,u){return n.geometryEngineBase$1.geodesicBuffer(r.hydratedAdapter,t(e),e,a,i,o,d,u)}function S(e,a,i=!0){return n.geometryEngineBase$1.nearestCoordinate(r.hydratedAdapter,t(e),e,a,i)}function V(e,a){return n.geometryEngineBase$1.nearestVertex(r.hydratedAdapter,t(e),e,a)}function z(e,a,i,o){return n.geometryEngineBase$1.nearestVertices(r.hydratedAdapter,t(e),e,a,i,o)}function D(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent.center:null}function H(e,r,t){var a;if(null==e)throw new Error("Illegal Argument Exception");const i=e.spatialReference;if(null==(t=null!=(a=t)?a:D(e)))throw new Error("Illegal Argument Exception");const o=e.constructor.fromJSON(n.geometryEngineBase$1.rotate(e,r,t));return o.spatialReference=i,o}function L(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");const a=e.spatialReference;if(null==(r=null!=(t=r)?t:D(e)))throw new Error("Illegal Argument Exception");const i=e.constructor.fromJSON(n.geometryEngineBase$1.flipHorizontal(e,r));return i.spatialReference=a,i}function O(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");const a=e.spatialReference;if(null==(r=null!=(t=r)?t:D(e)))throw new Error("Illegal Argument Exception");const i=e.constructor.fromJSON(n.geometryEngineBase$1.flipVertical(e,r));return i.spatialReference=a,i}function b(e,a,i,o){return n.geometryEngineBase$1.generalize(r.hydratedAdapter,t(e),e,a,i,o)}function j(e,a,i){return n.geometryEngineBase$1.densify(r.hydratedAdapter,t(e),e,a,i)}function J(e,a,i,o=0){return n.geometryEngineBase$1.geodesicDensify(r.hydratedAdapter,t(e),e,a,i,o)}function N(e,a){return n.geometryEngineBase$1.planarArea(r.hydratedAdapter,t(e),e,a)}function q(e,a){return n.geometryEngineBase$1.planarLength(r.hydratedAdapter,t(e),e,a)}function C(e,a,i){return n.geometryEngineBase$1.geodesicArea(r.hydratedAdapter,t(e),e,a,i)}function _(e,a,i){return n.geometryEngineBase$1.geodesicLength(r.hydratedAdapter,t(e),e,a,i)}e.buffer=v,e.clip=i,e.contains=d,e.convexHull=A,e.crosses=u,e.cut=o,e.densify=j,e.difference=B,e.disjoint=y,e.distance=s,e.equals=c,e.extendedSpatialReferenceInfo=a,e.flipHorizontal=L,e.flipVertical=O,e.generalize=b,e.geodesicArea=C,e.geodesicBuffer=I,e.geodesicDensify=J,e.geodesicLength=_,e.intersect=x,e.intersects=g,e.isSimple=E,e.nearestCoordinate=S,e.nearestVertex=V,e.nearestVertices=z,e.offset=R,e.overlaps=p,e.planarArea=N,e.planarLength=q,e.relate=m,e.rotate=H,e.simplify=h,e.symmetricDifference=$,e.touches=f,e.union=w,e.within=l,Object.defineProperty(e,"__esModule",{value:!0})}));
