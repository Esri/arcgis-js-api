/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","./parser","./tokenizer","./types"],(function(e,r,s,t){"use strict";function i(e,s,t){return new r.Parser(e,s,t).parseScript()}function n(e,r,t){const i=new s.Tokenizer(e,r),n=[];let a;try{let e;for(;e=i.getNextToken();)t&&(e=t(e)),n.push(e)}catch(o){i.errorHandler.tolerate(o)}return i.errorHandler.tolerant&&(a=i.errors()),{tokens:n,errors:a}}e.AssignmentOperators=t.AssignmentOperators,e.BinaryOperators=t.BinaryOperators,e.LogicalOperators=t.LogicalOperators,e.OperatorPrecedence=t.OperatorPrecedence,e.ParsingError=t.ParsingError,Object.defineProperty(e,"ParsingErrorCodes",{enumerable:!0,get:()=>t.ParsingErrorCodes}),e.ParsingErrorMessages=t.ParsingErrorMessages,Object.defineProperty(e,"Syntax",{enumerable:!0,get:()=>t.Syntax}),e.TokenNames=t.TokenNames,Object.defineProperty(e,"TokenType",{enumerable:!0,get:()=>t.TokenType}),e.UnaryOperators=t.UnaryOperators,e.UpdateOperators=t.UpdateOperators,e.isArrayExpression=t.isArrayExpression,e.isAssignmentExpression=t.isAssignmentExpression,e.isBinaryExpression=t.isBinaryExpression,e.isBlockComment=t.isBlockComment,e.isBlockStatement=t.isBlockStatement,e.isBreakStatement=t.isBreakStatement,e.isCallExpression=t.isCallExpression,e.isContinueStatement=t.isContinueStatement,e.isEmptyStatement=t.isEmptyStatement,e.isExpression=t.isExpression,e.isExpressionStatement=t.isExpressionStatement,e.isForInStatement=t.isForInStatement,e.isForStatement=t.isForStatement,e.isFunctionDeclaration=t.isFunctionDeclaration,e.isIdentifier=t.isIdentifier,e.isIfStatement=t.isIfStatement,e.isLiteral=t.isLiteral,e.isLogicalExpression=t.isLogicalExpression,e.isMemberExpression=t.isMemberExpression,e.isObjectExpression=t.isObjectExpression,e.isProgram=t.isProgram,e.isProperty=t.isProperty,e.isReturnStatement=t.isReturnStatement,e.isStatement=t.isStatement,e.isTemplateElement=t.isTemplateElement,e.isTemplateLiteral=t.isTemplateLiteral,e.isUnaryExpression=t.isUnaryExpression,e.isUpdateExpression=t.isUpdateExpression,e.isVariableDeclaration=t.isVariableDeclaration,e.isVariableDeclarator=t.isVariableDeclarator,e.parse=i,e.tokenize=n,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
