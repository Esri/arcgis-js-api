/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../geometry/Geometry","./ImmutableArray","../chunks/languageUtils"],(function(t,i,e){"use strict";function s(t){let i=null;if(null===t);else if(e.isNumber(t))i=e.toNumber(t);else if(e.isBoolean(t))i=e.toBoolean(t);else if(e.isString(t))i=e.toString(t);else if(e.isDate(t))i=e.toDate(t);else if(e.isArray(t)){i=[];for(const e of t)i.push(s(e))}else{if(0===Object.keys(t).length)return null;const e=new n;e.immutable=!1;for(const i of Object.keys(t)){const n=t[i];void 0!==n&&e.setField(i,s(n))}e.immutable=!0,i=e}return i}let n=function(){function n(t){this.declaredClass="esri.arcade.Dictionary",this.attributes=null,this.plain=!1,this.immutable=!0,this.attributes=t instanceof n?t.attributes:null==t?{}:t}var r=n.prototype;return r.field=function(t){const i=t.toLowerCase(),e=this.attributes[t];if(void 0!==e)return e;for(const t in this.attributes)if(t.toLowerCase()===i)return this.attributes[t];throw new Error("Field not Found : "+t)},r.setField=function(t,i){if(this.immutable)throw new Error("Dictionary is Immutable");const e=t.toLowerCase();if(void 0===this.attributes[t]){for(const t in this.attributes)if(t.toLowerCase()===e)return void(this.attributes[t]=i);this.attributes[t]=i}else this.attributes[t]=i},r.hasField=function(t){const i=t.toLowerCase();if(void 0!==this.attributes[t])return!0;for(const t in this.attributes)if(t.toLowerCase()===i)return!0;return!1},r.keys=function(){let t=[];for(const i in this.attributes)t.push(i);return t=t.sort(),t},r.castToText=function(){let s="";for(const n in this.attributes){""!==s&&(s+=",");const r=this.attributes[n];null==r?s+=JSON.stringify(n)+":null":e.isBoolean(r)||e.isNumber(r)||e.isString(r)?s+=JSON.stringify(n)+":"+JSON.stringify(r):r instanceof t||r instanceof i||r instanceof Array?s+=JSON.stringify(n)+":"+e.toStringExplicit(r):r instanceof Date?s+=JSON.stringify(n)+":"+JSON.stringify(r):null!==r&&"object"==typeof r&&void 0!==r.castToText&&(s+=JSON.stringify(n)+":"+r.castToText())}return"{"+s+"}"},n.convertObjectToArcadeDictionary=function(t){const i=new n;i.immutable=!1;for(const e in t){const n=t[e];void 0!==n&&i.setField(e.toString(),s(n))}return i.immutable=!0,i},n}();return n}));
