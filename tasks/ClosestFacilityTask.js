/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/subclass","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../core/promiseUtils","../request","../geometry/support/normalizeUtils","./Task","../core/queryUtils","./mixins/NAServiceDescription","./support/ClosestFacilitySolveResult"],(function(e,r,t,s,i,o,a,n,c,u,l,p,m,f,h,y,d){"use strict";const B=h.createQueryParamsHelper({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let g=function(r){function t(e){var t;return(t=r.call(this,e)||this).url=null,t}e._inheritsLoose(t,r);var s=t.prototype;return s.solve=function(e,r){const t=[],s=[],i={},o={};return e.incidents&&e.incidents.features&&this._collectGeometries(e.incidents.features,s,"incidents.features",i),e.facilities&&e.facilities.features&&this._collectGeometries(e.facilities.features,s,"facilities.features",i),e.pointBarriers&&e.pointBarriers.features&&this._collectGeometries(e.pointBarriers.features,s,"pointBarriers.features",i),e.polylineBarriers&&e.polylineBarriers.features&&this._collectGeometries(e.polylineBarriers.features,s,"polylineBarriers.features",i),e.polygonBarriers&&e.polygonBarriers.features&&this._collectGeometries(e.polygonBarriers.features,s,"polygonBarriers.features",i),m.normalizeCentralMeridian(s).then((e=>{for(const r in i){const s=i[r];t.push(r),o[r]=e.slice(s[0],s[1])}return this._isInputGeometryZAware(o,t)?this.getServiceDescription():l.resolve({dontCheck:!0})})).then((s=>{("dontCheck"in s?s.dontCheck:s.hasZ)||this._dropZValuesOffInputGeometry(o,t);for(const r in o)o[r].forEach(((t,s)=>{e.get(r)[s].geometry=t}));let i={query:{...this.parsedUrl.query,f:"json",...B.toQueryParams(e)}};return(this.requestOptions||r)&&(i={...this.requestOptions,...r,...i}),p(`${this.parsedUrl.path}/solveClosestFacility`,i)})).then((e=>d.fromJSON(e.data)))},s._collectGeometries=function(e,r,t,s){s[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))},t}(y.NAServiceDescriptionMixin(f));return r.__decorate([o.property()],g.prototype,"url",void 0),g=r.__decorate([a.subclass("esri.tasks.ClosestFacilityTask")],g),g}));
