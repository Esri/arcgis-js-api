/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/maybe","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/jsonMap","../core/accessorSupport/decorators/subclass","../core/Error","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../geometry/Polygon","../core/screenUtils","../kernel","../request","../renderers/visualVariables/support/visualVariableUtils","./support/Query","./Task","./Geoprocessor","./support/fileFormat","./support/layoutTemplate","./support/printTaskUtils","./support/PrintTemplate"],(function(e,t,r,i,a,n,s,o,l,c,u,y,p,d,f,h,m,g,S,b,_,w,L,v,x){"use strict";const O={Feet:"ft",Kilometers:"km",Meters:"m",Miles:"mi"},J=new o.JSONMap({esriFeet:"Feet",esriKilometers:"Kilometers",esriMeters:"Meters",esriMiles:"Miles"}),N=new o.JSONMap({esriExecutionTypeSynchronous:"sync",esriExecutionTypeAsynchronous:"async"}),M=new S({returnGeometry:!0});function I(e){return e&&(e.path||"image/svg+xml"===e.contentType||e.url&&e.url.endsWith(".svg"))}let D=function(t){function r(...e){var r;return(r=t.call(this,...e)||this)._ssExtent=null,r._legendLayers=[],r._legendLayerNameMap={},r._gpServerUrl=null,r._cimVersion=null,r._is11xService=!1,r._gpMetadata=null,r.updateDelay=1e3,r}e._inheritsLoose(r,t);var a=r.prototype;return a.execute=function(e,t){let r=this.url;const i=r.lastIndexOf("/GPServer/");return i>0&&(r=r.slice(0,i+9)),Promise.resolve().then((()=>this._gpServerUrl===r?{data:this._gpMetadata}:(this._gpServerUrl=r,m(r,{query:{f:"json"}})))).then((t=>(this._gpMetadata=t.data,this._cimVersion=this._gpMetadata.cimVersion,this._is11xService=!!this._cimVersion,this._getGpPrintParams(e)))).then((e=>{const r=e=>"sync"===this.mode?e.results&&e.results[0]&&e.results[0].value:this._geoprocessor.getResultData(e.jobId,"Output_File",t).then((e=>e.value));return"async"===this.mode?this._geoprocessor.submitJob(e,t).then((e=>this._geoprocessor.waitForJobCompletion(e.jobId,{interval:this.updateDelay}).then(r))):this._geoprocessor.execute(e,t).then(r)}))},a._createOperationalLayers=async function(e,t){const r=[],i={layerView:null,printTemplate:t,view:e};let a=0;t.scalePreserved&&(a=t.outScale||e.scale);const n=v.getVisibleLayerViews(e,a);for(const s of n){const e=s.layer;if(!e.loaded||v.isGroupLayer(e))continue;let t;i.layerView=s,t=v.isBingMapsLayer(e)?this._createBingMapsLayerJSON(e):v.isCSVLayer(e)?await this._createCSVLayerJSON(e,i):v.isFeatureLayer(e)?await this._createFeatureLayerJSON(e,i):v.isGeoJSONLayer(e)?await this._createGeoJSONLayer(e,i):v.isGraphicsLayer(e)?await this._createGraphicsLayerJSON(e,i):v.isImageryLayer(e)?this._createImageryLayerJSON(e):v.isKMLLayer(e)?await this._createKMLLayerJSON(e,i):v.isMapImageLayer(e)?this._createMapImageLayerJSON(e,i):v.isMapNotesLayer(e)?await this._createMapNotesLayerJSON(i):v.isOpenStreetMapLayer(e)?this._createOpenStreetMapLayerJSON():v.isStreamLayer(e)?await this._createStreamLayerJSON(e,i):v.isTileLayer(e)?this._createTileLayerJSON(e):v.isVectorTileLayer(e)?await this._createVectorTileLayerJSON(e,i):v.isWebTileLayer(e)?this._createWebTileLayerJSON(e):v.isWMSLayer(e)?this._createWMSLayerJSON(e):v.isWMTSLayer(e)?this._createWMTSLayerJSON(e):await this._createScreenshotJSON(e,i),t&&(Array.isArray(t)?r.push(...t):(t.id=e.id,t.title=this._legendLayerNameMap[e.id]||e.title,t.opacity=e.opacity,t.minScale=e.minScale||0,t.maxScale=e.maxScale||0,r.push(t)))}if(a&&r.forEach((e=>{e.minScale=0,e.maxScale=0})),e.graphics&&e.graphics.length){const i=await this._createFeatureCollectionJSON(null,e.graphics,t);i&&r.push(i)}return r},a._createBingMapsLayerJSON=function(e){return{culture:e.culture,key:e.key,type:"BingMaps"+("aerial"===e.style?"Aerial":"hybrid"===e.style?"Hybrid":"Road")}},a._createCSVLayerJSON=async function(e,{layerView:t,printTemplate:r}){let i;if(this._legendLayers&&this._legendLayers.push({id:e.id}),!this._is11xService){const i=await this._getGraphics(t);return this._createFeatureCollectionJSON(e,i,r)}return i={type:"CSV"},e.write(i,{origin:"web-map"}),delete i.popupInfo,delete i.layerType,i.showLabels=r.showLabels&&e.labelsVisible,i},a._createFeatureCollectionJSON=async function(e,t,r){let i;const a=v.createPolygonLayer(),n=v.createPolylineLayer(),s=v.createPointLayer(),o=v.createMultipointLayer(),l=v.createPointLayer();if(l.layerDefinition.name="textLayer",delete l.layerDefinition.drawingInfo,e){if("esri.layers.FeatureLayer"===e.declaredClass||"esri.layers.StreamLayer"===e.declaredClass?a.layerDefinition.name=n.layerDefinition.name=s.layerDefinition.name=o.layerDefinition.name=this._legendLayerNameMap[e.id]||e.get("arcgisProps.title")||e.title:"esri.layers.GraphicsLayer"===e.declaredClass&&(t=e.graphics.items),e.renderer){const t=e.renderer.toJSON();a.layerDefinition.drawingInfo.renderer=t,n.layerDefinition.drawingInfo.renderer=t,s.layerDefinition.drawingInfo.renderer=t,o.layerDefinition.drawingInfo.renderer=t}if(r.showLabels&&e.labelsVisible&&"function"==typeof e.write){var c,u;const t=null==(c=e.write({},{origin:"web-map"}).layerDefinition)||null==(u=c.drawingInfo)?void 0:u.labelingInfo;t&&(i=!0,a.layerDefinition.drawingInfo.labelingInfo=t,n.layerDefinition.drawingInfo.labelingInfo=t,s.layerDefinition.drawingInfo.labelingInfo=t,o.layerDefinition.drawingInfo.labelingInfo=t)}}let y;null!=e&&e.renderer||i||(delete a.layerDefinition.drawingInfo,delete n.layerDefinition.drawingInfo,delete s.layerDefinition.drawingInfo,delete o.layerDefinition.drawingInfo);const p=e&&e.fields,f=e&&e.renderer;if(p&&f&&"function"==typeof f.collectRequiredFields){const e=new Set;await f.collectRequiredFields(e,p),y=Array.from(e)}if(p){const e=p.map((e=>e.toJSON()));a.layerDefinition.fields=e,n.layerDefinition.fields=e,s.layerDefinition.fields=e,o.layerDefinition.fields=e}const h=t&&t.length;let m;for(let S=0;S<h;S++){const i=t[S]||t.getItemAt(S);if(!1===i.visible||!i.geometry)continue;if(m=i.toJSON(),m.hasOwnProperty("popupTemplate")&&delete m.popupTemplate,m.geometry&&m.geometry.z&&delete m.geometry.z,m.symbol&&m.symbol.outline&&"esriCLS"===m.symbol.outline.type&&!this._is11xService)continue;!this._is11xService&&m.symbol&&m.symbol.outline&&m.symbol.outline.color&&m.symbol.outline.color[3]&&(m.symbol.outline.color[3]=255);const c=e&&e.renderer&&("valueExpression"in e.renderer&&e.renderer.valueExpression||"hasVisualVariables"in e.renderer&&e.renderer.hasVisualVariables());if(!m.symbol&&e&&e.renderer&&c&&!this._is11xService){const t=e.renderer,r=await t.getSymbolAsync(i);if(!r)continue;m.symbol=r.toJSON(),"hasVisualVariables"in t&&t.hasVisualVariables()&&v.applyVisualVariables(m.symbol,{renderer:t,graphic:i,symbol:r})}if(m.symbol&&(m.symbol.angle||delete m.symbol.angle,I(m.symbol)?m.symbol=await this._convertSvgToPictureMarkerSymbolJson(m.symbol):m.symbol.text&&delete m.attributes),(!r||!r.forceFeatureAttributes)&&y&&y.length){const e={};y.forEach((t=>{m.attributes&&m.attributes.hasOwnProperty(t)&&(e[t]=m.attributes[t])})),m.attributes=e}"polygon"===i.geometry.type?a.featureSet.features.push(m):"polyline"===i.geometry.type?n.featureSet.features.push(m):"point"===i.geometry.type?m.symbol&&m.symbol.text?l.featureSet.features.push(m):s.featureSet.features.push(m):"multipoint"===i.geometry.type?o.featureSet.features.push(m):"extent"===i.geometry.type&&(m.geometry=d.fromExtent(i.geometry).toJSON(),a.featureSet.features.push(m))}const g=[a,n,o,s,l].filter((e=>e.featureSet.features.length>0));for(const d of g){const e=d.featureSet.features.every((e=>e.symbol));!e||r&&r.forceFeatureAttributes||d.featureSet.features.forEach((e=>{delete e.attributes})),e&&delete d.layerDefinition.drawingInfo,d.layerDefinition.drawingInfo&&d.layerDefinition.drawingInfo.renderer&&await this._convertSvgRenderer(d.layerDefinition.drawingInfo.renderer)}return g.length?{featureCollection:{layers:g},showLabels:i}:null},a._createFeatureLayerJSON=async function(e,t){var r,i;let a;this._legendLayers&&this._legendLayers.push({id:e.id});const n=e.renderer;if(e.featureReduction||n&&"dot-density"===n.type&&(!this._is11xService||parseFloat(this._cimVersion)<2.6))return this._createScreenshotJSON(e,t);const{layerView:s,printTemplate:o,view:l}=t,c=n&&("valueExpression"in n&&n.valueExpression||"hasVisualVariables"in n&&n.hasVisualVariables()),u="feature-layer"!==(null==(r=e.source)?void 0:r.type)&&"ogc-feature"!==(null==(i=e.source)?void 0:i.type);if(!this._is11xService&&c||e.featureReduction||u||!n||"field"in n&&null!=n.field&&("string"!=typeof n.field||!e.getField(n.field))){const t=await this._getGraphics(s);a=await this._createFeatureCollectionJSON(e,t,o)}else{var y,p;if(a={id:(d=e.write()).id,title:d.title,opacity:d.opacity,minScale:d.minScale,maxScale:d.maxScale,url:d.url,layerDefinition:d.layerDefinition},a.showLabels=o.showLabels&&e.labelsVisible,this._setURLandToken(a,e),null!=(y=a.layerDefinition)&&null!=(p=y.drawingInfo)&&p.renderer&&(delete a.layerDefinition.minScale,delete a.layerDefinition.maxScale,await this._convertSvgRenderer(a.layerDefinition.drawingInfo.renderer),"visualVariables"in n&&n.visualVariables&&n.visualVariables[0])){const e=n.visualVariables[0];if("size"===e.type&&e.maxSize&&"number"!=typeof e.maxSize&&e.minSize&&"number"!=typeof e.minSize){const t=g.getSizeRangeAtScale(e,l.scale);a.layerDefinition.drawingInfo.renderer.visualVariables[0].minSize=t.minSize,a.layerDefinition.drawingInfo.renderer.visualVariables[0].maxSize=t.maxSize}}}var d;return a},a._createGeoJSONLayer=async function(e,{layerView:t,printTemplate:r}){this._legendLayers&&this._legendLayers.push({id:e.id});const i=await this._getGraphics(t);return this._createFeatureCollectionJSON(e,i,r)},a._createGraphicsLayerJSON=async function(e,{printTemplate:t}){return this._createFeatureCollectionJSON(e,null,t)},a._createImageryLayerJSON=function(e){this._legendLayers&&this._legendLayers.push({id:e.id});const t={bandIds:e.bandIds,compressionQuality:e.compressionQuality,format:e.format,interpolation:e.interpolation};if((e.mosaicRule||e.definitionExpression)&&(t.mosaicRule=e.exportImageServiceParameters.mosaicRule.toJSON()),e.renderingRule||e.renderer)if(this._is11xService)e.renderingRule&&(t.renderingRule=e.renderingRule.toJSON()),e.renderer&&(t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.renderer.toJSON());else{const r=e.exportImageServiceParameters.combineRendererWithRenderingRule();r&&(t.renderingRule=r.toJSON())}return this._setURLandToken(t,e),t},a._createKMLLayerJSON=async function(e,t){const r=t.printTemplate;if(this._is11xService){const t={type:"kml"};return e.write(t,{origin:"web-map"}),delete t.layerType,t.url=u.normalize(e.url),t}{const i=[],a=t.layerView;a.allVisibleMapImages.forEach(((t,r)=>{const a={id:`${e.id}_image${r}`,type:"image",title:e.id,minScale:e.minScale||0,maxScale:e.maxScale||0,opacity:e.opacity,extent:t.extent};"data:image/png;base64,"===t.href.substr(0,22)?a.imageData=t.href.substr(22):a.url=t.href,i.push(a)}));const n=[...a.allVisiblePoints.items,...a.allVisiblePolylines.items,...a.allVisiblePolygons.items],s={id:e.id,...await this._createFeatureCollectionJSON(null,n,r)};return i.push(s),i}},a._createMapImageLayerJSON=function(e,{view:t}){let r;const i={id:e.id,subLayerIds:[]};let a=[];const n=t.scale,s=e=>{const t=0===n,r=0===e.minScale||n<=e.minScale,o=0===e.maxScale||n>=e.maxScale;if(e.visible&&(t||r&&o))if(e.sublayers)e.sublayers.forEach(s);else{const t=e.toExportImageJSON(),r={id:e.id,name:e.title,layerDefinition:{drawingInfo:t.drawingInfo,definitionExpression:t.definitionExpression,source:t.source}};a.unshift(r),i.subLayerIds.push(e.id)}};return e.sublayers&&e.sublayers.forEach(s),a.length&&(a=a.map((({id:e,name:t,layerDefinition:r})=>({id:e,name:t,layerDefinition:r}))),r={layers:a,visibleLayers:e.capabilities.exportMap.supportsDynamicLayers?void 0:i.subLayerIds},this._setURLandToken(r,e),this._legendLayers.push(i)),r},a._createMapNotesLayerJSON=async function({layerView:e,printTemplate:t}){const r=[],a=e.layer;if(i.isSome(a.featureCollections))for(const i of a.featureCollections){const e=await this._createFeatureCollectionJSON(i,i.source,t);e&&r.push(...e.featureCollection.layers)}else if(i.isSome(a.sublayers))for(const i of a.sublayers){const e=await this._createFeatureCollectionJSON(null,i.graphics,t);e&&r.push(...e.featureCollection.layers)}return{featureCollection:{layers:r}}},a._createOpenStreetMapLayerJSON=function(){return{type:"OpenStreetMap"}},a._createScreenshotJSON=async function(e,{printTemplate:t,view:r}){const i={type:"image"},a={format:"png",ignoreBackground:!0,layers:[e],rotation:0},n=this._ssExtent||r.extent.clone();let s=96,o=!0,l=!0;if(t.exportOptions){const e=t.exportOptions;e.dpi>0&&(s=e.dpi),e.width>0&&(o=e.width%2==r.width%2),e.height>0&&(l=e.height%2==r.height%2)}if("map-only"===t.layout&&t.scalePreserved&&(!t.outScale||t.outScale===r.scale)&&96===s&&(!o||!l)&&(a.area={x:0,y:0,width:r.width,height:r.height},o||(a.area.width-=1),l||(a.area.height-=1),!this._ssExtent)){const e=r.toMap(f.createScreenPoint(a.area.width,a.area.height));n.ymin=e.y,n.xmax=e.x,this._ssExtent=n}i.extent=n.clone()._normalize(!0).toJSON();const c=await r.takeScreenshot(a),y=u.dataComponents(c.dataUrl);return i.imageData=y.data,i},a._createStreamLayerJSON=async function(e,{layerView:t,printTemplate:r}){this._legendLayers&&this._legendLayers.push({id:e.id});const i=await this._getGraphics(t);return this._createFeatureCollectionJSON(e,i,r)},a._createTileLayerJSON=function(e){const t={customParameters:e.customParameters};return this._setURLandToken(t,e),t},a._createVectorTileLayerJSON=async function(e,t){if(this._is11xService&&e.serviceUrl&&e.styleUrl){const t=h.id&&h.id.findCredential(e.styleUrl),r=h.id&&h.id.findCredential(e.serviceUrl);if(!t&&!r||"2.1.0"!==this._cimVersion){const i={type:"VectorTileLayer"};return i.styleUrl=u.normalize(e.styleUrl),t&&(i.token=t.token),r&&r.token!==i.token&&(i.additionalTokens=[{url:e.serviceUrl,token:r.token}]),i}}return this._createScreenshotJSON(e,t)},a._createWebTileLayerJSON=function(e){const t={type:"WebTiledLayer",urlTemplate:e.urlTemplate.replace(/\${/g,"{"),credits:e.copyright};return e.subDomains&&e.subDomains.length>0&&(t.subDomains=e.subDomains),t},a._createWMSLayerJSON=function(e){let t;const r=[],i=e=>{e.visible&&(e.sublayers?e.sublayers.forEach(i):e.name&&r.unshift(e.name))};return e.sublayers&&e.sublayers.forEach(i),r.length&&(t={type:"wms",customLayerParameters:e.customLayerParameters,customParameters:e.customParameters,transparentBackground:e.imageTransparency,visibleLayers:r,url:u.normalize(e.url),version:e.version}),t},a._createWMTSLayerJSON=function(e){const t=e.activeLayer;return{type:"wmts",customLayerParameters:e.customLayerParameters,customParameters:e.customParameters,format:t.imageFormat,layer:t.id,style:t.styleId,tileMatrixSet:t.tileMatrixSetId,url:u.normalize(e.url)}},a._setURLandToken=function(e,t){var r;if(!t.url)return;e.url=u.normalize(e.url||t.url);const i=null==(r=h.id)?void 0:r.findCredential(t.url);i&&(e.token=i.token)},a._convertSvgToPictureMarkerSymbolJson=async function(e){this._canvas||(this._canvas=document.createElement("canvas"));const t=1024;this._canvas.width=t,this._canvas.height=t;const r=this._canvas.getContext("2d");let i,a;if(e.path){var n;const s=new Path2D(e.path);s.closePath(),r.fillStyle=Array.isArray(e.color)?`rgba(${e.color[0]},${e.color[1]},${e.color[2]},${e.color[3]/255})`:"rgb(0,0,0)",r.fill(s);const o=v.getContextBoundingBox(r);if(!o)return null;r.clearRect(0,0,t,t);const l=f.pt2px(e.size)/Math.max(o.width,o.height);r.scale(l,l);const c=t/l,u=c/2-o.width/2-o.x,y=c/2-o.height/2-o.y;if(r.translate(u,y),Array.isArray(e.color)&&r.fill(s),null!=(n=e.outline)&&n.width&&Array.isArray(e.outline.color)){const t=e.outline;r.lineWidth=f.pt2px(t.width)/l,r.lineJoin="round",r.strokeStyle=`rgba(${t.color[0]},${t.color[1]},${t.color[2]},${t.color[3]/255})`,r.stroke(s),o.width+=r.lineWidth,o.height+=r.lineWidth}o.width*=l,o.height*=l;const p=r.getImageData(t/2-o.width/2,t/2-o.height/2,Math.ceil(o.width),Math.ceil(o.height));i=p.width,a=p.height,r.canvas.width=i,r.canvas.height=a,r.putImageData(p,0,0)}else{const t="image/svg+xml"===e.contentType?"data:image/svg+xml;base64,"+e.imageData:e.url,n=(await m(t,{responseType:"image"})).data;i=f.pt2px(e.width),a=f.pt2px(e.height),r.canvas.width=i,r.canvas.height=a,r.drawImage(n,0,0,r.canvas.width,r.canvas.height)}return{type:"esriPMS",imageData:r.canvas.toDataURL("image/png").substr(22),angle:e.angle,contentType:"image/png",height:f.px2pt(a),width:f.px2pt(i),xoffset:e.xoffset,yoffset:e.yoffset}},a._convertSvgRenderer=async function(e){const t=e.type;if("simple"===t&&I(e.symbol))e.symbol=await this._convertSvgToPictureMarkerSymbolJson(e.symbol);else if("uniqueValue"===t||"classBreaks"===t){I(e.defaultSymbol)&&(e.defaultSymbol=await this._convertSvgToPictureMarkerSymbolJson(e.defaultSymbol));const r=e["uniqueValue"===t?"uniqueValueInfos":"classBreakInfos"];if(r)for(const e of r)I(e.symbol)&&(e.symbol=await this._convertSvgToPictureMarkerSymbolJson(e.symbol))}},a._getGraphics=function(e){return e.queryFeatures(M).then((e=>e.features))},a._getPrintDefinition=async function(e,t){const r=e.view;let i=r.spatialReference;const a={operationalLayers:await this._createOperationalLayers(r,t)};let n=this._ssExtent||e.extent||r.extent;return i&&i.isWrappable&&(n=n.clone()._normalize(!0),i=n.spatialReference),a.mapOptions={extent:n&&n.toJSON(),spatialReference:i&&i.toJSON(),showAttribution:t.attributionVisible},this._ssExtent=null,r.background&&(a.background=r.background.toJSON()),r.rotation&&(a.mapOptions.rotation=-r.rotation),t.scalePreserved&&(a.mapOptions.scale=t.outScale||r.scale),a},a._getGpPrintParams=async function(e){const t=e.template||new x;null==t.showLabels&&(t.showLabels=!0);const r=t.exportOptions;let i;const a=L.toJSON(t.layout);if(r){if(i={dpi:r.dpi},"map_only"===a.toLowerCase()||""===a){const e=r.width,t=r.height;i.outputSize=[e,t]}}const n=t.layoutOptions;let s;if(n){let e,t;"Miles"===n.scalebarUnit||"Kilometers"===n.scalebarUnit?(e="Kilometers",t="Miles"):"Meters"!==n.scalebarUnit&&"Feet"!==n.scalebarUnit||(e="Meters",t="Feet"),s={titleText:n.titleText,authorText:n.authorText,copyrightText:n.copyrightText,customTextElements:n.customTextElements,scaleBarOptions:{metricUnit:J.toJSON(e),metricLabel:O[e],nonMetricUnit:J.toJSON(t),nonMetricLabel:O[t]}}}let o=null;n&&n.legendLayers&&(o=n.legendLayers.map((e=>{this._legendLayerNameMap[e.layerId]=e.title;const t={id:e.layerId};return e.subLayerIds&&(t.subLayerIds=e.subLayerIds),t})));const l=await this._getPrintDefinition(e,t);if(l.operationalLayers){const e=new RegExp("[\\u4E00-\\u9FFF\\u0E00-\\u0E7F\\u0900-\\u097F\\u3040-\\u309F\\u30A0-\\u30FF\\u31F0-\\u31FF]"),t=/[\u0600-\u06FF]/,r=r=>{const i=r.text,a=r.font,n=a&&a.family&&a.family.toLowerCase();i&&a&&("arial"===n||"arial unicode ms"===n)&&(a.family=e.test(i)?"Arial Unicode MS":"Arial","normal"!==a.style&&t.test(i)&&(a.family="Arial Unicode MS"))},i=()=>{throw new c("print-task:cim-symbol-unsupported","CIMSymbol is not supported by a print service published from ArcMap")};l.operationalLayers.forEach((e=>{var t,a,n;null!=(t=e.featureCollection)&&t.layers?e.featureCollection.layers.forEach((e=>{var t,a,n,s;if(null!=(t=e.layerDefinition)&&null!=(a=t.drawingInfo)&&null!=(n=a.renderer)&&n.symbol){const t=e.layerDefinition.drawingInfo.renderer;"esriTS"===t.symbol.type?r(t.symbol):"CIMSymbolReference"!==t.symbol.type||this._is11xService||i()}null!=(s=e.featureSet)&&s.features&&e.featureSet.features.forEach((e=>{e.symbol&&("esriTS"===e.symbol.type?r(e.symbol):"CIMSymbolReference"!==e.symbol.type||this._is11xService||i())}))})):!this._is11xService&&null!=(a=e.layerDefinition)&&null!=(n=a.drawingInfo)&&n.renderer&&JSON.stringify(e.layerDefinition.drawingInfo.renderer).includes('"type":"CIMSymbolReference"')&&i()}))}e.outSpatialReference&&(l.mapOptions.spatialReference=e.outSpatialReference.toJSON()),Object.assign(l,{exportOptions:i,layoutOptions:s||{}}),Object.assign(l.layoutOptions,{legendOptions:{operationalLayers:null!=o?o:this._legendLayers.slice()}}),this._legendLayers.length=0;const u={Web_Map_as_JSON:JSON.stringify(l),Format:w.toJSON(t.format),Layout_Template:a};return e.extraParameters&&Object.assign(u,e.extraParameters),u},e._createClass(r,[{key:"_geoprocessor",get:function(){return new _({url:this.url})}},{key:"mode",get:function(){return this._gpMetadata&&this._gpMetadata.executionType?N.fromJSON(this._gpMetadata.executionType):"sync"}}]),r}(b);return t.__decorate([s.property()],D.prototype,"_geoprocessor",null),t.__decorate([s.property()],D.prototype,"_gpMetadata",void 0),t.__decorate([s.property({readOnly:!0})],D.prototype,"mode",null),t.__decorate([s.property()],D.prototype,"updateDelay",void 0),D=t.__decorate([l.subclass("esri.tasks.PrintTask")],D),D}));
