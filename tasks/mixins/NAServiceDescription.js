/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/object","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/Error","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../request","../Task"],(function(e,r,t,s,o,i,n,a,l,c,u,d,p,v,f,h){"use strict";async function T(e,r){try{const{data:{supportedTravelModes:t,defaultTravelMode:s}}=await f(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json",token:r}});return{supportedTravelModes:t,defaultTravelMode:s}}catch(t){throw new u("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:t})}}async function M(e,r){const{data:t}=await f(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json",token:r}});if(!t||!t.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=t.owningSystemUrl;const{data:s}=await f(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json",token:r}}),i=o.getDeepValue("helperServices.routingUtilities.url",s);if(!i)return{supportedTravelModes:[],defaultTravelMode:null};const n=d.urlToObject(e),a=/\/solveClosestFacility$/.test(n.path)?"Route":/\/solveClosestFacility$/.test(n.path)?"ClosestFacility":"ServiceAreas",l=await f(i+("/"===i[i.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:a,token:r}}),c=[];let u=null;if(l&&l.data&&l.data.results&&l.data.results.length){const e=l.data.results;for(const r of e)if("supportedTravelModes"===r.paramName){if(r.value&&r.value.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);c.push(r)}}else"defaultTravelMode"===r.paramName&&(u=r.value)}return{supportedTravelModes:c,defaultTravelMode:u}}const y=e=>{let s=function(e){function t(){return e.apply(this,arguments)||this}r._inheritsLoose(t,e);var s=t.prototype;return s.getServiceDescription=async function(e){return this._serviceDescriptionPromise||(this._serviceDescriptionPromise=this._fetchServiceDescription(e)),this._serviceDescriptionPromise},s._fetchServiceDescription=async function(e){if(!this.url||!this.parsedUrl)throw new u("network-service:missing-url","Url to Network service is missing");const r=this.url,{data:t}=await f(r,{query:{f:"json",token:e}});t.supportedTravelModes||(t.supportedTravelModes=[]);for(let n=0;n<t.supportedTravelModes.length;n++)t.supportedTravelModes[n].id||(t.supportedTravelModes[n].id=t.supportedTravelModes[n].itemId);const s=t.currentVersion>=10.4?T(r,e):M(r,e),{defaultTravelMode:o,supportedTravelModes:i}=await s;return t.defaultTravelMode=o,t.supportedTravelModes=i,t},s._isInputGeometryZAware=function(e,r){for(let t=0;t<r.length;t++){const s=e[r[t]];if(s&&s.length)for(const e of s)if(i.isSome(e)&&e.hasZ)return!0}return!1},s._dropZValuesOffInputGeometry=function(e,r){for(let t=0;t<r.length;t++){const s=e[r[t]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")},t}(e);return s=t.__decorate([c.subclass("esri.tasks.mixins.NAServiceDescription")],s),s};e.NAServiceDescription=function(e){function t(){return e.apply(this,arguments)||this}return r._inheritsLoose(t,e),t}(y(h)),e.NAServiceDescription=t.__decorate([c.subclass("esri.tasks.mixins.NAServiceDescription")],e.NAServiceDescription),e.NAServiceDescriptionMixin=y,Object.defineProperty(e,"__esModule",{value:!0})}));
