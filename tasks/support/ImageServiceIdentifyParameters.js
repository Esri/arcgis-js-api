/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/lang","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/deprecate","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/JSONSupport","../../geometry/Point","../../geometry/support/jsonUtils","../../TimeExtent","../../layers/support/RasterFunction","../../layers/support/MosaicRule"],(function(e,t,r,o,i,n,s,p,u,l,a,c,y,d,m,g,_,w,S){"use strict";var R;const f=i.getLogger("esri.tasks.support.ImageServiceIdentifyParameters");p.deprecatedModule(f,"esri/tasks/support/ImageServiceIdentifyParameters",{replacement:"esri/tasks/support/ImageIdentifyParameters"});let x=R=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).geometry=null,e.renderingRules=null,e.pixelSize=null,e.returnGeometry=!0,e.returnCatalogItems=!0,e.returnPixelValues=!0,e.maxItemCount=null,e.timeExtent=null,e.raster=void 0,e.viewId=void 0,e}e._inheritsLoose(r,t);var i=r.prototype;return i.writeGeometry=function(e,t,r){null!=e&&(t.geometryType=g.getJsonType(e),t[r]=JSON.stringify(e.toJSON()))},i.writeMosaicRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},i.writeRenderingRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},i.writeRenderingRules=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))},i.writePixelSize=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},i.writeTimeExtent=function(e,t,r){if(null!=e){const o=e.start?e.start.getTime():null,i=e.end?e.end.getTime():null;t[r]=null!=o?null!=i?`${o},${i}`:`${o}`:null}},i.clone=function(){return new R(o.clone({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))},e._createClass(r,[{key:"mosaicRule",set:function(e){let t=e;t&&t.mosaicMethod&&(t=S.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}},{key:"renderingRule",set:function(e){let t=e;t&&t.rasterFunction&&(t=w.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}}]),r}(d.JSONSupport);return t.__decorate([s.property({json:{write:!0}})],x.prototype,"geometry",void 0),t.__decorate([l.writer("geometry")],x.prototype,"writeGeometry",null),t.__decorate([s.property({type:S,json:{write:!0}})],x.prototype,"mosaicRule",null),t.__decorate([l.writer("mosaicRule")],x.prototype,"writeMosaicRule",null),t.__decorate([s.property({type:w,json:{write:!0}})],x.prototype,"renderingRule",null),t.__decorate([l.writer("renderingRule")],x.prototype,"writeRenderingRule",null),t.__decorate([s.property({type:[w],json:{write:!0}})],x.prototype,"renderingRules",void 0),t.__decorate([l.writer("renderingRules")],x.prototype,"writeRenderingRules",null),t.__decorate([s.property({type:m,json:{write:!0}})],x.prototype,"pixelSize",void 0),t.__decorate([l.writer("pixelSize")],x.prototype,"writePixelSize",null),t.__decorate([s.property({type:Boolean,json:{write:!0}})],x.prototype,"returnGeometry",void 0),t.__decorate([s.property({type:Boolean,json:{write:!0}})],x.prototype,"returnCatalogItems",void 0),t.__decorate([s.property({type:Boolean,json:{write:!0}})],x.prototype,"returnPixelValues",void 0),t.__decorate([s.property({type:Number,json:{write:!0}})],x.prototype,"maxItemCount",void 0),t.__decorate([s.property({type:_,json:{write:{target:"time"}}})],x.prototype,"timeExtent",void 0),t.__decorate([l.writer("timeExtent")],x.prototype,"writeTimeExtent",null),t.__decorate([s.property({json:{write:!0}})],x.prototype,"raster",void 0),t.__decorate([s.property({json:{write:!0}})],x.prototype,"viewId",void 0),x=R=t.__decorate([u.subclass("esri.tasks.support.ImageServiceIdentifyParameters")],x),x}));
