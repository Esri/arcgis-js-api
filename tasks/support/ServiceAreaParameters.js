/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/accessorSupport/decorators/property","../../core/jsonMap","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/JSONSupport","../../geometry/SpatialReference","../../geometry"],(function(e,r,t,o,i,p,a,n,s,l){"use strict";const y=new o.JSONMap({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),u=new o.JSONMap({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),d=new o.JSONMap({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),c=new o.JSONMap({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),_=new o.JSONMap({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"});let m=function(r){function t(e){var t;return(t=r.call(this,e)||this).accumulateAttributes=null,t.attributeParameterValues=null,t.defaultBreaks=null,t.doNotLocateOnRestrictedElements=!0,t.excludeSourcesFromPolygons=null,t.facilities=null,t.impedanceAttribute=null,t.mergeSimilarPolygonRanges=!1,t.outputGeometryPrecision=null,t.outputGeometryPrecisionUnits=null,t.outputLines=null,t.outputPolygons=null,t.outSpatialReference=null,t.overlapLines=!1,t.overlapPolygons=!1,t.pointBarriers=null,t.polygonBarriers=null,t.polylineBarriers=null,t.restrictionAttributes=null,t.restrictUTurns=null,t.returnFacilities=!1,t.returnPointBarriers=!1,t.returnPolygonBarriers=!1,t.returnPolylineBarriers=!1,t.splitLinesAtBreaks=!1,t.splitPolygonsAtBreaks=!1,t.timeOfDay=null,t.travelDirection=null,t.travelMode=null,t.trimOuterPolygon=!1,t.trimPolygonDistance=null,t.trimPolygonDistanceUnits=null,t.useHierarchy=null,t}e._inheritsLoose(t,r);var o=t.prototype;return o.readTimeOfDay=function(e,r){return null!=r.timeOfDay?new Date(r.timeOfDay):null},o.writeTimeOfDay=function(e,r){r.timeOfDay=e?e.getTime():null},t}(n.JSONSupport);return r.__decorate([t.property({type:[String],json:{write:!0}})],m.prototype,"accumulateAttributes",void 0),r.__decorate([t.property({json:{write:!0}})],m.prototype,"attributeParameterValues",void 0),r.__decorate([t.property({type:[Number],json:{write:!0}})],m.prototype,"defaultBreaks",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"doNotLocateOnRestrictedElements",void 0),r.__decorate([t.property({type:[String],json:{write:!0}})],m.prototype,"excludeSourcesFromPolygons",void 0),r.__decorate([t.property({json:{write:!0}})],m.prototype,"facilities",void 0),r.__decorate([t.property({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],m.prototype,"impedanceAttribute",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"mergeSimilarPolygonRanges",void 0),r.__decorate([t.property({type:Number,json:{write:!0}})],m.prototype,"outputGeometryPrecision",void 0),r.__decorate([t.property({type:_.apiValues,json:{read:{reader:_.read},write:{writer:_.write}}})],m.prototype,"outputGeometryPrecisionUnits",void 0),r.__decorate([t.property({type:y.apiValues,json:{read:{reader:y.read},write:{writer:y.write}}})],m.prototype,"outputLines",void 0),r.__decorate([t.property({type:u.apiValues,json:{read:{reader:u.read},write:{writer:u.write}}})],m.prototype,"outputPolygons",void 0),r.__decorate([t.property({type:s,json:{write:!0}})],m.prototype,"outSpatialReference",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"overlapLines",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"overlapPolygons",void 0),r.__decorate([t.property({json:{write:!0}})],m.prototype,"pointBarriers",void 0),r.__decorate([t.property({json:{write:!0}})],m.prototype,"polygonBarriers",void 0),r.__decorate([t.property({json:{write:!0}})],m.prototype,"polylineBarriers",void 0),r.__decorate([t.property({type:[String],json:{write:!0}})],m.prototype,"restrictionAttributes",void 0),r.__decorate([t.property({type:d.apiValues,json:{read:{reader:d.read},write:{writer:d.write}}})],m.prototype,"restrictUTurns",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"returnFacilities",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"returnPointBarriers",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"returnPolygonBarriers",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"returnPolylineBarriers",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"splitLinesAtBreaks",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"splitPolygonsAtBreaks",void 0),r.__decorate([t.property({type:Date,json:{type:Number,write:!0}})],m.prototype,"timeOfDay",void 0),r.__decorate([i.reader("timeOfDay")],m.prototype,"readTimeOfDay",null),r.__decorate([a.writer("timeOfDay")],m.prototype,"writeTimeOfDay",null),r.__decorate([t.property({type:c.apiValues,json:{read:{reader:c.read},write:{writer:c.write}}})],m.prototype,"travelDirection",void 0),r.__decorate([t.property({json:{write:!0}})],m.prototype,"travelMode",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"trimOuterPolygon",void 0),r.__decorate([t.property({type:Number,json:{write:!0}})],m.prototype,"trimPolygonDistance",void 0),r.__decorate([t.property({type:_.apiValues,json:{read:{reader:_.read},write:{writer:_.write}}})],m.prototype,"trimPolygonDistanceUnits",void 0),r.__decorate([t.property({type:Boolean,json:{write:!0}})],m.prototype,"useHierarchy",void 0),m=r.__decorate([p.subclass("esri.tasks.support.ServiceAreaParameters")],m),m}));
