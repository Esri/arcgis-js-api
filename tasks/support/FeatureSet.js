/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/jsonMap","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/JSONSupport","../../geometry/SpatialReference","../../geometry/support/jsonUtils","../../geometry","../../Graphic","../../layers/support/Field"],(function(e,t,r,o,n,i,s,p,a,l,y,c,u,f,d,m,g,h,_,S){"use strict";const v=new p.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let w=function(t){function r(e){var r;return(r=t.call(this,e)||this).displayFieldName=null,r.exceededTransferLimit=!1,r.features=[],r.fields=null,r.geometryType=null,r.hasM=!1,r.hasZ=!1,r.queryGeometry=null,r.spatialReference=null,r}e._inheritsLoose(r,t);var n=r.prototype;return n.readFeatures=function(e,t){const r=m.fromJSON(t.spatialReference),n=[];for(let i=0;i<e.length;i++){const t=e[i],s=_.fromJSON(t),p=t.geometry&&t.geometry.spatialReference;o.isSome(s.geometry)&&!p&&(s.geometry.spatialReference=r),n.push(s)}return n},n.writeGeometryType=function(e,t,r,n){if(e)return void v.write(e,t,r,n);const{features:i}=this;if(i)for(const s of i)if(s&&o.isSome(s.geometry))return void v.write(s.geometry.type,t,r,n)},n.readQueryGeometry=function(e,t){if(!e)return null;const r=!!e.spatialReference,o=g.fromJSON(e);return!r&&t.spatialReference&&(o.spatialReference=m.fromJSON(t.spatialReference)),o},n.writeSpatialReference=function(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const n of r)if(n&&o.isSome(n.geometry)&&n.geometry.spatialReference)return void(t.spatialReference=n.geometry.spatialReference.toJSON())},n.toJSON=function(e){const t=this.write(null);if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const o=t.features[r];if(o.geometry){const t=e&&e[r];o.geometry=t&&t.toJSON()||o.geometry}}return t},n.quantize=function(e){const{scale:[t,r],translate:[n,i]}=e,s=e=>Math.round((e-n)/t),p=e=>Math.round((i-e)/r),a=this.features,l=this._getQuantizationFunction(this.geometryType,s,p);for(let y=0,c=a.length;y<c;y++)l(o.unwrap(a[y].geometry))||(a.splice(y,1),y--,c--);return this.transform=e,this},n.unquantize=function(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[n,i],scale:[s,p]}=r,a=e=>e*s+n,l=e=>i-e*p,y=this._getHydrationFunction(e,a,l);for(const{geometry:c}of t)o.isSome(c)&&y(c);return this.transform=null,this},n._quantizePoints=function(e,t,r){let o,n;const i=[];for(let s=0,p=e.length;s<p;s++){const p=e[s];if(s>0){const e=t(p[0]),s=r(p[1]);e===o&&s===n||(i.push([e-o,s-n]),o=e,n=s)}else o=t(p[0]),n=r(p[1]),i.push([o,n])}return i.length>0?i:null},n._getQuantizationFunction=function(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const o=g.isPolygon(e)?e.rings:e.paths,n=[];for(let i=0,s=o.length;i<s;i++){const e=o[i],s=this._quantizePoints(e,t,r);s&&n.push(s)}return n.length>0?(g.isPolygon(e)?e.rings=n:e.paths=n,e):null}:"multipoint"===e?e=>{const o=this._quantizePoints(e.points,t,r);return o.length>0?(e.points=o,e):null}:"extent"===e?e=>e:null},n._getHydrationFunction=function(e,t,r){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y)}:"polyline"===e||"polygon"===e?e=>{const o=g.isPolygon(e)?e.rings:e.paths;let n,i;for(let s=0,p=o.length;s<p;s++){const e=o[s];for(let o=0,s=e.length;o<s;o++){const s=e[o];o>0?(n+=s[0],i+=s[1]):(n=s[0],i=s[1]),s[0]=t(n),s[1]=r(i)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax)}:"multipoint"===e?e=>{const o=e.points;let n,i;for(let s=0,p=o.length;s<p;s++){const e=o[s];s>0?(n+=e[0],i+=e[1]):(n=e[0],i=e[1]),e[0]=t(n),e[1]=r(i)}}:void 0},r}(d.JSONSupport);return t.__decorate([s.property({type:String,json:{write:!0}})],w.prototype,"displayFieldName",void 0),t.__decorate([s.property({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"exceededTransferLimit",void 0),t.__decorate([s.property({type:[_],json:{write:!0}})],w.prototype,"features",void 0),t.__decorate([a.reader("features")],w.prototype,"readFeatures",null),t.__decorate([s.property({type:[S],json:{write:!0}})],w.prototype,"fields",void 0),t.__decorate([s.property({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:v.read}}})],w.prototype,"geometryType",void 0),t.__decorate([y.writer("geometryType")],w.prototype,"writeGeometryType",null),t.__decorate([s.property({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"hasM",void 0),t.__decorate([s.property({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"hasZ",void 0),t.__decorate([s.property({types:h.geometryTypes,json:{write:!0}})],w.prototype,"queryGeometry",void 0),t.__decorate([a.reader("queryGeometry")],w.prototype,"readQueryGeometry",null),t.__decorate([s.property({type:m,json:{write:!0}})],w.prototype,"spatialReference",void 0),t.__decorate([y.writer("spatialReference")],w.prototype,"writeSpatialReference",null),t.__decorate([s.property({json:{write:!0}})],w.prototype,"transform",void 0),w=t.__decorate([l.subclass("esri.tasks.support.FeatureSet")],w),w.prototype.toJSON.isDefaultToJSON=!0,w||(w={}),w}));
