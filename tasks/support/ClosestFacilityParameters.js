// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../geometry","../../core/jsonMap","../../core/JSONSupport","../../core/accessorSupport/decorators"],(function(e,t,r,i,o,s,a){"use strict";var n=new o.default({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),p=new o.default({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),l=new o.default({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),d=new o.default({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),y=new o.default({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),u=new o.default({esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),c=new o.default({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"});return function(e){function t(t){var r=e.call(this,t)||this;return r.accumulateAttributes=null,r.attributeParameterValues=null,r.defaultCutoff=null,r.defaultTargetFacilityCount=null,r.directionsLanguage=null,r.directionsLengthUnits=null,r.directionsOutputType=null,r.directionsStyleName=null,r.directionsTimeAttribute=null,r.doNotLocateOnRestrictedElements=!0,r.facilities=null,r.impedanceAttribute=null,r.incidents=null,r.outputGeometryPrecision=null,r.outputGeometryPrecisionUnits=null,r.outputLines=null,r.outSpatialReference=null,r.pointBarriers=null,r.polygonBarriers=null,r.polylineBarriers=null,r.restrictionAttributes=null,r.restrictUTurns=null,r.returnDirections=!1,r.returnFacilities=!1,r.returnIncidents=!1,r.returnPointBarriers=!1,r.returnPolygonBarriers=!1,r.returnPolylineBarriers=!1,r.returnRoutes=!0,r.timeOfDay=null,r.timeOfDayUsage=null,r.travelDirection=null,r.travelMode=null,r.useHierarchy=!1,r}return r.__extends(t,e),t.prototype.readTimeOfDay=function(e,t){return null!=t.timeOfDay?new Date(t.timeOfDay):null},t.prototype.writeTimeOfDay=function(e,t){t.timeOfDay=e?e.getTime():null},r.__decorate([a.property({type:[String],json:{write:!0}})],t.prototype,"accumulateAttributes",void 0),r.__decorate([a.property({json:{write:!0}})],t.prototype,"attributeParameterValues",void 0),r.__decorate([a.property({type:Number,json:{write:!0}})],t.prototype,"defaultCutoff",void 0),r.__decorate([a.property({type:Number,json:{write:!0}})],t.prototype,"defaultTargetFacilityCount",void 0),r.__decorate([a.property({type:String,json:{write:!0}})],t.prototype,"directionsLanguage",void 0),r.__decorate([a.property({type:p.apiValues,json:{read:{reader:p.read},write:{writer:p.write}}})],t.prototype,"directionsLengthUnits",void 0),r.__decorate([a.property({type:d.apiValues,json:{read:{reader:d.read},write:{writer:d.write}}})],t.prototype,"directionsOutputType",void 0),r.__decorate([a.property({type:String,json:{write:!0}})],t.prototype,"directionsStyleName",void 0),r.__decorate([a.property({type:String,json:{write:!0}})],t.prototype,"directionsTimeAttribute",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"doNotLocateOnRestrictedElements",void 0),r.__decorate([a.property({json:{write:!0}})],t.prototype,"facilities",void 0),r.__decorate([a.property({type:String,json:{write:!0}})],t.prototype,"impedanceAttribute",void 0),r.__decorate([a.property({json:{write:!0}})],t.prototype,"incidents",void 0),r.__decorate([a.property({type:Number,json:{write:!0}})],t.prototype,"outputGeometryPrecision",void 0),r.__decorate([a.property({type:c.apiValues,json:{read:{reader:c.read},write:{writer:c.write}}})],t.prototype,"outputGeometryPrecisionUnits",void 0),r.__decorate([a.property({type:n.apiValues,json:{read:{reader:n.read},write:{writer:n.write}}})],t.prototype,"outputLines",void 0),r.__decorate([a.property({type:i.SpatialReference,json:{write:!0}})],t.prototype,"outSpatialReference",void 0),r.__decorate([a.property({json:{write:!0}})],t.prototype,"pointBarriers",void 0),r.__decorate([a.property({json:{write:!0}})],t.prototype,"polygonBarriers",void 0),r.__decorate([a.property({json:{write:!0}})],t.prototype,"polylineBarriers",void 0),r.__decorate([a.property({type:[String],json:{write:!0}})],t.prototype,"restrictionAttributes",void 0),r.__decorate([a.property({type:l.apiValues,json:{read:{reader:l.read},write:{writer:l.write}}})],t.prototype,"restrictUTurns",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"returnDirections",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"returnFacilities",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"returnIncidents",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"returnPointBarriers",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"returnPolygonBarriers",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"returnPolylineBarriers",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"returnRoutes",void 0),r.__decorate([a.property({type:Date,json:{type:Number,write:!0}})],t.prototype,"timeOfDay",void 0),r.__decorate([a.reader("timeOfDay")],t.prototype,"readTimeOfDay",null),r.__decorate([a.writer("timeOfDay")],t.prototype,"writeTimeOfDay",null),r.__decorate([a.property({type:u.apiValues,json:{read:{reader:u.read},write:{writer:u.write}}})],t.prototype,"timeOfDayUsage",void 0),r.__decorate([a.property({type:y.apiValues,json:{read:{reader:y.read},write:{writer:y.write}}})],t.prototype,"travelDirection",void 0),r.__decorate([a.property({json:{write:!0}})],t.prototype,"travelMode",void 0),r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"useHierarchy",void 0),t=r.__decorate([a.subclass("esri.tasks.support.ClosestFacilityParameters")],t)}(s.JSONSupport)}));