/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../chunks/_rollupPluginBabelHelpers","../request","../core/Error","../core/Logger","../core/maybe","../core/object","../core/urlUtils","./utils","./support/NetworkServiceDescription"],(function(e,r,t,o,s,n,a,l,i,u){"use strict";const c=s.getLogger("esri.rest.networkService");function d(e,r,t,o){o[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}function f(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)e.z=void 0}c.warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function p(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)if(n.isSome(e)&&e.hasZ)return!0}return!1}function v(e,r,t){return h.apply(this,arguments)}function h(){return(h=r._asyncToGenerator((function*(e,r,s){if(!e)throw new o("network-service:missing-url","Url to Network service is missing");const n={f:"json",token:r},a=i.asValidOptions(n,s),{data:l}=yield t(e,a),c=l.currentVersion>=10.4?T(e,r,s):g(e,s),{defaultTravelMode:d,supportedTravelModes:f}=yield c;return l.defaultTravelMode=d,l.supportedTravelModes=f,u.fromJSON(l)}))).apply(this,arguments)}function g(e,r){return y.apply(this,arguments)}function y(){return(y=r._asyncToGenerator((function*(e,r){const o={f:"json"},s=i.asValidOptions(o,r),{data:n}=yield t(e.replace(/\/rest\/.*$/i,"/info"),s);if(!n||!n.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:u}=n,c=l.removeTrailingSlash(u)+"/sharing/rest/portals/self",{data:d}=yield t(c,s),f=a.getDeepValue("helperServices.routingUtilities.url",d);if(!f)return{supportedTravelModes:[],defaultTravelMode:null};const p=i.parseUrl(u),v={f:"json",serviceName:/\/solve$/i.test(p.path)?"Route":/\/solveclosestfacility$/i.test(p.path)?"ClosestFacility":"ServiceAreas"},h=i.asValidOptions(v,r),g=l.removeTrailingSlash(f)+"/GetTravelModes/execute",y=yield t(g,h),T=[];let m=null;if(y?.data?.results?.length){const e=y.data.results;for(const r of e)if("supportedTravelModes"===r.paramName){if(r.value?.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);T.push(r)}}else"defaultTravelMode"===r.paramName&&(m=r.value)}return{supportedTravelModes:T,defaultTravelMode:m}}))).apply(this,arguments)}function T(e,r,t){return m.apply(this,arguments)}function m(){return(m=r._asyncToGenerator((function*(e,r,s){try{const o={f:"json",token:r},n=i.asValidOptions(o,s),a=l.removeTrailingSlash(e)+"/retrieveTravelModes",{data:{supportedTravelModes:u,defaultTravelMode:c}}=yield t(a,n);return{supportedTravelModes:u,defaultTravelMode:c}}catch(n){throw new o("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:n})}}))).apply(this,arguments)}e.collectGeometries=d,e.dropZValuesOffInputGeometry=f,e.fetchServiceDescription=v,e.isInputGeometryZAware=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
