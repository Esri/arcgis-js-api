/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["exports","../chunks/_rollupPluginBabelHelpers","../request","../core/Error","../core/maybe","../core/object","../core/urlUtils","./utils","./support/NetworkServiceDescription","./support/RouteResultsContainer"],(function(e,r,t,o,s,a,l,n,i,u){"use strict";function p(e,r,t,o){o[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}function d(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function c(e){const r=[],t=[],{directions:o=[],routes:{features:a=[],spatialReference:l=null}={},stops:{features:n=[],spatialReference:i=null}={},barriers:p,polygonBarriers:d,polylineBarriers:c,messages:f}=e.data,v="esri.tasks.RouteTask.NULL_ROUTE_NAME";let h,m,y=!0;const T=a&&l||n&&i||p&&p.spatialReference||d&&d.spatialReference||c&&c.spatialReference;o.forEach((e=>{r.push(h=e.routeName),t[h]={directions:e}})),a.forEach((e=>{-1===r.indexOf(h=e.attributes.Name)&&(r.push(h),t[h]={}),s.isSome(e.geometry)&&(e.geometry.spatialReference=T),t[h].route=e})),n.forEach((e=>{m=e.attributes,-1===r.indexOf(h=m.RouteName||v)&&(r.push(h),t[h]={}),h!==v&&(y=!1),s.isSome(e.geometry)&&(e.geometry.spatialReference=T),null==t[h].stops&&(t[h].stops=[]),t[h].stops.push(e)})),n.length>0&&!0===y&&(t[r[0]].stops=t[v].stops,delete t[v],r.splice(r.indexOf(v),1));const g=r.map((e=>(t[e].routeName=e===v?null:e,t[e])));return u.fromJSON({routeResults:g,pointBarriers:p,polygonBarriers:d,polylineBarriers:c,messages:f})}function f(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)if(s.isSome(e)&&e.hasZ)return!0}return!1}function v(e,r,t){return h.apply(this,arguments)}function h(){return(h=r._asyncToGenerator((function*(e,r,s){if(!e)throw new o("network-service:missing-url","Url to Network service is missing");const a={f:"json",token:r},l=n.asValidOptions(a,s),{data:u}=yield t(e,l);u.supportedTravelModes||(u.supportedTravelModes=[]);for(let t=0;t<u.supportedTravelModes.length;t++)u.supportedTravelModes[t].id||(u.supportedTravelModes[t].id=u.supportedTravelModes[t].itemId);const p=u.currentVersion>=10.4?T(e,r,s):m(e,s),{defaultTravelMode:d,supportedTravelModes:c}=yield p;return u.defaultTravelMode=d,u.supportedTravelModes=c,i.fromJSON(u)}))).apply(this,arguments)}function m(e,r){return y.apply(this,arguments)}function y(){return(y=r._asyncToGenerator((function*(e,r){var o,s;const i={f:"json"},u=n.asValidOptions(i,r),{data:p}=yield t(e.replace(/\/rest\/.*$/i,"/info"),u);if(!p||!p.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:d}=p,c=l.removeTrailingSlash(d)+"/sharing/rest/portals/self",{data:f}=yield t(c,u),v=a.getDeepValue("helperServices.routingUtilities.url",f);if(!v)return{supportedTravelModes:[],defaultTravelMode:null};const h=n.parseUrl(d),m={f:"json",serviceName:/\/solve$/i.test(h.path)?"Route":/\/solveclosestfacility$/i.test(h.path)?"ClosestFacility":"ServiceAreas"},y=n.asValidOptions(m,r),T=l.removeTrailingSlash(v)+"/GetTravelModes/execute",g=yield t(T,y),M=[];let S=null;if(null!=g&&null!=(o=g.data)&&null!=(s=o.results)&&s.length){const e=g.data.results;for(const r of e){var w;if("supportedTravelModes"===r.paramName){if(null!=(w=r.value)&&w.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);M.push(r)}}else"defaultTravelMode"===r.paramName&&(S=r.value)}}return{supportedTravelModes:M,defaultTravelMode:S}}))).apply(this,arguments)}function T(e,r,t){return g.apply(this,arguments)}function g(){return(g=r._asyncToGenerator((function*(e,r,s){try{const o={f:"json",token:r},a=n.asValidOptions(o,s),i=l.removeTrailingSlash(e)+"/retrieveTravelModes",{data:{supportedTravelModes:u,defaultTravelMode:p}}=yield t(i,a);return{supportedTravelModes:u,defaultTravelMode:p}}catch(a){throw new o("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:a})}}))).apply(this,arguments)}e.collectGeometries=p,e.dropZValuesOffInputGeometry=d,e.fetchServiceDescription=v,e.handleSolveResponse=c,e.isInputGeometryZAware=f,Object.defineProperty(e,"__esModule",{value:!0})}));
