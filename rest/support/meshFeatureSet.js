/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import t from"../../Graphic.js";import{isNone as e,isSome as r}from"../../core/maybe.js";import o from"../../geometry/Extent.js";import s from"../../geometry/Mesh.js";import n from"../../geometry/Point.js";import{fromAxisAndAngle as a}from"../../geometry/support/axisAngleDegrees.js";import i from"../../geometry/support/MeshTransform.js";import{AssetMapFieldRole as u,Status as f}from"../../layers/support/infoFor3D.js";import m from"./FeatureSet.js";function c(o,s,n){const a=n.features;n.features=[],delete n.geometryType;const i=m.fromJSON(n);i.geometryType="mesh";const u=i.spatialReference,f=e(o.outFields)||!o.outFields.length?()=>({}):l(o.outFields.includes("*")?null:new Set(o.outFields));for(const e of a){const o=p(e,u,s);r(o)&&i.features.push(new t({geometry:o,attributes:f(e)}))}return i}function l(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function p(t,e,r){const{status:n,source:a}=D(t);if(n===y.FAILED)return null;const i=g(t,e,r),u=o.fromJSON(t.geometry);u.spatialReference=e;const f=E(t,r);return n===y.PENDING?s.createIncomplete(i,{extent:u,transform:f}):s.createWithExternalSource(i,a,{extent:u,transform:f})}function g({attributes:t},e,{transformFieldRoles:r}){return new n({x:t[r.originX],y:t[r.originY],z:t[r.originZ],spatialReference:e})}function E({attributes:t,assetMappings:e},{transformFieldRoles:r}){return new i({translation:[t[r.translationX],t[r.translationY],t[r.translationZ]],rotation:a([t[r.rotationX],t[r.rotationY],t[r.rotationZ]],t[r.rotationDeg]),scale:[t[r.scaleX],t[r.scaleY],t[r.scaleZ]],geographic:!e[u.flags]?.includes("PROJECT_VERTICES")})}function D(t){if(!t.assetMappings)return{status:y.FAILED};const e=[],r=new Map;for(const o of t.assetMappings){const t=o[u.seqNo],s=o[u.assetName],n=o[u.assetURL],a=o[u.conversionStatus];if(a===f.FAILED)return{status:y.FAILED};if(a!==f.COMPLETED)return{status:y.PENDING};if(null==t)e.push({name:s,source:n});else{const o=r.get(s);let a;o?a=o.multipart:(a=[],e.push({name:s,source:{multipart:a}}),r.set(s,{multipart:a})),a[t]=n}}return{status:y.COMPLETED,source:e}}var y;!function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"}(y||(y={}));export{c as meshFeatureSetFromJSON};
