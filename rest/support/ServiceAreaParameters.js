/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../geometry.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{enumeration as r}from"../../core/accessorSupport/decorators/enumeration.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../../core/accessorSupport/decorators/writer.js";import{apiKey as n}from"./commonProperties.js";import{lengthUnitJsonMap as l,outputLineJsonMap as a,outputPolygonJsonMap as y,restrictUTurnJsonMap as u,travelDirectionJsonMap as m}from"./networkEnums.js";import c from"./TravelMode.js";import d from"../../geometry/SpatialReference.js";let v=class extends e{constructor(t){super(t),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.defaultBreaks=null,this.excludeSourcesFromPolygons=null,this.facilities=null,this.impedanceAttribute=null,this.mergeSimilarPolygonRanges=!1,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines=null,this.outputPolygons=null,this.outSpatialReference=null,this.overlapLines=!1,this.overlapPolygons=!1,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnFacilities=!1,this.returnPointBarriers=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.splitLinesAtBreaks=!1,this.splitPolygonsAtBreaks=!1,this.timeOfDay=null,this.travelDirection=null,this.travelMode=null,this.trimOuterPolygon=!1,this.trimPolygonDistance=null,this.trimPolygonDistanceUnits=null,this.useHierarchy=null}readTimeOfDay(t,e){return null!=e.timeOfDay?new Date(e.timeOfDay):null}writeTimeOfDay(t,e){e.timeOfDay=t?t.getTime():null}};t([o({type:[String],json:{write:!0}})],v.prototype,"accumulateAttributes",void 0),t([o(n)],v.prototype,"apiKey",void 0),t([o({json:{write:!0}})],v.prototype,"attributeParameterValues",void 0),t([o({type:[Number],json:{write:!0}})],v.prototype,"defaultBreaks",void 0),t([o({type:[String],json:{write:!0}})],v.prototype,"excludeSourcesFromPolygons",void 0),t([o({json:{write:!0}})],v.prototype,"facilities",void 0),t([o({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],v.prototype,"impedanceAttribute",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"mergeSimilarPolygonRanges",void 0),t([o({type:Number,json:{write:!0}})],v.prototype,"outputGeometryPrecision",void 0),t([r(l)],v.prototype,"outputGeometryPrecisionUnits",void 0),t([r(a)],v.prototype,"outputLines",void 0),t([r(y)],v.prototype,"outputPolygons",void 0),t([o({type:d,json:{write:!0}})],v.prototype,"outSpatialReference",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"overlapLines",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"overlapPolygons",void 0),t([o({json:{write:!0}})],v.prototype,"pointBarriers",void 0),t([o({json:{write:!0}})],v.prototype,"polygonBarriers",void 0),t([o({json:{write:!0}})],v.prototype,"polylineBarriers",void 0),t([o({type:[String],json:{write:!0}})],v.prototype,"restrictionAttributes",void 0),t([r(u)],v.prototype,"restrictUTurns",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"returnFacilities",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"returnPointBarriers",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"returnPolygonBarriers",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"returnPolylineBarriers",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"splitLinesAtBreaks",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"splitPolygonsAtBreaks",void 0),t([o({type:Date,json:{type:Number,write:!0}})],v.prototype,"timeOfDay",void 0),t([i("timeOfDay")],v.prototype,"readTimeOfDay",null),t([p("timeOfDay")],v.prototype,"writeTimeOfDay",null),t([r(m)],v.prototype,"travelDirection",void 0),t([o({type:c,json:{write:!0}})],v.prototype,"travelMode",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"trimOuterPolygon",void 0),t([o({type:Number,json:{write:!0}})],v.prototype,"trimPolygonDistance",void 0),t([r(l)],v.prototype,"trimPolygonDistanceUnits",void 0),t([o({type:Boolean,json:{write:!0}})],v.prototype,"useHierarchy",void 0),v=t([s("esri.rest.support.ServiceAreaParameters")],v);const j=v;export{j as default};
