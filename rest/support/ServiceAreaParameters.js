/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/arrayUtils","../../core/has","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/enumeration","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./commonProperties","./networkEnums","./TravelMode","../../geometry/SpatialReference"],(function(e,r,t,o,p,i,n,a,s,l,y,u,c,d,_,m){"use strict";let v=function(r){function t(e){var t;return(t=r.call(this,e)||this).accumulateAttributes=null,t.apiKey=null,t.attributeParameterValues=null,t.defaultBreaks=null,t.excludeSourcesFromPolygons=null,t.facilities=null,t.impedanceAttribute=null,t.mergeSimilarPolygonRanges=!1,t.outputGeometryPrecision=null,t.outputGeometryPrecisionUnits=null,t.outputLines=null,t.outputPolygons=null,t.outSpatialReference=null,t.overlapLines=!1,t.overlapPolygons=!1,t.pointBarriers=null,t.polygonBarriers=null,t.polylineBarriers=null,t.restrictionAttributes=null,t.restrictUTurns=null,t.returnFacilities=!1,t.returnPointBarriers=!1,t.returnPolygonBarriers=!1,t.returnPolylineBarriers=!1,t.splitLinesAtBreaks=!1,t.splitPolygonsAtBreaks=!1,t.timeOfDay=null,t.travelDirection=null,t.travelMode=null,t.trimOuterPolygon=!1,t.trimPolygonDistance=null,t.trimPolygonDistanceUnits=null,t.useHierarchy=null,t}e._inheritsLoose(t,r);var o=t.prototype;return o.readTimeOfDay=function(e,r){return null!=r.timeOfDay?new Date(r.timeOfDay):null},o.writeTimeOfDay=function(e,r){r.timeOfDay=e?e.getTime():null},t}(o.JSONSupport);r.__decorate([p.property({type:[String],json:{write:!0}})],v.prototype,"accumulateAttributes",void 0),r.__decorate([p.property(c.apiKey)],v.prototype,"apiKey",void 0),r.__decorate([p.property({json:{write:!0}})],v.prototype,"attributeParameterValues",void 0),r.__decorate([p.property({type:[Number],json:{write:!0}})],v.prototype,"defaultBreaks",void 0),r.__decorate([p.property({type:[String],json:{write:!0}})],v.prototype,"excludeSourcesFromPolygons",void 0),r.__decorate([p.property({json:{write:!0}})],v.prototype,"facilities",void 0),r.__decorate([p.property({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],v.prototype,"impedanceAttribute",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"mergeSimilarPolygonRanges",void 0),r.__decorate([p.property({type:Number,json:{write:!0}})],v.prototype,"outputGeometryPrecision",void 0),r.__decorate([s.enumeration(d.lengthUnitJsonMap)],v.prototype,"outputGeometryPrecisionUnits",void 0),r.__decorate([s.enumeration(d.outputLineJsonMap)],v.prototype,"outputLines",void 0),r.__decorate([s.enumeration(d.outputPolygonJsonMap)],v.prototype,"outputPolygons",void 0),r.__decorate([p.property({type:m,json:{write:!0}})],v.prototype,"outSpatialReference",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"overlapLines",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"overlapPolygons",void 0),r.__decorate([p.property({json:{write:!0}})],v.prototype,"pointBarriers",void 0),r.__decorate([p.property({json:{write:!0}})],v.prototype,"polygonBarriers",void 0),r.__decorate([p.property({json:{write:!0}})],v.prototype,"polylineBarriers",void 0),r.__decorate([p.property({type:[String],json:{write:!0}})],v.prototype,"restrictionAttributes",void 0),r.__decorate([s.enumeration(d.restrictUTurnJsonMap)],v.prototype,"restrictUTurns",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"returnFacilities",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"returnPointBarriers",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"returnPolygonBarriers",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"returnPolylineBarriers",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"splitLinesAtBreaks",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"splitPolygonsAtBreaks",void 0),r.__decorate([p.property({type:Date,json:{type:Number,write:!0}})],v.prototype,"timeOfDay",void 0),r.__decorate([l.reader("timeOfDay")],v.prototype,"readTimeOfDay",null),r.__decorate([u.writer("timeOfDay")],v.prototype,"writeTimeOfDay",null),r.__decorate([s.enumeration(d.travelDirectionJsonMap)],v.prototype,"travelDirection",void 0),r.__decorate([p.property({type:_,json:{write:!0}})],v.prototype,"travelMode",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"trimOuterPolygon",void 0),r.__decorate([p.property({type:Number,json:{write:!0}})],v.prototype,"trimPolygonDistance",void 0),r.__decorate([s.enumeration(d.lengthUnitJsonMap)],v.prototype,"trimPolygonDistanceUnits",void 0),r.__decorate([p.property({type:Boolean,json:{write:!0}})],v.prototype,"useHierarchy",void 0),v=r.__decorate([y.subclass("esri.rest.support.ServiceAreaParameters")],v);return v}));
