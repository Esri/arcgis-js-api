/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/ensureType","../../core/Logger","../../core/accessorSupport/decorators/enumeration","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./networkEnums","./TravelMode","../../geometry/SpatialReference"],(function(e,t,r,o,p,i,n,a,s,l,y,u,c,d,_){"use strict";let m=function(t){function r(e){var r;return(r=t.call(this,e)||this).accumulateAttributes=null,r.attributeParameterValues=null,r.defaultBreaks=null,r.doNotLocateOnRestrictedElements=!0,r.excludeSourcesFromPolygons=null,r.facilities=null,r.impedanceAttribute=null,r.mergeSimilarPolygonRanges=!1,r.outputGeometryPrecision=null,r.outputGeometryPrecisionUnits=null,r.outputLines=null,r.outputPolygons=null,r.outSpatialReference=null,r.overlapLines=!1,r.overlapPolygons=!1,r.pointBarriers=null,r.polygonBarriers=null,r.polylineBarriers=null,r.restrictionAttributes=null,r.restrictUTurns=null,r.returnFacilities=!1,r.returnPointBarriers=!1,r.returnPolygonBarriers=!1,r.returnPolylineBarriers=!1,r.splitLinesAtBreaks=!1,r.splitPolygonsAtBreaks=!1,r.timeOfDay=null,r.travelDirection=null,r.travelMode=null,r.trimOuterPolygon=!1,r.trimPolygonDistance=null,r.trimPolygonDistanceUnits=null,r.useHierarchy=null,r}e._inheritsLoose(r,t);var o=r.prototype;return o.readTimeOfDay=function(e,t){return null!=t.timeOfDay?new Date(t.timeOfDay):null},o.writeTimeOfDay=function(e,t){t.timeOfDay=e?e.getTime():null},r}(o.JSONSupport);return t.__decorate([p.property({type:[String],json:{write:!0}})],m.prototype,"accumulateAttributes",void 0),t.__decorate([p.property({json:{write:!0}})],m.prototype,"attributeParameterValues",void 0),t.__decorate([p.property({type:[Number],json:{write:!0}})],m.prototype,"defaultBreaks",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"doNotLocateOnRestrictedElements",void 0),t.__decorate([p.property({type:[String],json:{write:!0}})],m.prototype,"excludeSourcesFromPolygons",void 0),t.__decorate([p.property({json:{write:!0}})],m.prototype,"facilities",void 0),t.__decorate([p.property({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],m.prototype,"impedanceAttribute",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"mergeSimilarPolygonRanges",void 0),t.__decorate([p.property({type:Number,json:{write:!0}})],m.prototype,"outputGeometryPrecision",void 0),t.__decorate([s.enumeration(c.lengthUnitJsonMap)],m.prototype,"outputGeometryPrecisionUnits",void 0),t.__decorate([s.enumeration(c.outputLineJsonMap)],m.prototype,"outputLines",void 0),t.__decorate([s.enumeration(c.outputPolygonJsonMap)],m.prototype,"outputPolygons",void 0),t.__decorate([p.property({type:_,json:{write:!0}})],m.prototype,"outSpatialReference",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"overlapLines",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"overlapPolygons",void 0),t.__decorate([p.property({json:{write:!0}})],m.prototype,"pointBarriers",void 0),t.__decorate([p.property({json:{write:!0}})],m.prototype,"polygonBarriers",void 0),t.__decorate([p.property({json:{write:!0}})],m.prototype,"polylineBarriers",void 0),t.__decorate([p.property({type:[String],json:{write:!0}})],m.prototype,"restrictionAttributes",void 0),t.__decorate([s.enumeration(c.restrictUTurnJsonMap)],m.prototype,"restrictUTurns",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"returnFacilities",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"returnPointBarriers",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"returnPolygonBarriers",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"returnPolylineBarriers",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"splitLinesAtBreaks",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"splitPolygonsAtBreaks",void 0),t.__decorate([p.property({type:Date,json:{type:Number,write:!0}})],m.prototype,"timeOfDay",void 0),t.__decorate([l.reader("timeOfDay")],m.prototype,"readTimeOfDay",null),t.__decorate([u.writer("timeOfDay")],m.prototype,"writeTimeOfDay",null),t.__decorate([s.enumeration(c.travelDirectionJsonMap)],m.prototype,"travelDirection",void 0),t.__decorate([p.property({type:d,json:{write:!0}})],m.prototype,"travelMode",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"trimOuterPolygon",void 0),t.__decorate([p.property({type:Number,json:{write:!0}})],m.prototype,"trimPolygonDistance",void 0),t.__decorate([s.enumeration(c.lengthUnitJsonMap)],m.prototype,"trimPolygonDistanceUnits",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],m.prototype,"useHierarchy",void 0),m=t.__decorate([y.subclass("esri.rest.support.ServiceAreaParameters")],m),m}));
