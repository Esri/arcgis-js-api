/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{geometryTypes as e}from"../../geometry.js";import o from"../../TimeExtent.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{clone as s}from"../../core/lang.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../../core/accessorSupport/decorators/writer.js";import{fromJSON as n,getJsonType as a}from"../../geometry/support/jsonUtils.js";import m from"../../layers/support/MosaicRule.js";import{interpolationKebab as u}from"../../layers/support/rasterEnums.js";import y from"../../geometry/Point.js";import c from"../../geometry/Multipoint.js";var d;let j=d=class extends r{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(t,e,o){null!=t&&(e.geometryType=a(t),e[o]=t.toJSON())}set locations(t){if(t?.length){const e=new c({spatialReference:t[0].spatialReference});e.points=t.map((t=>[t.x,t.y])),this._set("locations",t),this.geometry=e}}clone(){return new d(s({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};t([i({types:e,json:{read:n}})],j.prototype,"geometry",void 0),t([l("geometry")],j.prototype,"writeGeometry",null),t([i()],j.prototype,"locations",null),t([i({type:String,json:{type:u.jsonValues,read:u.read,write:u.write}})],j.prototype,"interpolation",void 0),t([i({type:m,json:{write:!0}})],j.prototype,"mosaicRule",void 0),t([i({type:[String],json:{write:!0}})],j.prototype,"outFields",void 0),t([i({type:y,json:{write:!0}})],j.prototype,"pixelSize",void 0),t([i({type:String,json:{write:!0}})],j.prototype,"raster",void 0),t([i({type:Boolean,json:{write:!0}})],j.prototype,"returnFirstValueOnly",void 0),t([i({type:Number,json:{write:!0}})],j.prototype,"sampleDistance",void 0),t([i({type:Number,json:{write:!0}})],j.prototype,"sampleCount",void 0),t([i({type:Number,json:{write:!0}})],j.prototype,"sliceId",void 0),t([i({type:o,json:{read:{source:"time"},write:{target:"time"}}})],j.prototype,"timeExtent",void 0),j=d=t([p("esri.rest.support.ImageSampleParameters")],j);const h=j;export{h as default};
