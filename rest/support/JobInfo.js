/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../request.js";import"../../core/has.js";import{JSONMap as s}from"../../core/jsonMap.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{onAbort as o,createAbortError as i}from"../../core/promiseUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import{parseUrl as n}from"../utils.js";import u from"../geoprocessor/GPOptions.js";import{gpEncode as l,decode as b}from"../geoprocessor/utils.js";import j from"./GPMessage.js";var p;const h=new s({esriJobCancelled:"job-cancelled",esriJobCancelling:"job-cancelling",esriJobDeleted:"job-deleted",esriJobDeleting:"job-deleting",esriJobTimedOut:"job-timed-out",esriJobExecuting:"job-executing",esriJobFailed:"job-failed",esriJobNew:"job-new",esriJobSubmitted:"job-submitted",esriJobSucceeded:"job-succeeded",esriJobWaiting:"job-waiting"});let m=p=class extends r{constructor(e){super(e),this.jobId=null,this.jobStatus=null,this.messages=null,this.requestOptions=null,this.sourceUrl=null,this._timer=null}cancelJob(e){const{jobId:s,sourceUrl:r}=this,{path:o}=n(r),i={...this.requestOptions,...e,query:{f:"json"}};this._clearTimer();return t(`${o}/jobs/${s}/cancel`,i).then((e=>{const t=p.fromJSON(e.data);return this.messages=t.messages,this.jobStatus=t.jobStatus,this}))}destroy(){clearInterval(this._timer)}checkJobStatus(e){const{path:s}=n(this.sourceUrl),r={...this.requestOptions,...e,query:{f:"json"}},o=`${s}/jobs/${this.jobId}`;return t(o,r).then((({data:e})=>{const t=p.fromJSON(e);return this.messages=t.messages,this.jobStatus=t.jobStatus,this}))}fetchResultData(e,s,r){s=u.from(s||{});const{returnFeatureCollection:o,returnM:i,returnZ:a,outSpatialReference:c}=s,{path:j}=n(this.sourceUrl),p=l({returnFeatureCollection:o,returnM:i,returnZ:a,outSR:c,returnType:"data",f:"json"},null),h={...this.requestOptions,...r,query:p},m=`${j}/jobs/${this.jobId}/results/${e}`;return t(m,h).then((e=>b(e.data)))}fetchResultImage(e,s,r){const{path:o}=n(this.sourceUrl),i={...s.toJSON(),f:"json"},a=l(i),c={...this.requestOptions,...r,query:a},u=`${o}/jobs/${this.jobId}/results/${e}`;return t(u,c).then((e=>b(e.data)))}async fetchResultMapImageLayer(){const{path:e}=n(this.sourceUrl),t=e.indexOf("/GPServer/"),s=`${e.substring(0,t)}/MapServer/jobs/${this.jobId}`;return new(0,(await import("../../layers/MapImageLayer.js")).default)({url:s})}async waitForJobCompletion(e={}){const{interval:t=1e3,signal:s,statusCallback:r}=e;return new Promise(((e,a)=>{o(s,(()=>{this._clearTimer(),a(i())})),this._clearTimer();const c=setInterval((()=>{this._timer||a(i()),this.checkJobStatus(this.requestOptions).then((t=>{const{jobStatus:s}=t;switch(this.jobStatus=s,s){case"job-succeeded":this._clearTimer(),e(this);break;case"job-submitted":case"job-executing":case"job-waiting":case"job-new":r&&r(this);break;case"job-cancelled":case"job-cancelling":case"job-deleted":case"job-deleting":case"job-timed-out":case"job-failed":this._clearTimer(),a(this)}}))}),t);this._timer=c}))}_clearTimer(){this._timer&&(clearInterval(this._timer),this._timer=null)}};e([a()],m.prototype,"jobId",void 0),e([a({json:{read:h.read}})],m.prototype,"jobStatus",void 0),e([a({type:[j]})],m.prototype,"messages",void 0),e([a()],m.prototype,"requestOptions",void 0),e([a({json:{write:!0}})],m.prototype,"sourceUrl",void 0),m=p=e([c("esri.rest.support.JobInfo")],m);const d=m;export{d as default};
