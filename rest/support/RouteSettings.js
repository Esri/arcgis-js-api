/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{isNone as r}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{reader as s}from"../../core/accessorSupport/decorators/reader.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{writer as i}from"../../core/accessorSupport/decorators/writer.js";import{impedanceAttributeNameJsonMap as u}from"./networkEnums.js";import a from"./TravelMode.js";let c=class extends e{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(t){return r(t)?null:t.map((t=>u.fromJSON(t)))}writeAccumulateAttributes(t,e,o){!r(t)&&t.length&&(e[o]=t.map((t=>u.toJSON(t))))}};t([o({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],c.prototype,"accumulateAttributes",void 0),t([s("accumulateAttributes")],c.prototype,"readAccumulateAttributes",null),t([i("accumulateAttributes")],c.prototype,"writeAccumulateAttributes",null),t([o({type:String,json:{write:!0}})],c.prototype,"directionsLanguage",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"findBestSequence",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"preserveFirstStop",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"preserveLastStop",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"startTimeIsUTC",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"timeWindowsAreUTC",void 0),t([o({type:a,json:{write:!0}})],c.prototype,"travelMode",void 0),c=t([p("esri.layers.support.RouteSettings")],c);const l=c;export{l as default};
