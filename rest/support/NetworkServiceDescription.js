/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{isNone as e}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{enumeration as s}from"../../core/accessorSupport/decorators/enumeration.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{writer as u}from"../../core/accessorSupport/decorators/writer.js";import a from"./NetworkDataset.js";import{impedanceAttributeNameJsonMap as c,directionsLengthUnitJsonMap as n,durationImpedanceAttributeNameJsonMap as l}from"./networkEnums.js";import m from"./TravelMode.js";let d=class extends r{constructor(t){super(t),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(t){return e(t)?null:t.map((t=>c.fromJSON(t)))}writeAccumulateAttributes(t,r,o){!e(t)&&t.length&&(r[o]=t.map((t=>c.toJSON(t))))}};t([o()],d.prototype,"accumulateAttributeNames",void 0),t([i("accumulateAttributeNames")],d.prototype,"readAccumulateAttributes",null),t([u("accumulateAttributeNames")],d.prototype,"writeAccumulateAttributes",null),t([o()],d.prototype,"currentVersion",void 0),t([o()],d.prototype,"defaultTravelMode",void 0),t([o()],d.prototype,"directionsLanguage",void 0),t([s(n)],d.prototype,"directionsLengthUnits",void 0),t([o()],d.prototype,"directionsSupportedLanguages",void 0),t([s(l,{ignoreUnknown:!1})],d.prototype,"directionsTimeAttribute",void 0),t([o()],d.prototype,"hasZ",void 0),t([s(c,{ignoreUnknown:!1})],d.prototype,"impedance",void 0),t([o({type:a})],d.prototype,"networkDataset",void 0),t([o({type:[m]})],d.prototype,"supportedTravelModes",void 0),d=t([p("esri.rest.support.NetworkServiceDescription")],d);const y=d;export{y as default};
