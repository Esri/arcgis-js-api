/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../TimeExtent","../../core/deprecate","../../core/JSONSupport","../../core/lang","../../core/Logger","../../core/maybe","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/has","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../geometry/Point","../../geometry/support/jsonUtils","../../layers/support/MosaicRule","../../layers/support/RasterFunction"],(function(e,t,r,o,i,n,s,p,l,u,a,c,y,m,d,g,_){"use strict";var w;const S=s.getLogger("esri.rest.support.ImageServiceIdentifyParameters");o.deprecatedModule(S,"esri/rest/support/ImageServiceIdentifyParameters",{replacement:"esri/rest/support/ImageIdentifyParameters"});let R=w=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).geometry=null,e.renderingRules=null,e.pixelSize=null,e.returnGeometry=!0,e.returnCatalogItems=!0,e.returnPixelValues=!0,e.maxItemCount=null,e.timeExtent=null,e.raster=void 0,e.viewId=void 0,e}e._inheritsLoose(r,t);var o=r.prototype;return o.writeGeometry=function(e,t,r){null!=e&&(t.geometryType=d.getJsonType(e),t[r]=JSON.stringify(e.toJSON()))},o.writeMosaicRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},o.writeRenderingRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},o.writeRenderingRules=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))},o.writePixelSize=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},o.writeTimeExtent=function(e,t,r){if(null!=e){const o=p.isSome(e.start)?e.start.getTime():null,i=p.isSome(e.end)?e.end.getTime():null;t[r]=null!=o?null!=i?`${o},${i}`:`${o}`:null}},o.clone=function(){return new w(n.clone({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))},e._createClass(r,[{key:"mosaicRule",set:function(e){let t=e;t&&t.mosaicMethod&&(t=g.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}},{key:"renderingRule",set:function(e){let t=e;t&&t.rasterFunction&&(t=_.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}}]),r}(i.JSONSupport);return t.__decorate([l.property({json:{write:!0}})],R.prototype,"geometry",void 0),t.__decorate([y.writer("geometry")],R.prototype,"writeGeometry",null),t.__decorate([l.property({type:g,json:{write:!0}})],R.prototype,"mosaicRule",null),t.__decorate([y.writer("mosaicRule")],R.prototype,"writeMosaicRule",null),t.__decorate([l.property({type:_,json:{write:!0}})],R.prototype,"renderingRule",null),t.__decorate([y.writer("renderingRule")],R.prototype,"writeRenderingRule",null),t.__decorate([l.property({type:[_],json:{write:!0}})],R.prototype,"renderingRules",void 0),t.__decorate([y.writer("renderingRules")],R.prototype,"writeRenderingRules",null),t.__decorate([l.property({type:m,json:{write:!0}})],R.prototype,"pixelSize",void 0),t.__decorate([y.writer("pixelSize")],R.prototype,"writePixelSize",null),t.__decorate([l.property({type:Boolean,json:{write:!0}})],R.prototype,"returnGeometry",void 0),t.__decorate([l.property({type:Boolean,json:{write:!0}})],R.prototype,"returnCatalogItems",void 0),t.__decorate([l.property({type:Boolean,json:{write:!0}})],R.prototype,"returnPixelValues",void 0),t.__decorate([l.property({type:Number,json:{write:!0}})],R.prototype,"maxItemCount",void 0),t.__decorate([l.property({type:r,json:{write:{target:"time"}}})],R.prototype,"timeExtent",void 0),t.__decorate([y.writer("timeExtent")],R.prototype,"writeTimeExtent",null),t.__decorate([l.property({json:{write:!0}})],R.prototype,"raster",void 0),t.__decorate([l.property({json:{write:!0}})],R.prototype,"viewId",void 0),R=w=t.__decorate([c.subclass("esri.rest.support.ImageServiceIdentifyParameters")],R),R}));
