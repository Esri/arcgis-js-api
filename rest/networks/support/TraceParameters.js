/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{JSONSupport as o}from"../../../core/JSONSupport.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import s from"../../../geometry/SpatialReference.js";import i from"../../../networks/support/TraceConfiguration.js";import{traceTypeKebabDict as p}from"../../../networks/support/typeUtils.js";import a from"./TraceLocation.js";let n=class extends o{constructor(t){super(t),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}};t([e({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],n.prototype,"namedTraceConfigurationGlobalId",void 0),t([e({type:String,json:{write:!0}})],n.prototype,"gdbVersion",void 0),t([e({type:[a],json:{write:!0}})],n.prototype,"traceLocations",void 0),t([e({type:Date,json:{type:Number,write:{writer:(t,o)=>{o.moment=t?t.getTime():null}}}})],n.prototype,"moment",void 0),t([e({type:s,json:{read:!1}})],n.prototype,"outSpatialReference",void 0),t([e({type:i,json:{write:!0}})],n.prototype,"traceConfiguration",void 0),t([e({type:[Object],json:{write:!0}})],n.prototype,"resultTypes",void 0),t([e({type:p.apiValues,json:{type:p.jsonValues,read:p.read,write:p.write}})],n.prototype,"traceType",void 0),n=t([r("esri.rest.networks.support.TraceParameters")],n);const c=n;export{c as default};
