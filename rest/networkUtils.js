/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../core/object","../core/maybe","../core/Error","../request","./utils","../tasks/support/RouteResultsContainer"],(function(e,t,r,s,o,a,l){"use strict";function n(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function i(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function u(e){const t=[],r=[],{directions:s=[],routes:{features:o=[],spatialReference:a=null}={},stops:{features:n=[],spatialReference:i=null}={},barriers:u,polygonBarriers:d,polylineBarriers:p,messages:f}=e.data,c="esri.tasks.RouteTask.NULL_ROUTE_NAME";let v,h,g=!0;const T=o&&a||n&&i||u&&u.spatialReference||d&&d.spatialReference||p&&p.spatialReference;s.forEach((e=>{t.push(v=e.routeName),r[v]={directions:e}})),o.forEach((e=>{-1===t.indexOf(v=e.attributes.Name)&&(t.push(v),r[v]={}),e.geometry&&(e.geometry.spatialReference=T),r[v].route=e})),n.forEach((e=>{h=e.attributes,-1===t.indexOf(v=h.RouteName||c)&&(t.push(v),r[v]={}),v!==c&&(g=!1),e.geometry&&(e.geometry.spatialReference=T),null==r[v].stops&&(r[v].stops=[]),r[v].stops.push(e)})),n.length>0&&!0===g&&(r[t[0]].stops=r[c].stops,delete r[c],t.splice(t.indexOf(c),1));const M=t.map((e=>(r[e].routeName=e===c?null:e,r[e])));return l.fromJSON({routeResults:M,pointBarriers:u,polygonBarriers:d,polylineBarriers:p,messages:f})}function d(e,t){for(let s=0;s<t.length;s++){const o=e[t[s]];if(o&&o.length)for(const e of o)if(r.isSome(e)&&e.hasZ)return!0}return!1}async function p(e){if(!e)throw new s("network-service:missing-url","Url to Network service is missing");const{data:t}=await o(e,{query:{f:"json"}});t.supportedTravelModes||(t.supportedTravelModes=[]);for(let s=0;s<t.supportedTravelModes.length;s++)t.supportedTravelModes[s].id||(t.supportedTravelModes[s].id=t.supportedTravelModes[s].itemId);const r=t.currentVersion>=10.4?c(e):f(e),{defaultTravelMode:a,supportedTravelModes:l}=await r;return t.defaultTravelMode=a,t.supportedTravelModes=l,t}async function f(e){const{data:r}=await o(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!r||!r.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=r.owningSystemUrl;const{data:s}=await o(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}),l=t.getDeepValue("helperServices.routingUtilities.url",s);if(!l)return{supportedTravelModes:[],defaultTravelMode:null};const n=a.parseUrl(e),i=/\/solve$/.test(n.path)?"Route":/\/solveClosestFacility$/.test(n.path)?"ClosestFacility":"ServiceAreas",u=await o(l+("/"===l[l.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:i}}),d=[];let p=null;if(u&&u.data&&u.data.results&&u.data.results.length){const e=u.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value&&t.value.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);d.push(t)}}else"defaultTravelMode"===t.paramName&&(p=t.value)}return{supportedTravelModes:d,defaultTravelMode:p}}async function c(e){try{const{data:{supportedTravelModes:t,defaultTravelMode:r}}=await o(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:t,defaultTravelMode:r}}catch(t){throw new s("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:t})}}e.collectGeometries=n,e.dropZValuesOffInputGeometry=i,e.fetchServiceDescription=p,e.fetchTravelModesGP=f,e.handleSolveResponse=u,e.isInputGeometryZAware=d,e.retrieveTravelModes=c,Object.defineProperty(e,"__esModule",{value:!0})}));
