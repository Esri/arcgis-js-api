/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/_rollupPluginBabelHelpers","../../../assets","../../../core/has"],(function(e,t,n,r,s){"use strict";const o="esri/rest/knowledgeGraph/wasmInterface/";let i,c=null;function l(){return a.apply(this,arguments)}function a(){return(a=n._asyncToGenerator((function*(){const e=c??i;if(e)return e;const t=s("wasm-simd");return i=u(t),i}))).apply(this,arguments)}function u(e){return f.apply(this,arguments)}function f(){return(f=n._asyncToGenerator((function*(t){if(t){const{default:t}=yield new Promise(((t,n)=>e(["../../../chunks/arcgis-knowledge-client-core-simd"],t,n))).then((e=>e.arcgisKnowledgeClientCoreSimd));return t({locateFile:e=>r.getAssetUrl(o+e)})}const{default:n}=yield new Promise(((t,n)=>e(["../../../chunks/arcgis-knowledge-client-core"],t,n))).then((e=>e.arcgisKnowledgeClientCore));return n({locateFile:e=>r.getAssetUrl(o+e)})}))).apply(this,arguments)}const g={setWasmInterfacePromise:e=>c=e,restoreWasmInterfacePromise:()=>c=null};t.getNewInterface=u,t.getWasmInterface=l,t.test=g,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
