/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","./geometryEngineBase","../geometry/geometryAdapters/json"],(function(e,n,t){"use strict";function r(e){return n.GeometryEngineApi.extendedSpatialReferenceInfo(e)}function i(e,r,i){return n.GeometryEngineApi.clip(t.jsonAdapter,e,r,i)}function o(e,r,i){return n.GeometryEngineApi.cut(t.jsonAdapter,e,r,i)}function a(e,r,i){return n.GeometryEngineApi.contains(t.jsonAdapter,e,r,i)}function s(e,r,i){return n.GeometryEngineApi.crosses(t.jsonAdapter,e,r,i)}function c(e,r,i,o){return n.GeometryEngineApi.distance(t.jsonAdapter,e,r,i,o)}function u(e,r,i){return n.GeometryEngineApi.equals(t.jsonAdapter,e,r,i)}function p(e,r,i){return n.GeometryEngineApi.intersects(t.jsonAdapter,e,r,i)}function f(e,r,i){return n.GeometryEngineApi.touches(t.jsonAdapter,e,r,i)}function l(e,r,i){return n.GeometryEngineApi.within(t.jsonAdapter,e,r,i)}function A(e,r,i){return n.GeometryEngineApi.disjoint(t.jsonAdapter,e,r,i)}function g(e,r,i){return n.GeometryEngineApi.overlaps(t.jsonAdapter,e,r,i)}function d(e,r,i,o){return n.GeometryEngineApi.relate(t.jsonAdapter,e,r,i,o)}function m(e,r){return n.GeometryEngineApi.isSimple(t.jsonAdapter,e,r)}function y(e,r){return n.GeometryEngineApi.simplify(t.jsonAdapter,e,r)}function E(e,r,i=!1){return n.GeometryEngineApi.convexHull(t.jsonAdapter,e,r,i)}function j(e,r,i){return n.GeometryEngineApi.difference(t.jsonAdapter,e,r,i)}function G(e,r,i){return n.GeometryEngineApi.symmetricDifference(t.jsonAdapter,e,r,i)}function h(e,r,i){return n.GeometryEngineApi.intersect(t.jsonAdapter,e,r,i)}function S(e,r,i=null){return n.GeometryEngineApi.union(t.jsonAdapter,e,r,i)}function x(e,r,i,o,a,s,c){return n.GeometryEngineApi.offset(t.jsonAdapter,e,r,i,o,a,s,c)}function D(e,r,i,o,a=!1){return n.GeometryEngineApi.buffer(t.jsonAdapter,e,r,i,o,a)}function R(e,r,i,o,a,s,c){return n.GeometryEngineApi.geodesicBuffer(t.jsonAdapter,e,r,i,o,a,s,c)}function T(e,r,i,o=!0){return n.GeometryEngineApi.nearestCoordinate(t.jsonAdapter,e,r,i,o)}function w(e,r,i){return n.GeometryEngineApi.nearestVertex(t.jsonAdapter,e,r,i)}function L(e,r,i,o,a){return n.GeometryEngineApi.nearestVertices(t.jsonAdapter,e,r,i,o,a)}function V(e,t,r,i){if(null==t||null==i)throw new Error("Illegal Argument Exception");const o=n.GeometryEngineApi.rotate(t,r,i);return o.spatialReference=e,o}function v(e,t,r){if(null==t||null==r)throw new Error("Illegal Argument Exception");const i=n.GeometryEngineApi.flipHorizontal(t,r);return i.spatialReference=e,i}function z(e,t,r){if(null==t||null==r)throw new Error("Illegal Argument Exception");const i=n.GeometryEngineApi.flipVertical(t,r);return i.spatialReference=e,i}function b(e,r,i,o,a){return n.GeometryEngineApi.generalize(t.jsonAdapter,e,r,i,o,a)}function H(e,r,i,o){return n.GeometryEngineApi.densify(t.jsonAdapter,e,r,i,o)}function I(e,r,i,o,a=0){return n.GeometryEngineApi.geodesicDensify(t.jsonAdapter,e,r,i,o,a)}function B(e,r,i){return n.GeometryEngineApi.planarArea(t.jsonAdapter,e,r,i)}function P(e,r,i){return n.GeometryEngineApi.planarLength(t.jsonAdapter,e,r,i)}function _(e,r,i,o){return n.GeometryEngineApi.geodesicArea(t.jsonAdapter,e,r,i,o)}function q(e,r,i,o){return n.GeometryEngineApi.geodesicLength(t.jsonAdapter,e,r,i,o)}function C(e,r,i){return null==r||null==i?[]:n.GeometryEngineApi.intersectLinesToPoints(t.jsonAdapter,e,r,i)}function O(e,t){n.GeometryEngineApi.changeDefaultSpatialReferenceTolerance(e,t)}function J(e){n.GeometryEngineApi.clearDefaultSpatialReferenceTolerance(e)}const M=Object.freeze(Object.defineProperty({__proto__:null,extendedSpatialReferenceInfo:r,clip:i,cut:o,contains:a,crosses:s,distance:c,equals:u,intersects:p,touches:f,within:l,disjoint:A,overlaps:g,relate:d,isSimple:m,simplify:y,convexHull:E,difference:j,symmetricDifference:G,intersect:h,union:S,offset:x,buffer:D,geodesicBuffer:R,nearestCoordinate:T,nearestVertex:w,nearestVertices:L,rotate:V,flipHorizontal:v,flipVertical:z,generalize:b,densify:H,geodesicDensify:I,planarArea:B,planarLength:P,geodesicArea:_,geodesicLength:q,intersectLinesToPoints:C,changeDefaultSpatialReferenceTolerance:O,clearDefaultSpatialReferenceTolerance:J},Symbol.toStringTag,{value:"Module"}));e.buffer=D,e.changeDefaultSpatialReferenceTolerance=O,e.clearDefaultSpatialReferenceTolerance=J,e.clip=i,e.contains=a,e.convexHull=E,e.crosses=s,e.cut=o,e.densify=H,e.difference=j,e.disjoint=A,e.distance=c,e.equals=u,e.extendedSpatialReferenceInfo=r,e.flipHorizontal=v,e.flipVertical=z,e.generalize=b,e.geodesicArea=_,e.geodesicBuffer=R,e.geodesicDensify=I,e.geodesicLength=q,e.geometryEngineJSON=M,e.intersect=h,e.intersectLinesToPoints=C,e.intersects=p,e.isSimple=m,e.nearestCoordinate=T,e.nearestVertex=w,e.nearestVertices=L,e.offset=x,e.overlaps=g,e.planarArea=B,e.planarLength=P,e.relate=d,e.rotate=V,e.simplify=y,e.symmetricDifference=G,e.touches=f,e.union=S,e.within=l}));
