/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../Color","../smartMapping/symbology/support/symbologyUtils","../smartMapping/symbology/support/utils","../smartMapping/symbology/support/colors"],(function(e,o,r,a,l){"use strict";const n={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"},darker:{color:[26,26,26,.25],width:"1px"}},s={lightBasemaps:{primary:"relationship-blue-orange-brown",secondary:["relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green","relationship-blue-red-pink","relationship-blue-green-brightgreen","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal"]},darkBasemaps:{primary:"relationship-blue-green-brightgreen",secondary:["relationship-blue-red-pink","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal","relationship-blue-orange-brown","relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green"]}},t="#aaaaaa",i={default:{name:"default",label:"Default",description:"Default theme for visualizing features based on relationship between two attributes.",schemes:{point:{light:{common:{noDataColor:t,outline:n.light,size:"8px"},primary:s.lightBasemaps.primary,secondary:s.lightBasemaps.secondary},dark:{common:{noDataColor:t,outline:n.darker,size:"8px"},primary:s.darkBasemaps.primary,secondary:s.darkBasemaps.secondary}},polyline:{light:{common:{noDataColor:t,width:"2px"},primary:s.lightBasemaps.primary,secondary:s.lightBasemaps.secondary},dark:{common:{noDataColor:t,width:"2px"},primary:s.darkBasemaps.primary,secondary:s.darkBasemaps.secondary}},polygon:{light:{common:{noDataColor:t,outline:n.light,fillOpacity:.8},primary:s.lightBasemaps.primary,secondary:s.lightBasemaps.secondary},dark:{common:{noDataColor:t,outline:n.dark,fillOpacity:.8},primary:s.darkBasemaps.primary,secondary:s.darkBasemaps.secondary}}}}},p=r.createThemes({themeDictionary:i});function c(e){return r.getThemesforBasemap(p,e)}function u(e){const o=r.getRawSchemes({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme,theme:p.get("default")});if(!o)return;const{schemesInfo:a,basemapId:l,basemapTheme:n}=o,s={...e,basemap:l};return{primaryScheme:B(s,a.primary,a.common),secondarySchemes:a.secondary.map((e=>B(s,e,a.common))).filter(Boolean),basemapId:l,basemapTheme:n}}function m(e){return r.filterSchemesByName(e.name,u(e))}function h(e){return r.filterSchemesByTag(e.includedTags,e.excludedTags,u(e))}function g(e){if(!e)return;const r={...e};return r.colorsForClassBreaks=r.colorsForClassBreaks.map((e=>({numClasses:e.numClasses,colors:e.colors.map((e=>e.map((e=>new o(e)))))}))),r.noDataColor&&(r.noDataColor=new o(r.noDataColor)),"outline"in r&&r.outline&&(r.outline={color:r.outline.color&&new o(r.outline.color),width:r.outline.width}),r}function d(e,o){let r=[];const a=(o||"HH").split(""),l=a[0],n=a[1];"L"===l&&e.reverse();const s="H"===n;return e.forEach((e=>{s&&e.reverse(),r=r.concat(e)})),r}function y(e,r,a){let l;return e.colorsForClassBreaks.some((e=>(e.numClasses===r&&(l=e.colors),!!l))),l=l.map((e=>e.map((e=>new o(e))))),l?d(l,a):null}function b(e,o){const r=o?e:g(e);return r.colorsForClassBreaks.forEach((e=>{const o=e.colors.reverse(),r=[];for(let a=0;a<e.numClasses;a++){const e=[];o.forEach((o=>{e.push(o[a])})),r.push(e)}e.colors=r})),r}function f(e){const o=e.theme||"default",r=e.geometryType,a=e.colors,l=e.numClasses,n=p.get(o);if(!n)return;const s=n.supportedBasemaps,t=[];return s.forEach((e=>{const n=u({theme:o,basemap:e,geometryType:r});if(n){let e=k(n.primaryScheme,a,l);e&&t.push(e),n.secondarySchemes.forEach((o=>{e=k(o,a,l),e&&t.push(e)}))}})),t}function C(e,o,r,l){let n;const s=y(e,r,l);if(s){1===a.hasIdenticalColors(o,s)&&(n=e)}return n}function w(e,o,r,a){let l,n=1;do{l=C(e,o,r,a),l||(e=b(e),n++)}while(!l&&n<=4);return l}function k(e,o,r){return w(e,o,r,"HH")||w(e,o,r,"HL")||w(e,o,r,"LH")||w(e,o,r,"LL")}function B(e,r,n){const s="mesh"!==e.geometryType&&e.worldScale?e.view:null,t=l[r],i=e.theme||"default";if(!t)return;const p=i+"/"+e.basemap+"/"+r,c=[];for(const e in t)if("stops"!==e&&"name"!==e&&"tags"!==e){const o=+e,r=t[e];c.push({numClasses:o,colors:r})}switch(e.geometryType){case"point":case"multipoint":{const e=n;return function(e,r){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:D(e.colorsForClassBreaks),noDataColor:new o(e.noDataColor),outline:{color:new o(e.outline.color),width:e.outline.width},size:r?a.toWorldScale(e.size,r):e.size,opacity:e.opacity}}({id:p,name:t.name,tags:t.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:1,outline:e.outline,size:e.size},s)}case"polyline":{const e=n;return function(e,r){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:D(e.colorsForClassBreaks),noDataColor:new o(e.noDataColor),opacity:e.opacity,width:r?a.toWorldScale(e.width,r):e.width}}({id:p,name:t.name,tags:t.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:1,width:e.width},s)}case"polygon":{const e=n,r={id:p,name:t.name,tags:t.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:e.fillOpacity,outline:e.outline};return{id:(u=r).id,name:u.name,tags:[...u.tags],colorsForClassBreaks:D(u.colorsForClassBreaks),noDataColor:new o(u.noDataColor),outline:{color:new o(u.outline.color),width:u.outline.width},opacity:u.opacity}}case"mesh":{const e=n;return function(e){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:D(e.colorsForClassBreaks),noDataColor:new o(e.noDataColor),opacity:e.opacity}}({id:p,name:t.name,tags:t.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:e.fillOpacity})}}var u}function D(e){return e.map((e=>({numClasses:e.numClasses,colors:e.colors.map((e=>e.map((e=>new o(e)))))})))}var S=Object.freeze({__proto__:null,getThemes:c,getSchemes:u,getSchemeByName:m,getSchemesByTag:h,cloneScheme:g,flatten2DArray:d,getColors:y,flipColors:b,getMatchingSchemes:f});e.cloneScheme=g,e.flatten2DArray=d,e.flipColors=b,e.getColors=y,e.getMatchingSchemes=f,e.getSchemeByName=m,e.getSchemes=u,e.getSchemesByTag=h,e.getThemes=c,e.relationshipSymbology=S}));
