/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["exports","../Color","../smartMapping/renderers/support/utils","../smartMapping/symbology/support/colors","../smartMapping/symbology/support/symbologyUtils"],(function(e,o,t,n,a){"use strict";const r={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"}},i=["vibrant-rainbow","cat-dark","predominant-v2","predominant-v1","predominance-race","desert-blooms","tropical-bliss","under-the-sea","ocean-bay","cat-light","predominant-v4","predominance-money","predominant-v3","predominance-race-ethnic","pastel-chalk","predominance-rainbow","predominance-sequence"],s={default:{name:"default",label:"Default",description:"Default theme for visualizing features using the density of randomly placed dots.",schemes:{default:{light:{primary:"predominant-v5",secondary:i,common:{outline:r.light,fillOpacity:.8}},dark:{primary:"predominant-v5",secondary:i,common:{outline:r.dark,fillOpacity:.8}}}}}},c=a.createThemes({themeDictionary:s});function m(e){return a.getThemesforBasemap(c,e)}function l(e){const o="default",t=a.getRawSchemes({basemap:e.basemap,basemapTheme:e.basemapTheme,theme:c.get(o)});if(!t)return;const{schemesInfo:n,basemapId:r,basemapTheme:i}=t,s=n.common,m=e.numColors;return{primaryScheme:h(n.primary,s,m),secondarySchemes:n.secondary.map((e=>h(e,s,m))).filter(Boolean),basemapId:r,basemapTheme:i}}function p(e){return a.filterSchemesByName(e.name,l(e))}function u(e){return a.filterSchemesByTag(e.includedTags,e.excludedTags,l(e))}function d(e){if(!e)return;const t={...e};return t.tags=[...t.tags],t.colors&&(t.colors=t.colors.map((e=>new o(e)))),t.outline&&(t.outline={color:t.outline.color&&new o(t.outline.color),width:t.outline.width}),t}function h(e,o,a){const r=n[e];if(!r)return;return g({name:r.name,tags:r.tags,colors:r[a]||t.createColors(r.stops,a),opacity:o.fillOpacity,outline:o.outline})}function g(e){return{name:e.name,tags:[...e.tags],colors:e.colors.map((e=>new o(e))),outline:{color:new o(e.outline.color),width:e.outline.width},opacity:e.opacity}}const y=Object.freeze(Object.defineProperty({__proto__:null,getThemes:m,getSchemes:l,getSchemeByName:p,getSchemesByTag:u,cloneScheme:d},Symbol.toStringTag,{value:"Module"}));e.cloneScheme=d,e.dotDensitySymbology=y,e.getSchemeByName=p,e.getSchemes=l,e.getSchemesByTag=u,e.getThemes=m}));
