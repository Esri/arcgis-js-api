/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../core/mathUtils","./vec3f64","./vec3","../core/ObjectStack","../views/3d/support/stack"],(function(t,e,n,r,c,o){"use strict";function i(t){return t?{origin:n.clone(t.origin),vector:n.clone(t.vector)}:{origin:n.create(),vector:n.create()}}function s(t,e){const n=A.get();return n.origin=t,n.vector=e,n}function a(t,e=i()){return u(t.origin,t.vector,e)}function u(t,e,n=i()){return r.copy(n.origin,t),r.copy(n.vector,e),n}function d(t,e,n=i()){return r.copy(n.origin,t),r.subtract(n.vector,e,t),n}function g(t,n){const c=r.subtract(o.sv3d.get(),n,t.origin),i=r.dot(t.vector,c),s=r.dot(t.vector,t.vector),a=e.clamp(i/s,0,1),u=r.subtract(o.sv3d.get(),r.scale(o.sv3d.get(),t.vector,a),c);return r.dot(u,u)}function l(t,e){return Math.sqrt(g(t,e))}function v(t,e,n){return f(t,e,0,1,n)}function p(t,e,n){return r.add(n,t.origin,r.scale(n,t.vector,e))}function f(t,n,c,i,s){const{vector:a,origin:u}=t,d=r.subtract(o.sv3d.get(),n,u),g=r.length(a),l=r.dot(a,d)/g;return r.scale(s,a,e.clamp(l,c,i)),r.add(s,s,t.origin)}function m(t,e){if(M(t,s(e.origin,e.direction),!1,y)){const{tA:e,pB:n,distance2:c}=y;if(e>=0&&e<=1)return c;if(e<0)return r.squaredDistance(t.origin,n);if(e>1)return r.squaredDistance(r.add(o.sv3d.get(),t.origin,t.vector),n)}return null}function b(t,e,n){return!!M(t,e,!0,y)&&(r.copy(n,y.pA),!0)}function h(t,e){return M(t,e,!0,y)?y.distance2:null}function M(t,n,c,i){const s=1e-6,a=t.origin,u=r.add(o.sv3d.get(),a,t.vector),d=n.origin,g=r.add(o.sv3d.get(),d,n.vector),l=o.sv3d.get(),v=o.sv3d.get();if(l[0]=a[0]-d[0],l[1]=a[1]-d[1],l[2]=a[2]-d[2],v[0]=g[0]-d[0],v[1]=g[1]-d[1],v[2]=g[2]-d[2],Math.abs(v[0])<s&&Math.abs(v[1])<s&&Math.abs(v[2])<s)return!1;const p=o.sv3d.get();if(p[0]=u[0]-a[0],p[1]=u[1]-a[1],p[2]=u[2]-a[2],Math.abs(p[0])<s&&Math.abs(p[1])<s&&Math.abs(p[2])<s)return!1;const f=l[0]*v[0]+l[1]*v[1]+l[2]*v[2],m=v[0]*p[0]+v[1]*p[1]+v[2]*p[2],b=l[0]*p[0]+l[1]*p[1]+l[2]*p[2],h=v[0]*v[0]+v[1]*v[1]+v[2]*v[2],M=(p[0]*p[0]+p[1]*p[1]+p[2]*p[2])*h-m*m;if(Math.abs(M)<s)return!1;let y=(f*m-b*h)/M,A=(f+m*y)/h;c&&(y=e.clamp(y,0,1),A=e.clamp(A,0,1));const P=o.sv3d.get(),j=o.sv3d.get();return P[0]=a[0]+y*p[0],P[1]=a[1]+y*p[1],P[2]=a[2]+y*p[2],j[0]=d[0]+A*v[0],j[1]=d[1]+A*v[1],j[2]=d[2]+A*v[2],i.tA=y,i.tB=A,i.pA=P,i.pB=j,i.distance2=r.squaredDistance(P,j),!0}const y={tA:0,tB:0,pA:n.create(),pB:n.create(),distance2:0},A=new c.ObjectStack((()=>({origin:null,vector:null})));var P=Object.freeze({__proto__:null,create:i,wrap:s,copy:a,fromValues:u,fromPoints:d,distance2:g,distance:l,projectPoint:v,pointAt:p,projectPointClamp:f,closestRayDistance2:m,closestLineSegmentPoint:b,closestLineSegmentDistance2:h});t.closestLineSegmentDistance2=h,t.closestLineSegmentPoint=b,t.closestRayDistance2=m,t.copy=a,t.create=i,t.distance=l,t.distance2=g,t.fromPoints=d,t.fromValues=u,t.lineSegmentModule=P,t.pointAt=p,t.projectPoint=v,t.projectPointClamp=f,t.wrap=s}));
