/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../core/has","../core/Logger","../core/mathUtils","./vec3f64","./vec3","../views/3d/support/mathUtils","./mat4","../core/ObjectStack","./mat4f64","../views/3d/support/stack","./vector","./lineSegment","./plane","./ray"],(function(t,n,e,i,s,o,r,a,c,u,l,d,g,b,f){"use strict";const p=e.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");let m=function(){this.plane=b.create(),this.origin=s.create(),this.basis1=s.create(),this.basis2=s.create()};function h(t=H){return{plane:b.create(t.plane),origin:s.clone(t.origin),basis1:s.clone(t.basis1),basis2:s.clone(t.basis2)}}function P(t,n,e){const i=W.get();return i.origin=t,i.basis1=n,i.basis2=e,i.plane=b.wrap(0,0,0,0),y(i),i}function v(t,n=h()){return I(t.origin,t.basis1,t.basis2,n)}function I(t,n,e,i=h()){return o.copy(i.origin,t),o.copy(i.basis1,n),o.copy(i.basis2,e),y(i),function(t,n){Math.abs(o.dot(t.basis1,t.basis2)/(o.length(t.basis1)*o.length(t.basis2)))>1e-6&&p.warn(n,"Provided basis vectors are not perpendicular");Math.abs(o.dot(t.basis1,B(t)))>1e-6&&p.warn(n,"Basis vectors and plane normal are not perpendicular");Math.abs(-o.dot(B(t),t.origin)-t.plane[3])>1e-6&&p.warn(n,"Plane offset is not consistent with plane origin")}(i,"fromValues()"),i}function y(t){b.fromVectorsAndPoint(t.basis2,t.basis1,t.origin,t.plane)}function S(t,n,e){t!==e&&v(t,e);const i=o.scale(l.sv3d.get(),B(t),n);return o.add(e.origin,e.origin,i),e.plane[3]-=n,e}function M(t,n,e){return j(n,e),S(e,_(t,t.origin),e),e}function j(t,n=h()){const e=(t[2]-t[0])/2,i=(t[3]-t[1])/2;return o.set(n.origin,t[0]+e,t[1]+i,0),o.set(n.basis1,e,0,0),o.set(n.basis2,0,i,0),b.fromValues(0,0,1,0,n.plane),n}function A(t,n,e){return!!b.intersectRay(t.plane,n,e)&&Y(t,e)}function w(t,n,e){if(A(t,n,e))return e;const i=V(t,n,l.sv3d.get());return o.add(e,n.origin,o.scale(l.sv3d.get(),n.direction,o.distance(n.origin,i)/o.length(n.direction))),e}function V(t,n,e){const s=J.get();D(t,n,s,J.get());let a=Number.POSITIVE_INFINITY;for(const c of X){const u=G(t,c,K.get()),d=l.sv3d.get();if(b.intersectLineSegment(s,u,d)){const t=r.directionFromTo(l.sv3d.get(),n.origin,d),s=Math.abs(i.acosClamped(o.dot(n.direction,t)));s<a&&(a=s,o.copy(e,d))}}return a===Number.POSITIVE_INFINITY?N(t,n,e):e}function N(t,n,e){if(A(t,n,e))return e;const i=J.get(),s=J.get();D(t,n,i,s);let r=Number.POSITIVE_INFINITY;for(const a of X){const c=G(t,a,K.get()),u=l.sv3d.get();if(b.intersectLineSegmentClamp(i,c,u)){const t=f.distance2(n,u);if(!b.isPointInside(s,u))continue;t<r&&(r=t,o.copy(e,u))}}return O(t,n.origin)<r&&x(t,n.origin,e),e}function x(t,n,e){const i=b.projectPoint(t.plane,n,l.sv3d.get()),s=g.projectPointClamp(z(t,t.basis1),i,-1,1,l.sv3d.get()),r=g.projectPointClamp(z(t,t.basis2),i,-1,1,l.sv3d.get());return o.subtract(e,o.add(l.sv3d.get(),s,r),t.origin),e}function L(t,n,e){const{origin:i,basis1:s,basis2:r}=t,a=o.subtract(l.sv3d.get(),n,i),c=d.projectPointSignedLength(s,a),u=d.projectPointSignedLength(r,a),g=d.projectPointSignedLength(B(t),a);return o.set(e,c,u,g)}function O(t,n){const e=L(t,n,l.sv3d.get()),{basis1:i,basis2:s}=t,r=o.length(i),a=o.length(s),c=Math.max(Math.abs(e[0])-r,0),u=Math.max(Math.abs(e[1])-a,0),d=e[2];return c*c+u*u+d*d}function T(t,n){return Math.sqrt(O(t,n))}function C(t,n){let e=Number.NEGATIVE_INFINITY;for(const i of X){const s=G(t,i,K.get()),o=g.distance2(s,n);o>e&&(e=o)}return Math.sqrt(e)}function E(t,n){return b.isPointInside(t.plane,n)&&Y(t,n)}function q(t,n,e,i){return function(t,n,e){switch(n){case 0:o.copy(e,t.basis1),o.normalize(e,e);break;case 1:o.copy(e,t.basis2),o.normalize(e,e);break;case 2:o.copy(e,B(t))}return e}(t,e,i)}function _(t,n){const e=-t.plane[3];return d.projectPointSignedLength(B(t),n)-e}function k(t,n,e,i){const s=_(t,n),r=o.scale(Q,B(t),e-s);return o.add(i,n,r),i}function R(t,n){return o.exactEquals(t.basis1,n.basis1)&&o.exactEquals(t.basis2,n.basis2)&&o.exactEquals(t.origin,n.origin)}function U(t,n,e){return t!==e&&v(t,e),a.invert(Z,n),a.transpose(Z,Z),o.transformMat4(e.basis1,t.basis1,Z),o.transformMat4(e.basis2,t.basis2,Z),o.transformMat4(b.normal(e.plane),b.normal(t.plane),Z),o.transformMat4(e.origin,t.origin,n),b.setOffsetFromPoint(e.plane,e.origin,e.plane),e}function F(t,n,e,i){return t!==i&&v(t,i),a.rotate($,a.identity($),n,e),o.transformMat4(i.basis1,t.basis1,$),o.transformMat4(i.basis2,t.basis2,$),y(i),i}function B(t){return b.normal(t.plane)}function Y(t,n){const e=o.subtract(l.sv3d.get(),n,t.origin),i=o.squaredLength(t.basis1),s=o.squaredLength(t.basis2),r=o.dot(t.basis1,e),a=o.dot(t.basis2,e);return-r-i<0&&r-i<0&&-a-s<0&&a-s<0}function z(t,n){const e=K.get();return o.copy(e.origin,t.origin),o.copy(e.vector,n),e}function G(t,n,e){const{basis1:i,basis2:s,origin:r}=t,a=o.scale(l.sv3d.get(),i,n.origin[0]),c=o.scale(l.sv3d.get(),s,n.origin[1]);o.add(e.origin,a,c),o.add(e.origin,e.origin,r);const u=o.scale(l.sv3d.get(),i,n.direction[0]),d=o.scale(l.sv3d.get(),s,n.direction[1]);return o.scale(e.vector,o.add(u,u,d),2),e}function D(t,n,e,i){const s=B(t);b.fromVectorsAndPoint(s,n.direction,n.origin,e),b.fromVectorsAndPoint(b.normal(e),s,n.origin,i)}const H={plane:b.create(),origin:s.fromValues(0,0,0),basis1:s.fromValues(1,0,0),basis2:s.fromValues(0,1,0)},J=new c.ObjectStack(b.create),K=new c.ObjectStack(g.create),Q=s.create(),W=new c.ObjectStack((()=>({origin:null,basis1:null,basis2:null,plane:null}))),X=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],Z=u.create(),$=u.create();var tt=Object.freeze({__proto__:null,BoundedPlaneClass:m,create:h,wrap:P,copy:v,fromValues:I,updateUnboundedPlane:y,elevate:S,setExtent:M,fromAABoundingRect:j,intersectRay:A,intersectRayClosestSilhouette:w,closestPointOnSilhouette:V,closestPoint:N,projectPoint:x,projectPointLocal:L,distance2:O,distance:T,distanceToSilhouette:C,extrusionContainsPoint:E,axisAt:q,altitudeAt:_,setAltitudeAt:k,equals:R,transform:U,rotate:F,normal:B,UP:H});t.BoundedPlaneClass=m,t.UP=H,t.altitudeAt=_,t.axisAt=q,t.boundedPlaneModule=tt,t.closestPoint=N,t.closestPointOnSilhouette=V,t.copy=v,t.create=h,t.distance=T,t.distance2=O,t.distanceToSilhouette=C,t.elevate=S,t.equals=R,t.extrusionContainsPoint=E,t.fromAABoundingRect=j,t.fromValues=I,t.intersectRay=A,t.intersectRayClosestSilhouette=w,t.normal=B,t.projectPoint=x,t.projectPointLocal=L,t.rotate=F,t.setAltitudeAt=k,t.setExtent=M,t.transform=U,t.updateUnboundedPlane=y,t.wrap=P}));
