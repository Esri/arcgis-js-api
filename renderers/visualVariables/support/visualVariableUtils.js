/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../../core/compilerUtils","../../../core/maybe","../../../core/Logger","../../../Color","../../../Graphic","../../support/lengthUtils","./sizeVariableUtils"],(function(e,a,i,r,t,n,s,l){"use strict";const o=r.getLogger("esri.renderers.visualVariables.support.visualVariableUtils"),c=new n,u=Math.PI;function d(e,a,r){const n="visualVariables"in e&&e.visualVariables?e.visualVariables.filter((e=>"color"===e.type))[0]:e;if(!n)return;if("esri.renderers.visualVariables.ColorVariable"!==n.declaredClass)return void o.warn("The visualVariable should be an instance of esri.renderers.visualVariables.ColorVariable");const s="number"==typeof a,l=s?null:a,c=l&&l.attributes;let u=s?a:null;const d=n.field,{ipData:f,hasExpression:p}=n.cache;let b=n.cache.compiledFunc;if(!d&&!p){const e=n.stops;return e&&e[0]&&e[0].color}if("number"!=typeof u)if(p){if(!i.isSome(r)||!i.isSome(r.arcade))return void o.error("Use of arcade expressions requires an arcade context");const e={viewingMode:r.viewingMode,scale:r.scale,spatialReference:r.spatialReference},a=r.arcade.arcadeUtils,t=a.getViewInfo(e),s=a.createExecContext(l,t);if(!b){const e=a.createSyntaxTree(n.valueExpression);b=a.createFunction(e),n.cache.compiledFunc=b}u=a.executeFunction(b,s)}else c&&(u=c[d]);const v=n.normalizationField,h=c?parseFloat(c[v]):void 0;if(null!=u&&(!v||s||!isNaN(h)&&0!==h)){isNaN(h)||s||(u/=h);const e=V(u,f);if(e){const a=e[0],s=e[1],l=a===s?n.stops[a].color:t.blendColors(n.stops[a].color,n.stops[s].color,e[2],i.isSome(r)?r.color:void 0);return new t(l)}}}function f(e,a,r){const t="visualVariables"in e&&e.visualVariables?e.visualVariables.filter((e=>"opacity"===e.type))[0]:e;if(!t)return;if("esri.renderers.visualVariables.OpacityVariable"!==t.declaredClass)return void o.warn("The visualVariable should be an instance of esri.renderers.visualVariables.OpacityVariable");const n="number"==typeof a,s=n?null:a,l=s&&s.attributes;let c=n?a:null;const u=t.field,{ipData:d,hasExpression:f}=t.cache;let p=t.cache.compiledFunc;if(!u&&!f){const e=t.stops;return e&&e[0]&&e[0].opacity}if("number"!=typeof c)if(f){if(i.isNone(r)||i.isNone(r.arcade))return void o.error("Use of arcade expressions requires an arcade context");const e={viewingMode:r.viewingMode,scale:r.scale,spatialReference:r.spatialReference},a=r.arcade.arcadeUtils,n=a.getViewInfo(e),l=a.createExecContext(s,n);if(!p){const e=a.createSyntaxTree(t.valueExpression);p=a.createFunction(e),t.cache.compiledFunc=p}c=a.executeFunction(p,l)}else l&&(c=l[u]);const b=t.normalizationField,v=l?parseFloat(l[b]):void 0;if(null!=c&&(!b||n||!isNaN(v)&&0!==v)){isNaN(v)||n||(c/=v);const e=V(c,d);if(e){const a=e[0],i=e[1];if(a===i)return t.stops[a].opacity;{const r=t.stops[a].opacity;return r+(t.stops[i].opacity-r)*e[2]}}}}function p(e,a,r){const t="visualVariables"in e&&e.visualVariables?e.visualVariables.filter((e=>"rotation"===e.type))[0]:e;if(!t)return;if("esri.renderers.visualVariables.RotationVariable"!==t.declaredClass)return void o.warn("The visualVariable should be an instance of esri.renderers.visualVariables.RotationVariable");const n=t.axis||"heading",s="heading"===n&&"arithmetic"===t.rotationType?90:0,l="heading"===n&&"arithmetic"===t.rotationType?-1:1,c="number"==typeof a?null:a,u=c&&c.attributes,d=t.field,{hasExpression:f}=t.cache;let p=t.cache.compiledFunc,b=0;if(!d&&!f)return b;if(f){if(i.isNone(r)||i.isNone(r.arcade))return void o.error("Use of arcade expressions requires an arcade context");const e={viewingMode:r.viewingMode,scale:r.scale,spatialReference:r.spatialReference},a=r.arcade.arcadeUtils,n=a.getViewInfo(e),s=a.createExecContext(c,n);if(!p){const e=a.createSyntaxTree(t.valueExpression);p=a.createFunction(e),t.cache.compiledFunc=p}b=a.executeFunction(p,s)}else u&&(b=u[d]||0);return b="number"!=typeof b||isNaN(b)?null:s+l*b,b}function b(e,a,r){const t="visualVariables"in e&&e.visualVariables?e.visualVariables.filter((e=>"size"===e.type))[0]:e;if(!t)return;if("esri.renderers.visualVariables.SizeVariable"!==t.declaredClass)return void o.warn("The visualVariable should be an instance of esri.renderers.visualVariables.SizeVariable");const n=m(function(e,a,r){const t="number"==typeof a,n=t?null:a,s=n&&n.attributes;let c=t?a:null;const{isScaleDriven:u}=e.cache;let d=e.cache.compiledFunc;if(u){const a=i.isSome(r)?r.scale:void 0,t=i.isSome(r)?r.view:void 0;c=null==a||"3d"===t?function(e){let a=null,i=null;const r=e.stops;return r?(a=r[0].value,i=r[r.length-1].value):(a=e.minDataValue||0,i=e.maxDataValue||0),(a+i)/2}(e):a}else if(!t)switch(e.inputValueType){case"expression":{if(i.isNone(r)||i.isNone(r.arcade))return void o.error("Use of arcade expressions requires an arcade context");const a={viewingMode:r.viewingMode,scale:r.scale,spatialReference:r.spatialReference},t=r.arcade.arcadeUtils,s=t.getViewInfo(a),l=t.createExecContext(n,s);if(!d){const a=t.createSyntaxTree(e.valueExpression);d=t.createFunction(a),e.cache.compiledFunc=d}c=t.executeFunction(d,l);break}case"field":s&&(c=s[e.field]);break;case"unknown":c=null}if(!l.isValidNumber(c))return null;if(t||!e.normalizationField)return c;const f=s?parseFloat(s[e.normalizationField]):null;return l.isValidNumber(f)&&0!==f?c/f:null}(t,a,r),t,a,r,t.cache.ipData);return null==n||isNaN(n)?0:n}function v(e,a,i){return null==e?null:l.isSizeVariable(e)?b(e,a,i):l.isValidNumber(e)?e:null}function h(e,a,i){return l.isValidNumber(i)&&e>i?i:l.isValidNumber(a)&&e<a?a:e}function m(e,a,r,t,n){switch(a.transformationType){case"additive":return function(e,a,i,r){return e+(v(a.minSize,i,r)||a.minDataValue)}(e,a,r,t);case"constant":return function(e,a,i){const r=e.stops;let t=r&&r.length&&r[0].size;return null==t&&(t=e.minSize),v(t,a,i)}(a,r,t);case"clamped-linear":return function(e,a,r,t){const n=(e-a.minDataValue)/(a.maxDataValue-a.minDataValue),s=v(a.minSize,r,t),l=v(a.maxSize,r,t),o=i.isSome(t)?t.shape:void 0;if(e<=a.minDataValue)return s;if(e>=a.maxDataValue)return l;if("area"===a.scaleBy&&o){const e="circle"===o,a=e?u*Math.pow(s/2,2):s*s,i=a+n*((e?u*Math.pow(l/2,2):l*l)-a);return e?2*Math.sqrt(i/u):Math.sqrt(i)}return s+n*(l-s)}(e,a,r,t);case"proportional":return function(e,a,r,t){const n=i.isSome(t)?t.shape:void 0,s=e/a.minDataValue,l=v(a.minSize,r,t),o=v(a.maxSize,r,t);let c=null;return c="circle"===n?2*Math.sqrt(s*Math.pow(l/2,2)):"square"===n||"diamond"===n||"image"===n?Math.sqrt(s*Math.pow(l,2)):s*l,h(c,l,o)}(e,a,r,t);case"stops":return function(e,a,i,r,t){const[n,s,l]=V(e,t);if(n===s)return v(a.stops[n].size,i,r);{const e=v(a.stops[n].size,i,r);return e+(v(a.stops[s].size,i,r)-e)*l}}(e,a,r,t,n);case"real-world-size":return function(e,a,r,t){const n=(i.isSome(t)&&t.resolution?t.resolution:1)*s.meterIn[a.valueUnit],l=v(a.minSize,r,t),o=v(a.maxSize,r,t),{valueRepresentation:c}=a;let d=null;return d="area"===c?2*Math.sqrt(e/u)/n:"radius"===c||"distance"===c?2*e/n:e/n,h(d,l,o)}(e,a,r,t);case"identity":return e;case"unknown":return null}}function V(e,a){if(!a)return;let i=0,r=a.length-1;return a.some(((a,t)=>e<a?(r=t,!0):(i=t,!1))),[i,r,(e-a[i])/(a[r]-a[i])]}e.getAllSizes=function(e,i,r){const t=["proportional","proportional","proportional"];for(const n of e){const e=n.useSymbolValue?"symbol-value":b(n,i,r);switch(n.axis){case"width":t[0]=e;break;case"depth":t[1]=e;break;case"height":t[2]=e;break;case"width-and-depth":t[0]=e,t[1]=e;break;case"all":case void 0:case null:t[0]=e,t[1]=e,t[2]=e;break;default:a.neverReached(n.axis)}}return t},e.getColor=d,e.getOpacity=f,e.getRotationAngle=p,e.getSize=b,e.getSizeForValue=m,e.getSizeFromNumberOrVariable=v,e.getSizeRangeAtScale=function(e,a,i){const{isScaleDriven:r}=e.cache;if(!(r&&"3d"===i||a))return null;const t={scale:a,view:i};let n=v(e.minSize,c,t),s=v(e.maxSize,c,t);if(null!=n||null!=s){if(n>s){const e=s;s=n,n=e}return{minSize:n,maxSize:s}}},e.getVisualVariableValues=function(e,a,i){if(!e.visualVariables)return;const r=[],t=[],n=[],s=[],l=[];for(const a of e.visualVariables)switch(a.type){case"color":t.push(a);break;case"opacity":n.push(a);break;case"rotation":l.push(a);break;case"size":s.push(a)}return t.forEach((e=>{const t=d(e,a,i);r.push({variable:e,value:t})})),n.forEach((e=>{const t=f(e,a,i);r.push({variable:e,value:t})})),l.forEach((e=>{const t=p(e,a,i);r.push({variable:e,value:t})})),s.forEach((e=>{const t=b(e,a,i);r.push({variable:e,value:t})})),r.filter((e=>null!=e.value))},e.viewScaleRE=/^\s*(return\s+)?\$view\.scale\s*(;)?\s*$/i,Object.defineProperty(e,"__esModule",{value:!0})}));
