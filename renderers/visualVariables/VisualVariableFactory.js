/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import{JSONMap as e}from"../../core/jsonMap.js";import a from"../../core/Logger.js";import o from"../../core/Warning.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import l from"./ColorVariable.js";import n from"./OpacityVariable.js";import c from"./RotationVariable.js";import p from"./SizeVariable.js";const u=a.getLogger("esri.renderers.visualVariables.VisualVariableFactory"),b={color:l,size:p,opacity:n,rotation:c},V=new e({colorInfo:"color",transparencyInfo:"opacity",rotationInfo:"rotation",sizeInfo:"size"}),h=/^\[([^\]]+)\]$/i;let m=class extends s{constructor(){super(...arguments),this.colorVariables=null,this.opacityVariables=null,this.rotationVariables=null,this.sizeVariables=null}set visualVariables(r){if(this._resetVariables(),(r=r&&r.filter((r=>!!r)))&&r.length){for(const s of r)switch(s.type){case"color":this.colorVariables.push(s);break;case"opacity":this.opacityVariables.push(s);break;case"rotation":this.rotationVariables.push(s);break;case"size":this.sizeVariables.push(s)}if(this.sizeVariables.length){this.sizeVariables.some((r=>!!r.target))&&r.sort(((r,s)=>{let e=null;return e=r.target===s.target?0:r.target?1:-1,e}))}for(let s=0;s<r.length;s++){r[s].index=s}this._set("visualVariables",r)}else this._set("visualVariables",r)}readVariables(r,s,e){const{rotationExpression:a,rotationType:t}=s,i=a&&a.match(h),l=i&&i[1];if(l&&(r||(r=[]),r.push({type:"rotationInfo",rotationType:t,field:l})),r)return r.map((r=>{const s=V.read(r.type),a=b[s];a||(u.warn(`Unknown variable type: ${s}`),e&&e.messages&&e.messages.push(new o("visual-variable:unsupported",`visualVariable of type '${s}' is not supported`,{definition:r,context:e})));const t=new a;return t.read(r,e),t}))}writeVariables(r,s){const e=[];for(const a of r){const r=a.toJSON(s);r&&e.push(r)}return e}_resetVariables(){this.colorVariables=[],this.opacityVariables=[],this.rotationVariables=[],this.sizeVariables=[]}};r([t()],m.prototype,"visualVariables",null),m=r([i("esri.renderers.visualVariables.VisualVariableFactory")],m);const f=m;export{f as default};
