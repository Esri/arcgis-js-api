/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../core/maybe","../../Color","../visualVariables/support/visualVariableUtils"],(function(e,t,i,o){"use strict";function r(e,i){if(!e||e.symbol)return null;const o=i&&i.renderer;return e&&t.isSome(o)&&o.getObservationRenderer?o.getObservationRenderer(e):o}function n(e,i){if(t.isSome(e.symbol))return e.symbol;const o=r(e,i);return t.isSome(o)?o.getSymbol(e,i):null}async function a(e,i){if(t.isSome(e.symbol))return e.symbol;const o=r(e,i);return t.isSome(o)&&o.getSymbolAsync(e,{...i,abortOptions:{signal:i.signal}})}e.getDriverAxisSizeValue=function(e,t=0){const i=e[t];return"number"==typeof i&&isFinite(i)?i:null},e.getDriverAxisSizeValueAny=function(e){for(let t=0;t<3;t++){const i=e[t];if("number"==typeof i)return isFinite(i)?i:0}return 0},e.getRenderer=r,e.getRenderingInfo=function(e,i){const a=r(e,i),s=n(e,i);if(!s)return null;const l={renderer:a,symbol:s};if(t.isNone(a)||!("visualVariables"in a)||!a.visualVariables)return l;const u=o.getVisualVariableValues(a,e,i),c=["proportional","proportional","proportional"];for(const{variable:e,value:t}of u)switch(e.type){case"color":l.color=t.toRgba();break;case"size":if("outline"===e.target)l.outlineSize=t;else{const i=e.axis,o=e.useSymbolValue?"symbol-value":t;switch(i){case"width":c[0]=o;break;case"depth":c[1]=o;break;case"height":c[2]=o;break;case"width-and-depth":c[0]=c[1]=o;break;default:c[0]=c[1]=c[2]=o}}break;case"opacity":l.opacity=t;break;case"rotation":switch(e.axis){case"tilt":l.tilt=t;break;case"roll":l.roll=t;break;default:l.heading=t}}return"proportional"===c[0]&&"proportional"===c[1]&&"proportional"===c[2]||(l.size=c),l},e.getRenderingInfoAsync=async function(e,t){const n=r(e,t),s=await a(e,t);if(!s)return null;const l={renderer:n,symbol:s};if(!n||!("visualVariables"in n)||!n.visualVariables)return l;const u=o.getVisualVariableValues(n,e,t),c=["proportional","proportional","proportional"];for(const{variable:e,value:t}of u)if("color"===e.type)l.color=i.toUnitRGBA(t);else if("size"===e.type)if("outline"===e.target)l.outlineSize=t;else{const i=e.axis,o=e.useSymbolValue?"symbol-value":t;"width"===i?c[0]=o:"depth"===i?c[1]=o:"height"===i?c[2]=o:c[0]=c[1]="width-and-depth"===i?o:c[2]=o}else"opacity"===e.type?l.opacity=t:"rotation"===e.type&&"tilt"===e.axis?l.tilt=t:"rotation"===e.type&&"roll"===e.axis?l.roll=t:"rotation"===e.type&&(l.heading=t);return(isFinite(c[0])||isFinite(c[1])||isFinite(c[2]))&&(l.size=c),l},e.getSymbol=n,e.getSymbolAsync=a,Object.defineProperty(e,"__esModule",{value:!0})}));
