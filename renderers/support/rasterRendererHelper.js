/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../Color.js";import"../../rasterRenderers.js";import{isSome as t,unwrap as n,isNone as r}from"../../core/maybe.js";import{getMetersPerUnitForSR as a}from"../../core/unitUtils.js";import s from"../../layers/support/Field.js";import o from"../../layers/support/RasterInfo.js";import i from"../FlowRenderer.js";import l from"./AuthoringInfo.js";import u from"./ClassBreakInfo.js";import{PREDEFINED_JSON_COLOR_RAMPS as m,convertColorRampToColormap as c}from"./colorRampUtils.js";import f from"./UniqueValueInfo.js";import p from"../../rest/support/AlgorithmicColorRamp.js";import d from"../../rest/support/ClassBreaksDefinition.js";import{createGenerateRendererClassBreaks as b}from"../../rest/support/generateRendererUtils.js";import h from"../../rest/support/MultipartColorRamp.js";import g from"../RasterStretchRenderer.js";import y from"../UniqueValueRenderer.js";import v from"../RasterColormapRenderer.js";import C from"../RasterShadedReliefRenderer.js";import w from"../ClassBreaksRenderer.js";import M from"../VectorFieldRenderer.js";const x=.25,T=h.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),R=h.fromJSON(m[0]),j=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function k(e,n){const{attributeTable:r,colormap:a}=e;if(X(e)){const n=$(e);if(t(n))return n}if(t(a)){const n=A(e);if(t(n))return n}if(t(r)){const n=N(e);if(t(n))return n}return S(e,n)}function V(e){const t=["raster-stretch"];return U(e)&&t.push("raster-colormap"),O(e)&&t.push("unique-value"),_(e)&&t.push("class-breaks"),D(e)&&t.push("raster-shaded-relief"),X(e)&&t.push("vector-field"),Y(e)&&t.push("flow"),t}function I(e,t,n){const r=["nearest","bilinear","cubic","majority"].find((e=>e===n?.toLowerCase()));if("Map"===t)return r??"bilinear";if("standard-time"===e.dataType)return r??"nearest";return"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===r||"majority"===r?r:"nearest":r??"bilinear"}function S(e,r){e=L(e,r?.variableName);const{bandCount:a}=e;let{bandIds:s,stretchType:o}=r||{};s?.some((e=>e>=a))&&(s=null);let i=n(e.statistics),l=n(e.histograms);a>1?(s=s?.length?s:B(e),i=null==i?null:s.map((e=>i[e])),l=null==l?null:s.map((e=>l[e]))):s=[0],null==o&&(o=F(e));let u=!1;switch(o){case"none":u=!1;break;case"percent-clip":u=!l?.length;break;default:u=!i?.length}const{dataType:m}=e,c=1===s?.length&&j.has(m)?T:null,f=new g({stretchType:o,dynamicRangeAdjustment:u,colorRamp:c,outputMin:0,outputMax:255,gamma:1===s.length?[1]:[1,1,1],useGamma:!1});return"percent-clip"===o?f.maxPercent=f.minPercent=x:"standard-deviation"===o&&(f.numberOfStandardDeviations=2),u||!t(e.multidimensionalInfo)&&!r?.includeStatisticsInStretch||("percent-clip"===o?f.histograms=l:"min-max"!==o&&"standard-deviation"!==o||(f.statistics=i)),f}function L(e,r){if(null==r)return e;let a=n(e.statistics),s=n(e.histograms);const{multidimensionalInfo:i}=e;if(r&&t(i)){const e=i.variables.find((e=>e.name===r));if(e){const{statistics:t,histograms:n}=e;t?.length&&(a=t),n?.length&&(s=n)}}return o.fromJSON({...e.toJSON(),statistics:a,histograms:s})}function B(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const n=e.keyProperties&&e.keyProperties.BandProperties;let r;if(n&&n.length===t){const{red:e,green:t,blue:a,nir:s}=q(n);null!=e&&null!=t&&null!=a?r=[e,t,a]:null!=s&&null!=e&&null!=t&&(r=[s,e,t])}return!r&&t>=3&&(r=[0,1,2]),r}function E(e,t){const n=e.keyProperties&&e.keyProperties.BandProperties;return(t=t?.length?t:Array.from(Array(e.bandCount).keys())).map((t=>n&&n.length===e.bandCount&&n[t]&&n[t].BandName||"band_"+(t+1)))}function q(e){const t={};for(let n=0;n<e.length;n++){const r=e[n],a=r.BandName?.toLowerCase();if("red"===a)t.red=n;else if("green"===a)t.green=n;else if("blue"===a)t.blue=n;else if("nearinfrared"===a||"nearinfrared_1"===a||"nir"===a)t.nir=n;else if(r.WavelengthMax&&r.WavelengthMin){const e=r.WavelengthMin,a=r.WavelengthMax;null==t.blue&&e>=410&&e<=480&&a>=480&&a<=540?t.blue=n:null==t.green&&e>=490&&e<=560&&a>=560&&a<=610?t.green=n:null==t.red&&e>=595&&e<=670&&a>=660&&a<=730?t.red=n:null==t.nir&&e>=700&&e<=860&&a>=800&&a<=950&&(t.nir=n)}}return t}function F(e){let n="percent-clip";const{pixelType:r,dataType:a,histograms:s,statistics:o}=e;return"u8"!==r||"processed"!==a&&t(s)&&t(o)?"u8"===r||"elevation"===a||j.has(a)?n="min-max":t(s)?n="percent-clip":t(o)&&(n="min-max"):n="none",n}function N(n,r,a,s){if(!O(n,r))return null;const{attributeTable:o,statistics:i}=n,u=P(o,r),m=W(o,"red"),p=W(o,"green"),d=W(o,"blue"),b=new l,h=[],g=new Set,v=!!(m&&p&&d);if(t(o))o.features.forEach((t=>{const n=t.attributes[u.name];if(!g.has(t.attributes[u.name])&&null!=n){g.add(n);const r=v&&("single"===m.type||"double"===m.type)&&("single"===p.type||"double"===p.type)&&("single"===d.type||"double"===d.type)&&!o.features.some((e=>e.attributes[m.name]>1||e.attributes[p.name]>1||e.attributes[d.name]>1)),a=r?255:1;h.push(new f({value:t.attributes[u.name],label:t.attributes[u.name]+"",symbol:{type:"simple-fill",style:"solid",outline:null,color:new e(v?[t.attributes[m.name]*a,t.attributes[p.name]*a,t.attributes[d.name]*a,1]:[0,0,0,0])}}))}}));else if(i?.[0])for(let t=i[0].min;t<=i[0].max;t++)h.push(new f({value:t,label:t.toString(),symbol:{type:"simple-fill",style:"solid",outline:null,color:new e([0,0,0,0])}}));if(h.sort(((e,t)=>e.value&&"string"==typeof e.value.valueOf()?0:e.value>t.value?1:-1)),!v){const t=c(R,h.length);h.forEach(((n,r)=>n.symbol.color=new e(t[r].slice(1,4)))),b.colorRamp=R}if(a||s){const t=a||c(s,h.length).map((e=>e.slice(1)));h.forEach(((n,r)=>n.symbol.color=new e(t[r]))),b.colorRamp=s}return new y({field:u.name,uniqueValueInfos:h,authoringInfo:b})}function P(e,n,r){let a;return t(e)?(a=n?e.fields.find((e=>n.toLowerCase()===e.name.toLowerCase())):z(e.fields),a||(r||(a=e.fields.find((e=>"string"===e.type))),a||(a=W(e,"value")))):a=new s({name:"value"}),a}function z(e){let t;for(let n=0;n<e.length;n++){const r=e[n].name.toLowerCase();if("string"===e[n].type){if(r.startsWith("class")){t=e[n];break}null==t&&(r.endsWith("name")||r.endsWith("type"))&&(t=e[n])}}return t}function W(e,t){return r(e)?null:e.fields.find((e=>e.name.toLowerCase()===t))}function O(e,t){const{attributeTable:n,bandCount:a}=e;if(r(n)&&K(e))return!0;if(r(n)||a>1)return!1;if(t){if(null==n.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function U(e){const{bandCount:n,colormap:r}=e;return t(r)&&r.length&&1===n}function A(e){if(!U(e))return null;let r;const{attributeTable:a,colormap:s}=e;if(t(a)){const e=W(a,"value"),t=P(a,null,!0);"string"===t.type&&(r={},a.features.forEach((n=>{const a=n.attributes;r[a[e.name]]=t?a[t.name]:a[e.name]})))}return v.createFromColormap(n(s),r)}function D(e){const{bandCount:t,dataType:n,pixelType:r}=e;return"elevation"===n||"generic"===n&&1===t&&("s16"===r||"f32"===r||"f64"===r)}function J(e,t){if(!D(e))return null;const{extent:n}=e,r=n.width*a(n.spatialReference);return new C({hillshadeType:t=t??"multi-directional",scalingType:r>5e6?"adjusted":"none"})}function _(e){const{attributeTable:n,bandCount:r}=e;return 1===r&&(t(n)||t(e.histograms))}function G(e,n){e=L(e,n?.variableName);const{attributeTable:r}=e;if(!_(e))return null;const a=t(e.histograms)?e.histograms[0]:null,s=isFinite(n?.numClasses)?n.numClasses:5,o=new l({classificationMethod:n?.classificationMethod,colorRamp:n?.colorRamp});let i=n?.field||"value";const m=[],f=[],p=1e3,h=t(r),g=h&&r.fields.find((e=>"count"===e.name.toLowerCase())),y=h&&r.fields.find((e=>e.name.toLowerCase()===i.toLowerCase()));if(y){i=y.name;const e=r.features.length;let t=0;r.features.forEach((n=>t+=(g?n.attributes[g.name]:50)/e)),r.features.forEach((n=>{const r=n.attributes[y.name],a=g?n.attributes[g.name]:50;if(a>0){f.push(a);const n=Math.max(1,Math.round(a/e/t*p));for(let e=0;e<n;e++)m.push(r)}}))}else{const{pixelType:t}=e,n=(a.max-a.min)/a.size,s=t.includes("s")||t.includes("u"),o=s&&1===n?Math.floor(a.min+.5):a.min,i=s&&1===n?Math.floor(a.max-.5):a.max,l=a.size;let u,c=0;a.counts.forEach((e=>c+=e/l)),a.counts.forEach(((e,t)=>{if(e>0){f.push(e);const s=Math.max(1,Math.round(e/l/c*p));u=h?r.features[t].attributes[y.name]:0===t?o:t===l-1?i:a.min+n*(t+.5);for(let e=0;e<s;e++)m.push(u)}}))}const v=n?.classificationMethod||"natural-breaks";let C=n?.definedInterval;"defined-interval"!==v||C||(C=H(e,y,s));const M=b({values:m,valueFrequency:f,normalizationTotal:null,definition:new d({classificationMethod:v,breakCount:s,definedInterval:C})});let x=n?.colors;if(!x){const e=n?.colorRamp||T;o.colorRamp=e;const t=c(e,M.classBreaks.length,!0);x=t.map((e=>e.slice(1)))}const R=M.classBreaks.map(((e,t)=>new u({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:{type:"simple-fill",color:x[t]}})));return new w({field:i,classBreakInfos:R,authoringInfo:o})}function H(e,n,r){let a=0,s=0;if(t(e.attributeTable)){const t=e.attributeTable;a=s=t.features[0].attributes[n.name],t.features.forEach((e=>{const t=e.attributes[n.name];t<a&&(a=t),t>s&&(s=t)}))}else if(t(e.histograms)){const t=e.histograms;a=t[0].min,s=t[0].max}return(s-a)/r}function K(e){return["u8","s8"].includes(e.pixelType)&&null!=e.statistics?.[0]?.min&&null!=e.statistics[0]?.max&&1===e.bandCount}function Q(t){const n=[];for(let r=0;r<t.length-1;r++)n[r]=new p({algorithm:"hsv",fromColor:t[r],toColor:t[r+1]||new e({r:255,g:255,b:255,a:1})});if(t.length>2){return new h({colorRamps:n})}return n[0]}function X(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}function Y(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}const Z=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function $(e){if(!X(e))return null;let n;if(t(e.statistics)&&e.statistics.length&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:t,maxMagnitude:r}=re(e.dataType,e.statistics);n=[{type:"size",field:"Magnitude",minSize:10,maxSize:40,minDataValue:t,maxDataValue:r}]}const r=t(e.multidimensionalInfo)?Z.get(e.multidimensionalInfo.variables[0].unit):null,a=new M({visualVariables:n,inputUnit:r,rotationType:"geographic"});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function ee(e){return{color:e.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function te(e){if("uniqueValue"===e.type){const t=e.uniqueValueInfos;return t[0].symbol?.symbolLayers?.length&&(e.uniqueValueInfos=t.map((e=>({value:e.value,label:e.label,symbol:e.symbol?ee(e.symbol):null})))),e}if("classBreaks"===e.type){const t=e.classBreakInfos;return t[0].symbol?.symbolLayers?.length&&(e.classBreakInfos=t.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?ee(e.symbol):null})))),e}return e}function ne(e){if(!Y(e))return null;let n;if(t(e.statistics)&&e.statistics.length>0&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:t,maxMagnitude:r}=re(e.dataType,e.statistics);n=[{type:"color",field:"Magnitude",stops:[{value:t,color:"#1020C0"},{value:r,color:"#C02010"}]}]}return new i({visualVariables:n})}function re(e,t){let n,r;if("vector-magdir"===e)n=t[0].min,r=t[0].max;else{const e=t[0].min,a=t[0].max,s=t[1].min,o=t[1].max;n=0,r=Math.max(Math.abs(e),Math.abs(s),Math.abs(a),Math.abs(o))}return{minMagnitude:n,maxMagnitude:r}}export{G as createClassBreaksRenderer,Q as createColorRamp,A as createColormapRenderer,k as createDefaultRenderer,ne as createFlowRenderer,J as createShadedReliefRenderer,S as createStretchRenderer,N as createUVRenderer,$ as createVectorFieldRenderer,re as estimateMagnitudeRange,E as getBandNames,P as getClassField,B as getDefaultBandCombination,I as getDefaultInterpolation,H as getDefinedInterval,W as getField,V as getSupportedRendererTypes,q as getWellKnownBandIndexes,_ as isClassBreaksSupported,U as isColormapRendererSupported,Y as isFlowRendererSupported,D as isShadedReliefRendererSupported,K as isSingleBand8BitRasterWithStats,O as isUVRendererSupported,X as isVectorFieldRendererSupported,te as normalizeRendererJSON};
