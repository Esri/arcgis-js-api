/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["exports","../../core/maybe","../../Color","../../core/unitUtils","../../tasks/support/MultipartColorRamp","./ClassBreakInfo","../ClassBreaksRenderer","./colorRampUtils","../RasterColormapRenderer","../RasterShadedReliefRenderer","../RasterStretchRenderer","./UniqueValueInfo","../UniqueValueRenderer","../VectorFieldRenderer","../../rasterRenderers","../../layers/support/RasterInfo","../../tasks/support/ClassBreaksDefinition","../../tasks/support/generateRendererUtils"],(function(e,t,n,r,a,l,o,i,s,u,c,m,d,f,p,h,b,g){"use strict";const v=a.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),C=a.fromJSON(i.PREDEFINED_JSON_COLOR_RAMPS[0]);function R(e,n){var r,a,l,o;e=S(e,null==n?void 0:n.variableName);const{bandCount:i}=e;let{bandIds:s,stretchType:u}=n||{};null!=(r=s)&&r.some((e=>e>=i))&&(s=null);let m=t.unwrap(e.statistics),d=t.unwrap(e.histograms);var f;i>1?(s=null!=(f=s)&&f.length?s:y(e),m=null==m?null:s.map((e=>m[e])),d=null==d?null:s.map((e=>d[e]))):s=[0];null==u&&(u=function(e){let n="percent-clip";const{pixelType:r,dataType:a,histograms:l,statistics:o}=e;"u8"!==r||"processed"!==a&&t.isSome(l)&&t.isSome(o)?"u8"===r||"elevation"===a||"scientific"===a?n="min-max":t.isSome(l)?n="percent-clip":t.isSome(o)&&(n="min-max",n="min-max"):n="none";return n}(e));let p=!1;switch(u){case"none":p=!1;break;case"percent-clip":p=!(null!=(a=d)&&a.length);break;default:p=!(null!=(l=m)&&l.length)}const h=1===(null==(o=s)?void 0:o.length)&&"scientific"===e.dataType?v:null,b=new c({stretchType:u,dynamicRangeAdjustment:p,colorRamp:h,outputMin:0,outputMax:255,gamma:1===s.length?[1]:[1,1,1],useGamma:!1});return"percent-clip"===u?b.maxPercent=b.minPercent=.25:"standard-deviation"===u&&(b.numberOfStandardDeviations=2),p||("percent-clip"===u?b.histograms=d:"min-max"!==u&&"standard-deviation"!==u||(b.statistics=m)),b}function S(e,n){if(null==n)return e;let r=t.unwrap(e.statistics),a=t.unwrap(e.histograms);const{multidimensionalInfo:l}=e;if(n&&t.isSome(l)){const{statistics:e,histograms:t}=l.variables.find((e=>e.name===n));null!=e&&e.length&&(r=e),null!=t&&t.length&&(a=t)}return h.fromJSON({...e.toJSON(),statistics:r,histograms:a})}function y(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const n=e.keyProperties&&e.keyProperties.BandProperties;let r;if(n&&n.length===t){const{red:e,green:t,blue:a,nir:l}=w(n);null!=e&&null!=t&&null!=a?r=[e,t,a]:null!=l&&null!=e&&null!=t&&(r=[l,e,t])}return!r&&t>=3&&(r=[0,1,2]),r}function w(e){const t={};for(let r=0;r<e.length;r++){var n;const a=e[r],l=null==(n=a.BandName)?void 0:n.toLowerCase();if("red"===l)t.red=r;else if("green"===l)t.green=r;else if("blue"===l)t.blue=r;else if("nearinfrared"===l||"nearinfrared_1"===l||"nir"===l)t.nir=r;else if(a.WavelengthMax&&a.WavelengthMin){const e=a.WavelengthMin,n=a.WavelengthMax;null==t.blue&&e>=410&&e<=480&&n>=480&&n<=540?t.blue=r:null==t.green&&e>=490&&e<=560&&n>=560&&n<=610?t.green=r:null==t.red&&e>=595&&e<=670&&n>=660&&n<=730?t.red=r:null==t.nir&&e>=700&&e<=860&&n>=800&&n<=950&&(t.nir=r)}}return t}function x(e,t){if(!k(e,t))return null;const{attributeTable:r}=e,a=T(r,t),l=M(r,"red"),o=M(r,"green"),s=M(r,"blue"),u=[],c=new Set,f=!!(l&&o&&s);if(r.features.forEach((e=>{const t=e.attributes[a.name];c.has(e.attributes[a.name])||null==t||(c.add(t),u.push(new m({value:e.attributes[a.name],label:e.attributes[a.name],symbol:{type:"simple-fill",style:"solid",outline:null,color:new n(f?[e.attributes[l.name],e.attributes[o.name],e.attributes[s.name],1]:[0,0,0,0])}})))})),!f){const e=i.convertColorRampToColormap(C,u.length);u.forEach(((t,r)=>t.symbol.color=new n(e[r].slice(1,4))))}return new d({field:a.name,uniqueValueInfos:u})}function T(e,t){let n=e.fields.find((e=>"string"===e.type&&(t===e.name.toLowerCase()||e.name.toLowerCase().indexOf("class")>-1)));return n||(n=e.fields.find((e=>"string"===e.type)),n||(n=M(e,"value"))),n}function M(e,t){return e.fields.find((e=>e.name.toLowerCase()===t))}function k(e,n){const{attributeTable:r,bandCount:a}=e;if(!t.isSome(r)||a>1)return!1;if(n){if(null==r.fields.find((e=>e.name.toLowerCase()===n.toLowerCase())))return!1}return!0}function B(e){const{bandCount:n,colormap:r}=e;return t.isSome(r)&&r.length&&1===n}function O(e){if(!B(e))return null;let n;const{attributeTable:r,colormap:a}=e;if(t.isSome(r)){const e=M(r,"value"),t=T(r);"string"===t.type&&(n={},r.features.forEach((r=>{const a=r.attributes;n[a[e.name]]=t?a[t.name]:a[e.name]})))}return s.createFromColormap(t.unwrap(a),n)}function L(e){return"elevation"===e.dataType}function V(e){const{attributeTable:n,bandCount:r}=e;return 1===r&&(t.isSome(n)||t.isSome(e.histograms))}function E(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}e.createClassBreaksRenderer=function(e,n){e=S(e,null==n?void 0:n.variableName);const{attributeTable:r}=e;if(!V(e))return null;const a=t.isSome(e.histograms)?e.histograms[0]:null,s=(null==n?void 0:n.numClasses)||4;let u=(null==n?void 0:n.field)||"value";const c=[];if(t.isSome(r)){const e=r.fields.find((e=>"count"===e.name.toLowerCase())),t=r.fields.find((e=>e.name.toLowerCase()===u.toLowerCase()));u=t.name;const n=r.features.length;let a=0;r.features.forEach((t=>a+=t.attributes[e.name]/n)),r.features.forEach((r=>{const l=r.attributes[t.name],o=r.attributes[e.name];if(o>0){const e=Math.max(1,Math.round(o/n/a*1e3));for(let t=0;t<e;t++)c.push(l)}}))}else{const{pixelType:t}=e,n=(a.max-a.min)/a.size,r=t.indexOf("s")>-1||t.indexOf("u")>-1,l=r&&1===n?Math.floor(a.min+.5):a.min,o=r&&1===n?Math.floor(a.max-.5):a.max,i=a.size;let s=0;a.counts.forEach((e=>s+=e/i)),a.counts.forEach(((e,t)=>{if(e>0){const r=Math.max(1,Math.round(e/i/s*1e3)),u=0===t?l:t===i-1?o:a.min+n*(t+.5);for(let e=0;e<r;e++)c.push(u)}}))}const m=(null==n?void 0:n.classificationMethod)||"equal-interval",d=g.createGenerateRendererClassBreaks({values:c,normalizationTotal:null,definition:new b({classificationMethod:m,breakCount:s})});let f=null==n?void 0:n.colors;if(!f){const e=(null==n?void 0:n.colorRamp)||v,t=i.convertColorRampToColormap(e,s,!0);f=t.map((e=>e.slice(1)))}const p=d.classBreaks.map(((e,t)=>new l({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:{type:"simple-fill",color:f[t]}})));return new o({field:u,classBreakInfos:p})},e.createColormapRenderer=O,e.createDefaultRenderer=function(e,n){const{attributeTable:r,colormap:a,dataType:l}=e;if("vector-uv"===l||"vector-magdir"===l)return new f;if(t.isSome(a)){const n=O(e);if(t.isSome(n))return n}if(t.isSome(r)){const n=x(e);if(t.isSome(n))return n}return R(e,n)},e.createShadedReliefRenderer=function(e,t){var n;if(!L(e))return null;const{extent:a}=e,l=a.width*r.getMetersPerUnitForSR(a.spatialReference);return t=null!=(n=t)?n:"multi-directional",new u({hillshadeType:t,scalingType:l>5e6?"adjusted":"none"})},e.createStretchRenderer=R,e.createUVRenderer=x,e.getClassField=T,e.getDefaultBandCombination=y,e.getDefaultInterpolation=function(e,t,n){const r=["nearest","bilinear","cubic","majority"].find((e=>e===(null==n?void 0:n.toLowerCase())));return"Map"===t?null!=r?r:"bilinear":"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===r||"majority"===r?r:"nearest":null!=r?r:"bilinear"},e.getSupportedRendererTypes=function(e){const t=["raster-stretch"];return B(e)&&t.push("raster-colormap"),k(e)&&t.push("unique-value"),V(e)&&t.push("class-breaks"),L(e)&&t.push("raster-shaded-relief"),E(e)&&t.push("vector-field"),t},e.getWellKnownBandIndexes=w,e.isClassBreaksSupported=V,e.isColormapRendererSupported=B,e.isShadedReliefRendererSupported=L,e.isUVRendererSupported=k,e.isVectorFieldRendererSupported=E,Object.defineProperty(e,"__esModule",{value:!0})}));
