/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/JSONSupport","../../core/colorUtils","./colorRampUtils","../../layers/support/RasterInfo","../../layers/support/rasterFunctions/pixelUtils","../../layers/support/rasterFunctions/surfaceUtils"],(function(e,t,r,o,s,n,a,i,l,u,c,p,h,f,m,d,S){"use strict";const b=s.getLogger("esri.renderers.support.RasterSymbolizer");const g={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};let y=function(t){function r(e){return t.call(this,e)||this}e._inheritsLoose(r,t);var s=r.prototype;return s.bind=function(){const{rendererJSON:e}=this;if(!e)return!1;let t;switch(this.lookup={rendererJSON:{}},e.type){case"uniqueValue":t=this._updateUVRenderer(e);break;case"rasterColormap":t=this._updateColormapRenderer(e);break;case"rasterStretch":t=this._updateStretchRenderer(e);break;case"classBreaks":t=this._updateClassBreaksRenderer(e);break;case"rasterShadedRelief":t=this._updateShadedReliefRenderer(e)}return t},s.symbolize=function(e){let t=e&&e.pixelBlock;if(!this.isValidPixelBlock(t))return t;if(e.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=d.extractBands(t,[0,1,2])),this.rendererJSON.type){case"uniqueValue":case"rasterColormap":r=this._symbolize_colormap(t);break;case"classBreaks":r=this._symbolize_classBreaks(t);break;case"rasterStretch":r=this._symbolize_stretch(t,e.bandIds);break;case"rasterShadedRelief":{const{extent:o}=e,s=o.spatialReference.isGeographic,n={x:(o.xmax-o.xmin)/t.width,y:(o.ymax-o.ymin)/t.height};r=this._symbolize_shadedRelief(t,{isGCS:s,resolution:n});break}}return r}catch(e){return b.error("symbolize",e.message),t}},s.simpleStretch=function(e,t){if(!this.isValidPixelBlock(e))return e;try{return e.pixels.length>3&&(e=d.extractBands(e,[0,1,2])),d.stretch(e,t)}catch(t){return b.error("symbolize",t.message),e}},s.generateWebGLParameters=function(e){if(["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)>-1){const{indexedColormap:e,offset:t}=this.lookup.colormapLut;return{colormap:e,colormapOffset:t,type:"lut"}}const{pixelBlock:t,isGCS:r,resolution:o,bandIds:s}=e,{rendererJSON:n}=this;return"rasterStretch"===n.type?this.generateStretchWebGLParams(t,n,s):"rasterShadedRelief"===n.type?this.generateShadedReliefWebGLParams(n,r,o):null},s._isLUTChanged=function(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const t=this.rendererJSON.colorRamp;if(e)return JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp);const r={...this.rendererJSON},o={...this.lookup.rendererJSON};return r.colorRamp=null,o.colorRamp=null,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)},s._symbolize_colormap=function(e){if(this._isLUTChanged()){if(!this.bind())return e}return d.colorize(e,this.lookup.colormapLut)},s._symbolize_classBreaks=function(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1;let o;if(this._isLUTChanged()){if(!this.bind())return e}return o=r?d.colorize(e,this.lookup.colormapLut):d.remapColor(e,this.lookup.remapLut),o},s._symbolize_stretch=function(e,t){const{pixelType:r,bandCount:o}=this.rasterInfo,s=this.rendererJSON,n=["u8","u16","s8","s16"].indexOf(r)>-1;let a,i;const{gamma:l,useGamma:u}=s;if(n){var c;if(s.dra){const o=this.getStretchCutoff(s,e,t);a=d.createStretchLUT({pixelType:r,...o,gamma:u?l:null})}else if(this._isLUTChanged()){if(!this.bind())return e;a=this.lookup?this.lookup.stretchLut:null}else a=this.lookup?this.lookup.stretchLut:null;if(!a)return e;o>1&&(null==t?void 0:t.length)===e.pixels.length&&(null==(c=a)?void 0:c.lut.length)===o&&(a={lut:t.map((e=>a.lut[e])),offset:a.offset}),i=d.lookupPixels(e,a)}else{const r=this.getStretchCutoff(s,e,t);i=d.stretch(e,{...r,gamma:u?l:null})}if(s.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind())return e}i=d.colorize(i,this.lookup.colormapLut)}return i},s._symbolize_shadedRelief=function(e,t){var r,s;const n=this.rendererJSON,a={...n,...t},i=S.hillshade(e,a);if(!n.colorRamp)return i;let l;if(this._isLUTChanged(!0)){if(!this.bind())return i;l=this.lookup?this.lookup.hsvMap:null}else l=this.lookup?this.lookup.hsvMap:null;if(!l)return i;const u=null!=(r=null==(s=o.unwrap(this.rasterInfo.statistics))?void 0:s[0])?r:{min:0,max:8e3};return S.tintHillshade(i,e,l,u),i},s._updateUVRenderer=function(e){const{bandCount:t,attributeTable:r,statistics:s,pixelType:n}=this.rasterInfo,a=e.field1;if(!a)return!1;const i=["u8","s8"].indexOf(n)>-1&&s&&null!=s[0].min&&null!=s[0].max;if(!(function(e,t){const{attributeTable:r,bandCount:s}=e;if(!o.isSome(r)||s>1)return!1;if(t&&null==r.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1;return!0}(this.rasterInfo,a)||1===t&&i))return!1;const l=[];if(r){const t=r.fields.filter((e=>"value"===e.name.toLowerCase()))[0];if(!t)return!1;r.features.forEach((r=>{var o;const s=e.uniqueValueInfos.filter((e=>String(e.value)===String(r.attributes[a])))[0],n=null==s||null==(o=s.symbol)?void 0:o.color;n&&l.push([r.attributes[t.name]].concat(n))}))}else{if("value"!==a.toLowerCase())return!1;e.uniqueValueInfos.forEach((e=>{var t;const r=null==e||null==(t=e.symbol)?void 0:t.color;r&&l.push([parseInt(""+e.value,10)].concat(r))}))}if(0===l.length)return!1;const u=d.createColormapLUT({colormap:l});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0},s._updateColormapRenderer=function(e){if(!function(e){const{bandCount:t,colormap:r}=e;return o.isSome(r)&&r.length&&1===t}(this.rasterInfo))return!1;const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return!1;const r=d.createColormapLUT({colormap:t});return this.lookup={rendererJSON:e,colormapLut:r},this.canRenderInWebGL=!0,!0},s._updateShadedReliefRenderer=function(e){if("elevation"!==this.rasterInfo.dataType)return!1;if(e.colorRamp){const t=f.convertColorRampToColormap(e.colorRamp,256,!0),r=d.createColormapLUT({colormap:t}),o=[],s=r.indexedColormap;for(let e=0;e<s.length;e+=4){const t=h.toHSV({r:s[e],g:s[e+1],b:s[e+2]});o.push([t.h/60,t.s/100,255*t.v/100])}this.lookup={rendererJSON:e,colormapLut:r,hsvMap:o}}else this.lookup=null;return this.canRenderInWebGL=!0,!0},s._updateClassBreaksRenderer=function(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1,o=e.classBreakInfos;if(null==o||!o.length)return!1;const s=o.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),n=s[s.length-1];let a=e.minValue;if(!r){const t=[];for(let e=0;e<s.length;e++){var i;t.push({value:null!=(i=s[e].classMinValue)?i:a,mappedColor:s[e].symbol.color}),a=s[e].classMaxValue}return t.push({value:n.classMaxValue,mappedColor:n.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,!0}const l=[];a=e.minValue;for(let e=0;e<s.length;e++){const t=s[e];for(let e=a;e<t.classMaxValue;e++)l.push([e].concat(t.symbol.color));a=t.classMaxValue}l.push([n.classMaxValue].concat(n.symbol.color));const u=d.createColormapLUT({colormap:l,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0},s._updateStretchRenderer=function(e){if(!("none"===e.stretchType||e.statistics||this.rasterInfo.statistics||e.dra))return!1;const t=e.histograms||this.rasterInfo.histograms;if(!e.dra&&"percentClip"===e.stretchType&&!t)return!1;const{gamma:r,useGamma:o,colorRamp:s}=e,n=this.rasterInfo.pixelType;if(!e.dra&&["u8","u16","s8","s16"].indexOf(n)>-1){const t=this.getStretchCutoff(e),s=d.createStretchLUT({pixelType:n,...t,gamma:o?r:null});this.lookup={rendererJSON:e,stretchLut:s}}if(s){const t=f.convertColorRampToColormap(s,256,!0);this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=d.createColormapLUT({colormap:t}),this.lookup.rendererJSON=e}return this.canRenderInWebGL=!0,!0},s.getStretchCutoff=function(e,t,r){let s,n;const a=e.stretchType;var i;if(e.dra)if("minMax"===a&&t.statistics)s=t.statistics.map((e=>[e.minValue,e.maxValue,0,0]));else{const e=d.estimateStatisticsHistograms(t);s=e.statistics,n=e.histograms}else s=(null==(i=e.statistics)?void 0:i.length)>0?e.statistics:o.unwrap(this.rasterInfo.statistics),n=e.histograms||o.unwrap(this.rasterInfo.histograms);const l=s||n?(s||n).length:this.rasterInfo.bandCount,u=[],c=[];let p,h,f,m,S,b,y,x,k;switch(s&&!Array.isArray(s[0])&&(s=s.map((e=>[e.min,e.max,e.avg,e.stddev]))),a){case"none":{const e=g[this.rasterInfo.pixelType]||g.f32;for(x=0;x<l;x++)u[x]=e[0],c[x]=e[1]}break;case"minMax":for(x=0;x<l;x++)u[x]=s[x][0],c[x]=s[x][1];break;case"standardDeviation":for(x=0;x<l;x++)u[x]=s[x][2]-e.numberOfStandardDeviations*s[x][3],c[x]=s[x][2]+e.numberOfStandardDeviations*s[x][3],u[x]<s[x][0]&&(u[x]=s[x][0]),c[x]>s[x][1]&&(c[x]=s[x][1]);break;case"percentClip":for(x=0;x<n.length;x++){for(p=n[x],S=new Uint32Array(p.size),m=p.counts,f=0,h=(p.max-p.min)/p.size,y=-.5===p.min&&1===h?.5:0,k=0;k<p.size;k++)f+=m[k],S[k]=f;for(b=e.minPercent*f/100,k=0;k<p.size;k++)if(S[k]>b){u[x]=p.min+h*(k+y);break}for(b=(1-e.maxPercent/100)*f,k=p.size-2;k>=0;k--)if(S[k]<b){c[x]=p.min+h*(k+2-y);break}}break;default:for(x=0;x<l;x++)u[x]=s[x][0],c[x]=s[x][1]}const C={minCutOff:u,maxCutOff:c,outMax:e.max||255,outMin:e.min||0};return this.getSelectedBandCutoffs(C,r)},s.getSelectedBandCutoffs=function(e,t){if(null==t||0===t.length)return e;const r=Math.max.apply(null,t),{minCutOff:o,maxCutOff:s,outMin:n,outMax:a}=e;return o.length===t.length||o.length<=r?e:{minCutOff:t.map((e=>o[e])),maxCutOff:t.map((e=>s[e])),outMin:n,outMax:a}},s.generateStretchWebGLParams=function(e,t,r){let o=null,s=null;const n=this.lookup&&this.lookup.colormapLut;t.colorRamp&&n&&(o=n.indexedColormap,s=n.offset);const{gamma:a}=t,i=!!(t.useGamma&&a&&a.some((e=>1!==e))),{minCutOff:l,maxCutOff:u,outMin:c,outMax:p}=this.getStretchCutoff(t,e,r);e&&e.pixels&&2===e.pixels.length&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]);const h=Math.min(3,r&&r.length||e&&e.getPlaneCount()||this.rasterInfo.bandCount),f=new Float32Array(h),m=o||i?1:255;let d;for(d=0;d<h;d++)f[d]=(p-c)/(u[d]-l[d])/m;const S=new Float32Array(h);if(i)for(d=0;d<h;d++)a[d]>1?a[d]>2?S[d]=6.5+Math.pow(a[d]-2,2.5):S[d]=6.5+100*Math.pow(2-a[d],4):S[d]=1;return{bandCount:h,outMin:c/m,outMax:p/m,minCutOff:l,maxCutOff:u,factor:f,useGamma:i,gamma:i?a:[1,1,1],gammaCorrection:i?S:[1,1,1],colormap:o,colormapOffset:s,type:"stretch"}},s.generateShadedReliefWebGLParams=function(e,t,r){var s,n,a;let i=null,l=null;const u=this.lookup&&this.lookup.colormapLut;e.colorRamp&&u&&(i=u.indexedColormap,l=u.offset);const c={...e,isGCS:t,resolution:r},p=S.calculateHillshadeParams(c),h=null==(s=o.unwrap(this.rasterInfo.statistics))?void 0:s[0];return{...p,minValue:null!=(n=h.min)?n:0,maxValue:null!=(a=h.max)?a:8e3,hillshadeType:"traditional"===e.hillshadeType?0:1,type:"hillshade",colormap:i,colormapOffset:l}},s.isValidPixelBlock=function(e){return!!(e&&e.pixels&&e.pixels.length>0&&0!==e.validPixelCount)},r}(p.JSONSupport);return t.__decorate([a.property({json:{write:!0}})],y.prototype,"rendererJSON",void 0),t.__decorate([a.property({type:m,json:{write:!0}})],y.prototype,"rasterInfo",void 0),t.__decorate([a.property({json:{write:!0}})],y.prototype,"lookup",void 0),t.__decorate([a.property({})],y.prototype,"canRenderInWebGL",void 0),y=t.__decorate([i.subclass("esri.renderers.support.RasterSymbolizer")],y),y}));
