/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/colorUtils","../../core/JSONSupport","../../core/Logger","../../core/maybe","../../core/accessorSupport/decorators/property","../../core/arrayUtils","../../core/has","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/subclass","../../layers/support/RasterInfo","../../layers/support/rasterFunctions/pixelUtils","../../layers/support/rasterFunctions/surfaceUtils","./colorRampUtils"],(function(e,t,r,s,o,a,i,n,l,u,c,p,h,m,f){"use strict";const d=o.getLogger("esri.renderers.support.RasterSymbolizer");function g(e,t){const{attributeTable:r,bandCount:s}=e;if(!a.isSome(r)||s>1)return!1;if(t){if(null==r.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function S(e){return"elevation"===e.dataType}function y(e){const{bandCount:t,colormap:r}=e;return a.isSome(r)&&r.length&&1===t}const b={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};let x=function(t){function s(e){return t.call(this,e)||this}e._inheritsLoose(s,t);var o=s.prototype;return o.bind=function(){const{rendererJSON:e}=this;if(!e)return{success:!1};let t;switch(this.lookup={rendererJSON:{}},e.type){case"uniqueValue":t={success:this._updateUVRenderer(e)};break;case"rasterColormap":t={success:this._updateColormapRenderer(e)};break;case"rasterStretch":t={success:this._updateStretchRenderer(e)};break;case"classBreaks":t={success:this._updateClassBreaksRenderer(e)};break;case"rasterShadedRelief":t={success:this._updateShadedReliefRenderer(e)};break;case"vectorField":t={success:this._updateVectorFieldRenderer()};break;case"animatedFlow":t=this._updateAnimatedFlowRenderer()}return t},o.symbolize=function(e){let t=e&&e.pixelBlock;if(!v(t))return t;if(e.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=h.extractBands(t,[0,1,2])),this.rendererJSON.type){case"uniqueValue":case"rasterColormap":r=this._symbolize_colormap(t);break;case"classBreaks":r=this._symbolize_classBreaks(t);break;case"rasterStretch":r=this._symbolize_stretch(t,e.bandIds);break;case"rasterShadedRelief":{const{extent:s}=e,o=s.spatialReference.isGeographic,a={x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height};r=this._symbolize_shadedRelief(t,{isGCS:o,resolution:a});break}}return r}catch(r){return d.error("symbolize",r.message),t}},o.simpleStretch=function(e,t){if(!v(e))return e;try{return e.pixels.length>3&&(e=h.extractBands(e,[0,1,2])),h.stretch(e,t)}catch(r){return d.error("symbolize",r.message),e}},o.generateWebGLParameters=function(e){if(["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)>-1){var t;const{indexedColormap:e,offset:r}=(null==(t=this.lookup)?void 0:t.colormapLut)||{};return{colormap:e,colormapOffset:r,type:"lut"}}const{pixelBlock:r,isGCS:s,resolution:o,bandIds:a}=e,{rendererJSON:i}=this;return"rasterStretch"===i.type?this.generateStretchWebGLParams(r,i,a):"rasterShadedRelief"===i.type?this.generateShadedReliefWebGLParams(i,s,o):"vectorField"===i.type?this._generateVectorFieldWebGLParams(i):null},o._isLUTChanged=function(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const t=this.rendererJSON.colorRamp;return e?JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp):(this.rendererJSON,this.lookup.rendererJSON,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON))}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)},o._symbolize_colormap=function(e){if(this._isLUTChanged()){if(!this.bind().success)return e}return h.colorize(e,this.lookup.colormapLut)},o._symbolize_classBreaks=function(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1;if(this._isLUTChanged()){if(!this.bind().success)return e}return r?h.colorize(e,this.lookup.colormapLut):h.remapColor(e,this.lookup.remapLut)},o._symbolize_stretch=function(e,t){const{pixelType:r,bandCount:s}=this.rasterInfo,o=this.rendererJSON,i=["u8","u16","s8","s16"].indexOf(r)>-1;let n,l;const{dra:u}=o,c=o.useGamma?o.gamma:null;if("histogramEqualization"===o.stretchType){const r=u?null:this.lookup.histogramLut,s=this.getStretchCutoff(o,e,t,!r),a=h.stretch(e,{...s,gamma:c});l=h.lookupPixels(a,{lut:u?s.histogramLut:r,offset:0})}else if(i){var p,m;if(u){const s=this.getStretchCutoff(o,e,t);n=h.createStretchLUT({pixelType:r,...s,gamma:c})}else if(this._isLUTChanged()){if(!this.bind().success)return e;n=this.lookup?this.lookup.stretchLut:null}else n=this.lookup?this.lookup.stretchLut:null;if(!n)return e;s>1&&(null==t?void 0:t.length)===(null==(p=a.unwrap(e))?void 0:p.pixels.length)&&(null==(m=n)?void 0:m.lut.length)===s&&(n={lut:t.map((e=>n.lut[e])),offset:n.offset}),l=h.lookupPixels(e,n)}else{const r=this.getStretchCutoff(o,e,t);l=h.stretch(e,{...r,gamma:c})}if(o.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind().success)return e}l=h.colorize(l,this.lookup.colormapLut)}return l},o._symbolize_shadedRelief=function(e,t){var r,s;const o=this.rendererJSON,i={...o,...t},n=m.hillshade(e,i);if(!o.colorRamp)return n;let l;if(this._isLUTChanged(!0)){if(!this.bind().success)return n;l=this.lookup?this.lookup.hsvMap:null}else l=this.lookup?this.lookup.hsvMap:null;if(!l)return n;const u=null!=(r=null==(s=a.unwrap(this.rasterInfo.statistics))?void 0:s[0])?r:{min:0,max:8e3};return m.tintHillshade(n,e,l,u),n},o._updateVectorFieldRenderer=function(){const{bandCount:e,dataType:t}=this.rasterInfo;return 2===e&&("vector-magdir"===t||"vector-uv"===t)},o._updateAnimatedFlowRenderer=function(){const{bandCount:e,dataType:t}=this.rasterInfo;return 2===e&&("vector-magdir"===t||"vector-uv"===t)?{success:!0}:{success:!1,error:`Unsupported data type "${t}"; AnimatedFlowRenderer only supports "vector-magdir" and "vector-uv".`}},o._updateUVRenderer=function(e){const{bandCount:t,attributeTable:r,pixelType:s}=this.rasterInfo,o=e.field1;if(!o)return!1;const a=e.defaultSymbol,i=1===t&&["u8","s8"].includes(s);if(!g(this.rasterInfo,o)&&!i)return!1;const n=[];if(r){const t=r.fields.filter((e=>"value"===e.name.toLowerCase()))[0];if(!t)return!1;r.features.forEach((r=>{var s;const i=e.uniqueValueInfos.filter((e=>String(e.value)===String(r.attributes[o])))[0],l=null==i||null==(s=i.symbol)?void 0:s.color;l?n.push([r.attributes[t.name]].concat(l)):a&&n.push([r.attributes[t.name]].concat(a.color))}))}else{if("value"!==o.toLowerCase())return!1;e.uniqueValueInfos.forEach((e=>{var t;const r=null==e||null==(t=e.symbol)?void 0:t.color;r?n.push([parseInt(""+e.value,10)].concat(r)):a&&n.push([parseInt(""+e.value,10)].concat(a.color))}))}if(0===n.length)return!1;const l=h.createColormapLUT({colormap:n});return this.lookup={rendererJSON:e,colormapLut:l},this.canRenderInWebGL=!0,!0},o._updateColormapRenderer=function(e){if(!y(this.rasterInfo))return!1;const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return!1;const r=h.createColormapLUT({colormap:t});return this.lookup={rendererJSON:e,colormapLut:r},this.canRenderInWebGL=!0,!0},o._updateShadedReliefRenderer=function(e){if(!S(this.rasterInfo))return!1;if(e.colorRamp){const t=f.convertColorRampToColormap(e.colorRamp,256,!0),s=h.createColormapLUT({colormap:t}),o=[],a=s.indexedColormap;for(let e=0;e<a.length;e+=4){const t=r.toHSV({r:a[e],g:a[e+1],b:a[e+2]});o.push([t.h/60,t.s/100,255*t.v/100])}this.lookup={rendererJSON:e,colormapLut:s,hsvMap:o}}else this.lookup=null;return this.canRenderInWebGL=!0,!0},o._updateClassBreaksRenderer=function(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1,s=e.classBreakInfos;if(null==s||!s.length)return!1;const o=s.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),a=o[o.length-1];let i=e.minValue;if(!r){const t=[];for(let e=0;e<o.length;e++){var n;t.push({value:null!=(n=o[e].classMinValue)?n:i,mappedColor:o[e].symbol.color}),i=o[e].classMaxValue}return t.push({value:a.classMaxValue,mappedColor:a.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,!0}const l=[];i=Math.floor(e.minValue);for(let c=0;c<o.length;c++){const e=o[c];for(let t=i;t<e.classMaxValue;t++)l.push([t].concat(e.symbol.color));i=Math.ceil(e.classMaxValue)}a.classMaxValue===i&&l.push([a.classMaxValue].concat(a.symbol.color));const u=h.createColormapLUT({colormap:l,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0},o._isHistogramRequired=function(e){return"percentClip"===e||"histogramEqualization"===e},o._isValidRasterStatistics=function(e){return a.isSome(e)&&e.length>0&&null!=e[0].min&&null!=e[0].max},o._updateStretchRenderer=function(e){var t;let{stretchType:r,dra:s}=e;if(!("none"===r||null!=(t=e.statistics)&&t.length||this._isValidRasterStatistics(this.rasterInfo.statistics)||s))return!1;const o=a.unwrap(e.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(e.stretchType)||null!=o&&o.length||s||(r="minMax");const{gamma:i,useGamma:n,colorRamp:l}=e,u=this.rasterInfo.pixelType,c=!s&&["u8","u16","s8","s16"].indexOf(u)>-1;if("histogramEqualization"===r){const t=o.map((e=>h.createHistogramEqualizationLUT(e)));this.lookup={rendererJSON:e,histogramLut:t}}else if(c){const t=this.getStretchCutoff(e),r=h.createStretchLUT({pixelType:u,...t,gamma:n?i:null});this.lookup={rendererJSON:e,stretchLut:r}}if(l){const t=f.convertColorRampToColormap(l,256,!0);this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=h.createColormapLUT({colormap:t}),this.lookup.rendererJSON=e}return this.canRenderInWebGL=!0,!0},o.getStretchCutoff=function(e,t=null,r,s){var o,i,n;let l,u,c=e.stretchType;var p;if(e.dra)if("minMax"===c&&a.isSome(t)&&t.statistics)l=t.statistics.map((e=>[e.minValue,e.maxValue,0,0]));else{const e=h.estimateStatisticsHistograms(t);l=a.isSome(e)?e.statistics:null,u=a.isSome(e)?e.histograms:null}else l=(null==(p=e.statistics)?void 0:p.length)>0?e.statistics:a.unwrap(this.rasterInfo.statistics),u=e.histograms||a.unwrap(this.rasterInfo.histograms);!this._isHistogramRequired(c)||null!=(o=u)&&o.length||(c="minMax");const m=(null==(i=l)?void 0:i.length)||(null==(n=u)?void 0:n.length)||this.rasterInfo.bandCount,f=[],d=[];let g,S,y,x,v,k,C,_,L,O,R,I;switch(l&&!Array.isArray(l[0])&&(l=l.map((e=>[e.min,e.max,e.avg,e.stddev]))),c){case"none":{const e=b[this.rasterInfo.pixelType]||b.f32;for(_=0;_<m;_++)f[_]=e[0],d[_]=e[1]}break;case"minMax":for(_=0;_<m;_++)f[_]=l[_][0],d[_]=l[_][1];break;case"standardDeviation":for(_=0;_<m;_++)f[_]=l[_][2]-e.numberOfStandardDeviations*l[_][3],d[_]=l[_][2]+e.numberOfStandardDeviations*l[_][3],f[_]<l[_][0]&&(f[_]=l[_][0]),d[_]>l[_][1]&&(d[_]=l[_][1]);break;case"histogramEqualization":for(_=0;_<m;_++)f[_]=u[_].min,d[_]=u[_].max;break;case"percentClip":for(_=0;_<u.length;_++){for(g=u[_],v=new Uint32Array(g.size),x=g.counts,y=0,S=(g.max-g.min)/g.size,C=-.5===g.min&&1===S?.5:0,L=0;L<g.size;L++)y+=x[L],v[L]=y;for(k=(e.minPercent||0)*y/100,L=0;L<g.size;L++)if(v[L]>k){f[_]=g.min+S*(L+C);break}for(k=(1-(e.maxPercent||0)/100)*y,L=g.size-2;L>=0;L--)if(v[L]<k){d[_]=g.min+S*(L+2-C);break}}break;default:for(_=0;_<m;_++)f[_]=l[_][0],d[_]=l[_][1]}"histogramEqualization"===c?(R=u[0].size||256,O=0,s&&(I=u.map((e=>h.createHistogramEqualizationLUT(e))))):(R=e.max||255,O=e.min||0);const T={minCutOff:f,maxCutOff:d,outMax:R,outMin:O,histogramLut:I};return this.getSelectedBandCutoffs(T,r)},o.getSelectedBandCutoffs=function(e,t){if(null==t||0===t.length)return e;const r=Math.max.apply(null,t),{minCutOff:s,maxCutOff:o,outMin:a,outMax:i,histogramLut:n}=e;return s.length===t.length||s.length<=r?e:{minCutOff:t.map((e=>s[e])),maxCutOff:t.map((e=>o[e])),histogramLut:n?t.map((e=>n[e])):null,outMin:a,outMax:i}},o.generateStretchWebGLParams=function(e,t,r){let s=null,o=null;const i=this.lookup&&this.lookup.colormapLut;t.colorRamp&&i&&(s=i.indexedColormap,o=i.offset),"histogramEqualization"===t.stretchType&&(t={...t,stretchType:"minMax"});const{gamma:n}=t,l=!!(t.useGamma&&n&&n.some((e=>1!==e))),{minCutOff:u,maxCutOff:c,outMin:p,outMax:h}=this.getStretchCutoff(t,e,r);let m=0;a.isSome(e)&&(m=e.getPlaneCount(),2===m&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]));const f=Math.min(3,(null==r?void 0:r.length)||m||this.rasterInfo.bandCount),d=new Float32Array(f),g=s||l?1:255;let S;for(S=0;S<f;S++)d[S]=(h-p)/(c[S]-u[S])/g;const y=new Float32Array(f);if(l)for(S=0;S<f;S++)n[S]>1?n[S]>2?y[S]=6.5+(n[S]-2)**2.5:y[S]=6.5+100*(2-n[S])**4:y[S]=1;return{bandCount:f,outMin:p/g,outMax:h/g,minCutOff:u,maxCutOff:c,factor:d,useGamma:l,gamma:l?n:[1,1,1],gammaCorrection:l?y:[1,1,1],colormap:s,colormapOffset:o,stretchType:t.stretchType,type:"stretch"}},o.generateShadedReliefWebGLParams=function(e,t,r){var s,o,i;let n=null,l=null;const u=this.lookup&&this.lookup.colormapLut;e.colorRamp&&u&&(n=u.indexedColormap,l=u.offset);const c={...e,isGCS:t,resolution:r},p=m.calculateHillshadeParams(c),h=null==(s=a.unwrap(this.rasterInfo.statistics))?void 0:s[0];return{...p,minValue:null!=(o=null==h?void 0:h.min)?o:0,maxValue:null!=(i=null==h?void 0:h.max)?i:8e3,hillshadeType:"traditional"===e.hillshadeType?0:1,type:"hillshade",colormap:n,colormapOffset:l}},o._generateVectorFieldWebGLParams=function(e){var t,r,s,o,i,n;const{style:l,inputUnit:u,outputUnit:c,visualVariables:p,symbolTileSize:h,flowRepresentation:m}=e;let f;const d=null!=(t=null==p?void 0:p.find((e=>"sizeInfo"===e.type)))?t:{type:"sizeInfo",field:"Magnitude",maxDataValue:null==(r=this.rasterInfo.statistics)?void 0:r[0].max,maxSize:.8*h,minDataValue:null==(s=this.rasterInfo.statistics)?void 0:s[0].min,minSize:.2*h},g=d?d.minDataValue:null==(o=this.rasterInfo.statistics)?void 0:o[0].min,S=d?d.maxDataValue:null==(i=this.rasterInfo.statistics)?void 0:i[0].max,y=a.isSome(d.maxSize)&&a.isSome(d.minSize)?[d.minSize/h,d.maxSize/h]:[.2,.8];if("wind_speed"===l||"simple_scalar"===l){const e=(y[0]+y[1])/2;y[0]=y[1]=e}const b=a.isSome(g)&&a.isSome(S)?[g,S]:null;if("classified_arrow"===l)if(a.isSome(g)&&a.isSome(S)&&a.isSome(d)){f=[];const e=(d.maxDataValue-d.minDataValue)/5;for(let t=0;t<6;t++)f.push(d.minDataValue+e*t)}else f=[0,1e-6,3.5,7,10.5,14];const x="flow_to"===m===("ocean_current_kn"===l||"ocean_current_m"===l)?0:Math.PI,v=null==p?void 0:p.find((e=>"rotationInfo"===e.type));return{breakValues:f,dataRange:b,inputUnit:u,outputUnit:c,symbolTileSize:h,symbolPercentRange:y,style:l||"single_arrow",rotation:x,rotationType:(null==(n=this.rasterInfo.storageInfo)?void 0:n.tileInfo)&&"vector-uv"===this.rasterInfo.dataType?"geographic":(null==v?void 0:v.rotationType)||e.rotationType,type:"vectorField"}},s}(s.JSONSupport);function v(e){return h.isValidPixelBlock(e)&&0!==e.validPixelCount}t.__decorate([i.property({json:{write:!0}})],x.prototype,"rendererJSON",void 0),t.__decorate([i.property({type:p,json:{write:!0}})],x.prototype,"rasterInfo",void 0),t.__decorate([i.property({json:{write:!0}})],x.prototype,"lookup",void 0),t.__decorate([i.property()],x.prototype,"canRenderInWebGL",void 0),x=t.__decorate([c.subclass("esri.renderers.support.RasterSymbolizer")],x);return x}));
