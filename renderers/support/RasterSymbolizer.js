/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/colorUtils","../../core/JSONSupport","../../core/Logger","../../core/maybe","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/subclass","../../layers/support/RasterInfo","../../layers/support/rasterFunctions/pixelUtils","../../layers/support/rasterFunctions/surfaceUtils","./colorRampUtils"],(function(e,t,r,s,o,a,i,n,l,u,c,h,p,f){"use strict";const m=o.getLogger("esri.renderers.support.RasterSymbolizer");function d(e,t){const{attributeTable:r,bandCount:s}=e;if(!a.isSome(r)||s>1)return!1;if(t){if(null==r.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function g(e){return"elevation"===e.dataType}function S(e){const{bandCount:t,colormap:r}=e;return a.isSome(r)&&r.length&&1===t}const y={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};let b=function(t){function s(e){return t.call(this,e)||this}e._inheritsLoose(s,t);var o=s.prototype;return o.bind=function(){const{rendererJSON:e}=this;if(!e)return!1;let t;switch(this.lookup={rendererJSON:{}},e.type){case"uniqueValue":t=this._updateUVRenderer(e);break;case"rasterColormap":t=this._updateColormapRenderer(e);break;case"rasterStretch":t=this._updateStretchRenderer(e);break;case"classBreaks":t=this._updateClassBreaksRenderer(e);break;case"rasterShadedRelief":t=this._updateShadedReliefRenderer(e)}return t},o.symbolize=function(e){let t=e&&e.pixelBlock;if(!this.isValidPixelBlock(t))return t;if(e.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=h.extractBands(t,[0,1,2])),this.rendererJSON.type){case"uniqueValue":case"rasterColormap":r=this._symbolize_colormap(t);break;case"classBreaks":r=this._symbolize_classBreaks(t);break;case"rasterStretch":r=this._symbolize_stretch(t,e.bandIds);break;case"rasterShadedRelief":{const{extent:s}=e,o=s.spatialReference.isGeographic,a={x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height};r=this._symbolize_shadedRelief(t,{isGCS:o,resolution:a});break}}return r}catch(r){return m.error("symbolize",r.message),t}},o.simpleStretch=function(e,t){if(!this.isValidPixelBlock(e))return e;try{return e.pixels.length>3&&(e=h.extractBands(e,[0,1,2])),h.stretch(e,t)}catch(r){return m.error("symbolize",r.message),e}},o.generateWebGLParameters=function(e){if(["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)>-1){var t;const{indexedColormap:e,offset:r}=(null==(t=this.lookup)?void 0:t.colormapLut)||{};return{colormap:e,colormapOffset:r,type:"lut"}}const{pixelBlock:r,isGCS:s,resolution:o,bandIds:a}=e,{rendererJSON:i}=this;return"rasterStretch"===i.type?this.generateStretchWebGLParams(r,i,a):"rasterShadedRelief"===i.type?this.generateShadedReliefWebGLParams(i,s,o):null},o._isLUTChanged=function(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const t=this.rendererJSON.colorRamp;return e?JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp):(this.rendererJSON,this.lookup.rendererJSON,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON))}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)},o._symbolize_colormap=function(e){if(this._isLUTChanged()){if(!this.bind())return e}return h.colorize(e,this.lookup.colormapLut)},o._symbolize_classBreaks=function(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1;let s;if(this._isLUTChanged()){if(!this.bind())return e}return s=r?h.colorize(e,this.lookup.colormapLut):h.remapColor(e,this.lookup.remapLut),s},o._symbolize_stretch=function(e,t){const{pixelType:r,bandCount:s}=this.rasterInfo,o=this.rendererJSON,a=["u8","u16","s8","s16"].indexOf(r)>-1;let i,n;const{dra:l}=o,u=o.useGamma?o.gamma:null;if("histogramEqualization"===o.stretchType){const r=l?null:this.lookup.histogramLut,s=this.getStretchCutoff(o,e,t,!r),a=h.stretch(e,{...s,gamma:u});n=h.lookupPixels(a,{lut:l?s.histogramLut:r,offset:0})}else if(a){var c;if(l){const s=this.getStretchCutoff(o,e,t);i=h.createStretchLUT({pixelType:r,...s,gamma:u})}else if(this._isLUTChanged()){if(!this.bind())return e;i=this.lookup?this.lookup.stretchLut:null}else i=this.lookup?this.lookup.stretchLut:null;if(!i)return e;s>1&&(null==t?void 0:t.length)===e.pixels.length&&(null==(c=i)?void 0:c.lut.length)===s&&(i={lut:t.map((e=>i.lut[e])),offset:i.offset}),n=h.lookupPixels(e,i)}else{const r=this.getStretchCutoff(o,e,t);n=h.stretch(e,{...r,gamma:u})}if(o.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind())return e}n=h.colorize(n,this.lookup.colormapLut)}return n},o._symbolize_shadedRelief=function(e,t){var r,s;const o=this.rendererJSON,i={...o,...t},n=p.hillshade(e,i);if(!o.colorRamp)return n;let l;if(this._isLUTChanged(!0)){if(!this.bind())return n;l=this.lookup?this.lookup.hsvMap:null}else l=this.lookup?this.lookup.hsvMap:null;if(!l)return n;const u=null!=(r=null==(s=a.unwrap(this.rasterInfo.statistics))?void 0:s[0])?r:{min:0,max:8e3};return p.tintHillshade(n,e,l,u),n},o._updateUVRenderer=function(e){const{bandCount:t,attributeTable:r,pixelType:s}=this.rasterInfo,o=e.field1;if(!o)return!1;const a=1===t&&["u8","s8"].includes(s);if(!d(this.rasterInfo,o)&&!a)return!1;const i=[];if(r){const t=r.fields.filter((e=>"value"===e.name.toLowerCase()))[0];if(!t)return!1;r.features.forEach((r=>{var s;const a=e.uniqueValueInfos.filter((e=>String(e.value)===String(r.attributes[o])))[0],n=null==a||null==(s=a.symbol)?void 0:s.color;n&&i.push([r.attributes[t.name]].concat(n))}))}else{if("value"!==o.toLowerCase())return!1;e.uniqueValueInfos.forEach((e=>{var t;const r=null==e||null==(t=e.symbol)?void 0:t.color;r&&i.push([parseInt(""+e.value,10)].concat(r))}))}if(0===i.length)return!1;const n=h.createColormapLUT({colormap:i});return this.lookup={rendererJSON:e,colormapLut:n},this.canRenderInWebGL=!0,!0},o._updateColormapRenderer=function(e){if(!S(this.rasterInfo))return!1;const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return!1;const r=h.createColormapLUT({colormap:t});return this.lookup={rendererJSON:e,colormapLut:r},this.canRenderInWebGL=!0,!0},o._updateShadedReliefRenderer=function(e){if(!g(this.rasterInfo))return!1;if(e.colorRamp){const t=f.convertColorRampToColormap(e.colorRamp,256,!0),s=h.createColormapLUT({colormap:t}),o=[],a=s.indexedColormap;for(let e=0;e<a.length;e+=4){const t=r.toHSV({r:a[e],g:a[e+1],b:a[e+2]});o.push([t.h/60,t.s/100,255*t.v/100])}this.lookup={rendererJSON:e,colormapLut:s,hsvMap:o}}else this.lookup=null;return this.canRenderInWebGL=!0,!0},o._updateClassBreaksRenderer=function(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1,s=e.classBreakInfos;if(null==s||!s.length)return!1;const o=s.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),a=o[o.length-1];let i=e.minValue;if(!r){const t=[];for(let e=0;e<o.length;e++){var n;t.push({value:null!=(n=o[e].classMinValue)?n:i,mappedColor:o[e].symbol.color}),i=o[e].classMaxValue}return t.push({value:a.classMaxValue,mappedColor:a.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,!0}const l=[];i=Math.floor(e.minValue);for(let c=0;c<o.length;c++){const e=o[c];for(let t=i;t<e.classMaxValue;t++)l.push([t].concat(e.symbol.color));i=Math.ceil(e.classMaxValue)}a.classMaxValue===i&&l.push([a.classMaxValue].concat(a.symbol.color));const u=h.createColormapLUT({colormap:l,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0},o._isHistogramRequired=function(e){return"percentClip"===e||"histogramEqualization"===e},o._isValidRasterStatistics=function(e){return a.isSome(e)&&e.length>0&&null!=e[0].min&&null!=e[0].max},o._updateStretchRenderer=function(e){var t;let{stretchType:r,dra:s}=e;if(!("none"===r||null!=(t=e.statistics)&&t.length||this._isValidRasterStatistics(this.rasterInfo.statistics)||s))return!1;const o=a.unwrap(e.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(e.stretchType)||null!=o&&o.length||s||(r="minMax");const{gamma:i,useGamma:n,colorRamp:l}=e,u=this.rasterInfo.pixelType,c=!s&&["u8","u16","s8","s16"].indexOf(u)>-1;if("histogramEqualization"===r){const t=o.map((e=>h.createHistogramEqualizationLUT(e)));this.lookup={rendererJSON:e,histogramLut:t}}else if(c){const t=this.getStretchCutoff(e),r=h.createStretchLUT({pixelType:u,...t,gamma:n?i:null});this.lookup={rendererJSON:e,stretchLut:r}}if(l){const t=f.convertColorRampToColormap(l,256,!0);this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=h.createColormapLUT({colormap:t}),this.lookup.rendererJSON=e}return this.canRenderInWebGL=!0,!0},o.getStretchCutoff=function(e,t,r,s){var o,i,n;let l,u,c=e.stretchType;var p;if(e.dra)if("minMax"===c&&t.statistics)l=t.statistics.map((e=>[e.minValue,e.maxValue,0,0]));else{const e=h.estimateStatisticsHistograms(t);l=e.statistics,u=e.histograms}else l=(null==(p=e.statistics)?void 0:p.length)>0?e.statistics:a.unwrap(this.rasterInfo.statistics),u=e.histograms||a.unwrap(this.rasterInfo.histograms);!this._isHistogramRequired(c)||null!=(o=u)&&o.length||(c="minMax");const f=(null==(i=l)?void 0:i.length)||(null==(n=u)?void 0:n.length)||this.rasterInfo.bandCount,m=[],d=[];let g,S,b,x,k,C,L,O,_,v,R,N;switch(l&&!Array.isArray(l[0])&&(l=l.map((e=>[e.min,e.max,e.avg,e.stddev]))),c){case"none":{const e=y[this.rasterInfo.pixelType]||y.f32;for(O=0;O<f;O++)m[O]=e[0],d[O]=e[1]}break;case"minMax":for(O=0;O<f;O++)m[O]=l[O][0],d[O]=l[O][1];break;case"standardDeviation":for(O=0;O<f;O++)m[O]=l[O][2]-e.numberOfStandardDeviations*l[O][3],d[O]=l[O][2]+e.numberOfStandardDeviations*l[O][3],m[O]<l[O][0]&&(m[O]=l[O][0]),d[O]>l[O][1]&&(d[O]=l[O][1]);break;case"histogramEqualization":for(O=0;O<f;O++)m[O]=u[O].min,d[O]=u[O].max;break;case"percentClip":for(O=0;O<u.length;O++){for(g=u[O],k=new Uint32Array(g.size),x=g.counts,b=0,S=(g.max-g.min)/g.size,L=-.5===g.min&&1===S?.5:0,_=0;_<g.size;_++)b+=x[_],k[_]=b;for(C=e.minPercent*b/100,_=0;_<g.size;_++)if(k[_]>C){m[O]=g.min+S*(_+L);break}for(C=(1-e.maxPercent/100)*b,_=g.size-2;_>=0;_--)if(k[_]<C){d[O]=g.min+S*(_+2-L);break}}break;default:for(O=0;O<f;O++)m[O]=l[O][0],d[O]=l[O][1]}"histogramEqualization"===c?(R=u[0].size||256,v=0,s&&(N=u.map((e=>h.createHistogramEqualizationLUT(e))))):(R=e.max||255,v=e.min||0);const T={minCutOff:m,maxCutOff:d,outMax:R,outMin:v,histogramLut:N};return this.getSelectedBandCutoffs(T,r)},o.getSelectedBandCutoffs=function(e,t){if(null==t||0===t.length)return e;const r=Math.max.apply(null,t),{minCutOff:s,maxCutOff:o,outMin:a,outMax:i,histogramLut:n}=e;return s.length===t.length||s.length<=r?e:{minCutOff:t.map((e=>s[e])),maxCutOff:t.map((e=>o[e])),histogramLut:n?t.map((e=>n[e])):null,outMin:a,outMax:i}},o.generateStretchWebGLParams=function(e,t,r){var s;let o=null,a=null;const i=this.lookup&&this.lookup.colormapLut;t.colorRamp&&i&&(o=i.indexedColormap,a=i.offset),"histogramEqualization"===t.stretchType&&(t={...t,stretchType:"minMax"});const{gamma:n}=t,l=!!(t.useGamma&&n&&n.some((e=>1!==e))),{minCutOff:u,maxCutOff:c,outMin:h,outMax:p}=this.getStretchCutoff(t,e,r),f=null==(s=e)?void 0:s.getPlaneCount();2===f&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]);const m=Math.min(3,(null==r?void 0:r.length)||f||this.rasterInfo.bandCount),d=new Float32Array(m),g=o||l?1:255;let S;for(S=0;S<m;S++)d[S]=(p-h)/(c[S]-u[S])/g;const y=new Float32Array(m);if(l)for(S=0;S<m;S++)n[S]>1?n[S]>2?y[S]=6.5+(n[S]-2)**2.5:y[S]=6.5+100*(2-n[S])**4:y[S]=1;return{bandCount:m,outMin:h/g,outMax:p/g,minCutOff:u,maxCutOff:c,factor:d,useGamma:l,gamma:l?n:[1,1,1],gammaCorrection:l?y:[1,1,1],colormap:o,colormapOffset:a,type:"stretch"}},o.generateShadedReliefWebGLParams=function(e,t,r){var s,o,i;let n=null,l=null;const u=this.lookup&&this.lookup.colormapLut;e.colorRamp&&u&&(n=u.indexedColormap,l=u.offset);const c={...e,isGCS:t,resolution:r},h=p.calculateHillshadeParams(c),f=null==(s=a.unwrap(this.rasterInfo.statistics))?void 0:s[0];return{...h,minValue:null!=(o=null==f?void 0:f.min)?o:0,maxValue:null!=(i=null==f?void 0:f.max)?i:8e3,hillshadeType:"traditional"===e.hillshadeType?0:1,type:"hillshade",colormap:n,colormapOffset:l}},o.isValidPixelBlock=function(e){return!!(e&&e.pixels&&e.pixels.length>0&&0!==e.validPixelCount)},s}(s.JSONSupport);return t.__decorate([i.property({json:{write:!0}})],b.prototype,"rendererJSON",void 0),t.__decorate([i.property({type:c,json:{write:!0}})],b.prototype,"rasterInfo",void 0),t.__decorate([i.property({json:{write:!0}})],b.prototype,"lookup",void 0),t.__decorate([i.property()],b.prototype,"canRenderInWebGL",void 0),b=t.__decorate([u.subclass("esri.renderers.support.RasterSymbolizer")],b),b}));
