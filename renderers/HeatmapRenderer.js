/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/lang","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/subclass","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../layers/support/fieldUtils","../Color","./Renderer","./support/HeatmapColorStop"],(function(e,t,r,o,i,s,n,p,l,c,a,u,d,y,f,h){"use strict";var m;let b=m=function(t){function r(e){var r;return(r=t.call(this,e)||this).blurRadius=10,r.colorStops=[new h({ratio:0,color:new y("rgba(255, 140, 0, 0)")}),new h({ratio:.75,color:new y("rgba(255, 140, 0, 1)")}),new h({ratio:.9,color:new y("rgba(255, 0,   0, 1)")})],r.field=null,r.fieldOffset=0,r.maxPixelIntensity=100,r.minPixelIntensity=0,r.type="heatmap",r}e._inheritsLoose(r,t);var i=r.prototype;return i.collectRequiredFields=async function(e,t){const r=this.field;r&&"string"==typeof r&&d.collectField(e,t,r)},i.getAttributeHash=function(){return null},i.getMeshHash=function(){return`${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`},i.clone=function(){return new m({blurRadius:this.blurRadius,colorStops:o.clone(this.colorStops),field:this.field,maxPixelIntensity:this.maxPixelIntensity,minPixelIntensity:this.minPixelIntensity})},r}(f);return t.__decorate([n.property({type:Number,json:{write:!0}})],b.prototype,"blurRadius",void 0),t.__decorate([n.property({type:[h],json:{write:!0}})],b.prototype,"colorStops",void 0),t.__decorate([n.property({type:String,json:{write:!0}})],b.prototype,"field",void 0),t.__decorate([n.property({type:Number,json:{write:{overridePolicy:(e,t,r)=>({enabled:null==r})}}})],b.prototype,"fieldOffset",void 0),t.__decorate([n.property({type:Number,json:{write:!0}})],b.prototype,"maxPixelIntensity",void 0),t.__decorate([n.property({type:Number,json:{write:!0}})],b.prototype,"minPixelIntensity",void 0),t.__decorate([p.enumeration({heatmap:"heatmap"})],b.prototype,"type",void 0),b=m=t.__decorate([l.subclass("esri.renderers.HeatmapRenderer")],b),b}));
