/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/has","../core/lang","../core/maybe","../core/string","../core/Logger","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/Error","../core/urlUtils","../core/uuid","../portal/support/resourceExtension","../core/promiseUtils","../support/arcadeOnDemand","../layers/support/fieldUtils","../Color","../symbols/CIMSymbol","../request","./Renderer","./mixins/VisualVariablesMixin","../core/LRUCache"],(function(e,t,s,r,i,o,n,a,l,c,u,p,f,h,y,d,m,g,b,_,w,S,x,v){"use strict";var M;const R=n.getLogger("esri.renderers.DictionaryRenderer");let E=M=function(t){function s(e){var s;return(s=t.call(this,e)||this)._ongoingRequests=new Map,s._symbolCache=new v(100),s.config=null,s.fieldMap=null,s.scaleExpression=null,s.scaleExpressionTitle=null,s.url=null,s.type="dictionary",s}e._inheritsLoose(s,t);var n=s.prototype;return n.writeData=function(e,t){e&&(t.scalingExpressionInfo={expression:e,returnType:"number"})},n.writeVisualVariables=function(e,s,r,i){null!=i&&i.origin||t.prototype.writeVisualVariables.call(this,e,s,r,i)},n.clone=function(){return new M({config:r.clone(this.config),scaleExpression:this.scaleExpression,scaleExpressionTitle:this.scaleExpressionTitle,fieldMap:r.clone(this.fieldMap),url:r.clone(this.url),visualVariables:r.clone(this.visualVariables)})},n.getSymbolAsync=async function(e,t){let s;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(t));try{s=await this._dictionaryPromise}catch(e){if(d.isAbortError(e))return this._dictionaryPromise=null,null}const r={};if(this.fieldMap)for(const t of this._symbolFields){const s=this.fieldMap[t];if(s&&null!==e.attributes[s]&&void 0!==e.attributes[s]){const i=""+e.attributes[s];r[t]=i}else r[t]=""}const i=s(r,t);if(!i||"string"!=typeof i)return null;const n=o.numericHash(i).toString(),a=this._symbolCache.get(n);if(a)return a.catch((()=>{this._symbolCache.pop(n)})),a;const l=i.split(";"),c=[],u=[];for(const e of l)if(e&&0!==e.length)if(-1===e.indexOf("po:"))if(-1!==e.indexOf("|"))for(const t of e.split("|"))this._itemNames.has(t)&&c.push(t);else this._itemNames.has(e)&&c.push(e);else{const t=e.substr(3).split("|");if(3===t.length){const e=t[0],s=t[1];let r=t[2];if("DashTemplate"===s)r=r.split(" ").map((e=>Number(e)));else if("Color"===s){const e=new b(r).toRgba();r=[e[0],e[1],e[2],255*e[3]]}else r=Number(r);u.push({primitiveName:e,propertyName:s,value:r})}}const p=this._cimPartsToCIMSymbol(c,u,t);return this._symbolCache.put(n,p,1),p},n.collectRequiredFields=async function(e,t){await this.collectVVRequiredFields(e,t),this.scaleExpression&&await g.collectArcadeFieldNames(e,t,this.scaleExpression);const s=t.map((e=>e.name));for(const t in this.fieldMap)s.indexOf(this.fieldMap[t])<0||e.add(this.fieldMap[t])},n.fetchResources=async function(e){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void R.error("no valid URL!");const t=i.isSome(e)?e.abortOptions:null,s=w(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},...t}),[{data:r}]=await d.all([s,m.loadArcade()]);if(!r)throw this._dictionaryPromise=null,new p("esri.renderers.DictionaryRenderer","Bad dictionary data!");const o=r.expression,n=r.authoringInfo;this._refSymbolUrlTemplate=this.url+"/"+r.cimRefTemplateUrl,this._itemNames=new Set(r.itemsNames),this._symbolFields=n.symbol;const a={};if(this.config){const e=this.config;for(const t in e)a[t]=e[t]}for(const e of n.configuration)a.hasOwnProperty(e.name)||(a[e.name]=e.value);const l=[];if(i.isSome(e)&&e.fields&&this.fieldMap)for(const t of this._symbolFields){const s=this.fieldMap[t],r=e.fields.filter((e=>e.name===s));r.length>0&&l.push({...r[0],name:t})}return this._dictionaryPromise=m.createDictionaryExpression(o,i.isSome(e)?e.spatialReference:null,l,a).then((e=>{const t={scale:0};return(s,r)=>{const o=e.repurposeFeature({geometry:null,attributes:s});return t.scale=i.isSome(r)?r.scale:void 0,e.evaluate({$feature:o,$view:t})}})).catch((e=>(R.error("Creating dictinoary expression failed:",e),null))),this._dictionaryPromise},n.getSymbol=function(){return null},n.getSymbols=function(){return[]},n.getAttributeHash=function(){return this.visualVariables&&this.visualVariables.reduce(((e,t)=>e+t.getAttributeHash()),"")},n.getMeshHash=function(){return`${this.url}-${JSON.stringify(this.fieldMap)}`},n.getSymbolFields=function(){return this._symbolFields},n._getSymbolPart=async function(e,t){if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e).then((e=>e.data));const s=this._refSymbolUrlTemplate.replace(/\{itemName\}/gi,e),r=w(s,{responseType:"json",query:{f:"json"},...t});this._ongoingRequests.set(e,r);try{return(await r).data}catch(t){return this._ongoingRequests.delete(e),d.reject(t)}},n._combineSymbolParts=function(e,t){if(!e||0===e.length)return null;if(1===e.length)return{type:"CIMSymbolReference",symbol:e[0],primitiveOverrides:t};const s={...e[0]};s.symbolLayers=[];for(const t of e){const e=t;s.symbolLayers.unshift(...e.symbolLayers)}return{type:"CIMSymbolReference",symbol:s,primitiveOverrides:t}},n._cimPartsToCIMSymbol=async function(e,t,s){const r=new Array(e.length);for(let t=0;t<e.length;t++)r[t]=this._getSymbolPart(e[t],s);const i=await d.all(r);return new _({data:this._combineSymbolParts(i,t)})},e._createClass(s,[{key:"arcadeRequired",get:function(){return!0}}]),s}(x.VisualVariablesMixin(S));return t.__decorate([l.property({type:Object,json:{read:{source:"configuration"},write:{target:"configuration"}}})],E.prototype,"config",void 0),t.__decorate([l.property({type:Object,json:{write:!0}})],E.prototype,"fieldMap",void 0),t.__decorate([l.property({type:String,json:{read:{source:"scalingExpressionInfo.expression"},write:!0}})],E.prototype,"scaleExpression",void 0),t.__decorate([u.writer("scaleExpression")],E.prototype,"writeData",null),t.__decorate([l.property({type:String,json:{read:{source:"scalingExpressionInfo.title"},write:{target:"scalingExpressionInfo.title",overridePolicy(e){return{enabled:!!e&&!!this.scaleExpression}}}}})],E.prototype,"scaleExpressionTitle",void 0),t.__decorate([l.property({type:String,json:{write:!0}})],E.prototype,"url",void 0),t.__decorate([u.writer("visualVariables")],E.prototype,"writeVisualVariables",null),E=M=t.__decorate([c.subclass("esri.renderers.DictionaryRenderer")],E),E}));
