/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
define(["exports","./chunks/_rollupPluginBabelHelpers","./Graphic","./arcade/ImmutableArray","./core/Error","./core/lang","./layers/FeatureLayer","./rest/support/FeatureSet","./support/arcadeOnDemand"],(function(e,t,r,a,n,o,c,s,i){"use strict";let u=null;function l(e,t,r,n={}){const o=t.elementType,c="value",s="array"===o.type?[{name:c,type:o.type,elementType:o.elementType}]:"dictionary"===o.type?[{name:c,type:o.type,properties:o.properties}]:[{name:c,type:o.type}];return new a(e.map((e=>{const t={};return m(t,s,{[c]:e},r,n),t[c]})))}function p(e,t,r={}){const a=e instanceof s?new c({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return t.constructFeatureSet(a,r.spatialReference,null,!0,r.lruCache,r.interceptor)}function f(e,t,r={}){const{spatialReference:a,interceptor:n,lruCache:o}=r;return"string"==typeof e?t.createFeatureSetCollectionFromService(e,a,o,n):t.createFeatureSetCollectionFromMap(e,a,o,n)}function y(e,t,r,a={}){const n={};return m(n,t.properties,e,r,a),new u.Dictionary(n)}function m(e,t,r,a,n={}){const o={};for(const c of Object.keys(r))o[c.toLowerCase()]=r[c];for(const c of t){const t=c.name.toLowerCase();if(n.variablesPreProcessed)e[t]=o[t];else switch(c.type){case"array":{const r=o[t];e[t]=l(r,c,a,n);break}case"feature":{const r=o[t];e[t]=null==r?null:u.Feature.createFromGraphic(r);break}case"featureSet":{const r=o[t];e[t]=a?p(r,a,n):null;break}case"featureSetCollection":{const r=o[t];e[t]=a?f(r,a,n):null;break}case"dictionary":{const r=o[t];e[t]=y(r,c,a,n);break}case"geometry":case"boolean":case"date":case"text":case"number":e[t]=o[t]}}}function d(e,t){for(const r of e)t.push(r),"dictionary"===r.type&&d(r.properties,t);return t}function b(e,t,r,a,n){const{spatialReference:o,interceptor:c,lruCache:s,services:i,console:u,abortSignal:l}=r,p={vars:{},spatialReference:o,interceptor:c,lrucache:s,useAsync:n,services:i,console:u,abortSignal:l};return t?(m(p.vars,e.variables,t,a,r),p):p}function v(e,t){switch(t.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return new Date(e.getTime());case"feature":{const t=(e.type,e),a="geometry"in t?t.geometry():null,n="readAttributes"in t?t.readAttributes():t.attributes;return new r({geometry:a,attributes:n})}case"dictionary":{const r=e,a=r.attributes,n={};for(const e of Object.keys(a))n[e]=v(r.field(e),t);return n}case"array":return("toArray"in e?e.toArray():e).map((e=>v(e,t)))}return e}const S={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"}]},g={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"}]},h=new Map([["constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"}]}],["popup",S],["popup-element",S],["feature-reduction-popup",g],["feature-reduction-popup-element",g],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"}]}]}]]);function $(e){const t=h.get(e);if(!t){const t=Array.from(h.keys()).map((e=>`'${e}'`)).join(", ");throw new n("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${t}`)}return o.clone(t)}function w(e,t){return C.apply(this,arguments)}function C(){return C=t._asyncToGenerator((function*(e,r,a={}){u||(u=yield i.loadArcade());const{arcade:o,arcadeUtils:c}=u,{loadScriptDependencies:s,referencesMember:l,scriptIsAsync:p}=o,f=d(r.variables,[]),y=f.filter((e=>"featureSet"===e.type||"featureSetCollection"===e.type)).map((e=>e.name.toLowerCase())),m=o.parseScript(e,y);if(!m)throw new n("arcade:invalid-script","Unable to create SyntaxTree");const S=c.extractFieldNames(m),g=o.scriptTouchesGeometry(m),h=f.map((e=>e.name.toLowerCase())).filter((e=>l(m,e))),$=p(m,y);yield s(m,$,y);const w={vars:{},spatialReference:null,useAsync:$};for(const t of h)w.vars[t]="any";const{lruCache:C}=a,A=o.compileScript(m,w),x=o.featureSetUtils(),T=(e,t={})=>{if($)throw new n("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const a=A(b(r,e,{lruCache:C,...t},x,$));return t.rawOutput?a:v(a,c)},F=function(){var e=t._asyncToGenerator((function*(e,t={}){const a=yield A(b(r,e,{lruCache:C,...t},x,$));return t.rawOutput?a:v(a,c)}));return function(t){return e.apply(this,arguments)}}();return{execute:T,executeAsync:F,isAsync:$,variablesUsed:h,fieldsUsed:S,geometryUsed:g,syntaxTree:m}})),C.apply(this,arguments)}e.createArcadeExecutor=w,e.createArcadeProfile=$,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
