/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/subclass","../../core/Error","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/Collection","../../Graphic","../../core/watchUtils","../../tasks/support/AttachmentQuery","../../rest/query/support/AttachmentInfo","../../core/HandleOwner","../Feature/support/featureUtils"],(function(t,e,a,n,i,r,c,o,s,h,d,l,u,p,m,y,f,A,_){"use strict";const g={editing:!1,operations:{add:!0,update:!0,delete:!0}},w=u.ofType(f),v="graphic.layer.capabilities.operations.supportsResizeAttachments";let b=function(e){function a(a){var n;return(n=e.call(this,a)||this)._getAttachmentsPromise=null,n._attachmentLayer=null,n.abilities={...g},n.activeAttachmentInfo=null,n.attachmentInfos=new w,n.graphic=null,n.mode="view",n.handles.add([m.init(t._assertThisInitialized(n),"graphic",(()=>n._graphicChanged()))]),n}t._inheritsLoose(a,e);var i=a.prototype;return i.destroy=function(){this._attachmentLayer=null,this.graphic=null},i.castAbilities=function(t){return{...g,...t}},i.getAttachments=async function(){const{_attachmentLayer:t,attachmentInfos:e}=this;if(!t||"function"!=typeof t.queryAttachments)throw new s("invalid-layer","getAttachments(): A valid layer is required.");const a=this._getFeatureId(),n=new y({objectIds:[a],returnMetadata:!0}),i=[],r=t.queryAttachments(n).then((t=>t[a]||i)).catch((()=>i));this._getAttachmentsPromise=r,this.notifyChange("state");const c=await r;return e.removeAll(),c.length&&e.addMany(c),this._getAttachmentsPromise=null,this.notifyChange("state"),c},i.addAttachment=async function(t){const{_attachmentLayer:e,attachmentInfos:a,graphic:n,abilities:i}=this;if(!t)throw new s("invalid-attachment","addAttachment(): An attachment is required.",{attachment:t});if(!i.operations.add)throw new s("invalid-abilities","addAttachment(): add abilities are required.");if(!e||"function"!=typeof e.addAttachment)throw new s("invalid-layer","addAttachment(): A valid layer is required.");const r=e.addAttachment(n,t).then((t=>this._queryAttachment(t.objectId))),c=await r;return a.add(c),c},i.deleteAttachment=async function(t){const{_attachmentLayer:e,attachmentInfos:a,graphic:n,abilities:i}=this;if(!t)throw new s("invalid-attachment-info","deleteAttachment(): An attachmentInfo is required.",{attachmentInfo:t});if(!i.operations.delete)throw new s("invalid-abilities","deleteAttachment(): delete abilities are required.");if(!e||"function"!=typeof e.deleteAttachments)throw new s("invalid-layer","deleteAttachment(): A valid layer is required.");const r=e.deleteAttachments(n,[t.id]).then((()=>t)),c=await r;return a.remove(c),c},i.updateAttachment=async function(t,e=this.activeAttachmentInfo){const{_attachmentLayer:a,attachmentInfos:n,graphic:i,abilities:r}=this;if(!t)throw new s("invalid-attachment","updateAttachment(): An attachment is required.",{attachment:t});if(!e)throw new s("invalid-attachment-info","updateAttachment(): An attachmentInfo is required.",{attachmentInfo:e});if(!r.operations.update)throw new s("invalid-abilities","updateAttachment(): Update abilities are required.");const c=n.findIndex((t=>t===e));if(!a||"function"!=typeof a.updateAttachment)throw new s("invalid-layer","updateAttachment(): A valid layer is required.");const o=a.updateAttachment(i,e.id,t).then((t=>this._queryAttachment(t.objectId))),h=await o;return n.splice(c,1,h),h},i._queryAttachment=async function(t){if(!t)throw new s("invalid-attachment-id","Could not query attachment.");const{_attachmentLayer:e}=this,a=this._getFeatureId(),n=new y({objectIds:[a],attachmentsWhere:`AttachmentId=${t}`,returnMetadata:!0});return e.queryAttachments(n).then((t=>t[a][0]))},i._getFeatureId=function(){const{_attachmentLayer:t,graphic:e}=this;if(!t||!e)return null;const{objectIdField:a}=t,{attributes:n}=e;return n&&n[a]},i._graphicChanged=function(){this.graphic&&(this._setAttachmentLayer(),this.getAttachments().catch((()=>{})))},i._setAttachmentLayer=function(){const{graphic:t}=this,e=_.getSourceLayer(t);this._attachmentLayer=e?"scene"===e.type&&n.isSome(e.associatedLayer)?e.associatedLayer:e:null},t._createClass(a,[{key:"state",get:function(){return this._getAttachmentsPromise?"loading":this.graphic?"ready":"disabled"}},{key:"supportsResizeAttachments",get:function(){return this.get(v)||!1}}]),a}(A.HandleOwner);return e.__decorate([r.property()],b.prototype,"abilities",void 0),e.__decorate([c.cast("abilities")],b.prototype,"castAbilities",null),e.__decorate([r.property()],b.prototype,"activeAttachmentInfo",void 0),e.__decorate([r.property({readOnly:!0,type:w})],b.prototype,"attachmentInfos",void 0),e.__decorate([r.property({type:p})],b.prototype,"graphic",void 0),e.__decorate([r.property()],b.prototype,"mode",void 0),e.__decorate([r.property({readOnly:!0})],b.prototype,"state",null),e.__decorate([r.property({readOnly:!0})],b.prototype,"supportsResizeAttachments",null),b=e.__decorate([o.subclass("esri.widgets.Attachments.AttachmentsViewModel")],b),b}));
