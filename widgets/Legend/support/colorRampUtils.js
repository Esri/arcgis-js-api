/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import l from"../../../Color.js";import{createStopLabel as e}from"./utils.js";const o=new l([64,64,64]);function n(l,o){const n=[],r=l.length-1;return 5===l.length?n.push(0,2,4):n.push(0,r),l.map(((l,t)=>n.includes(t)?e(l,t,r,o):null))}async function r(l,e,o){let r=!1,a=[],u=[];if(l.stops){const e=l.stops;a=e.map((l=>l.value)),r=e.some((l=>!!l.label)),r&&(u=e.map((l=>l.label)))}const s=a[0],i=a[a.length-1];if(null==s&&null==i)return null;const c=r?null:n(a,o);return(await Promise.all(a.map((async(o,n)=>({value:o,color:"opacity"===l.type?await t(o,l,e):(await import("../../../renderers/visualVariables/support/visualVariableUtils.js")).getColor(l,o),label:r?u[n]:c[n]}))))).reverse()}async function t(e,n,r=o){const t=new l(r),a=(await import("../../../renderers/visualVariables/support/visualVariableUtils.js")).getOpacity(n,e);return null!=a&&(t.a=a),t}function a(l){let e=!1,o=[],r=[];o=l.map((l=>l.value)),e=l.some((l=>!!l.label)),e&&(r=l.map((l=>l.label)));const t=o[0],a=o[o.length-1];if(null==t&&null==a)return null;const s=e?null:n(o,!1);return o.map(((o,n)=>({value:o,color:u(o,l),label:e?r[n]:s[n]}))).reverse()}function u(e,o){const{startIndex:n,endIndex:r,weight:t}=s(e,o);if(n===r)return o[n].color;const a=l.blendColors(o[n].color,o[r].color,t);return new l(a)}function s(l,e){let o=0,n=e.length-1;return e.some(((e,r)=>l<e.value?(n=r,!0):(o=r,!1))),{startIndex:o,endIndex:n,weight:(l-e[o].value)/(e[n].value-e[o].value)}}function i(e,o){let n=[];if(e&&"multipart"===e.type)e.colorRamps.reverse().forEach(((r,t)=>{0===t?n.push({value:o.max,color:new l(r.toColor),label:"high"}):n.push({value:null,color:new l(r.toColor),label:""}),t===e.colorRamps.length-1?n.push({value:o.min,color:new l(r.fromColor),label:"low"}):n.push({value:null,color:new l(r.fromColor),label:""})}));else{let r,t;e&&"algorithmic"===e.type?(r=e.fromColor,t=e.toColor):(r=[0,0,0,1],t=[255,255,255,1]),n=[{value:o.max,color:new l(t),label:"high"},{value:o.min,color:new l(r),label:"low"}]}return n}export{u as getColorFromPointCloudStops,r as getRampStops,a as getRampStopsForPointCloud,i as getStrectchRampStops};
