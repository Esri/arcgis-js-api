/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["require","exports","../../../Color","./utils"],(function(e,l,o,t){"use strict";const n=new o([64,64,64]);function r(e,l){const o=[],n=e.length-1;return 5===e.length?o.push(0,2,4):o.push(0,n),e.map(((e,r)=>o.indexOf(r)>-1?t.createStopLabel(e,r,n,l):null))}async function a(l,o,t){let n=!1,a=[],s=[];if(l.stops){const e=l.stops;a=e.map((e=>e.value)),n=e.some((e=>!!e.label)),n&&(s=e.map((e=>e.label)))}const i=a[0],c=a[a.length-1];if(null==i&&null==c)return null;const p=n?null:r(a,t);return(await Promise.all(a.map((async(t,r)=>({value:t,color:"opacity"===l.type?await u(t,l,o):(await new Promise((function(l,o){e(["../../../renderers/visualVariables/support/visualVariableUtils"],l,o)}))).getColor(l,t),label:n?s[r]:p[r]}))))).reverse()}async function u(l,t,r=n){const a=new o(r),u=(await new Promise((function(l,o){e(["../../../renderers/visualVariables/support/visualVariableUtils"],l,o)}))).getOpacity(t,l);return null!=u&&(a.a=u),a}function s(e){let l=!1,o=[],t=[];o=e.map((e=>e.value)),l=e.some((e=>!!e.label)),l&&(t=e.map((e=>e.label)));const n=o[0],a=o[o.length-1];if(null==n&&null==a)return null;const u=l?null:r(o,!1);return o.map(((o,n)=>({value:o,color:i(o,e),label:l?t[n]:u[n]}))).reverse()}function i(e,l){const{startIndex:t,endIndex:n,weight:r}=c(e,l);if(t===n)return l[t].color;const a=o.blendColors(l[t].color,l[n].color,r);return new o(a)}function c(e,l){let o=0,t=l.length-1;return l.some(((l,n)=>e<l.value?(t=n,!0):(o=n,!1))),{startIndex:o,endIndex:t,weight:(e-l[o].value)/(l[t].value-l[o].value)}}function p(e,l){let t=[];if(e&&"multipart"===e.type)e.colorRamps.reverse().forEach((function(n,r){0===r?t.push({value:l.max,color:new o(n.toColor),label:"high"}):t.push({value:null,color:new o(n.toColor),label:""}),r===e.colorRamps.length-1?t.push({value:l.min,color:new o(n.fromColor),label:"low"}):t.push({value:null,color:new o(n.fromColor),label:""})}));else{let n,r;e&&"algorithmic"===e.type?(n=e.fromColor,r=e.toColor):(n=[0,0,0,1],r=[255,255,255,1]),t=[{value:l.max,color:new o(r),label:"high"},{value:l.min,color:new o(n),label:"low"}]}return t}l.getColorFromPointCloudStops=i,l.getRampStops=a,l.getRampStopsForPointCloud=s,l.getStrectchRampStops=p,Object.defineProperty(l,"__esModule",{value:!0})}));
