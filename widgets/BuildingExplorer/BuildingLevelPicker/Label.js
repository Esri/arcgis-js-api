/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{unwrapOr as t,isNone as s}from"../../../core/maybe.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import i from"../../Widget.js";import"../../support/widgetUtils.js";import{tsx as l}from"../../support/jsxFactory.js";const c="esri-building-level-picker-label",a={iconClose:"esri-icon-close",base:`${c}`,active:`${c}--active`,hover:`${c}--hover`,empty:`${c}--empty`,clearButton:`${c}__clear-button`},p={clearLevel:"",selectLevel:""};let n=class extends i{constructor(e,t){super(e,t),this.level=null,this.active=!1,this.hovering=!1,this.onClear=()=>{}}render(){const e=t(this.messages,p);if(s(this.level))return l("div",{class:a.empty,title:e.selectLevel},e.selectLevel);const o=e.clearLevel;return l("div",{bind:this,class:this.classes(a.base,{[a.active]:this.active,[a.hover]:this.hovering}),onclick:this.onClear,title:o,"aria-label":o},l("span",null,this.level),l("button",{bind:this,class:this.classes(a.clearButton,a.iconClose),disabled:!this.active,onclick:this.onClear,type:"button"}))}};e([o()],n.prototype,"level",void 0),e([o({nonNullable:!0})],n.prototype,"active",void 0),e([o({nonNullable:!0})],n.prototype,"hovering",void 0),e([o()],n.prototype,"messages",void 0),e([o({nonNullable:!0})],n.prototype,"onClear",void 0),n=e([r("esri.widgets.BuildingExplorer.BuildingLevelPicker.Label")],n);export{n as Label};
