/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/Error","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../geometry/Extent","../../core/Collection","../../intl/date","../../request","../../intl","../../core/Loadable","../../portal/Portal","../../core/Handles","../../Viewpoint","../../tasks/support/fileFormat","../../tasks/support/layoutTemplate","../../tasks/PrintTask","../../views/2d/viewpointUtils","../../tasks/support/PrintParameters","./CustomTemplate"],(function(e,t,r,o,i,n,a,s,l,p,c,u,d,f,h,v,y,m,_,w,S,g,O,T,x,P){"use strict";const E=6e4,L=d.ofType(P);function U(e){e.layoutOptions||(e.layoutOptions={}),e.layoutOptions.customTextElements||(e.layoutOptions.customTextElements=[]);const t="date";if(!e.layoutOptions.customTextElements.find((e=>t in e))){const{customTextElements:t}=e.layoutOptions;t.push({date:f.formatDate(Date.now(),f.convertDateFormatToIntlOptions("short-date"))})}}let b=function(t){function r(r){var o;return(o=t.call(this,r)||this)._handles=new _,o._viewpoint=null,o.allowedFormats="all",o.allowedLayouts="all",o.defaultTemplates=new L,o.includeDefaultTemplates=!0,o.effectivePrintServiceUrl=null,o.error=null,o.portal=m.getDefault(),o.printServiceUrl=null,o.scaleEnabled=!1,o.templatesInfo=null,o.updateDelay=1e3,o.view=null,o.print=o.print.bind(e._assertThisInitialized(o)),o}e._inheritsLoose(r,t);var o=r.prototype;return o.destroy=function(){this._handles.destroy(),this._handles=null,this.view=null},o.load=async function(e){return this.addResolvingPromise(this._loadResources(e).catch((e=>this.error=e))),this},o.print=function(e){let t;if(!this.view)return Promise.reject(new s("print:view-required","view is not set"));this.scaleEnabled?(this._viewpoint||(this._viewpoint=this.view.viewpoint.clone()),t=this._getExtent(this._viewpoint,e.outScale)):(this._viewpoint=null,t=this._getExtent(this.view.viewpoint)),U(e);const r=new x({view:this.view,template:e,extent:t});return this.printTask.execute(r).catch((e=>{const t="print-task:cim-symbol-unsupported"===e.name?e.message:"An error occurred while exporting the web map.";return Promise.reject(new s("print:export-error",t,{error:e}))}))},o._loadResources=async function(e){let t=[];const{printServiceUrl:r}=this;if(!r){var o;if(this.destroyed)return;const{portal:r}=this;try{await r.load(e)}catch(n){throw new s("print:could-not-load-portal","Cannot load print resource information from portal",{url:this.effectivePrintServiceUrl})}const a=null==(o=r.helperServices)?void 0:o.printTask;var i;if(a)this._set("effectivePrintServiceUrl",a.url),t=(null!=(i=null==a?void 0:a.templates)?i:[]).map((e=>P.fromJSON(e)))}t.length>0&&this.defaultTemplates.addMany(t),await this._loadServiceDescription(e)},o._loadServiceDescription=async function(e){const t=await this._getPrintTemplatesFromService(e);this._set("templatesInfo",t)},o._getPrintTemplatesFromService=function(e){if(-1===this.effectivePrintServiceUrl.toLowerCase().split("/").indexOf("gpserver"))throw new s("print:invalid-print-service-url","Can't fetch print templates information from provided URL",{url:this.effectivePrintServiceUrl});return h(this.effectivePrintServiceUrl,{...e,query:{f:"json"},timeout:E}).then((e=>{const t=e&&e.data,r=t&&t.parameters;let o=null,i=null;r.forEach((e=>{let t,r=e.choiceList&&e.choiceList.slice();r&&r.length&&e.defaultValue&&(t=r.indexOf(e.defaultValue)),t>-1&&(r.splice(t,1),r.unshift(e.defaultValue));const n=(e,t)=>{const r="all"===t?e:e.filter((e=>t.indexOf(e)>-1));return 0===r.length?e:r};if("Format"===e.name){const t=n(r.map(S.fromJSON),this.allowedFormats),i=S.fromJSON(e.defaultValue);o={defaultValue:t.includes(i)?i:t[0],choiceList:t}}else if("Layout_Template"===e.name){let t,o;r=r.filter((e=>"map_only"!==e.toLowerCase())),r.some(((e,r)=>{const o=e.toLowerCase();return o.indexOf("letter")>-1&&o.indexOf("landscape")>-1?(t=r,!0):o.indexOf("a4")>-1&&o.indexOf("landscape")>-1&&(t=r,!1)})),t&&(o=r[t],r.splice(t,1),r.unshift(o));const a=n(r.map(g.fromJSON),this.allowedLayouts),s=g.fromJSON(e.defaultValue);i={defaultValue:a.includes(s)?s:a[0],choiceList:a}}})),this.error=null;return{format:o,layout:i}})).catch((e=>{throw new s("print:unavailable-service-info","Can't fetch templates info from service",{error:e})}))},o._getExtent=function(e,t){const r=t||this.view.scale,o=this.get("view.size"),i=e?e.targetGeometry:null;return T.getExtent(new u,new w({scale:r,targetGeometry:i}),o)},e._createClass(r,[{key:"printTask",get:function(){return new O(this.effectivePrintServiceUrl,{updateDelay:this.updateDelay})}},{key:"state",get:function(){return"loading"===this.loadStatus?"initializing":this.error||"failed"===this.loadStatus?"error":this.get("view.ready")&&"loaded"===this.loadStatus?"ready":"disabled"}}]),r}(y);return t.__decorate([n.property()],b.prototype,"allowedFormats",void 0),t.__decorate([n.property()],b.prototype,"allowedLayouts",void 0),t.__decorate([n.property({type:L})],b.prototype,"defaultTemplates",void 0),t.__decorate([n.property()],b.prototype,"includeDefaultTemplates",void 0),t.__decorate([n.property({aliasOf:{source:"printServiceUrl",overridable:!0},readOnly:!0})],b.prototype,"effectivePrintServiceUrl",void 0),t.__decorate([n.property()],b.prototype,"error",void 0),t.__decorate([n.property({type:m})],b.prototype,"portal",void 0),t.__decorate([n.property()],b.prototype,"printServiceUrl",void 0),t.__decorate([n.property({type:O})],b.prototype,"printTask",null),t.__decorate([n.property({readOnly:!0})],b.prototype,"state",null),t.__decorate([n.property()],b.prototype,"scaleEnabled",void 0),t.__decorate([n.property({readOnly:!0})],b.prototype,"templatesInfo",void 0),t.__decorate([n.property()],b.prototype,"updateDelay",void 0),t.__decorate([n.property()],b.prototype,"view",void 0),b=t.__decorate([a.subclass("esri.widgets.Print.PrintViewModel")],b),b}));
