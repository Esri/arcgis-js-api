// COPYRIGHT Â© 2020 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.17/esri/copyright.txt for details.

define(["require","exports","tslib","../../../geometry","../../../core/Accessor","../../../core/Error","../../../core/promiseUtils","../../../core/accessorSupport/decorators","../../../geometry/coordinateFormatter","../../../geometry/projection","../../../geometry/support/spatialReferenceUtils","../../../geometry/support/webMercatorUtils","./coordinateConversionUtils"],(function(e,t,r,o,n,i,a,s,c,l,p,u,d){"use strict";return function(e){function t(t){var r=e.call(this,t)||this;return r.conversionInfo=null,r.coordinateSegments=null,r.defaultPattern=null,r.name=null,r.viewModel=null,r}return r.__extends(t,e),Object.defineProperty(t.prototype,"currentPattern",{get:function(){return this._get("currentPattern")||this._get("defaultPattern")},set:function(e){this._set("currentPattern",e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hasDisplayProperties",{get:function(){return!(!this.defaultPattern||!this.coordinateSegments)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"spatialReference",{get:function(){var e=this.get("conversionInfo.spatialReference")||o.SpatialReference.WGS84;return"basemap"===this.name?this._viewSpatialReference:e},set:function(e){void 0===e&&this._clearOverride("spatialReference"),this._override("spatialReference",e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_viewSpatialReference",{get:function(){return this.get("viewModel.view.spatialReference")||o.SpatialReference.WGS84},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_additionalCharactersPattern",{get:function(){var e=this.get("coordinateSegments");if(!e)return null;var t=e.map((function(e){return e.alias})),r=this.currentPattern.replace(new RegExp('["nsew'+t.join()+"]","gi"),"").replace(/\ /g,"");return new RegExp("["+r+"]","g")},enumerable:!1,configurable:!0}),t.prototype.convert=function(e,t){var r=this;if(!d.isValidPoint(e))return a.reject(new i("format:invalid-point","Could not convert invalid point.",{point:e}));var o=this.get("conversionInfo.convert");return o?a.resolve().then((function(){return o(e)})):this._project(e,this.spatialReference,t).then((function(e){return r._getCoordinate(e).then((function(t){return{location:e,coordinate:t}}))}))},t.prototype.getConversionStrategy=function(){var e=this._viewSpatialReference;return this.get("conversionInfo.convert")||this.get("viewModel.formatterAvailable")||"xy"===this.name&&(e.isWebMercator||e.isWGS84)||"basemap"===this.name?"client":"server"},t.prototype.getDisplayCoordinate=function(e){if(!e)return null;if(!this.coordinateSegments||!this.currentPattern)return e;for(var t=this.currentPattern,r=this._getSegmentMatches(e,!1),o=this.coordinateSegments.length-1;o>=0;o--){var n=this.coordinateSegments[o];t=t.replace(n.alias,r[o])}return t},t.prototype.parseUserInput=function(e){var t=this.defaultPattern.replace(this._additionalCharactersPattern,"");e=e.replace(this._additionalCharactersPattern,"");for(var r=this._getSegmentMatches(e,!0),o=this.coordinateSegments.length-1;o>=0;o--){var n=this.coordinateSegments[o];t=t.replace(n.alias,r[o])}return t},t.prototype._getSegmentMatches=function(e,t){for(var r=[],o=0;o<this.coordinateSegments.length;o++){var n=this.coordinateSegments[o],i=e.match(n.searchPattern);if(i){var a=i[0];if(e=e.replace(a,"").trim(),n.substitution){var s=t?n.substitution.input(a):n.substitution.output(a);s&&(a=s)}r.push(a)}else r.push("")}return r},t.prototype.reverseConvert=function(e){var t,r=this.parseUserInput(e),o=this.get("conversionInfo.reverseConvert"),n=d.isSupportedNotation(this.name);if(o)t=o(r);else if("xy"===this.name||"basemap"===this.name)t=d.fromXY(r,this.spatialReference);else if(this.viewModel.formatterAvailable)switch(this.name){case"dd":case"ddm":case"dms":t=c.fromLatitudeLongitude(r,this.spatialReference);break;case"mgrs":t=c.fromMgrs(r,this.spatialReference,"automatic");break;case"utm":t=c.fromUtm(r,this.spatialReference,"latitude-band-indicators");break;case"usng":t=c.fromUsng(r,this.spatialReference);break;default:t=null}else if(n)return d.fromGeoCoordinateString({coordinate:r,spatialReference:this.spatialReference,formatName:this.name,geometryServicePromise:this.get("viewModel.geometryServicePromise")});return t?this._project(t,this._viewSpatialReference):a.reject(new i("format:invalid-input","Could not parse input into point.",{userInput:e}))},t.prototype._getCoordinate=function(e){var t=this.get("viewModel.view.scale");if(!d.isValidPoint(e))return a.reject(new i("format:invalid-point","Could not transform invalid point into coordinate.",{point:e}));if(this.get("viewModel.formatterAvailable")||"basemap"===this.name||"xy"===this.name)switch(this.name){case"dd":case"ddm":case"dms":var r=d.getDegreePrecision(t);return a.resolve(c.toLatitudeLongitude(e,this.name,r));case"mgrs":return a.resolve(c.toMgrs(e,"automatic",5,!1));case"usng":return a.resolve(c.toUsng(e,5,!1));case"utm":return a.resolve(c.toUtm(e,"latitude-band-indicators",!0));default:return a.resolve(d.pointToCoordinate(e,t))}return d.isSupportedNotation(this.name)?d.toGeoCoordinateString({formatName:this.name,location:e,geometryServicePromise:this.get("viewModel.geometryServicePromise")}):a.resolve(d.pointToCoordinate(e,t))},t.prototype._project=function(e,t,r){return p.equals(e.spatialReference,t)||!t?a.resolve(e):this.get("viewModel.formatterAvailable")&&l.isLoaded()?a.resolve(l.project(e,t)):this.get("viewModel.formatterAvailable")?null:u.canProject(e,t)?a.resolve(u.project(e,t)):d.project({location:e,spatialReference:t,geometryServicePromise:this.get("viewModel.geometryServicePromise"),scale:this.get("viewModel.view.scale")},r).then((function(e){return e.location}))},r.__decorate([s.property()],t.prototype,"conversionInfo",void 0),r.__decorate([s.property()],t.prototype,"coordinateSegments",void 0),r.__decorate([s.property()],t.prototype,"currentPattern",null),r.__decorate([s.property()],t.prototype,"defaultPattern",void 0),r.__decorate([s.property({readOnly:!0,dependsOn:["defaultPattern","coordinateSegments"]})],t.prototype,"hasDisplayProperties",null),r.__decorate([s.property()],t.prototype,"name",void 0),r.__decorate([s.property({dependsOn:["_viewSpatialReference","name"],type:o.SpatialReference})],t.prototype,"spatialReference",null),r.__decorate([s.property()],t.prototype,"viewModel",void 0),r.__decorate([s.property({dependsOn:["viewModel.view.spatialReference"],readOnly:!0})],t.prototype,"_viewSpatialReference",null),r.__decorate([s.property({readOnly:!0,dependsOn:["currentPattern"]})],t.prototype,"_additionalCharactersPattern",null),t=r.__decorate([s.subclass("esri.widgets.CoordinateConversion.support.Format")],t)}(n)}));