/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{getCustoms as t,parse as e,format as i}from"../../../core/number.js";import{getLocale as a}from"../../../intl/locale.js";import n from"./Format.js";const s=t().decimal,r={N:"north",S:"south",E:"east",W:"west"},o=`°${"‎"}`,d=new RegExp(`-?\\d+[\\.|\\${s}]?\\d*`),u=/^[\\0]+(?=\d)/;function c(t,e){const i="ar"===a(),n={ddm:`Y${o} A'${t.abbreviatedDirections.north}, X${o} B'${t.abbreviatedDirections.east}`,dms:`Y${o} A' B"${t.abbreviatedDirections.north}, X${o} C' D"${t.abbreviatedDirections.east}`,dd:`Y${o}${t.abbreviatedDirections.north}, X${o}${t.abbreviatedDirections.east}`,xy:`X${o}, Y${o}`,basemap:"X, Y"},s={ddm:`${t.abbreviatedDirections.north}${o}Y 'A ,${t.abbreviatedDirections.east}${o}X 'B`,dms:`${t.abbreviatedDirections.north}${o}Y 'A "B ,${t.abbreviatedDirections.east}${o}X 'C "D`,dd:`${t.abbreviatedDirections.north}${o}Y ,${t.abbreviatedDirections.east}${o}X`,xy:`X${o} ,Y${o}`,basemap:"X ,Y"};e.forEach((t=>{const{name:e}=t;if(n[e]){const a=t.defaultPattern===t.currentPattern,r=i?s[e]:n[e];t.defaultPattern=r,a&&(t.currentPattern=r)}}))}function p(t){const e=t.abbreviatedDirections.north,i=t.abbreviatedDirections.south,a=t.abbreviatedDirections.east,u=t.abbreviatedDirections.west,p={};p[e]="N",p[i]="S",p[a]="E",p[u]="W";const $=new RegExp(`N|S|${e}|${i}`,"i"),h=new RegExp(`E|W|${a}|${u}`,"i"),g=[new n({name:"basemap",coordinateSegments:[{alias:"X",description:"easting",searchPattern:d,substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"Y",description:"northing",searchPattern:d,substitution:{input:t=>l(t),output:t=>b(t)}}],defaultPattern:"X, Y",viewModel:null}),new n({name:"dd",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${s}]?\\d*(?=\\D*?[N|S|${e}|${i}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:$,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[r[e]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}[\\.|\\${s}]?\\d*(?=\\D*?[E|W|${a}|${u}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:h,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[r[e]]}}],defaultPattern:`Y${o}${t.abbreviatedDirections.north}, X${o}${t.abbreviatedDirections.east}`,viewModel:null}),new n({name:"ddm",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?\\s+.*?[N|S|${e}|${i}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp(`\\d{1,2}[\\.\\${s}]?\\d*(?=.*?[N|S|${e}||${i}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:$,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[r[e]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}(?=\\D*?\\s+.*?[E|W|${a}|${u}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"B",description:"minutes longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\|${s}]?\\d*(?=.*?[E|W|${a}|${u}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:h,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[r[e]]}}],defaultPattern:`Y${o} A'${t.abbreviatedDirections.north}, X${o} B'${t.abbreviatedDirections.east}`,viewModel:null}),new n({name:"dms",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?\\s+.*?[N|S|${e}|${i}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?[N|S|${e}|${i}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"B",description:"seconds latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${s}]?\\d*(?=.*?[N|S|${e}|${i}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:$,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[r[e]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}(?=.*?\\s+.*?[E|W|${a}|${u}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"C",description:"minutes longitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?[E|W|${a}|${u}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"D",description:"seconds longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${s}]?\\d*(?=.*?[E|W|${a}|${u}])`,"i"),substitution:{input:t=>l(t),output:t=>b(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:h,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[r[e]]}}],defaultPattern:`Y${o} A' B"${t.abbreviatedDirections.north}, X${o} C' D"${t.abbreviatedDirections.east}`,viewModel:null}),new n({name:"xy",coordinateSegments:[{alias:"X",description:"longitude",searchPattern:d,substitution:{input:t=>l(t),output:t=>b(t)}},{alias:"Y",description:"latitude",searchPattern:d,substitution:{input:t=>l(t),output:t=>b(t)}}],defaultPattern:`X${o}, Y${o}`,viewModel:null}),new n({name:"mgrs",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new n({name:"usng",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new n({name:"utm",coordinateSegments:[{alias:"Z",description:"zone number",searchPattern:/\d{1,2}|[abyz]/i},{alias:"B",description:"latitude band",searchPattern:/^\D/},{alias:"X",description:"easting",searchPattern:/\d{1,7}(?=\s*\d{7}$)/},{alias:"Y",description:"northing",searchPattern:/\d{1,7}/}],defaultPattern:"ZB X Y",viewModel:null})];return c(t,g),g}function b(t){const e=t.match(u),a=e?e[0]:"",n=t.includes(".")?t.split(".")[1].length:0;return a+i(Number(t),{pattern:"###0.###",places:n,round:-1})}function l(t){return e(t)}export{p as generateDefaultFormats,c as setDefaultPatterns};
