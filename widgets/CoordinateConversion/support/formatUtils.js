/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../../core/number","./Format"],(function(t,e,i){"use strict";const n=e.getCustoms().decimal,a={N:"north",S:"south",E:"east",W:"west"},s=`°${"‎"}`,r=new RegExp(`-?\\d+[\\.|\\${n}]?\\d*`),o=/^[\\0]+(?=\d)/;function d(t){const e=t.abbreviatedDirections.north,o=t.abbreviatedDirections.south,d=t.abbreviatedDirections.east,p=t.abbreviatedDirections.west,l={};l[e]="N",l[o]="S",l[d]="E",l[p]="W";const b=new RegExp(`N|S|${e}|${o}`,"i"),$=new RegExp(`E|W|${d}|${p}`,"i");return[new i({name:"basemap",coordinateSegments:[{alias:"X",description:"easting",searchPattern:r,substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"Y",description:"northing",searchPattern:r,substitution:{input:t=>c(t),output:t=>u(t)}}],defaultPattern:"X, Y",viewModel:null}),new i({name:"dd",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${n}]?\\d*(?=\\D*?[N|S|${e}|${o}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:b,substitution:{input:t=>l[t],output:e=>t.abbreviatedDirections[a[e]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}[\\.|\\${n}]?\\d*(?=\\D*?[E|W|${d}|${p}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:$,substitution:{input:t=>l[t],output:e=>t.abbreviatedDirections[a[e]]}}],defaultPattern:`Y${s}${t.abbreviatedDirections.north}, X${s}${t.abbreviatedDirections.east}`,viewModel:null}),new i({name:"ddm",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?\\s+.*?[N|S|${e}|${o}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp(`\\d{1,2}[\\.\\${n}]?\\d*(?=.*?[N|S|${e}||${o}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:b,substitution:{input:t=>l[t],output:e=>t.abbreviatedDirections[a[e]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}(?=\\D*?\\s+.*?[E|W|${d}|${p}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"B",description:"minutes longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\|${n}]?\\d*(?=.*?[E|W|${d}|${p}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:$,substitution:{input:t=>l[t],output:e=>t.abbreviatedDirections[a[e]]}}],defaultPattern:`Y${s} A'${t.abbreviatedDirections.north}, X${s} B'${t.abbreviatedDirections.east}`,viewModel:null}),new i({name:"dms",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?\\s+.*?[N|S|${e}|${o}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?[N|S|${e}|${o}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"B",description:"seconds latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${n}]?\\d*(?=.*?[N|S|${e}|${o}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:b,substitution:{input:t=>l[t],output:e=>t.abbreviatedDirections[a[e]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}(?=.*?\\s+.*?[E|W|${d}|${p}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"C",description:"minutes longitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?[E|W|${d}|${p}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"D",description:"seconds longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${n}]?\\d*(?=.*?[E|W|${d}|${p}])`,"i"),substitution:{input:t=>c(t),output:t=>u(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:$,substitution:{input:t=>l[t],output:e=>t.abbreviatedDirections[a[e]]}}],defaultPattern:`Y${s} A' B"${t.abbreviatedDirections.north}, X${s} C' D"${t.abbreviatedDirections.east}`,viewModel:null}),new i({name:"xy",coordinateSegments:[{alias:"X",description:"longitude",searchPattern:r,substitution:{input:t=>c(t),output:t=>u(t)}},{alias:"Y",description:"latitude",searchPattern:r,substitution:{input:t=>c(t),output:t=>u(t)}}],defaultPattern:`X${s}, Y${s}`,viewModel:null}),new i({name:"mgrs",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new i({name:"usng",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new i({name:"utm",coordinateSegments:[{alias:"Z",description:"zone number",searchPattern:/\d{1,2}|[abyz]/i},{alias:"B",description:"latitude band",searchPattern:/^\D/},{alias:"X",description:"easting",searchPattern:/\d{1,7}(?=\s*\d{7}$)/},{alias:"Y",description:"northing",searchPattern:/\d{1,7}/}],defaultPattern:"ZB X Y",viewModel:null})]}function u(t){const i=t.match(o),n=i?i[0]:"",a=t.indexOf(".")>=0?t.split(".")[1].length:0;return n+e.format(Number(t),{pattern:"###0.###",places:a,round:-1})}function c(t){return e.parse(t)}t.generateDefaultFormats=d,Object.defineProperty(t,"__esModule",{value:!0})}));
