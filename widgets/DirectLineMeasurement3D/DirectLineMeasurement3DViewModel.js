/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../analysis/DirectLineMeasurementAnalysis.js";import{isNone as i,isSome as s,unwrap as r}from"../../core/maybe.js";import{measurementLengthUnits as n}from"../../core/unitUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{defaultUnitPropertyMetadata as o}from"../../properties/defaultUnit.js";import u from"../../views/3d/interactive/measurementTools/directLineMeasurement3D/DirectLineMeasurement3DTool.js";import{InteractiveAnalysisViewModel as c}from"../support/InteractiveAnalysisViewModel.js";let p=class extends c{constructor(t){super(t),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._userUnit=null,this._userUnitOptions=null}get state(){return this.disabled||!this.ready?"disabled":i(this.tool)?"ready":this.tool.state}get measurement(){if(i(this.tool))return null;const t={mode:"euclidean",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:null,state:"unavailable"},verticalDistance:{text:null,state:"unavailable"}},{analysisViewData:e}=this.tool;if(i(e))return t;const r=e.actualVisualizedMeasurement,n=s(e.result)?"available":"unavailable";switch(r){case"euclidean":return{mode:"euclidean",directDistance:{text:e.directLabelText,state:n},horizontalDistance:{text:e.horizontalLabelText,state:n},verticalDistance:{text:e.verticalLabelText,state:n}};case"geodesic":return{mode:"geodesic",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:e.horizontalLabelText,state:n},verticalDistance:{text:e.verticalLabelText,state:n}};default:return t}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null,this.analysis.unit=t}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new e}constructTool(){return new u({view:r(this.view),analysis:this.analysis,analysisViewData:r(this.analysisView),visible:this.visible})}_findSelectableUnit(t,e){const i=this.unitOptions;return i.includes(t)?t:e?this._findSelectableUnit(e):i[0]}_filteredOrAllUnits(t){if(!t)return n.slice();const e=t.filter((t=>n.includes(t)));return 0===e.length?n.slice():e}};t([a({type:e})],p.prototype,"analysis",void 0),t([a({readOnly:!0})],p.prototype,"state",null),t([a({readOnly:!0})],p.prototype,"measurement",null),t([a()],p.prototype,"unitOptions",null),t([a()],p.prototype,"unit",null),t([a(o)],p.prototype,"defaultUnit",void 0),t([a()],p.prototype,"_userUnit",void 0),t([a()],p.prototype,"_userUnitOptions",void 0),p=t([l("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],p);const d=p;export{d as default};
