/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/Logger","../core/maybe","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/accessorSupport/decorators/subclass","./Widget","./Daylight/css","./Daylight/DaylightViewModel","./Daylight/VisibleElements","./Daylight/support/daylightUtils","./Daylight/support/SliderWithDropdown","./support/DatePicker","./support/Heading","./support/timeWidgetUtils","./support/widgetUtils","./support/decorators/messageBundle","./support/jsxFactory"],(function(e,t,i,s,n,o,l,a,r,d,c,h,p,u,g,y,S,_,m,w,b,v){"use strict";const k=/(.*)\s(.*)/,C="date",f="esri.widgets.Daylight";let M=function(i){function s(e,s){var n;return(n=i.call(this,e,s)||this).headingLevel=3,n.iconClass=h.CSS.widgetIcon,n.viewModel=new p,n.visibleElements=new u,n.dateOrSeason=C,n._timeSlider=new y({viewModel:n.viewModel.timeSliderViewModel,steps:n.timeSliderSteps,labelInputsEnabled:!1,visibleElements:{labels:!0},tickConfigs:[{mode:"position",values:[0,360,720,1080,1439],labelsVisible:!0,tickCreatedFunction:n._onPrimaryTickCreated.bind(t._assertThisInitialized(n))},{mode:"position",values:[120,240,480,600,840,960,1200,1320],tickCreatedFunction:n._onSecondaryTickCreated.bind(t._assertThisInitialized(n))}],items:[]}),n._datePicker=new S({viewModel:n.viewModel.datePickerViewModel,commitOnMonthChange:!0}),n._onPlayDayClick=()=>{n.viewModel.toggleDayPlaying()},n._onYearPlayClick=()=>{n.viewModel.toggleYearPlaying()},n._onSeasonChange=e=>{const t=e.target;n.viewModel.currentSeason=t.value},n._onSunLightingCheckboxChange=()=>{n.viewModel.toggleSunLightingEnabled()},n._onShadowCheckboxChange=()=>{n.viewModel.toggleDirectShadowsEnabled()},n}t._inheritsLoose(s,i);var l=s.prototype;return l.postInitialize=function(){this.viewModel.isSupported&&this.addHandles([o.watch((()=>this.viewModel.datePickerViewModel),(e=>this._datePicker.viewModel=e),o.syncAndInitial),o.watch((()=>this.viewModel.timeSliderViewModel),(e=>this._timeSlider.viewModel=e),o.syncAndInitial),o.watch((()=>this.timezoneMessages.chooseTimezone),(e=>this._timeSlider.buttonTooltip=e),o.syncAndInitial),o.watch((()=>this.visibleElements?.timezone),(e=>this._timeSlider.showDropDown=e),o.syncAndInitial),o.watch((()=>!this.viewModel.sunLightingEnabled),(e=>{this._datePicker.disabled=e,this._timeSlider.disabled=e}),o.syncAndInitial),o.when((()=>this.gmtOffsets),(e=>{this._timeSlider.items=e.map((e=>({utcOffset:e.utcOffset,name:e.short,label:[e.shortWithUTC,e.long]})))}),o.syncAndInitial),o.watch((()=>[this.viewModel.utcOffset,this.gmtOffsets]),(()=>this._onUTCOffsetChange()),o.syncAndInitial),o.when((()=>!this.visible),(()=>this._datePicker?.close(!1)),o.sync)])},l.destroy=function(){this._datePicker.destroy(),this._timeSlider.destroy()},l.render=function(){const{messages:e,viewModel:t,visibleElements:i}=this,s=t.isSupported;return v.tsx("div",{class:this.classes(h.CSS.base,h.CSS.widget)},s?v.tsx(v.tsxFragment,null,i.header&&v.tsx(_.Heading,{level:this.headingLevel},e.title),this._renderTimeOptions(),i.datePicker&&this._renderDateOrSeason(),i.sunLightingToggle&&this._renderSunLightingToggle(),i.shadowsToggle&&this._renderShadowsToggle()):v.tsx("div",{key:"unsupported",class:h.CSS.panelError},v.tsx("p",null,e.unsupported)))},l.loadDependencies=function(){return Promise.all([new Promise(((t,i)=>e(["../chunks/calcite-button"],t,i))),new Promise(((t,i)=>e(["../chunks/calcite-checkbox"],t,i))),new Promise(((t,i)=>e(["../chunks/calcite-label"],t,i)))])},l._renderTimeOptions=function(){const{viewModel:e,visibleElements:t,messages:i}=this,{directShadowsEnabled:s,dayPlaying:n}=e,o=!e.sunLightingEnabled;return v.tsx("div",{class:this.classes(h.CSS.dayContainer,this._labelAlignmentClass,{[h.CSS.shadowOn]:s,[h.CSS.shadowOff]:!s,[h.CSS.sliderDateOn]:t.datePicker,[h.CSS.sliderDateOff]:!t.datePicker,[h.CSS.sliderAmPmOn]:this._useAmPm,[h.CSS.containerDisabled]:o}),key:"daylight-time-options"},this._timeSlider.render(),t.playButtons&&this._renderPlayPauseButton({playing:n,disabled:o,label:i.playDay,onClick:this._onPlayDayClick}))},l._renderDateOptions=function(){const{viewModel:e,visibleElements:t,messages:i}=this,{yearPlaying:s}=e,n=!e.sunLightingEnabled;return v.tsx("div",{key:"daylight-date-options",class:this.classes(h.CSS.dateContainer,n&&h.CSS.containerDisabled)},this._datePicker.render(),t.playButtons&&this._renderPlayPauseButton({playing:s,disabled:n,label:i.playYear,onClick:this._onYearPlayClick}))},l._renderPlayPauseButton=function({playing:e,disabled:t,label:i,onClick:s}){return v.tsx("calcite-button",{appearance:"solid",class:h.CSS.playPauseButton,disabled:t,iconStart:e?"pause-f":"play-f",label:i,round:!0,title:i,type:"button",onclick:s})},l._renderSeasonOptions=function(){const{messages:e,viewModel:t}=this,i=!t.sunLightingEnabled;return v.tsx("select",{class:this.classes(h.CSS.select,h.CSS.seasonPicker,i&&h.CSS.seasonPickerDisabled),disabled:i,value:t.currentSeason,"aria-label":e.season,onchange:this._onSeasonChange},g.ORDERED_SEASONS.map((t=>v.tsx("option",{value:t},e[t]))))},l._renderDateOrSeason=function(){return"date"===this.dateOrSeason?this._renderDateOptions():this._renderSeasonOptions()},l._renderSunLightingToggle=function(){const e=this.messages?.sunLightingToggle;return v.tsx("calcite-label",{key:"date-time-toggle",layout:"inline",title:e?.tooltip,scale:"s"},v.tsx("calcite-checkbox",{class:h.CSS.sunLightingCheckbox,checked:this.viewModel.sunLightingEnabled,onCalciteCheckboxChange:this._onSunLightingCheckboxChange}),e?.label)},l._renderShadowsToggle=function(){const e=this.messages.shadowsToggle;return v.tsx("calcite-label",{key:"shadow-toggle",layout:"inline",title:e?.tooltip,scale:"s"},v.tsx("calcite-checkbox",{class:h.CSS.shadowsCheckbox,checked:this.viewModel.directShadowsEnabled,onCalciteCheckboxChange:this._onShadowCheckboxChange}),e.label)},l._onUTCOffsetChange=function(){const e=this.viewModel.utcOffset,t=this._timeSlider.currentItem?.utcOffset,i=this.gmtOffsets;if(n.isNone(i)||t===e)return;const s=i.findIndex((({utcOffset:t})=>t===e));s>-1&&(this._timeSlider.currentIndex=s)},l._onPrimaryTickCreated=function(e,t,i){t.classList.add(...P,h.CSS.primaryTick),i.classList.add(...P,h.CSS.primaryTickLabel),i.onclick=t.onclick=this._makeGoToTime(e);const s=i.textContent,n=null!=s&&k.exec(s);n&&(i.innerHTML=`${n[1]}<br><div class=${h.CSS.primaryTickAmPm}>${n[2]}</div>`)},l._onSecondaryTickCreated=function(e,t){t.classList.add(...P,h.CSS.secondaryTick),t.onclick=this._makeGoToTime(e)},l._makeGoToTime=function(e){return()=>{this.viewModel.timeSliderPosition=e}},t._createClass(s,[{key:"gmtOffsets",get:function(){return n.applySome(this.timezoneMessages,m.getTimezoneInfos)}},{key:"label",get:function(){return this.messages?.title??""},set:function(e){this._overrideIfSome("label",e)}},{key:"playSpeedMultiplier",get:function(){return this.viewModel.playSpeedMultiplier},set:function(e){this.viewModel.playSpeedMultiplier=e}},{key:"timeSliderSteps",get:function(){return this._timeSlider?.steps??5},set:function(e){this._timeSlider.steps=e}},{key:"view",get:function(){return this.viewModel.view},set:function(e){this.viewModel.view=e}},{key:"test",get:function(){return{datePicker:this._datePicker}}},{key:"_useAmPm",get:function(){const e=this._timeSlider.viewModel.getLabelForValue(0,"tick");return null!=e&&k.test(e)}},{key:"_labelAlignmentClass",get:function(){const e=this.viewModel.timeSliderViewModel.values?.[0]??0,t=60*(this._useAmPm?4:3),i=60*(this._useAmPm?21:21.5);return e<t?h.CSS.sliderAlignLeft:e>i?h.CSS.sliderAlignRight:null}}]),s}(c);i.__decorate([l.property({readOnly:!0})],M.prototype,"gmtOffsets",null),i.__decorate([l.property(),b.messageBundle("esri/widgets/Daylight/t9n/Daylight")],M.prototype,"messages",void 0),i.__decorate([l.property(),b.messageBundle("esri/widgets/support/t9n/timezone")],M.prototype,"timezoneMessages",void 0),i.__decorate([l.property()],M.prototype,"headingLevel",void 0),i.__decorate([l.property()],M.prototype,"iconClass",void 0),i.__decorate([l.property()],M.prototype,"label",null),i.__decorate([l.property()],M.prototype,"playSpeedMultiplier",null),i.__decorate([l.property()],M.prototype,"timeSliderSteps",null),i.__decorate([l.property()],M.prototype,"view",null),i.__decorate([l.property({type:p})],M.prototype,"viewModel",void 0),i.__decorate([l.property({type:u,nonNullable:!0})],M.prototype,"visibleElements",void 0),i.__decorate([l.property({cast:e=>"season"===e||"date"===e?e:(s.getLogger(f).warn(`"${e}" is not a valid option. Acceptable values are only "date" or "season". Defaulting to "${C}".`),C)})],M.prototype,"dateOrSeason",void 0),i.__decorate([l.property()],M.prototype,"_timeSlider",void 0),i.__decorate([l.property()],M.prototype,"_useAmPm",null),i.__decorate([l.property()],M.prototype,"_labelAlignmentClass",null),i.__decorate([l.property()],M.prototype,"_datePicker",void 0),M=i.__decorate([d.subclass(f)],M);const P=["esri-interactive","esri-widget__anchor"];return M}));
