/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/handleUtils","../../core/maybe","../../core/promiseUtils","../../core/watchUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/ensureType","../../core/Logger","../../core/accessorSupport/decorators/subclass","../../views/support/layerViewUtils","./Edits","./UpdateWorkflowData","./Workflow","./workflowUtils"],(function(e,t,i,a,r,o,n,s,d,l,c,u,f,h,g,w){"use strict";var p;const m="candidate-highlight";let v=p=function(t){function n(e){var i;return(i=t.call(this,e)||this).type="update",i}e._inheritsLoose(n,t),n.create=function(t,i,a){const r=new p({data:new h({edits:new f.Edits,viewModel:t}),onCommit:(o=e._asyncToGenerator((function*(e){const t=e.edits.feature,i=t.sourceLayer,r=t.clone();if(!e.edits.attributesModified){const{objectIdField:e}=i;r.attributes={[e]:t.getAttribute(e)}}e.edits.geometryModified||(r.geometry=null),yield a(i,{updateFeatures:[r]})})),function(e){return o.apply(this,arguments)})});var o;return r._set("steps",this._createWorkflowSteps(r,i)),r};var s=n.prototype;return s.highlight=function(e){const{data:{viewModel:{view:t}}}=this,i=e&&t.allLayerViews.items.find((({layer:t})=>t===e.layer));u.highlightsSupported(i)&&this.handles.add(i.highlight(e),m)},s.unhighlight=function(){this.handles.remove(m)},n._createWorkflowSteps=function(t,n="awaiting-feature-to-update"){const{data:s,handles:d}=t,l={"awaiting-feature-to-update":()=>({id:"awaiting-feature-to-update",setUp(){var t=this;return e._asyncToGenerator((function*(){const{spinnerViewModel:e,view:i}=s.viewModel;let a=null;d.add({remove(){a&&(a.abort(),a=null)}},t.id),s.edits.feature=null;const o=i.on("immediate-click",(t=>{e.location=t.mapPoint,e.visible=!0,a&&a.abort();const{editableItems:o}=s.viewModel;a=r.createAbortController(),new Promise(((e,n)=>{r.onAbort(a.signal,(()=>n(r.createAbortError()))),e(w.fetchCandidates(o,i,t,a.signal))})).then((e=>{if(r.throwIfAborted(a),s.candidates=e.reduce(((e,t)=>t.error?e:[...e,...t.value]),[]),s.viewModel.spinnerViewModel.visible=1===s.candidates.length,0!==s.candidates.length)if(1===s.candidates.length){const e=s.candidates[0];s.edits.feature=e,s.viewModel.activeWorkflow.go("editing-existing-feature").catch((()=>{})).then((()=>s.viewModel.spinnerViewModel.visible=!1))}else s.viewModel.activeWorkflow.next()}))}));d.add(o,t.id)}))()},tearDown(){var t=this;return e._asyncToGenerator((function*(){d.remove(t.id)}))()}}),"awaiting-update-feature-candidate":()=>({id:"awaiting-update-feature-candidate",setUp(){var i=this;return e._asyncToGenerator((function*(){const{edits:e}=s;e.feature=null,d.add(o.watch(e,"feature",(e=>{t.unhighlight(),t.highlight(e)})),i.id)}))()},tearDown(){var i=this;return e._asyncToGenerator((function*(){t.unhighlight(),d.remove(i.id)}))()}}),"editing-existing-feature":()=>({id:"editing-existing-feature",setUp(){var o=this;return e._asyncToGenerator((function*(){const e=s.edits.feature,n=s.viewModel;s.editableItem=n.editableItems.find((t=>t.layer===e.layer));const l=r.createAbortController();d.add({remove:()=>l.abort()},o.id);const c=n.view.whenLayerView(e.layer),u=w.fetchFullFeature(e,n.view,l.signal),f=yield c,h=yield u;if(r.isAborted(l))return;s.edits.updateGeometry(h.geometry),s.edits.updateAttributes(h.attributes),s.edits.trackChanges();const g=h.sourceLayer,p=w.findLayerInfo(n.layerInfos,g),m=p&&p.fieldConfig;n.attachmentsViewModel.set({graphic:h,mode:"view"}),n.featureFormViewModel.set({feature:h,fieldConfig:m});const v="createInteractiveEditSession"in f?f.createInteractiveEditSession(e):null,y=[n.featureFormViewModel.on("value-change",(e=>{s.edits.updateAttributes(n.featureFormViewModel.getValues()),h.attributes=s.edits.feature.attributes,v&&v.setAttribute(e.fieldName,e.value)})),n.attachmentsViewModel.watch("mode",(e=>{"add"===e&&s.viewModel.activeWorkflow.go("adding-attachment"),"edit"===e&&s.viewModel.activeWorkflow.go("editing-attachment")}))];v&&(y.push(i.makeHandle((()=>v.rollback()))),d.add(i.makeHandle((()=>v.commit())),t._handleKeys.afterCommit));const{supportsGeometryUpdate:b}=g.capabilities.editing;if(b){n.sketchViewModel.allowDeleteKey=!1;const e=w.getVisualVariableAttributes(h),{interactive:i,visual:r}=yield w.setUpGeometryUpdate(h,e,n.sketchViewModel,n.view,(({geometry:t,attributes:i})=>{if(a.isSome(e.rotation)){const{field:t}=e.rotation;n.featureFormViewModel.setValue(t,i[t])}if(a.isSome(e.size)){const{field:t}=e.size;n.featureFormViewModel.setValue(t,i[t])}s.edits.updateAttributes(i),s.edits.updateGeometry(t)}));y.push(i,r),d.add(i,t._handleKeys.beforeCommit),d.add(r,t._handleKeys.afterCommit)}else t.highlight(h);d.add(y,o.id)}))()},tearDown(){var i=this;return e._asyncToGenerator((function*(){t.unhighlight(),d.remove(i.id)}))()}}),"adding-attachment":()=>({id:"adding-attachment",parent:"editing-existing-feature",setUp:()=>e._asyncToGenerator((function*(){}))(),tearDown:()=>e._asyncToGenerator((function*(){}))()}),"editing-attachment":()=>({id:"editing-attachment",parent:"editing-existing-feature",setUp:()=>e._asyncToGenerator((function*(){}))(),tearDown:()=>e._asyncToGenerator((function*(){}))()})};return w.createWorkflowSteps(["awaiting-feature-to-update","awaiting-update-feature-candidate","editing-existing-feature","adding-attachment","editing-attachment"],n,l)},n}(g);return v=p=t.__decorate([c.subclass("esri.widgets.Editor.UpdateWorkflow")],v),v}));
