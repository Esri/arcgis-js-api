/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/handleUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/promiseUtils","../../core/watchUtils","../../views/support/layerViewUtils","./Edits","./Workflow","./workflowUtils","./UpdateWorkflowData"],(function(e,t,i,a,r,o,s,n,d,l,c,u,h,f,g,w,p,m,v){"use strict";var y;const b="candidate-highlight";let M=y=function(t){function i(e){var i;return(i=t.call(this,e)||this).type="update",i}e._inheritsLoose(i,t),i.create=function(e,t,i){const a=new v({edits:new w,viewModel:e}),r=new y({data:a,afterCommit:i});return r._set("steps",this._createWorkflowSteps(r,t)),r};var r=i.prototype;return r.highlight=function(e){const{data:{viewModel:{view:t}}}=this,i=e&&t.allLayerViews.items.find((({layer:t})=>t===e.layer));g.highlightsSupported(i)&&this.handles.add(i.highlight(e),b)},r.unhighlight=function(){this.handles.remove(b)},i._createWorkflowSteps=function(e,t="awaiting-feature-to-update"){const{data:i,handles:r}=e,o={"awaiting-feature-to-update":()=>({id:"awaiting-feature-to-update",async setUp(){const{spinnerViewModel:e,view:t}=i.viewModel;let a=null;r.add({remove(){a&&(a.abort(),a=null)}},this.id),i.edits.feature=null;const o=t.on("immediate-click",(r=>{e.location=r.mapPoint,e.visible=!0,a&&a.abort();const{editableItems:o}=i.viewModel;a=h.createAbortController(),new Promise(((e,i)=>{h.onAbort(a.signal,(()=>i(h.createAbortError()))),e(m.fetchCandidates(o,t,r,a.signal))})).then((e=>{if(i.viewModel.spinnerViewModel.visible=!1,h.throwIfAborted(a),i.candidates=e.reduce(((e,t)=>t.error?e:[...e,...t.value]),[]),0!==i.candidates.length)if(1===i.candidates.length){const e=i.candidates[0];i.edits.feature=e,i.viewModel.activeWorkflow.go("editing-existing-feature")}else i.viewModel.activeWorkflow.next()}))}));r.add(o,this.id)},async tearDown(){r.remove(this.id)}}),"awaiting-update-feature-candidate":()=>({id:"awaiting-update-feature-candidate",async setUp(){const{edits:t}=i;t.feature=null,r.add(f.watch(t,"feature",(t=>{e.unhighlight(),e.highlight(t)})),this.id)},async tearDown(){e.unhighlight(),r.remove(this.id)}}),"editing-existing-feature":()=>({id:"editing-existing-feature",async setUp(){const t=i.edits.feature,o=i.viewModel;i.editableItem=o.editableItems.find((e=>e.layer===t.layer));const n=h.createAbortController();r.add({remove:()=>n.abort()},this.id);const d=o.view.whenLayerView(t.layer),l=m.fetchFullFeature(t,o.view,n.signal),c=await d,u=await l;if(h.isAborted(n))return;i.edits.updateGeometry(u.geometry),i.edits.updateAttributes(u.attributes),i.edits.trackChanges();const f=u.layer,g=m.findLayerInfo(o.layerInfos,f),w=g&&g.fieldConfig;o.attachmentsViewModel.set({graphic:u,mode:"view"}),o.featureFormViewModel.set({feature:u,fieldConfig:w});const p="createInteractiveEditSession"in c?c.createInteractiveEditSession(t):null,v=[o.featureFormViewModel.on("value-change",(e=>{i.edits.updateAttributes(o.featureFormViewModel.getValues()),u.attributes=i.edits.feature.attributes,p&&p.setAttribute(e.fieldName,e.value)})),o.attachmentsViewModel.watch("mode",(e=>{"add"===e&&i.viewModel.activeWorkflow.go("adding-attachment"),"edit"===e&&i.viewModel.activeWorkflow.go("editing-attachment")}))];p&&(v.push(s.makeHandle((()=>p.rollback()))),r.add(s.makeHandle((()=>p.commit())),e._handleKeys.afterCommit));const{supportsGeometryUpdate:y}=f.capabilities.editing;if(y){const t=m.getVisualVariableAttributes(u),{interactive:s,visual:n}=await m.setUpGeometryUpdate(u,t,o.sketchViewModel,o.view,(({geometry:e,attributes:r})=>{if(a.isSome(t.rotation)){const{field:e}=t.rotation;o.featureFormViewModel.setValue(e,r[e])}if(a.isSome(t.size)){const{field:e}=t.size;o.featureFormViewModel.setValue(e,r[e])}i.edits.updateAttributes(r),i.edits.updateGeometry(e)}));v.push(s,n),r.add(s,e._handleKeys.beforeCommit),r.add(n,e._handleKeys.afterCommit)}else e.highlight(u);r.add(v,this.id)},async tearDown(){e.unhighlight(),r.remove(this.id)}}),"adding-attachment":()=>({id:"adding-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){}}),"editing-attachment":()=>({id:"editing-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){}})};let n=!1;return["awaiting-feature-to-update","awaiting-update-feature-candidate","editing-existing-feature","adding-attachment","editing-attachment"].filter((e=>!!n||(n=e===t,n))).map((e=>o[e]()))},i}(p);return M=y=t.__decorate([d.subclass("esri.widgets.Editor.UpdateWorkflow")],M),M}));
