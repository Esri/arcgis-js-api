/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import{ignoreAbortErrors as s}from"../../core/promiseUtils.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as e}from"../../core/accessorSupport/decorators/subclass.js";import r from"./ZoomConditions2D.js";import n from"./ZoomConditions3D.js";let m=class extends t{constructor(o){super(o),this.canZoomIn=!1,this.canZoomOut=!1}destroy(){this.view=null}get state(){return this.get("view.ready")?"ready":"disabled"}set view(o){o?"2d"===o.type?this._zoomConditions=new r({view:o}):"3d"===o.type&&(this._zoomConditions=new n({view:o})):this._zoomConditions=null,this._set("view",o)}zoomIn(){if(!this.canZoomIn)return;const o=this.view;"2d"===o.type?o.mapViewNavigation.zoomIn():s(o.goTo({zoomFactor:2}))}zoomOut(){if(!this.canZoomOut)return;const o=this.view;"2d"===o.type?o.mapViewNavigation.zoomOut():s(o.goTo({zoomFactor:.5}))}};o([i()],m.prototype,"_zoomConditions",void 0),o([i({aliasOf:"_zoomConditions.canZoomIn",readOnly:!0})],m.prototype,"canZoomIn",void 0),o([i({aliasOf:"_zoomConditions.canZoomOut",readOnly:!0})],m.prototype,"canZoomOut",void 0),o([i({readOnly:!0})],m.prototype,"state",null),o([i()],m.prototype,"view",null),m=o([e("esri.widgets.Zoom.ZoomViewModel")],m);const a=m;export{a as default};
