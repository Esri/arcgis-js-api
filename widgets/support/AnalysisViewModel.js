/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import t from"../../core/Logger.js";import{isSome as i,applySome as n,abortMaybe as r,isNone as a,removeMaybe as o}from"../../core/maybe.js";import{createTask as l,throwIfAborted as c,isAbortError as h,isAborted as w}from"../../core/promiseUtils.js";import{watch as p,syncAndInitial as y,sync as d,whenOnce as _,when as u}from"../../core/reactiveUtils.js";import{property as v}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as V}from"../../core/accessorSupport/decorators/subclass.js";var g;!function(e){e[e.PENDING=0]="PENDING",e[e.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",e[e.RUNNING=2]="RUNNING"}(g||(g={}));let m=class extends s{constructor(e={}){super(e),this.view=null,this.analysisView=null,this._reconnectViewTask=null,this._forceInteractiveHandle=null,this._parentChangeFromReconnect=!1,this._startUserOperation=null,this.logger=t.getLogger(this.declaredClass);const s=e?.analysis;i(s)?this.analysis=s:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0)),e&&null!=e.visible&&(this.visible=e.visible)}normalizeCtorArgs(e){const{analysis:s,...t}=e;return t}initialize(){this.own([p((()=>({readyAndNotSupported:i(this.view)&&this.view.ready&&!this.supported})),(({readyAndNotSupported:e})=>{e&&this.logger.errorOnce(this.unsupportedErrorMessage)}),y),p((()=>n(this.analysis,(({parent:e})=>e))),(e=>{this._parentChangeFromReconnect||e===this.view||this._set("isAnalysisOwner",!1);const s=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,s&&this._scheduleViewReconnect()}),d),p((()=>({view:this.view,ready:i(this.view)&&this.view.ready,supported:this.supported})),(({view:e},{view:s})=>{e!==s&&(this._startUserOperation=r(this._startUserOperation),this._disconnectFromView(s)),this._scheduleViewReconnect()}),y)])}destroy(){this._reconnectViewTask=r(this._reconnectViewTask),this._startUserOperation=r(this._startUserOperation),i(this.analysisView)&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),this._set("view",null),i(this.analysis)&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}get supported(){return a(this.view)||this.view.type===this.supportedViewType}set visible(e){this._set("visible",e),i(this.analysisView)&&(this.analysisView.visible=e)}get active(){return i(this.tool)&&this.tool.active}get disabled(){return a(this.view)||!this.view.ready||!this.supported}set analysis(e){e!==this._get("analysis")&&(this._startUserOperation=r(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(e),this._scheduleViewReconnect())}get ready(){return i(this.analysisView)&&!this.connectingToView}get connectingToView(){return i(this._reconnectViewTask)}get isAnalysisOwner(){return this._get("isAnalysisOwner")}get tool(){return i(this.analysisView)?this.analysisView.tool:null}clear(){this._startUserOperation=r(this._startUserOperation),this._resetInteractiveCreationState(),i(this.tool)&&i(this.view)&&this.view.activeTool===this.tool&&(this.view.activeTool=null)}async start(){this.clear();const e={task:null,abort:null,state:g.PENDING},s=l((async s=>{if(e.state=g.WAIT_FOR_VIEW_READY,await _((()=>this.ready),s),e.state=g.RUNNING,a(this.analysisView)||a(this.view))return;const t=this.analysisView.tool;a(t)||(this.view.activeTool=t,u((()=>t.created),(()=>{t.active&&i(this.view)&&(this.view.activeTool=null)}),{initial:!0,once:!0}))}));return e.task=s,e.abort=()=>s.abort(),this._startUserOperation=e,s.promise}onConnectToAnalysisView(e){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=r(this._reconnectViewTask);const e=l((async s=>{try{await this._reconnectView(s)}catch(t){if(c(s),!h(t))return void this.logger.warn("Failed to use analysis in view model",t);throw t}finally{e===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=e}async _reconnectView(e){const{view:s}=this,t=i(s)&&s.ready&&this.supported,n=this.analysis;if(this._startUserOperation=O(this._startUserOperation),this._disconnectFromView(s),t&&!a(s)&&!a(n)){if(this.isAnalysisOwner){if(i(n.parent))return void this.logger.errorOnce("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,s.analyses.add(n)}this.analysisView=await s.whenAnalysisView(n),w(e)?this._startUserOperation=O(this._startUserOperation):(this.analysisView.visible=this.visible,this._forceInteractiveHandle=this.analysisView.forceInteractiveForViewModel(),this.own(this._forceInteractiveHandle),this.onConnectToAnalysisView(this.analysisView))}}_disconnectFromView(e){i(e)&&this.isAnalysisOwner&&e.analyses.includes(this.analysis)&&(this._parentChangeFromReconnect=!0,this.analysis.clear(),e.analyses.remove(this.analysis)),this.onDisconnectFromAnalysisView(),this._forceInteractiveHandle=o(this._forceInteractiveHandle),this.analysisView=null}_setExternalAnalysis(e){if(i(this.analysisView)&&!this.isAnalysisOwner&&(this.analysisView.visible=void 0,this._forceInteractiveHandle=o(this._forceInteractiveHandle)),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",e),this._parentChangeFromReconnect=!1,!e.isEditable){const s=e.nonEditableMessage;this.logger.warn(`The assigned ${e.type} analysis object will not be editable in the view. ${s}`)}}_resetInteractiveCreationState(){this.analysis.clear(),i(this.tool)&&this.tool.resetCreated()}get testInfo(){return{analysisView:this.analysisView}}};function O(e){return i(e)&&e.state>=g.RUNNING?(e.abort(),null):e}e([v()],m.prototype,"supported",null),e([v()],m.prototype,"view",void 0),e([v({type:Boolean,value:!0})],m.prototype,"visible",null),e([v()],m.prototype,"active",null),e([v()],m.prototype,"disabled",null),e([v({nonNullable:!0})],m.prototype,"analysis",null),e([v()],m.prototype,"analysisView",void 0),e([v()],m.prototype,"ready",null),e([v()],m.prototype,"connectingToView",null),e([v({readOnly:!0})],m.prototype,"isAnalysisOwner",null),e([v()],m.prototype,"_reconnectViewTask",void 0),e([v()],m.prototype,"_forceInteractiveHandle",void 0),e([v()],m.prototype,"tool",null),m=e([V("esri.widgets.support.AnalysisViewModel")],m);export{m as AnalysisViewModel};
