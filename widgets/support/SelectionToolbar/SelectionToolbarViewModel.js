/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Evented.js";import{handlesGroup as o}from"../../../core/handleUtils.js";import{removeMaybe as r}from"../../../core/maybe.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import a from"../Selector2D.js";let n=class extends t.EventedAccessor{constructor(e){super(e),this._operationHandlesGroup=null,this.activeOperation=null,this.layers=null,this.selector=new a}destroy(){this._operationHandlesGroup=r(this._operationHandlesGroup),this.selector.destroy()}get state(){return this.activeOperation?"active":this.view?.ready&&this.layers?.length?"ready":"disabled"}set view(e){this.selector.view=e,this._set("view",e)}cancel(){"active"===this.state&&(this.activeOperation.cancel(),this.activeOperation=null),this.selector.candidates=null}activate(e){const{state:t}=this;if("disabled"===t)return;"active"===t&&this.cancel(),this.selector.candidates=this._getCandidates();const r=this.selector.draw(e);return this._operationHandlesGroup=o([r.once("complete",(e=>this._onOperationComplete(e))),r.on("selection-change",(e=>this._onOperationSelectionChange(e)))]),this.activeOperation=r,r}_getCandidates(){let e=[];return this.layers.forEach((t=>{e=e.concat(...t.graphics.toArray())})),e}_onOperationSelectionChange(e){this.emit("selection-change",e)}_onOperationComplete(e){this._operationHandlesGroup=r(this._operationHandlesGroup),this.activeOperation=null,this.emit("complete",e)}};e([s()],n.prototype,"activeOperation",void 0),e([s()],n.prototype,"layers",void 0),e([s({readOnly:!0})],n.prototype,"selector",void 0),e([s({readOnly:!0})],n.prototype,"state",null),e([s()],n.prototype,"view",null),n=e([i("esri.widgets.support.SelectionToolbar.SelectionToolbarViewModel")],n);const c=n;export{c as default};
