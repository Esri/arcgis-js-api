/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
define(["exports","../../core/Logger","../../core/Error","./actions"],(function(e,t,r,o){"use strict";const i="esri.widgets.Popup.PopupViewModel",a=t.getLogger(i),s=function(e){const{event:t,view:i}=e,{action:a}=t,s=i&&i.popup;if(!a)return Promise.reject(new r("trigger-action:missing-arguments","Event has no action"));if(!s)return Promise.reject(new r("trigger-action:missing-arguments","view.popup is missing"));const{disabled:n,id:u}=a;if(!u)return Promise.reject(new r("trigger-action:invalid-action","action.id is missing"));if(n)return Promise.reject(new r("trigger-action:invalid-action","Action is disabled"));if(u===o.zoomToFeature.id)return c(s.viewModel);if(u===o.zoomToClusteredFeatures.id)return d(s.viewModel);if(s.viewModel.browseClusterEnabled=!1,u===o.browseClusteredFeatures.id&&(s.featureMenuOpen=!0,s.viewModel.browseClusterEnabled=!0),u===o.removeSelectedFeature.id){s.close();const{selectedFeature:e}=s;if(!e)return Promise.reject(new r(`trigger-action:${o.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:e}));const{sourceLayer:t}=e;return t?t.remove(e):i.graphics.remove(e),Promise.resolve()}return Promise.resolve()};function n(e){const{selectedFeature:t,location:r,view:o}=e;if(!o)return null;if("3d"===o.type)return t||r;return e.get("selectedFeature.geometry")||r}function u(e,t){if("3d"!==(null==t?void 0:t.type)||!e||"esri.Graphic"!==e.declaredClass)return!0;const o=t.getViewForGraphic(e);if(o&&"whenGraphicBounds"in o){let t=!1;return o.whenGraphicBounds(e,{useViewElevation:!0}).then((e=>{t=!e||!e.boundingBox||e.boundingBox[0]===e.boundingBox[3]&&e.boundingBox[1]===e.boundingBox[4]&&e.boundingBox[2]===e.boundingBox[5]})).catch((()=>{const t=new r("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:e});a.error(t)})),t}return!0}async function c(e){const{location:t,selectedFeature:i,view:s,zoomFactor:c}=e,d=n(e);if(!d){const e=new r("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:d,view:s});return a.error(e),Promise.reject(e)}const l=s.scale/c,g=e.get("selectedFeature.geometry")||t,w=g&&"point"===g.type&&u(i,s);o.zoomToFeature.active=!0,o.zoomToFeature.disabled=!0,await e.view.goTo({target:d,scale:w?l:void 0}),o.zoomToFeature.active=!1,o.zoomToFeature.disabled=!1,e.zoomToLocation=null,w&&(e.location=g)}async function d(e){const{selectedFeature:t,view:i}=e;if("2d"!==(null==i?void 0:i.type)){const e=new r("zoomToCluster:invalid-view","View must be 2d MapView.",{view:i});throw a.error(e),e}if(!t.isAggregate){const e=new r("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw a.error(e),e}const s=t.sourceLayer,n=await i.whenLayerView(s),u=n.createQuery();u.aggregateIds=[t.getObjectId()],o.zoomToClusteredFeatures.active=!0,o.zoomToClusteredFeatures.disabled=!0;const{extent:c}=await n.queryExtent(u);await i.goTo({target:c}),o.zoomToClusteredFeatures.active=!1,o.zoomToClusteredFeatures.disabled=!1}async function l(e){const{selectedFeature:t,view:o}=e;if("2d"!==(null==o?void 0:o.type)){const e=new r("displayClusterExtent:invalid-view","View must be 2d MapView.",{view:o});throw a.error(e),e}if(!t.isAggregate){const e=new r("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw a.error(e),e}const i=t.sourceLayer,s=await o.whenLayerView(i),n=s.createQuery();n.aggregateIds=[t.getObjectId()];const{extent:u}=await s.queryExtent(n);e.selectedClusterBoundaryFeature.geometry=u,o.graphics.add(e.selectedClusterBoundaryFeature)}async function g(e){const{selectedFeature:t,view:i}=e;if("2d"!==(null==i?void 0:i.type)){const e=new r("browseAggregateFeatures:invalid-view","View must be 2d MapView.",{view:i});throw a.error(e),e}if(!t.isAggregate){const e=new r("browseAggregateFeatures:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw a.error(e),e}const s=t.sourceLayer,n=await i.whenLayerView(s),u=n.createQuery();u.aggregateIds=[t.getObjectId()],o.browseClusteredFeatures.active=!0,o.browseClusteredFeatures.disabled=!0;const{features:c}=await n.queryFeatures(u);o.browseClusteredFeatures.active=!1,o.browseClusteredFeatures.disabled=!1,e.features=[t].concat(c)}function w(e){e.features=e.features.filter((e=>e.isAggregate))}e.browseAggregateFeatures=g,e.displayClusterExtent=l,e.getSelectedTarget=n,e.isZoomScreenSize=u,e.removeClusteredFeaturesForBrowsing=w,e.triggerAction=s,e.zoomToClusterExtent=d,e.zoomToLocation=c,Object.defineProperty(e,"__esModule",{value:!0})}));
