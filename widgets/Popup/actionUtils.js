/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../core/Error","../../core/Logger","./actions"],(function(e,t,r,o,i){"use strict";const n="esri.widgets.Popup.PopupViewModel",s=o.getLogger(n),a=function(e){const{event:t,view:o}=e,{action:n}=t,s=o&&o.popup;if(!n)return Promise.reject(new r("trigger-action:missing-arguments","Event has no action"));if(!s)return Promise.reject(new r("trigger-action:missing-arguments","view.popup is missing"));const{disabled:a,id:u}=n;if(!u)return Promise.reject(new r("trigger-action:invalid-action","action.id is missing"));if(a)return Promise.reject(new r("trigger-action:invalid-action","Action is disabled"));if(u===i.zoomToFeature.id)return l(s.viewModel);if(u===i.zoomToClusteredFeatures.id)return g(s.viewModel);if(u===i.browseClusteredFeatures.id)return s.featureMenuOpen=!s.featureMenuOpen,s.viewModel.browseClusterEnabled=!s.viewModel.browseClusterEnabled,Promise.resolve();if(s.viewModel.browseClusterEnabled=!1,u===i.removeSelectedFeature.id){s.close();const{selectedFeature:e}=s;if(!e)return Promise.reject(new r(`trigger-action:${i.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:e}));const{sourceLayer:t}=e;return t?t.remove(e):o.graphics.remove(e),Promise.resolve()}return Promise.resolve()};function u(e){const{selectedFeature:t,location:r,view:o}=e;if(!o)return null;if("3d"===o.type)return t||r;return e.get("selectedFeature.geometry")||r}function c(e,t){if("3d"!==(null==t?void 0:t.type)||!e||"esri.Graphic"!==e.declaredClass)return!0;const o=t.getViewForGraphic(e);if(o&&"whenGraphicBounds"in o){let t=!1;return o.whenGraphicBounds(e,{useViewElevation:!0}).then((e=>{t=!e||!e.boundingBox||e.boundingBox[0]===e.boundingBox[3]&&e.boundingBox[1]===e.boundingBox[4]&&e.boundingBox[2]===e.boundingBox[5]})).catch((()=>{const t=new r("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:e});s.error(t)})),t}return!0}function l(e){return d.apply(this,arguments)}function d(){return(d=t._asyncToGenerator((function*(e){const{location:t,selectedFeature:o,view:n,zoomFactor:a}=e,l=u(e);if(!l){const e=new r("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:l,view:n});return s.error(e),Promise.reject(e)}const d=n.scale/a,g=e.get("selectedFeature.geometry")||t,w=g&&"point"===g.type&&c(o,n);i.zoomToFeature.active=!0,i.zoomToFeature.disabled=!0,yield e.view.goTo({target:l,scale:w?d:void 0}),i.zoomToFeature.active=!1,i.zoomToFeature.disabled=!1,e.zoomToLocation=null,w&&(e.location=g)}))).apply(this,arguments)}function g(e){return w.apply(this,arguments)}function w(){return(w=t._asyncToGenerator((function*(e){const{selectedFeature:t,view:o}=e;if("2d"!==(null==o?void 0:o.type)){const e=new r("zoomToCluster:invalid-view","View must be 2d MapView.",{view:o});throw s.error(e),e}if(!t.isAggregate){const e=new r("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw s.error(e),e}const n=t.sourceLayer,a=yield o.whenLayerView(n),u=a.createQuery();u.aggregateIds=[t.getObjectId()],i.zoomToClusteredFeatures.active=!0,i.zoomToClusteredFeatures.disabled=!0;const{extent:c}=yield a.queryExtent(u);yield o.goTo({target:c}),i.zoomToClusteredFeatures.active=!1,i.zoomToClusteredFeatures.disabled=!1}))).apply(this,arguments)}function p(e){return v.apply(this,arguments)}function v(){return(v=t._asyncToGenerator((function*(e){const{selectedFeature:t,view:o}=e;if("2d"!==(null==o?void 0:o.type)){const e=new r("displayClusterExtent:invalid-view","View must be 2d MapView.",{view:o});throw s.error(e),e}if(!t.isAggregate){const e=new r("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw s.error(e),e}const i=t.sourceLayer,n=yield o.whenLayerView(i),a=n.createQuery();a.aggregateIds=[t.getObjectId()];const{extent:u}=yield n.queryExtent(a);e.selectedClusterBoundaryFeature.geometry=u,o.graphics.add(e.selectedClusterBoundaryFeature)}))).apply(this,arguments)}function f(e){return m.apply(this,arguments)}function m(){return(m=t._asyncToGenerator((function*(e){const{selectedFeature:t,view:o}=e;if("2d"!==(null==o?void 0:o.type)){const e=new r("browseAggregateFeatures:invalid-view","View must be 2d MapView.",{view:o});throw s.error(e),e}if(!t.isAggregate){const e=new r("browseAggregateFeatures:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw s.error(e),e}const n=t.sourceLayer,a=yield o.whenLayerView(n),u=a.createQuery();u.aggregateIds=[t.getObjectId()],i.browseClusteredFeatures.active=!0,i.browseClusteredFeatures.disabled=!0;const{features:c}=yield a.queryFeatures(u);i.browseClusteredFeatures.active=!1,i.browseClusteredFeatures.disabled=!1,o.popup.open({features:[t].concat(c),featureMenuOpen:!0})}))).apply(this,arguments)}function y(e){e.features=e.features.filter((e=>e.isAggregate))}e.browseAggregateFeatures=f,e.displayClusterExtent=p,e.getSelectedTarget=u,e.isZoomScreenSize=c,e.removeClusteredFeaturesForBrowsing=y,e.triggerAction=a,e.zoomToClusterExtent=g,e.zoomToLocation=l,Object.defineProperty(e,"__esModule",{value:!0})}));
