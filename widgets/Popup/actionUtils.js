/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../core/Error","../../core/Logger","../../core/maybe","../../core/promiseUtils","./actions"],(function(e,t,r,o,n,i,s){"use strict";const u="esri.widgets.Popup.PopupViewModel",a=o.getLogger(u),c=e=>{const{event:t,view:o}=e,{action:n}=t,u=o&&o.popup;if(!n)return Promise.reject(new r("trigger-action:missing-arguments","Event has no action"));if(!u)return Promise.reject(new r("trigger-action:missing-arguments","view.popup is missing"));const{disabled:a,id:c}=n;if(!c)return Promise.reject(new r("trigger-action:invalid-action","action.id is missing"));if(a)return Promise.reject(new r("trigger-action:invalid-action","Action is disabled"));if(c===s.zoomToFeature.id)return f(u.viewModel).catch(i.throwIfNotAbortError);if(c===s.zoomToClusteredFeatures.id)return m(u.viewModel);if(c===s.browseClusteredFeatures.id)return u.featureMenuOpen=!u.featureMenuOpen,u.viewModel.browseClusterEnabled=!u.viewModel.browseClusterEnabled,Promise.resolve();if(u.viewModel.browseClusterEnabled=!1,c===s.removeSelectedFeature.id){u.close();const{selectedFeature:e}=u;if(!e)return Promise.reject(new r(`trigger-action:${s.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:e}));const{sourceLayer:t}=e;return t?t.remove(e):o.graphics.remove(e),Promise.resolve()}return Promise.resolve()};function l(e){const{selectedFeature:t,location:r,view:o}=e;if(!o)return null;if("3d"===o.type)return t??r??null;return e.get("selectedFeature.geometry")||r}function d(e){return!!e&&e.isAggregate&&"cluster"===e.sourceLayer?.featureReduction?.type}function g(e,t){return p.apply(this,arguments)}function p(){return(p=t._asyncToGenerator((function*(e,t){if("3d"!==t?.type||!e||"esri.Graphic"!==e.declaredClass)return!0;const r=t.getViewForGraphic(e);if(r&&"whenGraphicBounds"in r){let t;try{t=yield r.whenGraphicBounds(e,{useViewElevation:!0})}catch(o){}return!t||!t.boundingBox||t.boundingBox[0]===t.boundingBox[3]&&t.boundingBox[1]===t.boundingBox[4]&&t.boundingBox[2]===t.boundingBox[5]}return!0}))).apply(this,arguments)}function f(e){return y.apply(this,arguments)}function y(){return(y=t._asyncToGenerator((function*(e){const{location:t,selectedFeature:o,view:i,zoomFactor:u}=e,c=l(e);if(!i||!c){const e=new r("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:c,view:i});throw a.error(e),e}const d=i.scale/u,p=e.selectedFeature?.geometry,f=p??t,y=n.isSome(f)&&"point"===f.type&&(yield g(o,i));s.zoomToFeature.active=!0,s.zoomToFeature.disabled=!0;try{yield e.zoomTo({target:{target:c,scale:y?d:void 0}})}catch(m){const e=new r("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:o});a.error(e)}finally{s.zoomToFeature.active=!1,s.zoomToFeature.disabled=!1,e.zoomToLocation=null,y&&(e.location=f)}}))).apply(this,arguments)}function m(e){return w.apply(this,arguments)}function w(){return(w=t._asyncToGenerator((function*(e){const{selectedFeature:t,view:o}=e;if("2d"!==o?.type){const e=new r("zoomToCluster:invalid-view","View must be 2d MapView.",{view:o});throw a.error(e),e}if(!t||!d(t)){const e=new r("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw a.error(e),e}const[n,i]=yield T(o,t);s.zoomToClusteredFeatures.active=!0,s.zoomToClusteredFeatures.disabled=!0;const{extent:u}=yield n.queryExtent(i);yield e.zoomTo({target:u}),s.zoomToClusteredFeatures.active=!1,s.zoomToClusteredFeatures.disabled=!1}))).apply(this,arguments)}function v(e){return h.apply(this,arguments)}function h(){return(h=t._asyncToGenerator((function*(e){const{view:t,selectedFeature:r}=e;if(!t||!r)return;const[o,n]=yield T(t,r),{extent:i}=yield o.queryExtent(n);e.selectedClusterBoundaryFeature.geometry=i,t.graphics.add(e.selectedClusterBoundaryFeature)}))).apply(this,arguments)}function F(e){return b.apply(this,arguments)}function b(){return(b=t._asyncToGenerator((function*(e){const{selectedFeature:t,view:r}=e;if(!r||!t)return;const[o,n]=yield T(r,t);s.browseClusteredFeatures.active=!0,s.browseClusteredFeatures.disabled=!0;const{features:i}=yield o.queryFeatures(n);s.browseClusteredFeatures.active=!1,s.browseClusteredFeatures.disabled=!1,r.popup?.open({features:[t].concat(i),featureMenuOpen:!0})}))).apply(this,arguments)}function T(e,t){return C.apply(this,arguments)}function C(){return(C=t._asyncToGenerator((function*(e,t){const r=yield e.whenLayerView(t.sourceLayer),o=r.createQuery(),n=t.getObjectId();return o.aggregateIds=null!=n?[n]:[],[r,o]}))).apply(this,arguments)}function z(e){const t=e.features.filter((e=>d(e)));t.length&&(e.features=t)}function x(e){if(n.isNone(e))return null;switch(e.type){case"point":return e;case"extent":return e.center;case"polygon":return e.centroid;case"multipoint":case"polyline":return e.extent?.center;default:return null}}e.browseAggregateFeatures=F,e.displayClusterExtent=v,e.getPointFromGeometry=x,e.getSelectedTarget=l,e.isClusterFeature=d,e.removeClusteredFeaturesForBrowsing=z,e.triggerAction=c,e.zoomToClusterExtent=m,e.zoomToLocation=f,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
