/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../Graphic","../../symbols","../../core/Collection","../../core/Error","../../core/Handles","../../core/Logger","../../core/maybe","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/subclass","../../geometry/support/webMercatorUtils","../../layers/Layer","../../layers/LayerConstants","../../support/actions/ActionBase","../../support/actions/ActionButton","../../support/actions/ActionToggle","../../symbols/support/symbolUtils","../../views/input/InputManager","../../views/support/layerViewUtils","../Feature/FeatureViewModel","./actions","./actionUtils","../support/AnchorElementViewModel","../support/GoTo","../../symbols/SimpleFillSymbol","../../geometry/Point"],(function(e,t,i,r,o,s,n,a,l,u,c,h,d,p,g,f,y,_,w,F,v,m,b,C,P,E,A,M,V,T,L){"use strict";const O=s.ofType({key:"type",defaultKeyValue:"button",base:w,typeMap:{button:F,toggle:v}}),S=()=>[E.zoomToFeature.clone()],I=()=>[E.zoomToClusteredFeatures.clone(),E.browseClusteredFeatures.clone()];let x=function(t){function i(e){var i;return(i=t.call(this,e)||this)._handles=new a,i._pendingPromises=new Set,i._fetchFeaturesController=null,i._highlightSelectedFeaturePromise=null,i._highlightActiveFeaturePromise=null,i._selectedClusterFeature=null,i.featurePage=null,i.actions=new O,i.activeFeature=null,i.defaultPopupTemplateEnabled=!1,i.autoCloseEnabled=!1,i.autoOpenEnabled=!0,i.browseClusterEnabled=!1,i.content=null,i.featuresPerPage=20,i.featureViewModelAbilities=null,i.featureViewModels=[],i.highlightEnabled=!0,i.includeDefaultActions=!0,i.selectedClusterBoundaryFeature=new r({symbol:new T({outline:{width:1.5,color:"cyan"},style:"none"})}),i.title=null,i.updateLocationEnabled=!1,i.view=null,i.visible=!1,i.zoomFactor=4,i.zoomToLocation=null,i}e._inheritsLoose(i,t);var o=i.prototype;return o.initialize=function(){this._handles.add([c.watch((()=>[this.autoOpenEnabled,this.view]),(()=>this._autoOpenEnabledChange())),this.on("view-change",(()=>this._autoClose())),c.watch((()=>[this.highlightEnabled,this.selectedFeature,this.visible,this.view]),(()=>this._highlightSelectedFeature())),c.watch((()=>[this.highlightEnabled,this.activeFeature,this.visible,this.view]),(()=>this._highlightActiveFeature())),c.watch((()=>this.view?.animation?.state),(e=>this._animationStateChange(e))),c.watch((()=>this.location),(e=>this._locationChange(e))),c.watch((()=>this.selectedFeature),(e=>this._selectedFeatureChange(e))),c.watch((()=>[this.selectedFeatureIndex,this.featureCount,this.featuresPerPage]),(()=>this._selectedFeatureIndexChange())),c.watch((()=>[this.featurePage,this.selectedFeatureIndex,this.featureCount,this.featuresPerPage,this.featureViewModels]),(()=>this._setGraphicOnFeatureViewModels())),c.watch((()=>this.featureViewModels),(()=>this._featureViewModelsChange())),this.on("trigger-action",(e=>A.triggerAction({event:e,view:this.view}))),c.when((()=>!this.waitingForResult),(()=>this._waitingForResultChange()),c.sync),c.watch((()=>[this.features,this.view?.map,this.view?.spatialReference]),(()=>this._updateFeatureVMs())),c.watch((()=>this.view?.scale),(()=>this._viewScaleChange())),c.when((()=>!this.visible),(()=>this.browseClusterEnabled=!1)),c.watch((()=>this.browseClusterEnabled),(e=>e?this.enableClusterBrowsing():this.disableClusterBrowsing()))])},o.destroy=function(){this._cancelFetchingFeatures(),this._handles.destroy(),this._pendingPromises.clear(),this.browseClusterEnabled=!1,this.view=null},o.centerAtLocation=function(){const{view:e}=this,t=A.getSelectedTarget(this);return t&&e?this.callGoTo({target:{target:t,scale:e.scale}}):Promise.reject(new n("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:t,view:e}))},o.zoomTo=function(e){return this.callGoTo(e)},o.clear=function(){this.set({promises:[],features:[],content:null,title:null,location:null,activeFeature:null})},o.fetchFeatures=function(e,t){const{view:i}=this;if(!i||!e)throw new n("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:e,view:i});return i.fetchPopupFeatures(e,{event:t&&t.event,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:t&&t.signal})},o.open=function(e){const t={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...e,visible:!0},{fetchFeatures:i}=t;delete t.fetchFeatures,i&&this._setFetchFeaturesPromises(t.location);const r=["actionsMenuOpen","collapsed","featureMenuOpen"];for(const o of r)delete t[o];this.set(t)},o.triggerAction=function(e){const t=this.allActions.getItemAt(e);t&&!t.disabled&&this.emit("trigger-action",{action:t})},o.next=function(){return this.selectedFeatureIndex=this.selectedFeatureIndex+1,this},o.previous=function(){return this.selectedFeatureIndex=this.selectedFeatureIndex-1,this},o.disableClusterBrowsing=function(){A.removeClusteredFeaturesForBrowsing(this),this._clearBrowsedClusterGraphics()},o.enableClusterBrowsing=function(){var t=e._asyncToGenerator((function*(){const{view:e,selectedFeature:t}=this;"2d"===e?.type?A.isClusterFeature(t)?(yield A.displayClusterExtent(this),yield A.browseAggregateFeatures(this)):l.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.",t):l.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.",t)}));function i(){return t.apply(this,arguments)}return i}(),o._animationStateChange=function(e){this.zoomToLocation||(E.zoomToFeature.disabled="waiting-for-target"===e)},o._clearBrowsedClusterGraphics=function(){const e=this.view?.graphics;e&&(e.remove(this.selectedClusterBoundaryFeature),this._selectedClusterFeature&&e.remove(this._selectedClusterFeature)),this._selectedClusterFeature=null,this.selectedClusterBoundaryFeature.geometry=null},o._viewScaleChange=function(){if(A.isClusterFeature(this.selectedFeature))return this.browseClusterEnabled=!1,this.visible=!1,void this.clear();this.browseClusterEnabled&&(this.features=this.selectedFeature?[this.selectedFeature]:[])},o._locationChange=function(e){const{selectedFeature:t,updateLocationEnabled:i}=this;i&&e&&(!t||t.geometry)&&this.centerAtLocation()},o._selectedFeatureIndexChange=function(){this.featurePage=this.featureCount>1?Math.floor(this.selectedFeatureIndex/this.featuresPerPage)+1:null},o._featureViewModelsChange=function(){this.featurePage=this.featureCount>1?1:null},o._setGraphicOnFeatureViewModels=function(){const{features:e,featureCount:t,featurePage:i,featuresPerPage:r,featureViewModels:o}=this;if(null===i)return;const s=((i-1)*r+t)%t,n=s+r;o.slice(s,n).forEach(((t,i)=>{t&&!t.graphic&&(t.graphic=e[s+i])}))},o._selectedFeatureChange=function(){var t=e._asyncToGenerator((function*(e){const{location:t,updateLocationEnabled:i,view:r}=this;if(e&&r){if(this.browseClusterEnabled){if(this._selectedClusterFeature&&(r.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),A.isClusterFeature(e))return;return e.symbol=yield m.getDisplayedSymbol(e),this._selectedClusterFeature=e,void r.graphics.add(this._selectedClusterFeature)}!i&&t||!e.geometry?i&&!e.geometry&&this.centerAtLocation().then((()=>{const e=r.center?.clone();e&&(this.location=e)})):this.location=u.unwrap(A.getPointFromGeometry(e.geometry))}}));function i(e){return t.apply(this,arguments)}return i}(),o._waitingForResultChange=function(){!this.featureCount&&this.promises&&(this.visible=!1)},o._setFetchFeaturesPromises=function(e){return this._fetchFeaturesWithController(this._getScreenPoint(e||this.location)).then((e=>{const{clientOnlyGraphics:t,promisesPerLayerView:i}=e,r=Promise.resolve(t),o=i.map((e=>e.promise));this.promises=[r,...o]}))},o._destroyFeatureVMs=function(){this.featureViewModels.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",[])},o._updateFeatureVMs=function(){const{selectedFeature:e,features:t,featureViewModels:i}=this;if(A.isClusterFeature(e)||(this.browseClusterEnabled=!1),this._destroyFeatureVMs(),!t||!t.length)return;const r=i.slice(0),o=[];t.forEach(((t,i)=>{if(!t)return;let s=null;if(r.some(((e,i)=>(e&&e.graphic===t&&(s=e,r.splice(i,1)),!!s))),s)o[i]=s;else{const r=new P({abilities:this.featureViewModelAbilities,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:this.view?.spatialReference,graphic:t===e?t:null,map:this.view?.map,view:this.view});o[i]=r}})),r.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",o)},o._getScreenPoint=function(e){const{view:t}=this;return t&&e&&"function"==typeof t.toScreen?t.toScreen(e):null},o._autoOpenEnabledChange=function(){const e="auto-fetch-features",{_handles:t,autoOpenEnabled:i}=this;if(t.remove(e),i&&this.view){const i=this.view.on("click",(e=>{"mouse"===e.pointerType&&0!==e.button||this._fetchFeaturesAndOpen(e)}),b.ViewEventPriorities.WIDGET);t.add(i,e)}},o._cancelFetchingFeatures=function(){const e=this._fetchFeaturesController;e&&e.abort(),this._fetchFeaturesController=null,this.notifyChange("waitingForResult")},o._fetchFeaturesWithController=function(e,t){this._cancelFetchingFeatures();const i=new AbortController,{signal:r}=i;this._fetchFeaturesController=i,this.notifyChange("waitingForResult");const o=this.fetchFeatures(e,{signal:r,event:t});return o.catch((()=>{})).then((()=>{this._fetchFeaturesController=null,this.notifyChange("waitingForResult")})),o},o._fetchFeaturesAndOpen=function(e){const{screenPoint:t,mapPoint:i}=e,{view:r}=this;this._fetchFeaturesWithController(t,e).then((e=>{const{clientOnlyGraphics:t,promisesPerLayerView:o,location:s}=e,n=[Promise.resolve(t),...o.map((e=>e.promise))];return r?.popup?.open({location:s||i,promises:n}),e}))},o._updatePendingPromises=function(e){e&&this._pendingPromises.has(e)&&(this._pendingPromises.delete(e),this.notifyChange("pendingPromisesCount"))},o._autoClose=function(){this.autoCloseEnabled&&(this.visible=!1)},o._getLayerView=function(){var t=e._asyncToGenerator((function*(e,t){return yield e.when(),e.whenLayerView(t)}));function i(e,i){return t.apply(this,arguments)}return i}(),o._getHighlightLayer=function(e){const{layer:t,sourceLayer:i}=e;return i&&"layer"in i&&i.layer?i.layer:"map-notes"===i?.type||"subtype-group"===i?.type?i:t},o._getHighlightTarget=function(e,t){const i="imagery"===t.type?void 0:"objectIdField"in t?t.objectIdField||_.fallbackObjectIDAttribute:null,r=e.attributes;return r&&i&&r[i]||e},o._highlightActiveFeature=function(){var t=e._asyncToGenerator((function*(){const e="highlight-active-feature";this._handles.remove(e);const{highlightEnabled:t,view:i,activeFeature:r,visible:o}=this;if(!(r&&i&&t&&o))return;const s=this._getHighlightLayer(r);if(!(s&&s instanceof y))return;const n=this._getLayerView(i,s);this._highlightActiveFeaturePromise=n;const a=yield n;if(!(a&&C.highlightsSupported(a)&&this._highlightActiveFeaturePromise===n&&this.activeFeature&&this.highlightEnabled))return;const l=a.highlight(this._getHighlightTarget(r,s));this._handles.add(l,e)}));function i(){return t.apply(this,arguments)}return i}(),o._highlightSelectedFeature=function(){var t=e._asyncToGenerator((function*(){const e="highlight-selected-feature";this._handles.remove(e);const{selectedFeature:t,highlightEnabled:i,view:r,visible:o}=this;if(!(t&&r&&i&&o))return;const s=this._getHighlightLayer(t);if(!(s&&s instanceof y))return;const n=this._getLayerView(r,s);this._highlightSelectedFeaturePromise=n;const a=yield n;if(!(a&&C.highlightsSupported(a)&&this._highlightSelectedFeaturePromise===n&&this.selectedFeature&&this.highlightEnabled&&this.visible))return;const l=a.highlight(this._getHighlightTarget(t,s));this._handles.add(l,e)}));function i(){return t.apply(this,arguments)}return i}(),o._updateFeatures=function(e){const{features:t}=this;if(!e||!e.length)return;if(!t.length)return void(this.features=e);const i=e.filter((e=>!t.includes(e)));this.features=t.concat(i)},e._createClass(i,[{key:"isLoadingFeature",get:function(){return this.featureViewModels.some((e=>e.waitingForContent))}},{key:"active",get:function(){return!(!this.visible||this.waitingForResult)}},{key:"allActions",get:function(){const e=this._get("allActions")||new O;e.removeAll();const{actions:t,defaultActions:i,defaultPopupTemplateEnabled:r,includeDefaultActions:o,selectedFeature:s}=this,n=o?i.concat(t):t,a=s&&("function"==typeof s.getEffectivePopupTemplate&&s.getEffectivePopupTemplate(r)||s.popupTemplate),l=a&&a.actions,u=a&&a.overwriteActions?l:l?l.concat(n):n;return u&&u.filter(Boolean).forEach((t=>e.add(t))),e}},{key:"defaultActions",get:function(){const e=this._get("defaultActions")||new O;return e.removeAll(),e.addMany(A.isClusterFeature(this.selectedFeature)?I():S()),e}},{key:"featureCount",get:function(){return this.features.length}},{key:"features",get:function(){return this._get("features")||[]},set:function(e){const t=e||[];this._set("features",t);const{pendingPromisesCount:i,promiseCount:r,selectedFeatureIndex:o}=this,s=r&&t.length;s&&i&&-1===o?this.selectedFeatureIndex=0:s&&-1!==o||(this.selectedFeatureIndex=t.length?0:-1)}},{key:"location",get:function(){return this._get("location")||null},set:function(e){let t=e;const i=this.view?.spatialReference?.isWebMercator;e&&e?.spatialReference?.isWGS84&&i&&(t=f.geographicToWebMercator(e)),this._set("location",t)}},{key:"pendingPromisesCount",get:function(){return this._pendingPromises.size}},{key:"waitingForResult",get:function(){return!(!(!!this._fetchFeaturesController||this.pendingPromisesCount>0)||0!==this.featureCount)}},{key:"promiseCount",get:function(){return this.promises.length}},{key:"promises",get:function(){return this._get("promises")||[]},set:function(e){if(this._pendingPromises.clear(),this.features=[],!Array.isArray(e)||!e.length)return this._set("promises",[]),void this.notifyChange("pendingPromisesCount");this._set("promises",e),(e=e.slice(0)).forEach((e=>{this._pendingPromises.add(e);const t=t=>{this._pendingPromises.has(e)&&this._updateFeatures(t),this._updatePendingPromises(e)},i=()=>this._updatePendingPromises(e);e.then(t,i)})),this.notifyChange("pendingPromisesCount")}},{key:"selectedFeature",get:function(){const{features:e,selectedFeatureIndex:t}=this;if(-1===t)return null;return e[t]||null}},{key:"selectedFeatureIndex",get:function(){const e=this._get("selectedFeatureIndex");return"number"==typeof e?e:-1},set:function(e){const{featureCount:t}=this;e=isNaN(e)||e<-1||!t?-1:(e+t)%t,this.activeFeature=null,this._set("selectedFeatureIndex",e)}},{key:"selectedFeatureViewModel",get:function(){return this.featureViewModels[this.selectedFeatureIndex]||null}},{key:"state",get:function(){return this.get("view.ready")?"ready":"disabled"}}]),i}(V.GoToMixin(M));t.__decorate([h.property()],x.prototype,"featurePage",void 0),t.__decorate([h.property()],x.prototype,"isLoadingFeature",null),t.__decorate([h.property({type:O})],x.prototype,"actions",void 0),t.__decorate([h.property({readOnly:!0})],x.prototype,"active",null),t.__decorate([h.property()],x.prototype,"activeFeature",void 0),t.__decorate([h.property({readOnly:!0})],x.prototype,"allActions",null),t.__decorate([h.property({type:Boolean})],x.prototype,"defaultPopupTemplateEnabled",void 0),t.__decorate([h.property()],x.prototype,"autoCloseEnabled",void 0),t.__decorate([h.property()],x.prototype,"autoOpenEnabled",void 0),t.__decorate([h.property()],x.prototype,"browseClusterEnabled",void 0),t.__decorate([h.property()],x.prototype,"content",void 0),t.__decorate([h.property({type:O,readOnly:!0})],x.prototype,"defaultActions",null),t.__decorate([h.property({readOnly:!0})],x.prototype,"featureCount",null),t.__decorate([h.property()],x.prototype,"features",null),t.__decorate([h.property()],x.prototype,"featuresPerPage",void 0),t.__decorate([h.property()],x.prototype,"featureViewModelAbilities",void 0),t.__decorate([h.property({readOnly:!0})],x.prototype,"featureViewModels",void 0),t.__decorate([h.property()],x.prototype,"highlightEnabled",void 0),t.__decorate([h.property()],x.prototype,"includeDefaultActions",void 0),t.__decorate([h.property({type:L})],x.prototype,"location",null),t.__decorate([h.property({readOnly:!0})],x.prototype,"pendingPromisesCount",null),t.__decorate([h.property({readOnly:!0})],x.prototype,"selectedClusterBoundaryFeature",void 0),t.__decorate([h.property({readOnly:!0})],x.prototype,"waitingForResult",null),t.__decorate([h.property({readOnly:!0})],x.prototype,"promiseCount",null),t.__decorate([h.property()],x.prototype,"promises",null),t.__decorate([h.property({value:null,readOnly:!0})],x.prototype,"selectedFeature",null),t.__decorate([h.property({value:-1})],x.prototype,"selectedFeatureIndex",null),t.__decorate([h.property({readOnly:!0})],x.prototype,"selectedFeatureViewModel",null),t.__decorate([h.property({readOnly:!0})],x.prototype,"state",null),t.__decorate([h.property()],x.prototype,"title",void 0),t.__decorate([h.property()],x.prototype,"updateLocationEnabled",void 0),t.__decorate([h.property()],x.prototype,"view",void 0),t.__decorate([h.property()],x.prototype,"visible",void 0),t.__decorate([h.property()],x.prototype,"zoomFactor",void 0),t.__decorate([h.property()],x.prototype,"zoomToLocation",void 0),t.__decorate([h.property()],x.prototype,"centerAtLocation",null),x=t.__decorate([g.subclass("esri.widgets.Popup.PopupViewModel")],x);return x}));
