/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/has","../../core/maybe","../../core/Logger","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","../../core/Error","../../core/urlUtils","../../core/uuid","../../portal/support/resourceExtension","../../core/promiseUtils","../../geometry/support/webMercatorUtils","../../geometry/Point","../../geometry","../../core/Collection","../../support/actions/ActionBase","../../support/actions/ActionButton","../../support/actions/ActionToggle","../../core/Handles","../../layers/Layer","../../core/watchUtils","../../views/input/InputManager","../Feature/FeatureViewModel","../support/AnchorElementViewModel","../../views/support/layerViewUtils","./actions","../support/GoTo"],(function(e,t,o,n,i,r,s,a,l,c,u,p,h,d,g,f,y,_,m,w,F,v,b,C,P,E,T,O,x){"use strict";const L=y.ofType({key:"type",defaultKeyValue:"button",base:_,typeMap:{button:m,toggle:w}}),V="esri.widgets.Popup.PopupViewModel",A=i.getLogger(V);let z=function(t){function o(e){var o;return(o=t.call(this,e)||this)._handles=new F,o._pendingPromises=new Set,o._zoomToLocation=null,o._fetchFeaturesController=null,o.actions=new L([O.zoomToFeature.clone()]),o.defaultPopupTemplateEnabled=!1,o.autoCloseEnabled=!1,o.autoOpenEnabled=!0,o.content=null,o.featureViewModels=[],o.highlightEnabled=!0,o.title=null,o.updateLocationEnabled=!1,o.view=null,o.visible=!1,o.zoomFactor=4,o}e._inheritsLoose(o,t);var i=o.prototype;return i.initialize=function(){this._handles.add([b.init(this,["autoOpenEnabled","view"],(()=>this._autoOpenEnabledChange())),this.on("view-change",(()=>this._autoClose())),b.watch(this,["highlightEnabled","selectedFeature","visible","view"],(()=>this._highlightFeature())),b.watch(this,"view.animation.state",(e=>this._animationStateChange(e))),b.watch(this,"location",(e=>this._locationChange(e))),b.watch(this,"selectedFeature",(e=>this._selectedFeatureChange(e))),this.on("trigger-action",(e=>O.triggerAction({event:e,view:this.view}))),b.whenFalse(this,"waitingForResult",(()=>this._waitingForResultChange())),b.watch(this,["features","view","view.map","view.spatialReference"],(()=>this._updateFeatureVMs()))])},i.destroy=function(){this._cancelFetchingFeatures(),this._handles.destroy(),this._handles=null,this._pendingPromises.clear(),this.view=null},i.centerAtLocation=function(){const{view:e}=this,t=this._getSelectedTarget();if(!t){const o=new l("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:t,view:e});return A.error(o),h.reject(o)}return this.callGoTo({target:{target:t,scale:e.scale}})},i.clear=function(){this.set({promises:[],features:[],content:null,title:null,location:null})},i.fetchFeatures=function(e,t){const{view:o}=this;if(!o||!e){const t=new l("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:e,view:o});return A.error(t),h.reject(t)}return o.fetchPopupFeatures(e,{event:t&&t.event,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:t&&t.signal})},i.open=function(e){const t={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...e,visible:!0},{fetchFeatures:o}=t;delete t.fetchFeatures,o&&this._setFetchFeaturesPromises(t.location),this.set(t)},i.triggerAction=function(e){const t=this.allActions.getItemAt(e);t&&!t.disabled&&this.emit("trigger-action",{action:t})},i.next=function(){return this.selectedFeatureIndex=this.selectedFeatureIndex+1,this},i.previous=function(){return this.selectedFeatureIndex=this.selectedFeatureIndex-1,this},i.zoomToLocation=function(){const{location:e,selectedFeature:t,view:o,zoomFactor:n}=this,i=this._getSelectedTarget();if(!i){const e=new l("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:i,view:o});return A.error(e),h.reject(e)}const r=o.scale/n,s=this.get("selectedFeature.geometry")||e,a=s&&"point"===s.type&&this._isZoomScreenSize(t);O.zoomToFeature.active=!0,O.zoomToFeature.disabled=!0;const c=this.callGoTo({target:{target:i,scale:a?r:void 0}}).catch((()=>{O.zoomToFeature.active=!1,O.zoomToFeature.disabled=!1,this._zoomToLocation=null})).then((()=>{a&&(this.location=s)}));return this._zoomToLocation=c,c},i._animationStateChange=function(e){this._zoomToLocation||(O.zoomToFeature.disabled="waiting-for-target"===e)},i._locationChange=function(e){const{selectedFeature:t,updateLocationEnabled:o}=this;o&&e&&(!t||t.geometry)&&this.centerAtLocation()},i._selectedFeatureChange=function(e){if(!e)return;const{location:t,updateLocationEnabled:o,view:i}=this;!o&&t||!e.geometry?o&&!e.geometry&&this.centerAtLocation().then((()=>{this.location=i.center.clone()})):this.location=n.unwrap(this._getPointFromGeometry(e.geometry))},i._waitingForResultChange=function(){!this.featureCount&&this.promises&&(this.visible=!1)},i._setFetchFeaturesPromises=function(e){return this._fetchFeaturesWithController(this._getScreenPoint(e||this.location)).then((e=>{const{clientOnlyGraphics:t,promisesPerLayerView:o}=e,n=h.resolve(t),i=o.map((e=>e.promise));this.promises=[n,...i]}))},i._destroyFeatureVMs=function(){this.featureViewModels.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",[])},i._updateFeatureVMs=function(){const{features:e,featureViewModels:t}=this;if(this._destroyFeatureVMs(),!e||!e.length)return;const o=t.slice(0),n=[];e.forEach(((e,t)=>{if(!e)return;let i=null;if(o.some(((t,n)=>(t&&t.graphic===e&&(i=t,o.splice(n,1)),!!i))),i)n[t]=i;else{var r,s;const o=new P({defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,graphic:e,spatialReference:null==(r=this.view)?void 0:r.spatialReference,map:null==(s=this.view)?void 0:s.map});n[t]=o}})),o.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",n)},i._getScreenPoint=function(e){const{view:t}=this;return t&&e&&"function"==typeof t.toScreen?t.toScreen(e):null},i._getSelectedTarget=function(){const{selectedFeature:e,location:t,view:o}=this;if(!o)return null;if("3d"===o.type)return e||t;return this.get("selectedFeature.geometry")||t},i._autoOpenEnabledChange=function(){const e="auto-fetch-features",{_handles:t,autoOpenEnabled:o}=this;if(t.remove(e),o&&this.view){const o=this.view.on("click",(e=>{"mouse"===e.pointerType&&0!==e.button||this._fetchFeaturesAndOpen(e)}),C.ViewEventPriorities.WIDGET);t.add(o,e)}},i._cancelFetchingFeatures=function(){const e=this._fetchFeaturesController;e&&e.abort(),this._fetchFeaturesController=null,this.notifyChange("waitingForResult")},i._fetchFeaturesWithController=function(e,t){this._cancelFetchingFeatures();const o=h.createAbortController(),{signal:n}=o;this._fetchFeaturesController=o,this.notifyChange("waitingForResult");const i=this.fetchFeatures(e,{signal:n,event:t});return i.catch((()=>{})).then((()=>{this._fetchFeaturesController=null,this.notifyChange("waitingForResult")})),i},i._fetchFeaturesAndOpen=function(e){const{screenPoint:t,mapPoint:o}=e,{view:n}=this;this._fetchFeaturesWithController(t,e).then((e=>{const{clientOnlyGraphics:t,promisesPerLayerView:i,location:r}=e,s=[h.resolve(t),...i.map((e=>e.promise))];return n.popup.open({location:r||o,promises:s}),e}))},i._updatePendingPromises=function(e){e&&this._pendingPromises.has(e)&&(this._pendingPromises.delete(e),this.notifyChange("pendingPromisesCount"))},i._autoClose=function(){this.autoCloseEnabled&&(this.visible=!1)},i._isZoomScreenSize=function(e){const{view:t}=this;if("3d"!==t.type||!e||"esri.Graphic"!==e.declaredClass)return!0;const o=t.getViewForGraphic(e);if(o&&"whenGraphicBounds"in o){let t=!1;return o.whenGraphicBounds(e,{useViewElevation:!0}).then((e=>{t=!e||!e.boundingBox||e.boundingBox[0]===e.boundingBox[3]&&e.boundingBox[1]===e.boundingBox[4]&&e.boundingBox[2]===e.boundingBox[5]})).catch((()=>{const t=new l("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:e});A.error(t)})),t}return!0},i._getPointFromGeometry=function(e){return n.isNone(e)?null:"point"===e.type?e:"extent"===e.type?e.center:"polygon"===e.type?e.centroid:"multipoint"===e.type||"polyline"===e.type?e.extent.center:null},i._getLayerView=async function(e,t){return await e.when(),e.whenLayerView(t)},i._highlightFeature=async function(){const e="highlight";this._handles.remove(e);const{selectedFeature:t,highlightEnabled:o,view:n,visible:i}=this;if(!(t&&n&&o&&i))return;const{layer:r}=t;if(!(r&&r instanceof v))return;const s=this._getLayerView(n,r);this._highlightPromise=s;const a=await s;if(!(a&&T.highlightsSupported(a)&&this._highlightPromise===s&&this.selectedFeature&&this.highlightEnabled&&this.visible))return;const l="objectIdField"in r&&r.objectIdField,c=t.attributes,u=c&&l&&c[l],p=a.highlight(u||t);this._handles.add(p,e)},i._updateFeatures=function(e){const{features:t}=this;if(!e||!e.length)return;if(!t.length)return void(this.features=e);const o=e.filter((e=>-1===t.indexOf(e)));this.features=t.concat(o)},e._createClass(o,[{key:"active",get:function(){return!(!this.visible||this.waitingForResult)}},{key:"allActions",get:function(){const e=this._get("allActions")||new L;e.removeAll();const t=this.selectedFeature&&("function"==typeof this.selectedFeature.getEffectivePopupTemplate&&this.selectedFeature.getEffectivePopupTemplate(this.defaultPopupTemplateEnabled)||this.selectedFeature.popupTemplate),o=t&&t.actions,n=t&&t.overwriteActions?o:o?o.concat(this.actions):this.actions;return n&&n.filter(Boolean).forEach((t=>e.add(t))),e}},{key:"featureCount",get:function(){return this.features.length}},{key:"features",get:function(){return this._get("features")||[]},set:function(e){const t=e||[];this._set("features",t);const{pendingPromisesCount:o,promiseCount:n,selectedFeatureIndex:i}=this,r=n&&t.length;r&&o&&-1===i?this.selectedFeatureIndex=0:r&&-1!==i||(this.selectedFeatureIndex=t.length?0:-1)}},{key:"location",get:function(){return this._get("location")||null},set:function(e){const t=this.get("view.spatialReference.isWebMercator");e&&e.get("spatialReference.isWGS84")&&t&&(e=d.geographicToWebMercator(e)),this._set("location",e)}},{key:"pendingPromisesCount",get:function(){return this._pendingPromises.size}},{key:"waitingForResult",get:function(){return!(!(!!this._fetchFeaturesController||this.pendingPromisesCount>0)||0!==this.featureCount)}},{key:"promiseCount",get:function(){return this.promises.length}},{key:"promises",get:function(){return this._get("promises")||[]},set:function(e){if(this._pendingPromises.clear(),this.features=[],!Array.isArray(e)||!e.length)return this._set("promises",[]),void this.notifyChange("pendingPromisesCount");this._set("promises",e),(e=e.slice(0)).forEach((e=>{this._pendingPromises.add(e);e.then((t=>{this._pendingPromises.has(e)&&this._updateFeatures(t),this._updatePendingPromises(e)}),(()=>this._updatePendingPromises(e)))})),this.notifyChange("pendingPromisesCount")}},{key:"selectedFeature",get:function(){const{features:e,selectedFeatureIndex:t}=this;if(-1===t)return null;return e[t]||null}},{key:"selectedFeatureIndex",get:function(){const e=this._get("selectedFeatureIndex");return"number"==typeof e?e:-1},set:function(e){const{featureCount:t}=this;e=isNaN(e)||e<-1||!t?-1:(e+t)%t,this._set("selectedFeatureIndex",e)}},{key:"selectedFeatureViewModel",get:function(){return this.featureViewModels[this.selectedFeatureIndex]||null}},{key:"state",get:function(){return this.get("view.ready")?"ready":"disabled"}}]),o}(x.GoToMixin(E));return t.__decorate([s.property({type:L})],z.prototype,"actions",void 0),t.__decorate([s.property({readOnly:!0,dependsOn:["visible","waitingForResult"]})],z.prototype,"active",null),t.__decorate([s.property({dependsOn:["actions.length","selectedFeature.sourceLayer.popupTemplate.actions.length","selectedFeature.sourceLayer.popupTemplate.overwriteActions","selectedFeature.popupTemplate.actions.length","selectedFeature.popupTemplate.overwriteActions"],readOnly:!0})],z.prototype,"allActions",null),t.__decorate([s.property({type:Boolean})],z.prototype,"defaultPopupTemplateEnabled",void 0),t.__decorate([s.property()],z.prototype,"autoCloseEnabled",void 0),t.__decorate([s.property()],z.prototype,"autoOpenEnabled",void 0),t.__decorate([s.property()],z.prototype,"content",void 0),t.__decorate([s.property({readOnly:!0,dependsOn:["features"]})],z.prototype,"featureCount",null),t.__decorate([s.property()],z.prototype,"features",null),t.__decorate([s.property({readOnly:!0})],z.prototype,"featureViewModels",void 0),t.__decorate([s.property()],z.prototype,"highlightEnabled",void 0),t.__decorate([s.property({type:g})],z.prototype,"location",null),t.__decorate([s.property({readOnly:!0,dependsOn:["promises"]})],z.prototype,"pendingPromisesCount",null),t.__decorate([s.property({readOnly:!0,dependsOn:["featureCount","pendingPromisesCount"]})],z.prototype,"waitingForResult",null),t.__decorate([s.property({readOnly:!0,dependsOn:["promises"]})],z.prototype,"promiseCount",null),t.__decorate([s.property()],z.prototype,"promises",null),t.__decorate([s.property({value:null,readOnly:!0,dependsOn:["features","selectedFeatureIndex","updateLocationEnabled"]})],z.prototype,"selectedFeature",null),t.__decorate([s.property({value:-1})],z.prototype,"selectedFeatureIndex",null),t.__decorate([s.property({readOnly:!0,dependsOn:["featureViewModels","selectedFeatureIndex"]})],z.prototype,"selectedFeatureViewModel",null),t.__decorate([s.property({readOnly:!0,dependsOn:["view.ready"]})],z.prototype,"state",null),t.__decorate([s.property()],z.prototype,"title",void 0),t.__decorate([s.property()],z.prototype,"updateLocationEnabled",void 0),t.__decorate([s.property()],z.prototype,"view",void 0),t.__decorate([s.property()],z.prototype,"visible",void 0),t.__decorate([s.property()],z.prototype,"zoomFactor",void 0),t.__decorate([s.property()],z.prototype,"centerAtLocation",null),t.__decorate([s.property()],z.prototype,"zoomToLocation",null),z=t.__decorate([a.subclass(V)],z),z}));
