/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../Color","../../core/handleUtils","../../core/maybe","../../core/memoize","../../core/reactiveUtils","../../core/SetUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/subclass","../../chunks/vec3","../../chunks/vec4f64","../../geometry/ellipsoidUtils","../../geometry/support/ray","../../layers/support/ElevationQuery","../../views/3d/webgl-engine/lib/Intersector","../../views/3d/webgl-engine/lib/IntersectorInterfaces","../../views/3d/webgl-engine/lib/intersectorUtilsConversions","./ElevationProfileLine"],(function(e,t,r,n,o,i,s,c,l,a,u,p,d,y,_,v,f,h,m,w,g,I){"use strict";const b=2e5;let E=function(t){function a(e){var n;return(n=t.call(this,e)||this).type="view",n.color=new r("#cf4ccf"),n.viewVisualizationEnabled=!0,n.include=null,n.exclude=null,n.numSamplesForPreview=50,n.numSamplesPerChunk=25,n._getQueryElevationDependencies=i.memoize(((e,t,r,n,i,s,c)=>({inputGraphicUid:o.isSome(e)?x(e):null,visibleLayers:t,maxIntersectionDistance:r,intersectOptions:n,view:i,stationary:s,spatialReference:c}))),n._vecA=_.create(),n._vecB=_.create(),n._ray=f.create(),n}e._inheritsLoose(a,t);var u=a.prototype;return u.queryElevation=function(){var t=e._asyncToGenerator((function*(e,{noDataValue:t,signal:r}){const n=this.queryElevationDependencies;if(o.isNone(n))throw new Error("ElevationProfileLineInput: no dependencies");const i=this._intersector;if(o.isNone(i))throw new Error("ElevationProfileLineInput: no view");const{intersectOptions:s,view:c,spatialReference:l}=n,a=c.renderCoordsHelper,u=c.sceneIntersectionHelper,p=this._vecA,d=this._vecA,_=this._vecB,v=this._ray;if(!l)return{geometry:e,noDataValue:t};const m=yield h.GeometryDescriptor.fromGeometry(e).project(l,r);if(!m)return{geometry:e,noDataValue:t};const w=m.coordinates,g=w.length;for(let o=0;o<g;++o){const e=w[o];y.set(_,e.x,e.y,e.z??0),a.toRenderCoords(_,l,_),a.setAltitude(p,b,_);const r=f.fromPoints(p,_,v);u.computeIntersection(r,i,s);const c=L(n,i.results.all);c?(c.getIntersectionPoint(d),a.fromRenderCoords(d,d,l),e.z=d[2]):e.z=t}return{geometry:m.export(),noDataValue:t}}));function r(e,r){return t.apply(this,arguments)}return r}(),u.attach=function(e){const r=()=>this._onChange();return n.handlesGroup([t.prototype.attach.call(this,e),s.watch((()=>this.queryElevationDependencies),r),s.on((()=>e.elevationProvider),"elevation-change",r,{onListenerAdd:r,onListenerRemove:r})])},e._createClass(a,[{key:"minDemResolution",get:function(){const e=this._viewModel?.view;if(o.isNone(e)||"3d"!==e.type)return null;const t=e.pointsOfInterest?.focus?.renderLocation;if(!t)return null;return e.state.camera.computeRenderPixelSizeAt(t)*l.getMetersPerVerticalUnitForSR(e.spatialReference)}},{key:"queryElevationDependencies",get:function(){return o.applySome(this._view,(e=>this._getQueryElevationDependencies(this._viewModel?.input,this._visibleLayers,this._maxIntersectionDistance,this._intersectOptions,e,e.stationary,e.spatialReference)))}},{key:"_visibleLayers",get:function(){const e=this._view,t=o.applySome(e,(e=>e.map?.allLayers?.filter((e=>e.visible)).toArray()));return o.unwrapOr(t,[])}},{key:"_intersectOptions",get:function(){const e=this._view;if(o.isNone(e))return{};const t=e.externalToInternalIntersectOptions({include:this.include,exclude:this.exclude}),r=e.externalToInternalIntersectOptions({exclude:this._pointCloudLayers});return t.exclude=c.union(t.exclude,r.exclude),t}},{key:"_pointCloudLayers",get:function(){const e=this._view;return o.isNone(e)?[]:e.allLayerViews.toArray().filter((e=>"point-cloud"===e.layer?.type)).map((e=>e.layer))}},{key:"_view",get:function(){const e=this._viewModel?.view;return o.isSome(e)&&"3d"===e.type?e:null}},{key:"_maxIntersectionDistance",get:function(){const e=this._view;return o.isNone(e)||!e.renderCoordsHelper?Number.POSITIVE_INFINITY:v.getReferenceEllipsoid(e.spatialReference).radius/e.renderCoordsHelper.unitInMeters}},{key:"_intersector",get:function(){const e=this._view;if(o.isNone(e))return null;const t=m.newIntersector(e.state.viewingMode),r=t.options;return r.hud=!1,r.invisibleTerrain=!1,r.backfacesTerrain=!1,r.selectionMode=!1,r.store=w.StoreResults.ALL,t}}]),a}(I);function L({view:e,inputGraphicUid:t,maxIntersectionDistance:r},n){for(const i of n){if(null!=i.distanceInRenderSpace&&i.distanceInRenderSpace>r)continue;const n=g.toGraphic(i,e);if(o.isNone(n)||x(n)!==t)return i}return null}function x(e){if(e.layer&&"objectIdField"in e.layer){const t=e.attributes[e.layer.objectIdField];if(t)return`o-${e.layer.id}-${t}`}return`u-${e.uid}`}t.__decorate([a.property({type:r,nonNullable:!0})],E.prototype,"color",void 0),t.__decorate([a.property()],E.prototype,"viewVisualizationEnabled",void 0),t.__decorate([a.property()],E.prototype,"include",void 0),t.__decorate([a.property()],E.prototype,"exclude",void 0),t.__decorate([a.property({readOnly:!0})],E.prototype,"minDemResolution",null),t.__decorate([a.property()],E.prototype,"queryElevationDependencies",null),t.__decorate([a.property()],E.prototype,"_visibleLayers",null),t.__decorate([a.property()],E.prototype,"_intersectOptions",null),t.__decorate([a.property()],E.prototype,"_pointCloudLayers",null),t.__decorate([a.property()],E.prototype,"_view",null),t.__decorate([a.property()],E.prototype,"_maxIntersectionDistance",null),t.__decorate([a.property()],E.prototype,"_intersector",null),E=t.__decorate([d.subclass("esri.widgets.ElevationProfile.ElevationProfileLineView")],E);return E}));
