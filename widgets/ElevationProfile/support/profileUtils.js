/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{splitIntoChunks as e}from"../../../core/arrayUtils.js";import{lerp as t}from"../../../core/mathUtils.js";import{isNone as r,none as o,forEachSome as n}from"../../../core/maybe.js";import{throwIfAborted as s,after as i,isAbortError as l,throwIfNotAbortError as a}from"../../../core/promiseUtils.js";import c from"../../../geometry/Multipoint.js";import{QueueProcessor as p}from"../../../views/support/QueueProcessor.js";import{TaskPriority as u}from"../../../views/support/Scheduler.js";import{DELAY_AFTER_PREVIEW_MILLIS as m,DEFAULT_ELEVATION_PROFILE_QUERY_OPTIONS as f,ERROR_RESULT as d}from"./constants.js";import{isValidInputPath as h,countPoints as y,densifyPath as w}from"./geometryUtils.js";import{ProfileGenerationError as g,ProfileGenerationErrorCause as v}from"./ProfileGenerationError.js";import{getStatistics as P}from"./statisticsUtils.js";import{breadthFirstBinaryPartitioning as Z}from"../../support/traversalUtils.js";async function*j(e,t){const{view:l,geometry:a,elevationInfo:c,providers:p,options:u}=e;if(r(a)||!h(a))throw new g(v.InvalidGeometry);const f=l.spatialReference,d=p.length;if(0===d)return o;const P=Math.round(u.maxTotalSamples/d);if(y(a)>P)throw new g(v.TooComplex);const Z=await w(a,c,l,f,u,P,t);let j=0;const x=new Array(d),E=new Array(d);for(let r=0;r<d;r++){const o=U(Z);x[r]=o,j+=o.samples.length;const n={...e,provider:p[r],result:o,densificationResult:Z};E[r]=R(n,t)[Symbol.iterator]()}if(j>u.maxTotalSamples)throw new g(v.TooComplex);const O=await Promise.all(E.map((e=>{const t=e.next();return!0===t.done?Promise.resolve(null):t.value})));s(t);for(let r=0;r<d;r++)x[r]=O[r];yield x,await i(e.delayAfterPreview??m,null,t.signal);const S=[];try{let e;do{e=!1;for(let t=0;t<d;t++){const r=E[t].next();!1===r.done&&(S.push({resultPromise:r.value,index:t}),e=!0)}}while(e)}finally{E.forEach((e=>e.return?.()))}for(const{resultPromise:r,index:o}of S)x[o]=await r,s(t),yield x;n(x,(e=>{e.progress=1})),yield x}function*R(t,r){const{densificationResult:o}=t,n={...t,abortOptions:r,densificationResult:o},s=Z(0,n.result.samples.length),i=s.slice(0,n.provider.numSamplesForPreview);yield x(n,i,!0);const l=e(s,n.provider.numSamplesPerChunk);for(const e of l)yield x(n,e,!1)}async function x({densificationResult:e,result:t,provider:r,queue:o,abortOptions:n,cache:s},i,a){const{densifiedPath:p,pathLength:u}=e,m=t.spatialReference,{samples:h}=t,y=new Array(i.length);for(let l=0;l<i.length;l++){const e=h[i[l]];y[l]=e.coordinate}try{return await o.push({geometry:new c({spatialReference:m,points:y,hasZ:p.hasZ}),provider:r,indices:i,preview:a,result:t,queryOptions:{...f,minDemResolution:a?Math.round(u/r.numSamplesForPreview):Math.round(u/h.length),cache:s}},n),{...t}}catch(w){return l(w)?null:d}}function E(e){return new p({priority:u.ELEVATION_PROFILE,concurrency:1,scheduler:e,process:async e=>{s(e.queryOptions);try{await O(e)}catch(t){a(t)}}})}async function O({geometry:e,provider:t,indices:r,preview:o,result:n,queryOptions:s}){if(0===r.length)return;const i=(await b(t,e,s)).geometry,{hasZ:l,points:a}=i,c=s.noDataValue,{samples:p}=n;for(let u=0;u<r.length;u++){const e=p[r[u]];if(e.isHole)continue;const t=l?a[u][2]:null;null===t||t===c?e.sampledZ=null:(n.hasZ=!0,e.sampledZ=t),e.sampled=!0}S(p),n.progress=o?0:n.progress+r.length/p.length,n.statistics=P(n.samples,n.spatialReference)}function S(e){const t=e.length-1;let r=0;for(let o=1;o<=t;o++){(e[o].sampled||o===t)&&(A(e,r,o),r=o)}}function A(e,o,n){if(n-o==1)return;const s=e[o],i=s.sampledZ,l=e[n],a=l.sampledZ;if(r(i)||r(a)){for(let t=o+1;t<n;t++)e[t].sampledZ=null;return}const c=s.distance,p=l.distance-c;for(let r=o+1;r<n;r++){const o=e[r],n=(o.distance-c)/p;o.sampledZ=t(i,a,n)}}function U({densifiedPath:e,distances:t}){const r=e.spatialReference,o=e.paths,n=o.length,s=2*(n-1),i=o.reduce(((e,t)=>e+t.length),0)+s,l=new Array(i);let a=0,c=null,p=0;const u=(e,t,r,o)=>{l[a++]=T(e,r),l[a++]=T(t,o)};for(let m=0;m<n;m++){const e=o[m],r=t[m];for(let t=0;t<e.length;t++){const o=e[t],n=r[t];c&&0===t&&u(c,o,p,n),l[a++]=q(o,n),c=o,p=n}}return{progress:0,samples:l,hasZ:!1,statistics:null,spatialReference:r}}function q(e,t){return{coordinate:e,distance:t,sampledZ:null,sampled:!1,isHole:!1}}function T(e,t){return{coordinate:e,distance:t,sampledZ:null,sampled:!0,isHole:!0}}async function b(e,t,r){try{return await e.queryElevation(t,r)}catch(o){throw new g(v.ElevationQueryError)}}export{E as createProfileQueue,R as generateProfile,j as generateProfiles,S as interpolateElevations};
