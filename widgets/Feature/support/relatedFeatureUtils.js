/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../../../request.js";import t from"../../../core/Error.js";import r from"../../../core/Logger.js";import{eachAlways as s}from"../../../core/promiseUtils.js";import{isNumericField as o}from"../../../layers/support/fieldUtils.js";import"../../../core/has.js";import"../../../layers/support/source/DataLayerSource.js";import{executeQueryJSON as i}from"../../../rest/query/executeQueryJSON.js";import"../../../core/arrayUtils.js";import"../../../core/urlUtils.js";import"../../../core/unitUtils.js";import"../../../geometry/support/spatialReferenceUtils.js";import"../../../layers/graphics/featureConversionUtils.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../geometry/Multipoint.js";import"../../../geometry/Point.js";import"../../../geometry/Polygon.js";import"../../../geometry/Polyline.js";import"../../../geometry/support/normalizeUtils.js";import"../../../core/pbf.js";import"../../../rest/support/FeatureSet.js";import n from"../../../rest/support/Query.js";import"../../../kernel.js";import"../../../rest/query/support/AttachmentInfo.js";import"../../../rest/support/AttachmentQuery.js";import"../../../geometry.js";import a from"../../../rest/support/RelationshipQuery.js";import"../../../rest/support/TopFeaturesQuery.js";import l from"../../../rest/support/StatisticDefinition.js";import{isRelatedField as u}from"./featureUtils.js";const p="esri.widgets.Feature.support.relatedFeatureUtils",c=r.getLogger(p),f=new Map;function d(e){if(!u(e))return null;const[t,r]=e.split("/").slice(1);return{layerId:t,fieldName:r}}function m(e,t){if(!t.relationships)return null;let r=null;const{relationships:s}=t;return s.some((t=>t.id===parseInt(e,10)&&(r=t,!0))),r}function y({originRelationship:e,relationships:t,layerId:r}){let s;return t&&t.some((t=>(`${t.relatedTableId}`===r&&t.id===e.id&&(s=t),!!s))),s}function j(e,t){const r=t.toLowerCase();for(const s in e)if(s.toLowerCase()===r)return e[s];return null}function h(e,t){const r=m(e,t);if(!r)return;return{url:`${t.url}/${r.relatedTableId}`,sourceSpatialReference:t.spatialReference,relation:r,relatedFields:[],outStatistics:[]}}function F(e,t){if(!t)return;if(!e)return;const{features:r,statsFeatures:s}=e,o=r&&r.value;t.relatedFeatures=o?o.features:[];const i=s&&s.value;t.relatedStatsFeatures=i?i.features:[]}function g(e,t,r,s){const o=new a;return o.outFields=["*"],o.relationshipId="number"==typeof t.id?t.id:parseInt(t.id,10),o.objectIds=[e.attributes[r.objectIdField]],r.queryRelatedFeatures(o,s)}function I(e,t,r){let s=0;const o=[];for(;s<t.length;)o.push(`${e} IN (${t.slice(s,r+s)})`),s+=r;return o.join(" OR ")}async function S(e,t,r,a){const l=r.layerId.toString(),{layerInfo:u,relation:p,relatedFields:c,outStatistics:f,url:d,sourceSpatialReference:m}=t,h=y({originRelationship:p,relationships:u.relationships,layerId:l});if(h.relationshipTableId&&h.keyFieldInRelationshipTable){const t=(await g(e,h,r,a))[e.attributes[r.objectIdField]];if(!t)return null;const o=t.features.map((e=>e.attributes[u.objectIdField]));if(f?.length>0&&u.supportsStatistics){const e=new n;e.where=I(u.objectIdField,o,1e3),e.outFields=c,e.outStatistics=f,e.sourceSpatialReference=m;const r={features:Promise.resolve(t),statsFeatures:i(d,e)};return s(r)}}const F=h?.keyField;if(F){const r=o(U(u.fields,F)),l=j(e.attributes,p.keyField),c=r?`${F}=${l}`:`${F}='${l}'`,f=i(d,new n({where:c,outFields:t.relatedFields,sourceSpatialReference:m}),a),y=t.outStatistics&&t.outStatistics.length>0&&u.supportsStatistics?i(d,new n({where:c,outFields:t.relatedFields,outStatistics:t.outStatistics,sourceSpatialReference:m}),a):null,h={features:f};return y&&(h.statsFeatures=y),s(h)}return null}function w(t,r){return e(t,{query:{f:"json"},signal:r&&r.signal})}function b({relatedInfos:e,layer:r},o){const i={};return e.forEach(((e,s)=>{const{relation:n}=e;if(!n){const e=new t("relation-required","A relation is required on a layer to retrieve related records.");throw c.error(e),e}const{relatedTableId:a}=n;if("number"!=typeof a){const e=new t("A related table ID is required on a layer to retrieve related records.");throw c.error(e),e}const l=`${r.url}/${a}`,u=f.get(l),p=u||w(l,o);u||f.set(l,p),i[s]=p})),s(i)}function R({graphic:e,relatedInfos:t,layer:r},o){const i={};return t.forEach(((t,s)=>{t.layerInfo&&(i[s]=S(e,t,r,o))})),s(i)}function $({relatedInfo:e,fieldName:t,fieldInfo:r}){if(e.relatedFields.push(t),r.statisticType){const s=new l({statisticType:r.statisticType,onStatisticField:t,outStatisticFieldName:t});e.outStatistics.push(s)}}function U(e,t){if(null!=e){t=t.toLowerCase();for(const r of e)if(r&&r.name.toLowerCase()===t)return r}return null}export{h as createRelatedInfo,y as getDestinationRelation,d as getRelatedFieldInfo,b as queryLayerInfos,R as queryRelatedFeatures,F as setRelatedFeatures,$ as updateRelatedInfo};
