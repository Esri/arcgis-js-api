/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.23/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/Logger","../../../core/promiseUtils","../../../layers/FeatureLayer","./featureUtils"],(function(e,r,t,a,n,i,s){"use strict";const o=["$datastore","$map","$layer","$aggregatedfeatures"],c="esri.widgets.Feature.support.arcadeFeatureUtils",l=a.getLogger(c);function p(e){return"string"==typeof e?s.applyTextFormattingHTML(s.htmlEntities(e)):Array.isArray(e)?u(e):"esri.arcade.Dictionary"===(null==e?void 0:e.declaredClass)?y(e):e}function u(e){return`<ul class="esri-widget__list">${e.map((e=>`<li>${"string"==typeof e?s.applyTextFormattingHTML(s.htmlEntities(e)):e}</li>`)).join("")}</ul>`}function y(e){return`<table class="esri-widget__table">${e.keys().map((r=>{const t=e.field(r);return`<tr><th>${r}</th><td>${"string"==typeof t?s.applyTextFormattingHTML(s.htmlEntities(t)):t}</td></tr>`})).join("")}</table>`}function f({aggregatedFeatures:e,arcadeUtils:r,featureSetVars:t,context:a,viewInfo:n,map:s,graphic:o,interceptor:c}){t.forEach((t=>{const l=t.toLowerCase(),p={map:s,spatialReference:n.sr,interceptor:c};if("$map"===l&&(a.vars[l]=r.convertMapToFeatureSetCollection(p)),"$layer"===l&&(a.vars[l]=r.convertFeatureLayerToFeatureSet({layer:o.sourceLayer,spatialReference:n.sr,interceptor:c})),"$datastore"===l&&(a.vars[l]=r.convertServiceUrlToWorkspace({url:o.sourceLayer.url,spatialReference:n.sr,interceptor:c})),"$aggregatedfeatures"===l){const t=o.layer,{fields:s,objectIdField:p,geometryType:u,spatialReference:y,displayField:f}=t,d=new i({fields:s,objectIdField:p,geometryType:u,spatialReference:y,displayField:f,..."feature"===t.type?{templates:t.templates,typeIdField:t.typeIdField,types:t.types}:null,source:e});a.vars[l]=r.convertFeatureLayerToFeatureSet({layer:d,spatialReference:n.sr,interceptor:c})}}))}function d(){return new Promise(((r,t)=>e(["../../../support/arcadeUtils"],r,t)))}function g(e){return h.apply(this,arguments)}function h(){return(h=t._asyncToGenerator((function*({graphic:e,view:r}){const{isAggregate:t,layer:a}=e;if(!t||!a||"2d"!==(null==r?void 0:r.type))return[];const n=yield r.whenLayerView(a);if(!n.createQuery||!n.queryFeatures)return[];const i=n.createQuery();i.aggregateIds=[e.getObjectId()];const{features:s}=yield n.queryFeatures(i);return s}))).apply(this,arguments)}function m(e){return F.apply(this,arguments)}function F(){return(F=t._asyncToGenerator((function*({expressionInfo:e,arcadeUtils:r,interceptor:t,spatialReference:a,map:i,graphic:s,view:c}){if(!e||!e.expression)return null;const p=r.createSyntaxTree(e.expression),u=o.filter((e=>r.hasVariable(p,e))),[y]=yield n.all([g({graphic:s,view:c}),r.loadScriptDependencies(p,!0,u)]),d=r.getViewInfo({spatialReference:a}),h=r.createExecContext(s,d);h.interceptor=t,h.useAsync=!0,f({aggregatedFeatures:y,arcadeUtils:r,featureSetVars:u,context:h,viewInfo:d,map:i,graphic:s,interceptor:t});const m=r.createFunction(p,h);return r.executeAsyncFunction(m,h).catch((r=>l.error("arcade-execution-error",{error:r,graphic:s,expressionInfo:e})))}))).apply(this,arguments)}function v(e){return x.apply(this,arguments)}function x(){return(x=t._asyncToGenerator((function*({expressionInfos:e,spatialReference:r,graphic:t,interceptor:a,map:i,view:s}){if(!e||!e.length)return{};const o=yield d(),c={};for(const n of e)c[`expression/${n.name}`]=m({expressionInfo:n,arcadeUtils:o,interceptor:a,spatialReference:r,map:i,graphic:t,view:s});const l=yield n.eachAlways(c),u={};for(const n in l)u[n]=p(l[n].value);return u}))).apply(this,arguments)}r.createCompiledExpression=m,r.createCompiledExpressions=v,r.loadArcadeUtils=d,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
