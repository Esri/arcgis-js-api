/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/Logger","../../../core/promiseUtils","../../../layers/FeatureLayer","./featureUtils"],(function(e,r,t,a,n,i,s){"use strict";const o=["$datastore","$map","$layer","$aggregatedfeatures"],c="esri.widgets.Feature.support.arcadeFeatureUtils",l=a.getLogger(c);function p(e){return"string"==typeof e?s.applyTextFormattingHTML(s.htmlEntities(e)):Array.isArray(e)?u(e):"esri.arcade.Dictionary"===e?.declaredClass?y(e):e}function u(e){return`<ul class="esri-widget__list">${e.map((e=>`<li>${"string"==typeof e?s.applyTextFormattingHTML(s.htmlEntities(e)):e}</li>`)).join("")}</ul>`}function y(e){return`<table class="esri-widget__table">${e.keys().map((r=>{const t=e.field(r);return`<tr><th>${r}</th><td>${"string"==typeof t?s.applyTextFormattingHTML(s.htmlEntities(t)):t}</td></tr>`})).join("")}</table>`}function f({aggregatedFeatures:e,arcadeUtils:r,featureSetVars:t,context:a,viewInfo:n,map:s,graphic:o,interceptor:c}){t.forEach((t=>{const l=t.toLowerCase(),p=n.sr,u={map:s,spatialReference:p,interceptor:c};if("$map"===l&&(a.vars[l]=r.convertMapToFeatureSetCollection(u)),"$layer"===l&&(a.vars[l]=r.convertFeatureLayerToFeatureSet({layer:o.sourceLayer,spatialReference:p,interceptor:c})),"$datastore"===l&&(a.vars[l]=r.convertServiceUrlToWorkspace({url:o.sourceLayer.url,spatialReference:p,interceptor:c})),"$aggregatedfeatures"===l){const t=o.layer,{fields:n,objectIdField:s,geometryType:p,spatialReference:u,displayField:y}=t,f=new i({fields:n,objectIdField:s,geometryType:p,spatialReference:u,displayField:y,..."feature"===t.type?{templates:t.templates,typeIdField:t.typeIdField,types:t.types}:null,source:e});a.vars[l]=r.convertFeatureLayerToFeatureSet({layer:f,spatialReference:u,interceptor:c})}}))}function d(){return new Promise(((r,t)=>e(["../../../support/arcadeUtils"],r,t)))}function g(e){return"createQuery"in e&&"queryFeatures"in e}function m(e){return h.apply(this,arguments)}function h(){return(h=t._asyncToGenerator((function*({graphic:e,view:r}){const{isAggregate:t,layer:a}=e;if(!t||!a||"2d"!==r?.type)return[];const n=yield r.whenLayerView(a);if(!g(n))return[];const i=n.createQuery(),s=e.getObjectId();i.aggregateIds=null!=s?[s]:[];const{features:o}=yield n.queryFeatures(i);return o}))).apply(this,arguments)}function F(e){return x.apply(this,arguments)}function x(){return(x=t._asyncToGenerator((function*({expressionInfo:e,arcadeUtils:r,interceptor:t,spatialReference:a,map:n,graphic:i,view:s}){if(!e||!e.expression)return null;const c=r.createSyntaxTree(e.expression),p=o.filter((e=>r.hasVariable(c,e))),[u]=yield Promise.all([m({graphic:i,view:s}),r.loadScriptDependencies(c,!0,p)]),y=r.getViewInfo({spatialReference:a}),d=r.createExecContext(i,y);d.interceptor=t,d.useAsync=!0,f({aggregatedFeatures:u,arcadeUtils:r,featureSetVars:p,context:d,viewInfo:y,map:n,graphic:i,interceptor:t});const g=r.createFunction(c,d);return r.executeAsyncFunction(g,d).catch((r=>l.error("arcade-execution-error",{error:r,graphic:i,expressionInfo:e})))}))).apply(this,arguments)}function v(e){return w.apply(this,arguments)}function w(){return(w=t._asyncToGenerator((function*({expressionInfos:e,spatialReference:r,graphic:t,interceptor:a,map:i,view:s}){if(!e||!e.length)return{};const o=yield d(),c={};for(const n of e)c[`expression/${n.name}`]=F({expressionInfo:n,arcadeUtils:o,interceptor:a,spatialReference:r,map:i,graphic:t,view:s});const l=yield n.eachAlways(c),u={};for(const n in l)u[n]=p(l[n].value);return u}))).apply(this,arguments)}r.createCompiledExpression=F,r.createCompiledExpressions=v,r.loadArcadeUtils=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
